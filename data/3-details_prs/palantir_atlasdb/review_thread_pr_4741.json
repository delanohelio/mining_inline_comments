{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwMzAzNzUx", "number": 4741, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0MDoyNlrOD3obQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0MDoyNlrOD3obQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjYwNjEwOnYy", "diffSide": "RIGHT", "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0MDoyNlrOGN_VQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzo0NDoxMlrOGN_gXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMjMwNg==", "bodyText": "Flag that for internal ski product, this will basically report weird metrics? We start many TransactionManagers, so if you hoped this would give you a total count and whatnot, don't think this will work.", "url": "https://github.com/palantir/atlasdb/pull/4741#discussion_r417322306", "createdAt": "2020-04-29T13:40:26Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -61,11 +61,7 @@ private static ThreadFactory threadFactory(String safeLoggablePurpose) {\n     }\n \n     private static ThreadFactory createThreadFactory(String safeLoggablePurpose) {\n-        String namePrefix = String.format(\"autobatcher.%s-\", safeLoggablePurpose);\n-        return new ThreadFactoryBuilder()\n-                .setDaemon(true)\n-                .setNameFormat(namePrefix + \"%d\")\n-                .build();\n+        return new NamedThreadFactory(\"autobatcher.\" + safeLoggablePurpose, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMzE4NA==", "bodyText": "That said I don't think it's necessarily worse than no-instrumentation, just don't know if this will get us what we want. Also, this will be a few extra time series.", "url": "https://github.com/palantir/atlasdb/pull/4741#discussion_r417323184", "createdAt": "2020-04-29T13:41:35Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -61,11 +61,7 @@ private static ThreadFactory threadFactory(String safeLoggablePurpose) {\n     }\n \n     private static ThreadFactory createThreadFactory(String safeLoggablePurpose) {\n-        String namePrefix = String.format(\"autobatcher.%s-\", safeLoggablePurpose);\n-        return new ThreadFactoryBuilder()\n-                .setDaemon(true)\n-                .setNameFormat(namePrefix + \"%d\")\n-                .build();\n+        return new NamedThreadFactory(\"autobatcher.\" + safeLoggablePurpose, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMjMwNg=="}, "originalCommit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMzkyMg==", "bodyText": "Actually, had a look at the metrics, and looks like this will be cumulative, so all good.", "url": "https://github.com/palantir/atlasdb/pull/4741#discussion_r417323922", "createdAt": "2020-04-29T13:42:41Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -61,11 +61,7 @@ private static ThreadFactory threadFactory(String safeLoggablePurpose) {\n     }\n \n     private static ThreadFactory createThreadFactory(String safeLoggablePurpose) {\n-        String namePrefix = String.format(\"autobatcher.%s-\", safeLoggablePurpose);\n-        return new ThreadFactoryBuilder()\n-                .setDaemon(true)\n-                .setNameFormat(namePrefix + \"%d\")\n-                .build();\n+        return new NamedThreadFactory(\"autobatcher.\" + safeLoggablePurpose, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMjMwNg=="}, "originalCommit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyNTE0OA==", "bodyText": "The underlying metric objects are shared so duplicate names are okay, if the safeLoggablePurpose differs that gives me even more specificity. Either way it solves my problem :-)", "url": "https://github.com/palantir/atlasdb/pull/4741#discussion_r417325148", "createdAt": "2020-04-29T13:44:12Z", "author": {"login": "carterkozak"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -61,11 +61,7 @@ private static ThreadFactory threadFactory(String safeLoggablePurpose) {\n     }\n \n     private static ThreadFactory createThreadFactory(String safeLoggablePurpose) {\n-        String namePrefix = String.format(\"autobatcher.%s-\", safeLoggablePurpose);\n-        return new ThreadFactoryBuilder()\n-                .setDaemon(true)\n-                .setNameFormat(namePrefix + \"%d\")\n-                .build();\n+        return new NamedThreadFactory(\"autobatcher.\" + safeLoggablePurpose, true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMyMjMwNg=="}, "originalCommit": {"oid": "8d456c67848cbebbfc48688c829d48a456017ef1"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3098, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}