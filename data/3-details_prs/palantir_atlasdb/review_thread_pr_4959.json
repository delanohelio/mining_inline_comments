{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxNzY5MjQ5", "number": 4959, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDo0MDo0NlrOEbgsVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTowNToxN1rOEb-fYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjgyNjQ3OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDo0MDo0NlrOHFe5Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0MjoyNVrOHGN1ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMTEwNg==", "bodyText": "Unsafe arg for the events.", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r475511106", "createdAt": "2020-08-24T10:40:46Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -152,7 +153,9 @@ private void assertEventsAreContiguousAndNoEventsMissing(List<LockWatchEvent> ev\n             Preconditions.checkNotNull(firstEvent, \"First element not preset in list of events\");\n             Preconditions.checkArgument(firstEvent.sequence() < latestVersion.get().version()\n                             || latestVersion.get().version() + 1 == firstEvent.sequence(),\n-                    \"Events missing between last snapshot and this batch of events\");\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstEvent.sequence()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7bb1870fed568e860f8f124a72f3c363872b7e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MDIyNw==", "bodyText": "Actually, scrap that, dunno if we want actual data lying around in the logs.", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476280227", "createdAt": "2020-08-25T08:42:25Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -152,7 +153,9 @@ private void assertEventsAreContiguousAndNoEventsMissing(List<LockWatchEvent> ev\n             Preconditions.checkNotNull(firstEvent, \"First element not preset in list of events\");\n             Preconditions.checkArgument(firstEvent.sequence() < latestVersion.get().version()\n                             || latestVersion.get().version() + 1 == firstEvent.sequence(),\n-                    \"Events missing between last snapshot and this batch of events\");\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstEvent.sequence()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUxMTEwNg=="}, "originalCommit": {"oid": "0e7bb1870fed568e860f8f124a72f3c363872b7e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzU4MTMzOnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODozNzoyOVrOHGNo-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0MDo0NFrOHGNxbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3Njk4NA==", "bodyText": "I think you need the same change in CommitTimestampGetter?", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476276984", "createdAt": "2020-08-25T08:37:29Z", "author": {"login": "jkozlowski"}, "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3OTE1MQ==", "bodyText": "And probs extract a small method?", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476279151", "createdAt": "2020-08-25T08:40:44Z", "author": {"login": "jkozlowski"}, "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3Njk4NA=="}, "originalCommit": {"oid": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzU4OTg2OnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODozOTo0MFrOHGNuVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwODo0MjozN1rOHGN2IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3ODM1Ng==", "bodyText": "Same here, I think you want unsafe arg for the events?", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476278356", "createdAt": "2020-08-25T08:39:40Z", "author": {"login": "jkozlowski"}, "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {\n+                    Optional<LockWatchStateUpdate.Success> successfulUpdate = response.getLockWatchUpdate()\n+                            .accept(new LockWatchStateUpdate.Visitor<Optional<LockWatchStateUpdate.Success>>() {\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Success success) {\n+                                    return Optional.of(success);\n+                                }\n+\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Snapshot snapshot) {\n+                                    return Optional.empty();\n+                                }\n+                            });\n+\n+                    successfulUpdate.ifPresent(success ->\n+                            log.debug(\"Start transaction batch request and response\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI4MDM1Mg==", "bodyText": "Same as above.", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476280352", "createdAt": "2020-08-25T08:42:37Z", "author": {"login": "jkozlowski"}, "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -163,12 +172,36 @@ public void close() {\n         List<StartIdentifiedAtlasDbTransactionResponse> result = new ArrayList<>();\n         while (result.size() < numberOfTransactions) {\n             try {\n+                Optional<IdentifiedVersion> requestedVersion = lockWatchEventCache.lastKnownVersion();\n                 ConjureStartTransactionsResponse response = lockLeaseService.startTransactionsWithWatches(\n-                        lockWatchEventCache.lastKnownVersion(), numberOfTransactions - result.size());\n+                        requestedVersion, numberOfTransactions - result.size());\n                 lockWatchEventCache.processStartTransactionsUpdate(\n                         response.getTimestamps().stream().boxed().collect(Collectors.toSet()),\n                         response.getLockWatchUpdate());\n                 result.addAll(split(response));\n+\n+                if (log.isDebugEnabled()) {\n+                    Optional<LockWatchStateUpdate.Success> successfulUpdate = response.getLockWatchUpdate()\n+                            .accept(new LockWatchStateUpdate.Visitor<Optional<LockWatchStateUpdate.Success>>() {\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Success success) {\n+                                    return Optional.of(success);\n+                                }\n+\n+                                @Override\n+                                public Optional<LockWatchStateUpdate.Success> visit(\n+                                        LockWatchStateUpdate.Snapshot snapshot) {\n+                                    return Optional.empty();\n+                                }\n+                            });\n+\n+                    successfulUpdate.ifPresent(success ->\n+                            log.debug(\"Start transaction batch request and response\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI3ODM1Ng=="}, "originalCommit": {"oid": "4e9eb68954a7e42e9adaf30248e2ae67ad64cd82"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NzcwODUwOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTowNToxN1rOHGO2MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwOTowNToxN1rOHGO2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjI5Njc1Mg==", "bodyText": "This should be:\nassertThatLoggableExceptionThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,\n                LockWatchStateUpdate.success(LEADER, 5L, ImmutableList.of(UNLOCK_EVENT))))\n                .isExactlyInstanceOf(SafeIllegalArgumentException.class)\n                .hasLogMessage(\"Events missing between last snapshot and this batch of events\");", "url": "https://github.com/palantir/atlasdb/pull/4959#discussion_r476296752", "createdAt": "2020-08-25T09:05:17Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -298,7 +298,7 @@ public void missedEventThrows() {\n         assertThatThrownBy(() -> eventCache.processStartTransactionsUpdate(TIMESTAMPS_2,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ebc33fd62e76d46cd00e977420770a6afe3c9c7"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2811, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}