{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjE3MzEy", "number": 4515, "title": "[Timelock Partitioning] Part 50: Wire up multi leader paxos", "bodyText": "Goals (and why):\nBig step! This grants capability to run multi leader paxos. We run subset of tests (things that test leadership and change of leadership heavily) under this configuration to see whether we're still behaving to our spec.\nWhat's next: Have some tailored tests that basically force certain nodes to be leaders for certain namespaces. This should be the test or not we're actually having separate leaders simultaneously.\nImplementation Description (bullets):\n\nWire up in a similar manner inside PaxosResourcesFactory.\na few fixes found when integration testing\ntest infrastructure evolution to support the new leader-mode\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nHave a new configuration that uses multi leader mode and runs a subset of existing tests with it.\n\nConcerns (what feedback would you like?):\nNone, it's disabled right now. We still can't rolling bounce to this, but that's okay.\nWhere should we start reviewing?:\n\nPaxosResourcesFactory\nPaxosResources\nPaxosInstallConfiguration\nMultiLeaderPaxosSuite\nSingleLeaderPaxosSuite\n\nPriority (whenever / two weeks / yesterday):\nASAP, need to get on to other work.", "createdAt": "2020-01-16T12:21:29Z", "url": "https://github.com/palantir/atlasdb/pull/4515", "merged": true, "mergeCommit": {"oid": "af3c91ca2a58869431643eb1ea115f4eabd42c08"}, "closed": true, "closedAt": "2020-02-04T15:32:52Z", "author": {"login": "felixdesouza"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb650KXAH2gAyMzYzNjE3MzEyOjk5YjJmZDA2ZThiMmU3MDRjODRhZmJjMzY1MDE5YmI1ZTBkZmJhZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBCzi1gFqTM1MzAzOTU0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "99b2fd06e8b2e704c84afbc365019bb5e0dfbae4", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/99b2fd06e8b2e704c84afbc365019bb5e0dfbae4", "committedDate": "2020-01-16T13:04:06Z", "message": "Necessary changes to support multi leader pingers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a07eb57ddf0eb083768576ab97778de472daf006", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/a07eb57ddf0eb083768576ab97778de472daf006", "committedDate": "2020-01-16T13:04:06Z", "message": "Add config option for the paxos leader mode."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1647fbf8c3e0b75afc70108599c21211204acad1", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/1647fbf8c3e0b75afc70108599c21211204acad1", "committedDate": "2020-01-16T13:04:06Z", "message": "Wire the new stuff in."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc803dbf10b44b679c083c3e36594fc12f6046c5", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/dc803dbf10b44b679c083c3e36594fc12f6046c5", "committedDate": "2020-01-16T13:04:06Z", "message": "Log paxos configuration when the test timelock server starts up."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce3255139c3009477cc16e634ac8fb4607a4d77b", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/ce3255139c3009477cc16e634ac8fb4607a4d77b", "committedDate": "2020-01-16T13:04:06Z", "message": "Wire existing tests for multi leader."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38", "committedDate": "2020-01-16T12:10:10Z", "message": "Wire existing tests for multi leader."}, "afterCommit": {"oid": "ce3255139c3009477cc16e634ac8fb4607a4d77b", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/ce3255139c3009477cc16e634ac8fb4607a4d77b", "committedDate": "2020-01-16T13:04:06Z", "message": "Wire existing tests for multi leader."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1a524f28e2154def31960992f3c4fa62b706799", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/f1a524f28e2154def31960992f3c4fa62b706799", "committedDate": "2020-01-16T13:11:16Z", "message": "Checkstyle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97b82ac991435ce0a4aac1a4599b5eccfb0e7dd5", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/97b82ac991435ce0a4aac1a4599b5eccfb0e7dd5", "committedDate": "2020-01-16T13:13:28Z", "message": "Propagate leader mode everywhere."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MDg5MDE1", "url": "https://github.com/palantir/atlasdb/pull/4515#pullrequestreview-344089015", "createdAt": "2020-01-16T17:29:13Z", "commit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNzoyOToxM1rOFehpIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNzo1NzozNlrOFeibzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MjgwMg==", "bodyText": "nit: renaming can reduce the diff", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367552802", "createdAt": "2020-01-16T17:29:13Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/LeadershipContextFactory.java", "diffHunk": "@@ -68,13 +68,13 @@ public NetworkClientFactories networkClientFactories() {\n     }\n \n     @Value.Derived\n-    public Duration leaderPingResponseWait() {\n-        return runtime().get().leaderPingResponseWait();\n+    public Factories.LeaderPingerFactory leaderPingerFactory() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1NzA3NA==", "bodyText": "nit: Is there a specific reason why this and MultiLeaderPaxosSuite are not final?", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367557074", "createdAt": "2020-01-16T17:38:45Z", "author": {"login": "OStevan"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/SingleLeaderPaxosSuite.java", "diffHunk": "@@ -29,28 +27,32 @@\n \n import com.github.peterwippermann.junit4.parameterizedsuite.ParameterizedSuite;\n import com.google.common.collect.ImmutableSet;\n-import com.palantir.atlasdb.timelock.ImmutableTemplateVariables;\n import com.palantir.atlasdb.timelock.MultiNodePaxosTimeLockServerIntegrationTest;\n-import com.palantir.atlasdb.timelock.TemplateVariables;\n+import com.palantir.atlasdb.timelock.SingleLeaderMultiNodePaxosTimeLockIntegrationTest;\n import com.palantir.atlasdb.timelock.TestableTimelockCluster;\n+import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n \n @RunWith(ParameterizedSuite.class)\n-@Suite.SuiteClasses(MultiNodePaxosTimeLockServerIntegrationTest.class)\n-public class PaxosSuite {\n+@Suite.SuiteClasses({\n+        MultiNodePaxosTimeLockServerIntegrationTest.class,\n+        SingleLeaderMultiNodePaxosTimeLockIntegrationTest.class\n+})\n+public class SingleLeaderPaxosSuite {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODExOA==", "bodyText": "nit: spacing", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367558118", "createdAt": "2020-01-16T17:41:05Z", "author": {"login": "OStevan"}, "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/TimeLockServerHolder.java", "diffHunk": "@@ -108,7 +110,15 @@ private int readTimelockPort() throws IOException {\n                 .intValue();\n     }\n \n-    public int getAdminPort() {\n-        return timelockServer.getAdminPort();\n+    TimeLockInstallConfiguration installConfig() {\n+        checkTimelockPortInitialised();\n+        ObjectMapper mapper = Jackson.newObjectMapper(new YAMLFactory());\n+        try {\n+            return mapper.readValue(new File(configFilePathSupplier.get()), CombinedTimeLockServerConfiguration.class)\n+                    .install();\n+        } catch (IOException e) {\n+            throw new RuntimeException(e);\n+        }\n     }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1ODgxMg==", "bodyText": "nit: new line", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367558812", "createdAt": "2020-01-16T17:42:41Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.paxos;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import com.google.common.collect.Maps;\n+import com.palantir.timelock.paxos.HealthCheckPinger;\n+import com.palantir.timelock.paxos.HealthCheckResponse;\n+\n+public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {\n+\n+    private final BatchPingableLeader batchPingableLeader;\n+\n+    public MultiLeaderHealthCheckPinger(BatchPingableLeader batchPingableLeader) {\n+        this.batchPingableLeader = batchPingableLeader;\n+    }\n+\n+    @Override\n+    public Map<Client, HealthCheckResponse> apply(Set<Client> request) {\n+        Set<Client> results = batchPingableLeader.ping(request);\n+        return Maps.toMap(request, client -> new HealthCheckResponse(results.contains(client)));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1OTcxNA==", "bodyText": "nit: final?", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367559714", "createdAt": "2020-01-16T17:44:38Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/MultiLeaderHealthCheckPinger.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.paxos;\n+\n+import java.util.Map;\n+import java.util.Set;\n+\n+import com.google.common.collect.Maps;\n+import com.palantir.timelock.paxos.HealthCheckPinger;\n+import com.palantir.timelock.paxos.HealthCheckResponse;\n+\n+public class MultiLeaderHealthCheckPinger implements HealthCheckPinger {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MTEzOA==", "bodyText": "nit: Maybe extracting the lambda body to a function could be useful.", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367561138", "createdAt": "2020-01-16T17:47:49Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -65,21 +64,62 @@ public static PaxosResources create(\n                 .addAdhocResources(new TimestampPaxosResource(timestampContext.components()));\n \n         if (install.useLeaderForEachClient()) {\n-            throw new UnsupportedOperationException(\"not implemented yet\");\n+            return configureLeaderForEachClient(\n+                    resourcesBuilder,\n+                    install,\n+                    metrics,\n+                    paxosRuntime,\n+                    sharedExecutor,\n+                    remoteClients);\n         } else {\n-            configureLeaderForAllClients(\n+            return configureLeaderForAllClients(\n                     resourcesBuilder,\n                     install,\n                     metrics,\n                     paxosRuntime,\n                     sharedExecutor,\n                     remoteClients);\n         }\n+    }\n+\n+    private static PaxosResources configureLeaderForEachClient(\n+            ImmutablePaxosResources.Builder resourcesBuilder,\n+            TimelockPaxosInstallationContext install,\n+            MetricsManager metrics,\n+            Supplier<PaxosRuntimeConfiguration> paxosRuntime,\n+            ExecutorService sharedExecutor,\n+            PaxosRemoteClients remoteClients) {\n+        TimelockPaxosMetrics timelockMetrics =\n+                TimelockPaxosMetrics.of(PaxosUseCase.LEADER_FOR_EACH_CLIENT, metrics.getTaggedRegistry());\n+\n+        Factories.LeaderPingHealthCheckFactory healthCheckPingersFactory = dependencies -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MjMzOA==", "bodyText": "nit: extract factory.components() to a local variable since its used multiple times?", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367562338", "createdAt": "2020-01-16T17:50:23Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -112,16 +145,18 @@ private static void configureLeaderForAllClients(\n                 .useCase(PaxosUseCase.LEADER_FOR_ALL_CLIENTS)\n                 .metrics(timelockMetrics)\n                 .networkClientFactoryBuilder(ImmutableSingleLeaderNetworkClientFactories.builder())\n-                .leaderPingerFactory(leaderPingerFactory)\n+                .leaderPingerFactoryBuilder(ImmutableSingleLeaderPingerFactory.builder())\n                 .healthCheckPingersFactory(healthCheckPingersFactory)\n                 .build();\n \n-        resourcesBuilder.leadershipContextFactory(factory);\n-        resourcesBuilder.addAdhocResources(\n-                new LeadershipResource(\n-                        factory.components().acceptor(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT),\n-                        factory.components().learner(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT)),\n-                factory.components().pingableLeader(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT));\n+        return resourcesBuilder\n+                .leadershipContextFactory(factory)\n+                .addAdhocResources(\n+                        new LeadershipResource(\n+                                factory.components().acceptor(PaxosUseCase.PSEUDO_LEADERSHIP_CLIENT),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2MjYwNw==", "bodyText": "nit: should this be on a new line?", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367562607", "createdAt": "2020-01-16T17:50:55Z", "author": {"login": "OStevan"}, "path": "timelock-agent/src/main/java/com/palantir/timelock/config/PaxosInstallConfiguration.java", "diffHunk": "@@ -44,6 +45,24 @@ default File dataDirectory() {\n     @JsonProperty(\"is-new-service\")\n     boolean isNewService();\n \n+    enum PaxosLeaderMode {\n+        SINGLE_LEADER,\n+        LEADER_PER_CLIENT,\n+        AUTO_MIGRATION_MODE\n+    }\n+\n+    @JsonProperty(\"leader-mode\")\n+    @Value.Default\n+    default PaxosLeaderMode leaderMode() {\n+        return PaxosLeaderMode.SINGLE_LEADER;\n+    }\n+\n+    @Value.Check\n+    default void checkLeaderModeIsNotInAutoMigrationMode() {\n+        Preconditions.checkState(leaderMode() != PaxosLeaderMode.AUTO_MIGRATION_MODE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU2NTc3Mg==", "bodyText": "nit: new line", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r367565772", "createdAt": "2020-01-16T17:57:36Z", "author": {"login": "OStevan"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/suite/MultiLeaderPaxosSuite.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.timelock.suite;\n+\n+import static com.palantir.atlasdb.timelock.TemplateVariables.generateThreeNodeTimelockCluster;\n+\n+import java.util.Collection;\n+\n+import org.junit.Rule;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Suite;\n+\n+import com.github.peterwippermann.junit4.parameterizedsuite.ParameterizedSuite;\n+import com.google.common.collect.ImmutableSet;\n+import com.palantir.atlasdb.timelock.MultiNodePaxosTimeLockServerIntegrationTest;\n+import com.palantir.atlasdb.timelock.TestableTimelockCluster;\n+import com.palantir.timelock.config.PaxosInstallConfiguration.PaxosLeaderMode;\n+\n+@RunWith(ParameterizedSuite.class)\n+@Suite.SuiteClasses(MultiNodePaxosTimeLockServerIntegrationTest.class)\n+public class MultiLeaderPaxosSuite {\n+\n+    public static final TestableTimelockCluster MULTI_LEADER_PAXOS = new TestableTimelockCluster(\n+            \"batched paxos multi leader\",\n+            \"paxosMultiServer.ftl\",\n+            generateThreeNodeTimelockCluster(9086, builder ->\n+                    builder.clientPaxosBuilder(builder.clientPaxosBuilder().isUseBatchPaxos(true))\n+                            .leaderMode(PaxosLeaderMode.LEADER_PER_CLIENT)));\n+\n+    @Parameterized.Parameters(name = \"{0}\")\n+    public static Collection<TestableTimelockCluster> params() {\n+        return ImmutableSet.of(MULTI_LEADER_PAXOS);\n+    }\n+\n+    @Rule\n+    @Parameterized.Parameter\n+    public TestableTimelockCluster cluster;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa10e9ba3a893ad17ba8f7c150dd70e58e9a3c38"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ffbad00cf6e825840f5ae5a932a8934a48033b", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/90ffbad00cf6e825840f5ae5a932a8934a48033b", "committedDate": "2020-01-16T18:27:43Z", "message": "Nits."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/4d6f7ff9ce16f7d57b9415857b4fe123a966f986", "committedDate": "2020-01-17T12:40:03Z", "message": "Rebalancing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1ODU4MDM0", "url": "https://github.com/palantir/atlasdb/pull/4515#pullrequestreview-345858034", "createdAt": "2020-01-21T13:01:32Z", "commit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMzowMTozM1rOFf5Idw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxOTowMDoxOFrOFgFQEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk4NjIzMQ==", "bodyText": "sanity check: This is safe, because this endpoint is currently unused right?", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368986231", "createdAt": "2020-01-21T13:01:33Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/BatchPingableLeader.java", "diffHunk": "@@ -42,7 +43,7 @@\n      * @param clients set of clients to check remote servers leadership on\n      * @return clients for which the remote server believes that it is the leader for\n      */\n-    @GET\n+    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5MjYyNA==", "bodyText": "I guess this is fine as this is used only in testing, but is this intentional? Seems if we want to keep this ERROR is pretty harsh", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368992624", "createdAt": "2020-01-21T13:15:33Z", "author": {"login": "jeremyk-91"}, "path": "timelock-server/src/main/java/com/palantir/atlasdb/timelock/TimeLockServerLauncher.java", "diffHunk": "@@ -77,6 +84,10 @@ public void run(CombinedTimeLockServerConfiguration configuration, Environment e\n         MetricsManager metricsManager = MetricsManagers.of(environment.metrics(), taggedMetricRegistry);\n         Consumer<Object> registrar = component -> environment.jersey().register(component);\n \n+        log.error(\"Paxos configuration\\n{}\", environment.getObjectMapper()\n+                .writerWithDefaultPrettyPrinter()\n+                .writeValueAsString(configuration.install().paxos()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk5ODIxOQ==", "bodyText": "Feels a little hacky, but I guess this is from the previous tests.", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r368998219", "createdAt": "2020-01-21T13:27:10Z", "author": {"login": "jeremyk-91"}, "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/TemplateVariables.java", "diffHunk": "@@ -47,4 +53,18 @@ default TemplateVariables putLocalServerPortAmongstAllServerPorts() {\n     interface TimestampPaxos {\n         boolean isUseBatchPaxos();\n     }\n+\n+    static Iterable<TemplateVariables> generateThreeNodeTimelockCluster(\n+            int startingPort,\n+            UnaryOperator<ImmutableTemplateVariables.Builder> customizer) {\n+        List<Integer> allPorts = IntStream.range(startingPort, startingPort + 3).boxed().collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAwNzA0OA==", "bodyText": "fine for now, I imagine this will get a lot more complicated with the auto migration mode", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369007048", "createdAt": "2020-01-21T13:44:16Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosResourcesFactory.java", "diffHunk": "@@ -267,7 +302,7 @@ default Path dataDirectory() {\n \n         @Value.Derived\n         default boolean useLeaderForEachClient() {\n-            return false;\n+            return install().paxos().leaderMode() == PaxosLeaderMode.LEADER_PER_CLIENT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NDYxOQ==", "bodyText": "surely this class should be something like a LeaderPingerFactoryContainer? The name is a little tricky", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369184619", "createdAt": "2020-01-21T18:59:55Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java", "diffHunk": "@@ -16,17 +16,74 @@\n \n package com.palantir.atlasdb.timelock.paxos;\n \n+import java.io.Closeable;\n import java.util.List;\n \n+import org.immutables.value.Value;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Maps;\n+import com.palantir.atlasdb.timelock.paxos.NetworkClientFactories.Factory;\n import com.palantir.paxos.LeaderPinger;\n+import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n     interface LeaderPingerFactory {\n-        LeaderPinger create(Dependencies.LeaderPinger dependencies);\n+        Factory<LeaderPinger> get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTE4NDc4NA==", "bodyText": "and this guy is a LeaderPingerFactoryFactory \ud83d\ude09 (really, just stick with Builder)", "url": "https://github.com/palantir/atlasdb/pull/4515#discussion_r369184784", "createdAt": "2020-01-21T19:00:18Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/Factories.java", "diffHunk": "@@ -16,17 +16,74 @@\n \n package com.palantir.atlasdb.timelock.paxos;\n \n+import java.io.Closeable;\n import java.util.List;\n \n+import org.immutables.value.Value;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.Maps;\n+import com.palantir.atlasdb.timelock.paxos.NetworkClientFactories.Factory;\n import com.palantir.paxos.LeaderPinger;\n+import com.palantir.paxos.SingleLeaderPinger;\n import com.palantir.timelock.paxos.HealthCheckPinger;\n \n public interface Factories {\n     interface LeaderPingerFactory {\n-        LeaderPinger create(Dependencies.LeaderPinger dependencies);\n+        Factory<LeaderPinger> get();\n+        List<Closeable> closeables();\n+\n+        interface Builder {\n+            Builder from(Dependencies.LeaderPinger dependencies);\n+            LeaderPingerFactory build();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6f7ff9ce16f7d57b9415857b4fe123a966f986"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/3c317bc3c5e5fe74070abe941b4d3a3be67726a6", "committedDate": "2020-02-04T11:57:25Z", "message": "LeaderPingerFactoryContainer class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9711b38ca3e8a892750d6bdf067b73cd0279a311", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/9711b38ca3e8a892750d6bdf067b73cd0279a311", "committedDate": "2020-02-04T12:00:34Z", "message": "Change to info."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDA4MTYw", "url": "https://github.com/palantir/atlasdb/pull/4515#pullrequestreview-353008160", "createdAt": "2020-02-04T14:17:45Z", "commit": {"oid": "9711b38ca3e8a892750d6bdf067b73cd0279a311"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMDM5NTQ0", "url": "https://github.com/palantir/atlasdb/pull/4515#pullrequestreview-353039544", "createdAt": "2020-02-04T14:56:07Z", "commit": {"oid": "9711b38ca3e8a892750d6bdf067b73cd0279a311"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2383, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}