{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDAyODU2", "number": 5033, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowNjoxOVrOEtjrkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowNjoxOVrOEtjrkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MjA1OTcxOnYy", "diffSide": "RIGHT", "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/DbAtlasDbFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowNjoxOVrOHhafeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowNjoxOVrOHhafeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5OTA5OA==", "bodyText": "I think it might be better if this one returns an invalidator that will throw an exception if invoked? This should only really happen in a DB-TimeLock, and if something is calling invalidation there that is a bug.", "url": "https://github.com/palantir/atlasdb/pull/5033#discussion_r504799098", "createdAt": "2020-10-14T16:06:19Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-dbkvs/src/main/java/com/palantir/atlasdb/keyvalue/dbkvs/DbAtlasDbFactory.java", "diffHunk": "@@ -123,7 +125,39 @@ private static InDbTimestampBoundStore multiSeries(ConnectionManagerAwareDbKvs d\n     private static InDbTimestampBoundStore defaultTimestampBoundStore(ConnectionManagerAwareDbKvs dbkvs) {\n         return InDbTimestampBoundStore.create(\n                 dbkvs.getConnectionManager(),\n-                AtlasDbConstants.TIMESTAMP_TABLE,\n-                dbkvs.getTablePrefix());\n+                defaultTimestampTable(),\n+                defaultTablePrefix(dbkvs));\n+    }\n+\n+    @Override\n+    public TimestampStoreInvalidator createTimestampStoreInvalidator(KeyValueService rawKvs,\n+            Optional<DbTimestampCreationSetting> creationParameters) {\n+        ConnectionManagerAwareDbKvs dbkvs = (ConnectionManagerAwareDbKvs) rawKvs;\n+        return creationParameters.map(params -> DbTimestampCreationSettings.caseOf(params)\n+                // Do not create invalidator for multi series table\n+                .multipleSeries((table, series) -> defaultTimestampStoreInvalidator(dbkvs, creationParameters))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81b9fc86f1949608fc5af998278b3b5920e402b3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2636, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}