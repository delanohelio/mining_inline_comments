{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzAyNTk2", "number": 4672, "title": "[Timelock Partitioning/Perf] Reduce context switches", "bodyText": "Goals (and why):\nCurrently, as a request comes into timelock:\n\nit heads into the AwaitingLeadershipProxy (ALP)\nALP then checks whether or not it is the leader\nSince many requests will be coming in (under single leader) you run it through the CoalescingSupplier via CoalescingPaxosLatestRoundVerifier.\nThis then calls through to the PaxosAcceptorNetworkClient, when we're doing multi-leader, we're running through the AutobatchingPaxosAcceptorNetworkClient.\nThis is another batcher by the way of DisruptorAutobatcher.\nThen it makes its way to the actual BatchPaxosAcceptor.\n\nIt doesn't make sense to batch twice, and in any case we pay for it in context switches, which has been killing our server.response.p95 latency.\nThe first part (at least for multi-leader) stops us from going through the CoalescingPaxosLatestRoundVerifier and just straight to the batcher.\nInside AwaitingLeadershipProxy as part of a few async changes that occurred earlier, to check we were still the leader we now have an async retrier for when we get NO_QUORUM, however all attempts are immediately done on a separate executor than the calling thread. For the most part it will likely succeed on the first attempt, so we should at least try on the first attempt without switching.\nWe do as much work as we can on the direct executor and only farm it off when it's off the happy path and might take longer than usual etc.\nImplementation Description (bullets):\n\nSkip CoalescingPaxosLatestRoundVerifier if we're running with the multi-leader batching logic.\nAsyncRetrier only executes stuff on a separate thread on the second retry, transforms within the same logical request will happen in the same thread.\nALP tries to do as much work in the direct executor, and dispatches when we're no longer on the hot path.\n\nTesting (What was existing testing like?  What have you done to improve it?):\nRan the AwaitingLeadershipProxyBenchmarks, seemed to indicate an improvement, relative to their previous results.\nConcerns (what feedback would you like?):\nThe ALP change really shines when you have a proper async network client, as the call chain to get to that network client happens in a single thread wit hno switches\nWhere should we start reviewing?:\nCommit-by-commit\nPriority (whenever / two weeks / yesterday):\nWhenever", "createdAt": "2020-03-25T16:47:36Z", "url": "https://github.com/palantir/atlasdb/pull/4672", "merged": true, "mergeCommit": {"oid": "87e6d74270d1cf7d34e0859fb0ba8e6310e6ea7f"}, "closed": true, "closedAt": "2020-04-15T14:57:04Z", "author": {"login": "felixdesouza"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRKHPKgH2gAyMzkzNzAyNTk2OjEzZmI4OTE3OTBmMjc3MGQxNzVlMTcwNTMxOGJkY2E5NzlkZDEyOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX4jbJgFqTM5MzgwMTQyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "13fb891790f2770d175e1705318bdca979dd128a", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/13fb891790f2770d175e1705318bdca979dd128a", "committedDate": "2020-03-25T16:29:45Z", "message": "Refactor out latest round verifier so we can pass one in."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e3f0f97125db074675e1630f84d246f6c50fa5", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/33e3f0f97125db074675e1630f84d246f6c50fa5", "committedDate": "2020-03-25T16:29:45Z", "message": "Wire up different latestRoundVerifier based on mode."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4231b139756888c0934948816f3a32d1d44f916", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/e4231b139756888c0934948816f3a32d1d44f916", "committedDate": "2020-03-25T16:29:46Z", "message": "Async retrier uses direct executor for first attempt, and also for processing the result."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3e69be93c828a70614f6822e542c66f0d98bf88", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/b3e69be93c828a70614f6822e542c66f0d98bf88", "committedDate": "2020-03-25T16:30:45Z", "message": "Happy case on the hot path does not knowingly switch threads up until the network client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c80c2a1706daaac8566b65b50ab97dccbbd25c56", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/c80c2a1706daaac8566b65b50ab97dccbbd25c56", "committedDate": "2020-03-25T18:15:21Z", "message": "Silly bug."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDI3NDYz", "url": "https://github.com/palantir/atlasdb/pull/4672#pullrequestreview-381427463", "createdAt": "2020-03-25T18:31:26Z", "commit": {"oid": "c80c2a1706daaac8566b65b50ab97dccbbd25c56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxODozMToyNlrOF7o5iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxODozMToyNlrOF7o5iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA4MDM5NQ==", "bodyText": "nit: should we remove the inner transformAsync as it should be unnecessary if we're getting from the supplier on the current thread?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Futures.transformAsync(Futures.submitAsync(supplier::get, MoreExecutors.directExecutor()),\n          \n          \n            \n                    return Futures.transformAsync(supplier.get(),", "url": "https://github.com/palantir/atlasdb/pull/4672#discussion_r398080395", "createdAt": "2020-03-25T18:31:26Z", "author": {"login": "schlosna"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java", "diffHunk": "@@ -53,20 +54,33 @@\n         return execute(supplier, maxAttempts);\n     }\n \n+    /*\n+    Threading model: Given the context of this class, it is likely that the first request will pass. Since this occurs\n+    in the hot path, we should probably avoid putting it on another thread to do what would be light work as we will\n+    pay for that in context switches.\n+\n+    In a similar vein to reduce context switches, when the supplier::get call returns, the processing should be fairly\n+    lightweight, so we should be able to do it in whatever thread ran/took control of the original supplier::get call,\n+    hence the usage of directExecutor.\n+\n+    If we do have to retry, then we're likely \"slow\" enough that we should give up the initial calling thread and\n+    offload the work onto a separate executor.\n+     */\n     private ListenableFuture<T> execute(Supplier<ListenableFuture<T>> supplier, int retriesRemaining) {\n-        return Futures.transformAsync(Futures.submitAsync(supplier::get, executionExecutor),\n+        return Futures.transformAsync(Futures.submitAsync(supplier::get, MoreExecutors.directExecutor()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c80c2a1706daaac8566b65b50ab97dccbbd25c56"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "923390da5e07553ae71b121b733493b9a87f3201", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/923390da5e07553ae71b121b733493b9a87f3201", "committedDate": "2020-03-26T08:20:30Z", "message": "Update leader-election-impl/src/main/java/com/palantir/leader/proxy/AsyncRetrier.java\n\nCo-Authored-By: David Schlosnagle <schlosna@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0bd08340f7b2305b56f16c7e61155171092f6e", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/3f0bd08340f7b2305b56f16c7e61155171092f6e", "committedDate": "2020-03-26T08:40:37Z", "message": "Wrap supplier to catch any exceptions and convert them to failed futures."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "700fde87a484409014ac2bd3de0b67f10a0c6663", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/700fde87a484409014ac2bd3de0b67f10a0c6663", "committedDate": "2020-03-26T08:40:37Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODAxNDI0", "url": "https://github.com/palantir/atlasdb/pull/4672#pullrequestreview-393801424", "createdAt": "2020-04-15T13:59:43Z", "commit": {"oid": "700fde87a484409014ac2bd3de0b67f10a0c6663"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3002, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}