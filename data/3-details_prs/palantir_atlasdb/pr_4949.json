{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MDk3MTA0", "number": 4949, "title": "Relieve Flakes - Make Stress Test Run Slightly Longer", "bodyText": "Goals (and why):\n\nThe stress test started flaking a lot more, probably because our containers might be a bit weaker here and the theoretical permitted bound of thread blow-up with a bad node (770 if I'm not mistaken) is very close to our 800 limit.\n\nImplementation Description (bullets):\n\nIncrease the allowance to 1,000.\nAdd a few more requests on the tail end of the paxos test, so that an implementation that spins up unbounded threads talking to the bad node will still fail.\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nThis PR is about tests.\n\nConcerns (what feedback would you like?):\n\nPlease validate the test still retains discriminatory power.\n\nWhere should we start reviewing?:\n\nthe test\n\nPriority (whenever / two weeks / yesterday): yesterday \ud83d\udd25  rate of build flakes now is wild", "createdAt": "2020-08-14T17:24:34Z", "url": "https://github.com/palantir/atlasdb/pull/4949", "merged": true, "mergeCommit": {"oid": "2403e02af8513bd1d339481106cf432519b74dda"}, "closed": true, "closedAt": "2020-08-17T10:52:52Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-3wqVgH2gAyNDY4MDk3MTA0OjM1NDkwOTlhZTIzZjc4MzczNTc1YjI1Mjc4MjQ0NzQzMzQ4MjY5Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_u2uTgH2gAyNDY4MDk3MTA0OjFhOTEyZjY3NTkxZjYyZjA0ODJhNGFkYjg5YzJhMjA1ODBmZjEzOGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3549099ae23f78373575b2527824474334826927", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/3549099ae23f78373575b2527824474334826927", "committedDate": "2020-08-14T17:07:19Z", "message": "relax threshold, while still clearly under num requests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98009ba3f50395511862340d8f2ae6893f076a82", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/98009ba3f50395511862340d8f2ae6893f076a82", "committedDate": "2020-08-14T17:07:43Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MjcyMzEy", "url": "https://github.com/palantir/atlasdb/pull/4949#pullrequestreview-468272312", "createdAt": "2020-08-17T08:37:25Z", "commit": {"oid": "98009ba3f50395511862340d8f2ae6893f076a82"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODozNzoyNVrOHBfidw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo0MTo1MFrOHBfrkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyNzM1MQ==", "bodyText": "Drive by comment here, but do we really need this if statement?", "url": "https://github.com/palantir/atlasdb/pull/4949#discussion_r471327351", "createdAt": "2020-08-17T08:37:25Z", "author": {"login": "Jolyon-S"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -455,9 +455,7 @@ public void stressTestForPaxosEndpoints() {\n     }\n \n     private static void assertNumberOfThreadsReasonable(int startingThreads, int threadCount, boolean nonLeaderDown) {\n-        // TODO (jkong): Lower the amount over the threshold. This needs to be slightly higher for now because of the\n-        // current threading model in batch mode, where separate threads may be spun up on the autobatcher.\n-        int threadLimit = startingThreads + 800;\n+        int threadLimit = startingThreads + 1000;\n         if (nonLeaderDown) {\n             if (threadCount > threadLimit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98009ba3f50395511862340d8f2ae6893f076a82"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMyOTY4MQ==", "bodyText": "If I understand this test correctly:\n\nThis number (1_800) represents how long we are running for - the longer, the more accurate the test is (i.e. if we were to run for 100k and still never exceeded the thread limit we'd know it is unlikely to ever go over that amount).\nThe number that you increased below (+ 800 -> + 1000) is the tolerance - by increasing that you make the tests more tolerant of bad thread buildup, although only by a small amount.\n\nSo presumably the concern is that this PR relaxes the test a bit (to make it pass on Circle, sure, but even so). I'm happy with this as it is - 1) should help counteract 2) - but if you wanted to err on the side of caution, increasing 1) further would improve the test (at the cost of time, naturally).\nThoughts?", "url": "https://github.com/palantir/atlasdb/pull/4949#discussion_r471329681", "createdAt": "2020-08-17T08:41:50Z", "author": {"login": "Jolyon-S"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -437,7 +437,7 @@ public void stressTestForPaxosEndpoints() {\n         int startingNumThreads = ManagementFactory.getThreadMXBean().getThreadCount();\n         boolean isNonLeaderTakenOut = false;\n         try {\n-            for (int i = 0; i < 1_500; i++) { // Needed as it takes a while for the thread buildup to occur\n+            for (int i = 0; i < 1_800; i++) { // Needed as it takes a while for the thread buildup to occur", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98009ba3f50395511862340d8f2ae6893f076a82"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a912f67591f62f0482a4adb89c2a20580ff138f", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/1a912f67591f62f0482a4adb89c2a20580ff138f", "committedDate": "2020-08-17T09:18:43Z", "message": "No more hello"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2800, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}