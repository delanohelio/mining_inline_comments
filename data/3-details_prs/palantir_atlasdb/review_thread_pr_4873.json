{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNTQ2MTMw", "number": 4873, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo0NTowOVrOEJ-VlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo1Mzo0N1rOEJ-i-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODkzOTczOnYy", "diffSide": "RIGHT", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo0NTowOVrOGqv6qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyMDoyOFrOGrGwAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3ODQ0Mw==", "bodyText": "I think this is a good change. Just wondering if we could basically keep all metrics in memory and then use your filtering infra to report outliers? but otherwise just report one set of metrics for all pools.", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447478443", "createdAt": "2020-06-30T07:45:09Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);\n         registerPoolMetric(\"numIdle\", pool::getNumIdle);\n         registerPoolMetric(\"numActive\", pool::getNumActive);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MjU0Nw==", "bodyText": "Yep, we could. This was intended to be the 'pain free' or 'risk free' version of this PR, that's definitely something that we could do (just more complex)", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447852547", "createdAt": "2020-06-30T17:20:28Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);\n         registerPoolMetric(\"numIdle\", pool::getNumIdle);\n         registerPoolMetric(\"numActive\", pool::getNumActive);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3ODQ0Mw=="}, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODk0NDM4OnYy", "diffSide": "RIGHT", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo0NjoyOVrOGqv9lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyNToxOVrOGrG8wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3OTE4OA==", "bodyText": "I'm curious about this metric as well, I thought we don't wait at all, but waiting is done in the CassandraRetrier. So in effect this might be timing a memory operation of checking out a connection from the pool", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447479188", "createdAt": "2020-06-30T07:46:29Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1NTgxMA==", "bodyText": "Hmm. There are places where this does run into 40+ ms, though I'd be fine with removing it: not sure what this would be used for, and you only have one data point in a long while. So while I don't think it's a memory op it doesn't seem very valuable", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447855810", "createdAt": "2020-06-30T17:25:19Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ3OTE4OA=="}, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4ODk3NDAxOnYy", "diffSide": "RIGHT", "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNzo1Mzo0N1rOGqwPzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzoyMTo0OVrOGrG0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4Mzg1NA==", "bodyText": "meanIdleTimeMillis is interesting: I guess it might tell you if your min connection pool size is too large, but I don't think anyone ever cares? Also the idle timeout is 10 minutes, so I'd vote for canning this one too, unless you can think of a purpose for it?", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447483854", "createdAt": "2020-06-30T07:53:47Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg1MzYxNw==", "bodyText": "Yeah, didn't really have a purpose for this: the main one was just if it was very close to 10m that could be interesting, but agree that it's not particularly valuable. Let's kill it", "url": "https://github.com/palantir/atlasdb/pull/4873#discussion_r447853617", "createdAt": "2020-06-30T17:21:49Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraClientPoolingContainer.java", "diffHunk": "@@ -309,14 +309,8 @@ private void registerMetrics(GenericObjectPool<CassandraClient> pool) {\n         registerPoolMetric(\"meanBorrowWaitTimeMillis\", pool::getMeanBorrowWaitTimeMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4Mzg1NA=="}, "originalCommit": {"oid": "718c8b35f702015efe13394212e2cd11f7a01794"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2695, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}