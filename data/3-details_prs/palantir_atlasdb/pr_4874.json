{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTA1MDgx", "number": 4874, "title": "Consolidate PTExexutors fixed executor usage into string-based factories", "bodyText": "This new API will allow us to optimize thread utilization in a\nfuture change without impacting callers.", "createdAt": "2020-06-30T15:20:48Z", "url": "https://github.com/palantir/atlasdb/pull/4874", "merged": true, "mergeCommit": {"oid": "185c549409408cba915ee526ee34cb6a56cb0020"}, "closed": true, "closedAt": "2020-07-01T18:52:19Z", "author": {"login": "carterkozak"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwXPG_AH2gAyNDQyMTA1MDgxOmQ5NDU5ZmFlMjlkNTJmODJhMzRiMWE1M2Q0MzVhMWUwYTU0NTM5ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwbpVfAFqTQ0MDM2MDI0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/d9459fae29d52f82a34b1a53d435a1e0a54539fa", "committedDate": "2020-06-30T15:18:46Z", "message": "Consolidate PTExexutors fixed executor usage into string-based factories\n\nThis new API will allow us to optimize thread utilization in a\nfuture change without impacting callers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTMxNzEy", "url": "https://github.com/palantir/atlasdb/pull/4874#pullrequestreview-440131712", "createdAt": "2020-06-30T15:25:57Z", "commit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToyNTo1N1rOGrB2_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToyNTo1N1rOGrB2_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3MjQxNA==", "bodyText": "There's no ThreadFactory passed in.", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447772414", "createdAt": "2020-06-30T15:25:57Z", "author": {"login": "jkozlowski"}, "path": "commons-executors/src/main/java/com/palantir/common/concurrent/PTExecutors.java", "diffHunk": "@@ -196,13 +196,34 @@ public static ThreadPoolExecutor newFixedThreadPool(int numThreads) {\n      * @return the newly created thread pool\n      * @throws NullPointerException if threadFactory is null\n      * @throws IllegalArgumentException if <tt>numThreads &lt;= 0</tt>\n+     * @deprecated Prefer {@link #newFixedThreadPool(int, String)}.\n      */\n+    @Deprecated\n     public static ThreadPoolExecutor newFixedThreadPool(int numThreads, ThreadFactory threadFactory) {\n         return newThreadPoolExecutor(numThreads, numThreads,\n                 DEFAULT_THREAD_POOL_TIMEOUT_MILLIS, TimeUnit.MILLISECONDS,\n                 new LinkedBlockingQueue<Runnable>(), threadFactory);\n     }\n \n+    /**\n+     * Creates a thread pool that reuses a fixed number of threads operating off a shared unbounded\n+     * queue, using the provided ThreadFactory to create new threads when needed.  At any point, at", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTM0Mzc1", "url": "https://github.com/palantir/atlasdb/pull/4874#pullrequestreview-440134375", "createdAt": "2020-06-30T15:28:37Z", "commit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToyODozN1rOGrB-_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNToyODozN1rOGrB-_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3NDQ2Mw==", "bodyText": "Feels like this should have a name?", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447774463", "createdAt": "2020-06-30T15:28:37Z", "author": {"login": "jkozlowski"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/proxy/AwaitingLeadershipProxy.java", "diffHunk": "@@ -107,7 +107,7 @@ private AwaitingLeadershipProxy(\n                 \"Unable to create an AwaitingLeadershipProxy with no supplier\");\n         this.delegateSupplier = delegateSupplier;\n         this.leaderElectionService = leaderElectionService;\n-        this.executor = PTExecutors.newSingleThreadExecutor(PTExecutors.newNamedThreadFactory(true));\n+        this.executor = PTExecutors.newSingleThreadExecutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTM1OTM5", "url": "https://github.com/palantir/atlasdb/pull/4874#pullrequestreview-440135939", "createdAt": "2020-06-30T15:30:08Z", "commit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTozMDowOFrOGrCD0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTozMDowOFrOGrCD0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3NTY5Nw==", "bodyText": "Again, no daemons?", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447775697", "createdAt": "2020-06-30T15:30:08Z", "author": {"login": "jkozlowski"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/PaxosStateLogBatchReader.java", "diffHunk": "@@ -40,7 +39,7 @@ public PaxosStateLogBatchReader(PaxosStateLog<V> delegate, Persistable.Hydrator<\n         this.delegate = delegate;\n         this.hydrator = hydrator;\n         this.executor = MoreExecutors.listeningDecorator(\n-                PTExecutors.newFixedThreadPool(numThreads, new NamedThreadFactory(\"psl-reader\", true)));\n+                PTExecutors.newFixedThreadPool(numThreads, \"psl-reader\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f85420089e8aa6d9e2e2acc833bf784e5f4eaaef", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/f85420089e8aa6d9e2e2acc833bf784e5f4eaaef", "committedDate": "2020-06-30T15:32:35Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3377786b308cffec1507b6db1226975c508a74", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/ca3377786b308cffec1507b6db1226975c508a74", "committedDate": "2020-06-30T15:32:35Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMjUwNjUz", "url": "https://github.com/palantir/atlasdb/pull/4874#pullrequestreview-440250653", "createdAt": "2020-06-30T17:47:14Z", "commit": {"oid": "ca3377786b308cffec1507b6db1226975c508a74"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzo0NzoxNFrOGrHzkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNzo1MTozMFrOGrH9RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg2OTg0Mg==", "bodyText": "Might want to call out (method name? or at least docs) that this is non-daemon since a lot of the other methods in this class seem to use daemon threads", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447869842", "createdAt": "2020-06-30T17:47:14Z", "author": {"login": "jeremyk-91"}, "path": "commons-executors/src/main/java/com/palantir/common/concurrent/PTExecutors.java", "diffHunk": "@@ -196,13 +196,33 @@ public static ThreadPoolExecutor newFixedThreadPool(int numThreads) {\n      * @return the newly created thread pool\n      * @throws NullPointerException if threadFactory is null\n      * @throws IllegalArgumentException if <tt>numThreads &lt;= 0</tt>\n+     * @deprecated Prefer {@link #newFixedThreadPool(int, String)}.\n      */\n+    @Deprecated\n     public static ThreadPoolExecutor newFixedThreadPool(int numThreads, ThreadFactory threadFactory) {\n         return newThreadPoolExecutor(numThreads, numThreads,\n                 DEFAULT_THREAD_POOL_TIMEOUT_MILLIS, TimeUnit.MILLISECONDS,\n                 new LinkedBlockingQueue<Runnable>(), threadFactory);\n     }\n \n+    /**\n+     * Creates a thread pool that reuses a fixed number of threads operating off a shared unbounded\n+     * queue.  At any point, at most <tt>numThreads</tt> threads will be active processing tasks.  If\n+     * additional tasks are submitted when all threads are active, they will wait in the queue until\n+     * a thread is available.  If any thread terminates due to a failure during execution prior to\n+     * shutdown, a new one will take its place if needed to execute subsequent tasks.  The threads\n+     * in the pool will exist until it is explicitly {@link\n+     * ExecutorService#shutdown shutdown}.\n+     *\n+     * @param numThreads the number of threads in the pool\n+     * @param name Executor name used for thread naming and instrumentation\n+     * @return the newly created thread pool\n+     * @throws IllegalArgumentException if <tt>numThreads &lt;= 0</tt>\n+     */\n+    public static ThreadPoolExecutor newFixedThreadPool(int numThreads, String name) {\n+        return newFixedThreadPool(numThreads, new NamedThreadFactory(name));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca3377786b308cffec1507b6db1226975c508a74"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg3MDM2MA==", "bodyText": "This one seems a bit suspicious - we're changing it to be non-daemon, and there doesn't seem to be anything that shuts down the executor service anywhere. Do we know/have we tested if timelock will shut down gracefully?", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447870360", "createdAt": "2020-06-30T17:48:09Z", "author": {"login": "jeremyk-91"}, "path": "timelock-agent/src/main/java/com/palantir/timelock/paxos/LeaderPingHealthCheck.java", "diffHunk": "@@ -51,7 +50,7 @@ public LeaderPingHealthCheck(\n         this.pingers = pingers;\n         this.executorService = PTExecutors.newFixedThreadPool(\n                 pingers.size(),\n-                new NamedThreadFactory(\"leader-ping-healthcheck\", true));\n+                \"leader-ping-healthcheck\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca3377786b308cffec1507b6db1226975c508a74"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg3MjMyNQ==", "bodyText": "This one could be either way I think, it's part of the SQLite migration so it blocks startup for timelock, and there'll always be other main threads going around.", "url": "https://github.com/palantir/atlasdb/pull/4874#discussion_r447872325", "createdAt": "2020-06-30T17:51:30Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/PaxosStateLogBatchReader.java", "diffHunk": "@@ -40,7 +39,7 @@ public PaxosStateLogBatchReader(PaxosStateLog<V> delegate, Persistable.Hydrator<\n         this.delegate = delegate;\n         this.hydrator = hydrator;\n         this.executor = MoreExecutors.listeningDecorator(\n-                PTExecutors.newFixedThreadPool(numThreads, new NamedThreadFactory(\"psl-reader\", true)));\n+                PTExecutors.newFixedThreadPool(numThreads, \"psl-reader\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3NTY5Nw=="}, "originalCommit": {"oid": "d9459fae29d52f82a34b1a53d435a1e0a54539fa"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7becba1d3a6b3d48bdf92d4de05d2ed7a1e1e61", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/c7becba1d3a6b3d48bdf92d4de05d2ed7a1e1e61", "committedDate": "2020-06-30T17:56:48Z", "message": "specify daemon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e20de59448d0db25c70ac538354bf3e3376892", "author": {"user": {"login": "carterkozak", "name": "Carter Kozak"}}, "url": "https://github.com/palantir/atlasdb/commit/d3e20de59448d0db25c70ac538354bf3e3376892", "committedDate": "2020-06-30T17:57:38Z", "message": "NamedThreadFactory creates daemon threads by default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMzYwMjQz", "url": "https://github.com/palantir/atlasdb/pull/4874#pullrequestreview-440360243", "createdAt": "2020-06-30T20:27:02Z", "commit": {"oid": "d3e20de59448d0db25c70ac538354bf3e3376892"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2707, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}