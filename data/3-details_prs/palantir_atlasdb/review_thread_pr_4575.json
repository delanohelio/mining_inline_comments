{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTIyNjE3", "number": 4575, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDozMToxM1rODgVzwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzo1NDo0M1rODgZe3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MjM4MzM2OnYy", "diffSide": "RIGHT", "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMDozMToxM1rOFqfjwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzowNDo1N1rOFtofmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwMTU2OQ==", "bodyText": "Why don't we use UserAgent.Agent.DEFAULT_VERSION anymore?", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r380101569", "createdAt": "2020-02-17T10:31:13Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.\n+        AuxiliaryRemotingParameters build = AuxiliaryRemotingParameters.builder()\n+                .shouldRetry(false)\n+                .shouldLimitPayload(false)\n+                .shouldSupportBlockingOperations(false)\n+                .userAgent(UserAgent.of(UserAgent.Agent.of(\"atlasdb-jepsen\", \"1.2.3\")))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5MzYxMg==", "bodyText": "I imagine it's slightly more identifiable, but can't think of another reason other than that \ud83e\udd37\u200d\u2642", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r380193612", "createdAt": "2020-02-17T13:52:38Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.\n+        AuxiliaryRemotingParameters build = AuxiliaryRemotingParameters.builder()\n+                .shouldRetry(false)\n+                .shouldLimitPayload(false)\n+                .shouldSupportBlockingOperations(false)\n+                .userAgent(UserAgent.of(UserAgent.Agent.of(\"atlasdb-jepsen\", \"1.2.3\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwMTU2OQ=="}, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5MzY4OQ==", "bodyText": "Ah, that's fair, I forgot that existed - changed to that.", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r383393689", "createdAt": "2020-02-24T17:04:57Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.\n+        AuxiliaryRemotingParameters build = AuxiliaryRemotingParameters.builder()\n+                .shouldRetry(false)\n+                .shouldLimitPayload(false)\n+                .shouldSupportBlockingOperations(false)\n+                .userAgent(UserAgent.of(UserAgent.Agent.of(\"atlasdb-jepsen\", \"1.2.3\")))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDEwMTU2OQ=="}, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Mjk4MTA2OnYy", "diffSide": "RIGHT", "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzo1MzoyNVrOFqlM-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxMjo1NzoxMVrOFxEq_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5NDA0Mw==", "bodyText": "why is this okay? what happens if you make it the same as how it's used in prod?", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r380194043", "createdAt": "2020-02-17T13:53:25Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NDI4Mw==", "bodyText": "Is also fine, just that I'm not really a fan of duplicating that logic here, and it seems a bit unpleasant to expose internals of TransactionManagers to simulate that wrapping. Let me know what you think.", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r383394283", "createdAt": "2020-02-24T17:06:04Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5NDA0Mw=="}, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzAwMTA4NQ==", "bodyText": "I suppose I'm asking from a perspective of \"will jepsen say there's an illegal trace, when really it would never happen in prod\"?", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r387001085", "createdAt": "2020-03-03T12:57:11Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5NDA0Mw=="}, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Mjk4NTI3OnYy", "diffSide": "RIGHT", "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzo1NDo0M1rOFqlPmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxMzo1NDo0M1rOFqlPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDE5NDcxNQ==", "bodyText": "nit: build -> parameters", "url": "https://github.com/palantir/atlasdb/pull/4575#discussion_r380194715", "createdAt": "2020-02-17T13:54:43Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/TimelockUtils.java", "diffHunk": "@@ -43,21 +46,26 @@ private TimelockUtils() {\n     }\n \n     private static List<String> hostnamesToEndpointUris(List<String> hosts) {\n-        return Lists.transform(hosts, host -> String.format(\"https://%s:%d/%s\", host, PORT, NAMESPACE));\n+        return hosts.stream().map(host -> String.format(\"https://%s:%d\", host, PORT)).collect(Collectors.toList());\n     }\n \n     private static <T> T createFromUris(MetricsManager metricsManager, List<String> endpointUris, Class<T> type) {\n+        ServerListConfig serverListConfig = ImmutableServerListConfig.builder()\n+                .addAllServers(endpointUris)\n+                .sslConfiguration(SSL_CONFIGURATION)\n+                .build();\n+        // lock technically blocking, but OK to run with short timeout given the way the tests work.\n+        AuxiliaryRemotingParameters build = AuxiliaryRemotingParameters.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987daee087a3593f2b923e01cb0f31ff88bd54fd"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2301, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}