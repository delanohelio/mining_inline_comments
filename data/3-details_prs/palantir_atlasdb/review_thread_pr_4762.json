{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2Mjg2ODEx", "number": 4762, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MjowM1rOD7l-Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzo1NVrOD72wVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE0NjgyOnYy", "diffSide": "RIGHT", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MjowM1rOGUAtgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMTowNlrOGUBU2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjM1NQ==", "bodyText": "name it _SHORT", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423636355", "createdAt": "2020-05-12T10:42:03Z", "author": {"login": "gmaretic"}, "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NjQyNw==", "bodyText": "Yep, makes sense - this sounds like a default.", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423646427", "createdAt": "2020-05-12T11:01:06Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjM1NQ=="}, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE0Nzk1OnYy", "diffSide": "RIGHT", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MjoyN1rOGUAuNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0MjoyN1rOGUAuNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNjUzMg==", "bodyText": "Same as above", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423636532", "createdAt": "2020-05-12T10:42:27Z", "author": {"login": "gmaretic"}, "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(false)\n+            .build();\n+\n+    private static final ServerListConfig SERVER_LIST_CONFIG = ImmutableServerListConfig.builder()\n+            .sslConfiguration(SSL_CONFIGURATION)\n+            .addAllServers(SERVERS)\n+            .build();\n+\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS_EXTENDED_TIMEOUT)\n+            .build();\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE1MzE3OnYy", "diffSide": "RIGHT", "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0Mzo0OFrOGUAxZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0Mzo0OFrOGUAxZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzNzM1MA==", "bodyText": "Verify absence of proxy configuration", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423637350", "createdAt": "2020-05-12T10:43:48Z", "author": {"login": "gmaretic"}, "path": "atlasdb-conjure/src/test/java/com/palantir/atlasdb/http/v2/DialogueClientOptionsTest.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.nio.file.Paths;\n+import java.util.List;\n+\n+import org.junit.Test;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ImmutableServerListConfig;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.conjure.java.api.config.service.UserAgent;\n+import com.palantir.conjure.java.api.config.ssl.SslConfiguration;\n+\n+public class DialogueClientOptionsTest {\n+    private static final String SERVICE_NAME = \"service\";\n+    private static final UserAgent USER_AGENT = UserAgent.of(UserAgent.Agent.of(SERVICE_NAME, \"1.2.3\"));\n+    private static final List<String> SERVERS = ImmutableList.of(\"apple\", \"banana\", \"cherry\", \"dewberry\");\n+    private static final SslConfiguration SSL_CONFIGURATION = SslConfiguration.of(Paths.get(\"a\", \"b\"));\n+\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS_EXTENDED_TIMEOUT\n+            = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(true)\n+            .build();\n+    private static final AuxiliaryRemotingParameters REMOTING_PARAMETERS = AuxiliaryRemotingParameters.builder()\n+            .userAgent(USER_AGENT)\n+            .shouldRetry(true)\n+            .shouldLimitPayload(true)\n+            .shouldUseExtendedTimeout(false)\n+            .build();\n+\n+    private static final ServerListConfig SERVER_LIST_CONFIG = ImmutableServerListConfig.builder()\n+            .sslConfiguration(SSL_CONFIGURATION)\n+            .addAllServers(SERVERS)\n+            .build();\n+\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS_EXTENDED_TIMEOUT)\n+            .build();\n+    private static final RemoteServiceConfiguration REMOTE_SERVICE_CONFIGURATION\n+            = ImmutableRemoteServiceConfiguration.builder()\n+            .serverList(SERVER_LIST_CONFIG)\n+            .remotingParameters(REMOTING_PARAMETERS)\n+            .build();\n+\n+    @Test\n+    public void serviceConfigBlockGeneration() {\n+        ServicesConfigBlock servicesConfigBlock = DialogueClientOptions.toServicesConfigBlock(\n+                ImmutableMap.of(SERVICE_NAME, REMOTE_SERVICE_CONFIGURATION_EXTENDED_TIMEOUT));\n+\n+        assertThat(servicesConfigBlock.services()).containsOnlyKeys(SERVICE_NAME);\n+\n+        PartialServiceConfiguration partialServiceConfiguration = servicesConfigBlock.services().get(SERVICE_NAME);\n+        assertThat(partialServiceConfiguration.uris()).hasSameElementsAs(SERVERS);\n+        assertThat(partialServiceConfiguration.security()).contains(SSL_CONFIGURATION);\n+        assertThat(partialServiceConfiguration.backoffSlotSize())\n+                .contains(ClientOptionsConstants.STANDARD_BACKOFF_SLOT_SIZE);\n+        assertThat(partialServiceConfiguration.connectTimeout()).contains(ClientOptionsConstants.CONNECT_TIMEOUT);\n+        assertThat(partialServiceConfiguration.maxNumRetries()).contains(ClientOptionsConstants.STANDARD_MAX_RETRIES);\n+        assertThat(partialServiceConfiguration.readTimeout()).contains(ClientOptionsConstants.LONG_READ_TIMEOUT);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE1ODA2OnYy", "diffSide": "RIGHT", "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo0NToxOVrOGUA0hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowMjoyOFrOGUBXiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODE0OQ==", "bodyText": "Maybe rename this", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423638149", "createdAt": "2020-05-12T10:45:19Z", "author": {"login": "gmaretic"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -82,7 +82,9 @@\n \n     private static final int DEFAULT_LOCK_TIMEOUT_MS = 10_000;\n     private static final int LONG_LOCK_TIMEOUT_MS =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0NzExMg==", "bodyText": "Yep, renamed to LONGER_THAN_READ_TIMEOUT_LOCK_TIMEOUT_MS", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r423647112", "createdAt": "2020-05-12T11:02:28Z", "author": {"login": "jeremyk-91"}, "path": "timelock-server/src/suiteTest/java/com/palantir/atlasdb/timelock/MultiNodePaxosTimeLockServerIntegrationTest.java", "diffHunk": "@@ -82,7 +82,9 @@\n \n     private static final int DEFAULT_LOCK_TIMEOUT_MS = 10_000;\n     private static final int LONG_LOCK_TIMEOUT_MS =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzYzODE0OQ=="}, "originalCommit": {"oid": "0cc2f2d41744526727da3b45cda70974731bcc70"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg5MTc0OnYy", "diffSide": "RIGHT", "path": "atlasdb-conjure/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNTo0NFrOGUb_Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNTo0NFrOGUb_Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4MzI1NA==", "bodyText": "I think dialogue-clients should give you everything you need - don't think you need -serde or -hc4-client.", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r424083254", "createdAt": "2020-05-12T23:05:44Z", "author": {"login": "iamdanfox"}, "path": "atlasdb-conjure/build.gradle", "diffHunk": "@@ -4,7 +4,12 @@ dependencies {\n   compile project(':atlasdb-commons')\n   compile project(':atlasdb-remoting-api')\n \n-  compile group: 'com.palantir.conjure.java.runtime', name: 'conjure-java-jaxrs-client'\n+  implementation 'com.palantir.refreshable:refreshable'\n+  implementation 'com.palantir.dialogue:dialogue-apache-hc4-client'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7c3f65613bf92dbbf66031f071fd73bb59fea2b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDg5Njg0OnYy", "diffSide": "RIGHT", "path": "atlasdb-conjure/src/main/java/com/palantir/atlasdb/http/v2/DialogueClientOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzo1NVrOGUcCQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzo1NVrOGUcCQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4NDAzMg==", "bodyText": "Can utilities like this be package-private? I know you guys don't use revapi right now, but I think if you made more of your stuff package-private maybe you could?", "url": "https://github.com/palantir/atlasdb/pull/4762#discussion_r424084032", "createdAt": "2020-05-12T23:07:55Z", "author": {"login": "iamdanfox"}, "path": "atlasdb-conjure/src/main/java/com/palantir/atlasdb/http/v2/DialogueClientOptions.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.http.v2;\n+\n+import java.util.Map;\n+\n+import com.palantir.atlasdb.config.AuxiliaryRemotingParameters;\n+import com.palantir.atlasdb.config.ServerListConfig;\n+import com.palantir.common.streams.KeyedStream;\n+import com.palantir.conjure.java.api.config.service.PartialServiceConfiguration;\n+import com.palantir.conjure.java.api.config.service.ServicesConfigBlock;\n+import com.palantir.logsafe.exceptions.SafeIllegalStateException;\n+\n+public final class DialogueClientOptions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7c3f65613bf92dbbf66031f071fd73bb59fea2b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2825, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}