{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTQ3NTgz", "number": 4941, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo0NzozNFrOEX-sUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo0NzozNFrOEX-sUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNTc5ODU3OnYy", "diffSide": "RIGHT", "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QwOTo0NzozNFrOHAERjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMDowMzoxNlrOHAE0bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzMjA3OA==", "bodyText": "nit: this has 129 chars - quick refactor please", "url": "https://github.com/palantir/atlasdb/pull/4941#discussion_r469832078", "createdAt": "2020-08-13T09:47:34Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -159,9 +160,9 @@ public boolean setFuture(ListenableFuture<? extends R> future) {\n             EventHandler<BatchElement<T, R>> eventHandler,\n             int bufferSize,\n             String safeLoggablePurpose) {\n-        Disruptor<DefaultBatchElement<T, R>> disruptor =\n-                new Disruptor<>(DefaultBatchElement::new, bufferSize, threadFactory(safeLoggablePurpose));\n-        disruptor.handleEventsWith(eventHandler);\n+        Disruptor<DisruptorBatchElement<T, R>> disruptor =\n+                new Disruptor<>(DisruptorBatchElement::new, bufferSize, threadFactory(safeLoggablePurpose));\n+        disruptor.handleEventsWith((event, sequence, endOfBatch) -> eventHandler.onEvent(event.consume(), sequence, endOfBatch));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee252fd795610958f5d6eb8e40cf4eba9321dbbb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0MTAwNg==", "bodyText": "(I'm going to do this, so don't do this one if you see it!)", "url": "https://github.com/palantir/atlasdb/pull/4941#discussion_r469841006", "createdAt": "2020-08-13T10:03:16Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-autobatch/src/main/java/com/palantir/atlasdb/autobatch/DisruptorAutobatcher.java", "diffHunk": "@@ -159,9 +160,9 @@ public boolean setFuture(ListenableFuture<? extends R> future) {\n             EventHandler<BatchElement<T, R>> eventHandler,\n             int bufferSize,\n             String safeLoggablePurpose) {\n-        Disruptor<DefaultBatchElement<T, R>> disruptor =\n-                new Disruptor<>(DefaultBatchElement::new, bufferSize, threadFactory(safeLoggablePurpose));\n-        disruptor.handleEventsWith(eventHandler);\n+        Disruptor<DisruptorBatchElement<T, R>> disruptor =\n+                new Disruptor<>(DisruptorBatchElement::new, bufferSize, threadFactory(safeLoggablePurpose));\n+        disruptor.handleEventsWith((event, sequence, endOfBatch) -> eventHandler.onEvent(event.consume(), sequence, endOfBatch));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzMjA3OA=="}, "originalCommit": {"oid": "ee252fd795610958f5d6eb8e40cf4eba9321dbbb"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2788, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}