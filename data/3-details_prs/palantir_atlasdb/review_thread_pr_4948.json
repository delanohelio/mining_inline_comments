{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MDM3NjM0", "number": 4948, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMzowNFrOEYgywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMzowNFrOEYgywQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTM4NTYxOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/config/AtlasDbConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMzowNFrOHA4y7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToyMzowNFrOHA4y7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY5MjU4OA==", "bodyText": "nit: remove com.palantir.logsafe?", "url": "https://github.com/palantir/atlasdb/pull/4948#discussion_r470692588", "createdAt": "2020-08-14T15:23:04Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/config/AtlasDbConfig.java", "diffHunk": "@@ -319,69 +333,56 @@ private static void checkServersListHasAtLeastOneServerIfPresent(Optional<Server\n                         \"Server list must have at least one server.\"));\n     }\n \n-    private String checkNamespaceConfigAndGetNamespace() {\n+    private void checkNamespaceConfigConsistent() {\n         if (namespace().isPresent()) {\n-            String namespaceConfigValue = namespace().get();\n-\n-            Preconditions.checkState(!namespaceConfigValue.contains(\"\\\"\"),\n-                    \"Namespace should not be quoted\");\n+            String presentNamespace = namespace().get();\n+            Preconditions.checkState(!presentNamespace.contains(\"\\\"\"), \"Namespace should not be quoted\");\n \n             keyValueService().namespace().ifPresent(kvsNamespace ->\n-                    com.palantir.logsafe.Preconditions.checkState(kvsNamespace.equals(namespaceConfigValue),\n+                    Preconditions.checkState(kvsNamespace.equals(presentNamespace),\n                             \"If present, keyspace/dbName/sid config should be the same as the\"\n                                     + \" atlas root-level namespace config.\"));\n \n             timelock().ifPresent(timelock -> timelock.client().ifPresent(client ->\n-                    com.palantir.logsafe.Preconditions.checkState(client.equals(namespaceConfigValue),\n+                    Preconditions.checkState(client.equals(presentNamespace),\n                             \"If present, the TimeLock client config should be the same as the\"\n                                     + \" atlas root-level namespace config.\")));\n-            return namespaceConfigValue;\n-        } else if (!(keyValueService() instanceof InMemoryAtlasDbConfig)) {\n-            com.palantir.logsafe.Preconditions.checkState(keyValueService().namespace().isPresent(),\n-                    \"Either the atlas root-level namespace\"\n-                            + \" or the keyspace/dbName/sid config needs to be set.\");\n+            return;\n+        }\n \n-            String keyValueServiceNamespace = keyValueService().namespace().get();\n+        // There is no top level namespace\n+        if (keyValueService() instanceof InMemoryAtlasDbConfig) {\n+            if (timelock().isPresent() && !timelock().get().client().isPresent()) {\n+                throw new SafeIllegalStateException(\"For InMemoryKVS, the TimeLock client should not be empty\");\n+            }\n+            return;\n+        }\n \n-            Preconditions.checkState(!keyValueServiceNamespace.contains(\"\\\"\"),\n-                    \"KeyValueService namespace should not be quoted\");\n+        // There is no top level namespace AND the config is not an in-memory config\n+        Preconditions.checkState(keyValueService().namespace().isPresent(),\n+                \"Either the atlas root-level namespace\"\n+                        + \" or the keyspace/dbName/sid config needs to be set.\");\n+        String keyValueServiceNamespace = keyValueService().namespace().get();\n+        Preconditions.checkState(!keyValueServiceNamespace.contains(\"\\\"\"),\n+                \"KeyValueService namespace should not be quoted\");\n \n-            if (timelock().isPresent()) {\n-                TimeLockClientConfig timeLockConfig = timelock().get();\n+        if (timelock().isPresent()) {\n+            TimeLockClientConfig timeLockConfig = timelock().get();\n \n-                com.palantir.logsafe.Preconditions.checkState(timeLockConfig.client().isPresent(),\n-                        \"Either the atlas root-level namespace config or the TimeLock client config\"\n-                                + \" should be present.\");\n+            com.palantir.logsafe.Preconditions.checkState(timeLockConfig.client().isPresent(),\n+                    \"Either the atlas root-level namespace config or the TimeLock client config should be present.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4978613621371ebe2d6e3c41f3774be728ffb133"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2794, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}