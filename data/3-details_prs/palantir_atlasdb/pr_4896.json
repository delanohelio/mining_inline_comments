{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTY5Mjcy", "number": 4896, "title": "[PDS-126257] Setting Fire to the Rain: Killing the SharedExecutor", "bodyText": "Goals (and why):\n\nSee PDS-126257\nThe shared executor was unbounded, so if a single node was slow and given we don't do cancellation any more, requests will pile up. I don't think this is the cause of badness on this ticket, but it is a defense mechanism.\n\nImplementation Description (bullets):\n\nRemove the shared executor\nUse a bounded executor for all Acceptor and Learner calls\nIncrease the size of the per-node executor to 256\nRun local operations on the direct executor.\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nAdded a stress test that hammers the Paxos endpoints that would fail with the shared executor.\n\nConcerns (what feedback would you like?):\n\nIs the size of the per-node executor at 256 sufficient?\nAre there places where I haven't handled a RejectedExecutionException correctly?\nAny other consequences I might have inadvertently caused?\n\nWhere should we start reviewing?: SingleLeaderNetworkClientFactories, I guess\nPriority (whenever / two weeks / yesterday): this week (w/c 13 Jul)", "createdAt": "2020-07-10T17:58:13Z", "url": "https://github.com/palantir/atlasdb/pull/4896", "merged": true, "mergeCommit": {"oid": "e58acb404cd65d744dab4e589d597eeb9e73bce1"}, "closed": true, "closedAt": "2020-07-21T13:26:10Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0gi0KAFqTQ0NjgzMjg4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3EPxjAH2gAyNDQ3NTY5MjcyOjMzMmZmYTA0YzA3NzA3ZWRiYjEyZGFmY2U3ZTg4MmE4YjFmNWE4OWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODMyODg2", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-446832886", "createdAt": "2020-07-11T22:29:45Z", "commit": {"oid": "cb0bbd4ef86e72e07825c33fbf89873f347e3ad9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwODo1NDowMFrOGwfMIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMTozMTo1M1rOGwkoBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ5NTg0MQ==", "bodyText": "Why unsafe?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r453495841", "createdAt": "2020-07-13T08:54:00Z", "author": {"login": "sudiksha27"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/SingleLeaderLearnerNetworkClient.java", "diffHunk": "@@ -63,18 +64,23 @@ public SingleLeaderLearnerNetworkClient(\n     public void learn(long seq, PaxosValue value) {\n         // broadcast learned value\n         for (final PaxosLearner learner : remoteLearners) {\n-            executors.get(learner).execute(() -> {\n-                try {\n-                    learner.learn(seq, value);\n-                } catch (Throwable e) {\n-                    log.warn(\"Failed to teach learner the value {} at sequence {}\",\n-                            UnsafeArg.of(\"value\", Optional.ofNullable(value.data)\n-                                    .map(bytes -> BaseEncoding.base16().encode(bytes))\n-                                    .orElse(null)),\n-                            SafeArg.of(\"sequence\", seq),\n-                            e);\n-                }\n-            });\n+            try {\n+                executors.get(learner).execute(() -> {\n+                    try {\n+                        learner.learn(seq, value);\n+                    } catch (Throwable e) {\n+                        log.warn(\"Failed to teach learner the value {} at sequence {}, after attempting execution.\",\n+                                UnsafeArg.of(\"value\", base16EncodePaxosValue(value)),\n+                                SafeArg.of(\"sequence\", seq),\n+                                e);\n+                    }\n+                });\n+            } catch (RejectedExecutionException e) {\n+                log.warn(\"Failed to teach learner the value {} at sequence {}, because we could not execute the task.\",\n+                        UnsafeArg.of(\"value\", base16EncodePaxosValue(value)),\n+                        SafeArg.of(\"sequence\", seq),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0bbd4ef86e72e07825c33fbf89873f347e3ad9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ5NjE5MQ==", "bodyText": "When would this happen?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r453496191", "createdAt": "2020-07-13T08:54:32Z", "author": {"login": "sudiksha27"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/SingleLeaderLearnerNetworkClient.java", "diffHunk": "@@ -63,18 +64,23 @@ public SingleLeaderLearnerNetworkClient(\n     public void learn(long seq, PaxosValue value) {\n         // broadcast learned value\n         for (final PaxosLearner learner : remoteLearners) {\n-            executors.get(learner).execute(() -> {\n-                try {\n-                    learner.learn(seq, value);\n-                } catch (Throwable e) {\n-                    log.warn(\"Failed to teach learner the value {} at sequence {}\",\n-                            UnsafeArg.of(\"value\", Optional.ofNullable(value.data)\n-                                    .map(bytes -> BaseEncoding.base16().encode(bytes))\n-                                    .orElse(null)),\n-                            SafeArg.of(\"sequence\", seq),\n-                            e);\n-                }\n-            });\n+            try {\n+                executors.get(learner).execute(() -> {\n+                    try {\n+                        learner.learn(seq, value);\n+                    } catch (Throwable e) {\n+                        log.warn(\"Failed to teach learner the value {} at sequence {}, after attempting execution.\",\n+                                UnsafeArg.of(\"value\", base16EncodePaxosValue(value)),\n+                                SafeArg.of(\"sequence\", seq),\n+                                e);\n+                    }\n+                });\n+            } catch (RejectedExecutionException e) {\n+                log.warn(\"Failed to teach learner the value {} at sequence {}, because we could not execute the task.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0bbd4ef86e72e07825c33fbf89873f347e3ad9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMTUyMw==", "bodyText": "How did we compute this?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r453511523", "createdAt": "2020-07-13T09:18:51Z", "author": {"login": "sudiksha27"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/TimeLockPaxosExecutors.java", "diffHunk": "@@ -27,7 +27,7 @@\n \n final class TimeLockPaxosExecutors {\n     @VisibleForTesting\n-    static final int MAXIMUM_POOL_SIZE = 100;\n+    static final int MAXIMUM_POOL_SIZE = 256;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0bbd4ef86e72e07825c33fbf89873f347e3ad9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4NDkwMg==", "bodyText": "When would this happen?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r453584902", "createdAt": "2020-07-13T11:31:53Z", "author": {"login": "sudiksha27"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/LearnCoalescingConsumer.java", "diffHunk": "@@ -38,35 +39,36 @@\n     private static final Logger log = LoggerFactory.getLogger(LearnCoalescingConsumer.class);\n     private static final PaxosResponse SUCCESSFUL_RESPONSE = new PaxosResponseImpl(true);\n \n-    private final BatchPaxosLearner localLearner;\n-    private final List<BatchPaxosLearner> remoteLearners;\n-    private final ExecutorService executor;\n+    private final WithDedicatedExecutor<BatchPaxosLearner> localLearner;\n+    private final List<WithDedicatedExecutor<BatchPaxosLearner>> remoteLearners;\n \n     LearnCoalescingConsumer(\n-            BatchPaxosLearner localLearner,\n-            List<BatchPaxosLearner> remoteLearners,\n-            ExecutorService executor) {\n+            WithDedicatedExecutor<BatchPaxosLearner> localLearner,\n+            List<WithDedicatedExecutor<BatchPaxosLearner>> remoteLearners) {\n         this.localLearner = localLearner;\n         this.remoteLearners = remoteLearners;\n-        this.executor = executor;\n     }\n \n     @Override\n     public Map<Map.Entry<Client, PaxosValue>, PaxosResponse> apply(Set<Map.Entry<Client, PaxosValue>> request) {\n         SetMultimap<Client, PaxosValue> requestAsMultimap = ImmutableSetMultimap.copyOf(request);\n \n-        for (BatchPaxosLearner remoteLearner : remoteLearners) {\n-            executor.execute(() -> {\n-                try {\n-                    remoteLearner.learn(requestAsMultimap);\n-                } catch (Throwable e) {\n-                    log.warn(\"Failed to teach learner.\", e);\n-                }\n-            });\n+        for (WithDedicatedExecutor<BatchPaxosLearner> remoteLearner : remoteLearners) {\n+            try {\n+                remoteLearner.executor().execute(() -> {\n+                    try {\n+                        remoteLearner.service().learn(requestAsMultimap);\n+                    } catch (Throwable e) {\n+                        log.warn(\"Failed to teach learner after scheduling the task.\", e);\n+                    }\n+                });\n+            } catch (RejectedExecutionException e) {\n+                log.warn(\"Failed to teach learner, because we could not schedule the task at all\", e);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb0bbd4ef86e72e07825c33fbf89873f347e3ad9"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NjQ2NTE2", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-449646516", "createdAt": "2020-07-16T08:49:05Z", "commit": {"oid": "779963b27bd3967a7e6454389d083744edcb33ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo0OTowNlrOGyhSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo0OTowNlrOGyhSxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyNzQ2MA==", "bodyText": "nit: This doesn't feel necessary - is there a reason why you can't just pass in local and remote (mapping away the WithExecutor) into the constructor at the end?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r455627460", "createdAt": "2020-07-16T08:49:06Z", "author": {"login": "Jolyon-S"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/SingleLeaderNetworkClientFactories.java", "diffHunk": "@@ -75,17 +78,30 @@\n     @Override\n     public Factory<PaxosLearnerNetworkClient> learner() {\n         return client -> {\n-            List<PaxosLearner> remoteLearners = TimelockPaxosLearnerAdapters\n-                    .create(useCase(), remoteClients(), useBatchedEndpoints(), client);\n+            List<WithDedicatedExecutor<PaxosLearner>> remoteLearners = TimelockPaxosLearnerAdapters\n+                    .create(useCase(), remoteClients(), useBatchedEndpoints(), client)\n+                    .stream()\n+                    .map(withExecutor -> withExecutor.transformService(\n+                            remote -> metrics().instrument(PaxosLearner.class, remote, client)))\n+                    .collect(Collectors.toList());\n             PaxosLearner localLearner = components().learner(client);\n \n-            LocalAndRemotes<PaxosLearner> allLearners = LocalAndRemotes.of(localLearner, remoteLearners)\n-                    .enhanceRemotes(remote -> metrics().instrument(PaxosLearner.class, remote, client));\n+            LocalAndRemotes<PaxosLearner> allLearners = LocalAndRemotes.of(localLearner,\n+                    remoteLearners.stream().map(WithDedicatedExecutor::service).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "779963b27bd3967a7e6454389d083744edcb33ed"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NjQ3MjQ3", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-449647247", "createdAt": "2020-07-16T08:50:00Z", "commit": {"oid": "779963b27bd3967a7e6454389d083744edcb33ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo1MDowMFrOGyhU9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo1MDowMFrOGyhU9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyODAyMg==", "bodyText": "Do we want a comment for this constant so we can understand how we got here in the future?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r455628022", "createdAt": "2020-07-16T08:50:00Z", "author": {"login": "Jolyon-S"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/TimeLockPaxosExecutors.java", "diffHunk": "@@ -27,7 +27,7 @@\n \n final class TimeLockPaxosExecutors {\n     @VisibleForTesting\n-    static final int MAXIMUM_POOL_SIZE = 100;\n+    static final int MAXIMUM_POOL_SIZE = 384;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "779963b27bd3967a7e6454389d083744edcb33ed"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5994303ba329c1489d95e2a7c09baa2ea6f9c506", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/5994303ba329c1489d95e2a7c09baa2ea6f9c506", "committedDate": "2020-07-16T09:13:09Z", "message": "fixes part 1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ca19cdeee4d6283e5a52eebb6819de50b6bbd7c", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/1ca19cdeee4d6283e5a52eebb6819de50b6bbd7c", "committedDate": "2020-07-16T09:13:09Z", "message": "adapters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "317905123516dd88049d823a972d8265e0ecd3c9", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/317905123516dd88049d823a972d8265e0ecd3c9", "committedDate": "2020-07-16T09:13:09Z", "message": "Kill sharedexecutor part 1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "684910e00a32b46e3f09af6427ae549e86b38a72", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/684910e00a32b46e3f09af6427ae549e86b38a72", "committedDate": "2020-07-16T09:13:09Z", "message": "Out damned SharedExecutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee50d8a3f100d7835492e45bfdfe8cf1ce098c10", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/ee50d8a3f100d7835492e45bfdfe8cf1ce098c10", "committedDate": "2020-07-16T09:13:10Z", "message": "Burn things all down"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa4e37bf41238df56d8252c2bf5aaacfbda35b9b", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/fa4e37bf41238df56d8252c2bf5aaacfbda35b9b", "committedDate": "2020-07-16T09:13:10Z", "message": "more things"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc7f12a86e4f83fab61b2530950ebd11b19bb068", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/bc7f12a86e4f83fab61b2530950ebd11b19bb068", "committedDate": "2020-07-16T09:13:10Z", "message": "Hard block some tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50031825758b34df0c9bfe5bf3ea06eb8861d4d0", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/50031825758b34df0c9bfe5bf3ea06eb8861d4d0", "committedDate": "2020-07-16T09:13:10Z", "message": "Undo hyper-aggressive stress test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dae79d136c61b12e86fb32173337c1043d5b26b", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/5dae79d136c61b12e86fb32173337c1043d5b26b", "committedDate": "2020-07-16T09:13:10Z", "message": "fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f4675e6c10ab2098198c1c69ea2d654b3d92441", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/8f4675e6c10ab2098198c1c69ea2d654b3d92441", "committedDate": "2020-07-16T09:13:10Z", "message": "Increase threshold to 384"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "775e9e2564aa7c4efa80c7bd55257439255d7c34", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/775e9e2564aa7c4efa80c7bd55257439255d7c34", "committedDate": "2020-07-16T09:13:10Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0d43bf2becf66d0a44e35620a5220f13341db4", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/aa0d43bf2becf66d0a44e35620a5220f13341db4", "committedDate": "2020-07-16T09:13:10Z", "message": "Fix bug with leader pinger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "779963b27bd3967a7e6454389d083744edcb33ed", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/779963b27bd3967a7e6454389d083744edcb33ed", "committedDate": "2020-07-15T16:47:04Z", "message": "Fix bug with leader pinger"}, "afterCommit": {"oid": "aa0d43bf2becf66d0a44e35620a5220f13341db4", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/aa0d43bf2becf66d0a44e35620a5220f13341db4", "committedDate": "2020-07-16T09:13:10Z", "message": "Fix bug with leader pinger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6622f673a8e0b89509beb0d772637180d65cc86", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/d6622f673a8e0b89509beb0d772637180d65cc86", "committedDate": "2020-07-16T09:14:54Z", "message": "Autorelease 0.237.1-rc1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3dc29a8d955f9fd491a406eaac984ad5fd94df4", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/f3dc29a8d955f9fd491a406eaac984ad5fd94df4", "committedDate": "2020-07-16T15:21:25Z", "message": "CR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abae6a0370eb3acb4478d3f505e77e334d10ac9", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/6abae6a0370eb3acb4478d3f505e77e334d10ac9", "committedDate": "2020-07-17T13:21:12Z", "message": "New changelog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTIzMDM5", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-450923039", "createdAt": "2020-07-17T19:58:18Z", "commit": {"oid": "6abae6a0370eb3acb4478d3f505e77e334d10ac9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTo1ODoxOFrOGzfhXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTo1OTo1OFrOGzfkQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NzAwNQ==", "bodyText": "Sorry I missed in this before, why not use WithDedicatedExecutor.convert(learners.all())?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r456647005", "createdAt": "2020-07-17T19:58:18Z", "author": {"login": "sudiksha27"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/AutobatchingPaxosLearnerNetworkClientFactory.java", "diffHunk": "@@ -52,20 +55,37 @@ private AutobatchingPaxosLearnerNetworkClientFactory(\n         this.getLearnedValuesSince = getLearnedValuesSince;\n     }\n \n-    public static AutobatchingPaxosLearnerNetworkClientFactory create(\n+    public static AutobatchingPaxosLearnerNetworkClientFactory createForTests(\n             LocalAndRemotes<BatchPaxosLearner> learners,\n-            ExecutorService executor,\n+            ExecutorService executorService,\n+            int quorumSize) {\n+        return create(\n+                learners.map(batchPaxosLearner -> WithDedicatedExecutor.of(batchPaxosLearner, executorService)),\n+                quorumSize);\n+    }\n+\n+    public static AutobatchingPaxosLearnerNetworkClientFactory create(\n+            LocalAndRemotes<WithDedicatedExecutor<BatchPaxosLearner>> learners,\n             int quorumSize) {\n         DisruptorAutobatcher<Map.Entry<Client, PaxosValue>, PaxosResponse> learn =\n-                Autobatchers.coalescing(new LearnCoalescingConsumer(learners.local(), learners.remotes(), executor))\n+                Autobatchers.coalescing(new LearnCoalescingConsumer(learners.local(), learners.remotes()))\n                         .safeLoggablePurpose(\"batch-paxos-learner.learn\")\n                         .build();\n \n+        Map<BatchPaxosLearner, ExecutorService> executors = KeyedStream.of(learners.all())\n+                .map(WithDedicatedExecutor::executor)\n+                .mapKeys(WithDedicatedExecutor::service)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6abae6a0370eb3acb4478d3f505e77e334d10ac9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0Nzc0NA==", "bodyText": "Use copy of keyset from executors?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r456647744", "createdAt": "2020-07-17T19:59:58Z", "author": {"login": "sudiksha27"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/AutobatchingPaxosLearnerNetworkClientFactory.java", "diffHunk": "@@ -52,20 +55,37 @@ private AutobatchingPaxosLearnerNetworkClientFactory(\n         this.getLearnedValuesSince = getLearnedValuesSince;\n     }\n \n-    public static AutobatchingPaxosLearnerNetworkClientFactory create(\n+    public static AutobatchingPaxosLearnerNetworkClientFactory createForTests(\n             LocalAndRemotes<BatchPaxosLearner> learners,\n-            ExecutorService executor,\n+            ExecutorService executorService,\n+            int quorumSize) {\n+        return create(\n+                learners.map(batchPaxosLearner -> WithDedicatedExecutor.of(batchPaxosLearner, executorService)),\n+                quorumSize);\n+    }\n+\n+    public static AutobatchingPaxosLearnerNetworkClientFactory create(\n+            LocalAndRemotes<WithDedicatedExecutor<BatchPaxosLearner>> learners,\n             int quorumSize) {\n         DisruptorAutobatcher<Map.Entry<Client, PaxosValue>, PaxosResponse> learn =\n-                Autobatchers.coalescing(new LearnCoalescingConsumer(learners.local(), learners.remotes(), executor))\n+                Autobatchers.coalescing(new LearnCoalescingConsumer(learners.local(), learners.remotes()))\n                         .safeLoggablePurpose(\"batch-paxos-learner.learn\")\n                         .build();\n \n+        Map<BatchPaxosLearner, ExecutorService> executors = KeyedStream.of(learners.all())\n+                .map(WithDedicatedExecutor::executor)\n+                .mapKeys(WithDedicatedExecutor::service)\n+                .collectToMap();\n+        List<BatchPaxosLearner> remotes = learners.all()\n+                .stream()\n+                .map(WithDedicatedExecutor::service)\n+                .collect(Collectors.toList());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6abae6a0370eb3acb4478d3f505e77e334d10ac9"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ea8c2ac6d50c636608d013394e4f4c633447bd6", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/9ea8c2ac6d50c636608d013394e4f4c633447bd6", "committedDate": "2020-07-20T10:27:29Z", "message": "CR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07bed38e9685c37591811093a0c26e16d4a87459", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/07bed38e9685c37591811093a0c26e16d4a87459", "committedDate": "2020-07-20T13:57:15Z", "message": "Autorelease 0.237.1-rc2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddd2d7440dacf29193b740cb4b7ba06214adcdeb", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/ddd2d7440dacf29193b740cb4b7ba06214adcdeb", "committedDate": "2020-07-20T13:57:15Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjM1OTU2", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-451635956", "createdAt": "2020-07-20T14:03:12Z", "commit": {"oid": "ddd2d7440dacf29193b740cb4b7ba06214adcdeb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMzoxMlrOG0OXHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDoxMDo0N1rOG0OzrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxNDQyOQ==", "bodyText": "nit: while this follows the above, normal usage is e instead of ex, including in other places in this PR.", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r457414429", "createdAt": "2020-07-20T14:03:12Z", "author": {"login": "Jolyon-S"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/SingleLeaderPinger.java", "diffHunk": "@@ -72,15 +73,17 @@ public LeaderPingResult pingLeaderWithUuid(UUID uuid) {\n         MultiplexingCompletionService<LeaderPingerContext<PingableLeader>, Boolean> multiplexingCompletionService\n                 = MultiplexingCompletionService.create(leaderPingExecutors);\n \n-        multiplexingCompletionService.submit(leader, () -> leader.pinger().ping());\n-\n         try {\n+            multiplexingCompletionService.submit(leader, () -> leader.pinger().ping());\n             Future<Map.Entry<LeaderPingerContext<PingableLeader>, Boolean>> pingFuture = multiplexingCompletionService\n                     .poll(leaderPingResponseWait.toMillis(), TimeUnit.MILLISECONDS);\n             return getLeaderPingResult(uuid, pingFuture);\n         } catch (InterruptedException ex) {\n             Thread.currentThread().interrupt();\n             return LeaderPingResults.pingCallFailure(ex);\n+        } catch (RejectedExecutionException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddd2d7440dacf29193b740cb4b7ba06214adcdeb"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQyMTc0MA==", "bodyText": "A quick search across Atlas shows this is the last SharedExecutor (at least by name). Presumably we're good to leave this one in?", "url": "https://github.com/palantir/atlasdb/pull/4896#discussion_r457421740", "createdAt": "2020-07-20T14:10:47Z", "author": {"login": "Jolyon-S"}, "path": "timelock-agent/src/main/java/com/palantir/timelock/paxos/LockCreator.java", "diffHunk": "@@ -31,8 +31,7 @@\n     private final Supplier<TimeLockRuntimeConfiguration> runtime;\n     private final long blockingTimeoutMs;\n     private final Semaphore sharedThreadPool;\n-    private final ExecutorService sharedExecutor = PTExecutors\n-            .newCachedThreadPool(LockServiceImpl.class.getName());\n+    private final ExecutorService sharedExecutor = PTExecutors.newCachedThreadPool(LockServiceImpl.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddd2d7440dacf29193b740cb4b7ba06214adcdeb"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzUxNzI2", "url": "https://github.com/palantir/atlasdb/pull/4896#pullrequestreview-452351726", "createdAt": "2020-07-21T11:08:41Z", "commit": {"oid": "ddd2d7440dacf29193b740cb4b7ba06214adcdeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "332ffa04c07707edbb12dafce7e882a8b1f5a89c", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/332ffa04c07707edbb12dafce7e882a8b1f5a89c", "committedDate": "2020-07-21T11:08:46Z", "message": "ex -> e"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2733, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}