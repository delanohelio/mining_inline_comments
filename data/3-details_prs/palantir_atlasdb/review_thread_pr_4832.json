{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMDY3ODI5", "number": 4832, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMTowMFrOEEroJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDoxOTo1NVrOEFAgyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ0NTUwOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/AtlasDbDialogueServiceProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMTowMFrOGidHlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMTowMFrOGidHlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4MTg0Nw==", "bodyText": "this is the correct place!", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438781847", "createdAt": "2020-06-11T13:31:00Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/AtlasDbDialogueServiceProvider.java", "diffHunk": "@@ -101,7 +104,8 @@ ConjureTimelockService getConjureTimelockService() {\n                         taggedMetricRegistry,\n                         ConjureTimelockServiceBlocking.class,\n                         service))\n-                .map(DialogueAdaptingConjureTimelockService::new);\n+                .map(instrumentedService -> new DialogueAdaptingConjureTimelockService(instrumentedService,\n+                        conjureTimelockServiceBlockingMetrics));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ0NjM3OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMToxMVrOGidIJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMToxMVrOGidIJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4MTk4OQ==", "bodyText": "nit: please put this in alphabetical order with the others", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438781989", "createdAt": "2020-06-11T13:31:11Z", "author": {"login": "jeremyk-91"}, "path": "build.gradle", "diffHunk": "@@ -24,6 +24,7 @@ buildscript {\n         classpath 'com.netflix.nebula:nebula-publishing-plugin:17.2.1'\n         classpath 'gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0'\n         classpath 'gradle.plugin.org.inferred:gradle-processors:3.3.0'\n+        classpath 'com.palantir.metricschema:gradle-metric-schema:0.5.5'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ0NzY1OnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMToyN1rOGidI6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMToyN1rOGidI6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4MjE4Nw==", "bodyText": "Should we also instrument leaderTime?", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438782187", "createdAt": "2020-06-11T13:31:27Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "diffHunk": "@@ -36,15 +39,23 @@\n \n public class DialogueAdaptingConjureTimelockService implements ConjureTimelockService {\n     private final ConjureTimelockServiceBlocking dialogueDelegate;\n+    private final ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics;\n \n-    public DialogueAdaptingConjureTimelockService(ConjureTimelockServiceBlocking dialogueDelegate) {\n+    public DialogueAdaptingConjureTimelockService(ConjureTimelockServiceBlocking dialogueDelegate,\n+            ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics) {\n         this.dialogueDelegate = dialogueDelegate;\n+        this.conjureTimelockServiceBlockingMetrics = conjureTimelockServiceBlockingMetrics;\n     }\n \n     @Override\n     public ConjureStartTransactionsResponse startTransactions(AuthHeader authHeader, String namespace,\n             ConjureStartTransactionsRequest request) {\n-        return dialogueDelegate.startTransactions(authHeader, namespace, request);\n+        long timeCreated = System.currentTimeMillis();\n+        ConjureStartTransactionsResponse response = dialogueDelegate.startTransactions(authHeader, namespace, request);\n+        long microsSinceCreation = TimeUnit.MILLISECONDS.toMicros(System.currentTimeMillis() - timeCreated);\n+        this.conjureTimelockServiceBlockingMetrics.startTransactions().update(microsSinceCreation,\n+                TimeUnit.MICROSECONDS);\n+        return response;\n     }\n \n     @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ0OTczOnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMTo0OFrOGidKLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozMTo0OFrOGidKLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4MjUxMA==", "bodyText": "What happens if a request takes 3.7 ms?\nI'd suggest we use Instant.now() instead \ud83d\ude04", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438782510", "createdAt": "2020-06-11T13:31:48Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "diffHunk": "@@ -36,15 +39,23 @@\n \n public class DialogueAdaptingConjureTimelockService implements ConjureTimelockService {\n     private final ConjureTimelockServiceBlocking dialogueDelegate;\n+    private final ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics;\n \n-    public DialogueAdaptingConjureTimelockService(ConjureTimelockServiceBlocking dialogueDelegate) {\n+    public DialogueAdaptingConjureTimelockService(ConjureTimelockServiceBlocking dialogueDelegate,\n+            ConjureTimelockServiceBlockingMetrics conjureTimelockServiceBlockingMetrics) {\n         this.dialogueDelegate = dialogueDelegate;\n+        this.conjureTimelockServiceBlockingMetrics = conjureTimelockServiceBlockingMetrics;\n     }\n \n     @Override\n     public ConjureStartTransactionsResponse startTransactions(AuthHeader authHeader, String namespace,\n             ConjureStartTransactionsRequest request) {\n-        return dialogueDelegate.startTransactions(authHeader, namespace, request);\n+        long timeCreated = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ2NDIzOnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/metrics/metric-schema.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozNDoxMFrOGidS-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozNDoxMFrOGidS-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4NDc2MQ==", "bodyText": "nit: I'd just use com.palantir.lock.client since that's where the ConjureTimelockServiceBlocking exists", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438784761", "createdAt": "2020-06-11T13:34:10Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/metrics/metric-schema.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+options:\n+  javaPackage: 'com.palantir.atlasdb.timelock.api'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzQ3MDM1OnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/metrics/metric-schema.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozNTowOFrOGidWnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozNTowOFrOGidWnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4NTY5NQ==", "bodyText": "The fact that this logs a p99 and rate is encoded in the information that we have a timer. I think it's enough to say \"how long it takes to get leaderTime from timelock\" or something", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r438785695", "createdAt": "2020-06-11T13:35:08Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/metrics/metric-schema.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+options:\n+  javaPackage: 'com.palantir.atlasdb.timelock.api'\n+\n+namespaces:\n+  conjureTimelockServiceBlocking:\n+    docs: Metrics helpful for timeLock adjudication.\n+    metrics:\n+      leaderTime:\n+        type: timer\n+        docs: p99 and rate for leaderTime endpoint on timeLock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62fe414c3a84bbe7fe42f0b2e6925ac89ddb3a3b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjg2NzI4OnYy", "diffSide": "RIGHT", "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDoxOTo1NVrOGi-2mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMDoxOTo1NVrOGi-2mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMzNDU1Mg==", "bodyText": "nit: We don't normally use this when referring to fields (outside of assigning them in a constructor, or if they are needed e.g. when referencing things from a parent class outside of an inner class).", "url": "https://github.com/palantir/atlasdb/pull/4832#discussion_r439334552", "createdAt": "2020-06-12T10:19:55Z", "author": {"login": "jeremyk-91"}, "path": "lock-api/src/main/java/com/palantir/lock/client/DialogueAdaptingConjureTimelockService.java", "diffHunk": "@@ -85,4 +90,10 @@ public GetCommitTimestampsResponse getCommitTimestamps(AuthHeader authHeader, St\n             GetCommitTimestampsRequest request) {\n         return dialogueDelegate.getCommitTimestamps(authHeader, namespace, request);\n     }\n+\n+    private <T> T executeInTimerContext(Supplier<T> supplier) {\n+        try (Timer.Context timer = this.conjureTimelockServiceBlockingMetrics.startTransactions().time()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e747b93cbad3185054f09370e3d1ff81a2b94215"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2939, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}