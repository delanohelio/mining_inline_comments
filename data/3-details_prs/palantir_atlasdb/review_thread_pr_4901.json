{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMDU5NzMx", "number": 4901, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNDo0M1rOEPGlNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjo0MTowMVrOEPHJOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjcxOTI1OnYy", "diffSide": "RIGHT", "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/TimeLockPaxosExecutors.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNDo0M1rOGyoNWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNDo0M1rOGyoNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MDc2MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/palantir/atlasdb/pull/4901#discussion_r455740760", "createdAt": "2020-07-16T12:14:43Z", "author": {"login": "sudiksha27"}, "path": "timelock-agent/src/main/java/com/palantir/atlasdb/timelock/paxos/TimeLockPaxosExecutors.java", "diffHunk": "@@ -39,15 +40,17 @@ private TimeLockPaxosExecutors() {\n      *\n      * It is assumed that tasks run on the local node will return quickly (hence the use of the direct executor).\n      */\n-    static <T> Map<T, ExecutorService> createBoundedExecutors(\n-            MetricRegistry metricRegistry, LocalAndRemotes<T> localAndRemotes, String useCase) {\n+    static <T> Map<T, CheckedRejectionExecutorService> createBoundedExecutors(\n+            LocalAndRemotes<T> localAndRemotes, String useCase) {\n         int numRemotes = localAndRemotes.remotes().size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c593b2c3f7a583401a8fbcdc251905ee893300fc"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjcyNzQzOnYy", "diffSide": "RIGHT", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/AutobatchingPaxosAcceptorNetworkClientFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNzowMFrOGyoSMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjoxNzowMFrOGyoSMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc0MjAwMA==", "bodyText": "nit: there are unused imports in some other places as well where ExecutorService is replaced by CheckedRejectionExecutorService", "url": "https://github.com/palantir/atlasdb/pull/4901#discussion_r455742000", "createdAt": "2020-07-16T12:17:00Z", "author": {"login": "sudiksha27"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/AutobatchingPaxosAcceptorNetworkClientFactory.java", "diffHunk": "@@ -28,6 +28,7 @@\n import com.google.common.util.concurrent.ListenableFuture;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c593b2c3f7a583401a8fbcdc251905ee893300fc"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MjgxMTQ1OnYy", "diffSide": "RIGHT", "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosQuorumCheckingCoalescingFunction.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMjo0MTowMVrOGypF2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNToyNzo1NFrOGywWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NTIyNw==", "bodyText": "Where is this used?", "url": "https://github.com/palantir/atlasdb/pull/4901#discussion_r455755227", "createdAt": "2020-07-16T12:41:01Z", "author": {"login": "sudiksha27"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosQuorumCheckingCoalescingFunction.java", "diffHunk": "@@ -111,7 +112,7 @@ private PaxosQuorumCheckingCoalescingFunction(\n     public static <REQ, RESP extends PaxosResponse, SERVICE, F extends CoalescingRequestFunction<REQ, RESP>>\n     PaxosQuorumCheckingCoalescingFunction<REQ, RESP, F> wrapWithRemotes(\n             List<SERVICE> services,\n-            Map<SERVICE, ExecutorService> executors,\n+            Map<SERVICE, CheckedRejectionExecutorService> executors,\n             int quorumSize,\n             Function<SERVICE, F> functionFactory) {\n         List<FunctionAndExecutor<F>> functionsAndExecutors = KeyedStream.of(services)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c593b2c3f7a583401a8fbcdc251905ee893300fc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg3NDA1MA==", "bodyText": "Ah, I guess it's not. Well spotted. I'll remove this.", "url": "https://github.com/palantir/atlasdb/pull/4901#discussion_r455874050", "createdAt": "2020-07-16T15:27:54Z", "author": {"login": "jeremyk-91"}, "path": "timelock-impl/src/main/java/com/palantir/atlasdb/timelock/paxos/PaxosQuorumCheckingCoalescingFunction.java", "diffHunk": "@@ -111,7 +112,7 @@ private PaxosQuorumCheckingCoalescingFunction(\n     public static <REQ, RESP extends PaxosResponse, SERVICE, F extends CoalescingRequestFunction<REQ, RESP>>\n     PaxosQuorumCheckingCoalescingFunction<REQ, RESP, F> wrapWithRemotes(\n             List<SERVICE> services,\n-            Map<SERVICE, ExecutorService> executors,\n+            Map<SERVICE, CheckedRejectionExecutorService> executors,\n             int quorumSize,\n             Function<SERVICE, F> functionFactory) {\n         List<FunctionAndExecutor<F>> functionsAndExecutors = KeyedStream.of(services)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc1NTIyNw=="}, "originalCommit": {"oid": "c593b2c3f7a583401a8fbcdc251905ee893300fc"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2728, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}