{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzk2Nzgw", "number": 5032, "title": "[TS] Parallelism is nice and should be respected", "bodyText": "Goals (and why):\nFix a bug that caused TS to always run with a single thread only\nImplementation Description (bullets):\nThe scheduled executor now uses a core pool size equal to the install configs. The logic for scaling parallelism has been removed because ScheduledExecutorService does not create threads beyond core pool size.\nTesting (What was existing testing like?  What have you done to improve it?):\nExisting tests, added metrics for pauseMillis so we can ensure it works correctly.\nConcerns (what feedback would you like?):\nShould be pretty straightforward\nWhere should we start reviewing?:\nPriority (whenever / two weeks / yesterday):\nyou know it", "createdAt": "2020-10-14T13:59:36Z", "url": "https://github.com/palantir/atlasdb/pull/5032", "merged": true, "mergeCommit": {"oid": "9164e40dfcbb00c28e03ce7439be552242f7aaeb"}, "closed": true, "closedAt": "2020-10-14T16:18:00Z", "author": {"login": "gmaretic"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSdGFhAH2gAyNTAzMzk2NzgwOmJiM2I4NzQzYWJiOTdjMmQwZGYyZjYzODhiOWIzMjI2MjcxOTlkMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSfnWzgFqTUwODUwODU3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb3b8743abb97c2d0df2f6388b9b322627199d16", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/bb3b8743abb97c2d0df2f6388b9b322627199d16", "committedDate": "2020-10-14T13:21:46Z", "message": "Initial change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54c51ff3d6210e3a3197c646ad4b3202c7f50d6a", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/54c51ff3d6210e3a3197c646ad4b3202c7f50d6a", "committedDate": "2020-10-14T13:59:01Z", "message": "Add metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51aaccbc47153588f864a548cac64647be793179", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/51aaccbc47153588f864a548cac64647be793179", "committedDate": "2020-10-14T14:29:58Z", "message": "Add metrics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MzgzNTA2", "url": "https://github.com/palantir/atlasdb/pull/5032#pullrequestreview-508383506", "createdAt": "2020-10-14T14:05:05Z", "commit": {"oid": "54c51ff3d6210e3a3197c646ad4b3202c7f50d6a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowNTowNVrOHhUxXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozNTo1OFrOHhWR0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNTM3Mw==", "bodyText": "If I understand correctly, this just updates a metric? Can you rename to updateSweepDelayMetric to make sure it is unambiguous?\nAlso, will this be an expensive metric? Just making sure we're not going back to our old $$$ ways.", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504705373", "createdAt": "2020-10-14T14:05:05Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/TargetedSweepMetrics.java", "diffHunk": "@@ -137,6 +137,10 @@ public void registerEntriesReadInBatch(ShardAndStrategy shardStrategy, long batc\n         updateMetricsIfPresent(shardStrategy, metrics -> metrics.registerEntriesReadInBatch(batchSize));\n     }\n \n+    public void updateSweepDelay(ShardAndStrategy shardStrategy, long delay) {\n+        updateMetricsIfPresent(shardStrategy, metrics -> metrics.updateSweepDelay(delay));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c51ff3d6210e3a3197c646ad4b3202c7f50d6a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNTYxMg==", "bodyText": "nit: as above, rename to sweepDelayMetric", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504705612", "createdAt": "2020-10-14T14:05:21Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/TargetedSweepMetrics.java", "diffHunk": "@@ -172,6 +176,7 @@ private static String getTagForStrategy(SweeperStrategy strategy) {\n         private final Gauge<Long> millisSinceLastSwept;\n         private final SweepOutcomeMetrics outcomeMetrics;\n         private final SlidingWindowMeanGauge batchSizeMean;\n+        private final CurrentValueMetric<Long> sweepDelay;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54c51ff3d6210e3a3197c646ad4b3202c7f50d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyODY1NA==", "bodyText": "nit: overloaded methods should be next to each other", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504728654", "createdAt": "2020-10-14T14:34:25Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/TargetedSweepMetrics.java", "diffHunk": "@@ -278,13 +285,17 @@ private void updateProgressForShard(int shard, long sweptTs) {\n             lastSweptTs.update(shard, sweptTs);\n         }\n \n-        public void registerOccurrenceOf(SweepOutcome outcome) {\n+        private void registerOccurrenceOf(SweepOutcome outcome) {\n             outcomeMetrics.registerOccurrenceOf(outcome);\n         }\n \n-        public void registerEntriesReadInBatch(long batchSize) {\n+        private void registerEntriesReadInBatch(long batchSize) {\n             batchSizeMean.update(batchSize);\n         }\n+\n+        private void updateSweepDelay(long delay) {\n+            sweepDelay.setValue(delay);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51aaccbc47153588f864a548cac64647be793179"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDczMDA2Nw==", "bodyText": "Can we get a numThreads metric? Does that still scale?", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504730067", "createdAt": "2020-10-14T14:35:58Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/metrics/targeted-sweep.yml", "diffHunk": "@@ -49,3 +49,8 @@ namespaces:\n         tags:\n           - strategy\n         docs: Mean number of entries read in a batch from the targeted sweep queue.\n+      sweepDelay:\n+        type: gauge\n+        tags:\n+          - strategy\n+        docs: The latest delay between iterations of targeted sweep.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51aaccbc47153588f864a548cac64647be793179"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9cc35d3487a64ce5d04db60675d243211e624f", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/df9cc35d3487a64ce5d04db60675d243211e624f", "committedDate": "2020-10-14T14:41:29Z", "message": "add filtering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4143ca4cdbe1fa1d718b0c1ae00c0edb5c9b29b", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/d4143ca4cdbe1fa1d718b0c1ae00c0edb5c9b29b", "committedDate": "2020-10-14T15:06:34Z", "message": "Do not set metric initially to fix janky tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff0f2d48485d3d0b19afdaed24062e6cb92e24a6", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/ff0f2d48485d3d0b19afdaed24062e6cb92e24a6", "committedDate": "2020-10-14T15:17:06Z", "message": "Address some comments, fix JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "596dbd2e6a9f0b84214ef6627ec9fb1d007b61b6", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/596dbd2e6a9f0b84214ef6627ec9fb1d007b61b6", "committedDate": "2020-10-14T15:17:06Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9013dd15527e0b478b7e6dcbd5f4a4525c76decf", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/9013dd15527e0b478b7e6dcbd5f4a4525c76decf", "committedDate": "2020-10-14T15:23:30Z", "message": "STYLE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/872b88af248dc9fe999b61487df7f520b8467ad1", "committedDate": "2020-10-14T15:23:46Z", "message": "Merge branch 'ts/fix-threads' of github.com:palantir/atlasdb into ts/fix-threads"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDc0Njky", "url": "https://github.com/palantir/atlasdb/pull/5032#pullrequestreview-508474692", "createdAt": "2020-10-14T15:32:44Z", "commit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozMjo0NVrOHhZBAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNTozMjo0NVrOHhZBAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3NDkxNA==", "bodyText": "This was passing because it was 1 \ud83d\ude13", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504774914", "createdAt": "2020-10-14T15:32:45Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/sweep/queue/SweepDelayTest.java", "diffHunk": "@@ -33,69 +34,81 @@\n             .success((BATCH_CELLS_LOW_THRESHOLD + SWEEP_BATCH_SIZE) / 2);\n     private static final long INITIAL_DELAY = 250L;\n \n-    private SweepDelay delay = new SweepDelay(INITIAL_DELAY);\n+    private final AtomicLong metrics = new AtomicLong();\n+    private SweepDelay delay = new SweepDelay(INITIAL_DELAY, metrics::set);\n \n     @Test\n     public void iterationWithNormalBatchReturnsInitialPause() {\n         assertThat(delay.getNextPause(SUCCESS)).isEqualTo(INITIAL_DELAY);\n+        assertThat(metrics).hasValue(INITIAL_DELAY);\n     }\n \n     @Test\n     public void configurationBelowMinimumIsSetToMinimum() {\n-        SweepDelay negativeDelay = new SweepDelay(-5L);\n+        SweepDelay negativeDelay = new SweepDelay(-5L, metrics::set);\n \n         assertThat(negativeDelay.getNextPause(SUCCESS)).isEqualTo(MIN_PAUSE_MILLIS);\n+        assertThat(metrics).hasValue(MIN_PAUSE_MILLIS);\n     }\n \n     @Test\n     public void configurationAboveDefaultMaximumIsRespected() {\n-        SweepDelay largeDelay = new SweepDelay(2 * DEFAULT_MAX_PAUSE_MILLIS);\n+        SweepDelay largeDelay = new SweepDelay(2 * DEFAULT_MAX_PAUSE_MILLIS, metrics::set);\n \n         assertThat(largeDelay.getNextPause(SUCCESS)).isEqualTo(2 * DEFAULT_MAX_PAUSE_MILLIS);\n+        assertThat(metrics).hasValue(2 * DEFAULT_MAX_PAUSE_MILLIS);\n     }\n \n     @Test\n     public void unableToAcquireShardReturnsMaxPause() {\n         assertThat(delay.getNextPause(SweepIterationResults.unableToAcquireShard()))\n                 .isEqualTo(DEFAULT_MAX_PAUSE_MILLIS);\n+        assertThat(metrics).hasValue(DEFAULT_MAX_PAUSE_MILLIS);\n     }\n \n     @Test\n     public void insufficientConsistencyReturnsBackoff() {\n         assertThat(delay.getNextPause(SweepIterationResults.insufficientConsistency())).isEqualTo(BACKOFF);\n+        assertThat(metrics).hasValue(BACKOFF);\n     }\n \n     @Test\n     public void otherErrorReturnsMaxPause() {\n         assertThat(delay.getNextPause(SweepIterationResults.otherError())).isEqualTo(DEFAULT_MAX_PAUSE_MILLIS);\n+        assertThat(metrics).hasValue(DEFAULT_MAX_PAUSE_MILLIS);\n     }\n \n     @Test\n     public void disabledReturnsBackoff() {\n         assertThat(delay.getNextPause(SweepIterationResults.disabled())).isEqualTo(BACKOFF);\n+        assertThat(metrics).hasValue(BACKOFF);\n     }\n \n     @Test\n     public void iterationWithSmallBatchIncreasesPause() {\n         assertThat(delay.getNextPause(SUCCESS_TOO_FAST)).isGreaterThan(INITIAL_DELAY);\n+        assertThat(metrics).hasValueGreaterThan(INITIAL_DELAY);\n     }\n \n     @Test\n     public void iterationWithFullBatchReducesPause() {\n         assertThat(delay.getNextPause(SUCCESS_TOO_SLOW)).isLessThan(INITIAL_DELAY);\n+        assertThat(metrics).hasValueLessThan(INITIAL_DELAY);\n     }\n \n     @Test\n     public void consistentSmallBatchesGravitatesTowardsMaximumPause() {\n         sweepTwentyIterationsWithResult(SUCCESS_TOO_FAST);\n         assertThat(delay.getNextPause(SUCCESS_TOO_FAST))\n                 .isGreaterThanOrEqualTo((long) (DEFAULT_MAX_PAUSE_MILLIS * 0.95));\n+        assertThat(metrics).hasValueGreaterThanOrEqualTo((long) (DEFAULT_MAX_PAUSE_MILLIS * 0.95));\n     }\n \n     @Test\n     public void consistentFullBatchesGravitatesTowardsMinimumPause() {\n         sweepTwentyIterationsWithResult(SUCCESS_TOO_SLOW);\n-        assertThat(delay.getNextPause(SUCCESS_TOO_SLOW)).isGreaterThanOrEqualTo((long) (MIN_PAUSE_MILLIS * 1.05));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTA4NTc1", "url": "https://github.com/palantir/atlasdb/pull/5032#pullrequestreview-508508575", "createdAt": "2020-10-14T16:08:45Z", "commit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjowODo0NVrOHhamIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNjoxMTo1MFrOHhaueA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwMDgwMA==", "bodyText": "\ud83d\ude22", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504800800", "createdAt": "2020-10-14T16:08:45Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/AtlasDbMetricNames.java", "diffHunk": "@@ -73,7 +74,8 @@ private CellFilterMetrics() {\n             SWEEP_TS,\n             LAST_SWEPT_TS,\n             LAG_MILLIS,\n-            BATCH_SIZE_MEAN);\n+            BATCH_SIZE_MEAN,\n+            SWEEP_DELAY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwMTA2MA==", "bodyText": "ping \ud83d\ude05", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504801060", "createdAt": "2020-10-14T16:09:09Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/metrics/TargetedSweepMetrics.java", "diffHunk": "@@ -172,6 +176,7 @@ private static String getTagForStrategy(SweeperStrategy strategy) {\n         private final Gauge<Long> millisSinceLastSwept;\n         private final SweepOutcomeMetrics outcomeMetrics;\n         private final SlidingWindowMeanGauge batchSizeMean;\n+        private final CurrentValueMetric<Long> sweepDelay;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNTYxMg=="}, "originalCommit": {"oid": "54c51ff3d6210e3a3197c646ad4b3202c7f50d6a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgwMjkzNg==", "bodyText": "nit: this name is a bit meh, I would normally name this like sweepDelayMetricsUpdater or something. Not too concerned as it's in the SweepDelay class.", "url": "https://github.com/palantir/atlasdb/pull/5032#discussion_r504802936", "createdAt": "2020-10-14T16:11:50Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/sweep/queue/SweepDelay.java", "diffHunk": "@@ -41,11 +42,13 @@\n \n     private final long initialPause;\n     private final long maxPauseMillis;\n+    private final LongConsumer updateMetrics;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872b88af248dc9fe999b61487df7f520b8467ad1"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2646, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}