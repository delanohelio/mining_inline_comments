{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NjI1Njgy", "number": 4723, "title": "Use refreshable for runtime config", "bodyText": "Goals (and why):\nShould allow us to remove CachedComposingSupplier class (in separate PR) and simplify diff in #4706.\nImplementation Description (bullets):\nTesting (What was existing testing like?  What have you done to improve it?):\nConcerns (what feedback would you like?):\nWhere should we start reviewing?:\nPriority (whenever / two weeks / yesterday):", "createdAt": "2020-04-21T11:54:04Z", "url": "https://github.com/palantir/atlasdb/pull/4723", "merged": true, "mergeCommit": {"oid": "19cbbbca5667f4498daeaaec0277d5861bbde69f"}, "closed": true, "closedAt": "2020-04-22T12:45:53Z", "author": {"login": "jkozlowski"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZyVciAH2gAyNDA2NjI1NjgyOmVkNWRjYzQxNmQ0MDdiZjIxYTE2OThhZjQ0NmM5MzY4ODlhZjIwMmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaHY_sgFqTM5ODEzNTE5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed5dcc416d407bf21a1698af446c936889af202e", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/ed5dcc416d407bf21a1698af446c936889af202e", "committedDate": "2020-04-21T11:52:52Z", "message": "Mostly there."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ca655051704ae32280bcc3c5493f05509c8de27", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/0ca655051704ae32280bcc3c5493f05509c8de27", "committedDate": "2020-04-21T11:57:08Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/ec50f30351e1fa17835d70dabd6bde561e01beb6", "committedDate": "2020-04-21T11:59:16Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjU5MDU0", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397259054", "createdAt": "2020-04-21T12:00:00Z", "commit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMDowMFrOGJB62A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMDowMFrOGJB62A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMTgxNg==", "bodyText": "This isn't ideal, but if this occurs the application is doing something really rather bad.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412121816", "createdAt": "2020-04-21T12:00:00Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/ConfigRefreshable.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.factory;\n+\n+\n+import java.time.Duration;\n+import java.util.Optional;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.config.AtlasDbRuntimeConfig;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.logsafe.exceptions.SafeRuntimeException;\n+import com.palantir.refreshable.DefaultRefreshable;\n+import com.palantir.refreshable.Refreshable;\n+\n+final class ConfigRefreshable implements AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(ConfigRefreshable.class);\n+    private static final Duration REFRESH_INTERVAL = Duration.ofSeconds(1);\n+\n+    private final Refreshable<Optional<AtlasDbRuntimeConfig>> delegate;\n+    private final Runnable closer;\n+\n+    private ConfigRefreshable(\n+            Refreshable<Optional<AtlasDbRuntimeConfig>> delegate,\n+            Runnable closer) {\n+        this.delegate = delegate;\n+        this.closer = closer;\n+    }\n+\n+    public Refreshable<Optional<AtlasDbRuntimeConfig>> refreshable() {\n+        return delegate;\n+    }\n+\n+    @Override\n+    public void close() {\n+        closer.run();\n+    }\n+\n+    static ConfigRefreshable wrap(Refreshable<Optional<AtlasDbRuntimeConfig>> delegate) {\n+        return new ConfigRefreshable(delegate, () -> {});\n+    }\n+\n+    @SuppressWarnings(\"FutureReturnValueIgnored\")\n+    static ConfigRefreshable createPolling(Supplier<Optional<AtlasDbRuntimeConfig>> config) {\n+        DefaultRefreshable<Optional<AtlasDbRuntimeConfig>> refreshable = new DefaultRefreshable<>(call(config));\n+\n+        ScheduledExecutorService executor = PTExecutors.newSingleThreadScheduledExecutor();\n+        executor.scheduleWithFixedDelay(\n+                () -> {\n+                    try {\n+                        refreshable.update(config.get());\n+                    } catch (Throwable e) {\n+                        // This should not occur in practice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjU5Nzc3", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397259777", "createdAt": "2020-04-21T12:01:06Z", "commit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMTowNlrOGJB9gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMTowNlrOGJB9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMjQ5Nw==", "bodyText": "This change should be fine, the autogenerated immutables class should still have the same #runtimeConfigSupplier(Supplier) method, so should not be a break for users.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412122497", "createdAt": "2020-04-21T12:01:06Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -202,10 +202,13 @@\n \n     abstract AtlasDbConfig config();\n \n-    @Value.Default\n-    Supplier<Optional<AtlasDbRuntimeConfig>> runtimeConfigSupplier() {\n-        return Optional::empty;\n-    }\n+    abstract Optional<Refreshable<Optional<AtlasDbRuntimeConfig>>> runtimeConfig();\n+\n+    /**\n+     * @deprecated use {@link #runtimeConfig} instead.\n+     */\n+    @Deprecated\n+    abstract Optional<Supplier<Optional<AtlasDbRuntimeConfig>>> runtimeConfigSupplier();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjYwMTE1", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397260115", "createdAt": "2020-04-21T12:01:34Z", "commit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMTozNFrOGJB-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMTozNFrOGJB-2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMjg0Mg==", "bodyText": "This maintains the current setup, where it's possible to not provide the runtime config (used for InMemory configuration).", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412122842", "createdAt": "2020-04-21T12:01:34Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -279,6 +282,12 @@ LockWatchingCache lockWatchingCache() {\n         thread.start();\n     };\n \n+    @Value.Check\n+    protected void check() {\n+        Preconditions.checkState(!(runtimeConfigSupplier().isPresent() && runtimeConfig().isPresent()),\n+                \"Either Refreshable or Supplier of runtime config must be provided or none, but not both\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MjYwNzU3", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397260757", "createdAt": "2020-04-21T12:02:34Z", "commit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMjozNFrOGJCBJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjowMjozNFrOGJCBJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMzQyOA==", "bodyText": "I removed all uses of Suppliers.compose in this class.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412123428", "createdAt": "2020-04-21T12:02:34Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -375,11 +388,11 @@ private TransactionManager serializableInternal(@Output List<AutoCloseable> clos\n \n             // Even if sweep queue writes are enabled, unless targeted sweep is enabled we generally still want to\n             // at least retain the option to perform background sweep, which requires updating the priority table.\n-            if (!targetedSweepIsFullyEnabled()) {\n+            if (!targetedSweepIsFullyEnabled(config(), runtime)) {\n                 kvs = SweepStatsKeyValueService.create(kvs,\n                         new TimelockTimestampServiceAdapter(lockAndTimestampServices.timelock()),\n-                        Suppliers.compose(SweepConfig::writeThreshold, sweepConfig::get),\n-                        Suppliers.compose(SweepConfig::writeSizeThreshold, sweepConfig::get)\n+                        sweepConfig.map(SweepConfig::writeThreshold),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2047fbd0aee4fcbbe92eb834713dd2308f1edb6", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/a2047fbd0aee4fcbbe92eb834713dd2308f1edb6", "committedDate": "2020-04-21T12:11:56Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f505a26164f3c3cba32420b1986f34e3345ef53e", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/f505a26164f3c3cba32420b1986f34e3345ef53e", "committedDate": "2020-04-21T12:12:11Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc02955babc7055a937b95ea95bc9c5dd1821b50", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/bc02955babc7055a937b95ea95bc9c5dd1821b50", "committedDate": "2020-04-21T12:30:47Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NDIyMzA0", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397422304", "createdAt": "2020-04-21T15:03:10Z", "commit": {"oid": "bc02955babc7055a937b95ea95bc9c5dd1821b50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTowMzoxMFrOGJKq0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNTowMzoxMFrOGJKq0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI2NTE3MQ==", "bodyText": "Seems kinda odd to wrap the refreshable in this way. I think it was expose a way to convert a supplier to an optional using some executor, and handle the lifecycle of the executor seperately", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412265171", "createdAt": "2020-04-21T15:03:10Z", "author": {"login": "ferozco"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/ConfigRefreshable.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.factory;\n+\n+\n+import java.time.Duration;\n+import java.util.Optional;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.palantir.atlasdb.config.AtlasDbRuntimeConfig;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.logsafe.exceptions.SafeRuntimeException;\n+import com.palantir.refreshable.DefaultRefreshable;\n+import com.palantir.refreshable.Refreshable;\n+\n+final class ConfigRefreshable implements AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(ConfigRefreshable.class);\n+    private static final Duration REFRESH_INTERVAL = Duration.ofSeconds(1);\n+\n+    private final Refreshable<Optional<AtlasDbRuntimeConfig>> delegate;\n+    private final Runnable closer;\n+\n+    private ConfigRefreshable(\n+            Refreshable<Optional<AtlasDbRuntimeConfig>> delegate,\n+            Runnable closer) {\n+        this.delegate = delegate;\n+        this.closer = closer;\n+    }\n+\n+    public Refreshable<Optional<AtlasDbRuntimeConfig>> refreshable() {\n+        return delegate;\n+    }\n+\n+    @Override\n+    public void close() {\n+        closer.run();\n+    }\n+\n+    static ConfigRefreshable wrap(Refreshable<Optional<AtlasDbRuntimeConfig>> delegate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc02955babc7055a937b95ea95bc9c5dd1821b50"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "080237ad7c5663ced2d176b4bb6c03aab5475e69", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/080237ad7c5663ced2d176b4bb6c03aab5475e69", "committedDate": "2020-04-21T19:19:30Z", "message": "Better shutdown."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "495c0afa18d5726b053e0886a7425cec7fccaa32", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/495c0afa18d5726b053e0886a7425cec7fccaa32", "committedDate": "2020-04-21T19:35:02Z", "message": "Tighten the impl, don't expose unnecessary things."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f481f13e73c7768a26df544668a386734364d801", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/f481f13e73c7768a26df544668a386734364d801", "committedDate": "2020-04-21T19:35:02Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjIyMzQy", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397622342", "createdAt": "2020-04-21T19:47:16Z", "commit": {"oid": "f481f13e73c7768a26df544668a386734364d801"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxNlrOGJVkXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxNlrOGJVkXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc0Mg==", "bodyText": "Famous last words: the danger here is that we write some sort of weird update code (since DefaultRefreshable.update propagates to all the children) and this throws, and we won't find out about it. This is a bit of a change in behavior, but I don't feel strongly that this is such high risk.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412443742", "createdAt": "2020-04-21T19:47:16Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/AtlasDbRuntimeConfigRefreshable.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.factory;\n+\n+\n+import java.time.Duration;\n+import java.util.Optional;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.palantir.atlasdb.config.AtlasDbRuntimeConfig;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.logsafe.exceptions.SafeRuntimeException;\n+import com.palantir.refreshable.DefaultRefreshable;\n+import com.palantir.refreshable.Refreshable;\n+\n+final class AtlasDbRuntimeConfigRefreshable implements AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(AtlasDbRuntimeConfigRefreshable.class);\n+    private static final Duration REFRESH_INTERVAL = Duration.ofSeconds(1);\n+    private static final Duration GRACEFUL_SHUTDOWN = Duration.ofSeconds(5);\n+    private static final AtlasDbRuntimeConfig DEFAULT_RUNTIME = AtlasDbRuntimeConfig.defaultRuntimeConfig();\n+\n+    private final Refreshable<AtlasDbRuntimeConfig> delegate;\n+    private final Runnable closer;\n+\n+    private AtlasDbRuntimeConfigRefreshable(\n+            Refreshable<Optional<AtlasDbRuntimeConfig>> delegate,\n+            Runnable closer) {\n+        this.delegate = delegate.map(config -> config.orElse(DEFAULT_RUNTIME));\n+        this.closer = closer;\n+    }\n+\n+    public Refreshable<AtlasDbRuntimeConfig> config() {\n+        return delegate;\n+    }\n+\n+    @Override\n+    public void close() {\n+        closer.run();\n+    }\n+\n+    static AtlasDbRuntimeConfigRefreshable create(TransactionManagers builder) {\n+        return builder.runtimeConfig()\n+                .map(AtlasDbRuntimeConfigRefreshable::wrap)\n+                .orElseGet(() -> {\n+                    Supplier<Optional<AtlasDbRuntimeConfig>> runtimeConfig = builder.runtimeConfigSupplier()\n+                            .orElse(Optional::empty);\n+                    return AtlasDbRuntimeConfigRefreshable.createPolling(runtimeConfig);\n+                });\n+    }\n+\n+    private static AtlasDbRuntimeConfigRefreshable wrap(Refreshable<Optional<AtlasDbRuntimeConfig>> delegate) {\n+        return new AtlasDbRuntimeConfigRefreshable(delegate, () -> {\n+        });\n+    }\n+\n+    @SuppressWarnings(\"FutureReturnValueIgnored\")\n+    private static AtlasDbRuntimeConfigRefreshable createPolling(Supplier<Optional<AtlasDbRuntimeConfig>> config) {\n+        DefaultRefreshable<Optional<AtlasDbRuntimeConfig>> refreshable = new DefaultRefreshable<>(call(config));\n+\n+        ScheduledExecutorService executor = PTExecutors.newSingleThreadScheduledExecutor();\n+        executor.scheduleWithFixedDelay(\n+                () -> {\n+                    try {\n+                        refreshable.update(config.get());\n+                    } catch (Throwable e) {\n+                        // This should not occur in practice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f481f13e73c7768a26df544668a386734364d801"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41eedd86888e2e76d5566bdc9e0987770500b77c", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/41eedd86888e2e76d5566bdc9e0987770500b77c", "committedDate": "2020-04-21T19:49:42Z", "message": "Message."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjIyMzk0", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-397622394", "createdAt": "2020-04-21T19:47:21Z", "commit": {"oid": "f481f13e73c7768a26df544668a386734364d801"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoyMVrOGJVkig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozMzo1MlrOGJXTFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc4Ng==", "bodyText": "Is this intentional? Seems strange that we'd deliberately make this not live reload", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412443786", "createdAt": "2020-04-21T19:47:21Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/debug/TransactionPostMortemRunner.java", "diffHunk": "@@ -69,7 +70,7 @@ public TransactionPostMortemRunner(\n             TransactionManager transactionManager,\n             TableReference tableReference,\n             AtlasDbConfig install,\n-            Supplier<AtlasDbRuntimeConfig> runtime,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f481f13e73c7768a26df544668a386734364d801"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2MTk2MQ==", "bodyText": "I guess my bigger concern is if someone calls txMgr.runtimeConfigSupplier() though a code search suggests that no one does so.\nIf someone did (especially if that someone is one of our friendly supporting libs) that would be a spicy break \ud83d\udd25but thankfully looks like that's not the case.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412461961", "createdAt": "2020-04-21T20:16:54Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -202,10 +202,13 @@\n \n     abstract AtlasDbConfig config();\n \n-    @Value.Default\n-    Supplier<Optional<AtlasDbRuntimeConfig>> runtimeConfigSupplier() {\n-        return Optional::empty;\n-    }\n+    abstract Optional<Refreshable<Optional<AtlasDbRuntimeConfig>>> runtimeConfig();\n+\n+    /**\n+     * @deprecated use {@link #runtimeConfig} instead.\n+     */\n+    @Deprecated\n+    abstract Optional<Supplier<Optional<AtlasDbRuntimeConfig>>> runtimeConfigSupplier();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMjQ5Nw=="}, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2MjMyOA==", "bodyText": "nit: probably enough to just say Cannot provide both Refreshable and Supplier of runtime config?", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412462328", "createdAt": "2020-04-21T20:17:36Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -279,6 +282,12 @@ LockWatchingCache lockWatchingCache() {\n         thread.start();\n     };\n \n+    @Value.Check\n+    protected void check() {\n+        Preconditions.checkState(!(runtimeConfigSupplier().isPresent() && runtimeConfig().isPresent()),\n+                \"Either Refreshable or Supplier of runtime config must be provided or none, but not both\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjEyMjg0Mg=="}, "originalCommit": {"oid": "ec50f30351e1fa17835d70dabd6bde561e01beb6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2NzcyMg==", "bodyText": "I think you drive-by fixed a bug here! Previously if you don't specify a runtime config, targeted sweep is enabled in practice, but the check here thinks it is disabled. Now it correctly recognises that targeted sweep is enabled by default.", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412467722", "createdAt": "2020-04-21T20:26:34Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -538,9 +550,11 @@ TransactionConfig withConsolidatedGrabImmutableTsLockFlag(TransactionConfig tran\n \n     }\n \n-    private boolean targetedSweepIsFullyEnabled() {\n-        return config().targetedSweep().enableSweepQueueWrites()\n-                && runtimeConfigSupplier().get().map(config -> config.targetedSweep().enabled()).orElse(false);\n+    private static boolean targetedSweepIsFullyEnabled(\n+            AtlasDbConfig installConfig,\n+            Supplier<AtlasDbRuntimeConfig> runtime) {\n+        return installConfig.targetedSweep().enableSweepQueueWrites()\n+                && runtime.get().targetedSweep().enabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41eedd86888e2e76d5566bdc9e0987770500b77c"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ2ODU4Nw==", "bodyText": "nit: I'd prefer warn, this is probably not super actionable for us?", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412468587", "createdAt": "2020-04-21T20:28:03Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/AtlasDbRuntimeConfigRefreshable.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.factory;\n+\n+\n+import java.time.Duration;\n+import java.util.Optional;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.palantir.atlasdb.config.AtlasDbRuntimeConfig;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.logsafe.exceptions.SafeRuntimeException;\n+import com.palantir.refreshable.DefaultRefreshable;\n+import com.palantir.refreshable.Refreshable;\n+\n+final class AtlasDbRuntimeConfigRefreshable implements AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(AtlasDbRuntimeConfigRefreshable.class);\n+    private static final Duration REFRESH_INTERVAL = Duration.ofSeconds(1);\n+    private static final Duration GRACEFUL_SHUTDOWN = Duration.ofSeconds(5);\n+    private static final AtlasDbRuntimeConfig DEFAULT_RUNTIME = AtlasDbRuntimeConfig.defaultRuntimeConfig();\n+\n+    private final Refreshable<AtlasDbRuntimeConfig> delegate;\n+    private final Runnable closer;\n+\n+    private AtlasDbRuntimeConfigRefreshable(\n+            Refreshable<Optional<AtlasDbRuntimeConfig>> delegate,\n+            Runnable closer) {\n+        this.delegate = delegate.map(config -> config.orElse(DEFAULT_RUNTIME));\n+        this.closer = closer;\n+    }\n+\n+    public Refreshable<AtlasDbRuntimeConfig> config() {\n+        return delegate;\n+    }\n+\n+    @Override\n+    public void close() {\n+        closer.run();\n+    }\n+\n+    static AtlasDbRuntimeConfigRefreshable create(TransactionManagers builder) {\n+        return builder.runtimeConfig()\n+                .map(AtlasDbRuntimeConfigRefreshable::wrap)\n+                .orElseGet(() -> {\n+                    Supplier<Optional<AtlasDbRuntimeConfig>> runtimeConfig = builder.runtimeConfigSupplier()\n+                            .orElse(Optional::empty);\n+                    return AtlasDbRuntimeConfigRefreshable.createPolling(runtimeConfig);\n+                });\n+    }\n+\n+    private static AtlasDbRuntimeConfigRefreshable wrap(Refreshable<Optional<AtlasDbRuntimeConfig>> delegate) {\n+        return new AtlasDbRuntimeConfigRefreshable(delegate, () -> {\n+        });\n+    }\n+\n+    @SuppressWarnings(\"FutureReturnValueIgnored\")\n+    private static AtlasDbRuntimeConfigRefreshable createPolling(Supplier<Optional<AtlasDbRuntimeConfig>> config) {\n+        DefaultRefreshable<Optional<AtlasDbRuntimeConfig>> refreshable = new DefaultRefreshable<>(call(config));\n+\n+        ScheduledExecutorService executor = PTExecutors.newSingleThreadScheduledExecutor();\n+        executor.scheduleWithFixedDelay(\n+                () -> {\n+                    try {\n+                        refreshable.update(config.get());\n+                    } catch (Throwable e) {\n+                        // This should not occur in practice\n+                        log.error(\"Failed to reload runtime config\", e);\n+                    }\n+                },\n+                REFRESH_INTERVAL.toNanos(),\n+                REFRESH_INTERVAL.toNanos(),\n+                TimeUnit.NANOSECONDS);\n+\n+        return new AtlasDbRuntimeConfigRefreshable(refreshable, () -> {\n+            if (!MoreExecutors.shutdownAndAwaitTermination(\n+                    executor, GRACEFUL_SHUTDOWN.toMillis(), TimeUnit.MILLISECONDS)) {\n+                log.error(\"Executor did not terminate within graceful shutdown duration\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41eedd86888e2e76d5566bdc9e0987770500b77c"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MjA4Ng==", "bodyText": "Not sure I follow: do we mean a subscriber? If a subscriber throws it does look like the world could be in an inconsistent state, but right now I think we're fine", "url": "https://github.com/palantir/atlasdb/pull/4723#discussion_r412472086", "createdAt": "2020-04-21T20:33:52Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/AtlasDbRuntimeConfigRefreshable.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.factory;\n+\n+\n+import java.time.Duration;\n+import java.util.Optional;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.palantir.atlasdb.config.AtlasDbRuntimeConfig;\n+import com.palantir.common.concurrent.PTExecutors;\n+import com.palantir.logsafe.exceptions.SafeRuntimeException;\n+import com.palantir.refreshable.DefaultRefreshable;\n+import com.palantir.refreshable.Refreshable;\n+\n+final class AtlasDbRuntimeConfigRefreshable implements AutoCloseable {\n+\n+    private static final Logger log = LoggerFactory.getLogger(AtlasDbRuntimeConfigRefreshable.class);\n+    private static final Duration REFRESH_INTERVAL = Duration.ofSeconds(1);\n+    private static final Duration GRACEFUL_SHUTDOWN = Duration.ofSeconds(5);\n+    private static final AtlasDbRuntimeConfig DEFAULT_RUNTIME = AtlasDbRuntimeConfig.defaultRuntimeConfig();\n+\n+    private final Refreshable<AtlasDbRuntimeConfig> delegate;\n+    private final Runnable closer;\n+\n+    private AtlasDbRuntimeConfigRefreshable(\n+            Refreshable<Optional<AtlasDbRuntimeConfig>> delegate,\n+            Runnable closer) {\n+        this.delegate = delegate.map(config -> config.orElse(DEFAULT_RUNTIME));\n+        this.closer = closer;\n+    }\n+\n+    public Refreshable<AtlasDbRuntimeConfig> config() {\n+        return delegate;\n+    }\n+\n+    @Override\n+    public void close() {\n+        closer.run();\n+    }\n+\n+    static AtlasDbRuntimeConfigRefreshable create(TransactionManagers builder) {\n+        return builder.runtimeConfig()\n+                .map(AtlasDbRuntimeConfigRefreshable::wrap)\n+                .orElseGet(() -> {\n+                    Supplier<Optional<AtlasDbRuntimeConfig>> runtimeConfig = builder.runtimeConfigSupplier()\n+                            .orElse(Optional::empty);\n+                    return AtlasDbRuntimeConfigRefreshable.createPolling(runtimeConfig);\n+                });\n+    }\n+\n+    private static AtlasDbRuntimeConfigRefreshable wrap(Refreshable<Optional<AtlasDbRuntimeConfig>> delegate) {\n+        return new AtlasDbRuntimeConfigRefreshable(delegate, () -> {\n+        });\n+    }\n+\n+    @SuppressWarnings(\"FutureReturnValueIgnored\")\n+    private static AtlasDbRuntimeConfigRefreshable createPolling(Supplier<Optional<AtlasDbRuntimeConfig>> config) {\n+        DefaultRefreshable<Optional<AtlasDbRuntimeConfig>> refreshable = new DefaultRefreshable<>(call(config));\n+\n+        ScheduledExecutorService executor = PTExecutors.newSingleThreadScheduledExecutor();\n+        executor.scheduleWithFixedDelay(\n+                () -> {\n+                    try {\n+                        refreshable.update(config.get());\n+                    } catch (Throwable e) {\n+                        // This should not occur in practice", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc0Mg=="}, "originalCommit": {"oid": "f481f13e73c7768a26df544668a386734364d801"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12d68ca9b23f0f7eea1c8248adea40476c4b9673", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/12d68ca9b23f0f7eea1c8248adea40476c4b9673", "committedDate": "2020-04-21T21:33:30Z", "message": "Nit."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3841182d3c89561588f82efee84533e28fa7660d", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/3841182d3c89561588f82efee84533e28fa7660d", "committedDate": "2020-04-21T21:36:19Z", "message": "Fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c42d12635a3cd081732def8ad876f29af1f81a4d", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/c42d12635a3cd081732def8ad876f29af1f81a4d", "committedDate": "2020-04-21T21:42:18Z", "message": "Fixup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a251a1d90edfa9da9aaa7dde7d685844fc06f25", "author": {"user": {"login": "jkozlowski", "name": "Jakub Kozlowski"}}, "url": "https://github.com/palantir/atlasdb/commit/1a251a1d90edfa9da9aaa7dde7d685844fc06f25", "committedDate": "2020-04-21T21:47:18Z", "message": "Fixup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTM1MTky", "url": "https://github.com/palantir/atlasdb/pull/4723#pullrequestreview-398135192", "createdAt": "2020-04-22T12:24:45Z", "commit": {"oid": "1a251a1d90edfa9da9aaa7dde7d685844fc06f25"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3078, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}