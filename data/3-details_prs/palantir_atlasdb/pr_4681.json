{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0Njg5MDE1", "number": 4681, "title": "[PDS-114184] Make Atlas CLI Validate Step Use Many Transactions", "bodyText": "Goals (and why):\nCLI performs all validation for a given table in a single transaction. This PR aims to separate into many PRs instead. This is an alternative approach to #4680\nImplementation Description (bullets):\n\nPerform each getRange in a new transaction.\n\nTesting (What was existing testing like?  What have you done to improve it?):\nN/A\nConcerns (what feedback would you like?):\n\nThis will create lots of transactions (will this cause problems)?\nCorrectness - I assume that validation is only ever run when DB is offline, so the DB state should not change between transactions, but would like confirmation.\n\nWhere should we start reviewing?:\nKeyValueServiceValidator\nPriority (whenever / two weeks / yesterday):\nWithin a week", "createdAt": "2020-03-27T11:04:56Z", "url": "https://github.com/palantir/atlasdb/pull/4681", "merged": true, "mergeCommit": {"oid": "820f68579096f9617742cc3c3e713161f81965f8"}, "closed": true, "closedAt": "2020-07-28T13:01:07Z", "author": {"login": "Jolyon-S"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRun5EAH2gAyMzk0Njg5MDE1OjE5NmNiNmEyMDdkMDUwNWM3ODBjZDZkYTEyOWU1NzUzOWVkMjhlMGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5VG9_gH2gAyMzk0Njg5MDE1OjlkNDc1Yzc3M2U1YjZhMTQ5ZDljM2MzYWI2ODdhYmNjMDA0Y2E3OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "196cb6a207d0505c780cd6da129e57539ed28e0b", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/196cb6a207d0505c780cd6da129e57539ed28e0b", "committedDate": "2020-03-27T11:02:00Z", "message": "use many txns to validate instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92589ffbfb68052efaccd25bdd5b21468d2c85a9", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/92589ffbfb68052efaccd25bdd5b21468d2c85a9", "committedDate": "2020-03-27T11:02:00Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5428dd5f269dc99d66afe76618c387fced56965b", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/5428dd5f269dc99d66afe76618c387fced56965b", "committedDate": "2020-03-27T11:34:41Z", "message": "wrap in runtime exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3591f775af7e396175d5ff89bd3cc97d3ac88a4", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/d3591f775af7e396175d5ff89bd3cc97d3ac88a4", "committedDate": "2020-03-27T11:34:52Z", "message": "Merge branch 'validateManyTxns' of github.com:palantir/atlasdb into validateManyTxns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/5a2bd102d0a0d52ea3b89322ddba5b711540379c", "committedDate": "2020-03-27T11:37:08Z", "message": "remove unnecessary diff"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNzk5NjEz", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-382799613", "createdAt": "2020-03-27T12:07:37Z", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowNzozOFrOF8uW9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowNzozOFrOF8uW9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxODQyMg==", "bodyText": "Do you need this try-catch?", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399218422", "createdAt": "2020-03-27T12:07:38Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationFromTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t1 -> {\n-                    validateTable(table, limit, t1);\n-                    return null;\n-                });\n+        byte[] nextRowName = new byte[0];\n+        while (nextRowName != null) {\n+            nextRowName = validateNextRow(table, limit, nextRowName);\n+        }\n         KeyValueServiceMigratorUtils\n                 .processMessage(messageProcessor, \"Validated \" + table, KvsMigrationMessageLevel.INFO);\n     }\n \n-    private void validateTable(final TableReference table, final int limit, final Transaction t1) {\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationToTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t2 -> {\n-                    validateTable(table, limit, t1, t2);\n-                    return null;\n-                });\n-    }\n-\n-    private void validateTable(TableReference table, int limit, Transaction t1, Transaction t2) {\n-        RangeRequest.Builder builder = RangeRequest.builder().batchHint(limit);\n-        byte[] nextRowName = new byte[0];\n-        while (nextRowName != null) {\n-            RangeRequest range = builder.startRowInclusive(nextRowName).build();\n-            nextRowName = validateAndGetNextRowName(table, limit, t1, t2, range);\n+    private byte[] validateNextRow(TableReference table, int limit, byte[] nextRowName) {\n+        try {\n+            return validationFromTransactionManager.runTaskWithRetry(t1 ->\n+                    validationToTransactionManager.runTaskWithRetry(t2 -> {\n+                                RangeRequest range = RangeRequest.builder()\n+                                        .batchHint(limit)\n+                                        .startRowInclusive(nextRowName)\n+                                        .build();\n+                                return validateAndGetNextRowName(table, limit, t1, t2, range);\n+                            }\n+                    ));\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODAwMDU3", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-382800057", "createdAt": "2020-03-27T12:08:20Z", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowODoyMFrOF8uYeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowODoyMFrOF8uYeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxODgwOA==", "bodyText": "Can you keep this comment, it's pretty important.", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399218808", "createdAt": "2020-03-27T12:08:20Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODAwODc4", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-382800878", "createdAt": "2020-03-27T12:09:38Z", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowOTozOFrOF8ubEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjowOTozOFrOF8ubEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxOTQ3Mg==", "bodyText": "Feels like creating this range should belong in validateAndGetNextRowName", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399219472", "createdAt": "2020-03-27T12:09:38Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationFromTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t1 -> {\n-                    validateTable(table, limit, t1);\n-                    return null;\n-                });\n+        byte[] nextRowName = new byte[0];\n+        while (nextRowName != null) {\n+            nextRowName = validateNextRow(table, limit, nextRowName);\n+        }\n         KeyValueServiceMigratorUtils\n                 .processMessage(messageProcessor, \"Validated \" + table, KvsMigrationMessageLevel.INFO);\n     }\n \n-    private void validateTable(final TableReference table, final int limit, final Transaction t1) {\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationToTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t2 -> {\n-                    validateTable(table, limit, t1, t2);\n-                    return null;\n-                });\n-    }\n-\n-    private void validateTable(TableReference table, int limit, Transaction t1, Transaction t2) {\n-        RangeRequest.Builder builder = RangeRequest.builder().batchHint(limit);\n-        byte[] nextRowName = new byte[0];\n-        while (nextRowName != null) {\n-            RangeRequest range = builder.startRowInclusive(nextRowName).build();\n-            nextRowName = validateAndGetNextRowName(table, limit, t1, t2, range);\n+    private byte[] validateNextRow(TableReference table, int limit, byte[] nextRowName) {\n+        try {\n+            return validationFromTransactionManager.runTaskWithRetry(t1 ->\n+                    validationToTransactionManager.runTaskWithRetry(t2 -> {\n+                                RangeRequest range = RangeRequest.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODAzOTM0", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-382803934", "createdAt": "2020-03-27T12:14:32Z", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNDozMlrOF8ukqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxNDozMlrOF8ukqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMTkyOA==", "bodyText": "This change means that with default batch size, we'll do a transaction each 100 rows, so it will be probably quite slow, but probably fine.", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399221928", "createdAt": "2020-03-27T12:14:32Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationFromTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t1 -> {\n-                    validateTable(table, limit, t1);\n-                    return null;\n-                });\n+        byte[] nextRowName = new byte[0];\n+        while (nextRowName != null) {\n+            nextRowName = validateNextRow(table, limit, nextRowName);\n+        }\n         KeyValueServiceMigratorUtils\n                 .processMessage(messageProcessor, \"Validated \" + table, KvsMigrationMessageLevel.INFO);\n     }\n \n-    private void validateTable(final TableReference table, final int limit, final Transaction t1) {\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationToTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t2 -> {\n-                    validateTable(table, limit, t1, t2);\n-                    return null;\n-                });\n-    }\n-\n-    private void validateTable(TableReference table, int limit, Transaction t1, Transaction t2) {\n-        RangeRequest.Builder builder = RangeRequest.builder().batchHint(limit);\n-        byte[] nextRowName = new byte[0];\n-        while (nextRowName != null) {\n-            RangeRequest range = builder.startRowInclusive(nextRowName).build();\n-            nextRowName = validateAndGetNextRowName(table, limit, t1, t2, range);\n+    private byte[] validateNextRow(TableReference table, int limit, byte[] nextRowName) {\n+        try {\n+            return validationFromTransactionManager.runTaskWithRetry(t1 ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODAxMTA2", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-382801106", "createdAt": "2020-03-27T12:10:01Z", "commit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxMDowMVrOF8ub6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxMDoyNlrOF8uctw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxOTY4OQ==", "bodyText": "Please retain the comment on why this is runTaskWithRetry: it's non-obvious.", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399219689", "createdAt": "2020-03-27T12:10:01Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationFromTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t1 -> {\n-                    validateTable(table, limit, t1);\n-                    return null;\n-                });\n+        byte[] nextRowName = new byte[0];\n+        while (nextRowName != null) {\n+            nextRowName = validateNextRow(table, limit, nextRowName);\n+        }\n         KeyValueServiceMigratorUtils\n                 .processMessage(messageProcessor, \"Validated \" + table, KvsMigrationMessageLevel.INFO);\n     }\n \n-    private void validateTable(final TableReference table, final int limit, final Transaction t1) {\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationToTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t2 -> {\n-                    validateTable(table, limit, t1, t2);\n-                    return null;\n-                });\n-    }\n-\n-    private void validateTable(TableReference table, int limit, Transaction t1, Transaction t2) {\n-        RangeRequest.Builder builder = RangeRequest.builder().batchHint(limit);\n-        byte[] nextRowName = new byte[0];\n-        while (nextRowName != null) {\n-            RangeRequest range = builder.startRowInclusive(nextRowName).build();\n-            nextRowName = validateAndGetNextRowName(table, limit, t1, t2, range);\n+    private byte[] validateNextRow(TableReference table, int limit, byte[] nextRowName) {\n+        try {\n+            return validationFromTransactionManager.runTaskWithRetry(t1 ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIxOTg5NQ==", "bodyText": "nit: validateNextBatchOfRows / startRow for the param?", "url": "https://github.com/palantir/atlasdb/pull/4681#discussion_r399219895", "createdAt": "2020-03-27T12:10:26Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java", "diffHunk": "@@ -114,31 +113,27 @@ private void validateTables(Set<TableReference> tables) {\n \n     private void validateTable(final TableReference table) {\n         final int limit = getBatchSize(table);\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationFromTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t1 -> {\n-                    validateTable(table, limit, t1);\n-                    return null;\n-                });\n+        byte[] nextRowName = new byte[0];\n+        while (nextRowName != null) {\n+            nextRowName = validateNextRow(table, limit, nextRowName);\n+        }\n         KeyValueServiceMigratorUtils\n                 .processMessage(messageProcessor, \"Validated \" + table, KvsMigrationMessageLevel.INFO);\n     }\n \n-    private void validateTable(final TableReference table, final int limit, final Transaction t1) {\n-        // read only, but need to use a write tx in case the source table has SweepStrategy.THOROUGH\n-        validationToTransactionManager.runTaskWithRetry(\n-                (TransactionTask<Map<Cell, byte[]>, RuntimeException>) t2 -> {\n-                    validateTable(table, limit, t1, t2);\n-                    return null;\n-                });\n-    }\n-\n-    private void validateTable(TableReference table, int limit, Transaction t1, Transaction t2) {\n-        RangeRequest.Builder builder = RangeRequest.builder().batchHint(limit);\n-        byte[] nextRowName = new byte[0];\n-        while (nextRowName != null) {\n-            RangeRequest range = builder.startRowInclusive(nextRowName).build();\n-            nextRowName = validateAndGetNextRowName(table, limit, t1, t2, range);\n+    private byte[] validateNextRow(TableReference table, int limit, byte[] nextRowName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a2bd102d0a0d52ea3b89322ddba5b711540379c"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70c3ee59c22b657103541ee8ce8965293e463c3", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/e70c3ee59c22b657103541ee8ce8965293e463c3", "committedDate": "2020-07-13T11:43:59Z", "message": "Merge branch 'develop' into validateManyTxns\n\n# Conflicts:\n#\tatlasdb-impl-shared/src/main/java/com/palantir/atlasdb/schema/KeyValueServiceValidator.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8a6d29c2b44d2811cb66cb17748a9d79364692", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/cc8a6d29c2b44d2811cb66cb17748a9d79364692", "committedDate": "2020-07-13T11:45:30Z", "message": "merge in develop and action comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3124b9608a3bf8b8cbed9acd304b133e330e543", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/c3124b9608a3bf8b8cbed9acd304b133e330e543", "committedDate": "2020-07-20T10:23:45Z", "message": "Merge branch 'develop' into validateManyTxns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NTA3MjE4", "url": "https://github.com/palantir/atlasdb/pull/4681#pullrequestreview-456507218", "createdAt": "2020-07-28T10:33:58Z", "commit": {"oid": "c3124b9608a3bf8b8cbed9acd304b133e330e543"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d475c773e5b6a149d9c3c3ab687abcc004ca796", "author": {"user": {"login": "Jolyon-S", "name": "Jolyon"}}, "url": "https://github.com/palantir/atlasdb/commit/9d475c773e5b6a149d9c3c3ab687abcc004ca796", "committedDate": "2020-07-28T11:55:23Z", "message": "fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3021, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}