{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDE1NTQx", "number": 4605, "title": "[LW] Wire LW into TransactionStarter", "bodyText": "Goals (and why):\nWires in lock watch cache into transaction starter and lock watch manager into transaction manager. Also remove some unused APIs\nImplementation Description (bullets):\nMostly drudgery, the actual change is quite small. Still need to implement the actual cache etc\nTesting (What was existing testing like?  What have you done to improve it?):\nExisting tests in TransactionStarterTest\nConcerns (what feedback would you like?):\nIs there anything glaringly wrong?\nWhere should we start reviewing?:\nTransactionStarter.java and TransactionManagers.java\nPriority (whenever / two weeks / yesterday):\nToday", "createdAt": "2020-02-26T17:36:58Z", "url": "https://github.com/palantir/atlasdb/pull/4605", "merged": true, "mergeCommit": {"oid": "0d5bedcf003c6ebf885c3c254bc84e665e8b320f"}, "closed": true, "closedAt": "2020-03-04T15:29:27Z", "author": {"login": "gmaretic"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGIxlvAH2gAyMzgwNDE1NTQxOjg3NDBhYjliMGViOGU4ZGFmNGQyZDgxNTIyMzE3MzhkMDdkNDI0OGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKYllfAFqTM2ODg3MTE1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8740ab9b0eb8e8daf4d2d8152231738d07d4248e", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/8740ab9b0eb8e8daf4d2d8152231738d07d4248e", "committedDate": "2020-02-20T10:43:02Z", "message": "Be better, one day at a time. Also fix nasty concurrency issue."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c3a9d273d2ff4ec589001af51cb408ed67b14fa", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/2c3a9d273d2ff4ec589001af51cb408ed67b14fa", "committedDate": "2020-02-21T16:58:50Z", "message": "Rework lock watch updates and registration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d311fef3558808de8fa7bf90975ff50d3b7115d7", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/d311fef3558808de8fa7bf90975ff50d3b7115d7", "committedDate": "2020-02-24T10:46:42Z", "message": "Merge with develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121eada2e9528cbedc9c694d7067a0d8eea5421a", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/121eada2e9528cbedc9c694d7067a0d8eea5421a", "committedDate": "2020-02-24T11:34:03Z", "message": "Do not filter unlocks for replayer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "413cc995a5ed5ff3de45629bf34f778e663e3be1", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/413cc995a5ed5ff3de45629bf34f778e663e3be1", "committedDate": "2020-02-24T11:44:02Z", "message": "Add test for snapshot reflecting events logged during open locks calculation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b093ba27896ea55a417dd52e8b83f35f3bda01aa", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/b093ba27896ea55a417dd52e8b83f35f3bda01aa", "committedDate": "2020-02-25T16:15:37Z", "message": "Expose the interface that we need to get lock watch updates as an atlas client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958eb971d0dd8fbddc7d5a7bef31b7c31f8931e3", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/958eb971d0dd8fbddc7d5a7bef31b7c31f8931e3", "committedDate": "2020-02-26T11:32:22Z", "message": "Some refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a708a8a96a177980061d91573f57128730a9b8", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/f8a708a8a96a177980061d91573f57128730a9b8", "committedDate": "2020-02-26T11:36:21Z", "message": "Fix merge conflict with develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43507ab543f1255b3f0b04cb5df5b0394a61615", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/c43507ab543f1255b3f0b04cb5df5b0394a61615", "committedDate": "2020-02-26T16:55:22Z", "message": "Use lock watch start transactions endpoint for transaction starter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4b895474d65ec24f7528a0a8289cd25c0899f2", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/8e4b895474d65ec24f7528a0a8289cd25c0899f2", "committedDate": "2020-02-26T17:35:55Z", "message": "cheCKStyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f21531142ce90e3eb8660bf3ac02d196644cfa02", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/f21531142ce90e3eb8660bf3ac02d196644cfa02", "committedDate": "2020-03-03T11:50:40Z", "message": "Fix merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/97dc7094da47b409352c75e793c9ae8e1774decb", "committedDate": "2020-03-03T13:23:13Z", "message": "Remove unused endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTA2MDY2", "url": "https://github.com/palantir/atlasdb/pull/4605#pullrequestreview-368106066", "createdAt": "2020-03-03T16:01:34Z", "commit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjowMTozNFrOFxL-QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjowMTozNFrOFxL-QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyMDcwNA==", "bodyText": "can this ever be hit via api? can we just throw a Http level error? or have an exception mapper that captures said exception? otherwise we just get a 500", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387120704", "createdAt": "2020-03-03T16:01:34Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/NoOpLockWatchManager.java", "diffHunk": "@@ -17,30 +17,27 @@\n package com.palantir.atlasdb.keyvalue.api.watch;\n \n import java.util.Set;\n-import java.util.UUID;\n \n-import com.google.common.collect.ImmutableSet;\n import com.palantir.lock.watch.IdentifiedVersion;\n import com.palantir.lock.watch.LockWatchReferences;\n-import com.palantir.lock.watch.LockWatchStateUpdate;\n+import com.palantir.lock.watch.NoOpLockWatchEventCache;\n import com.palantir.lock.watch.TransactionsLockWatchEvents;\n \n public final class NoOpLockWatchManager implements LockWatchManager {\n     public static final LockWatchManager INSTANCE = new NoOpLockWatchManager();\n-    public static final TransactionsLockWatchEvents NONE = TransactionsLockWatchEvents.failure(\n-            LockWatchStateUpdate.snapshot(UUID.randomUUID(), 0L, ImmutableSet.of(), ImmutableSet.of()));\n \n     private NoOpLockWatchManager() {\n         // ...\n     }\n \n     @Override\n-    public void registerWatches(Set<LockWatchReferences.LockWatchReference> lockWatchEntries) {\n-        // noop\n+    public void registerWatches(Set<LockWatchReferences.LockWatchReference> lockWatchReferences) {\n+        throw new UnsupportedOperationException(\"Lock watch registration not supported\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTA4NjM0", "url": "https://github.com/palantir/atlasdb/pull/4605#pullrequestreview-368108634", "createdAt": "2020-03-03T16:04:37Z", "commit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "state": "COMMENTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjowNDozN1rOFxMGGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNjoyMDoxOVrOFxMyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyMjcxMg==", "bodyText": "why have this be optional if you have a noop version?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387122712", "createdAt": "2020-03-03T16:04:37Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1204,6 +1218,7 @@ private static MultiTableSweepQueueWriter uninitializedTargetedSweeper(\n         TimestampManagementService timestampManagement();\n         TimelockService timelock();\n         Optional<TimeLockMigrator> migrator();\n+        Optional<LockWatchManager> lockWatcher();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyMzcwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.timelockService = RemoteTimelockServiceAdapter.create(timelockService, conjureTimelockService,\n          \n          \n            \n                            NoOpLockWatchEventCache.INSTANCE);\n          \n          \n            \n                    this.timelockService = RemoteTimelockServiceAdapter.create(\n          \n          \n            \n                            timelockService, \n          \n          \n            \n                            conjureTimelockService,\n          \n          \n            \n                            NoOpLockWatchEventCache.INSTANCE);", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387123707", "createdAt": "2020-03-03T16:06:01Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-jepsen-tests/src/main/java/com/palantir/atlasdb/http/AsyncLockClient.java", "diffHunk": "@@ -38,7 +39,8 @@\n \n     private AsyncLockClient(NamespacedTimelockRpcClient timelockService,\n             NamespacedConjureTimelockService conjureTimelockService) {\n-        this.timelockService = RemoteTimelockServiceAdapter.create(timelockService, conjureTimelockService);\n+        this.timelockService = RemoteTimelockServiceAdapter.create(timelockService, conjureTimelockService,\n+                NoOpLockWatchEventCache.INSTANCE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNDMxOQ==", "bodyText": "how does this tie in with conjure objects? or this \"above\" the rpc layer so to speak?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387124319", "createdAt": "2020-03-03T16:06:54Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/v2/StartTransactionRequestV5.java", "diffHunk": "@@ -32,4 +32,13 @@\n     UUID requestorId();\n     OptionalLong lastKnownLockLogVersion();\n     int numTransactions();\n+\n+    static StartTransactionRequestV5 createForRequestor(UUID requestorId, OptionalLong lockVersion, int number) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNDQzNA==", "bodyText": "similar to above", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387124434", "createdAt": "2020-03-03T16:07:04Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/v2/StartTransactionResponseV5.java", "diffHunk": "@@ -40,4 +40,17 @@ static StartTransactionResponseV5 fromV4(StartTransactionResponseV4 v4response,\n                 .lockWatchUpdate(lockWatch)\n                 .build();\n     }\n+\n+    static StartTransactionResponseV5 of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNDU1NA==", "bodyText": "?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387124554", "createdAt": "2020-03-03T16:07:13Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/IdentifiedVersion.java", "diffHunk": "@@ -25,5 +26,5 @@\n     @Value.Parameter\n     UUID id();\n     @Value.Parameter\n-    long version();\n+    OptionalLong version();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNDk0NA==", "bodyText": "why is this class in lock-api-objects? it doesn't appear in an actual object does it..?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387124944", "createdAt": "2020-03-03T16:07:50Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/LockWatchingRpcClient.java", "diffHunk": "@@ -31,10 +31,6 @@\n     @Path(\"start-watching\")\n     void startWatching(@PathParam(\"namespace\") String namespace, LockWatchRequest lockWatchRequest);\n \n-    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNTI2Mg==", "bodyText": "similarly this class, likely a separate pr, but it's probably a bit misleading", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387125262", "createdAt": "2020-03-03T16:08:16Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NamespacedLockWatchingRpcClient.java", "diffHunk": "@@ -17,22 +17,18 @@\n package com.palantir.lock.watch;\n \n public class NamespacedLockWatchingRpcClient {\n-    private final String namespace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNTUyMg==", "bodyText": "revert?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387125522", "createdAt": "2020-03-03T16:08:39Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NamespacedLockWatchingRpcClient.java", "diffHunk": "@@ -17,22 +17,18 @@\n package com.palantir.lock.watch;\n \n public class NamespacedLockWatchingRpcClient {\n-    private final String namespace;\n     private final LockWatchingRpcClient lockWatchingRpcClient;\n+    private final String namespace;\n \n-    public NamespacedLockWatchingRpcClient(String namespace, LockWatchingRpcClient lockWatchingRpcClient) {\n-        this.namespace = namespace;\n+    public NamespacedLockWatchingRpcClient(LockWatchingRpcClient lockWatchingRpcClient, String namespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNjA3OQ==", "bodyText": "just make it final and use mock-maker-inline which can mock final types: https://www.baeldung.com/mockito-final", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387126079", "createdAt": "2020-03-03T16:09:27Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.watch;\n+\n+import java.util.OptionalLong;\n+import java.util.Set;\n+import java.util.UUID;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+@SuppressWarnings(\"FinalClass\") // mocks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNjQ5Ng==", "bodyText": "is this used in prod? or is this just used for tests, haven't really processed where everything is used just yet", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387126496", "createdAt": "2020-03-03T16:10:01Z", "author": {"login": "felixdesouza"}, "path": "lock-api-objects/src/main/java/com/palantir/lock/watch/NoOpLockWatchEventCache.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.lock.watch;\n+\n+import java.util.OptionalLong;\n+import java.util.Set;\n+import java.util.UUID;\n+\n+import com.google.common.collect.ImmutableSet;\n+\n+@SuppressWarnings(\"FinalClass\") // mocks", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyNjA3OQ=="}, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyODcxMA==", "bodyText": "this is weird? but I can't think of another way :S", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387128710", "createdAt": "2020-03-03T16:13:05Z", "author": {"login": "felixdesouza"}, "path": "lock-api/src/main/java/com/palantir/lock/client/LockLeaseService.java", "diffHunk": "@@ -88,6 +90,26 @@ StartTransactionResponseV4 startTransactions(int batchSize) {\n                 lease);\n     }\n \n+    StartTransactionResponseV5 startTransactionsWithWatches(OptionalLong version, int batchSize) {\n+        ConjureStartTransactionsRequest request = ConjureStartTransactionsRequest.builder()\n+                .requestorId(clientId)\n+                .requestId(UUID.randomUUID())\n+                .numTransactions(batchSize)\n+                .lastKnownVersion(version.isPresent() ? Optional.of(version.getAsLong()) : Optional.empty())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyOTYxNg==", "bodyText": "why even have it be OptionalLong if you're going to have to box unbox everywhere?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387129616", "createdAt": "2020-03-03T16:14:16Z", "author": {"login": "felixdesouza"}, "path": "lock-api/src/main/java/com/palantir/lock/client/LockLeaseService.java", "diffHunk": "@@ -88,6 +90,26 @@ StartTransactionResponseV4 startTransactions(int batchSize) {\n                 lease);\n     }\n \n+    StartTransactionResponseV5 startTransactionsWithWatches(OptionalLong version, int batchSize) {\n+        ConjureStartTransactionsRequest request = ConjureStartTransactionsRequest.builder()\n+                .requestorId(clientId)\n+                .requestId(UUID.randomUUID())\n+                .numTransactions(batchSize)\n+                .lastKnownVersion(version.isPresent() ? Optional.of(version.getAsLong()) : Optional.empty())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEyODcxMA=="}, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMDE0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        TimelockRpcClient rpcClient, ConjureTimelockService conjureClient, String timelockNamespace,\n          \n          \n            \n                        LockWatchEventCache lockWatchEventCache) {\n          \n          \n            \n                        TimelockRpcClient rpcClient, \n          \n          \n            \n                        ConjureTimelockService conjureClient, \n          \n          \n            \n                        String timelockNamespace,\n          \n          \n            \n                        LockWatchEventCache lockWatchEventCache) {", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387130144", "createdAt": "2020-03-03T16:15:00Z", "author": {"login": "felixdesouza"}, "path": "lock-api/src/main/java/com/palantir/lock/client/RemoteTimelockServiceAdapter.java", "diffHunk": "@@ -37,23 +38,27 @@\n     private final TransactionStarter transactionStarter;\n \n     private RemoteTimelockServiceAdapter(NamespacedTimelockRpcClient rpcClient,\n-            NamespacedConjureTimelockService conjureTimelockService) {\n+            NamespacedConjureTimelockService conjureTimelockService,\n+            LockWatchEventCache lockWatchEventCache) {\n         this.rpcClient = rpcClient;\n         this.lockLeaseService = LockLeaseService.create(rpcClient, conjureTimelockService);\n-        this.transactionStarter = TransactionStarter.create(lockLeaseService);\n+        this.transactionStarter = TransactionStarter.create(lockLeaseService, lockWatchEventCache);\n     }\n \n     public static RemoteTimelockServiceAdapter create(\n             NamespacedTimelockRpcClient rpcClient,\n-            NamespacedConjureTimelockService conjureClient) {\n-        return new RemoteTimelockServiceAdapter(rpcClient, conjureClient);\n+            NamespacedConjureTimelockService conjureClient,\n+            LockWatchEventCache lockWatchEventCache) {\n+        return new RemoteTimelockServiceAdapter(rpcClient, conjureClient, lockWatchEventCache);\n     }\n \n     public static RemoteTimelockServiceAdapter create(\n-            TimelockRpcClient rpcClient, ConjureTimelockService conjureClient, String timelockNamespace) {\n+            TimelockRpcClient rpcClient, ConjureTimelockService conjureClient, String timelockNamespace,\n+            LockWatchEventCache lockWatchEventCache) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMDUwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LockLeaseService lockLeaseService, LockWatchEventCache lockWatchEventCache,\n          \n          \n            \n                        int numberOfTransactions) {\n          \n          \n            \n                        LockLeaseService lockLeaseService, \n          \n          \n            \n                        LockWatchEventCache lockWatchEventCache,\n          \n          \n            \n                        int numberOfTransactions) {", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387130501", "createdAt": "2020-03-03T16:15:29Z", "author": {"login": "felixdesouza"}, "path": "lock-api/src/main/java/com/palantir/lock/client/TransactionStarter.java", "diffHunk": "@@ -152,15 +153,21 @@ public void close() {\n     }\n \n     private static List<StartIdentifiedAtlasDbTransactionResponse> getStartTransactionResponses(\n-            LockLeaseService lockLeaseService, int numberOfTransactions) {\n+            LockLeaseService lockLeaseService, LockWatchEventCache lockWatchEventCache,\n+            int numberOfTransactions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzMjU1Ng==", "bodyText": "as a meta point, if StartTransaction(Request|Response) is not transferred over the wire, can we get rid of the V5 etc?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387132556", "createdAt": "2020-03-03T16:18:23Z", "author": {"login": "felixdesouza"}, "path": "lock-api/src/test/java/com/palantir/lock/client/TransactionStarterTest.java", "diffHunk": "@@ -78,19 +96,19 @@ public void after() {\n \n     @Test\n     public void shouldDeriveStartTransactionResponseFromBatchedResponse_singleTransaction() {\n-        StartTransactionResponseV4 startTransactionResponse = getStartTransactionResponse(12, 1);\n+        StartTransactionResponseV5 startTransactionResponse = getStartTransactionResponse(12, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzEzNDA3Mw==", "bodyText": "it's unclear to me why you need this here? is this used anywhere? or are you only creating it here to be used inside timelockService above?", "url": "https://github.com/palantir/atlasdb/pull/4605#discussion_r387134073", "createdAt": "2020-03-03T16:20:19Z", "author": {"login": "felixdesouza"}, "path": "timelock-server/src/testCommon/java/com/palantir/atlasdb/timelock/NamespacedClients.java", "diffHunk": "@@ -59,7 +61,13 @@ static NamespacedClients from(String namespace, ProxyFactory proxyFactory) {\n     default TimelockService timelockService() {\n         return RemoteTimelockServiceAdapter.create(\n                 namespacedTimelockRpcClient(),\n-                namespacedConjureTimelockService());\n+                namespacedConjureTimelockService(),\n+                lockWatchEventCache());\n+    }\n+\n+    @Value.Default\n+    default LockWatchEventCache lockWatchEventCache() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97dc7094da47b409352c75e793c9ae8e1774decb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e9f34cc638edbbce2756fa725e57ee7fdefa43", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/27e9f34cc638edbbce2756fa725e57ee7fdefa43", "committedDate": "2020-03-03T18:07:11Z", "message": "Address CR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd37b83a32157e29ce3edfc3f7f3e8795024195", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/1bd37b83a32157e29ce3edfc3f7f3e8795024195", "committedDate": "2020-03-04T11:03:35Z", "message": "Merging with develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e28798845f07df9d78c0b229dffe2c860a264b90", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/e28798845f07df9d78c0b229dffe2c860a264b90", "committedDate": "2020-03-04T11:34:43Z", "message": "Merge with develop and fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7d68b19ac74ae56fcaf6366986488b9ebfdb0d7", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/a7d68b19ac74ae56fcaf6366986488b9ebfdb0d7", "committedDate": "2020-03-04T12:00:17Z", "message": "Fix compile break"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODcxMTU5", "url": "https://github.com/palantir/atlasdb/pull/4605#pullrequestreview-368871159", "createdAt": "2020-03-04T15:24:06Z", "commit": {"oid": "a7d68b19ac74ae56fcaf6366986488b9ebfdb0d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2298, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}