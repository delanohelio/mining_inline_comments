{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTA4OTgy", "number": 4846, "title": "[PD$-110002] CONTENTIOUS - Part 4: Redirect All Metrics To TaggedMetricRegistries", "bodyText": "Reviewable, but DO NOT MERGE: I want to do a quick smoke-test internally.\nGoals (and why):\n\nCollect AtlasDB's metrics neatly into a TaggedMetricSet so that filtering and pre-processing can be performed before they are released into the wild.\n\nImplementation Description (bullets):\n\nImplement DisjointUnionTaggedMetricSet which combines metrics.\nReorganise TransactionManagers to publish everything to the tagged metric registry.\n\nTesting (What was existing testing like?  What have you done to improve it?): DisjointUnionTaggedMetricSetTest. I will manually smoke-test with a service internally as well.\nConcerns (what feedback would you like?):\n\nAdding the origin tags is not really what I was going for (see palantir/metric-schema#288), but this change, and even the combination of this change and the metric-schema change will not add metric cardinality (both tags are applied to all metric-schema metrics, and this tag is applied to all existing AtlasDB metrics). I opted to avoid conflict with metric-schema's intended tag. Is that correct?\nIf users expect their metrics to be in specifically the untagged metric registry and try and read from it directly, that might cause pain. With that in mind, is this change too heavy-handed? Is that a reasonable use case?\nShould I just have added the Dropwizard metric set and the tagged metric set as two metrics sets, maybe atlasdb-tagged and atlasdb-untagged? I don't know if internal metrics platforms are good at performing disjunctive aggregations across tag values though.\n\nWhere should we start reviewing?: TransactionManagers\nPriority (whenever / two weeks / yesterday): this week", "createdAt": "2020-06-17T21:36:31Z", "url": "https://github.com/palantir/atlasdb/pull/4846", "merged": true, "mergeCommit": {"oid": "289a4c2602433af52fe5a79a835b911ef2031184"}, "closed": true, "closedAt": "2020-06-22T13:43:35Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsQrUmgH2gAyNDM2MTA4OTgyOjM1OGIyOGVlYmYwOTUxNGQ2MDZjMTc3MWM1YjkyMDU0NDJjZjNiMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsz4knAFqTQzNDExOTIxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "358b28eebf09514d606c1771c5b9205442cf3b22", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/358b28eebf09514d606c1771c5b9205442cf3b22", "committedDate": "2020-06-17T21:24:33Z", "message": "only used tagged MR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f081295f6385ad7e1fcce3358bbcb8ad408078f9", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/f081295f6385ad7e1fcce3358bbcb8ad408078f9", "committedDate": "2020-06-17T21:24:54Z", "message": "disjoint union set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9", "committedDate": "2020-06-17T21:35:15Z", "message": "pffty"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjY1NzIz", "url": "https://github.com/palantir/atlasdb/pull/4846#pullrequestreview-433265723", "createdAt": "2020-06-18T13:10:27Z", "commit": {"oid": "b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoxMDoyN1rOGlujzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoxMDoyN1rOGlujzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxMzMyNA==", "bodyText": "prefer first.forEachMetric as it's more performant", "url": "https://github.com/palantir/atlasdb/pull/4846#discussion_r442213324", "createdAt": "2020-06-18T13:10:27Z", "author": {"login": "iamdanfox"}, "path": "atlasdb-api/src/main/java/com/palantir/atlasdb/metrics/DisjointUnionTaggedMetricSet.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.metrics;\n+\n+import java.util.Map;\n+import java.util.function.BiConsumer;\n+\n+import com.codahale.metrics.Metric;\n+import com.google.common.collect.ImmutableMap;\n+import com.palantir.tritium.metrics.registry.MetricName;\n+import com.palantir.tritium.metrics.registry.TaggedMetricSet;\n+\n+/**\n+ * Combines two {@link TaggedMetricSet}s. It is expected that the metric names present from the two sets are disjoint.\n+ */\n+public class DisjointUnionTaggedMetricSet implements TaggedMetricSet {\n+    private final TaggedMetricSet first;\n+    private final TaggedMetricSet second;\n+\n+    public DisjointUnionTaggedMetricSet(TaggedMetricSet first, TaggedMetricSet second) {\n+        this.first = first;\n+        this.second = second;\n+    }\n+\n+    @Override\n+    public Map<MetricName, Metric> getMetrics() {\n+        return ImmutableMap.<MetricName, Metric>builder()\n+                .putAll(first.getMetrics())\n+                .putAll(second.getMetrics())\n+                .build();\n+    }\n+\n+    @Override\n+    public void forEachMetric(BiConsumer<MetricName, Metric> consumer) {\n+        first.getMetrics().forEach(consumer);\n+        second.getMetrics().forEach(consumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMjY4OTkw", "url": "https://github.com/palantir/atlasdb/pull/4846#pullrequestreview-433268990", "createdAt": "2020-06-18T13:14:05Z", "commit": {"oid": "b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoxNDowNlrOGlus5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzoxNDowNlrOGlus5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIxNTY1NQ==", "bodyText": "If we're going to ask datadog to make a new report itemizing costs, we need to make sure we use a consistent tag across all libraries. In the metric-schema PR, we're intending to use libraryName, so I don't think it will help much if you pick a different one", "url": "https://github.com/palantir/atlasdb/pull/4846#discussion_r442215655", "createdAt": "2020-06-18T13:14:06Z", "author": {"login": "iamdanfox"}, "path": "atlasdb-client/src/main/java/com/palantir/atlasdb/AtlasDbMetricNames.java", "diffHunk": "@@ -33,6 +33,9 @@ private CellFilterMetrics() {\n         public static final String EMPTY_VALUE = \"emptyValuesCellFilterCount\";\n     }\n \n+    public static final String LIBRARY_ORIGIN_TAG = \"libraryOrigin\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1088ed7f74d166c1e5a6faae6e31a8b6ba95ad9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aa7185c5ece04048e5820b65f8f684fa5f06bc1", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/5aa7185c5ece04048e5820b65f8f684fa5f06bc1", "committedDate": "2020-06-19T10:45:23Z", "message": "forEach in disjoint union"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62fd668bced384c17f8554586ccf121ace4577ab", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/62fd668bced384c17f8554586ccf121ace4577ab", "committedDate": "2020-06-19T10:45:23Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTE5MjE1", "url": "https://github.com/palantir/atlasdb/pull/4846#pullrequestreview-434119215", "createdAt": "2020-06-19T14:25:42Z", "commit": {"oid": "62fd668bced384c17f8554586ccf121ace4577ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2956, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}