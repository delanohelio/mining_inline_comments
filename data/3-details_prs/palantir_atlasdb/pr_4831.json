{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNjUyNzY3", "number": 4831, "title": "[PDS-119588] Relax Cassandra Schema Version Check", "bodyText": "Goals (and why):\n\nGive Atlas a way of being resilient to migrations that change the cluster size. This blocked startup in PDS-119588.\n\nImplementation Description (bullets):\n\nAfter discussion with @leonz and @tpetracca, it appears that the check was written in this way because there was a concern over performance (if more schema operations are kicked off while the cluster is not in agreement, this could make reaching said agreement take longer).\nRecent changes to the fork of Cassandra we use should have addressed these concerns.\nSeparately: I audited all other uses of the server config, which appear to be either delegating, part of the startup process, or are seeding the Datastax driver (which has its own discovery mechanism).\n\nTesting (What was existing testing like?  What have you done to improve it?):\n\nUpdated unit tests to reflect the new behaviour.\n\nConcerns (what feedback would you like?):\n\nDo the tests provide good enough coverage?\nI believe this is safe for the gated describe keyspace call as well, because concurrent schema changes may or may not be reflected. Does this make sense?\n\nWhere should we start reviewing?: CKVSConsensusTest\nPriority (whenever / two weeks / yesterday): this week.", "createdAt": "2020-06-10T19:24:10Z", "url": "https://github.com/palantir/atlasdb/pull/4831", "merged": true, "mergeCommit": {"oid": "86ac9202431418f1839ab84ba5391148dad0db83"}, "closed": true, "closedAt": "2020-06-15T09:06:21Z", "author": {"login": "jeremyk-91"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp71rAAH2gAyNDMyNjUyNzY3OmEzNzJlZDYyYmY1YjNmZTUxYWQ2Nzg2ZTFhYWI0ZjJmZjAyYzNkZGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqkx0dAH2gAyNDMyNjUyNzY3OjA0NmEyYWVjYjk0N2NiMTgyZThiZjZlZGRmMTNjMGViOWM4OGZhZGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a372ed62bf5b3fe51ad6786e1aab4f2ff02c3ddc", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/a372ed62bf5b3fe51ad6786e1aab4f2ff02c3ddc", "committedDate": "2020-06-10T16:00:00Z", "message": "checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48afbf644e184c003924bef04dc7ffb3a9fa1005", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/48afbf644e184c003924bef04dc7ffb3a9fa1005", "committedDate": "2020-06-10T18:47:00Z", "message": "Remove quorum check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "481e0ce48eb17efc4bc7355aa4b62cba96c35261", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/481e0ce48eb17efc4bc7355aa4b62cba96c35261", "committedDate": "2020-06-10T18:52:23Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce65e6423800bd5844467defc7283dcfe6c2f97f", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/ce65e6423800bd5844467defc7283dcfe6c2f97f", "committedDate": "2020-06-10T19:09:35Z", "message": "Test updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/44cdd512c73db8afebec8b97ae34d14dd4d1fe75", "committedDate": "2020-06-10T19:09:35Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzEzMTkz", "url": "https://github.com/palantir/atlasdb/pull/4831#pullrequestreview-428713193", "createdAt": "2020-06-11T08:47:19Z", "commit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo0NzoxOVrOGiUNpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo1NjowMVrOGiUhVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzNTk0Mw==", "bodyText": "Why do we return false if no nodes are reachable? I mean, should the case where there is no reachable part be handled differently?", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438635943", "createdAt": "2020-06-11T08:47:19Z", "author": {"login": "sudiksha27"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServices.java", "diffHunk": "@@ -137,18 +136,8 @@ static void runWithWaitingForSchemas(\n         waitForSchemaVersions(config, client, \"after \" + unsafeSchemaChangeDescription);\n     }\n \n-    static boolean uniqueSchemaWithQuorumAgreementAndOtherNodesUnreachable(\n-            CassandraKeyValueServiceConfig config,\n-            Map<String, List<String>> versions) {\n-        List<String> reachableSchemas = getDistinctReachableSchemas(versions);\n-        if (reachableSchemas.size() > 1) {\n-            return false;\n-        }\n-\n-        int numberOfServers = config.servers().numberOfThriftHosts();\n-        int numberOfVisibleNodes = getNumberOfReachableNodes(versions);\n-\n-        return numberOfVisibleNodes >= ((numberOfServers / 2) + 1);\n+    static boolean reachablePartOfClusterHasConsistentSchemaVersions(Map<String, List<String>> versions) {\n+        return getDistinctReachableSchemas(versions).size() == 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY0MDk4Mg==", "bodyText": "Should we explicitly say cluster size of Cassandra/if a Cassandra cluster was downsized?", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438640982", "createdAt": "2020-06-11T08:56:01Z", "author": {"login": "sudiksha27"}, "path": "changelog/@unreleased/pr-4831.v2.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+type: improvement\n+improvement:\n+  description: AtlasDB is now more resilient to migrations involving changes in the\n+    cluster size relative to the original install config. Previously, if a cluster\n+    was downsized at runtime, schema operations would consistently fail until the\n+    service was bounced.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTEzODA0", "url": "https://github.com/palantir/atlasdb/pull/4831#pullrequestreview-428513804", "createdAt": "2020-06-11T00:24:51Z", "commit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMDoyNDo1MVrOGiKhzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo0Mjo1MFrOGidyuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NzI2Mw==", "bodyText": "I'm not sure I totally understand this test (even before this change). Why would the returned map be missing nodes?", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438477263", "createdAt": "2020-06-11T00:24:51Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/test/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServicesSchemaConsensusTest.java", "diffHunk": "@@ -85,16 +85,16 @@ public void waitThrowsForAllUnreachableSchemaVersion() throws TException {\n     }\n \n     @Test\n-    public void waitThrowsForFewerThanQuorumOnSameVersion() throws TException {\n+    public void waitSucceedsOnMinorityOnSameVersion() throws TException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ3NzM4Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438477383", "createdAt": "2020-06-11T00:25:14Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/test/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServicesSchemaConsensusTest.java", "diffHunk": "@@ -85,16 +85,16 @@ public void waitThrowsForAllUnreachableSchemaVersion() throws TException {\n     }\n \n     @Test\n-    public void waitThrowsForFewerThanQuorumOnSameVersion() throws TException {\n+    public void waitSucceedsOnMinorityOnSameVersion() throws TException {\n         when(client.describe_schema_versions()).thenReturn(ImmutableMap.of(VERSION_1, REST_OF_NODES));\n-        assertWaitForSchemaVersionsThrowsAndContainsConfigNodesInformation();\n+        assertWaitForSchemaVersionsDoesNotThrow();\n     }\n \n     @Test\n-    public void waitThrowsForQuorumOfUnreachableNodes() throws TException {\n+    public void waitSucceedsOnMinorityOnSameVersionAndRestUnreachable() throws TException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2NjgwOA==", "bodyText": "it probably doesn't matter what we return in that case? expectation being your schema mutation will fail because there is no online node for it to succeed against.", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438766808", "createdAt": "2020-06-11T13:06:37Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServices.java", "diffHunk": "@@ -137,18 +136,8 @@ static void runWithWaitingForSchemas(\n         waitForSchemaVersions(config, client, \"after \" + unsafeSchemaChangeDescription);\n     }\n \n-    static boolean uniqueSchemaWithQuorumAgreementAndOtherNodesUnreachable(\n-            CassandraKeyValueServiceConfig config,\n-            Map<String, List<String>> versions) {\n-        List<String> reachableSchemas = getDistinctReachableSchemas(versions);\n-        if (reachableSchemas.size() > 1) {\n-            return false;\n-        }\n-\n-        int numberOfServers = config.servers().numberOfThriftHosts();\n-        int numberOfVisibleNodes = getNumberOfReachableNodes(versions);\n-\n-        return numberOfVisibleNodes >= ((numberOfServers / 2) + 1);\n+    static boolean reachablePartOfClusterHasConsistentSchemaVersions(Map<String, List<String>> versions) {\n+        return getDistinctReachableSchemas(versions).size() == 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzNTk0Mw=="}, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MTMzNw==", "bodyText": "maybe change the wording to \"must only be used on KVS initialization to generate the initial connection(s) to the cluster\"?", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438771337", "createdAt": "2020-06-11T13:13:55Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/cassandra/CassandraKeyValueServiceConfig.java", "diffHunk": "@@ -48,6 +48,13 @@\n \n     String TYPE = \"cassandra\";\n \n+    /**\n+     * These are only the initial 'contact points' that will be used in connecting with the cluster. AtlasDB will\n+     * subsequently discover additional hosts in the cluster. (This is true for both Thrift and CQL endpoints.)\n+     *\n+     * This value, or values derived from it (e.g. the number of Thrift hosts) MUST NOT be used to ascertain the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3NjUxNw==", "bodyText": "we should delete the CassandraKeyValueServiceConfig config from this method's signature and remove its usage across the entirety fo the method", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438776517", "createdAt": "2020-06-11T13:22:36Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServices.java", "diffHunk": "@@ -88,19 +88,18 @@ static void waitForSchemaVersions(\n         long sleepTime = INITIAL_SLEEP_TIME;\n         Map<String, List<String>> versions;\n         do {\n-            // This only returns the schema versions of nodes that the client knows exist. In particular, if a node we\n-            // shook hands with goes down, it will have schema version UNREACHABLE; however, if we never shook hands\n-            // with a node, there will simply be no entry for it in the map. Hence the check for the number of nodes.\n+            // This may only include some of the nodes if the coordinator hasn't shaken hands with someone; however,\n+            // this existed largely as a defense against performance issues with concurrent schema modifications.\n             versions = client.describe_schema_versions();\n-            if (uniqueSchemaWithQuorumAgreementAndOtherNodesUnreachable(config, versions)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4ODU4Ng==", "bodyText": "As far as I know this state is impossible to be in provided you have a quorum nodes, and therefore I don't believe is a legitimate concern.\nThe primary goal of this method in my opinion (and we should directly document this in the javadoc is):\n\nbackoff doing schema mutations if the cluster is known to be in disagreement currently\n\nI think this is just sensible and a natural thing to do, but admit given recent (read: when we did all the rescue restore optimization work) schema optimization work in our fork that this is less of a concern\n\n\ndon't do a schema mutation if it can potentially result in \"split-brain\" (from the schema's point of view) in the future\n\nThe code as written in this PR allows for the case that we 1 out of 3 nodes are online, we push a schema mutation to that node. That node goes down, two other nodes come online, a schema mutation is pushed to those two nodes (whether by us or by another atlasdb client). The original node comes online, the nodes are in disagreement. While cassandra in theory should handle this case fine, the more divergent the schemas get the harder it will be for it to rectify them. Additionally there is the nuance/complexity around each different version of the schema having matching new pieces (like same keyspace/table name), but with a different cf_id. While I believe we've resolved this via deterministic cf_ids its worth pointing out that for that case, we would treat the situation as an outage and require manual intervention. We can prevent all the risks of the \"split-brain\" case here, by ensuring we only apply changes when we believe a majority of nodes are going to receive. From a maintain \"HA\" perspective this should be fine: see my next bullet.\n\n\nschema mutations are HA\n\nWe want to make sure critical path operations in AtlasDb are HA. We believe modifying a schema to be one of those things and thus it should be HA. That being said the rest of the critical path operations in AtlasDb, even when HA, have limitations to their availability. The most obvious of which are basic reads/writes to cassandra: they require quorum. Given the way we deploy cassandra (network topology aware RF=3), at any given moment [in the best case] if we have more than a third of the nodes of the cluster offline we have lost availability and can no longer read/write. Because of this I do not view being able to do a schema mutation where less than 2/3 of the nodes of the cluster are online as necessary.", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438788586", "createdAt": "2020-06-11T13:38:14Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServices.java", "diffHunk": "@@ -88,19 +88,18 @@ static void waitForSchemaVersions(\n         long sleepTime = INITIAL_SLEEP_TIME;\n         Map<String, List<String>> versions;\n         do {\n-            // This only returns the schema versions of nodes that the client knows exist. In particular, if a node we\n-            // shook hands with goes down, it will have schema version UNREACHABLE; however, if we never shook hands\n-            // with a node, there will simply be no entry for it in the map. Hence the check for the number of nodes.\n+            // This may only include some of the nodes if the coordinator hasn't shaken hands with someone; however,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5MDUyOA==", "bodyText": "Tf we haven't already I think we should audit use of this method across the codebase and ensure it aligns with the expectations of this javadoc. The method below we've altered in this PR, even after these changes actually calls this method when it should not (even if it is only for logging purposes, it is still incorrect).", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438790528", "createdAt": "2020-06-11T13:40:20Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/cassandra/CassandraKeyValueServiceConfig.java", "diffHunk": "@@ -48,6 +48,13 @@\n \n     String TYPE = \"cassandra\";\n \n+    /**\n+     * These are only the initial 'contact points' that will be used in connecting with the cluster. AtlasDB will\n+     * subsequently discover additional hosts in the cluster. (This is true for both Thrift and CQL endpoints.)\n+     *\n+     * This value, or values derived from it (e.g. the number of Thrift hosts) MUST NOT be used to ascertain the", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc3MTMzNw=="}, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc5Mjg5MQ==", "bodyText": "all of the error message stuff below should talk about the cluster as being in terms of node returned in the describe_schema_versions() call above (regardless of if they're unreachable or not). none of it should use config.servers() as that isn't correct and also just isn't even how the checks of the rest of the method are done anymore.", "url": "https://github.com/palantir/atlasdb/pull/4831#discussion_r438792891", "createdAt": "2020-06-11T13:42:50Z", "author": {"login": "tpetracca"}, "path": "atlasdb-cassandra/src/main/java/com/palantir/atlasdb/keyvalue/cassandra/CassandraKeyValueServices.java", "diffHunk": "@@ -88,19 +88,18 @@ static void waitForSchemaVersions(\n         long sleepTime = INITIAL_SLEEP_TIME;\n         Map<String, List<String>> versions;\n         do {\n-            // This only returns the schema versions of nodes that the client knows exist. In particular, if a node we\n-            // shook hands with goes down, it will have schema version UNREACHABLE; however, if we never shook hands\n-            // with a node, there will simply be no entry for it in the map. Hence the check for the number of nodes.\n+            // This may only include some of the nodes if the coordinator hasn't shaken hands with someone; however,\n+            // this existed largely as a defense against performance issues with concurrent schema modifications.\n             versions = client.describe_schema_versions();\n-            if (uniqueSchemaWithQuorumAgreementAndOtherNodesUnreachable(config, versions)) {\n+            if (reachablePartOfClusterHasConsistentSchemaVersions(versions)) {\n                 return;\n             }\n             sleepTime = sleepAndGetNextBackoffTime(sleepTime);\n         } while (System.currentTimeMillis() < start + config.schemaMutationTimeoutMillis());\n \n         StringBuilder schemaVersions = new StringBuilder();\n         for (Entry<String, List<String>> version : versions.entrySet()) {\n-            schemaVersions = addNodeInformation(schemaVersions,\n+            addNodeInformation(schemaVersions,\n                     String.format(\"%nAt schema version %s:\", version.getKey()),\n                     version.getValue());\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44cdd512c73db8afebec8b97ae34d14dd4d1fe75"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "860c5603bc8e8fde0913c47c46fcbc5f3bb1d971", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/860c5603bc8e8fde0913c47c46fcbc5f3bb1d971", "committedDate": "2020-06-11T15:52:18Z", "message": "Fail on a quorum of unreachables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be4ae540589372e3dc9fdbf1501a918045b5d5c", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/5be4ae540589372e3dc9fdbf1501a918045b5d5c", "committedDate": "2020-06-11T16:25:00Z", "message": "Update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec1b83f08c3a53536de763cfce4d98078613b1ea", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/ec1b83f08c3a53536de763cfce4d98078613b1ea", "committedDate": "2020-06-11T16:51:26Z", "message": "Don't pass config directly into waitForSchemaVersions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c4b84804b8d334e4f755f271486b557383e4671", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/3c4b84804b8d334e4f755f271486b557383e4671", "committedDate": "2020-06-11T17:19:00Z", "message": "waitForSchemaVersions docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3edd34f539b1c4e75ef21e134f74e3c14fc6dcb8", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/3edd34f539b1c4e75ef21e134f74e3c14fc6dcb8", "committedDate": "2020-06-11T17:19:00Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c799442df7dae05f82718cc11421d68cd5b335f4", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/c799442df7dae05f82718cc11421d68cd5b335f4", "committedDate": "2020-06-11T17:22:15Z", "message": "Remove suspect test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37fe7f5777d8f63a3118f66f3f3fa39102704aff", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/37fe7f5777d8f63a3118f66f3f3fa39102704aff", "committedDate": "2020-06-11T17:22:30Z", "message": "Merge branch 'jkong/cassandra' of github.com:palantir/atlasdb into jkong/cassandra"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7443d081095ff382239e9db7339c0db1fd9544b", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/a7443d081095ff382239e9db7339c0db1fd9544b", "committedDate": "2020-06-11T17:23:43Z", "message": "rename test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTk2NjUw", "url": "https://github.com/palantir/atlasdb/pull/4831#pullrequestreview-429196650", "createdAt": "2020-06-11T18:53:02Z", "commit": {"oid": "a7443d081095ff382239e9db7339c0db1fd9544b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "046a2aecb947cb182e8bf6eddf13c0eb9c88fada", "author": {"user": {"login": "jeremyk-91", "name": "Jeremy Kong"}}, "url": "https://github.com/palantir/atlasdb/commit/046a2aecb947cb182e8bf6eddf13c0eb9c88fada", "committedDate": "2020-06-12T15:41:54Z", "message": "imports"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2928, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}