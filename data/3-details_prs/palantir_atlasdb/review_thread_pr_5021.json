{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNDQ4MzQx", "number": 5021, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo1MTo1N1rOEtADLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxODowNjowMFrOFexB2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjIyMTg5OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMTo1MTo1N1rOHgi2YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTowNDo0MlrOHiMfKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw==", "bodyText": "Feels wrong that you would allow this?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503887457", "createdAt": "2020-10-13T11:51:57Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "diffHunk": "@@ -77,7 +77,10 @@ VersionedEventStoreState getStateForTesting() {\n                 .build();\n     }\n \n-    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, Long startVersion) {\n+    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, long startVersion) {\n+        if (endVersion < startVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg5MDA4OQ==", "bodyText": "Wouldn't you want to validate this where the parent method is called? As I understand it, it's because it simplifies the code in LockWatchEventLog#getEventsBetweenVersions, where you just snapshotVersion + 1, but I think this complexity should live there. Because in all other cases calling this method with the versions inverted is probably wrong?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503890089", "createdAt": "2020-10-13T11:56:35Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "diffHunk": "@@ -77,7 +77,10 @@ VersionedEventStoreState getStateForTesting() {\n                 .build();\n     }\n \n-    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, Long startVersion) {\n+    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, long startVersion) {\n+        if (endVersion < startVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw=="}, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYxODIxNw==", "bodyText": "Fair enough", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505618217", "createdAt": "2020-10-15T15:04:42Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionedEventStore.java", "diffHunk": "@@ -77,7 +77,10 @@ VersionedEventStoreState getStateForTesting() {\n                 .build();\n     }\n \n-    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, Long startVersion) {\n+    private Collection<LockWatchEvent> getValuesBetweenInclusive(long endVersion, long startVersion) {\n+        if (endVersion < startVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzg4NzQ1Nw=="}, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjMzMjk4OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjoyMTozMlrOHgj6XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTozMDo0N1rOHiNthw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNDg2MQ==", "bodyText": "Can you also add tests here? I think there's a bunch of edge cases to cover around the snapshot computation piece? Or add unit tests, whatever works for you.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503904861", "createdAt": "2020-10-13T12:21:32Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -236,25 +236,23 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n+    public void getEventsForTransactionsReturnsSnapshotWithCondensedEvents() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYzODI3OQ==", "bodyText": "we now have tests for:\n\nno condensing\nsome condensing\nmax condensing\n\nI think that covers all the main cases.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505638279", "createdAt": "2020-10-15T15:30:47Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -236,25 +236,23 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n+    public void getEventsForTransactionsReturnsSnapshotWithCondensedEvents() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNDg2MQ=="}, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NjMzNTMyOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMjoyMjowMlrOHgj7qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTowODowNFrOHiMqRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNTE5NA==", "bodyText": "Check continuity?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r503905194", "createdAt": "2020-10-13T12:22:02Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "diffHunk": "@@ -61,6 +61,13 @@ private ClientLockWatchSnapshot() {\n                 ImmutableSet.copyOf(watches));\n     }\n \n+    LockWatchStateUpdate.Snapshot getSnapshotWithEvents(LockWatchEvents events, UUID versionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMTA2MA==", "bodyText": "Factored out a check so that this is always the case (in ClientLockWatchSnapshot normally as well as in this case).", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505621060", "createdAt": "2020-10-15T15:08:04Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "diffHunk": "@@ -61,6 +61,13 @@ private ClientLockWatchSnapshot() {\n                 ImmutableSet.copyOf(watches));\n     }\n \n+    LockWatchStateUpdate.Snapshot getSnapshotWithEvents(LockWatchEvents events, UUID versionId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzkwNTE5NA=="}, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDMzMzUxOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxNjozM1rOHhJ4jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTowOTo0M1rOHiMv1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNjk5MA==", "bodyText": "For completeness, can you also remove the \"Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");\" here; it's checked in the TimestampMapping", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r504526990", "createdAt": "2020-10-14T09:16:33Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -100,7 +105,13 @@ public TransactionsLockWatchUpdate getUpdateForTransactions(\n         lastKnownVersion.ifPresent(version -> assertTrue(version.version() <= timestampMapping.lastVersion().version(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMjQ4NA==", "bodyText": "Good point - removed", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r505622484", "createdAt": "2020-10-15T15:09:43Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -100,7 +105,13 @@ public TransactionsLockWatchUpdate getUpdateForTransactions(\n         lastKnownVersion.ifPresent(version -> assertTrue(version.version() <= timestampMapping.lastVersion().version(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyNjk5MA=="}, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDM0MTcwOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxODo0NFrOHhJ-Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwOToxODo0NFrOHhJ-Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUyODM5NQ==", "bodyText": "This comment should just live on VersionBounds, if you really care about it.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r504528395", "createdAt": "2020-10-14T09:18:44Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -49,31 +51,36 @@ CacheUpdate processUpdate(LockWatchStateUpdate update) {\n     }\n \n     /**\n-     * @param lastKnownVersion latest version that the client knows about; should be before timestamps in the mapping.\n-     * @param endVersion       mapping from timestamp to identified version from client-side event cache.\n-     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive)\n+     * @param versionBounds contains:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17e47712e502a48e9d0ebdc94bcc3ecd28e41b95"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTY3NzcxOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMTowMDo0MlrOHlmNOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMjo1ODowNFrOHlqecw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTMzOA==", "bodyText": "Would we get anything in terms of simplification of code if this was taking Long startTimestamp, instead of Set? atlas-proxy just needs one transaction pushed here.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r509185338", "createdAt": "2020-10-21T11:00:42Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -86,18 +85,28 @@ public CommitUpdate getCommitUpdate(long startTs) {\n                 \"start or commit info not processed for start timestamp\");\n \n         CommitInfo commitInfo = maybeCommitInfo.get();\n-        return eventLog.getEventsBetweenVersions(startVersion, commitInfo.commitVersion())\n-                .toCommitUpdate(startVersion.get(), commitInfo);\n+\n+        VersionBounds versionBounds = new VersionBounds.Builder()\n+                .startVersion(startVersion)\n+                .endVersion(commitInfo.commitVersion())\n+                .build();\n+\n+        return eventLog.getEventsBetweenVersions(versionBounds).toCommitUpdate(startVersion.get(), commitInfo);\n     }\n \n     @Override\n     public TransactionsLockWatchUpdate getUpdateForTransactions(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTI1NTI4Mw==", "bodyText": "Yes, that would be simpler, but I don't think by leaps and bounds - it just simplifies what we can compress a little.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r509255283", "createdAt": "2020-10-21T12:58:04Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -86,18 +85,28 @@ public CommitUpdate getCommitUpdate(long startTs) {\n                 \"start or commit info not processed for start timestamp\");\n \n         CommitInfo commitInfo = maybeCommitInfo.get();\n-        return eventLog.getEventsBetweenVersions(startVersion, commitInfo.commitVersion())\n-                .toCommitUpdate(startVersion.get(), commitInfo);\n+\n+        VersionBounds versionBounds = new VersionBounds.Builder()\n+                .startVersion(startVersion)\n+                .endVersion(commitInfo.commitVersion())\n+                .build();\n+\n+        return eventLog.getEventsBetweenVersions(versionBounds).toCommitUpdate(startVersion.get(), commitInfo);\n     }\n \n     @Override\n     public TransactionsLockWatchUpdate getUpdateForTransactions(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE4NTMzOA=="}, "originalCommit": {"oid": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzMzIxNjk3OnYy", "diffSide": "LEFT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxMzozNDowMlrOIlgKaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxMzozNDowMlrOIlgKaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjE5NTE3Nw==", "bodyText": "This check lives in TimestampMapping", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r576195177", "createdAt": "2021-02-15T13:34:02Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheImpl.java", "diffHunk": "@@ -86,18 +85,28 @@ public CommitUpdate getCommitUpdate(long startTs) {\n                 \"start or commit info not processed for start timestamp\");\n \n         CommitInfo commitInfo = maybeCommitInfo.get();\n-        return eventLog.getEventsBetweenVersions(startVersion, commitInfo.commitVersion())\n-                .toCommitUpdate(startVersion.get(), commitInfo);\n+\n+        VersionBounds versionBounds = new VersionBounds.Builder()\n+                .startVersion(startVersion)\n+                .endVersion(commitInfo.commitVersion())\n+                .build();\n+\n+        return eventLog.getEventsBetweenVersions(versionBounds).toCommitUpdate(startVersion.get(), commitInfo);\n     }\n \n     @Override\n     public TransactionsLockWatchUpdate getUpdateForTransactions(\n             Set<Long> startTimestamps,\n             Optional<LockWatchVersion> lastKnownVersion) {\n-        Preconditions.checkArgument(!startTimestamps.isEmpty(), \"Cannot get events for empty set of transactions\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fc3019d0d4d5bfb94d2a010ed19b97ed613ba20"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYzMzI3MzIyOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxMzo0ODoyNlrOIlgspQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xNVQxMzo0ODoyNlrOIlgspQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NjIwMzk0MQ==", "bodyText": "We want to get the events after the snapshot only", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r576203941", "createdAt": "2021-02-15T13:48:26Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventLog.java", "diffHunk": "@@ -49,35 +52,44 @@ CacheUpdate processUpdate(LockWatchStateUpdate update) {\n     }\n \n     /**\n-     * @param lastKnownVersion latest version that the client knows about; should be before timestamps in the mapping.\n-     * @param endVersion       mapping from timestamp to identified version from client-side event cache.\n-     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive)\n+     * @return lock watch events that occurred from (exclusive) the provided version, up to the end version (inclusive);\n+     *         this may begin with a snapshot if the latest version is too far behind, and this snapshot may be\n+     *         condensed.\n      */\n-    public ClientLogEvents getEventsBetweenVersions(\n-            Optional<LockWatchVersion> lastKnownVersion, LockWatchVersion endVersion) {\n-        Optional<LockWatchVersion> startVersion = lastKnownVersion.map(this::createStartVersion);\n-        LockWatchVersion currentVersion = getLatestVersionAndVerify(endVersion);\n+    public ClientLogEvents getEventsBetweenVersions(VersionBounds versionBounds) {\n+        Optional<LockWatchVersion> startVersion = versionBounds.startVersion().map(this::createStartVersion);\n+        LockWatchVersion currentVersion = getLatestVersionAndVerify(versionBounds.endVersion());\n \n         if (!startVersion.isPresent()\n                 || differentLeaderOrTooFarBehind(currentVersion, lastKnownVersion.get(), startVersion.get())) {\n+            long snapshotVersion = versionBounds.snapshotVersion() + 1;\n+            Collection<LockWatchEvent> afterSnapshotEvents;\n+            if (snapshotVersion > versionBounds.endVersion().version()) {\n+                afterSnapshotEvents = ImmutableList.of();\n+            } else {\n+                afterSnapshotEvents = eventStore.getEventsBetweenVersionsInclusive(\n+                        Optional.of(snapshotVersion), versionBounds.endVersion().version());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89e0532001f2aa5fb9cae60f3dce58cc488611c7"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzg0NzU1OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzoyMTo0OVrOIsAwOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzoyMTo0OVrOIsAwOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyMDYwMg==", "bodyText": "getSnapshot() can be private", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583020602", "createdAt": "2021-02-25T17:21:49Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/ClientLockWatchSnapshot.java", "diffHunk": "@@ -60,11 +60,19 @@ private ClientLockWatchSnapshot() {\n                 ImmutableSet.copyOf(watches));\n     }\n \n+    LockWatchStateUpdate.Snapshot getSnapshotWithEvents(LockWatchEvents events, UUID versionId) {\n+        ClientLockWatchSnapshot freshSnapshot = create();\n+        freshSnapshot.resetWithSnapshot(getSnapshot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzg2NTg3OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionBounds.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzoyNTo1NFrOIsA7hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzoyNTo1NFrOIsA7hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyMzQ5NA==", "bodyText": "Oh no you don't", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583023494", "createdAt": "2021-02-25T17:25:54Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/VersionBounds.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.atlasdb.keyvalue.api.watch;\n+\n+import com.palantir.lock.watch.LockWatchVersion;\n+import java.util.Optional;\n+import java.util.UUID;\n+import org.immutables.value.Value;\n+\n+@Value.Immutable\n+interface VersionBounds {\n+    Optional<LockWatchVersion> startVersion();\n+\n+    LockWatchVersion endVersion();\n+\n+    /**\n+     * If the start version is too far behind and we need to take a snapshot, this field communicates how much we can\n+     * condense the events in that snapshot.\n+     */\n+    Optional<Long> earliestSnapshotVersion();\n+\n+    @Value.Derived\n+    default long snapshotVersion() {\n+        return earliestSnapshotVersion().orElseGet(() -> endVersion().version());\n+    }\n+\n+    @Value.Derived\n+    default UUID leader() {\n+        return endVersion().id();\n+    }\n+\n+    class Builder extends ImmutableVersionBounds.Builder {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzg4OTE2OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzozMDoyOFrOIsBJVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDowNzo1M1rOIsfjfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyNzAzMQ==", "bodyText": "that versionRange() method is super overengineered, since the correctness relies on the check below it at which point you can literally just do range of first event.sequence + length of list -1 instead of fancy streams", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583027031", "createdAt": "2021-02-25T17:30:28Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNTI0Ng==", "bodyText": "Ha! Good point, actually.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583525246", "createdAt": "2021-02-26T10:07:53Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyNzAzMQ=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzg5ODg0OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzozMjozOFrOIsBPdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDowODo1MFrOIsflqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyODU5Ng==", "bodyText": "This can never happen", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583028596", "createdAt": "2021-02-25T17:32:38Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNTgwMA==", "bodyText": "Not only because I only make a range if the events are non-empty, but also because of the other check. Removed.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583525800", "createdAt": "2021-02-26T10:08:50Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyODU5Ng=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3NzkwMjgzOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzozMzozMFrOIsBSBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDowOTo1NVrOIsfoNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyOTI1NQ==", "bodyText": "below: wth!!!", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583029255", "createdAt": "2021-02-25T17:33:30Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()\n+                            || latestVersion.get().version() + 1 == firstVersion,\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstVersion));\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNjQ1Mg==", "bodyText": "Don't worry, I've come to see the sins of my ways.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583526452", "createdAt": "2021-02-26T10:09:55Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()\n+                            || latestVersion.get().version() + 1 == firstVersion,\n+                    \"Events missing between last snapshot and this batch of events\",\n+                    SafeArg.of(\"latestVersionSequence\", latestVersion.get().version()),\n+                    SafeArg.of(\"firstNewVersionSequence\", firstVersion));\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAyOTI1NQ=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3NzkzNzgyOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0MTowMlrOIsBnPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDo1ODowN1rOIshc7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng==", "bodyText": "Maybe the invariant holds, but this is also just easier to read\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                firstVersion <= latestVersion.get().version()\n          \n          \n            \n                                versionRange().get().contains(latestVersion.get().version())", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583034686", "createdAt": "2021-02-25T17:41:02Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyNzYyOQ==", "bodyText": "That's not the same check - what if latest version is > the upper bound of the range?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583527629", "createdAt": "2021-02-26T10:12:00Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyODg1Ng==", "bodyText": "Although, on review of the code, I don't think that can happen.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583528856", "createdAt": "2021-02-26T10:13:59Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyOTIxNg==", "bodyText": "but to be safe, I'd prefer to do this.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583529216", "createdAt": "2021-02-26T10:14:37Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzU1NjMzMg==", "bodyText": "I know it's not equivalent, but the method name assertNoEventsAreMissing implies they are connected. So then change the method name to assertNoEventsAreMissingAfterLatestVersion?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583556332", "createdAt": "2021-02-26T10:58:07Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEvents.java", "diffHunk": "@@ -62,5 +64,22 @@ default void rangeOnlyPresentIffEventsAre() {\n         }\n     }\n \n+    default void assertNoEventsAreMissing(Optional<LockWatchVersion> latestVersion) {\n+        if (events().isEmpty()) {\n+            return;\n+        }\n+\n+        if (latestVersion.isPresent()) {\n+            Preconditions.checkArgument(versionRange().isPresent(), \"First element not preset in list of events\");\n+            long firstVersion = versionRange().get().lowerEndpoint();\n+            Preconditions.checkArgument(\n+                    firstVersion <= latestVersion.get().version()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNDY4Ng=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzk0NDM2OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsNoCondensing/event-cache-1.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0MjozNlrOIsBrcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoxNToxM1rOIsf0mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNTc2MA==", "bodyText": "nit", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583035760", "createdAt": "2021-02-25T17:42:36Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsNoCondensing/event-cache-1.json", "diffHunk": "@@ -0,0 +1,78 @@\n+{\n+  \"logState\" : {\n+    \"snapshotState\" : {\n+      \"watches\" : [ ],\n+      \"locked\" : [ {\n+        \"bytes\" : \"dGFibGUAAg==\"\n+      } ],\n+      \"snapshotVersion\" : {\n+        \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+        \"version\" : 3\n+      }\n+    },\n+    \"eventStoreState\" : {\n+      \"eventMap\" : {\n+        \"4\" : {\n+          \"type\" : \"created\",\n+          \"sequence\" : 4,\n+          \"references\" : [ {\n+            \"type\" : \"fullTable\",\n+            \"qualifiedTableRef\" : \"table\"\n+          } ],\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ]\n+        },\n+        \"5\" : {\n+          \"type\" : \"unlock\",\n+          \"sequence\" : 5,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAg==\"\n+          } ]\n+        },\n+        \"6\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 6,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAw==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"203fcd7a-b3d7-4c2a-9d2c-3d61cde1ba59\"\n+          }\n+        },\n+        \"7\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 7,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"888fcd7a-b3d7-4d2a-9d2c-3d61cde1ba44\"\n+          }\n+        }\n+      }\n+    },\n+    \"latestVersion\" : {\n+      \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+      \"version\" : 7\n+    }\n+  },\n+  \"timestampStoreState\" : {\n+    \"timestampMap\" : {\n+      \"16\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 7\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"1\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 3\n+        },\n+        \"commitInfo\" : null\n+      }\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyOTYyNQ==", "bodyText": "No - these are generated, so it doesn't make sense to add a newline.", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583529625", "createdAt": "2021-02-26T10:15:13Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsNoCondensing/event-cache-1.json", "diffHunk": "@@ -0,0 +1,78 @@\n+{\n+  \"logState\" : {\n+    \"snapshotState\" : {\n+      \"watches\" : [ ],\n+      \"locked\" : [ {\n+        \"bytes\" : \"dGFibGUAAg==\"\n+      } ],\n+      \"snapshotVersion\" : {\n+        \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+        \"version\" : 3\n+      }\n+    },\n+    \"eventStoreState\" : {\n+      \"eventMap\" : {\n+        \"4\" : {\n+          \"type\" : \"created\",\n+          \"sequence\" : 4,\n+          \"references\" : [ {\n+            \"type\" : \"fullTable\",\n+            \"qualifiedTableRef\" : \"table\"\n+          } ],\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ]\n+        },\n+        \"5\" : {\n+          \"type\" : \"unlock\",\n+          \"sequence\" : 5,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAg==\"\n+          } ]\n+        },\n+        \"6\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 6,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAw==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"203fcd7a-b3d7-4c2a-9d2c-3d61cde1ba59\"\n+          }\n+        },\n+        \"7\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 7,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"888fcd7a-b3d7-4d2a-9d2c-3d61cde1ba44\"\n+          }\n+        }\n+      }\n+    },\n+    \"latestVersion\" : {\n+      \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+      \"version\" : 7\n+    }\n+  },\n+  \"timestampStoreState\" : {\n+    \"timestampMap\" : {\n+      \"16\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 7\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"1\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 3\n+        },\n+        \"commitInfo\" : null\n+      }\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNTc2MA=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzk0NDg4OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsSomeCondensing/event-cache-1.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0Mjo0MlrOIsBrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoxNToxOVrOIsf01A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNTg0Mw==", "bodyText": "nit", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583035843", "createdAt": "2021-02-25T17:42:42Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsSomeCondensing/event-cache-1.json", "diffHunk": "@@ -48,6 +48,21 @@\n     }\n   },\n   \"timestampStoreState\" : {\n-    \"timestampMap\" : { }\n+    \"timestampMap\" : {\n+      \"16\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 6\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"1\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 3\n+        },\n+        \"commitInfo\" : null\n+      }\n+    }\n   }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUyOTY4NA==", "bodyText": "Same as above", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583529684", "createdAt": "2021-02-26T10:15:19Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsSomeCondensing/event-cache-1.json", "diffHunk": "@@ -48,6 +48,21 @@\n     }\n   },\n   \"timestampStoreState\" : {\n-    \"timestampMap\" : { }\n+    \"timestampMap\" : {\n+      \"16\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 6\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"1\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 3\n+        },\n+        \"commitInfo\" : null\n+      }\n+    }\n   }\n }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNTg0Mw=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzk0NTQ3OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsSomeCondensing/event-cache-2.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0Mjo0OFrOIsBsFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0Mjo0OFrOIsBsFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNTkyNg==", "bodyText": "nit", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583035926", "createdAt": "2021-02-25T17:42:48Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/test/resources/lockwatch-event-cache-output/getEventsForTransactionsSomeCondensing/event-cache-2.json", "diffHunk": "@@ -0,0 +1,85 @@\n+{\n+  \"logState\" : {\n+    \"snapshotState\" : {\n+      \"watches\" : [ ],\n+      \"locked\" : [ {\n+        \"bytes\" : \"dGFibGUAAg==\"\n+      } ],\n+      \"snapshotVersion\" : {\n+        \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+        \"version\" : 3\n+      }\n+    },\n+    \"eventStoreState\" : {\n+      \"eventMap\" : {\n+        \"4\" : {\n+          \"type\" : \"created\",\n+          \"sequence\" : 4,\n+          \"references\" : [ {\n+            \"type\" : \"fullTable\",\n+            \"qualifiedTableRef\" : \"table\"\n+          } ],\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ]\n+        },\n+        \"5\" : {\n+          \"type\" : \"unlock\",\n+          \"sequence\" : 5,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAg==\"\n+          } ]\n+        },\n+        \"6\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 6,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAw==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"203fcd7a-b3d7-4c2a-9d2c-3d61cde1ba59\"\n+          }\n+        },\n+        \"7\" : {\n+          \"type\" : \"lock\",\n+          \"sequence\" : 7,\n+          \"lockDescriptors\" : [ {\n+            \"bytes\" : \"dGFibGUAAQ==\"\n+          } ],\n+          \"lockToken\" : {\n+            \"requestId\" : \"888fcd7a-b3d7-4d2a-9d2c-3d61cde1ba44\"\n+          }\n+        }\n+      }\n+    },\n+    \"latestVersion\" : {\n+      \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+      \"version\" : 7\n+    }\n+  },\n+  \"timestampStoreState\" : {\n+    \"timestampMap\" : {\n+      \"16\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 6\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"1\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 3\n+        },\n+        \"commitInfo\" : null\n+      },\n+      \"25\" : {\n+        \"version\" : {\n+          \"id\" : \"470c855e-f77b-44df-b56a-14d3df085dbc\",\n+          \"version\" : 7\n+        },\n+        \"commitInfo\" : null\n+      }\n+    }\n+  }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3Nzk0NzMzOnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-5021.v2.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0MzoyMlrOIsBtbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxNzo0MzoyMlrOIsBtbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzAzNjI2OQ==", "bodyText": "as much as possible? I think it's better even if you really meant as far into the past as possible", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583036269", "createdAt": "2021-02-25T17:43:22Z", "author": {"login": "gmaretic"}, "path": "changelog/@unreleased/pr-5021.v2.yml", "diffHunk": "@@ -0,0 +1,6 @@\n+type: improvement\n+improvement:\n+  description: Lock watch snapshots returned to the user are now condensed as far", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY3ODA0ODkxOnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNVQxODowNjowMFrOIsCsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNlQxMDoxOTo0MFrOIsgAOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzA1MjQ1MA==", "bodyText": "Can we make these tests more legible by not using seemingly magic numbers?\nI.e.,\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            eventCache.getUpdateForTransactions(Sets.union(TIMESTAMPS, TIMESTAMPS_2), Optional.empty());\n          \n          \n            \n                           eventCache.getUpdateForTransactions(ImmutableSet.of(START_TS, TS_16), Optional.empty());\n          \n      \n    \n    \n  \n\nand then using those in the asserts, and similarly below not using the magic LockWatchVersion but call logId and lastKnownVersion on the relevant updates?", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583052450", "createdAt": "2021-02-25T18:06:00Z", "author": {"login": "gmaretic"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -296,30 +296,72 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n-        createEventCache(3);\n+    public void getEventsForTransactionsNoCondensing() {\n         setupInitialState();\n-        eventCache.processGetCommitTimestampsUpdate(COMMIT_UPDATE, SUCCESS);\n-        eventCache.removeTransactionStateFromCache(START_TS);\n-        verifyStage();\n-\n+        eventCache.processStartTransactionsUpdate(ImmutableSet.of(), SUCCESS);\n         eventCache.processStartTransactionsUpdate(TIMESTAMPS_2, SUCCESS_2);\n         verifyStage();\n \n-        TransactionsLockWatchUpdate results = eventCache.getUpdateForTransactions(TIMESTAMPS_2, Optional.empty());\n+        // Client is behind and needs a snapshot, but no compression can be done as the first transaction is at the\n+        // first version\n+        TransactionsLockWatchUpdate results =\n+                eventCache.getUpdateForTransactions(Sets.union(TIMESTAMPS, TIMESTAMPS_2), Optional.empty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzUzMjYwMg==", "bodyText": "Done", "url": "https://github.com/palantir/atlasdb/pull/5021#discussion_r583532602", "createdAt": "2021-02-26T10:19:40Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/test/java/com/palantir/atlasdb/keyvalue/api/watch/LockWatchEventCacheIntegrationTest.java", "diffHunk": "@@ -296,30 +296,72 @@ public void cacheClearedOnSnapshotUpdate() {\n     }\n \n     @Test\n-    public void getEventsForTransactionsReturnsSnapshotWithOldEvents() {\n-        createEventCache(3);\n+    public void getEventsForTransactionsNoCondensing() {\n         setupInitialState();\n-        eventCache.processGetCommitTimestampsUpdate(COMMIT_UPDATE, SUCCESS);\n-        eventCache.removeTransactionStateFromCache(START_TS);\n-        verifyStage();\n-\n+        eventCache.processStartTransactionsUpdate(ImmutableSet.of(), SUCCESS);\n         eventCache.processStartTransactionsUpdate(TIMESTAMPS_2, SUCCESS_2);\n         verifyStage();\n \n-        TransactionsLockWatchUpdate results = eventCache.getUpdateForTransactions(TIMESTAMPS_2, Optional.empty());\n+        // Client is behind and needs a snapshot, but no compression can be done as the first transaction is at the\n+        // first version\n+        TransactionsLockWatchUpdate results =\n+                eventCache.getUpdateForTransactions(Sets.union(TIMESTAMPS, TIMESTAMPS_2), Optional.empty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MzA1MjQ1MA=="}, "originalCommit": {"oid": "a4d70d8493151597f4eb1e9ff7410d3f90fe6da5"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2612, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}