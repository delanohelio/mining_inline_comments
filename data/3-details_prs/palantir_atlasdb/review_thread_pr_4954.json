{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NzA2NDE0", "number": 4954, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0MDo0NFrOEZ4DQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0Mjo1M1rOEZ4GtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTY4MTkzOnYy", "diffSide": "RIGHT", "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0MDo0NFrOHC9Pug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0NjoxMVrOHC9dPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2MjY1MA==", "bodyText": "nit: close bracket (that was opened on the line above)", "url": "https://github.com/palantir/atlasdb/pull/4954#discussion_r472862650", "createdAt": "2020-08-19T08:40:44Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1187,23 +1188,16 @@ private static LockAndTimestampServices createRawLeaderServices(\n                 leaderConfig,\n                 userAgent);\n         LeaderElectionService leader = localPaxosServices.leaderElectionService();\n-        LockService localLock = ServiceCreator.instrumentService(\n-                metricsManager.getRegistry(),\n-                AwaitingLeadershipProxy.newProxyInstance(LockService.class, lock::get, leader),\n-                LockService.class);\n+        LockService localLock = AwaitingLeadershipProxy.newProxyInstance(LockService.class, lock::get, leader);\n \n         ManagedTimestampService managedTimestampProxy =\n                 AwaitingLeadershipProxy.newProxyInstance(ManagedTimestampService.class, time::get, leader);\n \n-        TimestampService localTime = ServiceCreator.instrumentService(\n-                metricsManager.getRegistry(),\n-                managedTimestampProxy,\n-                TimestampService.class);\n+        // These facades are necessary because of the semantics of the JAX-RS algorithm (in particular, accepting\n+        // just the managed timestamp service will *not* work.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99aa35e93ba02e3503ffb6d6b587ee24de33ff5c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NjExMQ==", "bodyText": "good spot!", "url": "https://github.com/palantir/atlasdb/pull/4954#discussion_r472866111", "createdAt": "2020-08-19T08:46:11Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/main/java/com/palantir/atlasdb/factory/TransactionManagers.java", "diffHunk": "@@ -1187,23 +1188,16 @@ private static LockAndTimestampServices createRawLeaderServices(\n                 leaderConfig,\n                 userAgent);\n         LeaderElectionService leader = localPaxosServices.leaderElectionService();\n-        LockService localLock = ServiceCreator.instrumentService(\n-                metricsManager.getRegistry(),\n-                AwaitingLeadershipProxy.newProxyInstance(LockService.class, lock::get, leader),\n-                LockService.class);\n+        LockService localLock = AwaitingLeadershipProxy.newProxyInstance(LockService.class, lock::get, leader);\n \n         ManagedTimestampService managedTimestampProxy =\n                 AwaitingLeadershipProxy.newProxyInstance(ManagedTimestampService.class, time::get, leader);\n \n-        TimestampService localTime = ServiceCreator.instrumentService(\n-                metricsManager.getRegistry(),\n-                managedTimestampProxy,\n-                TimestampService.class);\n+        // These facades are necessary because of the semantics of the JAX-RS algorithm (in particular, accepting\n+        // just the managed timestamp service will *not* work.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2MjY1MA=="}, "originalCommit": {"oid": "99aa35e93ba02e3503ffb6d6b587ee24de33ff5c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTY5MDc2OnYy", "diffSide": "LEFT", "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/TransactionManagersTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0Mjo1M1rOHC9U6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODo0NjozM1rOHC9eDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2Mzk3OA==", "bodyText": "You've removed two tests, but added none - are there any tests we can add to have confidence that this fix is correct?", "url": "https://github.com/palantir/atlasdb/pull/4954#discussion_r472863978", "createdAt": "2020-08-19T08:42:53Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/TransactionManagersTest.java", "diffHunk": "@@ -612,15 +612,6 @@ private TransactionManagers withLockImmutableTsOnReadOnlyTransaction(boolean opt\n                 .build();\n     }\n \n-    @Test\n-    public void metricsAreReportedExactlyOnceWhenUsingLocalService() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99aa35e93ba02e3503ffb6d6b587ee24de33ff5c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NDkzMw==", "bodyText": "I see you've said\n\nExisting tests should suffice for correctness.\nRemoval of metrics is verified by removing the test involved\n\nbut I'm not 100% on the second point - removing the tests just removes the check that there are metrics, but surely it doesn't actively check that no metrics are registered? That's what we want here, right?", "url": "https://github.com/palantir/atlasdb/pull/4954#discussion_r472864933", "createdAt": "2020-08-19T08:44:25Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/TransactionManagersTest.java", "diffHunk": "@@ -612,15 +612,6 @@ private TransactionManagers withLockImmutableTsOnReadOnlyTransaction(boolean opt\n                 .build();\n     }\n \n-    @Test\n-    public void metricsAreReportedExactlyOnceWhenUsingLocalService() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2Mzk3OA=="}, "originalCommit": {"oid": "99aa35e93ba02e3503ffb6d6b587ee24de33ff5c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2NjMxOQ==", "bodyText": "Fair enough, yep I'll replace that with a check that they are not registered.", "url": "https://github.com/palantir/atlasdb/pull/4954#discussion_r472866319", "createdAt": "2020-08-19T08:46:33Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-config/src/test/java/com/palantir/atlasdb/factory/TransactionManagersTest.java", "diffHunk": "@@ -612,15 +612,6 @@ private TransactionManagers withLockImmutableTsOnReadOnlyTransaction(boolean opt\n                 .build();\n     }\n \n-    @Test\n-    public void metricsAreReportedExactlyOnceWhenUsingLocalService() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg2Mzk3OA=="}, "originalCommit": {"oid": "99aa35e93ba02e3503ffb6d6b587ee24de33ff5c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2803, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}