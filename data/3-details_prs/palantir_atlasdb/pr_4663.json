{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzU3NDg3", "number": 4663, "title": "[Timelock Partitioning] Part 55: Takeover primitive", "bodyText": "Goals (and why):\nIt's useful to be able to control when leadership happens. This can also apply to single leader mode as well e.g. the leader is responding poorly, but not poorly enough that other nodes will step in. One part where it would be tremendously useful is in self-balancing either for tests/benchmarking or for when trying to actually execute a balancing strategy.\nImplementation Description (bullets):\n\nLeaderElectionService now has a hostileTakeover method which when called will propose to takeover leadership instead of blocking/waiting until the actual leader is unresponsive.\nExpose an endpoint that triggers this hostile takeover.\n\nTesting (What was existing testing like?  What have you done to improve it?):\nAdded a few sanity ete tests, since we have a full environment.\nConcerns (what feedback would you like?):\nShould the endpoint exist? Doesn't really have any auth, but then again neither do a lot of other endpoints that can cause severe data corruption (tm).\nWhere should we start reviewing?:\n\nPaxosLeaderElectionService.\n\nPriority (whenever / two weeks / yesterday):\nBy end of the week please.", "createdAt": "2020-03-23T12:33:01Z", "url": "https://github.com/palantir/atlasdb/pull/4663", "merged": true, "mergeCommit": {"oid": "f605a1e80fa81ae931eb2148e4b7fcc84238ac49"}, "closed": true, "closedAt": "2020-03-23T17:44:45Z", "author": {"login": "felixdesouza"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQdY5tgH2gAyMzkyMzU3NDg3OjZmMmQyMTgzOTNmNTFkNWZkY2Q5YzYwMzA2NWFkNzM2NGIyOGQ0NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQgaoJgFqTM3OTU2NzgyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6f2d218393f51d5fdcd9c603065ad7364b28d44c", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/6f2d218393f51d5fdcd9c603065ad7364b28d44c", "committedDate": "2020-03-23T12:23:19Z", "message": "Add ability to take over leadership via an endpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4b0e7c54ad5f21b3c9fbcd50df2c95a414d4631", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/a4b0e7c54ad5f21b3c9fbcd50df2c95a414d4631", "committedDate": "2020-03-23T12:23:19Z", "message": "Batch Namespace Takeover resource."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/09676befb52ddd6631dffd7e109f196acbbc41b3", "committedDate": "2020-03-23T12:34:18Z", "message": "Checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDQyMzcw", "url": "https://github.com/palantir/atlasdb/pull/4663#pullrequestreview-379442370", "createdAt": "2020-03-23T13:46:19Z", "commit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo0NjoxOVrOF6GGEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowMDozMFrOF6Gt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2MTU4Nw==", "bodyText": "We should leave a comment along the lines of the ListenableFuture one explaining why this is safe. It is, because SerializingUtils.copy() will throw when trying to copy the non-(Java) Serializable Optional returned.", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396461587", "createdAt": "2020-03-23T13:46:19Z", "author": {"login": "jeremyk-91"}, "path": "atlasdb-commons/src/main/java/com/palantir/common/proxy/SerializingProxy.java", "diffHunk": "@@ -52,7 +53,7 @@ public Object invoke(Object proxy, Method method, Object[] args) throws Throwabl\n         // Who knows why this class is present. Presumably it's to test some required behaviour in large internal\n         // product. But we know that they don't return ListenableFutures (and we do, and don't use Java serialization),\n         // so let's skip them.\n-        if (method.getReturnType().equals(ListenableFuture.class)) {\n+        if (method.getReturnType().equals(ListenableFuture.class) || method.getReturnType().equals(Optional.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2MzE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Note: Whilst a positive result means that it succussfully proposed and became the leader, it is still subject to\n          \n          \n            \n                 * Note: Whilst a positive result means that it successfully proposed and became the leader, it is still subject to", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396463172", "createdAt": "2020-03-23T13:48:34Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-api/src/main/java/com/palantir/leader/LeaderElectionService.java", "diffHunk": "@@ -82,6 +82,19 @@\n      */\n     boolean stepDown();\n \n+    /**\n+     * Attempts to forcefully take over leadership. That is, it is similar to {@link #blockOnBecomingLeader()}, however\n+     * it does not block and also if it discovers that it is not the leader, it doesn't back down but proposes\n+     * leadership anyway.\n+     * <p>\n+     * Note: Whilst a positive result means that it succussfully proposed and became the leader, it is still subject to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2Mzk4Nw==", "bodyText": "This doesn't quite agree with the API of hostileTakeover though (I didn't gain leadership forcefully, I just was already the leader). Probably the API should be reworded to something like true iff this node was the leader at some point during the method call (bearing in mind it might already the be the leader, and that a successful proposal + GC could see another node take over before this method returns).", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396463987", "createdAt": "2020-03-23T13:49:35Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/PaxosLeaderElectionService.java", "diffHunk": "@@ -312,6 +312,37 @@ public boolean stepDown() {\n         return false;\n     }\n \n+    @Override\n+    public boolean hostileTakeover() {\n+        LeadershipState leadershipState = determineLeadershipState();\n+        StillLeadingStatus status = leadershipState.status();\n+        switch (status) {\n+            case LEADING:\n+                return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2ODcxMg==", "bodyText": "How did we choose p here? paxos or partitioning shorthand, I guess, but seems a bit unclear", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396468712", "createdAt": "2020-03-23T13:56:15Z", "author": {"login": "jeremyk-91"}, "path": "timelock-api/src/main/conjure/timelock-paxos-api.yml", "diffHunk": "@@ -0,0 +1,18 @@\n+services:\n+  NamespaceLeadershipTakeoverService:\n+    name: Namespace Leadership Takeover Service\n+    default-auth: header\n+    package: com.palantir.atlasdb.timelock.paxos.api\n+    base-path: /tl/p", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2OTU2NQ==", "bodyText": "Is there a reason we used the full form here (in contrast to the above)?", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396469565", "createdAt": "2020-03-23T13:57:27Z", "author": {"login": "jeremyk-91"}, "path": "timelock-api/src/main/conjure/timelock-paxos-api.yml", "diffHunk": "@@ -0,0 +1,18 @@\n+services:\n+  NamespaceLeadershipTakeoverService:\n+    name: Namespace Leadership Takeover Service\n+    default-auth: header\n+    package: com.palantir.atlasdb.timelock.paxos.api\n+    base-path: /tl/p\n+    endpoints:\n+      takeover:\n+        http: POST /takeover/{namespace}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3MTc5NQ==", "bodyText": "nit: the idea that we propose null is now baked in to three places in the code (propose, stepdown and here) - maybe we should refactor this slightly?", "url": "https://github.com/palantir/atlasdb/pull/4663#discussion_r396471795", "createdAt": "2020-03-23T14:00:30Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/leader/PaxosLeaderElectionService.java", "diffHunk": "@@ -312,6 +312,37 @@ public boolean stepDown() {\n         return false;\n     }\n \n+    @Override\n+    public boolean hostileTakeover() {\n+        LeadershipState leadershipState = determineLeadershipState();\n+        StillLeadingStatus status = leadershipState.status();\n+        switch (status) {\n+            case LEADING:\n+                return true;\n+            case NOT_LEADING:\n+                try {\n+                    proposer.propose(getNextSequenceNumber(leadershipState.greatestLearnedValue()), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09676befb52ddd6631dffd7e109f196acbbc41b3"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fc8b135a1837380927fa930f1c92a00a0219aac", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/4fc8b135a1837380927fa930f1c92a00a0219aac", "committedDate": "2020-03-23T14:47:06Z", "message": "Update leader-election-api/src/main/java/com/palantir/leader/LeaderElectionService.java\n\nCo-Authored-By: Jeremy Kong <jeremykong@hotmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "188b3b62833df333e7fd9d9c4ae1a6bac6714eff", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/188b3b62833df333e7fd9d9c4ae1a6bac6714eff", "committedDate": "2020-03-23T15:48:16Z", "message": "Address comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a9b5b4fc0015d1a5bbac7a0fd3cf2cdbb5bc951", "author": {"user": {"login": "felixdesouza", "name": "Felix de Souza"}}, "url": "https://github.com/palantir/atlasdb/commit/6a9b5b4fc0015d1a5bbac7a0fd3cf2cdbb5bc951", "committedDate": "2020-03-23T15:54:01Z", "message": "Delete SerializingProxy.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTY3ODI1", "url": "https://github.com/palantir/atlasdb/pull/4663#pullrequestreview-379567825", "createdAt": "2020-03-23T15:54:55Z", "commit": {"oid": "4fc8b135a1837380927fa930f1c92a00a0219aac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2993, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}