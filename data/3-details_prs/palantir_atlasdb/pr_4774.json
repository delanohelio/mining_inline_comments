{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTc2MDkz", "number": 4774, "title": "[PaxosStateLog] Implement Different Migration States", "bodyText": "Goals (and why):\nAdd support for validation and migrated states\nImplementation Description (bullets):\nPretty straightforward, although I would have liked to make it nicer\nTesting (What was existing testing like?  What have you done to improve it?):\nAdded another test and updated existing ones\nConcerns (what feedback would you like?):\nAny obvious better way to do this?\nWhere should we start reviewing?:\nSqlitePaxosStateLogMigrationState.java\nPriority (whenever / two weeks / yesterday):\nTomorrow?", "createdAt": "2020-05-14T12:52:22Z", "url": "https://github.com/palantir/atlasdb/pull/4774", "merged": true, "mergeCommit": {"oid": "72bdbbead74b72064bc40b89e23d9a100d19072c"}, "closed": true, "closedAt": "2020-05-14T15:02:42Z", "author": {"login": "gmaretic"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg7KiXAH2gAyNDE3OTc2MDkzOjlkMzA3MTMwNjM4OTY4N2NkOWIwNWY0ODkwMmExNjQxYTNiNzkxYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchOOBPAFqTQxMTg1MDk5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9d3071306389687cd9b05f48902a1641a3b791a3", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/9d3071306389687cd9b05f48902a1641a3b791a3", "committedDate": "2020-05-13T16:07:34Z", "message": "Implement different state support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f00c368317882a67160675e25ef35a4e0db70a", "author": {"user": {"login": "gmaretic", "name": null}}, "url": "https://github.com/palantir/atlasdb/commit/40f00c368317882a67160675e25ef35a4e0db70a", "committedDate": "2020-05-13T16:17:19Z", "message": "Add migrated state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODUwOTkx", "url": "https://github.com/palantir/atlasdb/pull/4774#pullrequestreview-411850991", "createdAt": "2020-05-14T14:17:41Z", "commit": {"oid": "40f00c368317882a67160675e25ef35a4e0db70a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoxNzo0MVrOGVeevQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDoxOTowOVrOGVejBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MjY2OQ==", "bodyText": "Discussed offline: Let's validate that we aren't in migrated state before doing this.", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425172669", "createdAt": "2020-05-14T14:17:41Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/main/java/com/palantir/paxos/SqlitePaxosStateLogMigrationState.java", "diffHunk": "@@ -52,12 +53,24 @@ private void initialize() {\n         execute(Queries::createTable);\n     }\n \n-    public void finishMigration() {\n-        execute(dao -> dao.finishMigration(namespace, useCase));\n+    public void migrateToValidationState() {\n+        execute(dao -> dao.migrateToVersion(namespace, useCase, States.VALIDATION.schemaVersion));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40f00c368317882a67160675e25ef35a4e0db70a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3MzE5NA==", "bodyText": "nit: let's check that it's false at some point", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425173194", "createdAt": "2020-05-14T14:18:25Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/test/java/com/palantir/paxos/FileToSqlitePaxosStateLogIntegrationTest.java", "diffHunk": "@@ -54,7 +54,7 @@ public void setup() throws IOException {\n     @Test\n     public void emptyMigrationSucceeds() {\n         migrate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40f00c368317882a67160675e25ef35a4e0db70a"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTE3Mzc2NQ==", "bodyText": "Last 4 lines would be different if we're not allowing migrated -> validated state.", "url": "https://github.com/palantir/atlasdb/pull/4774#discussion_r425173765", "createdAt": "2020-05-14T14:19:09Z", "author": {"login": "jeremyk-91"}, "path": "leader-election-impl/src/test/java/com/palantir/paxos/SqlitePaxosStateLogMigrationStateTest.java", "diffHunk": "@@ -44,43 +44,62 @@ public void setup() {\n     }\n \n     @Test\n-    public void initialStateIsNotMigrated() {\n-        assertThat(migrationState.hasAlreadyMigrated()).isFalse();\n+    public void initialStateTest() {\n+        assertThat(migrationState.hasMigratedFromInitialState()).isFalse();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isFalse();\n+    }\n+\n+    @Test\n+    public void canSetStateToValidation() {\n+        migrationState.migrateToValidationState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isTrue();\n+        assertThat(migrationState.isInMigratedState()).isFalse();\n     }\n \n     @Test\n     public void canSetStateToMigrated() {\n-        migrationState.finishMigration();\n-        assertThat(migrationState.hasAlreadyMigrated()).isTrue();\n+        migrationState.migrateToMigratedState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isTrue();\n     }\n \n     @Test\n-    public void canSetStateToMigratedMultipleTimes() {\n-        migrationState.finishMigration();\n-        migrationState.finishMigration();\n-        migrationState.finishMigration();\n-        assertThat(migrationState.hasAlreadyMigrated()).isTrue();\n+    public void canChangeStates() {\n+        migrationState.migrateToValidationState();\n+        migrationState.migrateToMigratedState();\n+        migrationState.migrateToMigratedState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isFalse();\n+        assertThat(migrationState.isInMigratedState()).isTrue();\n+\n+        migrationState.migrateToValidationState();\n+        assertThat(migrationState.hasMigratedFromInitialState()).isTrue();\n+        assertThat(migrationState.isInValidationState()).isTrue();\n+        assertThat(migrationState.isInMigratedState()).isFalse();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40f00c368317882a67160675e25ef35a4e0db70a"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2844, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}