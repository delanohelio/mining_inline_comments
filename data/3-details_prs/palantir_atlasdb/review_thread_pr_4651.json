{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MDM0MDE0", "number": 4651, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMzozMToyMFrODoAwMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoxNDo0NVrODrnguw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjgxOTY5OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMzozMToyMFrOF2V-aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzowNjozN1rOF2zWmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNzQ2NQ==", "bodyText": "curious if we should just use try-with-resources\n    @Override\n    @SuppressWarnings(\"unused\") // try-with-resources closes everything\n    public void close() {\n        if (isClosed.compareAndSet(false, true)) {\n            SafeRuntimeException exception = new SafeRuntimeException(\"Close failed.\");\n            try {\n                try (AutoCloseable closeParent = super::close;\n                        AutoCloseable closeCleaner = cleaner;\n                        AutoCloseable closeKvs = keyValueService;\n                        AutoCloseable closeDelegate = () -> shutdownExecutor(deleteExecutor);\n                        AutoCloseable closeRanges = () -> shutdownExecutor(getRangesExecutor);\n                        AutoCloseable closeLockServiceIfPossible = this::closeLockServiceIfPossible;\n                        AutoCloseable closeMetrics = metricsManager::deregisterMetrics) {\n                    log.info(\"Shutting down transaction manager\");\n                    for (Runnable callback : Lists.reverse(closingCallbacks)) {\n                        try (AutoCloseable closeCallback = callback::run) {\n                            log.info(\"Closing callback\");\n                        } catch (Throwable t) {\n                            exception.addSuppressed(t);\n                        }\n                    }\n                }\n            } catch (Exception e) {\n                exception.initCause(e);\n                throw exception;\n            }\n        }\n    }", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r392527465", "createdAt": "2020-03-13T23:31:20Z", "author": {"login": "schlosna"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -327,24 +326,24 @@ public void registerClosingCallback(Runnable closingCallback) {\n     @Override\n     public void close() {\n         if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+\n+            ShutdownRunner shutdownRunner = new ShutdownRunner();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2705831763586a6632cc567889bd2de9ec29b456"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2MTEwOQ==", "bodyText": "The way you implemented it it changes the semantics of the closing callbacks. From javadoc of #registerClosingCallback:\nRegisters a Runnable that will be run after the transaction manager is closed.\n\nI am not a fan of those giant try-with-resources, and since the semantics are so funky (always run closing callbacks AFTER you've closed everything else), I think I prefer my solution.", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r392861109", "createdAt": "2020-03-16T08:48:03Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -327,24 +326,24 @@ public void registerClosingCallback(Runnable closingCallback) {\n     @Override\n     public void close() {\n         if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+\n+            ShutdownRunner shutdownRunner = new ShutdownRunner();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNzQ2NQ=="}, "originalCommit": {"oid": "2705831763586a6632cc567889bd2de9ec29b456"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NTA3Nw==", "bodyText": "But I amended it to make the ShutdownRunner implement autocloseable, that is nice.", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r392865077", "createdAt": "2020-03-16T08:55:46Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -327,24 +326,24 @@ public void registerClosingCallback(Runnable closingCallback) {\n     @Override\n     public void close() {\n         if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+\n+            ShutdownRunner shutdownRunner = new ShutdownRunner();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNzQ2NQ=="}, "originalCommit": {"oid": "2705831763586a6632cc567889bd2de9ec29b456"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwODc5NQ==", "bodyText": "I believe you actually want Guava's Closer, which does this.", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r393008795", "createdAt": "2020-03-16T13:06:37Z", "author": {"login": "felixdesouza"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -327,24 +326,24 @@ public void registerClosingCallback(Runnable closingCallback) {\n     @Override\n     public void close() {\n         if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+\n+            ShutdownRunner shutdownRunner = new ShutdownRunner();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjUyNzQ2NQ=="}, "originalCommit": {"oid": "2705831763586a6632cc567889bd2de9ec29b456"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTY5NTU2OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMToxNDoyNFrOF2vcbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoxNDowMlrOF8EBFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDc0OQ==", "bodyText": "Given that there is a test for this class, would you be able to add any tests that verify this new behaviour (i.e. what happens when an exception is thrown during close)?", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r392944749", "createdAt": "2020-03-16T11:14:24Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -326,26 +325,23 @@ public void registerClosingCallback(Runnable closingCallback) {\n      */\n     @Override\n     public void close() {\n-        if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+        if (!isClosed.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        try (ShutdownRunner shutdownRunner = new ShutdownRunner()) {\n+            shutdownRunner.shutdownSafely(super::close);\n+            shutdownRunner.shutdownSafely(cleaner::close);\n+            shutdownRunner.shutdownSafely(keyValueService::close);\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(deleteExecutor));\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(getRangesExecutor));\n+            shutdownRunner.shutdownSafely(this::closeLockServiceIfPossible);\n+\n             for (Runnable callback : Lists.reverse(closingCallbacks)) {\n-                runShutdownCallbackSafely(callback).ifPresent(suppressedExceptions::add);\n+                shutdownRunner.shutdownSafely(callback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ee85dfb163e2bd7fd4be28cfe54dd546a418589"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk2OTkwMQ==", "bodyText": "I will see what tests I can add, although there's already a whole bunch of tests for SnapshotTransactionManager to do with #close behavior", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r392969901", "createdAt": "2020-03-16T12:07:04Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -326,26 +325,23 @@ public void registerClosingCallback(Runnable closingCallback) {\n      */\n     @Override\n     public void close() {\n-        if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+        if (!isClosed.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        try (ShutdownRunner shutdownRunner = new ShutdownRunner()) {\n+            shutdownRunner.shutdownSafely(super::close);\n+            shutdownRunner.shutdownSafely(cleaner::close);\n+            shutdownRunner.shutdownSafely(keyValueService::close);\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(deleteExecutor));\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(getRangesExecutor));\n+            shutdownRunner.shutdownSafely(this::closeLockServiceIfPossible);\n+\n             for (Runnable callback : Lists.reverse(closingCallbacks)) {\n-                runShutdownCallbackSafely(callback).ifPresent(suppressedExceptions::add);\n+                shutdownRunner.shutdownSafely(callback);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDc0OQ=="}, "originalCommit": {"oid": "4ee85dfb163e2bd7fd4be28cfe54dd546a418589"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwMTc2Ng==", "bodyText": "If I am not mistaken, none of them handle errors during the close.", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r393001766", "createdAt": "2020-03-16T12:53:31Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -326,26 +325,23 @@ public void registerClosingCallback(Runnable closingCallback) {\n      */\n     @Override\n     public void close() {\n-        if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+        if (!isClosed.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        try (ShutdownRunner shutdownRunner = new ShutdownRunner()) {\n+            shutdownRunner.shutdownSafely(super::close);\n+            shutdownRunner.shutdownSafely(cleaner::close);\n+            shutdownRunner.shutdownSafely(keyValueService::close);\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(deleteExecutor));\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(getRangesExecutor));\n+            shutdownRunner.shutdownSafely(this::closeLockServiceIfPossible);\n+\n             for (Runnable callback : Lists.reverse(closingCallbacks)) {\n-                runShutdownCallbackSafely(callback).ifPresent(suppressedExceptions::add);\n+                shutdownRunner.shutdownSafely(callback);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDc0OQ=="}, "originalCommit": {"oid": "4ee85dfb163e2bd7fd4be28cfe54dd546a418589"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNDY5Mg==", "bodyText": "Tests added, good shout. I was holding off until we agreed on approach.", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r398524692", "createdAt": "2020-03-26T12:14:02Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -326,26 +325,23 @@ public void registerClosingCallback(Runnable closingCallback) {\n      */\n     @Override\n     public void close() {\n-        if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+        if (!isClosed.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        try (ShutdownRunner shutdownRunner = new ShutdownRunner()) {\n+            shutdownRunner.shutdownSafely(super::close);\n+            shutdownRunner.shutdownSafely(cleaner::close);\n+            shutdownRunner.shutdownSafely(keyValueService::close);\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(deleteExecutor));\n+            shutdownRunner.shutdownSafely(() -> shutdownExecutor(getRangesExecutor));\n+            shutdownRunner.shutdownSafely(this::closeLockServiceIfPossible);\n+\n             for (Runnable callback : Lists.reverse(closingCallbacks)) {\n-                runShutdownCallbackSafely(callback).ifPresent(suppressedExceptions::add);\n+                shutdownRunner.shutdownSafely(callback);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjk0NDc0OQ=="}, "originalCommit": {"oid": "4ee85dfb163e2bd7fd4be28cfe54dd546a418589"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDYyNzE1OnYy", "diffSide": "RIGHT", "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoxNDo0NVrOF8ECew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMjoxNDo0NVrOF8ECew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUyNTA1MQ==", "bodyText": "Diff here is much better in IntelliJ. The order should be exactly the same, just wrapped with shutdownSafely calls", "url": "https://github.com/palantir/atlasdb/pull/4651#discussion_r398525051", "createdAt": "2020-03-26T12:14:45Z", "author": {"login": "jkozlowski"}, "path": "atlasdb-impl-shared/src/main/java/com/palantir/atlasdb/transaction/impl/SnapshotTransactionManager.java", "diffHunk": "@@ -326,26 +326,23 @@ public void registerClosingCallback(Runnable closingCallback) {\n      */\n     @Override\n     public void close() {\n-        if (isClosed.compareAndSet(false, true)) {\n-            super.close();\n-            cleaner.close();\n-            keyValueService.close();\n-            shutdownExecutor(deleteExecutor);\n-            shutdownExecutor(getRangesExecutor);\n-            closeLockServiceIfPossible();\n-\n-            List<Throwable> suppressedExceptions = new ArrayList<>();\n+        if (!isClosed.compareAndSet(false, true)) {\n+            return;\n+        }\n+\n+        try (ShutdownRunner shutdownRunner = new ShutdownRunner()) {\n+            shutdownRunner.shutdownSafely(super::close);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd8b9c487a204304ca20ef2123b160aa0ee043a"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2981, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}