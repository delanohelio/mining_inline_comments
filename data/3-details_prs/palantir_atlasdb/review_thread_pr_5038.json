{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDI3ODk3", "number": 5038, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNDoxNFrOEvYEPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNjozNVrOEvYI4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTEyODI4OnYy", "diffSide": "RIGHT", "path": "atlasdb-dbkvs-hikari/src/main/java/com/palantir/nexus/db/pool/config/ConnectionProtocol.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNDoxNFrOHkUsoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowMzo1MVrOHkYfnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg0OTg4OA==", "bodyText": "While I agree that equalsIgnoreCase is better than what we were doing before, it should be semantically the same - and indeed, reverting this change resulted in the tests passing.\nI think the fix here is actually @JsonCreator if I am not mistaken - before, it was trying to map directly to one of the enums, whereas now it actually goes through this method - is that right?", "url": "https://github.com/palantir/atlasdb/pull/5038#discussion_r507849888", "createdAt": "2020-10-19T15:34:14Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-dbkvs-hikari/src/main/java/com/palantir/nexus/db/pool/config/ConnectionProtocol.java", "diffHunk": "@@ -28,9 +30,10 @@ public String getUrlString() {\n         return urlStr;\n     }\n \n+    @JsonCreator\n     public static ConnectionProtocol fromUrlString(String val) {\n         for (ConnectionProtocol cp : ConnectionProtocol.values()) {\n-            if (cp.getUrlString().toLowerCase().equals(val.toLowerCase())) {\n+            if (cp.getUrlString().equalsIgnoreCase(val)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe5bc6d5ce0bf2ac0c270663430886325298b607"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5ODg3NQ==", "bodyText": "yes, this is just a slight optimization, as well as making the code more readable", "url": "https://github.com/palantir/atlasdb/pull/5038#discussion_r507898875", "createdAt": "2020-10-19T16:43:23Z", "author": {"login": "berler"}, "path": "atlasdb-dbkvs-hikari/src/main/java/com/palantir/nexus/db/pool/config/ConnectionProtocol.java", "diffHunk": "@@ -28,9 +30,10 @@ public String getUrlString() {\n         return urlStr;\n     }\n \n+    @JsonCreator\n     public static ConnectionProtocol fromUrlString(String val) {\n         for (ConnectionProtocol cp : ConnectionProtocol.values()) {\n-            if (cp.getUrlString().toLowerCase().equals(val.toLowerCase())) {\n+            if (cp.getUrlString().equalsIgnoreCase(val)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg0OTg4OA=="}, "originalCommit": {"oid": "fe5bc6d5ce0bf2ac0c270663430886325298b607"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxMjA5Mw==", "bodyText": "it also avoids an extra string allocation for the case that val is not already lowercase", "url": "https://github.com/palantir/atlasdb/pull/5038#discussion_r507912093", "createdAt": "2020-10-19T17:03:51Z", "author": {"login": "berler"}, "path": "atlasdb-dbkvs-hikari/src/main/java/com/palantir/nexus/db/pool/config/ConnectionProtocol.java", "diffHunk": "@@ -28,9 +30,10 @@ public String getUrlString() {\n         return urlStr;\n     }\n \n+    @JsonCreator\n     public static ConnectionProtocol fromUrlString(String val) {\n         for (ConnectionProtocol cp : ConnectionProtocol.values()) {\n-            if (cp.getUrlString().toLowerCase().equals(val.toLowerCase())) {\n+            if (cp.getUrlString().equalsIgnoreCase(val)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg0OTg4OA=="}, "originalCommit": {"oid": "fe5bc6d5ce0bf2ac0c270663430886325298b607"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTE0MDE3OnYy", "diffSide": "RIGHT", "path": "atlasdb-dbkvs-hikari/src/test/java/com/palantir/nexus/db/pool/config/OracleConnectionConfigTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNTozNjozNVrOHkUzqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNzowMTowM1rOHkYY1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MTY5MA==", "bodyText": "Would you mind writing a test that verifies that this does throw if an invalid protocol is passed?", "url": "https://github.com/palantir/atlasdb/pull/5038#discussion_r507851690", "createdAt": "2020-10-19T15:36:35Z", "author": {"login": "Jolyon-S"}, "path": "atlasdb-dbkvs-hikari/src/test/java/com/palantir/nexus/db/pool/config/OracleConnectionConfigTest.java", "diffHunk": "@@ -163,4 +166,23 @@ public void tcpsSetsTrustStore() throws IOException {\n                 .port(PORT);\n     }\n \n+    @Test\n+    public void protocolCaseInsensitiveTest() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe5bc6d5ce0bf2ac0c270663430886325298b607"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzkxMDM1Nw==", "bodyText": "Done.", "url": "https://github.com/palantir/atlasdb/pull/5038#discussion_r507910357", "createdAt": "2020-10-19T17:01:03Z", "author": {"login": "berler"}, "path": "atlasdb-dbkvs-hikari/src/test/java/com/palantir/nexus/db/pool/config/OracleConnectionConfigTest.java", "diffHunk": "@@ -163,4 +166,23 @@ public void tcpsSetsTrustStore() throws IOException {\n                 .port(PORT);\n     }\n \n+    @Test\n+    public void protocolCaseInsensitiveTest() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg1MTY5MA=="}, "originalCommit": {"oid": "fe5bc6d5ce0bf2ac0c270663430886325298b607"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2642, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}