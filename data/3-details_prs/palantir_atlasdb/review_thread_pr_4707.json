{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzA0MDcx", "number": 4707, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODowNzoxMFrODxw0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODowNzo1OFrODxw1Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTA2NjQxOnYy", "diffSide": "RIGHT", "path": "lock-impl/src/test/java/com/palantir/lock/impl/ClientAwareLockTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODowNzoxMFrOGFayJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozNDoyNVrOGFbw8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzNDg4Ng==", "bodyText": "nit: Don't feel strongly about which way this falls, but we should probably be consistent on whether we prefer the string literal or ThisClass.class.getName() for these executors.", "url": "https://github.com/palantir/atlasdb/pull/4707#discussion_r408334886", "createdAt": "2020-04-14T18:07:10Z", "author": {"login": "jeremyk-91"}, "path": "lock-impl/src/test/java/com/palantir/lock/impl/ClientAwareLockTest.java", "diffHunk": "@@ -48,8 +47,7 @@\n @ShouldRetry\n public final class ClientAwareLockTest {\n \n-    private static final ExecutorService executor = PTExecutors.newCachedThreadPool(\n-            new NamedThreadFactory(ClientAwareLockTest.class.getName(), true));\n+    private static final ExecutorService executor = PTExecutors.newCachedThreadPool(\"ClientAwareLockTest\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe829d9ad427f8713b617658ce4e582cae91888"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MDk2Mg==", "bodyText": "that's fair, I'll revert these out to use class.getName(), no reason to churn on these in this change.", "url": "https://github.com/palantir/atlasdb/pull/4707#discussion_r408350962", "createdAt": "2020-04-14T18:34:25Z", "author": {"login": "carterkozak"}, "path": "lock-impl/src/test/java/com/palantir/lock/impl/ClientAwareLockTest.java", "diffHunk": "@@ -48,8 +47,7 @@\n @ShouldRetry\n public final class ClientAwareLockTest {\n \n-    private static final ExecutorService executor = PTExecutors.newCachedThreadPool(\n-            new NamedThreadFactory(ClientAwareLockTest.class.getName(), true));\n+    private static final ExecutorService executor = PTExecutors.newCachedThreadPool(\"ClientAwareLockTest\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzNDg4Ng=="}, "originalCommit": {"oid": "dbe829d9ad427f8713b617658ce4e582cae91888"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTA2OTE0OnYy", "diffSide": "RIGHT", "path": "changelog/@unreleased/pr-4707.v2.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODowNzo1OFrOGFaz5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxODozMzowMlrOGFbtkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzNTMzNQ==", "bodyText": "We could mark this as break if we want to make the ABI break more obvious.", "url": "https://github.com/palantir/atlasdb/pull/4707#discussion_r408335335", "createdAt": "2020-04-14T18:07:58Z", "author": {"login": "jeremyk-91"}, "path": "changelog/@unreleased/pr-4707.v2.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+type: improvement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe829d9ad427f8713b617658ce4e582cae91888"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM1MDA5OA==", "bodyText": "Good call, version numbers are cheap :-)", "url": "https://github.com/palantir/atlasdb/pull/4707#discussion_r408350098", "createdAt": "2020-04-14T18:33:02Z", "author": {"login": "carterkozak"}, "path": "changelog/@unreleased/pr-4707.v2.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+type: improvement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzNTMzNQ=="}, "originalCommit": {"oid": "dbe829d9ad427f8713b617658ce4e582cae91888"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3051, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}