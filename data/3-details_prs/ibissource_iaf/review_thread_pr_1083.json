{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTMyNjY0", "number": 1083, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODoyNzo0NlrOEm7r8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODoyOToxNlrOEnXCJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjU5MjQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwODoyNzo0NlrOHXPcaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwNjo0NTo0NFrOHX3BMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzMjMyOQ==", "bodyText": "Ik vind het erg tof dat je met de tijd mee gaat en allemaal lambda's gebruikt, ik vind het er alleen niet duidelijker op worden. ConnectedOperation is gewoon een Boolean?", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r494132329", "createdAt": "2020-09-24T08:27:46Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcListener.java", "diffHunk": "@@ -266,8 +258,61 @@ public void afterMessageProcessed(PipeLineResult processResult, Object rawMessag\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic boolean setMessageStateToInProcess(Object rawMessage, Map<String, Object> threadContext) throws ListenerException {\n+\t\tif (StringUtils.isEmpty(getUpdateStatusToInProcessQuery())) {\n+\t\t\treturn false;\n+\t\t} \n+\t\treturn doConnected(rawMessage, threadContext, setMessageStateToInProcess);\n+\t}\n+\n+\tpublic ConnectedOperation<Boolean> setMessageStateToInProcess = (Connection conn, Object rawMessage, Map<String, Object> threadContext) -> {\n+\t\tif (StringUtils.isEmpty(getUpdateStatusToInProcessQuery())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tString key = getIdFromRawMessage(rawMessage, threadContext);\n+\t\texecute(conn,getUpdateStatusToInProcessQuery(), key);\n+\t\treturn true;\n+\t};\n+\n+\n+\t@Override\n+\tpublic void revertInProcessStatusToAvailable(Object rawMessage, Map<String, Object> threadContext) throws ListenerException {\n+\t\tif (StringUtils.isEmpty(getRevertInProcessStatusQuery())) {\n+\t\t\treturn;\n+\t\t}\n+\t\tdoConnected(rawMessage, threadContext, revertInProcessStatusToAvailable);\t\n+\t}\n+\n+\tprotected ConnectedOperation<Boolean> revertInProcessStatusToAvailable = (Connection conn, Object rawMessage, Map<String, Object> threadContext) -> {\n+\t\tif (StringUtils.isEmpty(getRevertInProcessStatusQuery())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tString key=getIdFromRawMessage(rawMessage,threadContext);\n+\t\texecute(conn,getRevertInProcessStatusQuery(), key);\n+\t\treturn true;\n+\t};\n+\n+\tprotected interface ConnectedOperation<X> {\n+\t\tX operate(Connection conn, Object rawMessage, Map<String, Object> threadContext) throws ListenerException;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665f61a0b95ad97f7bfe78c3b7d46c1e511e0f77"}, "originalPosition": 219}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDc4MDcyMA==", "bodyText": "Heb nu ConnectedOperation inderdaad een boolean gemaakt. Ik dacht dat ik hem vaker kon gebruiken, maar lambda's zijn toch niet zo handig dat ze zo flexibel zijn. Voor elke signature moet je een andere functionele interface maken.", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r494780720", "createdAt": "2020-09-25T06:45:44Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcListener.java", "diffHunk": "@@ -266,8 +258,61 @@ public void afterMessageProcessed(PipeLineResult processResult, Object rawMessag\n \t\t\t}\n \t\t}\n \t}\n+\n+\t@Override\n+\tpublic boolean setMessageStateToInProcess(Object rawMessage, Map<String, Object> threadContext) throws ListenerException {\n+\t\tif (StringUtils.isEmpty(getUpdateStatusToInProcessQuery())) {\n+\t\t\treturn false;\n+\t\t} \n+\t\treturn doConnected(rawMessage, threadContext, setMessageStateToInProcess);\n+\t}\n+\n+\tpublic ConnectedOperation<Boolean> setMessageStateToInProcess = (Connection conn, Object rawMessage, Map<String, Object> threadContext) -> {\n+\t\tif (StringUtils.isEmpty(getUpdateStatusToInProcessQuery())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tString key = getIdFromRawMessage(rawMessage, threadContext);\n+\t\texecute(conn,getUpdateStatusToInProcessQuery(), key);\n+\t\treturn true;\n+\t};\n+\n+\n+\t@Override\n+\tpublic void revertInProcessStatusToAvailable(Object rawMessage, Map<String, Object> threadContext) throws ListenerException {\n+\t\tif (StringUtils.isEmpty(getRevertInProcessStatusQuery())) {\n+\t\t\treturn;\n+\t\t}\n+\t\tdoConnected(rawMessage, threadContext, revertInProcessStatusToAvailable);\t\n+\t}\n+\n+\tprotected ConnectedOperation<Boolean> revertInProcessStatusToAvailable = (Connection conn, Object rawMessage, Map<String, Object> threadContext) -> {\n+\t\tif (StringUtils.isEmpty(getRevertInProcessStatusQuery())) {\n+\t\t\treturn false;\n+\t\t}\n+\t\tString key=getIdFromRawMessage(rawMessage,threadContext);\n+\t\texecute(conn,getRevertInProcessStatusQuery(), key);\n+\t\treturn true;\n+\t};\n+\n+\tprotected interface ConnectedOperation<X> {\n+\t\tX operate(Connection conn, Object rawMessage, Map<String, Object> threadContext) throws ListenerException;\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDEzMjMyOQ=="}, "originalCommit": {"oid": "665f61a0b95ad97f7bfe78c3b7d46c1e511e0f77"}, "originalPosition": 219}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjczNzg3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/MessageStoreListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTowMjo1MlrOHXQ2fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwOTowMjo1MlrOHXQ2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDE1NTM5MQ==", "bodyText": "Ik vind het stom dat je 2 setters hebt en vervolgens een field direct wijzigt.", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r494155391", "createdAt": "2020-09-24T09:02:52Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/MessageStoreListener.java", "diffHunk": "@@ -128,6 +128,18 @@ public Object getRawMessage(Map<String,Object> threadContext) throws ListenerExc\n \t\treturn rawMessage;\n \t}\n \n+\t@Override\n+\tpublic IMessageBrowser<Object> getInProcessBrowser() {\n+\t\tIMessageBrowser<Object> result = super.getInProcessBrowser();\n+\t\tif (result!=null && result instanceof JdbcTableMessageBrowser) {\n+\t\t\tJdbcTableMessageBrowser<Object> jtmb = (JdbcTableMessageBrowser<Object>)result;\n+\t\t\tjtmb.setCommentField(\"COMMENTS\");\n+\t\t\tjtmb.setExpiryDateField(\"EXPIRYDATE\");\n+\t\t\tjtmb.hostField=\"HOST\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "665f61a0b95ad97f7bfe78c3b7d46c1e511e0f77"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NzA1OTM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/MessageStoreListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODoyNToyOVrOHX5-yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODoyNToyOVrOHX5-yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgyOTI1OA==", "bodyText": "Heeeeeeeee, dit gebeurd nu 3 keer?", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r494829258", "createdAt": "2020-09-25T08:25:29Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/MessageStoreListener.java", "diffHunk": "@@ -128,14 +128,26 @@ public Object getRawMessage(Map<String,Object> threadContext) throws ListenerExc\n \t\treturn rawMessage;\n \t}\n \n+\t@Override\n+\tpublic IMessageBrowser<Object> getInProcessBrowser() {\n+\t\tIMessageBrowser<Object> result = super.getInProcessBrowser();\n+\t\tif (result!=null && result instanceof JdbcTableMessageBrowser) {\n+\t\t\tJdbcTableMessageBrowser<Object> jtmb = (JdbcTableMessageBrowser<Object>)result;\n+\t\t\tjtmb.setCommentField(\"COMMENTS\");\n+\t\t\tjtmb.setExpiryDateField(\"EXPIRYDATE\");\n+\t\t\tjtmb.setHostField(\"HOST\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27fc69e708ba0fb07fb25a24bb773266a1552af"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NzA3MzAwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcTransactionalStorage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODoyOToxNlrOHX6HIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo1NDozOVrOHYJYAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgzMTM5NA==", "bodyText": "Mag dan weg toch? als het toch niets doet...", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r494831394", "createdAt": "2020-09-25T08:29:16Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcTransactionalStorage.java", "diffHunk": "@@ -1013,9 +1013,10 @@ public boolean isActive() {\n \t\treturn active;\n \t}\n \n+\t@Override\n \t@IbisDoc({\"the name of the column that stores the hostname of the server\", \"host\"})\n \tpublic void setHostField(String hostField) {\n-\t\tthis.hostField = hostField;\n+\t\tsuper.setHostField(hostField);\n \t}\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27fc69e708ba0fb07fb25a24bb773266a1552af"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4MTQ3NA==", "bodyText": "toch niet, want de super is protected", "url": "https://github.com/ibissource/iaf/pull/1083#discussion_r495081474", "createdAt": "2020-09-25T15:54:39Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/JdbcTransactionalStorage.java", "diffHunk": "@@ -1013,9 +1013,10 @@ public boolean isActive() {\n \t\treturn active;\n \t}\n \n+\t@Override\n \t@IbisDoc({\"the name of the column that stores the hostname of the server\", \"host\"})\n \tpublic void setHostField(String hostField) {\n-\t\tthis.hostField = hostField;\n+\t\tsuper.setHostField(hostField);\n \t}\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgzMTM5NA=="}, "originalCommit": {"oid": "d27fc69e708ba0fb07fb25a24bb773266a1552af"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}