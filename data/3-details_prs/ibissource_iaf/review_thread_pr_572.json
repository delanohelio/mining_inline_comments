{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTYxMDg5", "number": 572, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoyNTowOFrODuDbLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjowNzo0NVrODuOCzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjE3MTk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/api/ExecuteJdbcQuery.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoyNTowOFrOF_1owQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoyNTowOFrOF_1owQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ4MzM5Mw==", "bodyText": "Could you turn the resultType in an if else case and if none matches do asString?", "url": "https://github.com/ibissource/iaf/pull/572#discussion_r402483393", "createdAt": "2020-04-02T17:25:08Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/api/ExecuteJdbcQuery.java", "diffHunk": "@@ -130,30 +129,23 @@ public Response execute(LinkedHashMap<String, Object> json) throws ApiException\n \t\t\tqs.setBlobSmartGet(true);\n \t\t\tqs.configure(true);\n \t\t\tqs.open();\n-\t\t\tresult = qs.sendMessage(new Message(query), null).asString();\n+\t\t\tMessage message = qs.sendMessage(new Message(query), null);\n+\t\t\tresult = message.asString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "044f6716d637382bb3efc20a68ddc17582e6b5a7"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NjE3NTcxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/jdbc/transformer/toJson.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoyNjowNFrOF_1rDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzoyNjowNFrOF_1rDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ4Mzk4Mg==", "bodyText": "We have also made a helper class for this: TestFileUtils.getTestFile(URL)", "url": "https://github.com/ibissource/iaf/pull/572#discussion_r402483982", "createdAt": "2020-04-02T17:26:04Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/jdbc/transformer/toJson.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package nl.nn.adapterframework.jdbc.transformer;\n+\n+import nl.nn.adapterframework.stream.Message;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.xml.sax.SAXException;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+@RunWith(Parameterized.class)\n+public class toJson {\n+\tprivate final static String FOLDER = \"src/test/resources/Jdbc.transformer\";\n+\tprivate File xmlFile, expectedFile;\n+\n+\tpublic toJson(File xmlFile, File expectedFile) {\n+\t\tthis.xmlFile = xmlFile;\n+\t\tthis.expectedFile = expectedFile;\n+\t}\n+\n+\t@Parameterized.Parameters\n+\tpublic static Collection<Object[]> data() {\n+\t\tList<Object[]> files = new ArrayList<>();\n+\t\tint i = 0;\n+\t\tFile xml = new File(FOLDER, i + \".xml\");\n+\t\tFile json = new File(FOLDER, i + \".json\");\n+\t\tSystem.out.println(xml.getAbsolutePath());\n+\t\twhile (xml.exists() && json.exists()) {\n+\t\t\tSystem.out.println(String.format(\"Added [%s] and [%s]\", xml.getName(), json.getName()));\n+\t\t\tfiles.add(new File[] {xml, json});\n+\t\t\ti++;\n+\t\t\txml = new File(FOLDER, i + \".xml\");\n+\t\t\tjson = new File(FOLDER, i + \".json\");\n+\t\t}\n+\n+\t\treturn files;\n+\t}\n+\n+\t@Test\n+\tpublic void doTest() throws IOException, SAXException {\n+\t\tString expected = new String(Files.readAllBytes(Paths.get(expectedFile.getAbsolutePath())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "044f6716d637382bb3efc20a68ddc17582e6b5a7"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzkxMTgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/transformer/QueryOutputToCSV.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjowNzo0NVrOGAGOGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjowNzo0NVrOGAGOGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1NTA5Ng==", "bodyText": "I suggest you use org.apache.commons.lang.StringEscapeUtils.escapeCSV() here.", "url": "https://github.com/ibissource/iaf/pull/572#discussion_r402755096", "createdAt": "2020-04-03T06:07:45Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/transformer/QueryOutputToCSV.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package nl.nn.adapterframework.jdbc.transformer;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.XMLReader;\n+\n+public class QueryOutputToCSV extends AbstractQueryOutputTransformer {\n+\tpublic QueryOutputToCSV() throws SAXException {\n+\t\tsuper();\n+\t}\n+\n+\tpublic QueryOutputToCSV(XMLReader parent) {\n+\t\tsuper(parent);\n+\t}\n+\n+\t@Override\n+\tprotected void startRow() {\n+\t\toutput.append(\"\\n\");\n+\t}\n+\n+\t@Override\n+\tprotected void endRow() {\n+\t\t// Delete last comma\n+\t\toutput.deleteCharAt(output.length() - 1);\n+\t}\n+\n+\t@Override\n+\tprotected void addFieldDefinition(Attributes atts) {\n+\t\toutput.append(\"\\\"\").append(atts.getValue(\"name\")).append(\"\\\",\");\n+\t}\n+\n+\t@Override\n+\tprotected void addField(String fieldName, String value) {\n+\t\toutput.append(\"\\\"\").append(value).append(\"\\\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "044f6716d637382bb3efc20a68ddc17582e6b5a7"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 419, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}