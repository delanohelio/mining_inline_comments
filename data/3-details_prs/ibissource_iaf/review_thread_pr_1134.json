{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDUxOTA0", "number": 1134, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0MTo0NVrOEr7-2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0OTo0OVrOEr8I6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTA2OTcxOnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/springCommon.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0MTo0NVrOHe-m0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0MTo0NVrOHe-m0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0NTA3Mg==", "bodyText": "doesn't create instances unnecessarily", "url": "https://github.com/ibissource/iaf/pull/1134#discussion_r502245072", "createdAt": "2020-10-09T07:41:45Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/resources/springCommon.xml", "diffHunk": "@@ -278,7 +278,7 @@\n \tBeans created from Configuration.xml, but prototyped here for\n \textra dependencies which cannot be created otherwise.\n \tBean names are prefixed with 'proto-' so that autowiring by\n-\tname doesn't create unnessecary instances.\n+\tname doesn't create unnecessarily instances.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd57039d6251899cada67bc7b785fc2ff7b10550"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTA5NTQ2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/configuration/digester/FrankDigesterRules.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0OTo0OVrOHe-2lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNzo0OTo0OVrOHe-2lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI0OTEwOA==", "bodyText": "Ik zie hier nog niet de structuur van digester-rules.xml in terug, dus per pattern een 'create', 'set-properties' en 'register'", "url": "https://github.com/ibissource/iaf/pull/1134#discussion_r502249108", "createdAt": "2020-10-09T07:49:49Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/configuration/digester/FrankDigesterRules.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.configuration.digester;\n+\n+import org.apache.commons.digester3.Digester;\n+import org.apache.commons.digester3.ObjectCreationFactory;\n+import org.apache.commons.digester3.Rule;\n+import org.apache.commons.digester3.binder.LinkedRuleBuilder;\n+import org.apache.commons.digester3.binder.RulesBinder;\n+import org.apache.commons.digester3.binder.RulesModule;\n+import org.apache.logging.log4j.Logger;\n+\n+import nl.nn.adapterframework.configuration.AttributeCheckingRule;\n+import nl.nn.adapterframework.configuration.ConfigurationDigesterFactory;\n+import nl.nn.adapterframework.configuration.GenericFactory;\n+import nl.nn.adapterframework.configuration.JmsRealmsFactory;\n+import nl.nn.adapterframework.configuration.ListenerFactory;\n+import nl.nn.adapterframework.configuration.RecordHandlingFlowFactory;\n+import nl.nn.adapterframework.util.LogUtil;\n+\n+public class FrankDigesterRules implements RulesModule {\n+\n+\tprivate final Logger log = LogUtil.getLogger(this);\n+\tprivate GenericFactory factory = new GenericFactory();\n+\tprivate Rule attributeChecker = new AttributeCheckingRule();\n+\tprivate Digester digester;\n+\n+\tpublic FrankDigesterRules(Digester digester) {\n+\t\tthis.digester = digester;\n+\t}\n+\n+\t@Override\n+\tpublic void configure(RulesBinder rulesBinder) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd57039d6251899cada67bc7b785fc2ff7b10550"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 558, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}