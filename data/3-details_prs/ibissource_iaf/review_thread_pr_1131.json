{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5Nzk4Mzg2", "number": 1131, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoxNjozNlrOErsGQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyODoyM1rOErsZBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjQ2NzIxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoxNjozNlrOHemQRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoxNjozNlrOHemQRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg0NjA4NA==", "bodyText": "All you had to do was rename the method, the logic could have stayed where it was.\nThe idea of enums is that once (in the near future?) we can add them to our xsd so people can use autocomplete to fill the attribute values.\nThere isn't really a standard yet, but I think we should use getMethodNameEnum() so in this case getAuthenticationMethodEnum. Since there is no need to have a getter, and we don't want the 'BeansParser' to error when the dataTypes are different, just renaming the method should be enough.\nIf a getter is desirable, the getter-method should call the getMethodNameEnum().name() method, which in turn returns the correct dataType.", "url": "https://github.com/ibissource/iaf/pull/1131#discussion_r501846084", "createdAt": "2020-10-08T16:16:36Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiListener.java", "diffHunk": "@@ -221,39 +229,20 @@ public boolean getUpdateEtag() {\n \t//TODO add authenticationType\n \n \t@IbisDoc({\"7\", \"enables security for this listener, must be one of [NONE, COOKIE, HEADER, AUTHROLE]. If you wish to use the application servers authorisation roles [AUTHROLE], you need to enable them globally for all ApiListeners with the `servlet.ApiListenerServlet.securityroles=ibistester,ibiswebservice` property\", \"NONE\"})\n-\tpublic void setAuthenticationMethod(String authenticationMethod) throws ConfigurationException {\n-\t\ttry {\n-\t\t\tthis.authenticationMethod = AuthenticationMethods.valueOf(authenticationMethod);\n-\t\t}\n-\t\tcatch (IllegalArgumentException iae) {\n-\t\t\tthrow new ConfigurationException(\"Unknown authenticationMethod [\"+authenticationMethod+\"]. Must be one of \"+ Arrays.asList(AuthenticationMethods.values()));\n-\t\t}\n+\tpublic void setAuthenticationMethod(String authenticationMethod) {\n+\t\tthis.authenticationMethod = authenticationMethod;\n \t}\n \n-\tpublic AuthenticationMethods getAuthenticationMethod() {\n+\tpublic AuthenticationMethods getAuthenticationMethodType() {\n \t\tif(authenticationMethod == null) {\n-\t\t\tauthenticationMethod = AuthenticationMethods.NONE;\n+\t\t\treturn AuthenticationMethods.NONE;\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c2e3c0264215f20ac6ae64b5049f57d33ec9f2f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjUxNTI1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiListenerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyODoyM1rOHemuLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNjoyODoyM1rOHemuLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg1Mzc0MQ==", "bodyText": "I'm confused, shouldn't this test return an exception?", "url": "https://github.com/ibissource/iaf/pull/1131#discussion_r501853741", "createdAt": "2020-10-08T16:28:23Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiListenerTest.java", "diffHunk": "@@ -191,19 +196,17 @@ public void acceptsJson() throws ConfigurationException {\n \t\tassertTrue(\"accepts JSON\", listener.accepts(acceptHeader));\n \t}\n \n-\t@Test(expected = ConfigurationException.class)\n+\t@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c2e3c0264215f20ac6ae64b5049f57d33ec9f2f"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 555, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}