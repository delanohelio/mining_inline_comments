{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzOTgwMDIy", "number": 1278, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo1Mzo0OVrOE7Jd8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyNjozM1rOE8IW1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDU2NTYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo1Mzo0OVrOH2oIbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo1Mzo0OVrOH2oIbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA0MjY2OQ==", "bodyText": "Dit vraagt om een Message.isEmpty(result)", "url": "https://github.com/ibissource/iaf/pull/1278#discussion_r527042669", "createdAt": "2020-11-19T16:53:49Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1256,33 +1256,37 @@ private Message processMessageInAdapter(Object rawMessageOrWrapper, Message mess\n \t\t\t\t\tpipeLineResult = adapter.processMessageWithExceptions(businessCorrelationId, pipelineMessage, pipelineSession);\n \t\t\t\t\tsetExitState(threadContext, pipeLineResult.getState(), pipeLineResult.getExitCode());\n \t\t\t\t\tpipelineSession.put(\"exitcode\", \"\"+ pipeLineResult.getExitCode());\n-\t\t\t\t\tresult=pipeLineResult.getResult().asString();\n-\t\t\t\t\tif(result != null && result.length() > ITransactionalStorage.MAXCOMMENTLEN) {\n-\t\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\"+result.substring(0, ITransactionalStorage.MAXCOMMENTLEN)+\"]\";\n-\t\t\t\t\t}else {\n-\t\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\"+result+\"]\";\n+\t\t\t\t\tresult=pipeLineResult.getResult();\n+\n+\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\";\n+\t\t\t\t\tif(result != null && !result.isEmpty() && result.size() > ITransactionalStorage.MAXCOMMENTLEN) { //Since we can determine the size, assume the message is preservable\n+\t\t\t\t\t\terrorMessage += result.asString().substring(0, ITransactionalStorage.MAXCOMMENTLEN);\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\terrorMessage += result;\n \t\t\t\t\t}\n+\t\t\t\t\terrorMessage += \"]\";\n+\n \t\t\t\t\tint status = pipeLineResult.getExitCode();\n \t\t\t\t\tif(status > 0) {\n \t\t\t\t\t\terrorMessage += \", exitcode [\"+status+\"]\";\n \t\t\t\t\t}\n+\n \t\t\t\t\tif (log.isDebugEnabled()) { log.debug(getLogPrefix()+\"received result: \"+errorMessage); }\n \t\t\t\t\tmessageInError=txStatus.isRollbackOnly();\n \t\t\t\t} finally {\n \t\t\t\t\tlog.debug(getLogPrefix()+\"canceling TimeoutGuard, isInterrupted [\"+Thread.currentThread().isInterrupted()+\"]\");\n \t\t\t\t\tif (tg.cancel()) {\n \t\t\t\t\t\terrorMessage = \"timeout exceeded\";\n-\t\t\t\t\t\tif (StringUtils.isEmpty(result)) {\n-\t\t\t\t\t\t\tresult=\"<timeout/>\";\n+\t\t\t\t\t\tif (result == null || result.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bd2d6b4bbdf29755392209cb4cd575cd2eb3c3"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDg2OTM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyNjozM1rOH4FA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwOToyNjozM1rOH4FA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU2NDQ3MQ==", "bodyText": "Hier wil je niet dat Message.size() zo smart is om de lengte van een file te weten, en dan hier eerst een hele file van zeg 1GB in geheugen te lezen om er maar een klein stukje van af te drukken.\nEr moet dus naar mijn idee ook nog een test bij op result.asObject() instanceof String", "url": "https://github.com/ibissource/iaf/pull/1278#discussion_r528564471", "createdAt": "2020-11-23T09:26:33Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/receivers/Receiver.java", "diffHunk": "@@ -1256,33 +1256,37 @@ private Message processMessageInAdapter(Object rawMessageOrWrapper, Message mess\n \t\t\t\t\tpipeLineResult = adapter.processMessageWithExceptions(businessCorrelationId, pipelineMessage, pipelineSession);\n \t\t\t\t\tsetExitState(threadContext, pipeLineResult.getState(), pipeLineResult.getExitCode());\n \t\t\t\t\tpipelineSession.put(\"exitcode\", \"\"+ pipeLineResult.getExitCode());\n-\t\t\t\t\tresult=pipeLineResult.getResult().asString();\n-\t\t\t\t\tif(result != null && result.length() > ITransactionalStorage.MAXCOMMENTLEN) {\n-\t\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\"+result.substring(0, ITransactionalStorage.MAXCOMMENTLEN)+\"]\";\n-\t\t\t\t\t}else {\n-\t\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\"+result+\"]\";\n+\t\t\t\t\tresult=pipeLineResult.getResult();\n+\n+\t\t\t\t\terrorMessage = \"exitState [\"+pipeLineResult.getState()+\"], result [\";\n+\t\t\t\t\tif(!Message.isEmpty(result) && result.size() > ITransactionalStorage.MAXCOMMENTLEN) { //Since we can determine the size, assume the message is preservable\n+\t\t\t\t\t\terrorMessage += result.asString().substring(0, ITransactionalStorage.MAXCOMMENTLEN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4a1a20af7fd1b65f302572909ad1fac8e0fa2c0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 654, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}