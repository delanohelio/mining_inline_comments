{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzExMTIx", "number": 624, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODozMToyN1rOD1Kbdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoxNDowNVrOD1vqWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MDcxOTkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLineExit.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODozMToyN1rOGKdWkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwODozMToyN1rOGKdWkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYxOTg1OA==", "bodyText": "Nu lijkt het of de PLE een naam heeft?", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r413619858", "createdAt": "2020-04-23T08:31:27Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLineExit.java", "diffHunk": "@@ -61,6 +61,10 @@\n \tpublic String getPath() {\n \t\treturn path;\n \t}\n+\t@Override\n+\tpublic String getName() {\n+\t\treturn getPath();\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56e07ba8443f35321d27f6c3dac9ce9eb227edb4"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjU1NjE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/core/IForwardTarget.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTozNToxN1rOGKukvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNTozNToxN1rOGKukvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkwMjAxNQ==", "bodyText": "Misschien handig hier te documenteren wat getName in deze context representeert.", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r413902015", "createdAt": "2020-04-23T15:35:17Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/IForwardTarget.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.core;\n+\n+public interface IForwardTarget {\n+\t\n+\tpublic String getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56e07ba8443f35321d27f6c3dac9ce9eb227edb4"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjcxOTcxOnYy", "diffSide": "RIGHT", "path": "ladybug/src/main/resources/springIbisDebuggerAdvice.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo0ODo0NlrOGLT7tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1ODo1OFrOGLZCnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNDEwMg==", "bodyText": "Wat doet dit? .. ?", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414514102", "createdAt": "2020-04-24T11:48:46Z", "author": {"login": "nielsm5"}, "path": "ladybug/src/main/resources/springIbisDebuggerAdvice.xml", "diffHunk": "@@ -123,17 +123,18 @@\n \t\t\t<aop:around\n \t\t\t\tpointcut=\n \t\t\t\t\t\"\n-\t \t\t\t\t\texecution(\n-\t \t\t\t\t\t\t*\n-\t \t\t\t\t\t\tnl.nn.adapterframework.stream.IOutputStreamingSupport.provideOutputStream(\n-\t \t\t\t\t\t\t\tnl.nn.adapterframework.core.IPipeLineSession, nl.nn.adapterframework.stream.IOutputStreamingSupport\n-\t \t\t\t\t\t\t)\n+\t \t\t\t\texecution(\n+\t \t\t\t\t\t*\n+\t \t\t\t\t\tnl.nn.adapterframework.stream.IOutputStreamingSupport.provideOutputStream(\n+\t \t\t\t\t\t\tnl.nn.adapterframework.core.IPipeLineSession, \n+\t \t\t\t\t\t\t..", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5Nzc4OQ==", "bodyText": "Dit verwijst naar optionele extra argumenten. Dus met of zonder IForwardTarget, in dit geval", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414597789", "createdAt": "2020-04-24T13:58:58Z", "author": {"login": "gvanbrakel"}, "path": "ladybug/src/main/resources/springIbisDebuggerAdvice.xml", "diffHunk": "@@ -123,17 +123,18 @@\n \t\t\t<aop:around\n \t\t\t\tpointcut=\n \t\t\t\t\t\"\n-\t \t\t\t\t\texecution(\n-\t \t\t\t\t\t\t*\n-\t \t\t\t\t\t\tnl.nn.adapterframework.stream.IOutputStreamingSupport.provideOutputStream(\n-\t \t\t\t\t\t\t\tnl.nn.adapterframework.core.IPipeLineSession, nl.nn.adapterframework.stream.IOutputStreamingSupport\n-\t \t\t\t\t\t\t)\n+\t \t\t\t\texecution(\n+\t \t\t\t\t\t*\n+\t \t\t\t\t\tnl.nn.adapterframework.stream.IOutputStreamingSupport.provideOutputStream(\n+\t \t\t\t\t\t\tnl.nn.adapterframework.core.IPipeLineSession, \n+\t \t\t\t\t\t\t..", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxNDEwMg=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njc0ODE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/stream/StreamingPipe.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMTo1NjowM1rOGLULgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo0ODozNlrOGLeAuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxODE0NQ==", "bodyText": "wat doet deze methode nu nog??", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414518145", "createdAt": "2020-04-24T11:56:03Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/stream/StreamingPipe.java", "diffHunk": "@@ -63,66 +70,18 @@ public boolean requiresOutputStream() {\n \n \t/**\n \t * provide the outputstream, or null if a stream cannot be provided.\n-\t * If nextProvider is null, then descendants must replace it with getStreamTarget().\n+\t * Implementations should provide a forward target by calling {@link #getNextPipe()}.\n \t */\n-\t@Override\n-\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session, IOutputStreamingSupport nextProvider) throws StreamingException {\n+\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session) throws StreamingException {\n \t\treturn null;\n \t}\n \n-\t/**\n-\t * Descendants of this class must implement this method. When nextProvider is not null, they can use that to obtain an OutputStream to write their results to. \n-\t */\n-\tpublic abstract PipeRunResult doPipe(Message input, IPipeLineSession session, IOutputStreamingSupport nextProvider) throws PipeRunException;\n-\t\n \t@Override\n-\tpublic final PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n-\t\treturn doPipe(message, session, getStreamTarget());\n+\tpublic final MessageOutputStream provideOutputStream(IPipeLineSession session, IForwardTarget next) throws StreamingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5NzE1Nw==", "bodyText": "Hij implementeert IOutputStreamingSupport.provideOutputStream, en kan als zodanig aangeroepen worden.\nAls hij geimplementeerd wordt door Senders is het tweede argument wel nodig.", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414597157", "createdAt": "2020-04-24T13:58:08Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/stream/StreamingPipe.java", "diffHunk": "@@ -63,66 +70,18 @@ public boolean requiresOutputStream() {\n \n \t/**\n \t * provide the outputstream, or null if a stream cannot be provided.\n-\t * If nextProvider is null, then descendants must replace it with getStreamTarget().\n+\t * Implementations should provide a forward target by calling {@link #getNextPipe()}.\n \t */\n-\t@Override\n-\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session, IOutputStreamingSupport nextProvider) throws StreamingException {\n+\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session) throws StreamingException {\n \t\treturn null;\n \t}\n \n-\t/**\n-\t * Descendants of this class must implement this method. When nextProvider is not null, they can use that to obtain an OutputStream to write their results to. \n-\t */\n-\tpublic abstract PipeRunResult doPipe(Message input, IPipeLineSession session, IOutputStreamingSupport nextProvider) throws PipeRunException;\n-\t\n \t@Override\n-\tpublic final PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n-\t\treturn doPipe(message, session, getStreamTarget());\n+\tpublic final MessageOutputStream provideOutputStream(IPipeLineSession session, IForwardTarget next) throws StreamingException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxODE0NQ=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY3OTIyNA==", "bodyText": "Maar hij is final en hij doet niets met de target? Wie kan dit implementeren?", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414679224", "createdAt": "2020-04-24T15:48:36Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/stream/StreamingPipe.java", "diffHunk": "@@ -63,66 +70,18 @@ public boolean requiresOutputStream() {\n \n \t/**\n \t * provide the outputstream, or null if a stream cannot be provided.\n-\t * If nextProvider is null, then descendants must replace it with getStreamTarget().\n+\t * Implementations should provide a forward target by calling {@link #getNextPipe()}.\n \t */\n-\t@Override\n-\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session, IOutputStreamingSupport nextProvider) throws StreamingException {\n+\tpublic MessageOutputStream provideOutputStream(IPipeLineSession session) throws StreamingException {\n \t\treturn null;\n \t}\n \n-\t/**\n-\t * Descendants of this class must implement this method. When nextProvider is not null, they can use that to obtain an OutputStream to write their results to. \n-\t */\n-\tpublic abstract PipeRunResult doPipe(Message input, IPipeLineSession session, IOutputStreamingSupport nextProvider) throws PipeRunException;\n-\t\n \t@Override\n-\tpublic final PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n-\t\treturn doPipe(message, session, getStreamTarget());\n+\tpublic final MessageOutputStream provideOutputStream(IPipeLineSession session, IForwardTarget next) throws StreamingException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUxODE0NQ=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njc4MDU0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/TimeoutGuardPipe.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowNDoyNVrOGLUd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1MDoxOFrOGLYpHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMjg3NA==", "bodyText": "Waarom asString? kan het geen message blijven?\nIk zou hier return new PipeRunResult(getForward(), message); verwachten", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414522874", "createdAt": "2020-04-24T12:04:25Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/TimeoutGuardPipe.java", "diffHunk": "@@ -100,9 +100,8 @@ public PipeRunResult doPipe(Message message, IPipeLineSession session) throws Pi\n \t\tFuture future = service.submit(doPipe);\n \t\tString result = null;\n \t\ttry {\n-\t\t\tlog.debug(getLogPrefix(session) + \"setting timeout of [\"\n-\t\t\t\t\t+ timeout_work + \"] s\");\n-\t\t\tresult = (String) future.get(timeout_work, TimeUnit.SECONDS);\n+\t\t\tlog.debug(getLogPrefix(session) + \"setting timeout of [\" + timeout_work + \"] s\");\n+\t\t\tresult = Message.asString(future.get(timeout_work, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5MTI2MA==", "bodyText": "Omdat ik er niet aan wilde zitten. We moeten van deze TimeoutGuardPipe af, omdat hij z'n werk niet afbreekt bij een timeout, maar alleen het proces door laat lopen. Het is dus nu een soort uitgestelde asynchrone excutor.\nIk zal hem deprecieren.", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414591260", "createdAt": "2020-04-24T13:50:18Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/TimeoutGuardPipe.java", "diffHunk": "@@ -100,9 +100,8 @@ public PipeRunResult doPipe(Message message, IPipeLineSession session) throws Pi\n \t\tFuture future = service.submit(doPipe);\n \t\tString result = null;\n \t\ttry {\n-\t\t\tlog.debug(getLogPrefix(session) + \"setting timeout of [\"\n-\t\t\t\t\t+ timeout_work + \"] s\");\n-\t\t\tresult = (String) future.get(timeout_work, TimeUnit.SECONDS);\n+\t\t\tlog.debug(getLogPrefix(session) + \"setting timeout of [\" + timeout_work + \"] s\");\n+\t\t\tresult = Message.asString(future.get(timeout_work, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyMjg3NA=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njc5MjE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/Json2XmlValidator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjowNzoyNFrOGLUkrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo0OTo0OVrOGLYn3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDU5MQ==", "bodyText": "waarom geen message?", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414524591", "createdAt": "2020-04-24T12:07:24Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/Json2XmlValidator.java", "diffHunk": "@@ -144,9 +144,11 @@ public PipeRunResult doPipe(Message input, IPipeLineSession session, boolean res\n \t\t\t\tif (!getOutputFormat(session,responseMode).equalsIgnoreCase(FORMAT_JSON)) {\n \t\t\t\t\tPipeRunResult result=super.doPipe(new Message(messageToValidate),session, responseMode);\n \t\t\t\t\tif (isProduceNamespaceLessXml()) {\n-\t\t\t\t\t\tString msg=(String)result.getResult();\n-\t\t\t\t\t\tmsg=XmlUtils.removeNamespaces(msg);\n-\t\t\t\t\t\tresult.setResult(msg);\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tresult.setResult(XmlUtils.removeNamespaces(result.getResult().asString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU4ODM2Mg==", "bodyText": "Omdat XmlUtils.removeNamespaces geen message accepteert", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414588362", "createdAt": "2020-04-24T13:46:15Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/Json2XmlValidator.java", "diffHunk": "@@ -144,9 +144,11 @@ public PipeRunResult doPipe(Message input, IPipeLineSession session, boolean res\n \t\t\t\tif (!getOutputFormat(session,responseMode).equalsIgnoreCase(FORMAT_JSON)) {\n \t\t\t\t\tPipeRunResult result=super.doPipe(new Message(messageToValidate),session, responseMode);\n \t\t\t\t\tif (isProduceNamespaceLessXml()) {\n-\t\t\t\t\t\tString msg=(String)result.getResult();\n-\t\t\t\t\t\tmsg=XmlUtils.removeNamespaces(msg);\n-\t\t\t\t\t\tresult.setResult(msg);\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tresult.setResult(XmlUtils.removeNamespaces(result.getResult().asString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDU5MQ=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5MDk0Mw==", "bodyText": "Maar dat kan je wel maken :)\nNu maak je van een message een string, en in XmlUtils.removeNamespaces weer een message.", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414590943", "createdAt": "2020-04-24T13:49:49Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/Json2XmlValidator.java", "diffHunk": "@@ -144,9 +144,11 @@ public PipeRunResult doPipe(Message input, IPipeLineSession session, boolean res\n \t\t\t\tif (!getOutputFormat(session,responseMode).equalsIgnoreCase(FORMAT_JSON)) {\n \t\t\t\t\tPipeRunResult result=super.doPipe(new Message(messageToValidate),session, responseMode);\n \t\t\t\t\tif (isProduceNamespaceLessXml()) {\n-\t\t\t\t\t\tString msg=(String)result.getResult();\n-\t\t\t\t\t\tmsg=XmlUtils.removeNamespaces(msg);\n-\t\t\t\t\t\tresult.setResult(msg);\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tresult.setResult(XmlUtils.removeNamespaces(result.getResult().asString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNDU5MQ=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjgwNjY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoxMDo0OFrOGLUs4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoxMDo0OFrOGLUs4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyNjY4OA==", "bodyText": "Misschien handig hier ook javadoc toe te voegen :)", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414526688", "createdAt": "2020-04-24T12:10:48Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/PipeLine.java", "diffHunk": "@@ -555,6 +555,21 @@ public void setPipeLineProcessor(PipeLineProcessor pipeLineProcessor) {\n \t\tthis.pipeLineProcessor = pipeLineProcessor;\n \t}\n \n+\tpublic IForwardTarget getForward(IPipe pipe, String path) throws PipeRunException {\n+\t\tif ((null==path) || (path.length()==0)){\n+\t\t\tthrow new PipeRunException(pipe, \"Pipeline of [\"+getOwner().getName()+\"] got a path that equals null or has a zero-length value from pipe [\"+pipe.getName()+\"]. Check the configuration, probably forwards are not defined for this pipe.\");\n+\t\t}\n+\t\tPipeLineExit plExit= getPipeLineExits().get(path);\n+\t\tif (plExit != null ) {\n+\t\t\treturn plExit;\n+\t\t}\n+\t\tIPipe nextPipe=getPipe(path);\n+\t\tif (nextPipe==null) {\n+\t\t\tthrow new PipeRunException(pipe, \"Pipeline of adapter [\"+ getOwner().getName()+\"] got an erroneous definition from pipe [\"+pipe.getName()+\"]. Pipe to execute [\"+path+ \"] is not defined.\");\n+\t\t}\n+\t\treturn nextPipe;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjgyMDExOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/core/IForwardTarget.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoxNDowNVrOGLU0hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzoxNDozMFrOGLXGng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyODY0NQ==", "bodyText": "Is hier ook een test voor? Een adapter die een sub-adapter aanroept, en een IMessageOutputStream teruggeeft?", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414528645", "createdAt": "2020-04-24T12:14:05Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/IForwardTarget.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.core;\n+\n+/**\n+ * IForwardTarget represents the destination of a PipeForward, so a {@link IPipe} or {@link PipeLineExit}.\n+ * \n+ * @author Gerrit van Brakel\n+ */\n+public interface IForwardTarget {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2NjA0Ng==", "bodyText": "Er zijn testen voor in iaf-test, als je in Test.properties opneemt:\nstreaming.auto=true", "url": "https://github.com/ibissource/iaf/pull/624#discussion_r414566046", "createdAt": "2020-04-24T13:14:30Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/core/IForwardTarget.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.core;\n+\n+/**\n+ * IForwardTarget represents the destination of a PipeForward, so a {@link IPipe} or {@link PipeLineExit}.\n+ * \n+ * @author Gerrit van Brakel\n+ */\n+public interface IForwardTarget {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUyODY0NQ=="}, "originalCommit": {"oid": "063361f4a1a8ed13dd38e1f0c9d5a84169ee3509"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 436, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}