{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMjQ5OTM4", "number": 518, "reviewThreads": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1NzowMVrODp1x5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjozODoyMlrODqxbdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTk5MzMzOnYy", "diffSide": "LEFT", "path": "core/src/main/java/nl/nn/adapterframework/parameters/Parameter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1NzowMVrOF5Q23g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1NzowMVrOF5Q23g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU4OTM0Mg==", "bodyText": "Hier wordt het een string, maar op regel 328 wordt het een source?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395589342", "createdAt": "2020-03-20T11:57:01Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/parameters/Parameter.java", "diffHunk": "@@ -321,7 +321,7 @@ public Object getValue(ParameterValueList alreadyResolvedParameters, Message mes\n \t\t\t\t\t\t}\n \t\t\t\t\t\tsourceString = itemsXml.toXML();\n \t\t\t\t\t} else {\n-\t\t\t\t\t\tsourceString = (String) sourceObject;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTk5Nzc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/parameters/Parameter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1ODoyMVrOF5Q5dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1ODoyMVrOF5Q5dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5MDAwNw==", "bodyText": "Dit snap ik niet helemaal", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395590007", "createdAt": "2020-03-20T11:58:21Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/parameters/Parameter.java", "diffHunk": "@@ -376,6 +378,9 @@ public Object getValue(ParameterValueList alreadyResolvedParameters, Message mes\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\t\tif (result !=null && result instanceof Message && ((Message)result).asObject() instanceof String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjAwMDgyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/AbstractPipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1OToyMlrOF5Q7UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMTo1OToyMlrOF5Q7UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5MDQ4MQ==", "bodyText": "maak dit aub abstract", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395590481", "createdAt": "2020-03-20T11:59:22Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/AbstractPipe.java", "diffHunk": "@@ -209,23 +210,13 @@ public void configure(PipeLine pipeline) throws ConfigurationException {\n \t}\n \n \n-\t/**\n-\t * This is where the action takes place. Pipes may only throw a PipeRunException,\n-\t * to be handled by the caller of this object.\n-\t * @deprecated use {@link #doPipe(Object,IPipeLineSession)} instead\n-\t */\n-\t@Deprecated\n-\tpublic final PipeRunResult doPipe (Object input) throws PipeRunException {\n-\t\tthrow new PipeRunException(this, \"Pipe should implement method doPipe()\");\n-\t}\n-\n \t/**\n \t * This is where the action takes place. Pipes may only throw a PipeRunException,\n \t * to be handled by the caller of this object.\n \t */\n \t@Override\n-\tpublic PipeRunResult doPipe (Object input, IPipeLineSession session) throws PipeRunException {\n-\t\treturn doPipe(input);\n+\tpublic PipeRunResult doPipe (Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tthrow new PipeRunException(this, \"Pipe should implement method doPipe()\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjAyOTkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/CompressPipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjowOTo0MVrOF5RNJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjowOTo0MVrOF5RNJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5NTA0NQ==", "bodyText": "Het eerste argument can de format is message, en hier vul je de logprefix in... Snap dat het al zo was, maar wel erg onduidelijk...\nMessage moet geen string worden", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395595045", "createdAt": "2020-03-20T12:09:41Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/CompressPipe.java", "diffHunk": "@@ -166,15 +165,13 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\t} catch(Exception e) {\n \t\t\tPipeForward exceptionForward = findForward(EXCEPTIONFORWARD);\n \t\t\tif (exceptionForward!=null) {\n-\t\t\t\tlog.warn(getLogPrefix(session) + \"exception occured, forwarded to [\"+exceptionForward.getPath()+\"]\", e);\n-\t\t\t\tString originalMessage;\n-\t\t\t\tif (input instanceof String) {\n-\t\t\t\t\toriginalMessage = (String)input; \n-\t\t\t\t} else {\n-\t\t\t\t\toriginalMessage = \"Object of type \" + input.getClass().getName(); \n+\t\t\t\ttry {\n+\t\t\t\t\tlog.warn(getLogPrefix(session) + \"exception occured, forwarded to [\"+exceptionForward.getPath()+\"]\", e);\n+\t\t\t\t\tString resultmsg=new ErrorMessageFormatter().format(getLogPrefix(session),e,this,message.asString(),session.getMessageId(),0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjAzMjY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/errormessageformatters/XslErrorMessageFormatter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxMDozNlrOF5RO2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxMDozNlrOF5RO2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5NTQ4Mw==", "bodyText": "Deze message is eigenlijk de logprefix? moet die dan niet zo heten binnen deze methode.\nHier graat originalMessage gebruiken ;)\nPS: originalMessage moet al een Message zijn!", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395595483", "createdAt": "2020-03-20T12:10:36Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/errormessageformatters/XslErrorMessageFormatter.java", "diffHunk": "@@ -85,10 +85,9 @@ public String format(String message, Throwable t, INamedObject location, String\n \t\t\t\t\t\tlog.error(\"exception while configuring parameters\",e);\n \t\t\t\t\t}\n \n-\t\t\t\t\tParameterResolutionContext prc = new ParameterResolutionContext(message, new PipeLineSessionBase());\n \t\t\t\t\tMap<String, Object> parametervalues = null;\n \t\t\t\t\ttry {\n-\t\t\t\t\t\tparametervalues = prc.getValueMap(params);\n+\t\t\t\t\t\tparametervalues = params.getValues(new Message(message), new PipeLineSessionBase()).getValueMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjA0ODM5OnYy", "diffSide": "LEFT", "path": "core/src/main/java/nl/nn/adapterframework/core/PipeRunResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoxNjoxN1rOF5RYoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoyMjo1NlrOF5RkKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5Nzk4NQ==", "bodyText": "Uiteindelijk moet hier een PipeForward en een Message in kunnen....", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395597985", "createdAt": "2020-03-20T12:16:17Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/PipeRunResult.java", "diffHunk": "@@ -17,9 +17,11 @@\n \n import org.apache.commons.lang.builder.ToStringBuilder;\n \n+import nl.nn.adapterframework.stream.Message;\n+\n /**\n  * The PipeRunResult is a type to store both the result of the processing of a message\n- * in {@link IPipe#doPipe(Object, IPipeLineSession) doPipe()} as well as the exitState.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMDkzOA==", "bodyText": "Dit gebeurd al op veel plekken, wat gebeurd er als je storeResultInSessionkey doet?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395600938", "createdAt": "2020-03-20T12:22:56Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/core/PipeRunResult.java", "diffHunk": "@@ -17,9 +17,11 @@\n \n import org.apache.commons.lang.builder.ToStringBuilder;\n \n+import nl.nn.adapterframework.stream.Message;\n+\n /**\n  * The PipeRunResult is a type to store both the result of the processing of a message\n- * in {@link IPipe#doPipe(Object, IPipeLineSession) doPipe()} as well as the exitState.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU5Nzk4NQ=="}, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjA3MTI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/FilePipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoyNDowNVrOF5RmUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoyNDowNVrOF5RmUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMTQ5MA==", "bodyText": "Maak deze ook gelijk deprecated", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395601490", "createdAt": "2020-03-20T12:24:05Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/FilePipe.java", "diffHunk": "@@ -19,6 +19,7 @@\n import nl.nn.adapterframework.core.IPipeLineSession;\n import nl.nn.adapterframework.core.PipeRunException;\n import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.stream.Message;\n import nl.nn.adapterframework.util.FileHandler;\n \n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjA3OTQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/PutInSession.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjoyNjo1NlrOF5RrZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjowMjozNFrOF5Z0kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMjc5MA==", "bodyText": "Deze ook deprecaten? putparaminsession is beter?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395602790", "createdAt": "2020-03-20T12:26:56Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/PutInSession.java", "diffHunk": "@@ -22,6 +22,7 @@\n import nl.nn.adapterframework.core.PipeRunException;\n import nl.nn.adapterframework.core.PipeRunResult;\n import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.stream.Message;\n \n /**\n  * Puts the input in the PipeLineSession, under the key specified by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTczNjIxMQ==", "bodyText": "mwoah, doen wel allebei net iets anders.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395736211", "createdAt": "2020-03-20T16:02:34Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/PutInSession.java", "diffHunk": "@@ -22,6 +22,7 @@\n import nl.nn.adapterframework.core.PipeRunException;\n import nl.nn.adapterframework.core.PipeRunResult;\n import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.stream.Message;\n \n /**\n  * Puts the input in the PipeLineSession, under the key specified by", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwMjc5MA=="}, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjEwMjQwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjozNDoxOVrOF5R5ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjozNDoxOVrOF5R5ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNjQ1OA==", "bodyText": "Deprecate class nu we filesystems hebben?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395606458", "createdAt": "2020-03-20T12:34:19Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/MoveFilePipe.java", "diffHunk": "@@ -16,16 +16,18 @@\n package nl.nn.adapterframework.pipes;\n \n import java.io.File;\n+import java.io.IOException;\n+\n+import org.apache.commons.lang.StringUtils;\n \n import nl.nn.adapterframework.configuration.ConfigurationException;\n import nl.nn.adapterframework.core.IPipeLineSession;\n import nl.nn.adapterframework.core.PipeRunException;\n import nl.nn.adapterframework.core.PipeRunResult;\n import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.stream.Message;\n import nl.nn.adapterframework.util.FileUtils;\n \n-import org.apache.commons.lang.StringUtils;\n-\n /**\n  * Pipe for moving files to another directory.\n  *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjExMTA4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjozNzowN1rOF5R_HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjozNzoyOFrOF5R_xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNzgzNg==", "bodyText": "Methode hernoemen?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395607836", "createdAt": "2020-03-20T12:37:07Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java", "diffHunk": "@@ -877,29 +869,20 @@ protected PipeRunResult sendMessage(Object input, IPipeLineSession session, Stri\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tduration = Misc.getDurationInMs(startTime);\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tmsgLog.info(\"Sender [\" + sender.getName() + \"] class [\" + sender.getClass().getSimpleName() + \"] correlationID [\" + correlationID + \"] duration [\" + duration + \"] got exit-state [\" + exitState + \"]\");\n+\t\t\t\t\t\tmsgLog.info(\"Sender [\" + sender.getName() + \"] class [\" + sender.getClass().getSimpleName() + \"] duration [\" + duration + \"] got exit-state [\" + exitState + \"]\");\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn sendResult;\n \t}\n \t\n-\tprotected PipeRunResult sendTextMessage(Object input, IPipeLineSession session, String correlationID, ISender sender, Map<String,Object> threadContext, IOutputStreamingSupport next) throws SenderException, TimeOutException, IOException {\n+\tprotected PipeRunResult sendTextMessage(Message message, IPipeLineSession session, ISender sender, Map<String,Object> threadContext, IOutputStreamingSupport next) throws SenderException, TimeOutException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwODAwNg==", "bodyText": "Of zelfs weggooien?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395608006", "createdAt": "2020-03-20T12:37:28Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/MessageSendingPipe.java", "diffHunk": "@@ -877,29 +869,20 @@ protected PipeRunResult sendMessage(Object input, IPipeLineSession session, Stri\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tduration = Misc.getDurationInMs(startTime);\n \t\t\t\t\t\t}\n-\t\t\t\t\t\tmsgLog.info(\"Sender [\" + sender.getName() + \"] class [\" + sender.getClass().getSimpleName() + \"] correlationID [\" + correlationID + \"] duration [\" + duration + \"] got exit-state [\" + exitState + \"]\");\n+\t\t\t\t\t\tmsgLog.info(\"Sender [\" + sender.getName() + \"] class [\" + sender.getClass().getSimpleName() + \"] duration [\" + duration + \"] got exit-state [\" + exitState + \"]\");\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\treturn sendResult;\n \t}\n \t\n-\tprotected PipeRunResult sendTextMessage(Object input, IPipeLineSession session, String correlationID, ISender sender, Map<String,Object> threadContext, IOutputStreamingSupport next) throws SenderException, TimeOutException, IOException {\n+\tprotected PipeRunResult sendTextMessage(Message message, IPipeLineSession session, ISender sender, Map<String,Object> threadContext, IOutputStreamingSupport next) throws SenderException, TimeOutException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwNzgzNg=="}, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjExOTk4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/JsonPipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo0MDoxMFrOF5SEyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo0MDoxMFrOF5SEyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYwOTI5MA==", "bodyText": "Dit hoeft alleen in de\nif (\"json2xml\".equalsIgnoreCase(actualDirection)) {\nAnders raak je onnodige je stream kwijt", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395609290", "createdAt": "2020-03-20T12:40:10Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/JsonPipe.java", "diffHunk": "@@ -60,18 +62,20 @@ public void configure() throws ConfigurationException {\n \t}\n \n \t@Override\n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeRunException {\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n \n-\t\tif (input == null) {\n+\t\tif (message == null) {\n \t\t\tthrow new PipeRunException(this, getLogPrefix(session) + \"got null input\");\n \t\t}\n-\t\tif (!(input instanceof String)) {\n-\t\t\tthrow new PipeRunException(this, getLogPrefix(session)\n-\t\t\t\t\t+ \"got an invalid type as input, expected String, got \" + input.getClass().getName());\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjE0MjA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo0Nzo0MVrOF5SS4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo0Nzo0MVrOF5SS4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYxMjg5Ng==", "bodyText": "onnodige  new Message(message) op regel 316", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395612896", "createdAt": "2020-03-20T12:47:41Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/ForEachChildElementPipe.java", "diffHunk": "@@ -297,11 +297,17 @@ public void endElement(String uri, String localName, String qName) throws SAXExc\n \t}\n \n \t@Override\n-\tprotected void iterateOverInput(Object input, IPipeLineSession session, String correlationID, Map<String,Object> threadContext, ItemCallback callback) throws SenderException, TimeOutException {\n+\tprotected void iterateOverInput(Message input, IPipeLineSession session, Map<String,Object> threadContext, ItemCallback callback) throws SenderException, TimeOutException {\n \t\tInputSource src;\n \t\tif (isProcessFile()) {\n \t\t\ttry {\n-\t\t\t\tsrc = new InputSource(new FileInputStream((String)input));\n+\t\t\t\tString filename;\n+\t\t\t\ttry {\n+\t\t\t\t\tfilename = input.asString();\n+\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\tthrow new SenderException(getLogPrefix(session)+\"cannot find filename\", e);\n+\t\t\t\t}\n+\t\t\t\tsrc = new InputSource(new FileInputStream(filename));\n \t\t\t} catch (FileNotFoundException e) {\n \t\t\t\tthrow new SenderException(\"could not find file [\"+input+\"]\",e);\n \t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cad2f689cb43a7040ff686e0400f98c5aeea56"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjE2MTg0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/Stream2StringPipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo1Mzo1OFrOF5SfRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo1Mzo1OFrOF5SfRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYxNjA3MQ==", "bodyText": "Boven de class ook nog Deprecated", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395616071", "createdAt": "2020-03-20T12:53:58Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/Stream2StringPipe.java", "diffHunk": "@@ -16,30 +16,27 @@\n package nl.nn.adapterframework.pipes;\n \n import java.io.IOException;\n-import java.io.InputStream;\n \n import nl.nn.adapterframework.core.IPipeLineSession;\n import nl.nn.adapterframework.core.PipeRunException;\n import nl.nn.adapterframework.core.PipeRunResult;\n-import nl.nn.adapterframework.util.Misc;\n+import nl.nn.adapterframework.stream.Message;\n \n /**\n  * Return simply the input message from stream to string.\n  *\n  * @author  Tom van der Heijden\n+ * @deprecated not necessary when using Messages.\n  */\n-\n public class Stream2StringPipe extends FixedForwardPipe {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjE3MzE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XsltPipe.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo1NzoyOFrOF5Smeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMjo1NzoyOFrOF5Smeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYxNzkxNA==", "bodyText": "Overbodige Message message = new Message(input);", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395617914", "createdAt": "2020-03-20T12:57:28Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XsltPipe.java", "diffHunk": "@@ -99,7 +98,7 @@ public void stop() {\n \t}\n \t\n \t@Override\n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session, IOutputStreamingSupport nextProvider) throws PipeRunException {\n+\tpublic PipeRunResult doPipe(Message input, IPipeLineSession session, IOutputStreamingSupport nextProvider) throws PipeRunException {\n \t\tif (input==null) {\n \t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"got null input\");\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjIxODM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoxMTozNVrOF5TDcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjoyMzoyM1rOF5anAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNTMyOQ==", "bodyText": "Daar is die dan eindelijk! Maar wat nu als je een SAXSource wilt hebben?\nKan String nu gedeprecate worden? (standaard staat resolveExternalEntities op false?)", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395625329", "createdAt": "2020-03-20T13:11:35Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -410,6 +411,10 @@ public String transform(Document d, Map<String,Object> parameters)\tthrows Transf\n \t\treturn transform(new DOMSource(d),parameters);\n \t}\n \n+\tpublic String transform(Message m, Map<String,Object> parameters) throws TransformerException, IOException, SAXException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNjc4OQ==", "bodyText": "Het is meer dan ik liever niet wil dat we op meerdere plekken dingen bij moeten gaan houden.\nAls hij niet gedeprecate wordt, dan op zijn minst hier new Message(input)\nWe moeten van de vele transforms en stringToSourceForSingleUse 'converters' af.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395636789", "createdAt": "2020-03-20T13:31:20Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -410,6 +411,10 @@ public String transform(Document d, Map<String,Object> parameters)\tthrows Transf\n \t\treturn transform(new DOMSource(d),parameters);\n \t}\n \n+\tpublic String transform(Message m, Map<String,Object> parameters) throws TransformerException, IOException, SAXException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNTMyOQ=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc0OTEyMg==", "bodyText": "Ga ik nu nog even niet aanpassen. Later wel...", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395749122", "createdAt": "2020-03-20T16:23:23Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -410,6 +411,10 @@ public String transform(Document d, Map<String,Object> parameters)\tthrows Transf\n \t\treturn transform(new DOMSource(d),parameters);\n \t}\n \n+\tpublic String transform(Message m, Map<String,Object> parameters) throws TransformerException, IOException, SAXException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNTMyOQ=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjIyNjgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/stream/Message.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoxMzo0OVrOF5TIhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoxMzo0OVrOF5TIhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyNjYzMQ==", "bodyText": "Hoe kan hij hier in komen als de input al een Message is?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395626631", "createdAt": "2020-03-20T13:13:49Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/stream/Message.java", "diffHunk": "@@ -29,21 +30,29 @@\n import org.apache.commons.io.input.ReaderInputStream;\n import org.apache.log4j.Logger;\n import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n \n import nl.nn.adapterframework.util.LogUtil;\n import nl.nn.adapterframework.util.StreamUtil;\n+import nl.nn.adapterframework.util.XmlUtils;\n \n public class Message {\n \tprotected Logger log = LogUtil.getLogger(this);\n \n \tprivate Object request;\n \n \tpublic Message(Message request) {\n-\t\tthis.request = request.asObject();\n+\t\tif (request!=null) {\n+\t\t\tthis.request = request.asObject();\n+\t\t}\n \t}\n \n \tpublic Message(Object request) {\n-\t\tthis.request = request;\n+\t\tif (request instanceof Message) {\n+\t\t\tthis.request = ((Message)request).asObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI0Njc2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/WsdlGeneratorPipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoxOTozOVrOF5TVUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoxOTozOVrOF5TVUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYyOTkwNA==", "bodyText": "ik weet dat het dit niet bij de change hoort maar kan dit appconstants geneuzel naar de configure?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395629904", "createdAt": "2020-03-20T13:19:39Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/WsdlGeneratorPipe.java", "diffHunk": "@@ -46,32 +48,31 @@ public void configure() throws ConfigurationException {\n \t}\n \n \t@Override\n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeRunException {\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n \t\tString result = null;\n \t\tIAdapter adapter;\n-\t\tif (\"input\".equals(getFrom())) {\n-\t\t\tadapter = ((Adapter)getAdapter()).getConfiguration().getIbisManager().getRegisteredAdapter((String)input);\n-\t\t\tif (adapter == null) {\n-\t\t\t\tthrow new PipeRunException(this, \"Could not find adapter: \" + input);\n+\t\ttry {\n+\t\t\tif (\"input\".equals(getFrom())) {\n+\t\t\t\tString adapterName = message.asString();\n+\t\t\t\tadapter = ((Adapter)getAdapter()).getConfiguration().getIbisManager().getRegisteredAdapter(adapterName);\n+\t\t\t\tif (adapter == null) {\n+\t\t\t\t\tthrow new PipeRunException(this, \"Could not find adapter: \" + adapterName);\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tadapter = getPipeLine().getAdapter();\n \t\t\t}\n-\t\t} else {\n-\t\t\tadapter = getPipeLine().getAdapter();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, \"Could not determine adapter name\", e); \n \t\t}\n \t\ttry {\n \t\t\tWsdl wsdl = new Wsdl(((Adapter)adapter).getPipeLine());\n-\t\t\twsdl.setDocumentation(\"Generated at \"\n-\t\t\t\t+ AppConstants.getInstance().getResolvedProperty(\"dtap.stage\")\n-\t\t\t\t+ \"-\"\n-\t\t\t\t+ AppConstants.getInstance().getResolvedProperty(\"dtap.side\")\n-\t\t\t\t+ \" on \" + DateUtils.getIsoTimeStamp() + \".\");\n+\t\t\twsdl.setDocumentation(\"Generated at \" + AppConstants.getInstance().getResolvedProperty(\"dtap.stage\") + \"-\" + AppConstants.getInstance().getResolvedProperty(\"dtap.side\") + \" on \" + DateUtils.getIsoTimeStamp() + \".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI1Njc2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyMjozNVrOF5Tbtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozMTo0OFrOF5a8XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzMTU0Mw==", "bodyText": "is het niet handiger als dit een Message is?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395631543", "createdAt": "2020-03-20T13:22:35Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "diffHunk": "@@ -265,12 +271,17 @@ protected PipeForward determineForward(String resultEvent, IPipeLineSession sess\n \t}\n \n \t@Deprecated\n-\tprivate String getMessageToValidate(Object input, IPipeLineSession session) throws PipeRunException {\n-\t\tString inputStr = input.toString();\n-\t\tif (XmlUtils.isWellFormed(inputStr, \"Envelope\")) {\n+\tprivate String getMessageToValidate(Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"cannot open stream\", e);\n+\t\t}\n+\t\tif (XmlUtils.isWellFormed(input, \"Envelope\")) {\n \t\t\tString inputRootNs;\n \t\t\ttry {\n-\t\t\t\tinputRootNs = transformerPoolGetRootNamespace.transform(inputStr, null);\n+\t\t\t\tinputRootNs = transformerPoolGetRootNamespace.transform(input, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1NDU4OQ==", "bodyText": "het is handiger als die hele method niet gebruikt wordt, dus als de deprecated attribute soapNamespace niet gebruikt wordt.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395754589", "createdAt": "2020-03-20T16:31:48Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "diffHunk": "@@ -265,12 +271,17 @@ protected PipeForward determineForward(String resultEvent, IPipeLineSession sess\n \t}\n \n \t@Deprecated\n-\tprivate String getMessageToValidate(Object input, IPipeLineSession session) throws PipeRunException {\n-\t\tString inputStr = input.toString();\n-\t\tif (XmlUtils.isWellFormed(inputStr, \"Envelope\")) {\n+\tprivate String getMessageToValidate(Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"cannot open stream\", e);\n+\t\t}\n+\t\tif (XmlUtils.isWellFormed(input, \"Envelope\")) {\n \t\t\tString inputRootNs;\n \t\t\ttry {\n-\t\t\t\tinputRootNs = transformerPoolGetRootNamespace.transform(inputStr, null);\n+\t\t\t\tinputRootNs = transformerPoolGetRootNamespace.transform(input, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzMTU0Mw=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI3MzgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyNzoxNFrOF5Tmjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyNzoxNFrOF5Tmjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNDMxOQ==", "bodyText": "isWellFormed zou ook een Source aan moeten kunnen, maar dan moet hij wel gepersists zijn... hoe dan ook, beter om zo min mogelijk dingen heen en weer om te zetten.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395634319", "createdAt": "2020-03-20T13:27:14Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlValidator.java", "diffHunk": "@@ -265,12 +271,17 @@ protected PipeForward determineForward(String resultEvent, IPipeLineSession sess\n \t}\n \n \t@Deprecated\n-\tprivate String getMessageToValidate(Object input, IPipeLineSession session) throws PipeRunException {\n-\t\tString inputStr = input.toString();\n-\t\tif (XmlUtils.isWellFormed(inputStr, \"Envelope\")) {\n+\tprivate String getMessageToValidate(Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"cannot open stream\", e);\n+\t\t}\n+\t\tif (XmlUtils.isWellFormed(input, \"Envelope\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI3ODQ5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlWellFormedChecker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzoyODoyOVrOF5TpeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjozNzo1OVrOF5bKoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTA2NA==", "bodyText": "kan dit geen Message als input aan, in de onderliggende methode wordt een saxsource gemaakt", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395635064", "createdAt": "2020-03-20T13:28:29Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlWellFormedChecker.java", "diffHunk": "@@ -38,28 +42,35 @@\n  * @author  Peter Leeuwenburgh\n  * @since\t4.4.5\n  */\n-\n public class XmlWellFormedChecker extends FixedForwardPipe {\n \tprivate String root = null;\n \n+\t@Override\n \tpublic void configure() throws ConfigurationException {\n \t\tsuper.configure();\n \t\tregisterEvent(AbstractXmlValidator.XML_VALIDATOR_VALID_MONITOR_EVENT);\n \t\tregisterEvent(AbstractXmlValidator.XML_VALIDATOR_PARSER_ERROR_MONITOR_EVENT);\n \t}\n \n \n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) {\n-\t\tif (XmlUtils.isWellFormed(input.toString(), getRoot())) {\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"cannot open stream\", e);\n+\t\t}\n+\t\tif (XmlUtils.isWellFormed(input, getRoot())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc1ODI0MA==", "bodyText": "Ja, maar niet een gewone Source, maar een SAXSource, was er aan begonnen en ben er na een zucht mee opgehouden.\nAndere keer.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395758240", "createdAt": "2020-03-20T16:37:59Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/XmlWellFormedChecker.java", "diffHunk": "@@ -38,28 +42,35 @@\n  * @author  Peter Leeuwenburgh\n  * @since\t4.4.5\n  */\n-\n public class XmlWellFormedChecker extends FixedForwardPipe {\n \tprivate String root = null;\n \n+\t@Override\n \tpublic void configure() throws ConfigurationException {\n \t\tsuper.configure();\n \t\tregisterEvent(AbstractXmlValidator.XML_VALIDATOR_VALID_MONITOR_EVENT);\n \t\tregisterEvent(AbstractXmlValidator.XML_VALIDATOR_PARSER_ERROR_MONITOR_EVENT);\n \t}\n \n \n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) {\n-\t\tif (XmlUtils.isWellFormed(input.toString(), getRoot())) {\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n+\t\tString input;\n+\t\ttry {\n+\t\t\tinput = message.asString();\n+\t\t} catch (IOException e) {\n+\t\t\tthrow new PipeRunException(this, getLogPrefix(session)+\"cannot open stream\", e);\n+\t\t}\n+\t\tif (XmlUtils.isWellFormed(input, getRoot())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzNTA2NA=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI5NjU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzoyOFrOF5T1Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzoyOFrOF5T1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzODA3MA==", "bodyText": "is message niet slim genoeg dat deze if else logica overbodig is?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395638070", "createdAt": "2020-03-20T13:33:28Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "diffHunk": "@@ -159,15 +170,20 @@ public PipeLineResult processPipeLine(PipeLine pipeLine, String messageId, Strin\n \t\ttry {\n \t\t\twhile (!ready){\n \n-\t\t\t\tpipeRunResult = pipeProcessor.processPipe(pipeLine, pipeToRun, messageId, object, pipeLineSession);\n-\t\t\t\tobject=pipeRunResult.getResult();\n+\t\t\t\tpipeRunResult = pipeProcessor.processPipe(pipeLine, pipeToRun, messageId, message, pipeLineSession);\n+\t\t\t\tObject resultObject=pipeRunResult.getResult();\n+\t\t\t\tif (resultObject instanceof Message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjI5ODEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzo1MVrOF5T2KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozMzo1MVrOF5T2KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzODMxMg==", "bodyText": "Is message niet slim genoeg dat deze logica overbodig is?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395638312", "createdAt": "2020-03-20T13:33:51Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "diffHunk": "@@ -103,8 +108,7 @@ public PipeLineResult processPipeLine(PipeLine pipeLine, String messageId, Strin\n \t\t\t\t}\n \t\t\t\tObject validatedMessage = validationResult.getResult();\n \t\t\t\tif (validatedMessage!=null) {\n-\t\t\t\t\tobject=validatedMessage;\n-\t\t\t\t\tmessage=validatedMessage.toString();\n+\t\t\t\t\tmessage=(validatedMessage instanceof Message)?(Message)validatedMessage:new Message(validatedMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMwMjEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozNTowMlrOF5T4uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozNTowMlrOF5T4uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzODk2OA==", "bodyText": "Hier weer?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395638968", "createdAt": "2020-03-20T13:35:02Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/processors/CorePipeLineProcessor.java", "diffHunk": "@@ -228,7 +249,12 @@ public PipeLineResult processPipeLine(PipeLine pipeLine, String messageId, Strin\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\tlog.debug(\"validation succeeded\");\n-\t\t\t\t\t\t\t\tobject = validationResult.getResult();\n+\t\t\t\t\t\t\t\tObject validatedObject = validationResult.getResult();\n+\t\t\t\t\t\t\t\tif (validatedObject instanceof Message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMwNzI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapperPipe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozNjoyNFrOF5T8BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjo0MjowM1rOF5bTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzOTgxMw==", "bodyText": "Waarom een string? alles moet gewoon message blijven", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395639813", "createdAt": "2020-03-20T13:36:24Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapperPipe.java", "diffHunk": "@@ -202,47 +202,45 @@ public void stop() {\n \t\t}\n \t}\n \n-    @Override\n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeRunException {\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n \t\tString result;\n \t\ttry {\n \t\t\tif (\"wrap\".equalsIgnoreCase(getDirection())) {\n-\t\t\t\tString payload = input.toString();\n+\t\t\t\tString payload = message.asString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2MDU5MQ==", "bodyText": "maar hij word in een reeks ifjes doorgegeven.\nMoet uiteindelijk met zoiets als een reeks XmlFilters opgelost worden.", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395760591", "createdAt": "2020-03-20T16:42:03Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapperPipe.java", "diffHunk": "@@ -202,47 +202,45 @@ public void stop() {\n \t\t}\n \t}\n \n-    @Override\n-\tpublic PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeRunException {\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message message, IPipeLineSession session) throws PipeRunException {\n \t\tString result;\n \t\ttry {\n \t\t\tif (\"wrap\".equalsIgnoreCase(getDirection())) {\n-\t\t\t\tString payload = input.toString();\n+\t\t\t\tString payload = message.asString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTYzOTgxMw=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMxNTgxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/util/FileHandlerTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozODozOFrOF5UBZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzozODozOFrOF5UBZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0MTE4OA==", "bodyText": "Had je niet een getTestFileMessage in je vorige commit?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395641188", "createdAt": "2020-03-20T13:38:38Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileHandlerTestBase.java", "diffHunk": "@@ -162,7 +163,7 @@ public void testWrite(String directory, String filename, String suffix, boolean\n \t\thandler.setWriteLineSeparator(writeSeparator);\n \t\thandler.configure();\n \n-\t\tString contents=getTestFile(contentFile, charset);\n+\t\tMessage contents=new Message(getTestFile(contentFile, charset));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMyMTc1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/pipes/XmlIfTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0MDoyMFrOF5UFhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNjo0Njo0NFrOF5bfFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0MjI0NQ==", "bodyText": "het is een beetje onzinnen hier pipe ook mee te geven?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395642245", "createdAt": "2020-03-20T13:40:20Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/pipes/XmlIfTest.java", "diffHunk": "@@ -37,7 +37,7 @@ public void nullXPathExpressionTest() throws ConfigurationException, PipeStartEx\n \t\tpipe.configure();\n \t\tpipe.start();\n \n-\t\tPipeRunResult pipeRunResult = pipe.doPipe(\"<test\", session);\n+\t\tPipeRunResult pipeRunResult = doPipe(pipe, \"<test\", session);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc2MzQ3Nw==", "bodyText": "behalve als je zelf een pipe wil maken", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395763477", "createdAt": "2020-03-20T16:46:44Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/pipes/XmlIfTest.java", "diffHunk": "@@ -37,7 +37,7 @@ public void nullXPathExpressionTest() throws ConfigurationException, PipeStartEx\n \t\tpipe.configure();\n \t\tpipe.start();\n \n-\t\tPipeRunResult pipeRunResult = pipe.doPipe(\"<test\", session);\n+\t\tPipeRunResult pipeRunResult = doPipe(pipe, \"<test\", session);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0MjI0NQ=="}, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjMyOTMyOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/pipes/PipeTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0MjoyMVrOF5UKaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0MjoyMVrOF5UKaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0MzQ5Ng==", "bodyText": "Pipe hoef je niet mee te geven...", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395643496", "createdAt": "2020-03-20T13:42:21Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/pipes/PipeTestBase.java", "diffHunk": "@@ -72,9 +74,12 @@ protected void configureAdapter() throws ConfigurationException {\n \t * use this method to execute pipe, instead of calling pipe.doPipe directly. This allows for \n \t * integrated testing of streaming.\n \t */\n-\tprotected PipeRunResult doPipe(P pipe, Object input, IPipeLineSession session) throws Exception {\n+\tprotected PipeRunResult doPipe(P pipe, Message input, IPipeLineSession session) throws PipeRunException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MjM0OTIxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/pipes/Json2XmlValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0NzozNFrOF5UXkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMzo0NzozNFrOF5UXkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTY0Njg2Ng==", "bodyText": "Waarom staat dit uit?", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r395646866", "createdAt": "2020-03-20T13:47:34Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/pipes/Json2XmlValidatorTest.java", "diffHunk": "@@ -14,111 +14,107 @@\n import nl.nn.adapterframework.parameters.Parameter;\n import nl.nn.adapterframework.testutil.TestFileUtils;\n \n-public class Json2XmlValidatorTest {\n+public class Json2XmlValidatorTest extends PipeTestBase<Json2XmlValidator> {\n \n-\t@Test\n-\tpublic void testNoNamespaceXml2Json() throws Exception {\n-\t\tJson2XmlValidator validator = new Json2XmlValidator();\n-\t\t\n-\t\tvalidator.setName(\"Response_To_Json\");\n-\t\tvalidator.setOutputFormat(\"json\");\n-\t\tvalidator.setSchema(\"/Validation/NoNamespace/bp.xsd\");\n-//\t\tvalidator.setRoot(\"GetPartiesOnAgreement_Response\");\n-//\t\tvalidator.setTargetNamespace(\"http://nn.nl/XSD/CustomerAdministration/Party/1/GetPartiesOnAgreement/7\");\n-\t\tvalidator.setThrowException(true);\n-\t\tvalidator.registerForward(new PipeForward(\"success\",null));\n-\t\tvalidator.configure();\n-\t\tvalidator.start();\n-\t\t\n-\t\tString input = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response.xml\");\n-\t\tString expected = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");\n-\t\t\n-\t\tPipeLineSessionBase session = new PipeLineSessionBase();\n-\t\ttry {\n-\t\t\tPipeRunResult prr = validator.doPipe(input,session);\n-\t\t\tfail(\"expected to fail\");\n-\t\t} catch (PipeRunException e) {\n-\t\t\tassertThat(e.getMessage(),StringContains.containsString(\"Cannot find the declaration of element 'BusinessPartner'\"));\n-\t\t}\n+\t@Override\n+\tpublic Json2XmlValidator createPipe() {\n+\t\treturn new Json2XmlValidator();\n \t}\n \n \t@Test\n-\tpublic void testNoNamespaceXml() throws Exception {\n-\t\tXmlValidator validator = new XmlValidator();\n-\t\t\n-\t\tvalidator.setName(\"Response_Validator\");\n-\t\tvalidator.setSchema(\"/Validation/NoNamespace/bp.xsd\");\n-//\t\tvalidator.setRoot(\"GetPartiesOnAgreement_Response\");\n-//\t\tvalidator.setTargetNamespace(\"http://nn.nl/XSD/CustomerAdministration/Party/1/GetPartiesOnAgreement/7\");\n-\t\tvalidator.setThrowException(true);\n-\t\tvalidator.registerForward(new PipeForward(\"success\",null));\n-\t\tvalidator.configure();\n-\t\tvalidator.start();\n+\tpublic void testNoNamespaceXml2Json() throws Exception {\n+\t\tpipe.setName(\"Response_To_Json\");\n+\t\tpipe.setOutputFormat(\"json\");\n+\t\tpipe.setSchema(\"/Validation/NoNamespace/bp.xsd\");\n+//\t\tpipe.setRoot(\"GetPartiesOnAgreement_Response\");\n+//\t\tpipe.setTargetNamespace(\"http://nn.nl/XSD/CustomerAdministration/Party/1/GetPartiesOnAgreement/7\");\n+\t\tpipe.setThrowException(true);\n+\t\tpipe.configure();\n+\t\tpipe.start();\n \t\t\n \t\tString input = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response.xml\");\n \t\tString expected = TestFileUtils.getTestFile(\"/Validation/NoNamespace/bp-response-compact.json\");\n \t\t\n \t\tPipeLineSessionBase session = new PipeLineSessionBase();\n \t\ttry {\n-\t\t\tPipeRunResult prr = validator.doPipe(input,session);\n+\t\t\tPipeRunResult prr = doPipe(pipe, input,session);\n \t\t\tfail(\"expected to fail\");\n \t\t} catch (PipeRunException e) {\n \t\t\tassertThat(e.getMessage(),StringContains.containsString(\"Cannot find the declaration of element 'BusinessPartner'\"));\n \t\t}\n \t}\n \n+//\t@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a758270a6735072e5e64c380be6f56040276076"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTc2NjMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/stream/Message.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjozODoyMlrOF6uRSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMjozODoyMlrOF6uRSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzExOTgxNw==", "bodyText": "Zou nog mooier zijn als je hier Message.asMessage gebruikt", "url": "https://github.com/ibissource/iaf/pull/518#discussion_r397119817", "createdAt": "2020-03-24T12:38:22Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/stream/Message.java", "diffHunk": "@@ -234,4 +267,104 @@ public String toString() {\n \t\treturn request.getClass().getSimpleName()+\": \"+request.toString();\n \t}\n \n+\tpublic static Message asMessage(Object object) {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn (Message)object;\n+\t\t}\n+\t\treturn new Message(object);\n+\t}\n+\t\n+\tpublic static Reader asReader(Object object) throws IOException {\n+\t\treturn asReader(object, StreamUtil.DEFAULT_INPUT_STREAM_ENCODING);\n+\t}\n+\tpublic static Reader asReader(Object object, String defaultCharset) throws IOException {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof Reader) {\n+\t\t\treturn (Reader)object;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn ((Message)object).asReader(defaultCharset);\n+\t\t}\n+\t\treturn new Message(object).asReader(defaultCharset);\n+\t}\n+\t\n+\tpublic static InputStream asInputStream(Object object) throws IOException {\n+\t\treturn asInputStream(object, StreamUtil.DEFAULT_INPUT_STREAM_ENCODING);\n+\t}\n+\tpublic static InputStream asInputStream(Object object, String defaultCharset) throws IOException {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof InputStream) {\n+\t\t\treturn (InputStream)object;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn ((Message)object).asInputStream(defaultCharset);\n+\t\t}\n+\t\treturn new Message(object).asInputStream(defaultCharset);\n+\t}\n+\t\n+\tpublic static InputSource asInputSource(Object object) throws IOException {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof InputSource) {\n+\t\t\treturn (InputSource)object;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn ((Message)object).asInputSource();\n+\t\t}\n+\t\treturn new Message(object).asInputSource();\n+\t}\n+\t\n+\tpublic static Source asSource(Object object) throws IOException, SAXException  {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof Source) {\n+\t\t\treturn (Source)object;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn ((Message)object).asSource();\n+\t\t}\n+\t\treturn new Message(object).asSource();\n+\t}\n+\t\n+\tpublic static String asString(Object object) throws IOException {\n+\t\treturn asString(object, StreamUtil.DEFAULT_INPUT_STREAM_ENCODING);\n+\t}\n+\tpublic static String asString(Object object, String defaultCharset) throws IOException {\n+\t\tif (object==null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tif (object instanceof String) {\n+\t\t\treturn (String)object;\n+\t\t}\n+\t\tif (object instanceof Message) {\n+\t\t\treturn ((Message)object).asString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3931f38dff6290a2703109fed2e616def306c732"}, "originalPosition": 350}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 496, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}