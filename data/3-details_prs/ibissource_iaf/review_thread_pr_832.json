{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjIzMTc5", "number": 832, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1Nzo1OVrOEF-l-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1ODowOFrOEF-mRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzAzODY0OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/util/FilenameUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1Nzo1OVrOGkfgXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1Nzo1OVrOGkfgXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxODEwOA==", "bodyText": "It might be nicer to have a replaceAll()", "url": "https://github.com/ibissource/iaf/pull/832#discussion_r440918108", "createdAt": "2020-06-16T14:57:59Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FilenameUtilsTest.java", "diffHunk": "@@ -13,58 +15,58 @@\n public class FilenameUtilsTest {\n \n \n-\n     /**\n      * Method: normalize(String filename)\n      */\n     @Test\n     public void testNormalizeFilename() throws Exception {\n-        assertEquals(FilenameUtils.normalize(\"/foo/../bar/../baz\"), \"/baz\");\n+        assertEquals(File.separator + \"baz\", FilenameUtils.normalize(\"/foo/../bar/../baz\"));\n     }\n \n     /**\n      * Method: normalize(String filename, boolean unixSeparator)\n      */\n     @Test\n     public void testNormalizeForFilenameUnixSeparator() throws Exception {\n-        assertEquals(FilenameUtils.normalize(\"C:\\\\foo\\\\..\\\\bar\", true), \"C:/bar\");\n+        assertEquals(\"C:/bar\", FilenameUtils.normalize(\"C:\\\\foo\\\\..\\\\bar\", true));\n     }\n \n     /**\n      * Method: normalizeNoEndSeparator(String filename)\n      */\n     @Test\n     public void testNormalizeNoEndSeparatorFilename() throws Exception {\n-        assertEquals(FilenameUtils.normalizeNoEndSeparator(\"/foo//\"), \"/foo\");\n+        assertEquals(File.separator + \"foo\", FilenameUtils.normalizeNoEndSeparator(\"/foo//\"));\n     }\n \n     @Test\n     public void testNormalizeNullInout() {\n-        assertEquals(FilenameUtils.normalize(null), null);\n+        assertEquals(null, FilenameUtils.normalize(null));\n     }\n \n     /**\n      * Method: concat(String basePath, String fullFilenameToAdd)\n      */\n     @Test\n     public void testConcat() throws Exception {\n-        assertEquals(FilenameUtils.concat(\"src\\\\test\\\\java\\\\nl\\\\nn\\\\adapterframework\\\\util\", \"test\\\\test.java\"), \"src/test/java/nl/nn/adapterframework/util/test/test.java\");\n+        assertEquals(\"src\" + File.separator + \"test\" + File.separator + \"java\" + File.separator + \"nl\" + File.separator + \"nn\"\n+                + File.separator + \"adapterframework\" + File.separator + \"util\" + File.separator + \"test\" + File.separator + \"test.java\", FilenameUtils.concat(\"src\\\\test\\\\java\\\\nl\\\\nn\\\\adapterframework\\\\util\", \"test\\\\test.java\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d8fc0bd733957a57e6aed6b445aa651a11143a"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzAzOTQxOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/util/FilenameUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1ODowOFrOGkfg1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDo1ODowOFrOGkfg1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkxODIyOQ==", "bodyText": "assertNull()?", "url": "https://github.com/ibissource/iaf/pull/832#discussion_r440918229", "createdAt": "2020-06-16T14:58:08Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FilenameUtilsTest.java", "diffHunk": "@@ -13,58 +15,58 @@\n public class FilenameUtilsTest {\n \n \n-\n     /**\n      * Method: normalize(String filename)\n      */\n     @Test\n     public void testNormalizeFilename() throws Exception {\n-        assertEquals(FilenameUtils.normalize(\"/foo/../bar/../baz\"), \"/baz\");\n+        assertEquals(File.separator + \"baz\", FilenameUtils.normalize(\"/foo/../bar/../baz\"));\n     }\n \n     /**\n      * Method: normalize(String filename, boolean unixSeparator)\n      */\n     @Test\n     public void testNormalizeForFilenameUnixSeparator() throws Exception {\n-        assertEquals(FilenameUtils.normalize(\"C:\\\\foo\\\\..\\\\bar\", true), \"C:/bar\");\n+        assertEquals(\"C:/bar\", FilenameUtils.normalize(\"C:\\\\foo\\\\..\\\\bar\", true));\n     }\n \n     /**\n      * Method: normalizeNoEndSeparator(String filename)\n      */\n     @Test\n     public void testNormalizeNoEndSeparatorFilename() throws Exception {\n-        assertEquals(FilenameUtils.normalizeNoEndSeparator(\"/foo//\"), \"/foo\");\n+        assertEquals(File.separator + \"foo\", FilenameUtils.normalizeNoEndSeparator(\"/foo//\"));\n     }\n \n     @Test\n     public void testNormalizeNullInout() {\n-        assertEquals(FilenameUtils.normalize(null), null);\n+        assertEquals(null, FilenameUtils.normalize(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9d8fc0bd733957a57e6aed6b445aa651a11143a"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 384, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}