{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTMzOTE4", "number": 1280, "title": "Introduce \"action\" parameter for file systems", "bodyText": "Closes #1176", "createdAt": "2020-11-20T08:22:35Z", "url": "https://github.com/ibissource/iaf/pull/1280", "merged": true, "mergeCommit": {"oid": "4d44801cec8d6972d0640fcc01a2ca1517a43a65"}, "closed": true, "closedAt": "2020-11-26T14:14:22Z", "author": {"login": "alisihab"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeFu5pgH2gAyNTI0NTMzOTE4OjFlMTZhNjc3MGQ5YWI2ZWYzNWQwNmNlMmE5NjcyMzRkNGU2ZTYyYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgRfW9gH2gAyNTI0NTMzOTE4OmNhOGZlYjI5ZGEzMDAzOWY4M2Q4MTZhN2ZlNWY4Zjg1NmNlZTVkNGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e16a6770d9ab6ef35d06ce2a967234d4e6e62c7", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/1e16a6770d9ab6ef35d06ce2a967234d4e6e62c7", "committedDate": "2020-11-19T16:55:43Z", "message": "first draft with missing test of open method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9dc63be33ae91980df9291c5cea4b9204853302", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/d9dc63be33ae91980df9291c5cea4b9204853302", "committedDate": "2020-11-20T08:21:05Z", "message": "fix possible npe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/1c8428d6e61dd9de667f6212a4b2c2253518ef21", "committedDate": "2020-11-20T08:27:45Z", "message": "remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NDMxMzIz", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-536431323", "createdAt": "2020-11-23T12:35:01Z", "commit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjozNTowMVrOH4LkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NDoyN1rOH4L37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3MTc1Ng==", "bodyText": "This part can stay at configure(). It is not dependent on the action itself", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528671756", "createdAt": "2020-11-23T12:35:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,17 +171,39 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (fileSystem instanceof IWritableFileSystem) {\n+\t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NTc0NA==", "bodyText": "Should check here for action to be non-null", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528675744", "createdAt": "2020-11-23T12:42:24Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -283,6 +290,14 @@ private String determineInputFoldername(Message input, ParameterValueList pvl) t\n \t\n \tpublic Object doAction(Message input, ParameterValueList pvl, IPipeLineSession session) throws FileSystemException, TimeOutException {\n \t\ttry {\n+\t\t\tString action;\n+\t\t\tif (pvl != null && pvl.containsKey(PARAMETER_ACTION)) {\n+\t\t\t\taction = pvl.getParameterValue(PARAMETER_ACTION).asStringValue(getAction());\n+\t\t\t\tcheckConfiguration(action);\n+\t\t\t} else {\n+\t\t\t\taction = getAction();\n+\t\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3Njg0Ng==", "bodyText": "I think it will be more clear to say: \"either attribute [action] or parameter [action] must be specified\"", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528676846", "createdAt": "2020-11-23T12:44:27Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,26 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n-\t\tif (fileSystem instanceof IWritableFileSystem) {\n-\t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n-\t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either action or parameter [\"+PARAMETER_ACTION+\"] must be specified\");\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/29217fc00ae9e3478753aa8dd6c67e94515afd3e", "committedDate": "2020-11-24T09:25:38Z", "message": "work on the feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NTk5NDU4", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-537599458", "createdAt": "2020-11-24T15:13:28Z", "commit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MjYzNzI2", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-538263726", "createdAt": "2020-11-25T08:41:25Z", "commit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0MToyNlrOH5oeSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0MToyNlrOH5oeSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5Mzk5NA==", "bodyText": "Please use ClassUtils.nameOf()", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530193994", "createdAt": "2020-11-25T08:41:26Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,30 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n+\n \t\tif (fileSystem instanceof IWritableFileSystem) {\n \t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n \t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either attribute [action] or parameter [\"+PARAMETER_ACTION+\"] must be specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9606ab135987fd89a1b945eaf0345624276cb98", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/b9606ab135987fd89a1b945eaf0345624276cb98", "committedDate": "2020-11-25T09:31:59Z", "message": "change the way to get a classname"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzMxMDM2", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-537731036", "createdAt": "2020-11-24T17:09:56Z", "commit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowOTo1N1rOH5MxsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxMToxOFrOH5M1Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0MDIwOA==", "bodyText": "niet owner.getClass().getSimpleName() maar ClassUtils.nameOf(...)", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r529740208", "createdAt": "2020-11-24T17:09:57Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,30 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n+\n \t\tif (fileSystem instanceof IWritableFileSystem) {\n \t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n \t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either attribute [action] or parameter [\"+PARAMETER_ACTION+\"] must be specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0MTEwMw==", "bodyText": "niet owner.getClass().getSimpleName() maar ClassUtils.nameOf(...)", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r529741103", "createdAt": "2020-11-24T17:11:18Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,17 +175,36 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (!actions.contains(action))\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + action + \"] supported actions are \" + actions.toString() + \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NjA5Mzcz", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-538609373", "createdAt": "2020-11-25T15:25:01Z", "commit": {"oid": "b9606ab135987fd89a1b945eaf0345624276cb98"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToyNTowMVrOH54ayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToyNTowMVrOH54ayg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ1NTI0Mg==", "bodyText": "This part must be at configure(), to support legacy action names. We do not want/need to support those names for dynamic actions, and therefore the code can be moved back to configure(). It cannot stay here, because it sets the action via setAction().", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530455242", "createdAt": "2020-11-25T15:25:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,28 +175,47 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (!actions.contains(action))\n+\t\t\tthrow new ConfigurationException(ClassUtils.nameOf(owner)+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + action + \"] supported actions are \" + actions.toString() + \"\");\n+\n+\t\tif (action.equals(ACTION_READ2)) {\n+\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n+\t\t\tsetAction(ACTION_READ1);\n+\t\t}\n+\t\tif (action.equals(ACTION_WRITE2)) {\n+\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n+\t\t\tsetAction(ACTION_WRITE1);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9606ab135987fd89a1b945eaf0345624276cb98"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/234e9ddec4d9c8564ed0a14a1ba9698ad660426a", "committedDate": "2020-11-25T15:57:45Z", "message": "overwrite legacy actions in configure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NjUyMDQw", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-538652040", "createdAt": "2020-11-25T16:10:11Z", "commit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxMDoxMVrOH56cBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxNDo0MFrOH56n7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ4ODMyNQ==", "bodyText": "Sorry to bother you again, but this part needs to be before the call to checkConfiguration(), e.g. at line 154, as it could modify the action.", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530488325", "createdAt": "2020-11-25T16:10:11Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -158,25 +166,15 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n \t\t\tsetAction(ACTION_WRITE1);\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5MTM3Mw==", "bodyText": "Please add two more tests:\n\nto show that when the value of the parameter is empty, the configured action is taken as a default\nto show when both attribute and parameter action are set and valid, then the value of the parameter is used.", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530491373", "createdAt": "2020-11-25T16:14:40Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/filesystem/FileSystemActorTest.java", "diffHunk": "@@ -82,11 +82,36 @@ public void fileSystemActorTestConfigureBasic() throws Exception {\n \n \t@Test\n \tpublic void fileSystemActorTestConfigureNoAction() throws Exception {\n-\t\tthrown.expectMessage(\"action must be specified\");\n+\t\tthrown.expectMessage(\"either attribute [action] or parameter [action] must be specified\");\n \t\tthrown.expectMessage(\"fake owner of FileSystemActor\");\n \t\tactor.configure(fileSystem,null,owner);\n \t}\n \n+\t@Test\n+\tpublic void fileSystemActorEmptyParameterAction() throws Exception {\n+\t\tthrown.expectMessage(\"unable to resolve the value of parameter\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99fd24a3908efd4279b032e3c504681a0590f629", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/99fd24a3908efd4279b032e3c504681a0590f629", "committedDate": "2020-11-26T10:40:48Z", "message": "more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cebdbcdad873a1ac28e6d3532882e778fdd9574c", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/cebdbcdad873a1ac28e6d3532882e778fdd9574c", "committedDate": "2020-11-26T11:05:35Z", "message": "cosmetic move, to reduce the amount of changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjE3NzQ4", "url": "https://github.com/ibissource/iaf/pull/1280#pullrequestreview-539217748", "createdAt": "2020-11-26T11:09:37Z", "commit": {"oid": "cebdbcdad873a1ac28e6d3532882e778fdd9574c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca8feb29da30039f83d816a7fe5f8f856cee5d4c", "author": {"user": {"login": "alisihab", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/ca8feb29da30039f83d816a7fe5f8f856cee5d4c", "committedDate": "2020-11-26T11:45:27Z", "message": "rename legacy parameter before checking the requirements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1069, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}