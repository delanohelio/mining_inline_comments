{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDcwMzI0", "number": 776, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo0NTo1N1rOECIx6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozNjoxM1rOEDbB4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjc2NDU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo0NTo1N1rOGeaJdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo0NTo1N1rOGeaJdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUzODg2OA==", "bodyText": "If a charset is required, UTF-8 should be used by default. For binary content no charset must be used.", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r434538868", "createdAt": "2020-06-03T12:45:57Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ApiListener.java", "diffHunk": "@@ -50,12 +50,14 @@\n \n \tprivate MediaTypes consumes = MediaTypes.ANY;\n \tprivate MediaTypes produces = MediaTypes.ANY;\n+\tprivate ContentType producedContentType;\n \tprivate String multipartBodyName = null;\n \n \tprivate IReceiver receiver;\n \n \tprivate ClassLoader configurationClassLoader = Thread.currentThread().getContextClassLoader();\n \tprivate String messageIdHeader = AppConstants.getInstance(configurationClassLoader).getString(\"apiListener.messageIdHeader\", \"Message-Id\");\n+\tprivate String charset = null; //Use system default or UTF-8?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88963a32d6844cceeba6399bec69e0c123509712"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjc4MDgzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiListenerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MDoxM1rOGeaTrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MDoxM1rOGeaTrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0MTQ4Nw==", "bodyText": "Dit is een rare test, om een binair formaat te gebruiken en er dan een charset bij te doen.\nAls anderen het zien kan het bovendien verwarrend zijn. Je moet zo'n test met een tekst content-type doen.", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r434541487", "createdAt": "2020-06-03T12:50:13Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ApiListenerTest.java", "diffHunk": "@@ -56,6 +56,16 @@ public void testProducesUpperCase() throws ConfigurationException {\n \t\tassertEquals(\"XML\", listener.getProduces());\n \t}\n \n+\t@Test\n+\tpublic void testProducesPdfWithCharset() throws ConfigurationException {\n+\t\tlistener.setProduces(\"PDF\");\n+\t\tlistener.setCharacterEncoding(\"utf-8\");\n+\t\tlistener.configure();\n+\n+\t\tassertEquals(\"PDF\", listener.getProduces());\n+\t\tassertEquals(\"application/pdf;charset=UTF-8\", listener.getContentType());\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88963a32d6844cceeba6399bec69e0c123509712"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjc4MzMwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ContentTypeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MDo1NVrOGeaVOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMjo1MDo1NVrOGeaVOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDU0MTg4Mw==", "bodyText": "Dit is een rare test, om een binair formaat te gebruiken en er dan een charset bij te doen.\nAls anderen het zien kan het bovendien verwarrend zijn. Je moet zo'n test met een tekst content-type doen.", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r434541883", "createdAt": "2020-06-03T12:50:55Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/http/rest/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.http.rest;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNull;\n+\n+import org.junit.Test;\n+\n+public class ContentTypeTest {\n+\n+\t@Test\n+\tpublic void defaultTest() {\n+\t\tContentType contenType = new ContentType(MediaTypes.ANY);\n+\t\tassertNull(\"MediaType should not have a charset by default\", contenType.getCharset());\n+\t\tassertEquals(\"ContentType should be */* without charset\", \"*/*\", contenType.getContentType());\n+\t}\n+\n+\t@Test\n+\tpublic void withCharset() {\n+\t\tContentType contenType = new ContentType(MediaTypes.PDF);\n+\t\tassertNull(\"ContentType should not have a charset by default\", contenType.getCharset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88963a32d6844cceeba6399bec69e0c123509712"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTU4NDU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ContentType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOTowNzo0NlrOGgVOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoyNDoyNFrOGhMrFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NTQ1Mg==", "bodyText": "Hier bedoel je dan denk ik if (this.charset == null)", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r436555452", "createdAt": "2020-06-08T09:07:46Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ContentType.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.http.rest;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.UnsupportedCharsetException;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ContentType {\n+\tpublic static final String CHARSET_PARAMETER = \"charset\";\n+\tprivate MediaTypes mediaType;\n+\tprivate Charset charset;\n+\n+\tpublic ContentType(MediaTypes mediaType) {\n+\t\tthis.mediaType = mediaType;\n+\t\tthis.charset = mediaType.getCharset(); // when charset = NULL it means setting it is disallowed\n+\t}\n+\n+\tpublic void setCharset(String charset) {\n+\t\tif(charset == null) {\n+\t\t\tthrow new UnsupportedCharsetException(\"provided mediatype does not support setting charset\");\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2MzgzMQ==", "bodyText": "Ja dat klopt!", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r437463831", "createdAt": "2020-06-09T14:24:24Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/ContentType.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+Copyright 2020 WeAreFrank!\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+you may not use this file except in compliance with the License.\n+You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing, software\n+distributed under the License is distributed on an \"AS IS\" BASIS,\n+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+See the License for the specific language governing permissions and\n+limitations under the License.\n+*/\n+package nl.nn.adapterframework.http.rest;\n+\n+import java.nio.charset.Charset;\n+import java.nio.charset.UnsupportedCharsetException;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public class ContentType {\n+\tpublic static final String CHARSET_PARAMETER = \"charset\";\n+\tprivate MediaTypes mediaType;\n+\tprivate Charset charset;\n+\n+\tpublic ContentType(MediaTypes mediaType) {\n+\t\tthis.mediaType = mediaType;\n+\t\tthis.charset = mediaType.getCharset(); // when charset = NULL it means setting it is disallowed\n+\t}\n+\n+\tpublic void setCharset(String charset) {\n+\t\tif(charset == null) {\n+\t\t\tthrow new UnsupportedCharsetException(\"provided mediatype does not support setting charset\");\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NTQ1Mg=="}, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTU5NzYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwOToxMTowMFrOGgVWtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDozMDozMFrOGhM94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NzQ5Mg==", "bodyText": "Kan je hier niet net zo goed een boolean hebben met 'hasCharset'?", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r436557492", "createdAt": "2020-06-08T09:11:00Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "diffHunk": "@@ -15,21 +15,43 @@\n */\n package nl.nn.adapterframework.http.rest;\n \n+import java.nio.charset.Charset;\n+\n public enum MediaTypes {\n \n-\tANY(\"*/*\"),\n+\tANY(\"*/*\", null),\n \tTEXT(\"text/plain\"),\n \tXML(\"application/xml\"),\n \tJSON(\"application/json\"),\n-\tPDF(\"application/pdf\"),\n+\tPDF(\"application/pdf\", null), //raw binary formats do not have a charset\n+\tOCTET(\"application/octet-stream\", null), //raw binary formats do not have a charset\n \tMULTIPART_RELATED(\"multipart/related\"),\n \tMULTIPART_FORMDATA(\"multipart/form-data\"),\n \tMULTIPART(\"multipart/*\");\n \n \tprivate final String mediaType;\n+\tprivate final Charset charset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2ODY0Mw==", "bodyText": "Ja ik dacht ik gebruik een Charset want dan kunnen we ooit misschien nog besluiten ergens een andere default charset op te geven", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r437468643", "createdAt": "2020-06-09T14:30:30Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "diffHunk": "@@ -15,21 +15,43 @@\n */\n package nl.nn.adapterframework.http.rest;\n \n+import java.nio.charset.Charset;\n+\n public enum MediaTypes {\n \n-\tANY(\"*/*\"),\n+\tANY(\"*/*\", null),\n \tTEXT(\"text/plain\"),\n \tXML(\"application/xml\"),\n \tJSON(\"application/json\"),\n-\tPDF(\"application/pdf\"),\n+\tPDF(\"application/pdf\", null), //raw binary formats do not have a charset\n+\tOCTET(\"application/octet-stream\", null), //raw binary formats do not have a charset\n \tMULTIPART_RELATED(\"multipart/related\"),\n \tMULTIPART_FORMDATA(\"multipart/form-data\"),\n \tMULTIPART(\"multipart/*\");\n \n \tprivate final String mediaType;\n+\tprivate final Charset charset;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU1NzQ5Mg=="}, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDIzOTIyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozNTo1NlrOGgbkyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozNTo1NlrOGgbkyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1OTQwMw==", "bodyText": "steamutil.defaultCharset", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r436659403", "createdAt": "2020-06-08T12:35:56Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "diffHunk": "@@ -15,21 +15,43 @@\n */\n package nl.nn.adapterframework.http.rest;\n \n+import java.nio.charset.Charset;\n+\n public enum MediaTypes {\n \n-\tANY(\"*/*\"),\n+\tANY(\"*/*\", null),\n \tTEXT(\"text/plain\"),\n \tXML(\"application/xml\"),\n \tJSON(\"application/json\"),\n-\tPDF(\"application/pdf\"),\n+\tPDF(\"application/pdf\", null), //raw binary formats do not have a charset\n+\tOCTET(\"application/octet-stream\", null), //raw binary formats do not have a charset\n \tMULTIPART_RELATED(\"multipart/related\"),\n \tMULTIPART_FORMDATA(\"multipart/form-data\"),\n \tMULTIPART(\"multipart/*\");\n \n \tprivate final String mediaType;\n+\tprivate final Charset charset;\n \n+\t/**\n+\t * Creates a new MediaType with the default charset (UTF-8)\n+\t */\n \tprivate MediaTypes(String mediaType) {\n+\t\tthis(mediaType, Charset.forName(\"utf-8\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDI0MDM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozNjoxM1rOGgblaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozNjoxM1rOGgblaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY1OTU2MA==", "bodyText": "Rename to getDefaultCharset()", "url": "https://github.com/ibissource/iaf/pull/776#discussion_r436659560", "createdAt": "2020-06-08T12:36:13Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/rest/MediaTypes.java", "diffHunk": "@@ -15,21 +15,43 @@\n */\n package nl.nn.adapterframework.http.rest;\n \n+import java.nio.charset.Charset;\n+\n public enum MediaTypes {\n \n-\tANY(\"*/*\"),\n+\tANY(\"*/*\", null),\n \tTEXT(\"text/plain\"),\n \tXML(\"application/xml\"),\n \tJSON(\"application/json\"),\n-\tPDF(\"application/pdf\"),\n+\tPDF(\"application/pdf\", null), //raw binary formats do not have a charset\n+\tOCTET(\"application/octet-stream\", null), //raw binary formats do not have a charset\n \tMULTIPART_RELATED(\"multipart/related\"),\n \tMULTIPART_FORMDATA(\"multipart/form-data\"),\n \tMULTIPART(\"multipart/*\");\n \n \tprivate final String mediaType;\n+\tprivate final Charset charset;\n \n+\t/**\n+\t * Creates a new MediaType with the default charset (UTF-8)\n+\t */\n \tprivate MediaTypes(String mediaType) {\n+\t\tthis(mediaType, Charset.forName(\"utf-8\"));\n+\t}\n+\n+\t/**\n+\t * Creates a new MediaType with the given charset\n+\t */\n+\tprivate MediaTypes(String mediaType, Charset charset) {\n \t\tthis.mediaType = mediaType;\n+\t\tthis.charset = charset;\n+\t}\n+\n+\t/**\n+\t * returns the default charset for the given mediatype or null when non is allowed\n+\t */\n+\tpublic Charset getCharset() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd2568f0f1cda53f5a80e0b6a8baf2bb8e970989"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 374, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}