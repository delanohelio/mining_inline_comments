{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzY2NzA4", "number": 983, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDo1OToxNlrOEZbAGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQwOTo0MTo0MFrOFYzzgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MDkyMjQ4OnYy", "diffSide": "RIGHT", "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMDo1OToxNlrOHCOQ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNVQxMzo0MzozNVrOIZnfKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5MjkwNQ==", "bodyText": "Why isn't this StreamUtil.DEFAULT_INPUT_STREAM_ENCODING?", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r472092905", "createdAt": "2020-08-18T10:59:16Z", "author": {"login": "gvanbrakel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5NTU4MQ==", "bodyText": "I have written this pipe for a use case where we use ISO-8859-1.", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r488495581", "createdAt": "2020-09-15T08:47:42Z", "author": {"login": "Laurens-makel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5MjkwNQ=="}, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0NzcxMg==", "bodyText": "Misschien de default op utf-8 zetten, dat is namelijk overal binnen het framework zo.", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r544147712", "createdAt": "2020-12-16T09:35:41Z", "author": {"login": "nielsm5"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5MjkwNQ=="}, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzczMjI2Nw==", "bodyText": "Done", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r563732267", "createdAt": "2021-01-25T13:43:35Z", "author": {"login": "Laurens-makel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjA5MjkwNQ=="}, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTM1NjQyOnYy", "diffSide": "RIGHT", "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTozNToxOVrOIG8H9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QwOTo0NToyMlrOIa-7FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0NzQ0NQ==", "bodyText": "je moet de inputstream ook sluiten. (of doet document dit!??) Ik stel voor, om voor de zekerheid, een try-with-resources block te gebruiken.", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r544147445", "createdAt": "2020-12-16T09:35:19Z", "author": {"login": "nielsm5"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tsuper.configure();\n+\t}\n+\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message input, IPipeLineSession session) throws PipeRunException {\n+\t\tint result = 0;\n+\n+\t\tInputStream binaryInputStream;\n+\t\ttry {\n+\t\t\tbinaryInputStream = input.asInputStream(getCharset());\n+\t\t} catch (IOException e1) {\n+\t\t\tthrow new PipeRunException(this,\n+\t\t\t\t\t\tgetLogPrefix(session) + \"cannot encode message using charset [\" + getCharset() + \"]\", e1);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tDocument doc = new Document(binaryInputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzczMjA3Mw==", "bodyText": "Done", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r563732073", "createdAt": "2021-01-25T13:43:22Z", "author": {"login": "Laurens-makel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tsuper.configure();\n+\t}\n+\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message input, IPipeLineSession session) throws PipeRunException {\n+\t\tint result = 0;\n+\n+\t\tInputStream binaryInputStream;\n+\t\ttry {\n+\t\t\tbinaryInputStream = input.asInputStream(getCharset());\n+\t\t} catch (IOException e1) {\n+\t\t\tthrow new PipeRunException(this,\n+\t\t\t\t\t\tgetLogPrefix(session) + \"cannot encode message using charset [\" + getCharset() + \"]\", e1);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tDocument doc = new Document(binaryInputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0NzQ0NQ=="}, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NTE2NDgyMQ==", "bodyText": "Het kan nog eenvoudiger. Je kan regels 53 t/m 61 vervangen door:\ntry (InputStream binaryInputStream = input.asInputStream(getCharset())) {\n\nen dan regels 66 t/m 75 vervangen door een simpele catch clause", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r565164821", "createdAt": "2021-01-27T09:45:22Z", "author": {"login": "gvanbrakel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import com.aspose.pdf.Document;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = \"ISO-8859-1\";\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tsuper.configure();\n+\t}\n+\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message input, IPipeLineSession session) throws PipeRunException {\n+\t\tint result = 0;\n+\n+\t\tInputStream binaryInputStream;\n+\t\ttry {\n+\t\t\tbinaryInputStream = input.asInputStream(getCharset());\n+\t\t} catch (IOException e1) {\n+\t\t\tthrow new PipeRunException(this,\n+\t\t\t\t\t\tgetLogPrefix(session) + \"cannot encode message using charset [\" + getCharset() + \"]\", e1);\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tDocument doc = new Document(binaryInputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDE0NzQ0NQ=="}, "originalCommit": {"oid": "82c9681c056920241d5482c10281bacb48291131"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzYxNTU4OTE1OnYy", "diffSide": "RIGHT", "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQwOTo0MTo0MFrOIjAmWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMFQwOTo0MTo0MFrOIjAmWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MzU4MDg5MA==", "bodyText": "De default is UTF-8", "url": "https://github.com/ibissource/iaf/pull/983#discussion_r573580890", "createdAt": "2021-02-10T09:41:40Z", "author": {"login": "gvanbrakel"}, "path": "aspose/src/main/java/nl/nn/adapterframework/extensions/aspose/pipe/AmountOfPagesPipe.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+   Copyright 2019, 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.aspose.pipe;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.core.IPipeLineSession;\n+import nl.nn.adapterframework.core.PipeRunException;\n+import nl.nn.adapterframework.core.PipeRunResult;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.pipes.FixedForwardPipe;\n+import nl.nn.adapterframework.stream.Message;\n+import nl.nn.adapterframework.util.StreamUtil;\n+\n+import com.aspose.pdf.Document;\n+import com.aspose.pdf.exceptions.InvalidPasswordException;\n+\n+/**\n+ * Returns the amount of pages of a PDF file.\n+ * \n+ * \n+ * @author Laurens M\u00e4kel\n+ * @since  7.6\n+ *\n+ */\n+public class AmountOfPagesPipe extends FixedForwardPipe {\n+\tprivate String charset = StreamUtil.DEFAULT_INPUT_STREAM_ENCODING;\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tsuper.configure();\n+\t}\n+\n+\t@Override\n+\tpublic PipeRunResult doPipe(Message input, IPipeLineSession session) throws PipeRunException {\n+\t\tint result = 0;\n+\n+\t\ttry (InputStream binaryInputStream = input.asInputStream(getCharset())){\n+\t\t\tDocument doc = new Document(binaryInputStream);\n+\t\t\tresult = doc.getPages().size();\n+\t\t\tbinaryInputStream.close();\n+\t\t} catch (IOException e1) {\n+\t\t\tthrow new PipeRunException(this,\n+\t\t\t\t\t\tgetLogPrefix(session) + \"cannot encode message using charset [\" + getCharset() + \"]\", e1);\n+\t\t} catch (InvalidPasswordException ip) {\n+\t\t\treturn new PipeRunResult(findForward(\"passwordProtected\"), \"File is password protected.\" );\n+\t\t}\n+      \n+\t\treturn new PipeRunResult(getForward(), Integer.toString(result) );\n+\t}\n+\n+\t@IbisDoc({ \"charset to be used to encode the given input string \", \"ISO-8859-1\" })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea60839ad9b7895a54b0e9d524bb02635632d79d"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 316, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}