{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTg1NTcz", "number": 771, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyNjoyNlrOEDclXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozODoyOVrOEDc5KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQ5NTAwOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlWriterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyNjoyNlrOGgeAkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyNjoyNlrOGgeAkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5OTI4MQ==", "bodyText": "Maybe you could add a small description (comment) why you're explicitly turning off the lexical-handler", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436699281", "createdAt": "2020-06-08T13:26:26Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlWriterTest.java", "diffHunk": "@@ -62,8 +62,8 @@ public void testNoLexicalHandling() throws Exception {\n \t\tXmlWriter xmlWriter = new XmlWriter();\n \t\t\n \t\tInputSource inputSource = new InputSource(new StringReader(input));\n-\t\tXMLReader xmlReader = XmlUtils.getXMLReader(true, true);\n-\t\txmlReader.setContentHandler(xmlWriter);\n+\t\tXMLReader xmlReader = XmlUtils.getXMLReader(xmlWriter);\n+\t\txmlReader.setProperty(\"http://xml.org/sax/properties/lexical-handler\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fc97ea7cc8a6285c31601df7591be1a9caed40"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQ5NTYzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlPrettyPrintFilterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyNjozM1rOGgeBCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoyNjozM1rOGgeBCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY5OTQwMw==", "bodyText": "Maybe you could add a small description (comment) why you're explicitly turning off the lexical-handler", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436699403", "createdAt": "2020-06-08T13:26:33Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/xml/XmlPrettyPrintFilterTest.java", "diffHunk": "@@ -47,8 +47,8 @@ public void testNoLexicalHandling() throws Exception {\n \t\tfilter.setContentHandler(xmlWriter);\n \n \t\tInputSource inputSource = new InputSource(new StringReader(input));\n-\t\tXMLReader xmlReader = XmlUtils.getXMLReader(true, true);\n-\t\txmlReader.setContentHandler(filter);\n+\t\tXMLReader xmlReader = XmlUtils.getXMLReader(filter);\n+\t\txmlReader.setProperty(\"http://xml.org/sax/properties/lexical-handler\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fc97ea7cc8a6285c31601df7591be1a9caed40"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDUxOTI2OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/util/XmlParserTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozMTo1NFrOGgePqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozMTo1NFrOGgePqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMzE0Nw==", "bodyText": "What do you mean by proper setup? Is it possible to get the absolute path (feed the URL to a file and call toPath()).\nI believe one of the 'resource validation checks' is if the resource starts with the file:// protocol.", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436703147", "createdAt": "2020-06-08T13:31:54Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/XmlParserTest.java", "diffHunk": "@@ -0,0 +1,84 @@\n+package nl.nn.adapterframework.util;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.junit.FixMethodOrder;\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.junit.runners.MethodSorters;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+import nl.nn.adapterframework.core.Resource;\n+import nl.nn.adapterframework.stream.Message;\n+import nl.nn.adapterframework.testutil.MatchUtils;\n+import nl.nn.adapterframework.testutil.TestFileUtils;\n+import nl.nn.adapterframework.xml.XmlWriter;\n+\n+@FixMethodOrder(MethodSorters.NAME_ASCENDING)\n+public class XmlParserTest {\n+\n+\t\n+\tprotected String getInputAsString(String file) throws IOException {\n+\t\tString input    = TestFileUtils.getTestFile(file);\n+\t\tURL entity      = TestFileUtils.getTestFileURL(\"/XmlUtils/EntityResolution/in-plain.xml\");\n+\t\tinput=input.replaceAll(\"\\\\[ENTITY_URL\\\\]\", entity.toExternalForm());\n+\t\tSystem.out.println(\"input [\"+input+\"]\");\n+\t\treturn input;\n+\t}\n+\n+\t\n+\t@Test\n+\tpublic void testParseXmlNoExternalEntityInjection() throws IOException, SAXException {\n+\t\tString input    = getInputAsString(\"/XmlUtils/EntityResolution/in-file-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-not-resolved.xml\");\n+\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}\n+\n+\t@Test\n+\tpublic void testParseXmlNoRelativeEntityInjection() throws IOException, SAXException {\n+\t\tURL    input    = TestFileUtils.getTestFileURL(\"/XmlUtils/EntityResolution/in-relative-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-not-resolved.xml\");\n+\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tInputSource source = Message.asInputSource(input);\n+\t\t\n+\t\tXmlUtils.parseXml(source, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\n+\t}\n+\n+\n+\t@Test\n+\tpublic void testParseXmlResourceWithRelativeEntityInjection() throws IOException, SAXException, ParserConfigurationException {\n+\t\tResource input  = Resource.getResource(\"/XmlUtils/EntityResolution/in-relative-entity.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-resolved.xml\");\n+\t\t\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}\n+\t\n+\t@Test\n+\t@Ignore(\"requires proper setup on the classpath filesystem\")\n+\tpublic void testParseXmlResourceWithExternalEntityInjection() throws IOException, SAXException, ParserConfigurationException {\n+\t\tResource input  = Resource.getResource(\"/XmlUtils/EntityResolution/in-file-entity-c-temp.xml\");\n+\t\tString expected = TestFileUtils.getTestFile(\"/XmlUtils/EntityResolution/out-resolved.xml\");\n+\t\t\n+\t\tXmlWriter writer = new XmlWriter();\n+\t\tXmlUtils.parseXml(input, writer);\n+\t\t\n+\t\tMatchUtils.assertXmlEquals(expected,writer.toString());\t\t\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fc97ea7cc8a6285c31601df7591be1a9caed40"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDU0NTY5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/XmlUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozODoyOVrOGgegfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzozODoyOVrOGgegfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwNzQ1Mw==", "bodyText": "Ik vind dit raar. De inputsource moet uit de Resource komen!", "url": "https://github.com/ibissource/iaf/pull/771#discussion_r436707453", "createdAt": "2020-06-08T13:38:29Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/XmlUtils.java", "diffHunk": "@@ -978,28 +985,19 @@ public static Source stringToSource(String xmlString) throws DomBuilderException\n \tpublic static Source stringToSourceForSingleUse(String xmlString) throws SAXException {\n \t\treturn stringToSourceForSingleUse(xmlString, isNamespaceAwareByDefault());\n \t}\n-\n+\t\n \tpublic static Source stringToSourceForSingleUse(String xmlString, boolean namespaceAware) throws SAXException {\n-\t\treturn stringToSourceForSingleUse(xmlString, namespaceAware, false);\n-\t}\n-\n-\tpublic static Source stringToSourceForSingleUse(String xmlString, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n-\t\treturn stringToSAXSource(xmlString, namespaceAware, false);\n-\t}\n-\n-\tpublic static SAXSource stringToSAXSource(String xmlString, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n \t\tStringReader reader = new StringReader(xmlString);\n-\t\treturn readerToSAXSource(reader,namespaceAware,resolveExternalEntities);\n-\t}\n-\t\n-\tpublic static SAXSource readerToSAXSource(Reader reader, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n \t\tInputSource is = new InputSource(reader);\n-\t\treturn inputSourceToSAXSource(is,namespaceAware,resolveExternalEntities);\n+\t\treturn inputSourceToSAXSource(is, namespaceAware, null);\n \t}\t\n \t\n-\tpublic static SAXSource inputSourceToSAXSource(InputSource is, boolean namespaceAware, boolean resolveExternalEntities) throws SAXException {\n+\tpublic static SAXSource inputSourceToSAXSource(InputSource is, Resource classloaderProvider) throws SAXException {\n+\t\treturn inputSourceToSAXSource(is, true, classloaderProvider);\n+\t}\n+\tpublic static SAXSource inputSourceToSAXSource(InputSource is, boolean namespaceAware, Resource classloaderProvider) throws SAXException {\n \t\ttry {\n-\t\t\treturn new SAXSource(getXMLReader(namespaceAware, resolveExternalEntities), is);\n+\t\t\treturn new SAXSource(getXMLReader(namespaceAware, classloaderProvider), is);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36fc97ea7cc8a6285c31601df7591be1a9caed40"}, "originalPosition": 183}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 369, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}