{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMjg5NTE5", "number": 1344, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyODoyNlrOFHGsdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozNToyMVrOFHG5bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk0MDM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyODoyNlrOIIbTRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyODoyNlrOIIbTRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNjgyMw==", "bodyText": "I think this should be done once, (moved to the top). Otherwise this will happen every time a new engine is generated..\nYou can, instead of using split, use AppConstants.getTokenizedProperty()", "url": "https://github.com/ibissource/iaf/pull/1344#discussion_r545706823", "createdAt": "2020-12-18T09:28:26Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "diffHunk": "@@ -156,21 +155,22 @@ private String getVisJsWrapper() {\n \n \t\tEngine(String initScript, String graphvisJsLibrary) {\n \t\t\t// Available JS Engines. Lower index has priority.\n-\t\t\tClass<?>[] engines = new Class[]{J2V8.class, Nashorn.class};\n+\t\t\tString[] engines = AppConstants.getInstance().getString(\"javascript.engines\", \"nl.nn.adapterframework.extensions.javascript.J2V8,nl.nn.adapterframework.extensions.javascript.Nashorn\").split(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c556314a5bccf7a1a7bf790707751821e41de5c0"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk0NjM5OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/AppConstants.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyOToxOFrOIIbWoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyOToxOFrOIIbWoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNzY4MQ==", "bodyText": "Since this property is solely for the flow diagrams maybe change it to flow.javascript.engine", "url": "https://github.com/ibissource/iaf/pull/1344#discussion_r545707681", "createdAt": "2020-12-18T09:29:18Z", "author": {"login": "nielsm5"}, "path": "core/src/main/resources/AppConstants.properties", "diffHunk": "@@ -50,6 +50,7 @@ upload.dir=${ibis.tmpdir}\n \n flow.adapter.dir=${ibis.tmpdir}/flow/adapter\n flow.config.dir=${ibis.tmpdir}/flow/config\n+javascript.engines=nl.nn.adapterframework.extensions.javascript.J2V8,nl.nn.adapterframework.extensions.javascript.Nashorn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c556314a5bccf7a1a7bf790707751821e41de5c0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTk3MzU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozNToyMVrOIIbnFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOTozNToyMVrOIIbnFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcxMTg5NA==", "bodyText": "I think it would be a good idea, to have some form of instanceof check here, to validate if the new class instance is indeed castable to JavascriptEngine and if not returns a readable error message. If you move all this logic to the constructor, instead of keeping a String[] you can keep using the Class[].", "url": "https://github.com/ibissource/iaf/pull/1344#discussion_r545711894", "createdAt": "2020-12-18T09:35:21Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/extensions/graphviz/GraphvizEngine.java", "diffHunk": "@@ -156,21 +155,22 @@ private String getVisJsWrapper() {\n \n \t\tEngine(String initScript, String graphvisJsLibrary) {\n \t\t\t// Available JS Engines. Lower index has priority.\n-\t\t\tClass<?>[] engines = new Class[]{J2V8.class, Nashorn.class};\n+\t\t\tString[] engines = AppConstants.getInstance().getString(\"javascript.engines\", \"nl.nn.adapterframework.extensions.javascript.J2V8,nl.nn.adapterframework.extensions.javascript.Nashorn\").split(\",\");\n \n \t\t\tfor (int i = 0; i < engines.length && jsEngine == null; i++) {\n \t\t\t\ttry {\n-\t\t\t\t\tlog.debug(\"Trying Javascript engine [\" + engines[i].getName() + \"] for Graphviz.\");\n-\t\t\t\t\tJavascriptEngine<?> engine = ((JavascriptEngine<?>) engines[i].newInstance());\n+\t\t\t\t\tClass<?> clazz = Class.forName(engines[i]);\n+\t\t\t\t\tlog.debug(\"Trying Javascript engine [\" + engines[i] + \"] for Graphviz.\");\n+\t\t\t\t\tJavascriptEngine<?> engine = ((JavascriptEngine<?>) clazz.newInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c556314a5bccf7a1a7bf790707751821e41de5c0"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 541, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}