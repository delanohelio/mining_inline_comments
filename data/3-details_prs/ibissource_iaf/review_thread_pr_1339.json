{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMDQ0NzMw", "number": 1339, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyMzowMFrOFFgsmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyNToxMFrOFFgwwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzIyOTA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/http/WebServiceSender.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyMzowMFrOIGDlRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyMzowMFrOIGDlRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMTA2MQ==", "bodyText": "Gaat dit wel goed? getResponseBody kan een java.io.IOException: Stream closed exceptie gooien bij het lezen van een foutive response.\nIn getResponseBodyAsString zit hiervoor een try/catch die silent null terug geeft. Nu krijg je een exceptie in een exceptie", "url": "https://github.com/ibissource/iaf/pull/1339#discussion_r543221061", "createdAt": "2020-12-15T10:23:00Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/WebServiceSender.java", "diffHunk": "@@ -132,19 +132,20 @@ protected HttpRequestBase getMethod(URI uri, Message message, ParameterValueList\n \t\t}\n \t\tif (log.isDebugEnabled()) log.debug(getLogPrefix()+\"SOAPMSG [\" + soapmsg + \"]\");\n \n-\t\tHttpRequestBase method = super.getMethod(uri, new Message(soapmsg), parameters, session);\n+\t\tHttpRequestBase method = super.getMethod(uri, soapmsg, parameters, session);\n \t\tlog.debug(getLogPrefix()+\"setting SOAPAction header [\"+soapActionURI+\"]\");\n \t\tmethod.setHeader(\"SOAPAction\", soapActionURI);\n \t\treturn method;\n \t}\n \n \t@Override\n \tprotected Message extractResult(HttpResponseHandler responseHandler, IPipeLineSession session) throws SenderException, IOException {\n-\t\tString httpResult = null;\n+\t\tMessage httpResult = null;\n \t\ttry {\n-\t\t\thttpResult = super.extractResult(responseHandler, session).asString();\n+\t\t\thttpResult = super.extractResult(responseHandler, session);\n+\t\t\thttpResult.preserve();\n \t\t} catch (SenderException e) {\n-\t\t\tsoapWrapper.checkForSoapFault(getResponseBodyAsString(responseHandler), e);\n+\t\t\tsoapWrapper.checkForSoapFault(getResponseBody(responseHandler), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81237fa8316f081c5cd95f83f39e9b2e2da2c8e9"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzIzOTY5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyNToxMFrOIGDrlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMDoyNToxMFrOIGDrlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzIyMjY3OQ==", "bodyText": "de responseBody moet hier persistent zijn, anders gaan hier fouten ontstaan. Misschien is het handig de tests aan te passen, aangezien dit niet getest wordt!", "url": "https://github.com/ibissource/iaf/pull/1339#discussion_r543222679", "createdAt": "2020-12-15T10:25:10Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/soap/SoapWrapper.java", "diffHunk": "@@ -101,7 +97,7 @@ public static SoapWrapper getInstance() throws ConfigurationException {\n \t\treturn self;\n \t}\n \n-\tpublic void checkForSoapFault(String responseBody, Throwable nested) throws SenderException {\n+\tpublic void checkForSoapFault(Message responseBody, Throwable nested) throws SenderException {\n \t\tString faultString = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81237fa8316f081c5cd95f83f39e9b2e2da2c8e9"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 537, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}