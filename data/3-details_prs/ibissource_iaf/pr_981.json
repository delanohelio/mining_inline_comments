{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzOTc0ODQ1", "number": 981, "title": "Filename comparator test", "bodyText": "", "createdAt": "2020-08-06T11:46:23Z", "url": "https://github.com/ibissource/iaf/pull/981", "merged": true, "mergeCommit": {"oid": "ffba5645669aa312b80b350becac252f159e8068"}, "closed": true, "closedAt": "2020-11-12T15:36:45Z", "author": {"login": "sinasen2000"}, "timelineItems": {"totalCount": 55, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFiWQRgH2gAyNDYzOTc0ODQ1OmY5MjNhNjc1Njg4MmFhOGYyMjc3NmNlODRmZjg1MzJjOGJjOWRjZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb0ZpYAFqTUyOTIxMTE1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f923a6756882aa8f22776ce84ff8532c8bc9dcfb", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/f923a6756882aa8f22776ce84ff8532c8bc9dcfb", "committedDate": "2020-02-18T13:56:47Z", "message": "[maven-release-plugin] prepare release v7.5-RC1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bab86966e83621208227871eafc4504bdc6d2d21", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/bab86966e83621208227871eafc4504bdc6d2d21", "committedDate": "2020-02-18T13:56:48Z", "message": "[maven-release-plugin] prepare for next development iteration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331ffb127fa2c18b59892b4d9de013b87ae57f6c", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/331ffb127fa2c18b59892b4d9de013b87ae57f6c", "committedDate": "2020-02-18T15:44:41Z", "message": "Update releases.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef4d497de45dc4bd07cbd86d9547167a37db93e2", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/ef4d497de45dc4bd07cbd86d9547167a37db93e2", "committedDate": "2020-02-19T11:10:42Z", "message": "Fix for #426: null sender result throws NPE in MessageSendingPipe (#431)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a54bd2ea32632918c676d60c0c66669c1b1e3d", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/39a54bd2ea32632918c676d60c0c66669c1b1e3d", "committedDate": "2020-02-19T11:11:44Z", "message": "Fix version dependency in iaf-test (#430)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7842eb9f04547575f7d222233ff8e222ea67f9", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/2b7842eb9f04547575f7d222233ff8e222ea67f9", "committedDate": "2020-02-19T11:57:40Z", "message": "Fix for #425: Nested stacktrace ends at ForEachChildElementPipe (#429)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9a3ed66855c3030e7b3e5bc00e1b83117205984", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/e9a3ed66855c3030e7b3e5bc00e1b83117205984", "committedDate": "2020-02-21T13:27:26Z", "message": "Make sure the proper SpringBus is passed through to the IbisContext #445 (#446)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c022e55e45569932581e0fb37ac823d01d42c28", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/0c022e55e45569932581e0fb37ac823d01d42c28", "committedDate": "2020-03-02T11:04:38Z", "message": "Add timeout to window reload"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8d68ed98409cf3c5285d5e1a32c105e99cf2f80", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/c8d68ed98409cf3c5285d5e1a32c105e99cf2f80", "committedDate": "2020-03-02T11:05:22Z", "message": "Add confirm when removing schedules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "195654e097893ac580592a1f882d4d1ed586af0c", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/195654e097893ac580592a1f882d4d1ed586af0c", "committedDate": "2020-03-02T15:12:45Z", "message": "Move menu expand button"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc409974d2461da5609e24ebaad1696bd07a1b1a", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/fc409974d2461da5609e24ebaad1696bd07a1b1a", "committedDate": "2020-03-02T16:26:47Z", "message": "Fix security role bindings not being displayed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278971105b5d310a0512c036984be0d92ce7df18", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/278971105b5d310a0512c036984be0d92ce7df18", "committedDate": "2020-03-02T17:07:09Z", "message": "Make sure menu item and breadcrum are consistent #448"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e64a6b4ee0da568939e053aa1ad66765c22c361", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/8e64a6b4ee0da568939e053aa1ad66765c22c361", "committedDate": "2020-03-03T10:14:44Z", "message": "Add ladda and log full stacktrace #450"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6616ff4d8e841cb50169f430ae4b3a2deb0a4c70", "author": {"user": {"login": "nielsm5", "name": "Niels"}}, "url": "https://github.com/ibissource/iaf/commit/6616ff4d8e841cb50169f430ae4b3a2deb0a4c70", "committedDate": "2020-03-03T13:31:04Z", "message": "Remove formatted strings in IAF API #443"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84511677e42dd9b55c1600f32d043c4f168db027", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/84511677e42dd9b55c1600f32d043c4f168db027", "committedDate": "2020-03-05T12:11:16Z", "message": "added test classes for some pipes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c48ca4a5ea942bb81e4f0b1591de1452fed56131", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/c48ca4a5ea942bb81e4f0b1591de1452fed56131", "committedDate": "2020-03-05T14:54:47Z", "message": "added ReplacerPipe\n\nadded with full coverage, however I still need to add one case which does replace non xml characters and unicode supplementary characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e47da865d46fdab0bdf7af05930f0357858aee4", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/0e47da865d46fdab0bdf7af05930f0357858aee4", "committedDate": "2020-03-05T15:48:51Z", "message": "created uploadFilePipe\n\ncreated a template of createFilePipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58dfe76044a5ad630333d60a4dbf2cbe6f0ce436", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/58dfe76044a5ad630333d60a4dbf2cbe6f0ce436", "committedDate": "2020-03-06T09:51:32Z", "message": "added Text2XMLPipeTest\n\n%90 coverage, one fix or improvement can be to find a way to throw an io exception. i couldnt think of a case where the program throws an io exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccb78d47aafa2121fc9285637cbc3db3fa11a373", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/ccb78d47aafa2121fc9285637cbc3db3fa11a373", "committedDate": "2020-03-06T13:15:00Z", "message": "added UploadFilePipe\n\nWith full coverage. I think the class name should be changed to UploadZipFilePipe though, as it only supports zip files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ab68449d3f5d45dd9d194827900c5ec49269de4", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/3ab68449d3f5d45dd9d194827900c5ec49269de4", "committedDate": "2020-03-06T13:19:00Z", "message": "quick fix on replaceFilePipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae9ddaf1ed238abbdf92d279380663b57b5f0433", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/ae9ddaf1ed238abbdf92d279380663b57b5f0433", "committedDate": "2020-03-06T13:20:27Z", "message": "ReplaceFilePipe back to original version\n\nI had to change the method access modifier to public to test out one method to understand how it works, now it is back to its normal version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8c48548dfe15dac4ca6732937760e1cea54fd05", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/d8c48548dfe15dac4ca6732937760e1cea54fd05", "committedDate": "2020-03-06T13:25:59Z", "message": "remove redundant tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9538cd22b2405d308b4e744f65c212e45a2030d4", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/9538cd22b2405d308b4e744f65c212e45a2030d4", "committedDate": "2020-03-06T15:04:22Z", "message": "Delete IsUserInRolePipeTest\n\ndeleted as I couldn't figure out a way yet to modify the roles, will look  further in this class after I finish the tests of other classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "268252a731237942cca83ebcad1f6be8600f8748", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/268252a731237942cca83ebcad1f6be8600f8748", "committedDate": "2020-03-12T11:06:00Z", "message": "add 2 complete test classes\n\nadded 2 complete classes and several incomplete classes that I will try to finish up this afternoon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92d47a98de655edb213867df56752962bda5403", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/e92d47a98de655edb213867df56752962bda5403", "committedDate": "2020-04-10T13:23:17Z", "message": "Add test classes for pipes\n\nNearly all pipe classes are tested now with a few important exceptions like MessageSendingPipe."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7365adaa0ae74b11b35eb3b789eaf2fab0e083b", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/d7365adaa0ae74b11b35eb3b789eaf2fab0e083b", "committedDate": "2020-04-16T14:21:07Z", "message": "Merge pull request #1 from ibissource/master\n\nsyncing the main and forked repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f7abc29f07b60a70107559f9be6678936bc704", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/f0f7abc29f07b60a70107559f9be6678936bc704", "committedDate": "2020-04-16T14:33:55Z", "message": "Merge branch 'PipeTest' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c021e57eba2fdb46ec1920bc24df86c7b0df5f31", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/c021e57eba2fdb46ec1920bc24df86c7b0df5f31", "committedDate": "2020-04-16T14:34:12Z", "message": "Merge pull request #2 from sinasen2000/master\n\nmerge master into pipetest branch to sync the pipe test with the main master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99e183c1f21ecabb868caf854178a8adfd12cf45", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/99e183c1f21ecabb868caf854178a8adfd12cf45", "committedDate": "2020-04-17T12:17:49Z", "message": "refactor test files for syncing\n\nRefactored the test files for pipes with to have them in sync with the master. \nRemoved some test classes whose classes are deprecated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c042d8aac2209b129108ef6fd4b8ef1a109ba7d", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/4c042d8aac2209b129108ef6fd4b8ef1a109ba7d", "committedDate": "2020-04-17T13:06:23Z", "message": "refactor code for code quality\n\nrefactored the code for improving the code quality.\ndeleted classes which are vaguely tested, will have to retest those."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef437faad8857f5a797d3b2f8ba7b58256346ed4", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/ef437faad8857f5a797d3b2f8ba7b58256346ed4", "committedDate": "2020-04-17T13:25:26Z", "message": "resolve build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceeee7d7db13df6657ea0b7f5a26a6eb814e749f", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/ceeee7d7db13df6657ea0b7f5a26a6eb814e749f", "committedDate": "2020-04-17T13:40:50Z", "message": "fix test that blocks the build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3af2dc43c7d8aed9decf8931a269b8a0a05a513d", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/3af2dc43c7d8aed9decf8931a269b8a0a05a513d", "committedDate": "2020-04-17T13:44:41Z", "message": "fix build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2a1d2f4fe5fcb8b58bd707dc588d8f5b6a7b8f", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/7c2a1d2f4fe5fcb8b58bd707dc588d8f5b6a7b8f", "committedDate": "2020-05-13T18:56:33Z", "message": "add util test classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f5c6a4b05855c8114f6ec297a53aa10bdc77334", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/6f5c6a4b05855c8114f6ec297a53aa10bdc77334", "committedDate": "2020-05-13T19:10:53Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6a910f179fa3b260c13353e219fca74b2ef41fc", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/d6a910f179fa3b260c13353e219fca74b2ef41fc", "committedDate": "2020-05-14T08:20:24Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058578c56239c809a521f6a273c6285c60ef86d9", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/058578c56239c809a521f6a273c6285c60ef86d9", "committedDate": "2020-05-27T13:28:51Z", "message": "Merge pull request #9 from ibissource/master\n\nsync forked master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1934c9e2a363052602477ec6bae87b69637185a", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/a1934c9e2a363052602477ec6bae87b69637185a", "committedDate": "2020-06-17T11:54:30Z", "message": "Merge branch 'ibissource-master' into forked-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d969aa37da3f78cd40f7912fe6369cd0a47502e", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/3d969aa37da3f78cd40f7912fe6369cd0a47502e", "committedDate": "2020-07-29T13:33:06Z", "message": "Resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92fab827e3ed32cb548600236a1ad475722c1abc", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/92fab827e3ed32cb548600236a1ad475722c1abc", "committedDate": "2020-07-29T13:38:44Z", "message": "Sync forked master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0164d7adbc9d8d51f38cde6b5549f4bd4b1fbf34", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/0164d7adbc9d8d51f38cde6b5549f4bd4b1fbf34", "committedDate": "2020-07-29T13:38:55Z", "message": "Sync forked master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8860af2424696443769604221d712c81f62d2c82", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/8860af2424696443769604221d712c81f62d2c82", "committedDate": "2020-07-29T13:42:30Z", "message": "Sync forked master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768d86a827de6b41a7f0e94fc88b91fe54ea6f14", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/768d86a827de6b41a7f0e94fc88b91fe54ea6f14", "committedDate": "2020-07-29T13:44:56Z", "message": "Sync fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a6ae07e30b9c324a937dd6bd129f960e305805a", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/5a6ae07e30b9c324a937dd6bd129f960e305805a", "committedDate": "2020-07-29T13:45:57Z", "message": "Sync fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "931fa54ef73670468b578983c28d49bc89997c37", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/931fa54ef73670468b578983c28d49bc89997c37", "committedDate": "2020-08-06T11:43:42Z", "message": "Finish test class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4", "committedDate": "2020-08-28T10:24:14Z", "message": "Update FileName comparator test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzM3MjAz", "url": "https://github.com/ibissource/iaf/pull/981#pullrequestreview-479737203", "createdAt": "2020-09-01T13:24:55Z", "commit": {"oid": "459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzoyNDo1NVrOHK2IOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzozNzoxN1rOHK2pvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNDY0OQ==", "bodyText": "Instead of giving exact values, perhaps you can use\n ... == 0, ... < 0 and ... > 0 instead.", "url": "https://github.com/ibissource/iaf/pull/981#discussion_r481134649", "createdAt": "2020-09-01T13:24:55Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileNameComparatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package nl.nn.adapterframework.util;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * FileNameComparator Tester.\n+ *\n+ * @author <Sina Sen>\n+ */\n+public class FileNameComparatorTest {\n+\n+\n+\t@Test\n+\tpublic void testComparator() throws Exception {\n+\t\tList<File> list = new ArrayList<>();\n+\t\tlist.add(new File(\"test.txt\"));list.add(new File( \"teSt.txt\"));\n+\t\tlist.add(new File(\"0123.py\")); list.add(new File(\"test.xml\")); list.add(new File(\"document.txt\"));\n+\t\tCollections.sort(list, new FileNameComparator());\n+\t\tassertEquals(\"0123.py\", list.get(0).getName());\n+\t\tassertEquals(\"document.txt\", list.get(1).getName());\n+\t\tassertEquals(\"teSt.txt\", list.get(2).getName());\n+\t\tassertEquals(\"test.txt\", list.get(3).getName());\n+\t\tassertEquals(\"test.xml\", list.get(4).getName());\n+\n+\t}\n+\n+\t/**\n+\t * Method: getNextIndex(String s, int start, boolean numericPart)\n+\t */\n+\t@Test\n+\tpublic void testGetNextIndex() throws Exception {\n+\t\tint i = FileNameComparator.getNextIndex(\"test.txt\", 0, true);\n+\t\tint j = FileNameComparator.getNextIndex(\"test.txt\", 0, false);\n+\t\tassertEquals(0, i);\n+\t\tassertEquals(8, j);\n+\t}\n+\n+\t/**\n+\t * Method: skipWhitespace(String s, int start)\n+\t */\n+\t@Test\n+\tpublic void testSkipWhitespace() throws Exception {\n+\t\tint i = FileNameComparator.skipWhitespace(\"   file.txt\", 0);\n+\t\tassertEquals(3, i);\n+\n+\t}\n+\n+\t/**\n+\t * Method: compareStringsNaturalOrder(String s0, String s1, boolean caseSensitive)\n+\t */\n+\t@Test\n+\tpublic void testCompareStringsNaturalOrder() throws Exception {\n+\t\tString s1 = \"file1.txt\";\n+\t\tString s2 = \"File2.txt\";\n+\t\tString s3 = \"file1.txt\";\n+\t\tString s4 = \"File2.txt\";\n+\t\tint a = FileNameComparator.compareStringsNaturalOrder(s1, s2, true);\n+\t\tint b = FileNameComparator.compareStringsNaturalOrder(s1, s3, true);\n+\t\tint c = FileNameComparator.compareStringsNaturalOrder(s2, s3, true);\n+\t\tint d = FileNameComparator.compareStringsNaturalOrder(s2, s4, true);\n+\t\tassertEquals(32, a);\n+\t\tassertEquals(0, b);\n+\t\tassertEquals(-32, c);\n+\t\tassertEquals(0, d);\n+\t}\n+\n+\t/**\n+\t * Method: compareFilenames(File f0, File f1)\n+\t */\n+\t@Test\n+\tpublic void testCompareFilenames() throws Exception {\n+\t\tFile f1 = new File(\"first.txt\");\n+\t\tFile f2 = new File(\"second.txt\");\n+\t\tFile f3 = new File(\"first.txt\");\n+\t\tFile f4 = new File(\"FiRst.txt\");\n+\t\tint i = FileNameComparator.compareFilenames(f1, f2);\n+\t\tint j = FileNameComparator.compareFilenames(f1, f3);\n+\t\tint k = FileNameComparator.compareFilenames(f1, f4);\n+\t\tint l = FileNameComparator.compareFilenames(f2, f1);\n+\t\tassertEquals(-13, i);\n+\t\tassertEquals(0, j);\n+\t\tassertEquals(32, k);\n+\t\tassertEquals(13, l);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTEzNzYyMw==", "bodyText": "This test looks a lot like the test underneath, perhaps here you can test the 3rd argument of the compareStringsNaturalOrder method instead (case sensitivity)", "url": "https://github.com/ibissource/iaf/pull/981#discussion_r481137623", "createdAt": "2020-09-01T13:29:22Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileNameComparatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package nl.nn.adapterframework.util;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * FileNameComparator Tester.\n+ *\n+ * @author <Sina Sen>\n+ */\n+public class FileNameComparatorTest {\n+\n+\n+\t@Test\n+\tpublic void testComparator() throws Exception {\n+\t\tList<File> list = new ArrayList<>();\n+\t\tlist.add(new File(\"test.txt\"));list.add(new File( \"teSt.txt\"));\n+\t\tlist.add(new File(\"0123.py\")); list.add(new File(\"test.xml\")); list.add(new File(\"document.txt\"));\n+\t\tCollections.sort(list, new FileNameComparator());\n+\t\tassertEquals(\"0123.py\", list.get(0).getName());\n+\t\tassertEquals(\"document.txt\", list.get(1).getName());\n+\t\tassertEquals(\"teSt.txt\", list.get(2).getName());\n+\t\tassertEquals(\"test.txt\", list.get(3).getName());\n+\t\tassertEquals(\"test.xml\", list.get(4).getName());\n+\n+\t}\n+\n+\t/**\n+\t * Method: getNextIndex(String s, int start, boolean numericPart)\n+\t */\n+\t@Test\n+\tpublic void testGetNextIndex() throws Exception {\n+\t\tint i = FileNameComparator.getNextIndex(\"test.txt\", 0, true);\n+\t\tint j = FileNameComparator.getNextIndex(\"test.txt\", 0, false);\n+\t\tassertEquals(0, i);\n+\t\tassertEquals(8, j);\n+\t}\n+\n+\t/**\n+\t * Method: skipWhitespace(String s, int start)\n+\t */\n+\t@Test\n+\tpublic void testSkipWhitespace() throws Exception {\n+\t\tint i = FileNameComparator.skipWhitespace(\"   file.txt\", 0);\n+\t\tassertEquals(3, i);\n+\n+\t}\n+\n+\t/**\n+\t * Method: compareStringsNaturalOrder(String s0, String s1, boolean caseSensitive)\n+\t */\n+\t@Test\n+\tpublic void testCompareStringsNaturalOrder() throws Exception {\n+\t\tString s1 = \"file1.txt\";\n+\t\tString s2 = \"File2.txt\";\n+\t\tString s3 = \"file1.txt\";\n+\t\tString s4 = \"File2.txt\";\n+\t\tint a = FileNameComparator.compareStringsNaturalOrder(s1, s2, true);\n+\t\tint b = FileNameComparator.compareStringsNaturalOrder(s1, s3, true);\n+\t\tint c = FileNameComparator.compareStringsNaturalOrder(s2, s3, true);\n+\t\tint d = FileNameComparator.compareStringsNaturalOrder(s2, s4, true);\n+\t\tassertEquals(32, a);\n+\t\tassertEquals(0, b);\n+\t\tassertEquals(-32, c);\n+\t\tassertEquals(0, d);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0MzIyOQ==", "bodyText": "This is an edge case. In a filesystem it's not possible to have 2 files with the same name. Use test.txt twice theoretically cannot happen. Also don't test for an exact integer, but rather something equal, higher or lower then 0.", "url": "https://github.com/ibissource/iaf/pull/981#discussion_r481143229", "createdAt": "2020-09-01T13:37:17Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileNameComparatorTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package nl.nn.adapterframework.util;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+/**\n+ * FileNameComparator Tester.\n+ *\n+ * @author <Sina Sen>\n+ */\n+public class FileNameComparatorTest {\n+\n+\n+\t@Test\n+\tpublic void testComparator() throws Exception {\n+\t\tList<File> list = new ArrayList<>();\n+\t\tlist.add(new File(\"test.txt\"));list.add(new File( \"teSt.txt\"));\n+\t\tlist.add(new File(\"0123.py\")); list.add(new File(\"test.xml\")); list.add(new File(\"document.txt\"));\n+\t\tCollections.sort(list, new FileNameComparator());\n+\t\tassertEquals(\"0123.py\", list.get(0).getName());\n+\t\tassertEquals(\"document.txt\", list.get(1).getName());\n+\t\tassertEquals(\"teSt.txt\", list.get(2).getName());\n+\t\tassertEquals(\"test.txt\", list.get(3).getName());\n+\t\tassertEquals(\"test.xml\", list.get(4).getName());\n+\n+\t}\n+\n+\t/**\n+\t * Method: getNextIndex(String s, int start, boolean numericPart)\n+\t */\n+\t@Test\n+\tpublic void testGetNextIndex() throws Exception {\n+\t\tint i = FileNameComparator.getNextIndex(\"test.txt\", 0, true);\n+\t\tint j = FileNameComparator.getNextIndex(\"test.txt\", 0, false);\n+\t\tassertEquals(0, i);\n+\t\tassertEquals(8, j);\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "459bac46fe0b97ae3d1dbf1bdfa1c6627f5616a4"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "131233a74bfc5c5a5f1eebfc7727627375b15476", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/131233a74bfc5c5a5f1eebfc7727627375b15476", "committedDate": "2020-09-03T07:40:44Z", "message": "Edit pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7defce1a7751e1e0f23b38c9442ed1092b423600", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/7defce1a7751e1e0f23b38c9442ed1092b423600", "committedDate": "2020-09-03T07:46:21Z", "message": "Improve code quality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTU1MTcz", "url": "https://github.com/ibissource/iaf/pull/981#pullrequestreview-483555173", "createdAt": "2020-09-07T13:27:38Z", "commit": {"oid": "7defce1a7751e1e0f23b38c9442ed1092b423600"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyNzozOFrOHN_Xbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyNzozOFrOHN_Xbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMTcyNw==", "bodyText": "Please put each of these test on a single line, like:\nassertTrue(FileNameComparator.compareFilenames(f1, f2) < 0);\n\n(also for other similar cases)", "url": "https://github.com/ibissource/iaf/pull/981#discussion_r484431727", "createdAt": "2020-09-07T13:27:38Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileNameComparatorTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package nl.nn.adapterframework.util;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * FileNameComparator Tester.\n+ *\n+ * @author <Sina Sen>\n+ */\n+public class FileNameComparatorTest {\n+\n+\n+\t@Test\n+\tpublic void testComparator() throws Exception {\n+\t\tList<File> list = new ArrayList<>();\n+\t\tlist.add(new File(\"test.txt\"));list.add(new File( \"teSt.txt\"));\n+\t\tlist.add(new File(\"0123.py\")); list.add(new File(\"test.xml\")); list.add(new File(\"document.txt\"));\n+\t\tCollections.sort(list, new FileNameComparator());\n+\t\tassertEquals(\"0123.py\", list.get(0).getName());\n+\t\tassertEquals(\"document.txt\", list.get(1).getName());\n+\t\tassertEquals(\"teSt.txt\", list.get(2).getName());\n+\t\tassertEquals(\"test.txt\", list.get(3).getName());\n+\t\tassertEquals(\"test.xml\", list.get(4).getName());\n+\n+\t}\n+\n+\t/**\n+\t * Method: skipWhitespace(String s, int start)\n+\t */\n+\t@Test\n+\tpublic void testSkipWhitespace() throws Exception {\n+\t\tint i = FileNameComparator.skipWhitespace(\"   file.txt\", 0);\n+\t\tassertEquals(3, i);\n+\t}\n+\n+\t/**\n+\t * Method: compareStringsNaturalOrder(String s0, String s1, boolean caseSensitive)\n+\t */\n+\t@Test\n+\tpublic void testCompareStringsNaturalOrder() throws Exception {\n+\t\tString s1 = \"file1.txt\";\n+\t\tString s2 = \"File2.txt\";\n+\t\tString s4 = \"file2.txt\";\n+\t\tint a = FileNameComparator.compareStringsNaturalOrder(s1, s2, true);\n+\t\tint d = FileNameComparator.compareStringsNaturalOrder(s2, s4, false);\n+\t\tassertTrue(a > 0);\n+\t\tassertTrue(d == 0);\n+\t}\n+\n+\t/**\n+\t * Method: compareFilenames(File f0, File f1)\n+\t */\n+\t@Test\n+\tpublic void testCompareFilenames() throws Exception {\n+\t\tFile f1 = new File(\"first.txt\");\n+\t\tFile f2 = new File(\"second.txt\");\n+\t\tFile f3 = new File(\"first.txt\");\n+\t\tFile f4 = new File(\"FiRst.txt\");\n+\t\tint i = FileNameComparator.compareFilenames(f1, f2);\n+\t\tint j = FileNameComparator.compareFilenames(f1, f3);\n+\t\tint k = FileNameComparator.compareFilenames(f1, f4);\n+\t\tint l = FileNameComparator.compareFilenames(f2, f1);\n+\t\tassertTrue(i < 0);\n+\t\tassertTrue(j == 0);\n+\t\tassertTrue(k > 0);\n+\t\tassertTrue(l > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7defce1a7751e1e0f23b38c9442ed1092b423600"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTU2MTU3", "url": "https://github.com/ibissource/iaf/pull/981#pullrequestreview-483556157", "createdAt": "2020-09-07T13:29:05Z", "commit": {"oid": "7defce1a7751e1e0f23b38c9442ed1092b423600"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyOTowNVrOHN_aUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMzoyOTowNVrOHN_aUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQzMjQ2NQ==", "bodyText": "Can you also add test for file names that end with a number? ibis_xml.log.1  ibis_xml.log.2 etc\nthose should also be sorted properly.\nAlso the ibis-stats_2020W31.log files?", "url": "https://github.com/ibissource/iaf/pull/981#discussion_r484432465", "createdAt": "2020-09-07T13:29:05Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/util/FileNameComparatorTest.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package nl.nn.adapterframework.util;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * FileNameComparator Tester.\n+ *\n+ * @author <Sina Sen>\n+ */\n+public class FileNameComparatorTest {\n+\n+\n+\t@Test\n+\tpublic void testComparator() throws Exception {\n+\t\tList<File> list = new ArrayList<>();\n+\t\tlist.add(new File(\"test.txt\"));list.add(new File( \"teSt.txt\"));\n+\t\tlist.add(new File(\"0123.py\")); list.add(new File(\"test.xml\")); list.add(new File(\"document.txt\"));\n+\t\tCollections.sort(list, new FileNameComparator());\n+\t\tassertEquals(\"0123.py\", list.get(0).getName());\n+\t\tassertEquals(\"document.txt\", list.get(1).getName());\n+\t\tassertEquals(\"teSt.txt\", list.get(2).getName());\n+\t\tassertEquals(\"test.txt\", list.get(3).getName());\n+\t\tassertEquals(\"test.xml\", list.get(4).getName());\n+\n+\t}\n+\n+\t/**\n+\t * Method: skipWhitespace(String s, int start)\n+\t */\n+\t@Test\n+\tpublic void testSkipWhitespace() throws Exception {\n+\t\tint i = FileNameComparator.skipWhitespace(\"   file.txt\", 0);\n+\t\tassertEquals(3, i);\n+\t}\n+\n+\t/**\n+\t * Method: compareStringsNaturalOrder(String s0, String s1, boolean caseSensitive)\n+\t */\n+\t@Test\n+\tpublic void testCompareStringsNaturalOrder() throws Exception {\n+\t\tString s1 = \"file1.txt\";\n+\t\tString s2 = \"File2.txt\";\n+\t\tString s4 = \"file2.txt\";\n+\t\tint a = FileNameComparator.compareStringsNaturalOrder(s1, s2, true);\n+\t\tint d = FileNameComparator.compareStringsNaturalOrder(s2, s4, false);\n+\t\tassertTrue(a > 0);\n+\t\tassertTrue(d == 0);\n+\t}\n+\n+\t/**\n+\t * Method: compareFilenames(File f0, File f1)\n+\t */\n+\t@Test\n+\tpublic void testCompareFilenames() throws Exception {\n+\t\tFile f1 = new File(\"first.txt\");\n+\t\tFile f2 = new File(\"second.txt\");\n+\t\tFile f3 = new File(\"first.txt\");\n+\t\tFile f4 = new File(\"FiRst.txt\");\n+\t\tint i = FileNameComparator.compareFilenames(f1, f2);\n+\t\tint j = FileNameComparator.compareFilenames(f1, f3);\n+\t\tint k = FileNameComparator.compareFilenames(f1, f4);\n+\t\tint l = FileNameComparator.compareFilenames(f2, f1);\n+\t\tassertTrue(i < 0);\n+\t\tassertTrue(j == 0);\n+\t\tassertTrue(k > 0);\n+\t\tassertTrue(l > 0);\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7defce1a7751e1e0f23b38c9442ed1092b423600"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cf649573c6446cfa3e4e8ad1c9658a06a4f68f7", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/9cf649573c6446cfa3e4e8ad1c9658a06a4f68f7", "committedDate": "2020-09-10T10:50:53Z", "message": "Add new test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "056817ec9202d2c81c9f8557970bc64d41b33c16", "author": {"user": {"login": "sinasen2000", "name": "Sina Sen"}}, "url": "https://github.com/ibissource/iaf/commit/056817ec9202d2c81c9f8557970bc64d41b33c16", "committedDate": "2020-09-10T14:07:19Z", "message": "Finalize test class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4Mzk2NzAz", "url": "https://github.com/ibissource/iaf/pull/981#pullrequestreview-508396703", "createdAt": "2020-10-14T14:17:49Z", "commit": {"oid": "056817ec9202d2c81c9f8557970bc64d41b33c16"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MjExMTU0", "url": "https://github.com/ibissource/iaf/pull/981#pullrequestreview-529211154", "createdAt": "2020-11-12T15:36:16Z", "commit": {"oid": "056817ec9202d2c81c9f8557970bc64d41b33c16"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1166, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}