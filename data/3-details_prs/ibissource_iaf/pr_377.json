{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Nzc5ODAw", "number": 377, "title": "Add ims sender", "bodyText": "Refactors JMSFacade to create the Message superinterface instead of TextMessage for overriding in subclasses and adds an IMSSender that extends the MQSender.", "createdAt": "2020-01-22T10:34:57Z", "url": "https://github.com/ibissource/iaf/pull/377", "merged": true, "mergeCommit": {"oid": "95e3188322b0b0875eea47e9554f23e737e0cafc"}, "closed": true, "closedAt": "2020-04-01T08:28:37Z", "author": {"login": "ricardovh"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8yEQKgH2gAyMzY1Nzc5ODAwOjI3YzAwZjc4ZWFlYTRjMWUxOGZlNjMzN2U4MWUxZjgxYjI2ZTg0ZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTTZbkgFqTM4NTM2NjM5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "27c00f78eaea4c1e18fe6337e81e1f81b26e84d1", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/27c00f78eaea4c1e18fe6337e81e1f81b26e84d1", "committedDate": "2020-01-22T09:10:17Z", "message": "Change JMS createMessage-method to return Message superinterface instead of TextMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "181440cbc8c2aa194c7e0c013d21b3ccbabdd4c2", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/181440cbc8c2aa194c7e0c013d21b3ccbabdd4c2", "committedDate": "2020-01-22T09:20:06Z", "message": "Move setting the correlationID to separate method for easier overriding of the createMessage method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ed733dd6c096fd0a9982cebbaab80c362ae7320", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/4ed733dd6c096fd0a9982cebbaab80c362ae7320", "committedDate": "2020-01-22T10:08:34Z", "message": "Add IMS sender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db209b8b49fa1f6d30fa79e5fd9747fa1a09418b", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/db209b8b49fa1f6d30fa79e5fd9747fa1a09418b", "committedDate": "2020-01-22T10:27:38Z", "message": "Changed types for constants and made them all static and final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8a8e8256686e4d33c9552e5899a1a9956d440bc", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/d8a8e8256686e4d33c9552e5899a1a9956d440bc", "committedDate": "2020-01-22T10:28:01Z", "message": "Copyright notice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NjIwMDg3", "url": "https://github.com/ibissource/iaf/pull/377#pullrequestreview-356620087", "createdAt": "2020-02-11T12:33:59Z", "commit": {"oid": "d8a8e8256686e4d33c9552e5899a1a9956d440bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjozMzo1OVrOFoHR3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMjozMzo1OVrOFoHR3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzYwNjYyMA==", "bodyText": "Moet je hier niet ook de characterset uit JMS_IBM_Character_Set gebruiken?", "url": "https://github.com/ibissource/iaf/pull/377#discussion_r377606620", "createdAt": "2020-02-11T12:33:59Z", "author": {"login": "gvanbrakel"}, "path": "ibm/src/main/java/nl/nn/adapterframework/extensions/ibm/IMSSender.java", "diffHunk": "@@ -0,0 +1,209 @@\n+/*\n+   Copyright 2020 Integration Partners\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.ibm;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+\n+import javax.jms.BytesMessage;\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.Session;\n+import javax.naming.NamingException;\n+import javax.xml.transform.TransformerException;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.xml.sax.SAXException;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.soap.SoapWrapper;\n+\n+/**\n+ * JMS sender which will add an IMS header to the message and call the MQ specific logic.\n+ *\n+ * <p>See {@link JMSSender} for configuration</p>\n+ *\n+ * @author Ricardo van Holst\n+ */\n+\n+public class IMSSender extends MQSender {\n+\t// IMS Header length\n+\tprivate static final int IIH_HEADERSIZE = 88;\n+\t\n+\t// IMS Header fields\n+\tprivate static final String\t  IIH_HEADER_STRUCT_ID\t\t= \"IIH \";\t\t// MQIIH_STRUC_ID (4 pos) \n+\tprivate static final int\t  IIH_HEADER_VERSION\t\t= 1;\t\t\t// MQIIH_VERSION_1 (4 pos)\n+\tprivate static final int\t  IIH_HEADER_LENGTH\t\t\t= 84;\t\t\t// MQIIH_LENGTH_1 (4 pos)\n+\tprivate static final int\t  IIH_HEADER_ENCODING\t\t= 0;\t\t\t// MQ reserved (4 pos)\n+\tprivate static final int\t  IIH_HEADER_CODECHARSET\t= 0;\t\t\t// MQ reserved (4 pos)\n+\tprivate static final String   IIH_HEADER_FORMAT\t\t\t= \"MQIMSVS \";\t// MQFMT-IMS-VAR-STRING (8 pos)\n+\tprivate\tstatic final int      IIH_HEADER_FLAGS\t\t\t= 0;\t\t\t// MQIIH-NONE (4 pos)\n+\tprivate static final String   IIH_HEADER_LTERM_OR\t\t= \"        \";\t// (8 pos)\n+\tprivate static final String   IIH_HEADER_MFS_MAPNAME\t= \"MQIMSVS \";\t// (8 pos)\n+\tprivate static final String   IIH_HEADER_REPLY_FORMAT\t= \"MQIMSVS \";\t// (8 pos)\n+\tprivate\tstatic final String   IIH_HEADER_MFS_AUTH\t\t= \"        \";\t// Password (8 pos)\n+\tprivate static final byte[]   IIH_HEADER_TRAN_INSTANCE\t= new byte[16];\t// Only relevant for conversation (16 pos)\n+\tprivate static final String   IIH_HEADER_TRAN_STATE\t\t= \" \";\t\t\t// MQITS_NOT_IN_CONVERSATION (1 pos)\n+\tprivate static final String   IIH_HEADER_COMMIT_MODE\t= \"1\";\t\t\t// MQICM-SEND-THEN-COMMIT (1 pos)\n+\tprivate static final String   IIH_HEADER_SECURITY_SCOPE\t= \"C\";\t\t\t// MQISS-CHECK (1 pos)\n+\tprivate static final String   IIH_HEADER_RESERVED\t\t= \" \";\t\t\t// Reserved (1 pos)\n+\t\n+\t// MQ Fields\n+\tprivate static final String MQC_MQFMT_IMS\t= \"MQIMS   \";\t// (8 pos)\n+\tprivate static final int MQENC_NATIVE = 273;\t\t\t\t// copied from com.ibm.mq.MQC in com.ibm.mq.jar\n+\tprivate static final int CCSID_ISO_8859_1 = 819;\n+\t\n+\tprivate String transactionCode;\n+\t\n+\t/**\n+\t * The transaction code that should be added in the header, must be 8 characters\n+\t */\n+\t@IbisDoc({\"transaction code that should be added to the header, must be 8 characters\", \"\"})\n+\tpublic String getTransactionCode() {\n+\t\treturn transactionCode;\n+\t}\n+\tpublic void setTransactionCode(String transactionCode) {\n+\t\tthis.transactionCode = transactionCode;\n+\t}\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tif (StringUtils.isEmpty(getTransactionCode())) {\n+\t\t\tthrow new ConfigurationException(\"transactionCode must be specified\");\n+\t\t}\n+\t\tif (StringUtils.length(getTransactionCode()) != 8) {\n+\t\t\tthrow new ConfigurationException(\"transactionCode must be 8 positions, current code [\" + getTransactionCode() + \"] with length [\" + StringUtils.length(getTransactionCode()) + \"]\");\n+\t\t}\n+\t\tsuper.configure();\n+\t}\n+\t\n+\t@Override\n+\tpublic Message createMessage(Session session, String correlationID, String message)\n+\t\t\tthrows NamingException, JMSException {\n+\t\t\n+\t\tBytesMessage bytesMessage = null;\n+\t\tbytesMessage = session.createBytesMessage();\n+\t\t\n+\t\tsetMessageCorrelationID(bytesMessage, correlationID);\n+\t\t\n+\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\t\t\n+\t\ttry {\n+\t\t\tbos.write(IIH_HEADER_STRUCT_ID.getBytes());\n+\t\t\tbos.write(intToBytes(IIH_HEADER_VERSION));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_LENGTH));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_ENCODING));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_CODECHARSET));\n+\t\t\tbos.write(IIH_HEADER_FORMAT.getBytes());\n+\t\t\tbos.write(intToBytes(IIH_HEADER_FLAGS));\n+\t\t\tbos.write(IIH_HEADER_LTERM_OR.getBytes());\n+\t\t\tbos.write(IIH_HEADER_MFS_MAPNAME.getBytes());\n+\t\t\tbos.write(IIH_HEADER_REPLY_FORMAT.getBytes());\n+\t\t\tbos.write(IIH_HEADER_MFS_AUTH.getBytes());\n+\t\t\tbos.write(IIH_HEADER_TRAN_INSTANCE);\n+\t\t\tbos.write(IIH_HEADER_TRAN_STATE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_COMMIT_MODE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_SECURITY_SCOPE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_RESERVED.getBytes());\n+\t\t\t\n+\t\t\tbyte[] data = message.getBytes();\n+\t\t\t\n+\t\t\tbos.write(shortToBytes(data.length + 13)); //LL, +13 is for LL, ZZ and transaction code bytes\n+\t\t\tbos.write(new byte[2]); //ZZ\n+\t\t\tbos.write((transactionCode + \" \").getBytes());\n+\t\t\t\n+\t\t\tbos.write(data);\n+\t\t\t\n+\t\t\tbos.toByteArray();\n+\t\t} catch (IOException e) {\n+\t\t\t// Should never happen\n+\t\t\tthrow new RuntimeException(e);\n+\t\t}\n+\t\t\n+\t\tbytesMessage.writeBytes(bos.toByteArray());\n+\t\t\n+\t\t// Set Properties\n+\t\tbytesMessage.setIntProperty(\"JMS_IBM_Encoding\", MQENC_NATIVE);\n+\t\tbytesMessage.setIntProperty(\"JMS_IBM_Character_Set\", CCSID_ISO_8859_1);\t\n+\t\tbytesMessage.setStringProperty(\"JMS_IBM_Format\", MQC_MQFMT_IMS);\t\n+\n+\t\treturn bytesMessage;\n+\t}\n+\n+\t@Override\n+\tpublic String getStringFromRawMessage(Object rawMessage, Map<String,Object> context, boolean soap, String soapHeaderSessionKey, SoapWrapper soapWrapper) throws JMSException, SAXException, TransformerException, IOException {\n+\t\tBytesMessage message;\n+\t\ttry {\n+\t\t\tmessage = (BytesMessage)rawMessage;\n+\t\t} catch (ClassCastException e) {\n+\t\t\tlog.error(\"message received by listener on [\"+ getDestinationName()+ \"] was not of type BytesMessage, but [\"+rawMessage.getClass().getName()+\"]\", e);\n+\t\t\treturn null;\n+\t\t}\n+\t\tbyte[] headerBuffer = new byte[IIH_HEADERSIZE];\n+\t\tmessage.readBytes(headerBuffer);\n+\t\t\n+\t\t// Put header fields in the context\n+\t\tByteBuffer byteBuffer = ByteBuffer.wrap(headerBuffer);\n+\t\tcontext.put(\"MQIIH_StrucID\", byteToString(byteBuffer, 4));\n+\t\tcontext.put(\"MQIIH_Version\", byteBuffer.getInt());\n+\t\tcontext.put(\"MQIIH_StrucLength\", byteBuffer.getInt());\n+\t\tcontext.put(\"MQIIH_Encoding\", byteBuffer.getInt());\n+\t\tcontext.put(\"MQIIH_CodedCharSetId\", byteBuffer.getInt());\n+\t\tcontext.put(\"MQIIH_Format\", byteToString(byteBuffer, 8));\n+\t\tcontext.put(\"MQIIH_Flags\", byteBuffer.getInt());\n+\t\tcontext.put(\"MQIIH_LTermOverride\", byteToString(byteBuffer, 8));\n+\t\tcontext.put(\"MQIIH_MFSMapName\", byteToString(byteBuffer, 8));\n+\t\tcontext.put(\"MQIIH_ReplyToFormat\", byteToString(byteBuffer, 8));\n+\t\tcontext.put(\"MQIIH_Authenticator\", byteToString(byteBuffer, 8));\n+\t\tcontext.put(\"MQIIH_TranInstanceId\", byteToString(byteBuffer, 16));\n+\t\tcontext.put(\"MQIIH_TranState\", byteToString(byteBuffer, 1));\n+\t\tcontext.put(\"MQIIH_CommitMode\", byteToString(byteBuffer, 1));\n+\t\tcontext.put(\"MQIIH_SecurityScope\", byteToString(byteBuffer, 1));\n+\t\tcontext.put(\"MQIIH_Reserved\", byteToString(byteBuffer, 1));\n+\t\t\n+\t\tint readBufferLength = (int)message.getBodyLength() - IIH_HEADERSIZE; // Get the length of the message to extract\n+\t\t\n+\t\tbyte[] readBuffer = new byte[readBufferLength];\n+\t\tmessage.readBytes(readBuffer);\n+\t\t\n+\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\t\tbos.write(readBuffer);\n+\t\t\n+\t\treturn bos.toString(message.getStringProperty(\"JMS_IBM_Character_Set\"));\n+\t}\n+\t\n+\tprivate String byteToString(ByteBuffer byteBuffer, int size) {\n+\t\tbyte[] bytes = new byte[size];\n+\t\tbyteBuffer.get(bytes);\n+\t\t\n+\t\treturn new String(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a8e8256686e4d33c9552e5899a1a9956d440bc"}, "originalPosition": 195}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7767a892d31c7e334c36e9409e181442e2e8ca50", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/7767a892d31c7e334c36e9409e181442e2e8ca50", "committedDate": "2020-02-12T12:30:54Z", "message": "Use characterset in byteToString-method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDUxNDA3", "url": "https://github.com/ibissource/iaf/pull/377#pullrequestreview-357451407", "createdAt": "2020-02-12T13:31:55Z", "commit": {"oid": "7767a892d31c7e334c36e9409e181442e2e8ca50"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozMTo1NVrOFoumNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozMTo1NVrOFoumNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1MDgwNQ==", "bodyText": "Sorry, had het meteen moeten aanwijzen; Hier ook de character set gebruiken.\nEigenlijk altijd/overal wanneer er Strings naar bytes gaan, of andersom, dan moet je daarbij de characterset aangeven.\nHet beste maak je ook een test, waarin je in je message diacrieten (\u00e9\u00e8\u00ef) en het euro teken (\u20ac) gebruikt, Die moeten dan netjes heen en weer gaan.", "url": "https://github.com/ibissource/iaf/pull/377#discussion_r378250805", "createdAt": "2020-02-12T13:31:55Z", "author": {"login": "gvanbrakel"}, "path": "ibm/src/main/java/nl/nn/adapterframework/extensions/ibm/IMSSender.java", "diffHunk": "@@ -0,0 +1,210 @@\n+/*\n+   Copyright 2020 Integration Partners\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+*/\n+package nl.nn.adapterframework.extensions.ibm;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.UnsupportedEncodingException;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+\n+import javax.jms.BytesMessage;\n+import javax.jms.JMSException;\n+import javax.jms.Message;\n+import javax.jms.Session;\n+import javax.naming.NamingException;\n+import javax.xml.transform.TransformerException;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.xml.sax.SAXException;\n+\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.soap.SoapWrapper;\n+\n+/**\n+ * JMS sender which will add an IMS header to the message and call the MQ specific logic.\n+ *\n+ * <p>See {@link JMSSender} for configuration</p>\n+ *\n+ * @author Ricardo van Holst\n+ */\n+\n+public class IMSSender extends MQSender {\n+\t// IMS Header length\n+\tprivate static final int IIH_HEADERSIZE = 88;\n+\t\n+\t// IMS Header fields\n+\tprivate static final String\t  IIH_HEADER_STRUCT_ID\t\t= \"IIH \";\t\t// MQIIH_STRUC_ID (4 pos) \n+\tprivate static final int\t  IIH_HEADER_VERSION\t\t= 1;\t\t\t// MQIIH_VERSION_1 (4 pos)\n+\tprivate static final int\t  IIH_HEADER_LENGTH\t\t\t= 84;\t\t\t// MQIIH_LENGTH_1 (4 pos)\n+\tprivate static final int\t  IIH_HEADER_ENCODING\t\t= 0;\t\t\t// MQ reserved (4 pos)\n+\tprivate static final int\t  IIH_HEADER_CODECHARSET\t= 0;\t\t\t// MQ reserved (4 pos)\n+\tprivate static final String   IIH_HEADER_FORMAT\t\t\t= \"MQIMSVS \";\t// MQFMT-IMS-VAR-STRING (8 pos)\n+\tprivate\tstatic final int      IIH_HEADER_FLAGS\t\t\t= 0;\t\t\t// MQIIH-NONE (4 pos)\n+\tprivate static final String   IIH_HEADER_LTERM_OR\t\t= \"        \";\t// (8 pos)\n+\tprivate static final String   IIH_HEADER_MFS_MAPNAME\t= \"MQIMSVS \";\t// (8 pos)\n+\tprivate static final String   IIH_HEADER_REPLY_FORMAT\t= \"MQIMSVS \";\t// (8 pos)\n+\tprivate\tstatic final String   IIH_HEADER_MFS_AUTH\t\t= \"        \";\t// Password (8 pos)\n+\tprivate static final byte[]   IIH_HEADER_TRAN_INSTANCE\t= new byte[16];\t// Only relevant for conversation (16 pos)\n+\tprivate static final String   IIH_HEADER_TRAN_STATE\t\t= \" \";\t\t\t// MQITS_NOT_IN_CONVERSATION (1 pos)\n+\tprivate static final String   IIH_HEADER_COMMIT_MODE\t= \"1\";\t\t\t// MQICM-SEND-THEN-COMMIT (1 pos)\n+\tprivate static final String   IIH_HEADER_SECURITY_SCOPE\t= \"C\";\t\t\t// MQISS-CHECK (1 pos)\n+\tprivate static final String   IIH_HEADER_RESERVED\t\t= \" \";\t\t\t// Reserved (1 pos)\n+\t\n+\t// MQ Fields\n+\tprivate static final String MQC_MQFMT_IMS\t= \"MQIMS   \";\t// (8 pos)\n+\tprivate static final int MQENC_NATIVE = 273;\t\t\t\t// copied from com.ibm.mq.MQC in com.ibm.mq.jar\n+\tprivate static final int CCSID_ISO_8859_1 = 819;\n+\t\n+\tprivate String transactionCode;\n+\t\n+\t/**\n+\t * The transaction code that should be added in the header, must be 8 characters\n+\t */\n+\t@IbisDoc({\"transaction code that should be added to the header, must be 8 characters\", \"\"})\n+\tpublic String getTransactionCode() {\n+\t\treturn transactionCode;\n+\t}\n+\tpublic void setTransactionCode(String transactionCode) {\n+\t\tthis.transactionCode = transactionCode;\n+\t}\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\tif (StringUtils.isEmpty(getTransactionCode())) {\n+\t\t\tthrow new ConfigurationException(\"transactionCode must be specified\");\n+\t\t}\n+\t\tif (StringUtils.length(getTransactionCode()) != 8) {\n+\t\t\tthrow new ConfigurationException(\"transactionCode must be 8 positions, current code [\" + getTransactionCode() + \"] with length [\" + StringUtils.length(getTransactionCode()) + \"]\");\n+\t\t}\n+\t\tsuper.configure();\n+\t}\n+\t\n+\t@Override\n+\tpublic Message createMessage(Session session, String correlationID, String message)\n+\t\t\tthrows NamingException, JMSException {\n+\t\t\n+\t\tBytesMessage bytesMessage = null;\n+\t\tbytesMessage = session.createBytesMessage();\n+\t\t\n+\t\tsetMessageCorrelationID(bytesMessage, correlationID);\n+\t\t\n+\t\tByteArrayOutputStream bos = new ByteArrayOutputStream();\n+\t\t\n+\t\ttry {\n+\t\t\tbos.write(IIH_HEADER_STRUCT_ID.getBytes());\n+\t\t\tbos.write(intToBytes(IIH_HEADER_VERSION));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_LENGTH));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_ENCODING));\n+\t\t\tbos.write(intToBytes(IIH_HEADER_CODECHARSET));\n+\t\t\tbos.write(IIH_HEADER_FORMAT.getBytes());\n+\t\t\tbos.write(intToBytes(IIH_HEADER_FLAGS));\n+\t\t\tbos.write(IIH_HEADER_LTERM_OR.getBytes());\n+\t\t\tbos.write(IIH_HEADER_MFS_MAPNAME.getBytes());\n+\t\t\tbos.write(IIH_HEADER_REPLY_FORMAT.getBytes());\n+\t\t\tbos.write(IIH_HEADER_MFS_AUTH.getBytes());\n+\t\t\tbos.write(IIH_HEADER_TRAN_INSTANCE);\n+\t\t\tbos.write(IIH_HEADER_TRAN_STATE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_COMMIT_MODE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_SECURITY_SCOPE.getBytes());\n+\t\t\tbos.write(IIH_HEADER_RESERVED.getBytes());\n+\t\t\t\n+\t\t\tbyte[] data = message.getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7767a892d31c7e334c36e9409e181442e2e8ca50"}, "originalPosition": 126}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3934e27b6163df313c85e88f1f8437a162c407e5", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/3934e27b6163df313c85e88f1f8437a162c407e5", "committedDate": "2020-02-12T14:26:22Z", "message": "Also use character set when encoding the message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9396fa5692ee18200e3668c3975f1fb28b138e8", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/e9396fa5692ee18200e3668c3975f1fb28b138e8", "committedDate": "2020-02-19T15:19:16Z", "message": "Unittest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a53af447f78a6996eef1c7c33ec91010c638d1dc", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/a53af447f78a6996eef1c7c33ec91010c638d1dc", "committedDate": "2020-02-19T15:32:16Z", "message": "Merge branch 'master' of https://github.com/ibissource/iaf into AddIMSSender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dbd3e26d70fd12c03f51108fd0bcceafe9d1827", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/7dbd3e26d70fd12c03f51108fd0bcceafe9d1827", "committedDate": "2020-02-19T15:47:10Z", "message": "Add unittest dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e2c1d9636eca0ff6219a91de7a6a4c17ba5bed6", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/7e2c1d9636eca0ff6219a91de7a6a4c17ba5bed6", "committedDate": "2020-03-10T14:52:31Z", "message": "cosmetic changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDM3Mjkx", "url": "https://github.com/ibissource/iaf/pull/377#pullrequestreview-372037291", "createdAt": "2020-03-10T15:02:15Z", "commit": {"oid": "7e2c1d9636eca0ff6219a91de7a6a4c17ba5bed6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fa964f825073df0cadc91d4289882c9d0c82ae6", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/1fa964f825073df0cadc91d4289882c9d0c82ae6", "committedDate": "2020-03-13T12:35:10Z", "message": "Remove unused imports from tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7dd9b9cb753097e26476713c556218cba8ae878", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/b7dd9b9cb753097e26476713c556218cba8ae878", "committedDate": "2020-03-13T12:49:48Z", "message": "Moved log.properties for test to correct folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db6aba73ecd904cb53e12d3f9d0d48203ed9cf83", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/db6aba73ecd904cb53e12d3f9d0d48203ed9cf83", "committedDate": "2020-03-13T13:19:59Z", "message": "Merge branch 'master' into AddIMSSender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329ab116816e1d436177950ec185352fe11f440b", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/329ab116816e1d436177950ec185352fe11f440b", "committedDate": "2020-03-27T12:20:18Z", "message": "Update test to use SenderTestBase from core and core changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82819e00c846e0d3a2a16d6c904bb3013ee21d59", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/82819e00c846e0d3a2a16d6c904bb3013ee21d59", "committedDate": "2020-03-27T14:00:20Z", "message": "Merge branch 'master' of https://github.com/ibissource/iaf into AddIMSSender\n\n# Conflicts:\n#\tcore/src/main/java/nl/nn/adapterframework/jms/JMSFacade.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NzA2Nzk1", "url": "https://github.com/ibissource/iaf/pull/377#pullrequestreview-384706795", "createdAt": "2020-03-31T13:00:26Z", "commit": {"oid": "82819e00c846e0d3a2a16d6c904bb3013ee21d59"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzowMDoyNlrOF-UlAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzowMTozM1rOF-UnwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MzE4Ng==", "bodyText": "Zijn al deze changes puur tabs die omgezet zijn naar spaties?", "url": "https://github.com/ibissource/iaf/pull/377#discussion_r400893186", "createdAt": "2020-03-31T13:00:26Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jms/JMSFacade.java", "diffHunk": "@@ -81,38 +81,38 @@\n \tprivate boolean jmsTransacted = false;\n \tprivate String subscriberType = \"DURABLE\"; // DURABLE or TRANSIENT\n \n-\tprivate int ackMode = Session.AUTO_ACKNOWLEDGE;\n-\tprivate boolean persistent;\n-\tprivate long messageTimeToLive = 0;\n-\tprivate String destinationName;\n-\tprivate boolean useTopicFunctions = false;\n-\tprivate String authAlias;\n-\tprivate boolean lookupDestination = true;\n-\n-\tprivate String destinationType = \"QUEUE\"; // QUEUE or TOPIC\n-\n-\tprotected MessagingSource messagingSource;\n-\tprivate Destination destination;\n-\n-\tprivate Map<String, ConnectionFactory> proxiedConnectionFactories;\n-\tprivate Map<String, String> proxiedDestinationNames;\n-\n-\t// ---------------------------------------------------------------------\n-\t// Queue fields\n-\t// ---------------------------------------------------------------------\n-\tprivate String queueConnectionFactoryName;\n-\t// ---------------------------------------------------------------------\n-\t// Topic fields\n-\t// ---------------------------------------------------------------------\n-\tprivate String topicConnectionFactoryName;\n-\n-\t// the MessageSelector will provide filter functionality, as specified\n-\t// javax.jms.Message.\n-\tprivate String messageSelector = null;\n-\n-\tprivate boolean correlationIdToHex = false;\n-\tprivate String correlationIdToHexPrefix = \"ID:\";\n-\tprivate int correlationIdMaxLength = -1;\n+    private int ackMode = Session.AUTO_ACKNOWLEDGE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82819e00c846e0d3a2a16d6c904bb3013ee21d59"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5Mzg4OA==", "bodyText": "Copyright 2020 WeAreFrank!", "url": "https://github.com/ibissource/iaf/pull/377#discussion_r400893888", "createdAt": "2020-03-31T13:01:33Z", "author": {"login": "nielsm5"}, "path": "ibm/src/main/java/nl/nn/adapterframework/extensions/ibm/IMSSender.java", "diffHunk": "@@ -0,0 +1,214 @@\n+/*\n+   Copyright 2020 Integration Partners", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82819e00c846e0d3a2a16d6c904bb3013ee21d59"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4432fb41e8a6b41d864bf318e9cd4a0afe9647f5", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/4432fb41e8a6b41d864bf318e9cd4a0afe9647f5", "committedDate": "2020-03-31T14:12:04Z", "message": "Fix whitespaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86d911c7cc50dd1ea5559d7ece61e034010480d8", "author": {"user": {"login": "ricardovh", "name": null}}, "url": "https://github.com/ibissource/iaf/commit/86d911c7cc50dd1ea5559d7ece61e034010480d8", "committedDate": "2020-03-31T14:14:42Z", "message": "Copyright notice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzY2Mzkz", "url": "https://github.com/ibissource/iaf/pull/377#pullrequestreview-385366393", "createdAt": "2020-04-01T08:26:37Z", "commit": {"oid": "86d911c7cc50dd1ea5559d7ece61e034010480d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1441, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}