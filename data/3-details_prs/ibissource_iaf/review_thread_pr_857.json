{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NzIyMDIw", "number": 857, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0NjowMVrOEJBYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTowMzozN1rOEKC9_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk1MzYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ClassLoaderManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0NjowMVrOGpVjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0NjowMVrOGpVjOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5Nzg4Mw==", "bodyText": "derivable?\nbeter misschien: 'is not a', 'does not derive from' of 'does not implement'", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r445997883", "createdAt": "2020-06-26T06:46:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/configuration/ClassLoaderManager.java", "diffHunk": "@@ -241,14 +241,36 @@ public void reload(ClassLoader classLoader) throws ConfigurationException {\n \t\tif (classLoader == null)\n \t\t\tthrow new ConfigurationException(\"classloader cannot be null\");\n \n-\t\tif (classLoader instanceof ReloadAware) {\n-\t\t\t((ReloadAware)classLoader).reload();\n+\t\tif (classLoader instanceof IConfigurationClassLoader) {\n+\t\t\t((IConfigurationClassLoader) classLoader).reload();\n \t\t} else {\n-\t\t\tLOG.warn(\"classloader [\"+classLoader.toString()+\"] is not ReloadAware, ignoring reload\");\n+\t\t\tLOG.warn(\"classloader [\"+classLoader.toString()+\"] is not derivable from IConfigurationClassLoader, ignoring reload\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk1NjYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/configuration/ClassLoaderManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0NzoxM1rOGpVlDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0NzoxM1rOGpVlDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5ODM1MA==", "bodyText": "Hier ook 'derivable',  maar ook: moet dit wel een warning zijn?", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r445998350", "createdAt": "2020-06-26T06:47:13Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/configuration/ClassLoaderManager.java", "diffHunk": "@@ -241,14 +241,36 @@ public void reload(ClassLoader classLoader) throws ConfigurationException {\n \t\tif (classLoader == null)\n \t\t\tthrow new ConfigurationException(\"classloader cannot be null\");\n \n-\t\tif (classLoader instanceof ReloadAware) {\n-\t\t\t((ReloadAware)classLoader).reload();\n+\t\tif (classLoader instanceof IConfigurationClassLoader) {\n+\t\t\t((IConfigurationClassLoader) classLoader).reload();\n \t\t} else {\n-\t\t\tLOG.warn(\"classloader [\"+classLoader.toString()+\"] is not ReloadAware, ignoring reload\");\n+\t\t\tLOG.warn(\"classloader [\"+classLoader.toString()+\"] is not derivable from IConfigurationClassLoader, ignoring reload\");\n \t\t}\n \t}\n \n \tpublic boolean contains(String currentConfigurationName) {\n \t\treturn (classLoaders.containsKey(currentConfigurationName));\n \t}\n+\n+\t/**\n+\t * Removes all created ClassLoaders\n+\t */\n+\tpublic void shutdown() {\n+\t\tfor (Iterator<String> iterator = classLoaders.keySet().iterator(); iterator.hasNext();) {\n+\t\t\tString configurationClassLoader = iterator.next();\n+\t\t\tClassLoader classLoader = classLoaders.get(configurationClassLoader);\n+\t\t\tif(classLoader instanceof IConfigurationClassLoader) {\n+\t\t\t\t((IConfigurationClassLoader) classLoader).destroy();\n+\t\t\t} else {\n+\t\t\t\tLOG.warn(\"classloader [\"+ClassUtils.getClassLoaderName(classLoader)+\"] is not derivable from IConfigurationClassLoader, ignoring destroy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk2Mjg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/configuration/classloaders/ClassLoaderBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0OTo1M1rOGpVo9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo0OTo1M1rOGpVo9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk5OTM0OQ==", "bodyText": "Is reload() hetzelfde als destroy()? Is dat altijd zo", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r445999349", "createdAt": "2020-06-26T06:49:53Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/configuration/classloaders/ClassLoaderBase.java", "diffHunk": "@@ -253,26 +257,21 @@ public URL getResource(String name, boolean useParent) {\n \t}\n \n \t@Override\n-\tpublic String toString() {\n-\t\tif(StringUtils.isEmpty(getConfigurationName())) {\n-\t\t\treturn super.toString();\n-\t\t}\n+\tpublic void reload() throws ConfigurationException {\n+\t\tlog.debug(\"reloading classloader [\"+getConfigurationName()+\"]\");\n \n-\t\tif(logPrefix==null) {\n-\t\t\tString superString = super.toString();\n-\t\t\tlogPrefix = superString.substring(superString.lastIndexOf(\".\")+1)+\"[\"+getConfigurationName()+\"]\";\n-\t\t}\n-\t\treturn logPrefix;\n+\t\tAppConstants.removeInstance(this);\n \t}\n \n \t@Override\n-\tpublic void reload() throws ConfigurationException {\n-\t\tlog.debug(\"reloading configuration [\"+getConfigurationName()+\"]\");\n-\n-\t\tif (getParent() instanceof ReloadAware) {\n-\t\t\t((ReloadAware)getParent()).reload();\n-\t\t}\n+\tpublic void destroy() {\n+\t\tlog.debug(\"removing classloader [\"+this.toString()+\"]\");\n \n \t\tAppConstants.removeInstance(this);\n \t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk3MzQ4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/ClassUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo1NDoyNlrOGpVvbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwODozNjo0MlrOGqKSDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMTAwNg==", "bodyText": "Zou van mij ook getName() mogen heten.", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r446001006", "createdAt": "2020-06-26T06:54:26Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/ClassUtils.java", "diffHunk": "@@ -148,21 +149,36 @@ static public URL getResourceURL(ClassLoader classLoader, String resource, Strin\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\turl = new URL(Misc.replace(resource, \" \", \"%20\"));\n \t\t\t\t\t\t} catch(MalformedURLException e) {\n-\t\t\t\t\t\t\tlog.debug(\"Could not find resource [\"+resource+\"] in classloader [\"+classLoader+\"] and not as URL [\" + resource + \"]: \"+e.getMessage());\n+\t\t\t\t\t\t\tlog.debug(\"Could not find resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"] and not as URL [\" + resource + \"]: \"+e.getMessage());\n \t\t\t\t\t\t}\n-\t\t\t\t\t} else if(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+classLoader+\"], not allowed with protocol [\"+protocol+\"] allowedProtocols \"+protocols.toString());\n+\t\t\t\t\t} else if(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"], not allowed with protocol [\"+protocol+\"] allowedProtocols \"+protocols.toString());\n \t\t\t\t} else {\n-\t\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Could not find resource as URL [\" + resource + \"] in classloader [\"+classLoader+\"], with protocol [\"+protocol+\"], no allowedProtocols\");\n+\t\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Could not find resource as URL [\" + resource + \"] in classloader [\"+getClassLoaderName(classLoader)+\"], with protocol [\"+protocol+\"], no allowedProtocols\");\n \t\t\t\t}\n \t\t\t} else {\n-\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+classLoader+\"] and no protocol to try as URL\");\n+\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"] and no protocol to try as URL\");\n \t\t\t}\n \t\t}\n \n \t\treturn url;\n \t}\n \n- \tpublic static InputStream urlToStream(URL url, int timeoutMs) throws IOException {\n+\t/**\n+\t * If the classLoader is derivable of IConfigurationClassLoader return the className + configurationName, \n+\t * else return the className of the object. Don't return the package name to avoid cluttering the logs.\n+\t */\n+\tpublic static String getClassLoaderName(ClassLoader classLoader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg2MTgzNw==", "bodyText": "andere methode heet nameOf(...). Misschien is het mooi deze het zelfde te laten heten? Aan de andere kant doet de getName(...) methode wel net iets anders dan nameOf(...)", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r446861837", "createdAt": "2020-06-29T08:36:42Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/ClassUtils.java", "diffHunk": "@@ -148,21 +149,36 @@ static public URL getResourceURL(ClassLoader classLoader, String resource, Strin\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\turl = new URL(Misc.replace(resource, \" \", \"%20\"));\n \t\t\t\t\t\t} catch(MalformedURLException e) {\n-\t\t\t\t\t\t\tlog.debug(\"Could not find resource [\"+resource+\"] in classloader [\"+classLoader+\"] and not as URL [\" + resource + \"]: \"+e.getMessage());\n+\t\t\t\t\t\t\tlog.debug(\"Could not find resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"] and not as URL [\" + resource + \"]: \"+e.getMessage());\n \t\t\t\t\t\t}\n-\t\t\t\t\t} else if(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+classLoader+\"], not allowed with protocol [\"+protocol+\"] allowedProtocols \"+protocols.toString());\n+\t\t\t\t\t} else if(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"], not allowed with protocol [\"+protocol+\"] allowedProtocols \"+protocols.toString());\n \t\t\t\t} else {\n-\t\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Could not find resource as URL [\" + resource + \"] in classloader [\"+classLoader+\"], with protocol [\"+protocol+\"], no allowedProtocols\");\n+\t\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Could not find resource as URL [\" + resource + \"] in classloader [\"+getClassLoaderName(classLoader)+\"], with protocol [\"+protocol+\"], no allowedProtocols\");\n \t\t\t\t}\n \t\t\t} else {\n-\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+classLoader+\"] and no protocol to try as URL\");\n+\t\t\t\tif(log.isDebugEnabled()) log.debug(\"Cannot lookup resource [\"+resource+\"] in classloader [\"+getClassLoaderName(classLoader)+\"] and no protocol to try as URL\");\n \t\t\t}\n \t\t}\n \n \t\treturn url;\n \t}\n \n- \tpublic static InputStream urlToStream(URL url, int timeoutMs) throws IOException {\n+\t/**\n+\t * If the classLoader is derivable of IConfigurationClassLoader return the className + configurationName, \n+\t * else return the className of the object. Don't return the package name to avoid cluttering the logs.\n+\t */\n+\tpublic static String getClassLoaderName(ClassLoader classLoader) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMTAwNg=="}, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk4MDQ1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo1NzoyM1rOGpVzyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjo1NzoyM1rOGpVzyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMjEyMw==", "bodyText": "Eens. Moet 'null' zijn, d.w.z. als de Xslt niet via een Resource wordt aangeboden mag er geen External Entity Expansion zijn, en dus ook geen classpath nodig.", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r446002123", "createdAt": "2020-06-26T06:57:23Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -168,27 +164,33 @@ private TransformerPool(Source source, String sysId, int xsltVersion, Source con\n \t\t}\n \t\tthis.xsltVersion=xsltVersion;\n \t\ttFactory = XmlUtils.getTransformerFactory(xsltVersion);\n-\t\tclassLoaderURIResolver = new ClassLoaderURIResolver(classLoader);\n-\t\tif (log.isDebugEnabled()) log.debug(\"created Transformerpool for sysId [\"+sysId+\"] classLoader [\"+classLoader+\"]\");\n-\t\ttFactory.setURIResolver(classLoaderURIResolver);\n+\t\tif(classLoader != null) {\n+\t\t\tclassLoaderURIResolver = new ClassLoaderURIResolver(classLoader);\n+\t\t\tif (log.isDebugEnabled()) log.debug(\"created Transformerpool for sysId [\"+sysId+\"] classloader [\"+ClassUtils.getClassLoaderName(classLoader)+\"]\");\n+\t\t\ttFactory.setURIResolver(classLoaderURIResolver);\n+\t\t}\n \t\tinitTransformerPool(source, sysId);\n \n \t\t// check if a transformer can be initiated\n \t\tTransformer t = getTransformer();\n \t\t\n \t\treleaseTransformer(t);\n-\t}\t\n+\t}\n \n \n \tprivate TransformerPool(Resource resource, int xsltVersion) throws TransformerConfigurationException, IOException, SAXException {\n \t\tthis(resource.asSource(),resource.getSystemId(),xsltVersion,resource.asSource(), resource.getClassLoader());\n \t}\n-\t\n+\n+\t//TODO Fix this, Thread.currentThread().getContextClassLoader() should not be used and causes memory leaks upon reloading configurations!!!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk4ODIzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzowMDo0MVrOGpV4tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzowMDo0MVrOGpV4tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwMzM4MA==", "bodyText": "Dat je deze sluit betekent niet dat je ze allemaal sluit!", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r446003380", "createdAt": "2020-06-26T07:00:41Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -352,18 +362,23 @@ public static TransformerPool configureStyleSheetTransformer(String logPrefix, C\n \t\treturn result;\n \t}\n \n-\t\n \tpublic void open() throws Exception {\n \t}\n-\t\n+\n+\t/**\n+\t * Closing the Pool doesn't automatically mean all references remaining in the pool will be terminated.\n+\t * After closing, manually releases any associated resources in the pool\n+\t */\n \tpublic void close() {\n \t\ttry {\n-\t\t\tpool.clear();\t\t\t\n+\t\t\tpool.clear();\n+\t\t\tclearTransformerPools();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODk5ODA1OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/configuration/classloaders/ClassLoaderTestBase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzowNDoyMFrOGpV-eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNzowNDoyMFrOGpV-eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjAwNDg1OA==", "bodyText": "Werkt dit altijd? Of alleen voor IConfigurationClassLoaders? Dan class hernoemen.", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r446004858", "createdAt": "2020-06-26T07:04:20Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/configuration/classloaders/ClassLoaderTestBase.java", "diffHunk": "@@ -254,4 +254,12 @@ public void configurationFileCustomLocationAndBasePath() throws Exception {\n \t\tassertNotNull(\"config file [\"+configFile+\"] cannot be found\", configURL);\n \t\tassertTrue(configURL.getPath().endsWith(file));\n \t}\n+\n+\t@Test\n+\tpublic void toStringTest() throws Exception {\n+\t\tString logPrefix = classLoader.getClass().getSimpleName() + \"@\" + Integer.toHexString(classLoader.hashCode());\n+\n+\t\t//Should match DatabaseClassLoader@1234abcd[<CONFIG-NAME>]\n+\t\tassertEquals(logPrefix+\"[\"+getConfigurationName()+\"]\", classLoader.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a6953c2996f2c872270e0baff3c9f77b8ec6b24"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTY5ODU0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTowMzozN1rOGq3RIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMTowMzozN1rOGq3RIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzU5ODg4MQ==", "bodyText": "Hier moet je dan in de else tak een NonResolvingUriResolver zetten.", "url": "https://github.com/ibissource/iaf/pull/857#discussion_r447598881", "createdAt": "2020-06-30T11:03:37Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/TransformerPool.java", "diffHunk": "@@ -168,27 +164,33 @@ private TransformerPool(Source source, String sysId, int xsltVersion, Source con\n \t\t}\n \t\tthis.xsltVersion=xsltVersion;\n \t\ttFactory = XmlUtils.getTransformerFactory(xsltVersion);\n-\t\tclassLoaderURIResolver = new ClassLoaderURIResolver(classLoader);\n-\t\tif (log.isDebugEnabled()) log.debug(\"created Transformerpool for sysId [\"+sysId+\"] classLoader [\"+classLoader+\"]\");\n-\t\ttFactory.setURIResolver(classLoaderURIResolver);\n+\t\tif(classLoader != null) {\n+\t\t\tclassLoaderURIResolver = new ClassLoaderURIResolver(classLoader);\n+\t\t\tif (log.isDebugEnabled()) log.debug(\"created Transformerpool for sysId [\"+sysId+\"] classloader [\"+ClassUtils.getName(classLoader)+\"]\");\n+\t\t\ttFactory.setURIResolver(classLoaderURIResolver);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e4c8374219a04bfef3a53c3f96334c807263157"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 394, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}