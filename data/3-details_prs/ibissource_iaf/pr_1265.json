{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNTg0MTYx", "number": 1265, "title": "Simplify receiver", "bodyText": "", "createdAt": "2020-11-16T10:57:10Z", "url": "https://github.com/ibissource/iaf/pull/1265", "merged": true, "mergeCommit": {"oid": "818d9035d3bf8634831a921cb5d3c5a60fc88939"}, "closed": true, "closedAt": "2020-11-18T14:37:06Z", "author": {"login": "gvanbrakel"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddBa7_AH2gAyNTIxNTg0MTYxOjg5NmUxZjI0YjAwNjE1YmU5MzMzMmY0NzM5YjhjZjNkMmJlYTAwNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddtiHlAFqTUzMzQwNzI0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "896e1f24b00615be93332f4739b8cf3d2bea0046", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/896e1f24b00615be93332f4739b8cf3d2bea0046", "committedDate": "2020-11-16T09:20:22Z", "message": "Rename ReceiverBase to Receiver, and deprecate GenericReceiver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42bc251c0c26784844a055dc1ec30c8e09ecd7d8", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/42bc251c0c26784844a055dc1ec30c8e09ecd7d8", "committedDate": "2020-11-16T10:51:43Z", "message": "updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db18ccce3362bdc3e6ce56e423161e9f9f844e2", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/6db18ccce3362bdc3e6ce56e423161e9f9f844e2", "committedDate": "2020-11-16T11:30:49Z", "message": "Use Receiver in iterator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce49685c9c33d131ea1a3e4a4a3a94a5140786e8", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/ce49685c9c33d131ea1a3e4a4a3a94a5140786e8", "committedDate": "2020-11-16T15:13:01Z", "message": "Fix issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9861b9ee9c2523151f29d979ee8e7996169d3c63", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/9861b9ee9c2523151f29d979ee8e7996169d3c63", "committedDate": "2020-11-16T16:02:41Z", "message": "remove IReceiver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abca1e07258c29f02ce0efd6c0c88d77bc4c77d4", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/abca1e07258c29f02ce0efd6c0c88d77bc4c77d4", "committedDate": "2020-11-16T16:25:00Z", "message": "remove use of GenericReceiver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bb52c9e0a56d3a77838e46092bab7214269bb42", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/7bb52c9e0a56d3a77838e46092bab7214269bb42", "committedDate": "2020-11-17T07:57:57Z", "message": "make getReceivers Iterable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dcbaebc41dcaf1fcd4f4504c362400b22b2ff63", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/2dcbaebc41dcaf1fcd4f4504c362400b22b2ff63", "committedDate": "2020-11-17T08:53:23Z", "message": "Fix GenericMessageSendingPipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b22f74270aedfe5ffd54772e3a92f9ea4f075f6d", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/b22f74270aedfe5ffd54772e3a92f9ea4f075f6d", "committedDate": "2020-11-17T11:12:15Z", "message": "StatisticsIterators as Iterable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d", "committedDate": "2020-11-17T12:49:05Z", "message": "Fix bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTYzNDY0", "url": "https://github.com/ibissource/iaf/pull/1265#pullrequestreview-532563464", "createdAt": "2020-11-17T16:37:59Z", "commit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjozNzo1OVrOH0-Rug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo1NDo1NFrOH0_GFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwODM0Ng==", "bodyText": "Deze cast hoeft niet?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525308346", "createdAt": "2020-11-17T16:37:59Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/pipes/GenericMessageSendingPipe.java", "diffHunk": "@@ -60,12 +59,9 @@ public void setListener(ICorrelatedPullingListener listener) {\n \t\tsuper.setListener(listener);\n \t}\n \n-\tpublic void setSender(Object sender) {\n-\t\tif (sender instanceof ISender) {\n-\t\t\tsuper.setSender((ISender)sender);\n-\t\t} else {\n-\t\t\tthrow new IllegalArgumentException(\"sender [\"+ClassUtils.nameOf(sender)+\"] must implment interface ISender\");\n-\t\t}\n+\t@Override\n+\tpublic void setSender(ISender sender) {\n+\t\tsuper.setSender((ISender)sender);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxMjMyNw==", "bodyText": "Deze cast hoeft niet?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525312327", "createdAt": "2020-11-17T16:42:23Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/unmanaged/AbstractJmsConfigurator.java", "diffHunk": "@@ -50,7 +50,7 @@ public void configureEndpointConnection(IPortConnectedListener<Message> listener\n \t\tsetListener(listener);\n \t\tsetConnectionFactory(connectionFactory);\n \t\tsetDestination(destination);\n-\t\tthis.receiver = (ReceiverBase<Message>)getListener().getReceiver();\n+\t\tthis.receiver = (Receiver<Message>)getListener().getReceiver();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxMzE3Nw==", "bodyText": "Casts mogen weg", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525313177", "createdAt": "2020-11-17T16:43:31Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/action/Browse.java", "diffHunk": "@@ -171,15 +171,15 @@ public ActionForward executeSub(ActionMapping mapping, ActionForm form, HttpServ\n \t\t\t\tMessageSendingPipe pipe=(MessageSendingPipe)adapter.getPipeLine().getPipe(pipeName);\n \t\t\t\tmb=pipe.getMessageLog();\n \t\t\t} else {\n-\t\t\t\tReceiverBase receiver = (ReceiverBase) adapter.getReceiverByName(receiverName);\n+\t\t\t\tReceiver receiver = (Receiver) adapter.getReceiverByName(receiverName);\n \t\t\t\tmb = receiver.getMessageLogBrowser();\n \t\t\t}\n \t\t\t// actions 'deletemessage' and 'resendmessage' not allowed for messageLog\t\n \t\t\tif (\"export selected\".equalsIgnoreCase(action)) {\n \t\t\t\tperformAction(adapter, null, action, mb, messageId, selected, request, response);\n \t\t\t}\n \t\t} else {\n-\t\t\tReceiverBase receiver = (ReceiverBase) adapter.getReceiverByName(receiverName);\n+\t\t\tReceiver receiver = (Receiver) adapter.getReceiverByName(receiverName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxNjY4OA==", "bodyText": "mag weg?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525316688", "createdAt": "2020-11-17T16:48:09Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/api/ShowConfigurationStatus.java", "diffHunk": "@@ -608,157 +605,150 @@ public Response getAdapterFlow(@PathParam(\"name\") String adapterName, @QueryPara\n \tprivate ArrayList<Object> mapAdapterReceivers(Adapter adapter, boolean showPendingMsgCount) {\n \t\tArrayList<Object> receivers = new ArrayList<Object>();\n \n-\t\tIterator<?> recIt=adapter.getReceiverIterator();\n-\t\tif (recIt.hasNext()){\n-\t\t\twhile (recIt.hasNext()){\n-\t\t\t\tIReceiver receiver=(IReceiver) recIt.next();\n-\t\t\t\tMap<String, Object> receiverInfo = new HashMap<String, Object>();\n-\n-\t\t\t\tRunStateEnum receiverRunState = receiver.getRunState();\n-\n-\t\t\t\treceiverInfo.put(\"started\", receiverRunState.equals(RunStateEnum.STARTED));\n-\t\t\t\treceiverInfo.put(\"state\", receiverRunState.toString().toLowerCase().replace(\"*\", \"\"));\n-\t\t\t\t\n-\t\t\t\treceiverInfo.put(\"name\", receiver.getName());\n-\t\t\t\treceiverInfo.put(\"class\", ClassUtils.nameOf(receiver));\n-\t\t\t\tMap<String, Object> messages = new HashMap<String, Object>(3);\n-\t\t\t\tmessages.put(\"received\", receiver.getMessagesReceived());\n-\t\t\t\tmessages.put(\"retried\", receiver.getMessagesRetried());\n-\t\t\t\tmessages.put(\"rejected\", receiver.getMessagesRejected());\n-\t\t\t\treceiverInfo.put(\"messages\", messages);\n-\t\t\t\tISender sender=null;\n-\t\t\t\tif (receiver instanceof ReceiverBase ) {\n-\t\t\t\t\tReceiverBase rb = (ReceiverBase) receiver;\n-\t\t\t\t\tMap<String, Object> listenerInfo = new HashMap<String, Object>();\n-\t\t\t\t\tIListener<?> listener=rb.getListener();\n-\t\t\t\t\tlistenerInfo.put(\"name\", listener.getName());\n-\t\t\t\t\tlistenerInfo.put(\"class\", ClassUtils.nameOf(listener));\n-\t\t\t\t\tif (listener instanceof HasPhysicalDestination) {\n-\t\t\t\t\t\tString pd = ((HasPhysicalDestination)rb.getListener()).getPhysicalDestinationName();\n-\t\t\t\t\t\tlistenerInfo.put(\"destination\", pd);\n-\t\t\t\t\t}\n-\t\t\t\t\tif (listener instanceof HasSender) {\n-\t\t\t\t\t\tsender = ((HasSender)listener).getSender();\n-\t\t\t\t\t}\n-\t\t\t\t\t//receiverInfo.put(\"hasInprocessStorage\", \"\"+(rb.getInProcessStorage()!=null));\n-\t\t\t\t\tIMessageBrowser ts = rb.getErrorStorageBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasErrorStorage\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountErrorStore) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"error\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tts=rb.getMessageLogBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasMessageLog\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountMessageLog) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in messageLog\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"error\");\n-\t\t\t\t\t\t}\n+\t\tfor (Receiver receiver: adapter.getReceivers()) {\n+\t\t\tMap<String, Object> receiverInfo = new HashMap<String, Object>();\n+\n+\t\t\tRunStateEnum receiverRunState = receiver.getRunState();\n+\n+\t\t\treceiverInfo.put(\"started\", receiverRunState.equals(RunStateEnum.STARTED));\n+\t\t\treceiverInfo.put(\"state\", receiverRunState.toString().toLowerCase().replace(\"*\", \"\"));\n+\t\t\t\n+\t\t\treceiverInfo.put(\"name\", receiver.getName());\n+\t\t\treceiverInfo.put(\"class\", ClassUtils.nameOf(receiver));\n+\t\t\tMap<String, Object> messages = new HashMap<String, Object>(3);\n+\t\t\tmessages.put(\"received\", receiver.getMessagesReceived());\n+\t\t\tmessages.put(\"retried\", receiver.getMessagesRetried());\n+\t\t\tmessages.put(\"rejected\", receiver.getMessagesRejected());\n+\t\t\treceiverInfo.put(\"messages\", messages);\n+\t\t\tISender sender=null;\n+\t\t\tMap<String, Object> listenerInfo = new HashMap<String, Object>();\n+\t\t\tIListener<?> listener=receiver.getListener();\n+\t\t\tlistenerInfo.put(\"name\", listener.getName());\n+\t\t\tlistenerInfo.put(\"class\", ClassUtils.nameOf(listener));\n+\t\t\tif (listener instanceof HasPhysicalDestination) {\n+\t\t\t\tString pd = ((HasPhysicalDestination)receiver.getListener()).getPhysicalDestinationName();\n+\t\t\t\tlistenerInfo.put(\"destination\", pd);\n+\t\t\t}\n+\t\t\tif (listener instanceof HasSender) {\n+\t\t\t\tsender = ((HasSender)listener).getSender();\n+\t\t\t}\n+\t\t\t//receiverInfo.put(\"hasInprocessStorage\", \"\"+(rb.getInProcessStorage()!=null));\n+\t\t\tIMessageBrowser ts = receiver.getErrorStorageBrowser();\n+\t\t\treceiverInfo.put(\"hasErrorStorage\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountErrorStore) {\n+\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tts=rb.getInProcessBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasInProcessLog\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountMessageLog) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in inProcessLog\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"error\");\n-\t\t\t\t\t\t}\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore\", e);\n+\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tts=receiver.getMessageLogBrowser();\n+\t\t\treceiverInfo.put(\"hasMessageLog\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountMessageLog) {\n+\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tboolean isRestListener = (listener instanceof RestListener);\n-\t\t\t\t\tlistenerInfo.put(\"isRestListener\", isRestListener);\n-\t\t\t\t\tif (isRestListener) {\n-\t\t\t\t\t\tRestListener rl = (RestListener) listener;\n-\t\t\t\t\t\tlistenerInfo.put(\"restUriPattern\", rl.getRestUriPattern());\n-\t\t\t\t\t\tlistenerInfo.put(\"isView\", (rl.isView()==null?false:rl.isView()));\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in messageLog\", e);\n+\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tts=receiver.getInProcessBrowser();\n+\t\t\treceiverInfo.put(\"hasInProcessLog\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountMessageLog) {\n+\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tif ((listener instanceof JmsListenerBase) && showPendingMsgCount) {\n-\t\t\t\t\t\tJmsListenerBase jlb = (JmsListenerBase) listener;\n-\t\t\t\t\t\tJmsBrowser<javax.jms.Message> jmsBrowser;\n-\t\t\t\t\t\tif (StringUtils.isEmpty(jlb.getMessageSelector())) {\n-\t\t\t\t\t\t\tjmsBrowser = new JmsBrowser<>();\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tjmsBrowser = new JmsBrowser<>(jlb.getMessageSelector());\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tjmsBrowser.setName(\"MessageBrowser_\" + jlb.getName());\n-\t\t\t\t\t\tjmsBrowser.setJmsRealm(jlb.getJmsRealmName());\n-\t\t\t\t\t\tjmsBrowser.setDestinationName(jlb.getDestinationName());\n-\t\t\t\t\t\tjmsBrowser.setDestinationType(jlb.getDestinationType());\n-\t\t\t\t\t\tString numMsgs;\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tint messageCount = jmsBrowser.getMessageCount();\n-\t\t\t\t\t\t\tnumMsgs = String.valueOf(messageCount);\n-\t\t\t\t\t\t} catch (Throwable t) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore [\"+jmsBrowser.getName()+\"]\", t);\n-\t\t\t\t\t\t\tnumMsgs = \"?\";\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\treceiverInfo.put(\"pendingMessagesCount\", numMsgs);\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in inProcessLog\", e);\n+\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tboolean isRestListener = (listener instanceof RestListener);\n+\t\t\tlistenerInfo.put(\"isRestListener\", isRestListener);\n+\t\t\tif (isRestListener) {\n+\t\t\t\tRestListener rl = (RestListener) listener;\n+\t\t\t\tlistenerInfo.put(\"restUriPattern\", rl.getRestUriPattern());\n+\t\t\t\tlistenerInfo.put(\"isView\", (rl.isView()==null?false:rl.isView()));\n+\t\t\t}\n+\t\t\tif ((listener instanceof JmsListenerBase) && showPendingMsgCount) {\n+\t\t\t\tJmsListenerBase jlb = (JmsListenerBase) listener;\n+\t\t\t\tJmsBrowser<javax.jms.Message> jmsBrowser;\n+\t\t\t\tif (StringUtils.isEmpty(jlb.getMessageSelector())) {\n+\t\t\t\t\tjmsBrowser = new JmsBrowser<>();\n+\t\t\t\t} else {\n+\t\t\t\t\tjmsBrowser = new JmsBrowser<>(jlb.getMessageSelector());\n+\t\t\t\t}\n+\t\t\t\tjmsBrowser.setName(\"MessageBrowser_\" + jlb.getName());\n+\t\t\t\tjmsBrowser.setJmsRealm(jlb.getJmsRealmName());\n+\t\t\t\tjmsBrowser.setDestinationName(jlb.getDestinationName());\n+\t\t\t\tjmsBrowser.setDestinationType(jlb.getDestinationType());\n+\t\t\t\tString numMsgs;\n+\t\t\t\ttry {\n+\t\t\t\t\tint messageCount = jmsBrowser.getMessageCount();\n+\t\t\t\t\tnumMsgs = String.valueOf(messageCount);\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore [\"+jmsBrowser.getName()+\"]\", t);\n+\t\t\t\t\tnumMsgs = \"?\";\n+\t\t\t\t}\n+\t\t\t\treceiverInfo.put(\"pendingMessagesCount\", numMsgs);\n+\t\t\t}\n+\t\t\tboolean isEsbJmsFFListener = false;\n+\t\t\tif (listener instanceof EsbJmsListener) {\n+\t\t\t\tEsbJmsListener ejl = (EsbJmsListener) listener;\n+\t\t\t\tif(ejl.getMessageProtocol() != null) {\n+\t\t\t\t\tif (ejl.getMessageProtocol().equalsIgnoreCase(\"FF\")) {\n+\t\t\t\t\t\tisEsbJmsFFListener = true;\n \t\t\t\t\t}\n-\t\t\t\t\tboolean isEsbJmsFFListener = false;\n-\t\t\t\t\tif (listener instanceof EsbJmsListener) {\n-\t\t\t\t\t\tEsbJmsListener ejl = (EsbJmsListener) listener;\n-\t\t\t\t\t\tif(ejl.getMessageProtocol() != null) {\n-\t\t\t\t\t\t\tif (ejl.getMessageProtocol().equalsIgnoreCase(\"FF\")) {\n-\t\t\t\t\t\t\t\tisEsbJmsFFListener = true;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif(showPendingMsgCount) {\n-\t\t\t\t\t\t\t\tString esbNumMsgs = EsbUtils.getQueueMessageCount(ejl);\n-\t\t\t\t\t\t\t\tif (esbNumMsgs == null) {\n-\t\t\t\t\t\t\t\t\tesbNumMsgs = \"?\";\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"esbPendingMessagesCount\", esbNumMsgs);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\tif(showPendingMsgCount) {\n+\t\t\t\t\t\tString esbNumMsgs = EsbUtils.getQueueMessageCount(ejl);\n+\t\t\t\t\t\tif (esbNumMsgs == null) {\n+\t\t\t\t\t\t\tesbNumMsgs = \"?\";\n \t\t\t\t\t\t}\n+\t\t\t\t\t\treceiverInfo.put(\"esbPendingMessagesCount\", esbNumMsgs);\n \t\t\t\t\t}\n-\t\t\t\t\treceiverInfo.put(\"isEsbJmsFFListener\", isEsbJmsFFListener);\n-\n-\t\t\t\t\treceiverInfo.put(\"listener\", listenerInfo);\n \t\t\t\t}\n+\t\t\t}\n+\t\t\treceiverInfo.put(\"isEsbJmsFFListener\", isEsbJmsFFListener);\n \n-\t\t\t\tif (receiver instanceof HasSender) {\n-\t\t\t\t\tISender rsender = ((HasSender) receiver).getSender();\n-\t\t\t\t\tif (rsender!=null) { // this sender has preference, but avoid overwriting listeners sender with null\n-\t\t\t\t\t\tsender=rsender; \n-\t\t\t\t\t}\n+\t\t\treceiverInfo.put(\"listener\", listenerInfo);\n+\n+\t\t\tif (receiver instanceof HasSender) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 282}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxNjc2OQ==", "bodyText": "Mag weg?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525316769", "createdAt": "2020-11-17T16:48:17Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/api/ShowConfigurationStatus.java", "diffHunk": "@@ -608,157 +605,150 @@ public Response getAdapterFlow(@PathParam(\"name\") String adapterName, @QueryPara\n \tprivate ArrayList<Object> mapAdapterReceivers(Adapter adapter, boolean showPendingMsgCount) {\n \t\tArrayList<Object> receivers = new ArrayList<Object>();\n \n-\t\tIterator<?> recIt=adapter.getReceiverIterator();\n-\t\tif (recIt.hasNext()){\n-\t\t\twhile (recIt.hasNext()){\n-\t\t\t\tIReceiver receiver=(IReceiver) recIt.next();\n-\t\t\t\tMap<String, Object> receiverInfo = new HashMap<String, Object>();\n-\n-\t\t\t\tRunStateEnum receiverRunState = receiver.getRunState();\n-\n-\t\t\t\treceiverInfo.put(\"started\", receiverRunState.equals(RunStateEnum.STARTED));\n-\t\t\t\treceiverInfo.put(\"state\", receiverRunState.toString().toLowerCase().replace(\"*\", \"\"));\n-\t\t\t\t\n-\t\t\t\treceiverInfo.put(\"name\", receiver.getName());\n-\t\t\t\treceiverInfo.put(\"class\", ClassUtils.nameOf(receiver));\n-\t\t\t\tMap<String, Object> messages = new HashMap<String, Object>(3);\n-\t\t\t\tmessages.put(\"received\", receiver.getMessagesReceived());\n-\t\t\t\tmessages.put(\"retried\", receiver.getMessagesRetried());\n-\t\t\t\tmessages.put(\"rejected\", receiver.getMessagesRejected());\n-\t\t\t\treceiverInfo.put(\"messages\", messages);\n-\t\t\t\tISender sender=null;\n-\t\t\t\tif (receiver instanceof ReceiverBase ) {\n-\t\t\t\t\tReceiverBase rb = (ReceiverBase) receiver;\n-\t\t\t\t\tMap<String, Object> listenerInfo = new HashMap<String, Object>();\n-\t\t\t\t\tIListener<?> listener=rb.getListener();\n-\t\t\t\t\tlistenerInfo.put(\"name\", listener.getName());\n-\t\t\t\t\tlistenerInfo.put(\"class\", ClassUtils.nameOf(listener));\n-\t\t\t\t\tif (listener instanceof HasPhysicalDestination) {\n-\t\t\t\t\t\tString pd = ((HasPhysicalDestination)rb.getListener()).getPhysicalDestinationName();\n-\t\t\t\t\t\tlistenerInfo.put(\"destination\", pd);\n-\t\t\t\t\t}\n-\t\t\t\t\tif (listener instanceof HasSender) {\n-\t\t\t\t\t\tsender = ((HasSender)listener).getSender();\n-\t\t\t\t\t}\n-\t\t\t\t\t//receiverInfo.put(\"hasInprocessStorage\", \"\"+(rb.getInProcessStorage()!=null));\n-\t\t\t\t\tIMessageBrowser ts = rb.getErrorStorageBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasErrorStorage\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountErrorStore) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"error\");\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t\tts=rb.getMessageLogBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasMessageLog\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountMessageLog) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in messageLog\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"error\");\n-\t\t\t\t\t\t}\n+\t\tfor (Receiver receiver: adapter.getReceivers()) {\n+\t\t\tMap<String, Object> receiverInfo = new HashMap<String, Object>();\n+\n+\t\t\tRunStateEnum receiverRunState = receiver.getRunState();\n+\n+\t\t\treceiverInfo.put(\"started\", receiverRunState.equals(RunStateEnum.STARTED));\n+\t\t\treceiverInfo.put(\"state\", receiverRunState.toString().toLowerCase().replace(\"*\", \"\"));\n+\t\t\t\n+\t\t\treceiverInfo.put(\"name\", receiver.getName());\n+\t\t\treceiverInfo.put(\"class\", ClassUtils.nameOf(receiver));\n+\t\t\tMap<String, Object> messages = new HashMap<String, Object>(3);\n+\t\t\tmessages.put(\"received\", receiver.getMessagesReceived());\n+\t\t\tmessages.put(\"retried\", receiver.getMessagesRetried());\n+\t\t\tmessages.put(\"rejected\", receiver.getMessagesRejected());\n+\t\t\treceiverInfo.put(\"messages\", messages);\n+\t\t\tISender sender=null;\n+\t\t\tMap<String, Object> listenerInfo = new HashMap<String, Object>();\n+\t\t\tIListener<?> listener=receiver.getListener();\n+\t\t\tlistenerInfo.put(\"name\", listener.getName());\n+\t\t\tlistenerInfo.put(\"class\", ClassUtils.nameOf(listener));\n+\t\t\tif (listener instanceof HasPhysicalDestination) {\n+\t\t\t\tString pd = ((HasPhysicalDestination)receiver.getListener()).getPhysicalDestinationName();\n+\t\t\t\tlistenerInfo.put(\"destination\", pd);\n+\t\t\t}\n+\t\t\tif (listener instanceof HasSender) {\n+\t\t\t\tsender = ((HasSender)listener).getSender();\n+\t\t\t}\n+\t\t\t//receiverInfo.put(\"hasInprocessStorage\", \"\"+(rb.getInProcessStorage()!=null));\n+\t\t\tIMessageBrowser ts = receiver.getErrorStorageBrowser();\n+\t\t\treceiverInfo.put(\"hasErrorStorage\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountErrorStore) {\n+\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tts=rb.getInProcessBrowser();\n-\t\t\t\t\treceiverInfo.put(\"hasInProcessLog\", (ts!=null));\n-\t\t\t\t\tif (ts!=null) {\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tif (showCountMessageLog) {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", ts.getMessageCount());\n-\t\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"?\");\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t} catch (Exception e) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in inProcessLog\", e);\n-\t\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"error\");\n-\t\t\t\t\t\t}\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore\", e);\n+\t\t\t\t\treceiverInfo.put(\"errorStorageCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tts=receiver.getMessageLogBrowser();\n+\t\t\treceiverInfo.put(\"hasMessageLog\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountMessageLog) {\n+\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tboolean isRestListener = (listener instanceof RestListener);\n-\t\t\t\t\tlistenerInfo.put(\"isRestListener\", isRestListener);\n-\t\t\t\t\tif (isRestListener) {\n-\t\t\t\t\t\tRestListener rl = (RestListener) listener;\n-\t\t\t\t\t\tlistenerInfo.put(\"restUriPattern\", rl.getRestUriPattern());\n-\t\t\t\t\t\tlistenerInfo.put(\"isView\", (rl.isView()==null?false:rl.isView()));\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in messageLog\", e);\n+\t\t\t\t\treceiverInfo.put(\"messageLogCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tts=receiver.getInProcessBrowser();\n+\t\t\treceiverInfo.put(\"hasInProcessLog\", (ts!=null));\n+\t\t\tif (ts!=null) {\n+\t\t\t\ttry {\n+\t\t\t\t\tif (showCountMessageLog) {\n+\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", ts.getMessageCount());\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"?\");\n \t\t\t\t\t}\n-\t\t\t\t\tif ((listener instanceof JmsListenerBase) && showPendingMsgCount) {\n-\t\t\t\t\t\tJmsListenerBase jlb = (JmsListenerBase) listener;\n-\t\t\t\t\t\tJmsBrowser<javax.jms.Message> jmsBrowser;\n-\t\t\t\t\t\tif (StringUtils.isEmpty(jlb.getMessageSelector())) {\n-\t\t\t\t\t\t\tjmsBrowser = new JmsBrowser<>();\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tjmsBrowser = new JmsBrowser<>(jlb.getMessageSelector());\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tjmsBrowser.setName(\"MessageBrowser_\" + jlb.getName());\n-\t\t\t\t\t\tjmsBrowser.setJmsRealm(jlb.getJmsRealmName());\n-\t\t\t\t\t\tjmsBrowser.setDestinationName(jlb.getDestinationName());\n-\t\t\t\t\t\tjmsBrowser.setDestinationType(jlb.getDestinationType());\n-\t\t\t\t\t\tString numMsgs;\n-\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\tint messageCount = jmsBrowser.getMessageCount();\n-\t\t\t\t\t\t\tnumMsgs = String.valueOf(messageCount);\n-\t\t\t\t\t\t} catch (Throwable t) {\n-\t\t\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore [\"+jmsBrowser.getName()+\"]\", t);\n-\t\t\t\t\t\t\tnumMsgs = \"?\";\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\treceiverInfo.put(\"pendingMessagesCount\", numMsgs);\n+\t\t\t\t} catch (Exception e) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in inProcessLog\", e);\n+\t\t\t\t\treceiverInfo.put(\"inProcessLogCount\", \"error\");\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tboolean isRestListener = (listener instanceof RestListener);\n+\t\t\tlistenerInfo.put(\"isRestListener\", isRestListener);\n+\t\t\tif (isRestListener) {\n+\t\t\t\tRestListener rl = (RestListener) listener;\n+\t\t\t\tlistenerInfo.put(\"restUriPattern\", rl.getRestUriPattern());\n+\t\t\t\tlistenerInfo.put(\"isView\", (rl.isView()==null?false:rl.isView()));\n+\t\t\t}\n+\t\t\tif ((listener instanceof JmsListenerBase) && showPendingMsgCount) {\n+\t\t\t\tJmsListenerBase jlb = (JmsListenerBase) listener;\n+\t\t\t\tJmsBrowser<javax.jms.Message> jmsBrowser;\n+\t\t\t\tif (StringUtils.isEmpty(jlb.getMessageSelector())) {\n+\t\t\t\t\tjmsBrowser = new JmsBrowser<>();\n+\t\t\t\t} else {\n+\t\t\t\t\tjmsBrowser = new JmsBrowser<>(jlb.getMessageSelector());\n+\t\t\t\t}\n+\t\t\t\tjmsBrowser.setName(\"MessageBrowser_\" + jlb.getName());\n+\t\t\t\tjmsBrowser.setJmsRealm(jlb.getJmsRealmName());\n+\t\t\t\tjmsBrowser.setDestinationName(jlb.getDestinationName());\n+\t\t\t\tjmsBrowser.setDestinationType(jlb.getDestinationType());\n+\t\t\t\tString numMsgs;\n+\t\t\t\ttry {\n+\t\t\t\t\tint messageCount = jmsBrowser.getMessageCount();\n+\t\t\t\t\tnumMsgs = String.valueOf(messageCount);\n+\t\t\t\t} catch (Throwable t) {\n+\t\t\t\t\tlog.warn(\"Cannot determine number of messages in errorstore [\"+jmsBrowser.getName()+\"]\", t);\n+\t\t\t\t\tnumMsgs = \"?\";\n+\t\t\t\t}\n+\t\t\t\treceiverInfo.put(\"pendingMessagesCount\", numMsgs);\n+\t\t\t}\n+\t\t\tboolean isEsbJmsFFListener = false;\n+\t\t\tif (listener instanceof EsbJmsListener) {\n+\t\t\t\tEsbJmsListener ejl = (EsbJmsListener) listener;\n+\t\t\t\tif(ejl.getMessageProtocol() != null) {\n+\t\t\t\t\tif (ejl.getMessageProtocol().equalsIgnoreCase(\"FF\")) {\n+\t\t\t\t\t\tisEsbJmsFFListener = true;\n \t\t\t\t\t}\n-\t\t\t\t\tboolean isEsbJmsFFListener = false;\n-\t\t\t\t\tif (listener instanceof EsbJmsListener) {\n-\t\t\t\t\t\tEsbJmsListener ejl = (EsbJmsListener) listener;\n-\t\t\t\t\t\tif(ejl.getMessageProtocol() != null) {\n-\t\t\t\t\t\t\tif (ejl.getMessageProtocol().equalsIgnoreCase(\"FF\")) {\n-\t\t\t\t\t\t\t\tisEsbJmsFFListener = true;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tif(showPendingMsgCount) {\n-\t\t\t\t\t\t\t\tString esbNumMsgs = EsbUtils.getQueueMessageCount(ejl);\n-\t\t\t\t\t\t\t\tif (esbNumMsgs == null) {\n-\t\t\t\t\t\t\t\t\tesbNumMsgs = \"?\";\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\treceiverInfo.put(\"esbPendingMessagesCount\", esbNumMsgs);\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\tif(showPendingMsgCount) {\n+\t\t\t\t\t\tString esbNumMsgs = EsbUtils.getQueueMessageCount(ejl);\n+\t\t\t\t\t\tif (esbNumMsgs == null) {\n+\t\t\t\t\t\t\tesbNumMsgs = \"?\";\n \t\t\t\t\t\t}\n+\t\t\t\t\t\treceiverInfo.put(\"esbPendingMessagesCount\", esbNumMsgs);\n \t\t\t\t\t}\n-\t\t\t\t\treceiverInfo.put(\"isEsbJmsFFListener\", isEsbJmsFFListener);\n-\n-\t\t\t\t\treceiverInfo.put(\"listener\", listenerInfo);\n \t\t\t\t}\n+\t\t\t}\n+\t\t\treceiverInfo.put(\"isEsbJmsFFListener\", isEsbJmsFFListener);\n \n-\t\t\t\tif (receiver instanceof HasSender) {\n-\t\t\t\t\tISender rsender = ((HasSender) receiver).getSender();\n-\t\t\t\t\tif (rsender!=null) { // this sender has preference, but avoid overwriting listeners sender with null\n-\t\t\t\t\t\tsender=rsender; \n-\t\t\t\t\t}\n+\t\t\treceiverInfo.put(\"listener\", listenerInfo);\n+\n+\t\t\tif (receiver instanceof HasSender) {\n+\t\t\t\tISender rsender = ((HasSender) receiver).getSender();\n+\t\t\t\tif (rsender!=null) { // this sender has preference, but avoid overwriting listeners sender with null\n+\t\t\t\t\tsender=rsender; \n \t\t\t\t}\n-\t\t\t\tif (sender != null) { \n-\t\t\t\t\treceiverInfo.put(\"senderName\", sender.getName());\n-\t\t\t\t\treceiverInfo.put(\"senderClass\", ClassUtils.nameOf(sender));\n-\t\t\t\t\tif (sender instanceof HasPhysicalDestination) {\n-\t\t\t\t\t\tString pd = ((HasPhysicalDestination)sender).getPhysicalDestinationName();\n-\t\t\t\t\t\treceiverInfo.put(\"senderDestination\", pd);\n-\t\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (sender != null) { \n+\t\t\t\treceiverInfo.put(\"senderName\", sender.getName());\n+\t\t\t\treceiverInfo.put(\"senderClass\", ClassUtils.nameOf(sender));\n+\t\t\t\tif (sender instanceof HasPhysicalDestination) {\n+\t\t\t\t\tString pd = ((HasPhysicalDestination)sender).getPhysicalDestinationName();\n+\t\t\t\t\treceiverInfo.put(\"senderDestination\", pd);\n \t\t\t\t}\n-\t\t\t\tif (receiver instanceof IThreadCountControllable) {\n-\t\t\t\t\tIThreadCountControllable tcc = (IThreadCountControllable)receiver;\n-\t\t\t\t\tif (tcc.isThreadCountReadable()) {\n-\t\t\t\t\t\treceiverInfo.put(\"threadCount\", tcc.getCurrentThreadCount());\n-\t\t\t\t\t\treceiverInfo.put(\"maxThreadCount\", tcc.getMaxThreadCount());\n-\t\t\t\t\t}\n-\t\t\t\t\tif (tcc.isThreadCountControllable()) {\n-\t\t\t\t\t\treceiverInfo.put(\"threadCountControllable\", \"true\");\n-\t\t\t\t\t}\n+\t\t\t}\n+\t\t\tif (receiver instanceof IThreadCountControllable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxNzE2Nw==", "bodyText": "Mag weg?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525317167", "createdAt": "2020-11-17T16:48:48Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/webcontrol/action/ShowSecurityItems.java", "diffHunk": "@@ -150,25 +150,21 @@ private void addRegisteredAdapters(XmlBuilder securityItems) {\n \n \t\t\tadapterXML.addAttribute(\"name\", adapter.getName());\n \n-\t\t\tIterator recIt = adapter.getReceiverIterator();\n-\t\t\tif (recIt.hasNext()) {\n-\t\t\t\tXmlBuilder receiversXML = new XmlBuilder(\"receivers\");\n-\t\t\t\twhile (recIt.hasNext()) {\n-\t\t\t\t\tIReceiver receiver = (IReceiver) recIt.next();\n-\t\t\t\t\tXmlBuilder receiverXML = new XmlBuilder(\"receiver\");\n-\t\t\t\t\treceiversXML.addSubElement(receiverXML);\n+\t\t\tXmlBuilder receiversXML = new XmlBuilder(\"receivers\");\n+\t\t\tfor (Receiver receiver: adapter.getReceivers()) {\n+\t\t\t\tXmlBuilder receiverXML = new XmlBuilder(\"receiver\");\n+\t\t\t\treceiversXML.addSubElement(receiverXML);\n \n-\t\t\t\t\treceiverXML.addAttribute(\"name\", receiver.getName());\n+\t\t\t\treceiverXML.addAttribute(\"name\", receiver.getName());\n \n-\t\t\t\t\tif (receiver instanceof HasSender) {\n-\t\t\t\t\t\tISender sender = ((HasSender) receiver).getSender();\n-\t\t\t\t\t\tif (sender != null) {\n-\t\t\t\t\t\t\treceiverXML.addAttribute(\"senderName\", sender.getName());\n-\t\t\t\t\t\t}\n+\t\t\t\tif (receiver instanceof HasSender) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxODE1MQ==", "bodyText": "Is toch altijd zo?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525318151", "createdAt": "2020-11-17T16:50:09Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/http/RestListenerUtils.java", "diffHunk": "@@ -152,20 +152,15 @@ public static boolean restartShowConfigurationStatus(ServletContext servletConte\n \tprivate static boolean doRestartShowConfigurationStatus(IbisContext ibisContext) {\n \n \t\tIAdapter adapter = null;\n-\t\tIReceiver receiver = null;\n+\t\tReceiver receiver = null;\n \t\tif (ibisContext != null) {\n \t\t\tIbisManager ibisManager = ibisContext.getIbisManager();\n \t\t\tif (ibisManager != null) {\n-\t\t\t\tConfiguration configuration = ibisManager\n-\t\t\t\t\t\t.getConfiguration(SHOW_CONFIG_STATUS_CONFIGURATION);\n+\t\t\t\tConfiguration configuration = ibisManager.getConfiguration(SHOW_CONFIG_STATUS_CONFIGURATION);\n \t\t\t\tif (configuration != null) {\n-\t\t\t\t\tadapter = configuration\n-\t\t\t\t\t\t\t.getRegisteredAdapter(SHOW_CONFIG_STATUS_ADAPTER);\n+\t\t\t\t\tadapter = configuration.getRegisteredAdapter(SHOW_CONFIG_STATUS_ADAPTER);\n \t\t\t\t\tif (adapter instanceof Adapter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMyMDY4Mw==", "bodyText": "Even een korte uitleg waarom?", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525320683", "createdAt": "2020-11-17T16:53:35Z", "author": {"login": "nielsm5"}, "path": "core/src/test/java/nl/nn/adapterframework/doc/model/FrankDocModelPopulateTest.java", "diffHunk": "@@ -6,8 +6,10 @@\n import java.util.stream.Collectors;\n \n import org.junit.Before;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n+@Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMyMTc1MQ==", "bodyText": "Haha geen extra newline mee? \ud83d\udc4d", "url": "https://github.com/ibissource/iaf/pull/1265#discussion_r525321751", "createdAt": "2020-11-17T16:54:54Z", "author": {"login": "nielsm5"}, "path": "ladybug/src/main/resources/log4j4testtool.properties", "diffHunk": "@@ -6,7 +6,7 @@ log4j4testtool.rootLogger=INFO, TestToolRollingFileAppender\n log4j.appender.TestToolRollingFileAppender=org.apache.log4j.RollingFileAppender\n #log4j.appender.TestToolRollingFileAppender=org.apache.log4j.ConsoleAppender\n log4j.appender.TestToolRollingFileAppender.layout=org.apache.log4j.EnhancedPatternLayout\n-log4j.appender.TestToolRollingFileAppender.layout.ConversionPattern=%n--- %d{yyyy-MM-dd HH:mm:ss} %-5p %c %t ---%n%m%n\n+log4j.appender.TestToolRollingFileAppender.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%t] %c %m%n", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44dadc48323ed6a1b6e1aff86f87a6c71c4dc77d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f6854ad1cd949437d625d55c78c07287fb0908", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/96f6854ad1cd949437d625d55c78c07287fb0908", "committedDate": "2020-11-17T21:18:13Z", "message": "remove casts to Adapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11a812d0731b183ee8f8b96117c4e7729a38ce2f", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/11a812d0731b183ee8f8b96117c4e7729a38ce2f", "committedDate": "2020-11-17T21:22:23Z", "message": "Add test files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d52a0201919a613cb7650065b5ccfda25416aff", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/7d52a0201919a613cb7650065b5ccfda25416aff", "committedDate": "2020-11-17T21:32:54Z", "message": "remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDA3MjQ1", "url": "https://github.com/ibissource/iaf/pull/1265#pullrequestreview-533407245", "createdAt": "2020-11-18T12:44:02Z", "commit": {"oid": "7d52a0201919a613cb7650065b5ccfda25416aff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1054, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}