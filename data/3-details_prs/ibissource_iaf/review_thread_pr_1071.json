{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MTUxMTgz", "number": 1071, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowNTo1M1rOEloDrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozOTozNlrOElo0Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODg5MDY4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/XmlQuerySender.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowNTo1M1rOHVMxSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowNTo1M1rOHVMxSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5MTM3MQ==", "bodyText": "Als je overal var++ na de statement doet moet je het hier ook doen", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r491991371", "createdAt": "2020-09-21T12:05:53Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/XmlQuerySender.java", "diffHunk": "@@ -579,14 +586,13 @@ private void applyParameters(PreparedStatement statement, Vector<Column> columns\n \t\t\t\t\tstatement.setTimestamp(var, (Timestamp) column.getParameter());\n \t\t\t\t\tvar++;\n \t\t\t\t} else if (column.getParameter() instanceof byte[]) {\n-\t\t\t\t\tlog.debug(\"parm [\" + var + \"] is a byte array with value [\" + column.getParameter().toString() + \"]\");\n+\t\t\t\t\tlog.debug(\"parm [\" + var + \"] is a byte array with value [\" + column.getParameter().toString() + \"] = [\" + new String((byte[]) column.getParameter()) + \"]\");\n \t\t\t\t\tstatement.setBytes(var, (byte[]) column.getParameter());\n \t\t\t\t\tvar++;\n \t\t\t\t} else {\n \t\t\t\t\t//if (column.getParameter() instanceof String) \n \t\t\t\t\tlog.debug(\"parm [\" + var + \"] is a String with value [\" + column.getParameter().toString() + \"]\");\n-\t\t\t\t\tstatement.setString(var, (String) column.getParameter());\n-\t\t\t\t\tvar++;\n+\t\t\t\t\tJdbcUtil.setParameter(statement, var++, (String) column.getParameter(), getDbmsSupport().isParameterTypeMatchRequired());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODg5NTg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/jdbc/dbms/DbmsSupportFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowNzozMlrOHVM0jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjowNzozMlrOHVM0jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5MjIwNA==", "bodyText": "Kan dit niet mooier? we krijgen nu 6+ if statements... waarom dit zit niet in de enum?", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r491992204", "createdAt": "2020-09-21T12:07:32Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/jdbc/dbms/DbmsSupportFactory.java", "diffHunk": "@@ -77,13 +85,21 @@ public IDbmsSupport getDbmsSupport(Connection conn) {\n \t\t\t\treturn new MsSqlServerDbmsSupport();\n \t\t\t}\n \t\t\tif (Dbms.MYSQL.getProductName().equals(product)) {\n+\t\t\t\tif (productVersion.contains(\"MariaDB\")) {\n+\t\t\t\t\tlog.debug(\"Setting databasetype to MARIADB (using MySQL driver)\");\n+\t\t\t\t\treturn new MariaDbDbmsSupport();\n+\t\t\t\t}\n \t\t\t\tlog.debug(\"Setting databasetype to MYSQL\");\n \t\t\t\treturn new MySqlDbmsSupport();\n \t\t\t}\n \t\t\tif (Dbms.MARIADB.getProductName().equals(product)) {\n-\t\t\t\tlog.debug(\"Setting databasetype to MARIADB\");\n+\t\t\t\tlog.debug(\"Setting databasetype to MARIADB (using MariaDB driver)\");\n \t\t\t\treturn new MariaDbDbmsSupport();\n \t\t\t}\n+\t\t\tif (Dbms.POSTGRESQL.getProductName().equals(product)) {\n+\t\t\t\tlog.debug(\"Setting databasetype to POSTGRESQL\");\n+\t\t\t\treturn new PostgresqlDbmsSupport();\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODkwODE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/StreamUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjoxMDo1OFrOHVM7_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzozNjo1NlrOHVQXQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5NDEwOA==", "bodyText": "Deze moeten toch altijd gelijk zijn aan elkaar?", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r491994108", "createdAt": "2020-09-21T12:10:58Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/StreamUtil.java", "diffHunk": "@@ -39,7 +41,8 @@\n  */\n public class StreamUtil {\n \tpublic static final String DEFAULT_INPUT_STREAM_ENCODING=\"UTF-8\";\n-\n+\tpublic static final Charset DEFAULT_CHARSET = Charsets.UTF_8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjA1MDI0MQ==", "bodyText": "Maar een Charset is een Charset, en een String een String. Op de String kan je nog steeds een UnsupportedEncodingException krijgen, die je dan telkens moet afvangen", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r492050241", "createdAt": "2020-09-21T13:36:56Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/util/StreamUtil.java", "diffHunk": "@@ -39,7 +41,8 @@\n  */\n public class StreamUtil {\n \tpublic static final String DEFAULT_INPUT_STREAM_ENCODING=\"UTF-8\";\n-\n+\tpublic static final Charset DEFAULT_CHARSET = Charsets.UTF_8;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5NDEwOA=="}, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODkxNjI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/resources/springCommon.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjoxMzozNlrOHVNBNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjoxMzozNlrOHVNBNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk5NTQ0Nw==", "bodyText": "Dit moet naar de enum toe, zie mijn comment in DbmsSupportFactory. Hartstikke leuk dat je dingen toe kan voegen via Spring, dat kan vast handig zijn, maar de 7 of 8 defaults moeten toch ergens vast liggen?", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r491995447", "createdAt": "2020-09-21T12:13:36Z", "author": {"login": "nielsm5"}, "path": "core/src/main/resources/springCommon.xml", "diffHunk": "@@ -391,8 +391,10 @@\n \t\t\t\t<prop key=\"DB2/NT\">nl.nn.adapterframework.jdbc.dbms.Db2DbmsSupport</prop>\n \t\t\t\t<prop key=\"DB2/LINUXX8664\">nl.nn.adapterframework.jdbc.dbms.Db2DbmsSupport</prop>\n \t\t\t\t<prop key=\"H2\">nl.nn.adapterframework.jdbc.dbms.H2DbmsSupport</prop>\n-\t\t\t\t<prop key=\"MySQL\">nl.nn.adapterframework.jdbc.dbms.MySqlDbmsSupport</prop>\n+\t\t\t\t<!-- keep MySQL out of dbmsSupport map, to let DbmsSupportFactory distinguish between MySQL and MariaDB -->\n+\t\t\t\t<!-- <prop key=\"MySQL\">nl.nn.adapterframework.jdbc.dbms.MySqlDbmsSupport</prop> -->\n \t\t\t\t<prop key=\"MariaDB\">nl.nn.adapterframework.jdbc.dbms.MariaDbDbmsSupport</prop>\n+\t\t\t\t<prop key=\"PostgreSQL\">nl.nn.adapterframework.jdbc.dbms.PostgresqlDbmsSupport</prop>\n \t\t\t</props>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAxMjkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/util/JdbcUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozOTowNFrOHVN8dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozOTowNFrOHVN8dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMDYxNA==", "bodyText": "CalendarParserException ?", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r492010614", "createdAt": "2020-09-21T12:39:04Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/util/JdbcUtil.java", "diffHunk": "@@ -1276,7 +1188,48 @@ public static void applyParameter(PreparedStatement statement, ParameterValue pv\n \t\t} else if (\"bytes\".equals(paramType)) {\n \t\t\tstatement.setBytes(parameterIndex, (byte[]) value);\n \t\t} else {\n+\t\t\tsetParameter(statement, parameterIndex, (String)value, parameterTypeMatchRequired);\n+\t\t}\n+\t}\n+\n+\tpublic static void setParameter(PreparedStatement statement, int parameterIndex, String value, boolean parameterTypeMatchRequired) throws SQLException {\n+\t\tif (!parameterTypeMatchRequired) {\n \t\t\tstatement.setString(parameterIndex, (String) value);\n+\t\t\treturn;\n+\t\t}\n+\t\tint sqlTYpe=statement.getParameterMetaData().getParameterType(parameterIndex);\n+\t\ttry {\n+\t\t\tswitch(sqlTYpe) {\n+\t\t\tcase Types.INTEGER:\n+\t\t\t\tstatement.setInt(parameterIndex, Integer.parseInt((String)value));\n+\t\t\t\tbreak;\n+\t\t\tcase Types.NUMERIC:\n+\t\t\tcase Types.DOUBLE:\n+\t\t\t\tstatement.setDouble(parameterIndex, Double.parseDouble((String)value));\n+\t\t\t\tbreak;\n+\t\t\tcase Types.BIGINT:\n+\t\t\t\tstatement.setLong(parameterIndex, Long.parseLong((String)value));\n+\t\t\t\tbreak;\n+\t\t\tcase Types.BLOB:\n+\t\t\t\tstatement.setBytes(parameterIndex, ((String)value).getBytes(Charsets.UTF_8));\n+\t\t\t\tbreak;\n+\t\t\tcase Types.DATE:\n+\t\t\t\tstatement.setDate(parameterIndex, new java.sql.Date(DateUtils.parseAnyDate((String) value).getTime()));\n+\t\t\t\tbreak;\n+\t\t\tcase Types.TIMESTAMP:\n+\t\t\t\tstatement.setTimestamp(parameterIndex, new Timestamp(DateUtils.parseAnyDate((String) value).getTime()));\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tlog.warn(\"parameter type [\"+JDBCType.valueOf(sqlTYpe).getName()+\"] handled as String\");\n+\t\t\t\t//$FALL-THROUGH$\n+\t\t\tcase Types.CHAR:\n+\t\t\tcase Types.VARCHAR:\n+\t\t\t\tstatement.setString(parameterIndex, (String) value);\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t\t} catch (CalendarParserException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 572}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAxNTAzOnYy", "diffSide": "RIGHT", "path": "core/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozOTozNlrOHVN9qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjozOTozNlrOHVN9qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMDkyMA==", "bodyText": "provided scope? dan wordt hij niet meegepackaged maar is hij wel compile time aanwezig", "url": "https://github.com/ibissource/iaf/pull/1071#discussion_r492010920", "createdAt": "2020-09-21T12:39:36Z", "author": {"login": "nielsm5"}, "path": "core/pom.xml", "diffHunk": "@@ -598,9 +598,34 @@\n \t\t<dependency>\n \t\t\t<groupId>com.h2database</groupId>\n \t\t\t<artifactId>h2</artifactId>\n-\t\t\t<version>1.0.20061217</version>\n+\t\t\t<version>1.4.200</version>\n \t\t\t<scope>test</scope>\n \t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>com.microsoft.sqlserver</groupId>\n+\t\t\t<artifactId>mssql-jdbc</artifactId>\n+\t\t\t<version>7.2.2.jre8</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>mysql</groupId>\n+\t\t\t<artifactId>mysql-connector-java</artifactId>\n+\t\t\t<version>8.0.21</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.mariadb.jdbc</groupId>\n+\t\t\t<artifactId>mariadb-java-client</artifactId>\n+\t\t\t<version>2.6.2</version>\n+\t\t\t<scope>test</scope>\n+\t\t</dependency>\n+\t\t<dependency>\n+\t\t\t<groupId>org.postgresql</groupId>\n+\t\t\t<artifactId>postgresql</artifactId>\n+\t\t\t<version>42.2.16</version>\n+\t\t\t<!-- compile scope required for LargeObjectManager (to handle PostgreSQL BLOBs and CLOBs in an alternative way), could consider to remove that, and change scope to 'test' -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ba86816b6151b6eb14af0a610e3e18128b09153"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 680, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}