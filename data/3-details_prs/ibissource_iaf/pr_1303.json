{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDY3MDE1", "number": 1303, "title": "Implement #1296 (forward action) and introduce ImapFileSystem", "bodyText": "", "createdAt": "2020-11-30T10:59:33Z", "url": "https://github.com/ibissource/iaf/pull/1303", "merged": true, "mergeCommit": {"oid": "ff04c7828d57fde2d891f71f2cbea0713858f1ee"}, "closed": true, "closedAt": "2020-12-01T16:54:25Z", "author": {"login": "gvanbrakel"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhjOSQgH2gAyNTI5NDY3MDE1OmVkMDkzMzkyMTQxNDk4NTVmZDZjMDQwODk4MWVlN2RlYmY0N2IyYmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh856pAFqTU0MjEwMjg2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed09339214149855fd6c0408981ee7debf47b2bf", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/ed09339214149855fd6c0408981ee7debf47b2bf", "committedDate": "2020-11-30T10:59:01Z", "message": "Implement #1296 and introduce ImapFileSystem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "398aca9791b17c1305518349eda9d89ba3336a6e", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/398aca9791b17c1305518349eda9d89ba3336a6e", "committedDate": "2020-11-30T11:09:12Z", "message": "Fix Codacy issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/c9dcd833ddc874cb52ad0e90243969b36376ff43", "committedDate": "2020-11-30T11:39:38Z", "message": "add core pom"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTU3MTMw", "url": "https://github.com/ibissource/iaf/pull/1303#pullrequestreview-540957130", "createdAt": "2020-11-30T14:26:46Z", "commit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoyNjo0NlrOH79eoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDozOTo1MVrOH7-DeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNTI5Ng==", "bodyText": "waarom trim je dit hier? wie (h/g)eeft dit probleem?", "url": "https://github.com/ibissource/iaf/pull/1303#discussion_r532635296", "createdAt": "2020-11-30T14:26:46Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/MailFileSystemUtils.java", "diffHunk": "@@ -170,8 +179,19 @@ public static String getValidAddress(String type, String address) {\n \t\t\tif (addresses.length==0) {\n \t\t\t\treturn null;\n \t\t\t} \n-\t\t\treturn InternetAddress.toString(addresses);\n-\t\t} catch (AddressException e) {\n+\t\t\tStringBuffer result = new StringBuffer();\n+\t\t\tfor (InternetAddress iaddress: addresses) {\n+\t\t\t\tString personal = iaddress.getPersonal();\n+\t\t\t\tif (personal!=null) {\n+\t\t\t\t\tiaddress.setPersonal(iaddress.getPersonal().trim());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjU3NQ==", "bodyText": "Ik zie dit vaker, is het niet mogelijk in ImapFileSystem een public final String ImapFileSystem = this.getClass().getName() te doen? Mocht dan de naam veranderen hoef je niet overal de referenties aan te passen...", "url": "https://github.com/ibissource/iaf/pull/1303#discussion_r532636575", "createdAt": "2020-11-30T14:28:39Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/senders/ImapSender.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+ */\n+package nl.nn.adapterframework.senders;\n+\n+import javax.mail.Message;\n+\n+import nl.nn.adapterframework.doc.IbisDocRef;\n+import nl.nn.adapterframework.filesystem.FileSystemSender;\n+import nl.nn.adapterframework.filesystem.ImapFileSystem;\n+\n+public class ImapSender extends FileSystemSender<Message, ImapFileSystem> {\n+\tpublic final String IMAP_FILE_SYSTEM =\"nl.nn.adapterframework.filesystem.ImapFileSystem\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzODcwNg==", "bodyText": "private static class? Ik zie dat hij alleen in dit bestand gebruikt wordt..", "url": "https://github.com/ibissource/iaf/pull/1303#discussion_r532638706", "createdAt": "2020-11-30T14:31:36Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ExchangeFileSystem.java", "diffHunk": "@@ -763,6 +763,18 @@ public String getPhysicalDestinationName() {\n \t\t}\n \t\treturn null;\n \t}\n+\t\n+\tstatic class RedirectionUrlCallback implements IAutodiscoverRedirectionUrl {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "originalPosition": 240}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MzY0NA==", "bodyText": "Moet dit niet de basefolder zijn?", "url": "https://github.com/ibissource/iaf/pull/1303#discussion_r532643644", "createdAt": "2020-11-30T14:38:26Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ImapFileSystem.java", "diffHunk": "@@ -0,0 +1,542 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+ */\n+package nl.nn.adapterframework.filesystem;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.DirectoryStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Enumeration;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import javax.mail.BodyPart;\n+import javax.mail.Flags;\n+import javax.mail.Folder;\n+import javax.mail.Header;\n+import javax.mail.Message;\n+import javax.mail.Message.RecipientType;\n+import javax.mail.MessagingException;\n+import javax.mail.Multipart;\n+import javax.mail.Part;\n+import javax.mail.Session;\n+import javax.mail.Store;\n+import javax.mail.Transport;\n+import javax.mail.UIDFolder;\n+import javax.mail.internet.InternetAddress;\n+import javax.mail.internet.MimeBodyPart;\n+import javax.mail.internet.MimeMessage;\n+import javax.mail.internet.MimeMultipart;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.logging.log4j.Logger;\n+import org.xml.sax.SAXException;\n+\n+import com.sun.mail.imap.AppendUID;\n+import com.sun.mail.imap.IMAPFolder;\n+import com.sun.mail.imap.IMAPMessage;\n+\n+import lombok.Getter;\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.util.CredentialFactory;\n+import nl.nn.adapterframework.util.LogUtil;\n+import nl.nn.adapterframework.xml.SaxElementBuilder;\n+\n+public class ImapFileSystem extends MailFileSystemBase<Message, MimeBodyPart> {\n+\tprotected Logger log = LogUtil.getLogger(this);\n+\n+\tprivate @Getter String host = \"\";\n+\tprivate @Getter int port = 993;\n+\t\n+\tprivate Store store = null;\n+\tprivate Session emailSession;\n+\n+\t{\n+\t\tsetBaseFolder(\"INBOX\");\n+\t}\n+\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\t// TODO Auto-generated method stub\n+\t}\n+\n+\t@Override\n+\tpublic void open() throws FileSystemException {\n+\t\temailSession = Session.getInstance(System.getProperties());\n+\t\t// emailSession.setDebug(true);\n+\n+\t\ttry {\n+\t\t\tCredentialFactory cf = new CredentialFactory(getAuthAlias(), getUsername(), getPassword());\n+\t\t\tstore = emailSession.getStore(\"imaps\");\n+\t\t\tstore.connect(getHost(), getPort(), cf.getUsername(), cf.getPassword());\n+\t\t} catch (MessagingException e) {\n+\t\t\tthrow new FileSystemException(e);\n+\t\t}\n+\t}\n+\n+\tprivate IMAPFolder getFolder(String name) throws MessagingException {\n+\t\tFolder inbox = store.getFolder(\"INBOX\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0NDcyOA==", "bodyText": "hier doe je basefolder.getbasefolder?", "url": "https://github.com/ibissource/iaf/pull/1303#discussion_r532644728", "createdAt": "2020-11-30T14:39:51Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/ImapFileSystem.java", "diffHunk": "@@ -0,0 +1,542 @@\n+/*\n+   Copyright 2020 WeAreFrank!\n+\n+   Licensed under the Apache License, Version 2.0 (the \"License\");\n+   you may not use this file except in compliance with the License.\n+   You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+ */\n+package nl.nn.adapterframework.filesystem;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.DirectoryStream;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.Enumeration;\n+import java.util.Iterator;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import javax.mail.BodyPart;\n+import javax.mail.Flags;\n+import javax.mail.Folder;\n+import javax.mail.Header;\n+import javax.mail.Message;\n+import javax.mail.Message.RecipientType;\n+import javax.mail.MessagingException;\n+import javax.mail.Multipart;\n+import javax.mail.Part;\n+import javax.mail.Session;\n+import javax.mail.Store;\n+import javax.mail.Transport;\n+import javax.mail.UIDFolder;\n+import javax.mail.internet.InternetAddress;\n+import javax.mail.internet.MimeBodyPart;\n+import javax.mail.internet.MimeMessage;\n+import javax.mail.internet.MimeMultipart;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.apache.logging.log4j.Logger;\n+import org.xml.sax.SAXException;\n+\n+import com.sun.mail.imap.AppendUID;\n+import com.sun.mail.imap.IMAPFolder;\n+import com.sun.mail.imap.IMAPMessage;\n+\n+import lombok.Getter;\n+import nl.nn.adapterframework.configuration.ConfigurationException;\n+import nl.nn.adapterframework.doc.IbisDoc;\n+import nl.nn.adapterframework.util.CredentialFactory;\n+import nl.nn.adapterframework.util.LogUtil;\n+import nl.nn.adapterframework.xml.SaxElementBuilder;\n+\n+public class ImapFileSystem extends MailFileSystemBase<Message, MimeBodyPart> {\n+\tprotected Logger log = LogUtil.getLogger(this);\n+\n+\tprivate @Getter String host = \"\";\n+\tprivate @Getter int port = 993;\n+\t\n+\tprivate Store store = null;\n+\tprivate Session emailSession;\n+\n+\t{\n+\t\tsetBaseFolder(\"INBOX\");\n+\t}\n+\n+\n+\t@Override\n+\tpublic void configure() throws ConfigurationException {\n+\t\t// TODO Auto-generated method stub\n+\t}\n+\n+\t@Override\n+\tpublic void open() throws FileSystemException {\n+\t\temailSession = Session.getInstance(System.getProperties());\n+\t\t// emailSession.setDebug(true);\n+\n+\t\ttry {\n+\t\t\tCredentialFactory cf = new CredentialFactory(getAuthAlias(), getUsername(), getPassword());\n+\t\t\tstore = emailSession.getStore(\"imaps\");\n+\t\t\tstore.connect(getHost(), getPort(), cf.getUsername(), cf.getPassword());\n+\t\t} catch (MessagingException e) {\n+\t\t\tthrow new FileSystemException(e);\n+\t\t}\n+\t}\n+\n+\tprivate IMAPFolder getFolder(String name) throws MessagingException {\n+\t\tFolder inbox = store.getFolder(\"INBOX\");\n+\t\tFolder folder;\n+\t\tString baseFolder = getBaseFolder();\n+\t\tif (StringUtils.isNotEmpty(baseFolder)) {\n+\t\t\tfolder = inbox.getFolder(baseFolder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9dcd833ddc874cb52ad0e90243969b36376ff43"}, "originalPosition": 102}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "853d64ee010213d6ea85982d6039c649f9b72b7f", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/853d64ee010213d6ea85982d6039c649f9b72b7f", "committedDate": "2020-11-30T15:08:18Z", "message": "Add filename and filepath as session variables in FileSystemListener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424e37f46111034717d4fd456f1a33e15769095e", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/424e37f46111034717d4fd456f1a33e15769095e", "committedDate": "2020-11-30T16:43:05Z", "message": "Fix issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1f923a2bde91b368d7dce1ec47c9dc50f66cd0", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/cb1f923a2bde91b368d7dce1ec47c9dc50f66cd0", "committedDate": "2020-12-01T07:46:24Z", "message": "Fix issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63f2d8ee9e8507686b55fcb864c2dfcbdbacea38", "author": {"user": {"login": "gvanbrakel", "name": "Gerrit van Brakel"}}, "url": "https://github.com/ibissource/iaf/commit/63f2d8ee9e8507686b55fcb864c2dfcbdbacea38", "committedDate": "2020-12-01T13:45:02Z", "message": "Workaround for #1212/#1305 EWS Connection still allocated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTAyODY4", "url": "https://github.com/ibissource/iaf/pull/1303#pullrequestreview-542102868", "createdAt": "2020-12-01T16:54:18Z", "commit": {"oid": "63f2d8ee9e8507686b55fcb864c2dfcbdbacea38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1087, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}