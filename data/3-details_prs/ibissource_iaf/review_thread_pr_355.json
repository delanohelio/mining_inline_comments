{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMTM0NTE3", "number": 355, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0MDo1NlrODXj_LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo1NDowMVrODXkSNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDMzNDUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0MDo1NlrOFc7D5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1NzowOFrOFdVE2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjEwMw==", "bodyText": "Waarom voeg je de index aan de naam toe? De lijst is toch op dezelfde volgorde als de index?", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365872103", "createdAt": "2020-01-13T15:40:56Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODMyOQ==", "bodyText": "Klopt, ik heb het in eerste instantie op een inefficiente manier gedaan maar dat is nu gefixt.", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298329", "createdAt": "2020-01-14T11:57:08Z", "author": {"login": "celmoussaoui"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3MjEwMw=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDM1NDE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo0NjoyMlrOFc7P3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzoxODoxM1rOFdXHUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3NTE2Nw==", "bodyText": "Waarom is er hier een method om speciaal voor de FileSender de properties van de FilePipe te kopieren?\nEr zijn dan toch veel meer senders die zo'n behandeling zouden willen?", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365875167", "createdAt": "2020-01-13T15:46:22Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);\n+\t\t\tclazz = clazz.getSuperclass();\n+\t\t\tindex++;\n+\t\t}\n+\t\treturn superClasses;\n+\t}\n+\n+\t/**\n+\t * Gets the IbisDoc values.\n+\t *\n+\t * @param ibisDocValues - The String[] containing all the ibisDocValues\n+\t * @return The needed ibisDocValues\n+\t */\n+\tprivate String[] getValues(String[] ibisDocValues) {\n+\t\tint order;\n+\t\tint desc;\n+\t\tint def;\n+\n+\t\tif (ibisDocValues[0].matches(\"\\\\d+\")) {\n+\t\t\torder = Integer.parseInt(ibisDocValues[0]);\n+\t\t\tdesc = 1;\n+\t\t\tdef = 2;\n+\t\t} else {\n+\t\t\torder = 999;\n+\t\t\tdesc = 0;\n+\t\t\tdef = 1;\n+\t\t}\n+\t\tif (ibisDocValues.length > def)\n+\t\t\treturn new String[]{ibisDocValues[desc], ibisDocValues[def], \"\" + order };\n+\t\telse\n+\t\t\treturn new String[]{ibisDocValues[desc], \"\", \"\" + order };\n+\t}\n+\n+\t/**\n+\t * Add properties of the FilePipe to the FileSender.\n+\t *\n+\t * @param ibisBean       - The IbisBean that should be the FilePipe\n+\t * @param groups         - Contains all information\n+\t * @param beanProperties - The properties of a class (in this case the FilePipe)\n+\t */\n+\tprivate void addPropertiesFileSender(IbisBean ibisBean, Map<String, TreeSet<IbisBean>> groups, Map<String, Method> beanProperties) {\n+\t\tif (ibisBean.getName().equals(\"FilePipe\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzMTcyOA==", "bodyText": "We hebben afgesproken dat dit in een volgende ronde aangepakt gaat worden, door middel van annotaties waarmee de instructie gegeven kan worden de ibisdoc op te halen van een method van een andere class", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366331728", "createdAt": "2020-01-14T13:18:13Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/IbisDocPipe.java", "diffHunk": "@@ -384,96 +385,153 @@ public PipeRunResult doPipe(Object input, IPipeLineSession session) throws PipeR\n \t\treturn new PipeRunResult(getForward(), result);\n \t}\n \n-\tprivate String getJson() {\n-\t\tMap<String, TreeSet<IbisBean>> groups = getGroups();\n-\t\tIbisDocExtractor extractor = new IbisDocExtractor();\n-\n-\t\t// For all folders\n-\t\tfor (String folder : groups.keySet()) {\n-\n-\t\t\t// For all classes\n-\t\t\tfor (IbisBean ibisBean : groups.get(folder)) {\n-\n-\t\t\t\t// Copy the properties of FileSender into FilePipe so that the properties of FileHandler are also in FilePipe\n-\t\t\t\tMap<String, Method> beanProperties = getBeanProperties(ibisBean.getClazz());\n-\t\t\t\tif (beanProperties != null) {\n-\n-\t\t\t\t\tif (ibisBean.getName().equals(\"FilePipe\")) {\n-\t\t\t\t\t\tfor (IbisBean bean : groups.get(\"Senders\")) {\n-\t\t\t\t\t\t\tif (bean.getName().equals(\"FileSender\")) {\n-\t\t\t\t\t\t\t\tMap<String, Method> senderProperties = getBeanProperties(bean.getClazz());\n-\t\t\t\t\t\t\t\tif (senderProperties != null) {\n-\t\t\t\t\t\t\t\t\tbeanProperties.putAll(senderProperties);\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\tbreak;\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\n-\t\t\t\t\t// For each method in the class\n-\t\t\t\t\tIterator<String> iterator = new TreeSet<>(beanProperties.keySet()).iterator();\n-\n-\t\t\t\t\twhile (iterator.hasNext()) {\n-\n-\t\t\t\t\t\t// Get the method\n-\t\t\t\t\t\tString property = iterator.next();\n-\t\t\t\t\t\tMethod method = beanProperties.get(property);\n-\n-\t\t\t\t\t\t// Get the ibisdoc of the method\n-\t\t\t\t\t\tIbisDoc ibisDoc = AnnotationUtils.findAnnotation(method, IbisDoc.class);\n+\t/**\n+\t * Get the superclasses of a certain class.\n+\t *\n+\t * @param clazz - The class we have to derive the superclasses from\n+\t * @return An ArrayList containing all the superclasses with priority given to them\n+\t */\n+\tprivate ArrayList<String> getSuperClasses(Class clazz) {\n+\t\tArrayList<String> superClasses = new ArrayList<String>();\n+\t\tint index = 0;\n+\t\twhile (clazz.getSuperclass() != null) {\n+\n+\t\t\t// Assign a string with a priority number attached to it and add it to the array of superclasses\n+\t\t\tString str = Integer.toString(index);\n+\t\t\tsuperClasses.add(clazz.getSimpleName() + str);\n+\t\t\tclazz = clazz.getSuperclass();\n+\t\t\tindex++;\n+\t\t}\n+\t\treturn superClasses;\n+\t}\n+\n+\t/**\n+\t * Gets the IbisDoc values.\n+\t *\n+\t * @param ibisDocValues - The String[] containing all the ibisDocValues\n+\t * @return The needed ibisDocValues\n+\t */\n+\tprivate String[] getValues(String[] ibisDocValues) {\n+\t\tint order;\n+\t\tint desc;\n+\t\tint def;\n+\n+\t\tif (ibisDocValues[0].matches(\"\\\\d+\")) {\n+\t\t\torder = Integer.parseInt(ibisDocValues[0]);\n+\t\t\tdesc = 1;\n+\t\t\tdef = 2;\n+\t\t} else {\n+\t\t\torder = 999;\n+\t\t\tdesc = 0;\n+\t\t\tdef = 1;\n+\t\t}\n+\t\tif (ibisDocValues.length > def)\n+\t\t\treturn new String[]{ibisDocValues[desc], ibisDocValues[def], \"\" + order };\n+\t\telse\n+\t\t\treturn new String[]{ibisDocValues[desc], \"\", \"\" + order };\n+\t}\n+\n+\t/**\n+\t * Add properties of the FilePipe to the FileSender.\n+\t *\n+\t * @param ibisBean       - The IbisBean that should be the FilePipe\n+\t * @param groups         - Contains all information\n+\t * @param beanProperties - The properties of a class (in this case the FilePipe)\n+\t */\n+\tprivate void addPropertiesFileSender(IbisBean ibisBean, Map<String, TreeSet<IbisBean>> groups, Map<String, Method> beanProperties) {\n+\t\tif (ibisBean.getName().equals(\"FilePipe\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3NTE2Nw=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDM3NDk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo1MTo0NFrOFc7cHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1Nzo1NFrOFdVF5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3ODMwMQ==", "bodyText": "Moeten className, originalClassName en foldername niet attributen zijn van AClass in plaats van van AMethod?\nEn dat AMethod dan een verwijzing heeft naar AMethod?", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365878301", "createdAt": "2020-01-13T15:51:44Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import java.util.ArrayList;\n+\n+public class AMethod {\n+\n+    private String name;\n+    private String className;\n+    private String originalClassName;\n+    private String folderName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODU5Nw==", "bodyText": "className en folderName kunnen inderdaan beter een attribuut zijn van AClass. originalClassName verschilt echter per method, dus blijft het een attribuut van AMethod", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298597", "createdAt": "2020-01-14T11:57:54Z", "author": {"login": "celmoussaoui"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/AMethod.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import java.util.ArrayList;\n+\n+public class AMethod {\n+\n+    private String name;\n+    private String className;\n+    private String originalClassName;\n+    private String folderName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3ODMwMQ=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDM4MTA0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/DigesterXmlHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo1MzoyNVrOFc7f0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1ODo0OFrOFdVHGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTI1MA==", "bodyText": "Wat doet deze class?", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365879250", "createdAt": "2020-01-13T15:53:25Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/DigesterXmlHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+public class DigesterXmlHandler extends DefaultHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODkwNw==", "bodyText": "Ik heb dit niet geschreven, enkel verplaatst om de IbisDocPipe.class wat overzichtelijker te maken zodat er niet meerder classes zijn in een file.", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298907", "createdAt": "2020-01-14T11:58:48Z", "author": {"login": "celmoussaoui"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/DigesterXmlHandler.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+import org.xml.sax.Attributes;\n+import org.xml.sax.SAXException;\n+import org.xml.sax.helpers.DefaultHandler;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.StringTokenizer;\n+\n+public class DigesterXmlHandler extends DefaultHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTI1MA=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDM4MzI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/IbisBean.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNTo1NDowMVrOFc7hMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMTo1OTo0MVrOFdVIgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA==", "bodyText": "Wat representeert deze class?", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r365879600", "createdAt": "2020-01-13T15:54:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/IbisBean.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+public class IbisBean implements Comparable<IbisBean> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5ODkzOA==", "bodyText": "Ik heb dit niet geschreven, enkel verplaatst om de IbisDocPipe.class wat overzichtelijker te maken zodat er niet meerder classes zijn in een file.", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366298938", "createdAt": "2020-01-14T11:58:53Z", "author": {"login": "celmoussaoui"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/IbisBean.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+public class IbisBean implements Comparable<IbisBean> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjI5OTI2Ng==", "bodyText": "Het representeert tevens een Class Object", "url": "https://github.com/ibissource/iaf/pull/355#discussion_r366299266", "createdAt": "2020-01-14T11:59:41Z", "author": {"login": "celmoussaoui"}, "path": "core/src/main/java/nl/nn/adapterframework/doc/objects/IbisBean.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package nl.nn.adapterframework.doc.objects;\n+\n+public class IbisBean implements Comparable<IbisBean> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg3OTYwMA=="}, "originalCommit": {"oid": "c15d3bc8a8ab5fd344c4382ee955854f27d41c81"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 506, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}