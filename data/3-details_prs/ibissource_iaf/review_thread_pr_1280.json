{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NTMzOTE4", "number": 1280, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjozNTowMVrOE8Mpfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxNDo0MFrOE9TLZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTU3MjQ2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjozNTowMVrOH4LkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjozNTowMVrOH4LkDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3MTc1Ng==", "bodyText": "This part can stay at configure(). It is not dependent on the action itself", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528671756", "createdAt": "2020-11-23T12:35:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,17 +171,39 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (fileSystem instanceof IWritableFileSystem) {\n+\t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTU5ODU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0MjoyNFrOH4LzoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0MjoyNFrOH4LzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3NTc0NA==", "bodyText": "Should check here for action to be non-null", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528675744", "createdAt": "2020-11-23T12:42:24Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -283,6 +290,14 @@ private String determineInputFoldername(Message input, ParameterValueList pvl) t\n \t\n \tpublic Object doAction(Message input, ParameterValueList pvl, IPipeLineSession session) throws FileSystemException, TimeOutException {\n \t\ttry {\n+\t\t\tString action;\n+\t\t\tif (pvl != null && pvl.containsKey(PARAMETER_ACTION)) {\n+\t\t\t\taction = pvl.getParameterValue(PARAMETER_ACTION).asStringValue(getAction());\n+\t\t\t\tcheckConfiguration(action);\n+\t\t\t} else {\n+\t\t\t\taction = getAction();\n+\t\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTYwNTM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NDoyN1rOH4L37g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMjo0NDoyN1rOH4L37g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODY3Njg0Ng==", "bodyText": "I think it will be more clear to say: \"either attribute [action] or parameter [action] must be specified\"", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r528676846", "createdAt": "2020-11-23T12:44:27Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,26 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n-\t\tif (fileSystem instanceof IWritableFileSystem) {\n-\t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n-\t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either action or parameter [\"+PARAMETER_ACTION+\"] must be specified\");\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c8428d6e61dd9de667f6212a4b2c2253518ef21"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjI4MDY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowOTo1N1rOH5MxsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzowOTo1N1rOH5MxsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0MDIwOA==", "bodyText": "niet owner.getClass().getSimpleName() maar ClassUtils.nameOf(...)", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r529740208", "createdAt": "2020-11-24T17:09:57Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,30 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n+\n \t\tif (fileSystem instanceof IWritableFileSystem) {\n \t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n \t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either attribute [action] or parameter [\"+PARAMETER_ACTION+\"] must be specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjI4NjM0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxMToxOFrOH5M1Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoxMToxOFrOH5M1Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0MTEwMw==", "bodyText": "niet owner.getClass().getSimpleName() maar ClassUtils.nameOf(...)", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r529741103", "createdAt": "2020-11-24T17:11:18Z", "author": {"login": "nielsm5"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,17 +175,36 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (!actions.contains(action))\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + action + \"] supported actions are \" + actions.toString() + \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTIyNjIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0MToyNlrOH5oeSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODo0MToyNlrOH5oeSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE5Mzk5NA==", "bodyText": "Please use ClassUtils.nameOf()", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530193994", "createdAt": "2020-11-25T08:41:26Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -141,42 +142,30 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\tthis.owner=owner;\n \t\tthis.fileSystem=fileSystem;\n \t\tthis.parameterList=parameterList;\n+\n \t\tif (fileSystem instanceof IWritableFileSystem) {\n \t\t\tactions.addAll(Arrays.asList(ACTIONS_WRITABLE_FS));\n \t\t}\n \n-\t\tif (getAction() == null)\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: action must be specified\");\n-\t\tif (!actions.contains(getAction()))\n-\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + getAction() + \"] supported actions are \" + actions.toString() + \"\");\n-\n-\t\tif (getAction().equals(ACTION_READ2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n-\t\t\tsetAction(ACTION_READ1);\n-\t\t}\n-\t\tif (getAction().equals(ACTION_WRITE2)) {\n-\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n-\t\t\tsetAction(ACTION_WRITE1);\n-\t\t}\n-\t\t\n-\t\tif (StringUtils.isNotEmpty(getBase64()) && !(getBase64().equals(BASE64_ENCODE) || getBase64().equals(BASE64_DECODE))) {\n-\t\t\tthrow new ConfigurationException(\"attribute 'base64' can have value '\"+BASE64_ENCODE+\"' or '\"+BASE64_DECODE+\"' or can be left empty\");\n-\t\t}\n-\t\t\n \t\tif (parameterList!=null && parameterList.findParameter(PARAMETER_CONTENTS2) != null && parameterList.findParameter(PARAMETER_CONTENTS1) == null) {\n \t\t\tConfigurationWarnings.add(owner, log, \"parameter [\"+PARAMETER_CONTENTS2+\"] has been replaced with [\"+PARAMETER_CONTENTS1+\"]\");\n \t\t\tparameterList.findParameter(PARAMETER_CONTENTS2).setName(PARAMETER_CONTENTS1);\n \t\t}\n-\t\t\n-\t\t//Check if necessarily parameters are available\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_WRITE1, PARAMETER_CONTENTS1, PARAMETER_FILENAME, \"filename\", getFilename());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_MOVE,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_COPY,   PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\tactionRequiresAtLeastOneOfTwoParametersOrAttribute(owner, parameterList, ACTION_RENAME, PARAMETER_DESTINATION, null, \"destination\", getDestination());\n-\t\t\n+\n+\t\tif (StringUtils.isNotEmpty(getAction())) {\n+\t\t\tcheckConfiguration(getAction());\n+\t\t} else if (parameterList == null || parameterList.findParameter(PARAMETER_ACTION) == null) {\n+\t\t\tthrow new ConfigurationException(owner.getClass().getSimpleName()+\" [\"+owner.getName()+\"]: either attribute [action] or parameter [\"+PARAMETER_ACTION+\"] must be specified\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29217fc00ae9e3478753aa8dd6c67e94515afd3e"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjkwMDAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToyNTowMVrOH54ayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToyNTowMVrOH54ayg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ1NTI0Mg==", "bodyText": "This part must be at configure(), to support legacy action names. We do not want/need to support those names for dynamic actions, and therefore the code can be moved back to configure(). It cannot stay here, because it sets the action via setAction().", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530455242", "createdAt": "2020-11-25T15:25:01Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -186,28 +175,47 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\t}\n \t\t}\n \t}\n+\n+\tprivate void checkConfiguration(String action) throws ConfigurationException {\n+\t\tif (!actions.contains(action))\n+\t\t\tthrow new ConfigurationException(ClassUtils.nameOf(owner)+\" [\"+owner.getName()+\"]: unknown or invalid action [\" + action + \"] supported actions are \" + actions.toString() + \"\");\n+\n+\t\tif (action.equals(ACTION_READ2)) {\n+\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_READ2+\"] has been replaced with [\"+ACTION_READ1+\"]\");\n+\t\t\tsetAction(ACTION_READ1);\n+\t\t}\n+\t\tif (action.equals(ACTION_WRITE2)) {\n+\t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n+\t\t\tsetAction(ACTION_WRITE1);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9606ab135987fd89a1b945eaf0345624276cb98"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzEwODY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxMDoxMVrOH56cBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxMDoxMVrOH56cBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ4ODMyNQ==", "bodyText": "Sorry to bother you again, but this part needs to be before the call to checkConfiguration(), e.g. at line 154, as it could modify the action.", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530488325", "createdAt": "2020-11-25T16:10:11Z", "author": {"login": "gvanbrakel"}, "path": "core/src/main/java/nl/nn/adapterframework/filesystem/FileSystemActor.java", "diffHunk": "@@ -158,25 +166,15 @@ public void configure(FS fileSystem, ParameterList parameterList, INamedObject o\n \t\t\tConfigurationWarnings.add(owner, log, \"action [\"+ACTION_WRITE2+\"] has been replaced with [\"+ACTION_WRITE1+\"]\");\n \t\t\tsetAction(ACTION_WRITE1);\n \t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzEyODA0OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/nl/nn/adapterframework/filesystem/FileSystemActorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxNDo0MFrOH56n7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNjoxNDo0MFrOH56n7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ5MTM3Mw==", "bodyText": "Please add two more tests:\n\nto show that when the value of the parameter is empty, the configured action is taken as a default\nto show when both attribute and parameter action are set and valid, then the value of the parameter is used.", "url": "https://github.com/ibissource/iaf/pull/1280#discussion_r530491373", "createdAt": "2020-11-25T16:14:40Z", "author": {"login": "gvanbrakel"}, "path": "core/src/test/java/nl/nn/adapterframework/filesystem/FileSystemActorTest.java", "diffHunk": "@@ -82,11 +82,36 @@ public void fileSystemActorTestConfigureBasic() throws Exception {\n \n \t@Test\n \tpublic void fileSystemActorTestConfigureNoAction() throws Exception {\n-\t\tthrown.expectMessage(\"action must be specified\");\n+\t\tthrown.expectMessage(\"either attribute [action] or parameter [action] must be specified\");\n \t\tthrown.expectMessage(\"fake owner of FileSystemActor\");\n \t\tactor.configure(fileSystem,null,owner);\n \t}\n \n+\t@Test\n+\tpublic void fileSystemActorEmptyParameterAction() throws Exception {\n+\t\tthrown.expectMessage(\"unable to resolve the value of parameter\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "234e9ddec4d9c8564ed0a14a1ba9698ad660426a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 655, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}