{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNTk1MDc1", "number": 2612, "title": "Develop/2.5 check point node ui, Queue Controller, queue-type-list directive", "bodyText": "", "createdAt": "2020-04-13T11:04:51Z", "url": "https://github.com/thingsboard/thingsboard/pull/2612", "merged": true, "mergeCommit": {"oid": "0a136588eb913f1b699132cb454d1ec6ea76c4f8"}, "closed": true, "closedAt": "2020-04-15T14:48:48Z", "author": {"login": "ShvaykaD"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWSCNLgH2gAyNDAyNTk1MDc1OmZkMWQxZGVhODI3NDU2ZDA5ODhiYzExMjg2ODY2ODg5M2RjYzg3MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX3PswAH2gAyNDAyNTk1MDc1OmYyYTQ2MmMxMmVmNmMyODQyOGIwODBhMDMwODQ1ZDllZTc2NWI2OWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd1d1dea827456d0988bc112868668893dcc8715", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/fd1d1dea827456d0988bc112868668893dcc8715", "committedDate": "2020-04-10T14:33:07Z", "message": "init commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c07893fda32353b3fc3a3806dc0f6bf88aa3418", "author": {"user": {"login": "Dmitriymush", "name": "Dmitriy Mushat"}}, "url": "https://github.com/thingsboard/thingsboard/commit/3c07893fda32353b3fc3a3806dc0f6bf88aa3418", "committedDate": "2020-04-10T14:44:36Z", "message": "ui: service for queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b31ab103b363c7f0d45273349a177f2b11ad5c4", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/5b31ab103b363c7f0d45273349a177f2b11ad5c4", "committedDate": "2020-04-10T14:52:37Z", "message": "Merge branch 'develop/2.5' of github.com:ShvaykaD/thingsboard into develop/2.5-checkPointNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa509d35cf6410915a7a043e59a475bcea7ccdce", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/fa509d35cf6410915a7a043e59a475bcea7ccdce", "committedDate": "2020-04-10T14:54:32Z", "message": "Merge pull request #1 from Dmitriymush/develop/2.5-checkPointNode\n\nui: service for queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6322be3784dd43ceb74dd1742177579ab22aa552", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/6322be3784dd43ceb74dd1742177579ab22aa552", "committedDate": "2020-04-10T15:39:43Z", "message": "merge with develop/2.5 & fix license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5409499ebca2fd14dee9ad37396fe090668a764", "author": {"user": {"login": "Dmitriymush", "name": "Dmitriy Mushat"}}, "url": "https://github.com/thingsboard/thingsboard/commit/a5409499ebca2fd14dee9ad37396fe090668a764", "committedDate": "2020-04-12T19:22:47Z", "message": "queue directive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4cc98a797aa77a33ec261c568e00f8c627b7e39", "author": {"user": {"login": "Dmitriymush", "name": "Dmitriy Mushat"}}, "url": "https://github.com/thingsboard/thingsboard/commit/d4cc98a797aa77a33ec261c568e00f8c627b7e39", "committedDate": "2020-04-12T19:28:10Z", "message": "queue directive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96ea9156a95a5fec86896f46fcfb16d958e6b189", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/96ea9156a95a5fec86896f46fcfb16d958e6b189", "committedDate": "2020-04-13T09:40:08Z", "message": "Merge pull request #2 from Dmitriymush/develop/2.5-checkPointNode\n\nDevelop/2.5 check point node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e86660efe89817e661053ac95f22ea247a8812ec", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/e86660efe89817e661053ac95f22ea247a8812ec", "committedDate": "2020-04-13T10:42:12Z", "message": "queue-type-list directive & TbCheckPointNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28bbc7e2347b6daa704b9e99232073422ae8fbd3", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/28bbc7e2347b6daa704b9e99232073422ae8fbd3", "committedDate": "2020-04-13T10:56:38Z", "message": "Merge branch 'develop/2.5' of github.com:ShvaykaD/thingsboard into develop/2.5-checkPointNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dc09fa30d8066187a65c7b79115bb2c037d463e", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/5dc09fa30d8066187a65c7b79115bb2c037d463e", "committedDate": "2020-04-13T11:04:13Z", "message": "added rulenode-core-config.js file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff8fc27e2105402d4d7ddc7b2c041da4eaf45cf", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/2ff8fc27e2105402d4d7ddc7b2c041da4eaf45cf", "committedDate": "2020-04-13T14:04:19Z", "message": "added new rulenode-core-config.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/24fe2867e96b99f9e6eff3c2e1135672c39cbbda", "committedDate": "2020-04-13T14:05:05Z", "message": "Merge branch 'develop/2.5' of github.com:ShvaykaD/thingsboard into develop/2.5-checkPointNode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNjM3ODU1", "url": "https://github.com/thingsboard/thingsboard/pull/2612#pullrequestreview-392637855", "createdAt": "2020-04-14T06:34:59Z", "commit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNjozNDo1OVrOGFAF-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzowNjoyMFrOGFA6AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NzU5NA==", "bodyText": "ThingsboardType not used. Why import?", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407897594", "createdAt": "2020-04-14T06:34:59Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/api/queue.service.js", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import thingsboardTypes from \"../common/types.constant\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5ODc5Mg==", "bodyText": "Maybe you need import from \"./queue-type-list.directive.js\"", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407898792", "createdAt": "2020-04-14T06:38:00Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/index.js", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import thingsboardApiQueue from '../api/queue.service';\n+import queueTypeList from \"../queue/queue-type-list.directive.js\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5OTc3Ng==", "bodyText": "Maybe you need to move this directory to the directory \"component\"", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407899776", "createdAt": "2020-04-14T06:40:25Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/index.js", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import thingsboardApiQueue from '../api/queue.service';\n+import queueTypeList from \"../queue/queue-type-list.directive.js\";\n+\n+export default angular.module('thingsboard.queue', [\n+    thingsboardApiQueue\n+])\n+    .directive('tbQueueTypeList', queueTypeList)\n+    .name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5OTk5Mg==", "bodyText": "Please add translate", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407899992", "createdAt": "2020-04-14T06:40:54Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.tpl.html", "diffHunk": "@@ -0,0 +1,43 @@\n+<!--\n+\n+    Copyright \u00a9 2016-2020 The Thingsboard Authors\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<md-autocomplete ng-required=\"tbRequired\"\n+                 ng-disabled=\"disabled\"\n+                 md-no-cache=\"true\"\n+                 md-input-name=\"queue\"\n+                 ng-model=\"queue\"\n+                 md-selected-item=\"queue\"\n+                 md-search-text=\"queueSearchText\"\n+                 md-items=\"item in fetchQueues(queueSearchText)\"\n+                 md-item-text=\"item\"\n+                 md-min-length=\"0\"\n+                 md-select-on-match=\"false\"\n+                 md-autoselect=\"true\"\n+                 ng-blur=\"queue = queueSearchText\"\n+                 md-menu-class=\"tb-queue-autocomplete\"\n+                 md-clear-button=\"true\"\n+                 placeholder=\"'Select queue name'\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwMDA4MQ==", "bodyText": "Please add translate", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407900081", "createdAt": "2020-04-14T06:41:07Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.tpl.html", "diffHunk": "@@ -0,0 +1,43 @@\n+<!--\n+\n+    Copyright \u00a9 2016-2020 The Thingsboard Authors\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<md-autocomplete ng-required=\"tbRequired\"\n+                 ng-disabled=\"disabled\"\n+                 md-no-cache=\"true\"\n+                 md-input-name=\"queue\"\n+                 ng-model=\"queue\"\n+                 md-selected-item=\"queue\"\n+                 md-search-text=\"queueSearchText\"\n+                 md-items=\"item in fetchQueues(queueSearchText)\"\n+                 md-item-text=\"item\"\n+                 md-min-length=\"0\"\n+                 md-select-on-match=\"false\"\n+                 md-autoselect=\"true\"\n+                 ng-blur=\"queue = queueSearchText\"\n+                 md-menu-class=\"tb-queue-autocomplete\"\n+                 md-clear-button=\"true\"\n+                 placeholder=\"'Select queue name'\"\n+                 md-floating-label=\"Queue Name\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwMzYzNA==", "bodyText": "Switch not need. He doesn't change the input value to the function", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407903634", "createdAt": "2020-04-14T06:49:54Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.directive.js", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import './queue-type-list.scss';\n+\n+/* eslint-disable import/no-unresolved, import/default */\n+\n+import queueTypeListTemplate from './queue-type-list.tpl.html';\n+\n+/* eslint-enable import/no-unresolved, import/default */\n+\n+/*@ngInject*/\n+export default function QueueTypeList($compile, $templateCache, $q, $filter, queueService) {\n+\n+    var linker = function (scope, element, attrs, ngModelCtrl) {\n+        var template = $templateCache.get(queueTypeListTemplate);\n+        element.html(template);\n+\n+        scope.queues = null;\n+        scope.queue = null;\n+        scope.tbRequired = angular.isDefined(scope.tbRequired) ? scope.tbRequired : false;\n+        scope.queueSearchText = '';\n+\n+        var comparator = function(actual, expected) {\n+            if (angular.isUndefined(actual)) {\n+                return false;\n+            }\n+            if ((actual === null) || (expected === null)) {\n+                return actual === expected;\n+            }\n+            return actual.startsWith(expected);\n+        };\n+\n+        scope.fetchQueues = function(searchText) {\n+            var deferred = $q.defer();\n+            loadQueues().then(\n+                function success(queues) {\n+                    var result = $filter('filter')(queues, {'$': searchText}, comparator);\n+                    if (result && result.length) {\n+                        if (searchText && searchText.length && result.indexOf(searchText) === -1) {\n+                            result.push(searchText);\n+                        }\n+                        result.sort();\n+                        deferred.resolve(result);\n+                    }\n+                    else {\n+                        deferred.resolve([searchText]);\n+                    }\n+                },\n+                function fail() {\n+                    deferred.reject();\n+                }\n+            );\n+            return deferred.promise;\n+        };\n+\n+        scope.updateView = function () {\n+            if (!scope.disabled) {\n+                ngModelCtrl.$setViewValue(scope.queue);\n+            }\n+        };\n+\n+        ngModelCtrl.$render = function () {\n+            scope.queue = ngModelCtrl.$viewValue;\n+        };\n+\n+        scope.$watch('queue', function (newValue, prevValue) {\n+            if (!angular.equals(newValue, prevValue)) {\n+                scope.updateView();\n+            }\n+        });\n+\n+        scope.$watch('disabled', function () {\n+            scope.updateView();\n+        });\n+\n+        function loadQueues() {\n+            var deferred = $q.defer();\n+            if (!scope.queues) {\n+                var queuePromise;\n+                switch (scope.queueType) {\n+                    case 'TB_RULE_ENGINE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_CORE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_TRANSPORT':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'JS_EXECUTOR':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwNDk1NA==", "bodyText": "Stylelint: Unexpected missing end-of-source newline (no-missing-end-of-source-newline)", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407904954", "createdAt": "2020-04-14T06:52:57Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.scss", "diffHunk": "@@ -0,0 +1,15 @@\n+/**\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwOTAzNg==", "bodyText": "Maybe you need these logics moved to function fetchQueues", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407909036", "createdAt": "2020-04-14T07:02:07Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.directive.js", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import './queue-type-list.scss';\n+\n+/* eslint-disable import/no-unresolved, import/default */\n+\n+import queueTypeListTemplate from './queue-type-list.tpl.html';\n+\n+/* eslint-enable import/no-unresolved, import/default */\n+\n+/*@ngInject*/\n+export default function QueueTypeList($compile, $templateCache, $q, $filter, queueService) {\n+\n+    var linker = function (scope, element, attrs, ngModelCtrl) {\n+        var template = $templateCache.get(queueTypeListTemplate);\n+        element.html(template);\n+\n+        scope.queues = null;\n+        scope.queue = null;\n+        scope.tbRequired = angular.isDefined(scope.tbRequired) ? scope.tbRequired : false;\n+        scope.queueSearchText = '';\n+\n+        var comparator = function(actual, expected) {\n+            if (angular.isUndefined(actual)) {\n+                return false;\n+            }\n+            if ((actual === null) || (expected === null)) {\n+                return actual === expected;\n+            }\n+            return actual.startsWith(expected);\n+        };\n+\n+        scope.fetchQueues = function(searchText) {\n+            var deferred = $q.defer();\n+            loadQueues().then(\n+                function success(queues) {\n+                    var result = $filter('filter')(queues, {'$': searchText}, comparator);\n+                    if (result && result.length) {\n+                        if (searchText && searchText.length && result.indexOf(searchText) === -1) {\n+                            result.push(searchText);\n+                        }\n+                        result.sort();\n+                        deferred.resolve(result);\n+                    }\n+                    else {\n+                        deferred.resolve([searchText]);\n+                    }\n+                },\n+                function fail() {\n+                    deferred.reject();\n+                }\n+            );\n+            return deferred.promise;\n+        };\n+\n+        scope.updateView = function () {\n+            if (!scope.disabled) {\n+                ngModelCtrl.$setViewValue(scope.queue);\n+            }\n+        };\n+\n+        ngModelCtrl.$render = function () {\n+            scope.queue = ngModelCtrl.$viewValue;\n+        };\n+\n+        scope.$watch('queue', function (newValue, prevValue) {\n+            if (!angular.equals(newValue, prevValue)) {\n+                scope.updateView();\n+            }\n+        });\n+\n+        scope.$watch('disabled', function () {\n+            scope.updateView();\n+        });\n+\n+        function loadQueues() {\n+            var deferred = $q.defer();\n+            if (!scope.queues) {\n+                var queuePromise;\n+                switch (scope.queueType) {\n+                    case 'TB_RULE_ENGINE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_CORE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_TRANSPORT':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'JS_EXECUTOR':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                }\n+\n+                if (queuePromise) {\n+                    queuePromise.then(\n+                        function success(queueArr) {\n+                            scope.queues = [];\n+                            queueArr.data.forEach(function (queue) {\n+                                scope.queues.push(queue);\n+                            });\n+                            deferred.resolve(scope.queues);\n+                        },\n+                        function fail() {\n+                            deferred.reject();\n+                        }\n+                    );\n+                } else {\n+                    deferred.reject();\n+                }\n+            } else {\n+                deferred.resolve(scope.queues);\n+            }\n+            return deferred.promise;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkwOTc4Nw==", "bodyText": "Change this code to filter function", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407909787", "createdAt": "2020-04-14T07:03:52Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.directive.js", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import './queue-type-list.scss';\n+\n+/* eslint-disable import/no-unresolved, import/default */\n+\n+import queueTypeListTemplate from './queue-type-list.tpl.html';\n+\n+/* eslint-enable import/no-unresolved, import/default */\n+\n+/*@ngInject*/\n+export default function QueueTypeList($compile, $templateCache, $q, $filter, queueService) {\n+\n+    var linker = function (scope, element, attrs, ngModelCtrl) {\n+        var template = $templateCache.get(queueTypeListTemplate);\n+        element.html(template);\n+\n+        scope.queues = null;\n+        scope.queue = null;\n+        scope.tbRequired = angular.isDefined(scope.tbRequired) ? scope.tbRequired : false;\n+        scope.queueSearchText = '';\n+\n+        var comparator = function(actual, expected) {\n+            if (angular.isUndefined(actual)) {\n+                return false;\n+            }\n+            if ((actual === null) || (expected === null)) {\n+                return actual === expected;\n+            }\n+            return actual.startsWith(expected);\n+        };\n+\n+        scope.fetchQueues = function(searchText) {\n+            var deferred = $q.defer();\n+            loadQueues().then(\n+                function success(queues) {\n+                    var result = $filter('filter')(queues, {'$': searchText}, comparator);\n+                    if (result && result.length) {\n+                        if (searchText && searchText.length && result.indexOf(searchText) === -1) {\n+                            result.push(searchText);\n+                        }\n+                        result.sort();\n+                        deferred.resolve(result);\n+                    }\n+                    else {\n+                        deferred.resolve([searchText]);\n+                    }\n+                },\n+                function fail() {\n+                    deferred.reject();\n+                }\n+            );\n+            return deferred.promise;\n+        };\n+\n+        scope.updateView = function () {\n+            if (!scope.disabled) {\n+                ngModelCtrl.$setViewValue(scope.queue);\n+            }\n+        };\n+\n+        ngModelCtrl.$render = function () {\n+            scope.queue = ngModelCtrl.$viewValue;\n+        };\n+\n+        scope.$watch('queue', function (newValue, prevValue) {\n+            if (!angular.equals(newValue, prevValue)) {\n+                scope.updateView();\n+            }\n+        });\n+\n+        scope.$watch('disabled', function () {\n+            scope.updateView();\n+        });\n+\n+        function loadQueues() {\n+            var deferred = $q.defer();\n+            if (!scope.queues) {\n+                var queuePromise;\n+                switch (scope.queueType) {\n+                    case 'TB_RULE_ENGINE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_CORE':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'TB_TRANSPORT':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                    case 'JS_EXECUTOR':\n+                        queuePromise = queueService.getTenantQueuesByServiceType(scope.queueType);\n+                        break;\n+                }\n+\n+                if (queuePromise) {\n+                    queuePromise.then(\n+                        function success(queueArr) {\n+                            scope.queues = [];\n+                            queueArr.data.forEach(function (queue) {\n+                                scope.queues.push(queue);\n+                            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMDY4OQ==", "bodyText": "This should perform the function comparator", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407910689", "createdAt": "2020-04-14T07:05:57Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.directive.js", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import './queue-type-list.scss';\n+\n+/* eslint-disable import/no-unresolved, import/default */\n+\n+import queueTypeListTemplate from './queue-type-list.tpl.html';\n+\n+/* eslint-enable import/no-unresolved, import/default */\n+\n+/*@ngInject*/\n+export default function QueueTypeList($compile, $templateCache, $q, $filter, queueService) {\n+\n+    var linker = function (scope, element, attrs, ngModelCtrl) {\n+        var template = $templateCache.get(queueTypeListTemplate);\n+        element.html(template);\n+\n+        scope.queues = null;\n+        scope.queue = null;\n+        scope.tbRequired = angular.isDefined(scope.tbRequired) ? scope.tbRequired : false;\n+        scope.queueSearchText = '';\n+\n+        var comparator = function(actual, expected) {\n+            if (angular.isUndefined(actual)) {\n+                return false;\n+            }\n+            if ((actual === null) || (expected === null)) {\n+                return actual === expected;\n+            }\n+            return actual.startsWith(expected);\n+        };\n+\n+        scope.fetchQueues = function(searchText) {\n+            var deferred = $q.defer();\n+            loadQueues().then(\n+                function success(queues) {\n+                    var result = $filter('filter')(queues, {'$': searchText}, comparator);\n+                    if (result && result.length) {\n+                        if (searchText && searchText.length && result.indexOf(searchText) === -1) {\n+                            result.push(searchText);\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMDkxMg==", "bodyText": "Please add translate", "url": "https://github.com/thingsboard/thingsboard/pull/2612#discussion_r407910912", "createdAt": "2020-04-14T07:06:20Z", "author": {"login": "vvlladd28"}, "path": "ui/src/app/queue/queue-type-list.tpl.html", "diffHunk": "@@ -0,0 +1,43 @@\n+<!--\n+\n+    Copyright \u00a9 2016-2020 The Thingsboard Authors\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<md-autocomplete ng-required=\"tbRequired\"\n+                 ng-disabled=\"disabled\"\n+                 md-no-cache=\"true\"\n+                 md-input-name=\"queue\"\n+                 ng-model=\"queue\"\n+                 md-selected-item=\"queue\"\n+                 md-search-text=\"queueSearchText\"\n+                 md-items=\"item in fetchQueues(queueSearchText)\"\n+                 md-item-text=\"item\"\n+                 md-min-length=\"0\"\n+                 md-select-on-match=\"false\"\n+                 md-autoselect=\"true\"\n+                 ng-blur=\"queue = queueSearchText\"\n+                 md-menu-class=\"tb-queue-autocomplete\"\n+                 md-clear-button=\"true\"\n+                 placeholder=\"'Select queue name'\"\n+                 md-floating-label=\"Queue Name\">\n+    <md-item-template>\n+        <div class=\"tb-queue-item\">\n+            <span md-highlight-text=\"queueSearchText\" md-highlight-flags=\"^i\">{{item}}</span>\n+        </div>\n+    </md-item-template>\n+    <div ng-messages=\"theForm.queue.$error\">\n+        <div translate ng-message=\"required\">Queue name is required!</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24fe2867e96b99f9e6eff3c2e1135672c39cbbda"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e298da410ec0f79ee919facbb3032265f43f0959", "author": {"user": {"login": "Dmitriymush", "name": "Dmitriy Mushat"}}, "url": "https://github.com/thingsboard/thingsboard/commit/e298da410ec0f79ee919facbb3032265f43f0959", "committedDate": "2020-04-14T11:24:40Z", "message": "Develop/2.5 check point node (#3)\n\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77e3a39bac7f58bbe69db975a371efd457ae0957", "author": {"user": {"login": "ShvaykaD", "name": null}}, "url": "https://github.com/thingsboard/thingsboard/commit/77e3a39bac7f58bbe69db975a371efd457ae0957", "committedDate": "2020-04-14T15:19:24Z", "message": "merge with develop/2.5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a462c12ef6c28428b080a030845d9ee765b69b", "author": {"user": {"login": "Dmitriymush", "name": "Dmitriy Mushat"}}, "url": "https://github.com/thingsboard/thingsboard/commit/f2a462c12ef6c28428b080a030845d9ee765b69b", "committedDate": "2020-04-15T12:28:16Z", "message": "Develop/2.5 check point node (#4)\n\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612\r\n\r\n* fixed mistakes to pull https://github.com/thingsboard/thingsboard/pull/2612"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3299, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}