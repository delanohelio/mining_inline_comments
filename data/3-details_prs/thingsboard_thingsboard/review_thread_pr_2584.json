{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzEyNTcw", "number": 2584, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTo0MFrODvcnEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTo0MFrODvcnEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDc4NDE5OnYy", "diffSide": "RIGHT", "path": "application/src/main/java/org/thingsboard/server/service/ttl/AbstractTimeseriesCleanUpService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTo0MFrOGB36oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwODowOTo0MFrOGB36oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYxNzg4OQ==", "bodyText": "Please add initial delay. @scheduled(fixedDelayString = \"${sql.ttl.execution_interval_ms}\", initialDelayString = \"${sql.ttl.execution_interval_ms}\"). No need to overload the system at start.", "url": "https://github.com/thingsboard/thingsboard/pull/2584#discussion_r404617889", "createdAt": "2020-04-07T08:09:40Z", "author": {"login": "ashvayka"}, "path": "application/src/main/java/org/thingsboard/server/service/ttl/AbstractTimeseriesCleanUpService.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * Copyright \u00a9 2016-2020 The Thingsboard Authors\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.thingsboard.server.service.ttl;\n+\n+import lombok.extern.slf4j.Slf4j;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.scheduling.annotation.Scheduled;\n+import org.thingsboard.server.dao.util.PsqlTsAnyDao;\n+\n+import java.sql.Connection;\n+import java.sql.DriverManager;\n+import java.sql.ResultSet;\n+import java.sql.SQLException;\n+import java.sql.SQLWarning;\n+import java.sql.Statement;\n+\n+@PsqlTsAnyDao\n+@Slf4j\n+public abstract class AbstractTimeseriesCleanUpService {\n+\n+    @Value(\"${sql.ttl.ts_key_value_ttl}\")\n+    protected long systemTtl;\n+\n+    @Value(\"${sql.ttl.enabled}\")\n+    private boolean ttlTaskExecutionEnabled;\n+\n+    @Value(\"${spring.datasource.url}\")\n+    private String dbUrl;\n+\n+    @Value(\"${spring.datasource.username}\")\n+    private String dbUserName;\n+\n+    @Value(\"${spring.datasource.password}\")\n+    private String dbPassword;\n+\n+    @Scheduled(fixedDelayString = \"${sql.ttl.execution_interval_ms}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "864add66ee1aaba823e4072dfa4c50a9d7e3a12d"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1385, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}