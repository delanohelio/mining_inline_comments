{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjAwOTM5", "number": 3720, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowODowN1rOE5jz2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowODowN1rOE5jz2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzkxMDAyOnYy", "diffSide": "RIGHT", "path": "common/transport/transport-api/src/main/java/org/thingsboard/server/common/transport/adaptor/JsonConverter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowODowN1rOH0F3IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjowODowN1rOH0F3IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM4NDAzMg==", "bodyText": "Please make a switch based on the credentials type and write the corresponding serialization here. For Basic MQTT you should write all three fields separately.", "url": "https://github.com/thingsboard/thingsboard/pull/3720#discussion_r524384032", "createdAt": "2020-11-16T16:08:07Z", "author": {"login": "ashvayka"}, "path": "common/transport/transport-api/src/main/java/org/thingsboard/server/common/transport/adaptor/JsonConverter.java", "diffHunk": "@@ -414,22 +414,20 @@ public static JsonObject toJson(ProvisionDeviceResponseMsg payload, int requestI\n \n     private static JsonObject toJson(ProvisionDeviceResponseMsg payload, boolean toGateway, int requestId) {\n         JsonObject result = new JsonObject();\n-        if (payload.getProvisionResponseStatus() == TransportProtos.ProvisionResponseStatus.NOT_FOUND) {\n+        if (payload.getStatus() == TransportProtos.ProvisionResponseStatus.NOT_FOUND) {\n             result.addProperty(\"errorMsg\", \"Provision data was not found!\");\n-            result.addProperty(\"provisionDeviceStatus\", ProvisionResponseStatus.NOT_FOUND.name());\n-        } else if (payload.getProvisionResponseStatus() == TransportProtos.ProvisionResponseStatus.FAILURE) {\n+            result.addProperty(\"status\", ProvisionResponseStatus.NOT_FOUND.name());\n+        } else if (payload.getStatus() == TransportProtos.ProvisionResponseStatus.FAILURE) {\n             result.addProperty(\"errorMsg\", \"Failed to provision device!\");\n-            result.addProperty(\"provisionDeviceStatus\", ProvisionResponseStatus.FAILURE.name());\n+            result.addProperty(\"status\", ProvisionResponseStatus.FAILURE.name());\n         } else {\n             if (toGateway) {\n                 result.addProperty(\"id\", requestId);\n             }\n-            result.addProperty(\"deviceId\", new UUID(payload.getDeviceCredentials().getDeviceIdMSB(), payload.getDeviceCredentials().getDeviceIdLSB()).toString());\n-            result.addProperty(\"credentialsType\", payload.getDeviceCredentials().getCredentialsType().name());\n-            result.addProperty(\"credentialsId\", payload.getDeviceCredentials().getCredentialsId());\n+            result.addProperty(\"credentialsType\", payload.getCredentialsType().name());\n             result.addProperty(\"credentialsValue\",\n-                    StringUtils.isEmpty(payload.getDeviceCredentials().getCredentialsValue()) ? null : payload.getDeviceCredentials().getCredentialsValue());\n-            result.addProperty(\"provisionDeviceStatus\", ProvisionResponseStatus.SUCCESS.name());\n+                    StringUtils.isEmpty(payload.getCredentialsValue()) ? null : payload.getCredentialsValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2f6e42b931e601340221b6c7226e5359a50785e"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1308, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}