{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTAxOTMz", "number": 3744, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MDo0M1rOE6FNVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MTozMFrOE6FOxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzM4MTk3OnYy", "diffSide": "RIGHT", "path": "application/src/main/java/org/thingsboard/server/service/apiusage/DefaultTbApiUsageStateService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MDo0M1rOH07c1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MDo0M1rOH07c1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2MjAzNg==", "bodyText": "Please add info about the update to the log.", "url": "https://github.com/thingsboard/thingsboard/pull/3744#discussion_r525262036", "createdAt": "2020-11-17T15:40:43Z", "author": {"login": "ashvayka"}, "path": "application/src/main/java/org/thingsboard/server/service/apiusage/DefaultTbApiUsageStateService.java", "diffHunk": "@@ -286,7 +286,26 @@ private void persistAndNotify(TenantApiUsageState state, Map<ApiFeature, ApiUsag\n         List<TsKvEntry> stateTelemetry = new ArrayList<>();\n         result.forEach(((apiFeature, aState) -> stateTelemetry.add(new BasicTsKvEntry(ts, new StringDataEntry(apiFeature.getApiStateKey(), aState.name())))));\n         tsWsService.saveAndNotifyInternal(state.getTenantId(), state.getApiUsageState().getId(), stateTelemetry, VOID_CALLBACK);\n-        //TODO: notify tenant admin via email!\n+\n+        String email = tenantService.findTenantById(state.getTenantId()).getEmail();\n+\n+        if (StringUtils.isNotEmpty(email)) {\n+            result.forEach((apiFeature, stateValue) -> {\n+                ApiUsageRecordKey[] keys = ApiUsageRecordKey.getKeys(apiFeature);\n+                ApiUsageStateMailMessage[] msgs = new ApiUsageStateMailMessage[keys.length];\n+                for (int i = 0; i < keys.length; i++) {\n+                    ApiUsageRecordKey key = keys[i];\n+                    msgs[i] = new ApiUsageStateMailMessage(key, state.getProfileThreshold(key), state.get(key));\n+                }\n+                try {\n+                    mailService.sendApiFeatureStateEmail(apiFeature, stateValue, email, msgs);\n+                } catch (ThingsboardException e) {\n+                    log.warn(\"[{}] Can't send update of the API state to tenant with provided email [{}]\", state.getTenantId(), email, e);\n+                }\n+            });\n+        } else {\n+            log.warn(\"[{}] Can't send update of the API state to tenant with empty email!\", state.getTenantId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b60f65e0a9449ad8b78306ea3a092f7ccc2eda1b"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzM4NTY0OnYy", "diffSide": "RIGHT", "path": "application/src/main/java/org/thingsboard/server/service/apiusage/DefaultTbApiUsageStateService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MTozMFrOH07fJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNTo0MTozMFrOH07fJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI2MjYyOA==", "bodyText": "Let's move this to a separate thread. This may be very time consuming.", "url": "https://github.com/thingsboard/thingsboard/pull/3744#discussion_r525262628", "createdAt": "2020-11-17T15:41:30Z", "author": {"login": "ashvayka"}, "path": "application/src/main/java/org/thingsboard/server/service/apiusage/DefaultTbApiUsageStateService.java", "diffHunk": "@@ -286,7 +286,26 @@ private void persistAndNotify(TenantApiUsageState state, Map<ApiFeature, ApiUsag\n         List<TsKvEntry> stateTelemetry = new ArrayList<>();\n         result.forEach(((apiFeature, aState) -> stateTelemetry.add(new BasicTsKvEntry(ts, new StringDataEntry(apiFeature.getApiStateKey(), aState.name())))));\n         tsWsService.saveAndNotifyInternal(state.getTenantId(), state.getApiUsageState().getId(), stateTelemetry, VOID_CALLBACK);\n-        //TODO: notify tenant admin via email!\n+\n+        String email = tenantService.findTenantById(state.getTenantId()).getEmail();\n+\n+        if (StringUtils.isNotEmpty(email)) {\n+            result.forEach((apiFeature, stateValue) -> {\n+                ApiUsageRecordKey[] keys = ApiUsageRecordKey.getKeys(apiFeature);\n+                ApiUsageStateMailMessage[] msgs = new ApiUsageStateMailMessage[keys.length];\n+                for (int i = 0; i < keys.length; i++) {\n+                    ApiUsageRecordKey key = keys[i];\n+                    msgs[i] = new ApiUsageStateMailMessage(key, state.getProfileThreshold(key), state.get(key));\n+                }\n+                try {\n+                    mailService.sendApiFeatureStateEmail(apiFeature, stateValue, email, msgs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b60f65e0a9449ad8b78306ea3a092f7ccc2eda1b"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1313, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}