{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzOTQ2OTc5", "number": 3046, "title": "Feature/UUID update", "bodyText": "", "createdAt": "2020-07-03T09:11:27Z", "url": "https://github.com/thingsboard/thingsboard/pull/3046", "merged": true, "mergeCommit": {"oid": "a17a85657cdd508f9e7c77584404ad7596879897"}, "closed": true, "closedAt": "2020-07-07T12:31:19Z", "author": {"login": "YevhenBondarenko"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxPsEegH2gAyNDQzOTQ2OTc5OmJjNjdkZmUxMmE0NzNkZTU5ZGI1MzJkM2UwZjU0NzkxYzg1N2IyM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyk_krgFqTQ0Mzg0MDUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bc67dfe12a473de59db532d3e0f54791c857b23d", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/bc67dfe12a473de59db532d3e0f54791c857b23d", "committedDate": "2020-07-03T09:05:05Z", "message": "added UUID upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adbfb1bf267ff8a8b5731ecf6dd3936415573ae6", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/adbfb1bf267ff8a8b5731ecf6dd3936415573ae6", "committedDate": "2020-07-03T09:05:05Z", "message": "refactored UUID upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aa087a09d670d7033c007d93af81662cd92c93d", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/9aa087a09d670d7033c007d93af81662cd92c93d", "committedDate": "2020-07-03T09:05:05Z", "message": "refactored UUID upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d17ea148f035eac2eedba9a7c62cbff52cf67242", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/d17ea148f035eac2eedba9a7c62cbff52cf67242", "committedDate": "2020-07-03T10:01:52Z", "message": "refactored schema_update_to_uuid.sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7184ba1d89f03b302e6e26dd0d89b0a8cdeb3cf6", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/7184ba1d89f03b302e6e26dd0d89b0a8cdeb3cf6", "committedDate": "2020-07-07T11:12:12Z", "message": "refactored uuid upgrade and added updating alarm relations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b770cbc96886f92ef4d92d2291dc649e8ac9c4f", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/8b770cbc96886f92ef4d92d2291dc649e8ac9c4f", "committedDate": "2020-07-07T11:23:41Z", "message": "refactored updating alarm relations."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ede5894f76cf715dd1156524d27c171118c5cfc", "author": {"user": {"login": "YevhenBondarenko", "name": "Yevhen Bondarenko"}}, "url": "https://github.com/thingsboard/thingsboard/commit/4ede5894f76cf715dd1156524d27c171118c5cfc", "committedDate": "2020-07-07T11:43:18Z", "message": "refactored updating alarm relations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODQwNTEz", "url": "https://github.com/thingsboard/thingsboard/pull/3046#pullrequestreview-443840513", "createdAt": "2020-07-07T12:28:18Z", "commit": {"oid": "4ede5894f76cf715dd1156524d27c171118c5cfc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoyODoxOVrOGt8O3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjoyODoxOVrOGt8O3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgyNTk1MQ==", "bodyText": "Add one more index", "url": "https://github.com/thingsboard/thingsboard/pull/3046#discussion_r450825951", "createdAt": "2020-07-07T12:28:19Z", "author": {"login": "ashvayka"}, "path": "application/src/main/data/upgrade/3.0.1/schema_update_to_uuid.sql", "diffHunk": "@@ -21,21 +21,806 @@ DECLARE\n BEGIN\n     bytes := uuid_send(uuid);\n     RETURN\n-                (\n-                            (\n-                                            (get_byte(bytes, 0)::bigint << 24) |\n-                                            (get_byte(bytes, 1)::bigint << 16) |\n-                                            (get_byte(bytes, 2)::bigint <<  8) |\n-                                            (get_byte(bytes, 3)::bigint <<  0)\n-                                ) + (\n-                                    ((get_byte(bytes, 4)::bigint << 8 |\n-                                      get_byte(bytes, 5)::bigint)) << 32\n-                                ) + (\n-                                    (((get_byte(bytes, 6)::bigint & 15) << 8 | get_byte(bytes, 7)::bigint) & 4095) << 48\n-                                ) - 122192928000000000\n-                    ) / 10000::double precision\n-        ;\n+            (\n+                        (\n+                                        (get_byte(bytes, 0)::bigint << 24) |\n+                                        (get_byte(bytes, 1)::bigint << 16) |\n+                                        (get_byte(bytes, 2)::bigint << 8) |\n+                                        (get_byte(bytes, 3)::bigint << 0)\n+                            ) + (\n+                                ((get_byte(bytes, 4)::bigint << 8 |\n+                                  get_byte(bytes, 5)::bigint)) << 32\n+                            ) + (\n+                                (((get_byte(bytes, 6)::bigint & 15) << 8 | get_byte(bytes, 7)::bigint) & 4095) << 48\n+                            ) - 122192928000000000\n+                ) / 10000::double precision;\n END\n $$ LANGUAGE plpgsql\n-    IMMUTABLE PARALLEL SAFE\n+    IMMUTABLE\n+    PARALLEL SAFE\n     RETURNS NULL ON NULL INPUT;\n+\n+\n+CREATE OR REPLACE FUNCTION column_type_to_uuid(table_name varchar, column_name varchar) RETURNS VOID\n+    LANGUAGE plpgsql AS\n+$$\n+BEGIN\n+    execute format('ALTER TABLE %s RENAME COLUMN %s TO old_%s;', table_name, column_name, column_name);\n+    execute format('ALTER TABLE %s ADD COLUMN %s UUID;', table_name, column_name);\n+    execute format('UPDATE %s SET %s = to_uuid(old_%s) WHERE old_%s is not null;', table_name, column_name, column_name, column_name);\n+    execute format('ALTER TABLE %s DROP COLUMN old_%s;', table_name, column_name);\n+END;\n+$$;\n+\n+CREATE OR REPLACE FUNCTION get_column_type(table_name varchar, column_name varchar, OUT data_type varchar) RETURNS varchar\n+    LANGUAGE plpgsql AS\n+$$\n+BEGIN\n+    execute (format('SELECT data_type from information_schema.columns where table_name = %L and column_name = %L',\n+                    table_name, column_name)) INTO data_type;\n+END;\n+$$;\n+\n+\n+CREATE OR REPLACE PROCEDURE drop_all_idx()\n+    LANGUAGE plpgsql AS\n+$$\n+BEGIN\n+    DROP INDEX IF EXISTS idx_alarm_originator_alarm_type;\n+    DROP INDEX IF EXISTS idx_event_type_entity_id;\n+    DROP INDEX IF EXISTS idx_relation_to_id;\n+    DROP INDEX IF EXISTS idx_relation_from_id;\n+    DROP INDEX IF EXISTS idx_device_customer_id;\n+    DROP INDEX IF EXISTS idx_device_customer_id_and_type;\n+    DROP INDEX IF EXISTS idx_device_type;\n+    DROP INDEX IF EXISTS idx_asset_customer_id;\n+    DROP INDEX IF EXISTS idx_asset_customer_id_and_type;\n+    DROP INDEX IF EXISTS idx_asset_type;\n+END;\n+$$;\n+\n+CREATE OR REPLACE PROCEDURE create_all_idx()\n+    LANGUAGE plpgsql AS\n+$$\n+BEGIN\n+    CREATE INDEX IF NOT EXISTS idx_alarm_originator_alarm_type ON alarm(originator_id, type, start_ts DESC);\n+    CREATE INDEX IF NOT EXISTS idx_event_type_entity_id ON event(tenant_id, event_type, entity_type, entity_id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ede5894f76cf715dd1156524d27c171118c5cfc"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3286, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}