{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyODE0NjI1", "number": 8588, "title": "fix: associate a memo with startup action stored within memo prefix", "bodyText": "If an action that needs a specific connection to act on is stored without a valid identifier for that connection, we should treat is as invalid action; however, there is a special case that needs to be supported for historical reasons--we never made most actions that act on a specific connection do so until #8544; they simply acted on the last connection of a specific type (regardless of the number of connections of a specific type).\nFixes #8582\nFixes #8583", "createdAt": "2020-05-25T15:57:02Z", "url": "https://github.com/JMRI/JMRI/pull/8588", "merged": true, "mergeCommit": {"oid": "802338f1495d65d117a7b1bf2cc97d8ec7195eb1"}, "closed": true, "closedAt": "2020-05-26T03:55:51Z", "author": {"login": "rhwood"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckyM-hgH2gAyNDIyODE0NjI1OjUzNThmOGFlMmQ3MTg2ZGRkZTE0ZWJkNjZiYjczOWI3ZTA3NWVmNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABck0upNAFqTQxNzg0NDM4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5358f8ae2d7186ddde14ebd66bb739b7e075ef71", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/5358f8ae2d7186ddde14ebd66bb739b7e075ef71", "committedDate": "2020-05-25T15:56:47Z", "message": "fix: associate a memo with startup action stored within memo prefix\n\nIf an action that needs a specific connection to act on is stored without a valid identifier for that connection, we should treat is as invalid action; however, there is a special case that needs to be supported for historical reasons--we never made most actions that act on a specific connection do so until #8544; they simply acted on the last connection of a specific type (regardless of the number of connections of a specific type).\n\nFixes #8582\nFixes #8583"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODQ0Mzgw", "url": "https://github.com/JMRI/JMRI/pull/8588#pullrequestreview-417844380", "createdAt": "2020-05-25T18:53:22Z", "commit": {"oid": "5358f8ae2d7186ddde14ebd66bb739b7e075ef71"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo1MzoyMlrOGaIAIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxODo1MzoyMlrOGaIAIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA0NzI2Ng==", "bodyText": "Would it make sense to log (at WARN? INFO?) this occurrence so that people trying to solve a downstream problem (i.e. should the Manager not handle it; I'm not sure they will absent tests) get a hit to look back to hear?  (2 places)", "url": "https://github.com/JMRI/JMRI/pull/8588#discussion_r430047266", "createdAt": "2020-05-25T18:53:22Z", "author": {"login": "bobjacobsen"}, "path": "java/src/apps/configurexml/PerformActionModelXml.java", "diffHunk": "@@ -57,12 +63,36 @@ public boolean load(Element shared, Element perNode) {\n         String className = shared.getAttribute(\"name\").getValue();\n         PerformActionModel model = new PerformActionModel();\n         model.setClassName(className);\n-        for (Element child : shared.getChildren(\"property\")) { // NOI18N\n+        shared.getChildren(\"property\").forEach(child -> { // NOI18N\n+            String value = child.getAttributeValue(\"value\"); // NOI18N\n             if (child.getAttributeValue(\"name\").equals(\"systemPrefix\") // NOI18N\n-                    && child.getAttributeValue(\"value\") != null) { // NOI18N\n-                model.setSystemPrefix(child.getAttributeValue(\"value\")); // NOI18N\n+                    && value != null) {\n+                // handle the situation where the model expects a system prefix\n+                // but was not saved with one in a pre-4.19.7 JMRI instance\n+                // TODO: at some point (June 2022 release?) change entire\n+                // try/catch block to just \"model.setSystemPrefix(value);\"\n+                try {\n+                    Class<?> ac = Class.forName(className);\n+                    if (value.isEmpty() && SystemConnectionAction.class.isAssignableFrom(ac)) {\n+                        SystemConnectionAction<?> a = (SystemConnectionAction<?>) ac.getConstructor().newInstance();\n+                        InstanceManager.getList(SystemConnectionMemo.class)\n+                                .forEach(memo -> a.getSystemConnectionMemoClasses().stream()\n+                                .filter(mc -> memo.getClass().isAssignableFrom(mc))\n+                                .forEach(mc -> model.setSystemPrefix(memo.getSystemPrefix())));\n+                    } else {\n+                        model.setSystemPrefix(value);\n+                    }\n+                } catch (ClassNotFoundException\n+                        | InstantiationException\n+                        | IllegalAccessException\n+                        | IllegalArgumentException\n+                        | InvocationTargetException\n+                        | NoSuchMethodException\n+                        | SecurityException ex) {\n+                    // ignore to allow manager to handle later", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5358f8ae2d7186ddde14ebd66bb739b7e075ef71"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4084, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}