{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTc0OTkw", "number": 8729, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjozMTo1NlrOEIWJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDo1MzozMlrOEItdbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTg2OTE4OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjozMTo1NlrOGoQDUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzowNjowMFrOGobSug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1OTIxNg==", "bodyText": "An alternative approach could possibly not create the default programmer at all and defer creation until this point,  This seemed safer as I did not know the consequences for the former approach. Other better alternatives could also exist?\nThis fix restores CV read / write when using decoder pro with the zimo MXULF.  When the default programmer was created the traffic controller had not been initialized yet so the default programmer had a traffic controller with a value of null.  At this point in the code the traffic controller exists so when the programmer is re-create it has a non-null traffic controller which uses the binary protocol.", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r444859216", "createdAt": "2020-06-24T12:31:56Z", "author": {"login": "AlgerP572"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -141,6 +141,11 @@ public boolean provides(Class<?> type) {\n      * hexfile.HexFileFrame and locormi.LnMessageClient\n      */\n     public void configureManagers() {\n+        \n+        /* Already created during config with default settings. Recreating\n+        * now that the traffic controller exists\n+        */\n+        programmerManager = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1674f4183a5aa9e12296b323a4679b11611294d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg3ODMzOQ==", "bodyText": "I think it would be better to defer creation until after the traffic controller is created.\nIt is possible the earlier creation is technical debt from a previous incarnation.", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r444878339", "createdAt": "2020-06-24T13:06:15Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -141,6 +141,11 @@ public boolean provides(Class<?> type) {\n      * hexfile.HexFileFrame and locormi.LnMessageClient\n      */\n     public void configureManagers() {\n+        \n+        /* Already created during config with default settings. Recreating\n+        * now that the traffic controller exists\n+        */\n+        programmerManager = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1OTIxNg=="}, "originalCommit": {"oid": "c1674f4183a5aa9e12296b323a4679b11611294d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0MzM4Ng==", "bodyText": "Possibly, I'm not super familiar with the architecture.  Let me try to understand if we could defer creation easily or not.  Is using the configure managers method the preferred approach?  I'll try to get all creation to occur within this method.", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r445043386", "createdAt": "2020-06-24T17:06:00Z", "author": {"login": "AlgerP572"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -141,6 +141,11 @@ public boolean provides(Class<?> type) {\n      * hexfile.HexFileFrame and locormi.LnMessageClient\n      */\n     public void configureManagers() {\n+        \n+        /* Already created during config with default settings. Recreating\n+        * now that the traffic controller exists\n+        */\n+        programmerManager = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1OTIxNg=="}, "originalCommit": {"oid": "c1674f4183a5aa9e12296b323a4679b11611294d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDU2MzEyOnYy", "diffSide": "LEFT", "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzo1Njo1N1rOGoqhNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMzo1Njo1N1rOGoqhNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI5Mjg1Mg==", "bodyText": "@pabender The above fix eliminates the need to reset the program manager to null and it creates the program manager with the traffic controller.  I have tested the fix and I am able to read /write my decoders again. \ud83d\udc4d", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r445292852", "createdAt": "2020-06-25T03:56:57Z", "author": {"login": "AlgerP572"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -141,11 +141,6 @@ public boolean provides(Class<?> type) {\n      * hexfile.HexFileFrame and locormi.LnMessageClient\n      */\n     public void configureManagers() {\n-        \n-        /* Already created during config with default settings. Recreating\n-        * now that the traffic controller exists\n-        */\n-        programmerManager = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5467470588a8d02cf8f451761bc7671f656cac71"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NTY4ODc2OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDo1MzozMlrOGo1iWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMjo0MzozOVrOGo437Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3MzM3MA==", "bodyText": "I found the above to lines were the only place that the ProgrammerManger was used before the traffic controller has existed,  Returning true or false directly here allows the creation of the program manager to be deferred and also seems consistent with what was done in this method for the other manager types.", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r445473370", "createdAt": "2020-06-25T10:53:32Z", "author": {"login": "AlgerP572"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -83,11 +83,11 @@ public boolean provides(Class<?> type) {\n         if (getDisabled()) {\n             return false;\n         }\n-        if (type.equals(jmri.GlobalProgrammerManager.class)) {\n-            return getProgrammerManager().isGlobalProgrammerAvailable();\n+        if (type.equals(jmri.GlobalProgrammerManager.class)) {            \n+            return true;\n         }\n-        if (type.equals(jmri.AddressedProgrammerManager.class)) {\n-            return getProgrammerManager().isAddressedModePossible();\n+        if (type.equals(jmri.AddressedProgrammerManager.class)) {            \n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5467470588a8d02cf8f451761bc7671f656cac71"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTUyODA0NQ==", "bodyText": "I don\u2019t think the problem is that the traffic controller doesn\u2019t exist, but that the programmer manager doesn\u2019t exist the first time the provided method is called.\nThis fix is consistent with other systems that use this configuration approach however.", "url": "https://github.com/JMRI/JMRI/pull/8729#discussion_r445528045", "createdAt": "2020-06-25T12:43:39Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrix/zimo/Mx1SystemConnectionMemo.java", "diffHunk": "@@ -83,11 +83,11 @@ public boolean provides(Class<?> type) {\n         if (getDisabled()) {\n             return false;\n         }\n-        if (type.equals(jmri.GlobalProgrammerManager.class)) {\n-            return getProgrammerManager().isGlobalProgrammerAvailable();\n+        if (type.equals(jmri.GlobalProgrammerManager.class)) {            \n+            return true;\n         }\n-        if (type.equals(jmri.AddressedProgrammerManager.class)) {\n-            return getProgrammerManager().isAddressedModePossible();\n+        if (type.equals(jmri.AddressedProgrammerManager.class)) {            \n+            return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3MzM3MA=="}, "originalCommit": {"oid": "5467470588a8d02cf8f451761bc7671f656cac71"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4549, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}