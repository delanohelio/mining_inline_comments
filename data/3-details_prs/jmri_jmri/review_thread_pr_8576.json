{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzQ5MjA4", "number": 8576, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMTozNDozM1rOD_KkPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMTozNjoxNlrOD_Kkdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTU5OTk5OnYy", "diffSide": "RIGHT", "path": "java/src/apps/startup/Bundle.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMTozNDozM1rOGZsJig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjowMDoyMFrOGZsNlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MDkyMg==", "bodyText": "You can write your test without polluting the JMRI sources to do; please remove this.", "url": "https://github.com/JMRI/JMRI/pull/8576#discussion_r429590922", "createdAt": "2020-05-24T01:34:33Z", "author": {"login": "rhwood"}, "path": "java/src/apps/startup/Bundle.properties", "diffHunk": "@@ -60,3 +60,6 @@ ScriptButtonModel.ScriptNotFound=Cannot create button for script {0}; script not\n TriggerRouteModel.RouteNotDefined=Unable to set route \"{0}\". Route not defined.\n #Error thrown when startup pause thread is interrupted.\n StartupPauseModel.Interrupted={0} second startup pause interrupted early.\n+\n+#Remove this string when the class StartupActionFactoryScaffold is removed\n+String  = String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4fe956b65c4bfa6eefa0bfe5f97353909776415"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MTk1Nw==", "bodyText": "Fixed. Thanks.", "url": "https://github.com/JMRI/JMRI/pull/8576#discussion_r429591957", "createdAt": "2020-05-24T02:00:20Z", "author": {"login": "danielb987"}, "path": "java/src/apps/startup/Bundle.properties", "diffHunk": "@@ -60,3 +60,6 @@ ScriptButtonModel.ScriptNotFound=Cannot create button for script {0}; script not\n TriggerRouteModel.RouteNotDefined=Unable to set route \"{0}\". Route not defined.\n #Error thrown when startup pause thread is interrupted.\n StartupPauseModel.Interrupted={0} second startup pause interrupted early.\n+\n+#Remove this string when the class StartupActionFactoryScaffold is removed\n+String  = String", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MDkyMg=="}, "originalCommit": {"oid": "a4fe956b65c4bfa6eefa0bfe5f97353909776415"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTYwMDU1OnYy", "diffSide": "RIGHT", "path": "java/test/apps/startup/StartupActionFactoryScaffold.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMTozNjoxNlrOGZsJzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjowMDoyNFrOGZsNmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MDk5MQ==", "bodyText": "You can write your test without polluting the JMRI sources to do; please return an empty or untranslated String.", "url": "https://github.com/JMRI/JMRI/pull/8576#discussion_r429590991", "createdAt": "2020-05-24T01:36:16Z", "author": {"login": "rhwood"}, "path": "java/test/apps/startup/StartupActionFactoryScaffold.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package apps.startup;\n+\n+import java.util.Locale;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The purpose of this class is to test that a class that extends\n+ * apps.startup.AbstractStartupActionFactory can use the service\n+ * provider apps.startup.StartupActionFactory.\n+ * \n+ * This class will be removed when apps.startup.StartupActionFactory\n+ * and apps.startup.AbstractStartupActionFactory is removed.\n+ * \n+ * Important:\n+ * When this class is removed, the string \"String\" in\n+ * apps.startup.Bundle.properties should be removed. That string is needed\n+ * for the AbstractActionModelTest test.\n+ * \n+ * @author Daniel Bergqvist Copyright (C) 2020\n+ */\n+@SuppressWarnings(\"deprecation\")\n+@ServiceProvider(service = StartupActionFactory.class)\n+public class StartupActionFactoryScaffold extends AbstractStartupActionFactory {\n+\n+    @Override\n+    public String getTitle(Class<?> clazz, Locale locale) throws IllegalArgumentException {\n+        if (!clazz.equals(String.class)) {\n+            throw new IllegalArgumentException();\n+        }\n+        return Bundle.getMessage(locale, \"String\"); // NOI18N", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4fe956b65c4bfa6eefa0bfe5f97353909776415"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MTk2MA==", "bodyText": "Fixed. Thanks.", "url": "https://github.com/JMRI/JMRI/pull/8576#discussion_r429591960", "createdAt": "2020-05-24T02:00:24Z", "author": {"login": "danielb987"}, "path": "java/test/apps/startup/StartupActionFactoryScaffold.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package apps.startup;\n+\n+import java.util.Locale;\n+import org.openide.util.lookup.ServiceProvider;\n+\n+/**\n+ * The purpose of this class is to test that a class that extends\n+ * apps.startup.AbstractStartupActionFactory can use the service\n+ * provider apps.startup.StartupActionFactory.\n+ * \n+ * This class will be removed when apps.startup.StartupActionFactory\n+ * and apps.startup.AbstractStartupActionFactory is removed.\n+ * \n+ * Important:\n+ * When this class is removed, the string \"String\" in\n+ * apps.startup.Bundle.properties should be removed. That string is needed\n+ * for the AbstractActionModelTest test.\n+ * \n+ * @author Daniel Bergqvist Copyright (C) 2020\n+ */\n+@SuppressWarnings(\"deprecation\")\n+@ServiceProvider(service = StartupActionFactory.class)\n+public class StartupActionFactoryScaffold extends AbstractStartupActionFactory {\n+\n+    @Override\n+    public String getTitle(Class<?> clazz, Locale locale) throws IllegalArgumentException {\n+        if (!clazz.equals(String.class)) {\n+            throw new IllegalArgumentException();\n+        }\n+        return Bundle.getMessage(locale, \"String\"); // NOI18N", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5MDk5MQ=="}, "originalCommit": {"oid": "a4fe956b65c4bfa6eefa0bfe5f97353909776415"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4571, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}