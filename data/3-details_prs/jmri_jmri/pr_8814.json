{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTcxNTQ3", "number": 8814, "title": "Remove references to Apps from JmriConfigurationManager", "bodyText": "This PR removes what I believe are the last two code references to the apps package from the jmri package.\nAfter this PR is merged, it will be possible to compile the two pieces independently (I have another change in progress that enables that, which I will push up after this is merged).\nThe last two references were to actions that occur when an error occurs while loading configuration.  This includes the triggers to load both the connection preferences and the full tabbed preferences at runtime.\nI did quite a bit of linting in JmriConfigurationManager and then overrode two methods in a new class under apps and moved the apps calls there.\nAll of the classes that created a JmriConfigurationManager in apps now create an AppsConfigurationManager instead and install that in the InstanceManager.\nThere is still one class (jmri.configurexml.LoadStoreBaseAction) in the jmri tree that creates a JmriConfigurationManager object, but only if there isn't an existing ConfigureManager.\nThere should be no behavior change in apps that follow the JMRI pattern (i.e. extending apps.Apps or apps.AppsBase ), which includes CATS.\n3rd party Apps that do not follow the JMRI pattern may see a change in behavior, in that the preferences may not show by default if those apps are either a) manually installing JmriConfigurationmanager or b) are using LoadStoreBaseAction.", "createdAt": "2020-07-09T01:58:06Z", "url": "https://github.com/JMRI/JMRI/pull/8814", "merged": true, "mergeCommit": {"oid": "edd201fcfba5dabf9aae36cccb2fbe548be642a3"}, "closed": true, "closedAt": "2020-07-14T20:58:29Z", "author": {"login": "pabender"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy5LdWAH2gAyNDQ2NTcxNTQ3OmQ4ZWI4Njk3OWQ1MjIxZThhY2I3OTRkMjhhZGUzMTg2MzgzYTU2OGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0t8TEAH2gAyNDQ2NTcxNTQ3OmUyZmNkZTZmZWQ1YzFiODNhN2FhODFmMGYxZGRjZTUxZGVhODk0M2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8eb86979d5221e8acb794d28ade3186383a568f", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/d8eb86979d5221e8acb794d28ade3186383a568f", "committedDate": "2020-07-08T11:59:24Z", "message": "linting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bea533a0de82d883afe38ef5c83fde97fa8f1702", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/bea533a0de82d883afe38ef5c83fde97fa8f1702", "committedDate": "2020-07-08T13:58:45Z", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1c147a4e7961c8b4d3f81ac2433881b63a4e31", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/cb1c147a4e7961c8b4d3f81ac2433881b63a4e31", "committedDate": "2020-07-08T16:09:11Z", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "814503824749fc333d7acfd020643b1ccb2e0047", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/814503824749fc333d7acfd020643b1ccb2e0047", "committedDate": "2020-07-08T23:33:26Z", "message": "remove reference to apps from JmriConfigurationManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c115c7a40de39f877fc8fe3e009fc4a350158a", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/82c115c7a40de39f877fc8fe3e009fc4a350158a", "committedDate": "2020-07-09T02:05:57Z", "message": "add warning about changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23", "committedDate": "2020-07-09T02:07:44Z", "message": "update correct file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NDMzODIw", "url": "https://github.com/JMRI/JMRI/pull/8814#pullrequestreview-445433820", "createdAt": "2020-07-09T09:14:49Z", "commit": {"oid": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToxNDo1MFrOGvIsLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwOToxNzoyN1rOGvIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA3ODYzNg==", "bodyText": "Do you intend to leave this reference to apps intact?", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452078636", "createdAt": "2020-07-09T09:14:50Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrit/roster/swing/RosterFrame.java", "diffHunk": "@@ -140,58 +140,58 @@ public RosterFrame(String name, String menubarFile, String toolbarFile) {\n     }\n \n     int clickDelay = 0;\n-    JRadioButtonMenuItem contextEdit = new JRadioButtonMenuItem(Bundle.getMessage(\"ButtonEdit\"));\n-    JRadioButtonMenuItem contextOps = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingOnMain\"));\n-    JRadioButtonMenuItem contextService = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingTrack\"));\n-    JTextPane dateUpdated = new JTextPane();\n-    JTextPane dccAddress = new JTextPane();\n-    JTextPane decoderFamily = new JTextPane();\n-    JTextPane decoderModel = new JTextPane();\n-    JRadioButton edit = new JRadioButton(Bundle.getMessage(\"EditOnly\"));\n-    JTextPane filename = new JTextPane();\n+    final JRadioButtonMenuItem contextEdit = new JRadioButtonMenuItem(Bundle.getMessage(\"ButtonEdit\"));\n+    final JRadioButtonMenuItem contextOps = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingOnMain\"));\n+    final JRadioButtonMenuItem contextService = new JRadioButtonMenuItem(Bundle.getMessage(\"ProgrammingTrack\"));\n+    final JTextPane dateUpdated = new JTextPane();\n+    final JTextPane dccAddress = new JTextPane();\n+    final JTextPane decoderFamily = new JTextPane();\n+    final JTextPane decoderModel = new JTextPane();\n+    final JRadioButton edit = new JRadioButton(Bundle.getMessage(\"EditOnly\"));\n+    final JTextPane filename = new JTextPane();\n     JLabel firstHelpLabel;\n     //int firstTimeAddedEntry = 0x00;\n     int groupSplitPaneLocation = 0;\n     RosterGroupsPanel groups;\n     boolean hideGroups = false;\n     boolean hideRosterImage = false;\n-    JTextPane id = new JTextPane();\n+    final JTextPane id = new JTextPane();\n     boolean inStartProgrammer = false;\n     ResizableImagePanel locoImage;\n     JTextPane maxSpeed = new JTextPane();\n-    JTextPane mfg = new JTextPane();\n-    ProgModeSelector modePanel = new ProgServiceModeComboBox();\n-    JTextPane model = new JTextPane();\n-    JLabel operationsModeProgrammerLabel = new JLabel();\n-    JRadioButton ops = new JRadioButton(Bundle.getMessage(\"ProgrammingOnMain\"));\n+    final JTextPane mfg = new JTextPane();\n+    final ProgModeSelector modePanel = new ProgServiceModeComboBox();\n+    final JTextPane model = new JTextPane();\n+    final JLabel operationsModeProgrammerLabel = new JLabel();\n+    final JRadioButton ops = new JRadioButton(Bundle.getMessage(\"ProgrammingOnMain\"));\n     ConnectionConfig opsModeProCon = null;\n-    JTextPane owner = new JTextPane();\n+    final JTextPane owner = new JTextPane();\n     UserPreferencesManager prefsMgr;\n-    JButton prog1Button = new JButton(Bundle.getMessage(\"Program\"));\n-    JButton prog2Button = new JButton(Bundle.getMessage(\"BasicProgrammer\"));\n+    final JButton prog1Button = new JButton(Bundle.getMessage(\"Program\"));\n+    final JButton prog2Button = new JButton(Bundle.getMessage(\"BasicProgrammer\"));\n     ActionListener programModeListener;\n \n     // These are the names of the programmer _files_, not what should be displayed to the user\n     String programmer1 = \"Comprehensive\"; // NOI18N\n     String programmer2 = \"Basic\"; // NOI18N\n \n-    java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle(\"apps.AppsBundle\");\n+    final java.util.ResourceBundle rb = java.util.ResourceBundle.getBundle(\"apps.AppsBundle\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA4MDE3OQ==", "bodyText": "Given that 3 other classes in jmri also use TabbedPreferencesAction, it would be better to provide a preferences window launching action that does not rely on apps instead of breaking apart JmriConfigurationManager.", "url": "https://github.com/JMRI/JMRI/pull/8814#discussion_r452080179", "createdAt": "2020-07-09T09:17:27Z", "author": {"login": "rhwood"}, "path": "java/src/apps/AppsConfigurationManager.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package apps;\n+\n+import apps.gui3.tabbedpreferences.EditConnectionPreferencesDialog;\n+import apps.gui3.tabbedpreferences.TabbedPreferencesAction;\n+import jmri.Application;\n+import jmri.implementation.JmriConfigurationManager;\n+\n+import javax.swing.*;\n+\n+public class AppsConfigurationManager extends JmriConfigurationManager {\n+\n+    @Override\n+    protected void displayErrorListDialog(Object list) {\n+        super.displayErrorListDialog(list);\n+        (new TabbedPreferencesAction()).actionPerformed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55cfaed7c694e81e6a9160dc776ddc1c6c9d0f23"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4362d2fc3054f9712a09106701e5c3d3b07c58cd", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/4362d2fc3054f9712a09106701e5c3d3b07c58cd", "committedDate": "2020-07-09T14:36:46Z", "message": "use a preferences action factory to gain access to tabbed preferences where required."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23cc9e5567c221ab0de7838d479c4b82a50728c8", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/23cc9e5567c221ab0de7838d479c4b82a50728c8", "committedDate": "2020-07-09T17:22:44Z", "message": "use correct key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f72fb429a0845f0cce4fef8d58aaa9d8bdbf40a0", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/f72fb429a0845f0cce4fef8d58aaa9d8bdbf40a0", "committedDate": "2020-07-14T01:00:12Z", "message": "Merge branch 'master' of https://github.com/JMRI/JMRI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2fcde6fed5c1b83a7aa81f0f1ddce51dea8943f", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/e2fcde6fed5c1b83a7aa81f0f1ddce51dea8943f", "committedDate": "2020-07-14T04:01:44Z", "message": "remove accidentally added additional whitespace"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4026, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}