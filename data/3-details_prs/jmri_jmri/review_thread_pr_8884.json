{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwODMwMzIx", "number": 8884, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMTo0N1rOEU5Z-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyMDozMVrOEVBZGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ3NTEzOnYy", "diffSide": "RIGHT", "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMTo0N1rOG7WMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODozMDo1NVrOG7WhPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MjcyNA==", "bodyText": "I'm not good at html, but shouldn't <li> have an ending </li> tag?", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464882724", "createdAt": "2020-08-04T08:21:47Z", "author": {"login": "danielb987"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4ODEyNg==", "bodyText": "These are not mandated if immediately followed by another <li> tag or end of list", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464888126", "createdAt": "2020-08-04T08:30:55Z", "author": {"login": "mattharris"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MjcyNA=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwMzQ4NjU4OnYy", "diffSide": "RIGHT", "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo1OFrOG7WTZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMDoxMTo0NVrOG7aDag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDU4Mw==", "bodyText": "Wouldn't it be good if all the <p> tags have an ending </p> tag?\nI apologize if I'm nitpicking. It's not my intention.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464884583", "createdAt": "2020-08-04T08:24:58Z", "author": {"login": "danielb987"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request\n+            <li>Leave JMRI selected as the report destination\n+            <li>Add a useful title.  That really helps getting attention to your item.\n+            <li>Add a detailed description.  (You can add screen shots to it later on)\n+            <li>Click the check boxes for the information you want to send \n+                along with the report. We recommend you check all three.\n+            <li>Then click the \"Submit to GitHub\" button\n+        </ul>\n+        \n+    <p>A GitHub window will open in your browser. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4OTA4Mg==", "bodyText": "A closing </p> is not mandated and is more of an XHTML -ism.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464889082", "createdAt": "2020-08-04T08:32:32Z", "author": {"login": "mattharris"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request\n+            <li>Leave JMRI selected as the report destination\n+            <li>Add a useful title.  That really helps getting attention to your item.\n+            <li>Add a detailed description.  (You can add screen shots to it later on)\n+            <li>Click the check boxes for the information you want to send \n+                along with the report. We recommend you check all three.\n+            <li>Then click the \"Submit to GitHub\" button\n+        </ul>\n+        \n+    <p>A GitHub window will open in your browser. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDU4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk0NjAyNg==", "bodyText": "Thanks for the explanation of both tags.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464946026", "createdAt": "2020-08-04T10:11:45Z", "author": {"login": "danielb987"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request\n+            <li>Leave JMRI selected as the report destination\n+            <li>Add a useful title.  That really helps getting attention to your item.\n+            <li>Add a detailed description.  (You can add screen shots to it later on)\n+            <li>Click the check boxes for the information you want to send \n+                along with the report. We recommend you check all three.\n+            <li>Then click the \"Submit to GitHub\" button\n+        </ul>\n+        \n+    <p>A GitHub window will open in your browser. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDU4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDc4MzYzOnYy", "diffSide": "RIGHT", "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyMDozMVrOG7ipow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxODoyMjozMVrOG7sMiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw==", "bodyText": "This line throws an UnsupportedOperationException on Debian Linux for me.\nUnsupportedOperationException - if the current platform does not support the Desktop.Action.BROWSE action\nThis seems to be a problem with Java unable to open the browser, so I don't know if it can be fixed, but the exception needs to be handled.\n@pabender Can you test this on your Linux computer?", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465086883", "createdAt": "2020-08-04T14:20:31Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA5MzYxNA==", "bodyText": "I'm not sure, but it seems that Desktop.isSupported( Desktop.Action.BROWSE ) can tell if web browsing is available.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465093614", "createdAt": "2020-08-04T14:29:00Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEzMDkzOA==", "bodyText": "Thanks!\nWe can check/catch that. What's the best way to handle it?  Open a Dialog box with the URL for somebody to manually open it?\nAny idea why it's not working? Perhaps no default browser set?", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465130938", "createdAt": "2020-08-04T15:20:01Z", "author": {"login": "bobjacobsen"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE0OTMxMA==", "bodyText": "We can check/catch that. What's the best way to handle it? Open a Dialog box with the URL for somebody to manually open it?\n\nYes, that seems to be a good solution. And to have a button \"Copy link to clipboard\".", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465149310", "createdAt": "2020-08-04T15:46:08Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE1MTM4Ng==", "bodyText": "Any idea why it's not working? Perhaps no default browser set?\n\nThis page says:\nOn the Solaris Operating System and the Linux platform, this API is dependent on Gnome libraries. If those libraries are unavailable, this method will return false.\nI have Gnome installed, but maybe not all Gnome. I use the Xfce desktop environment. I could try to install all Gnome to make it work, but on the other hand, it's useful that I have a computer there Java cannot open the browser so I can test that JMRI handles that.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465151386", "createdAt": "2020-08-04T15:49:17Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4MTY2Mw==", "bodyText": "I think we need to come up with a different plan.  The URL is too long to really display:\n\n(It would be even longer if I'd put a lot of text in the boxes)", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465181663", "createdAt": "2020-08-04T16:35:35Z", "author": {"login": "bobjacobsen"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE4NzI0OQ==", "bodyText": "I've been looking at a couple of other options that might help us which would get around the need for a GitHub account. But I am on a limited connection until early next week so might not be able to do too much until then.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465187249", "createdAt": "2020-08-04T16:44:52Z", "author": {"login": "mattharris"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5Njc1NA==", "bodyText": "I think we need to come up with a different plan. The URL is too long to really display:\n\nI don't think you need to show the URL. It would probably be enough to have a button \"Copy to clipboard\".\nhttps://stackoverflow.com/questions/3591945/copying-to-the-clipboard-in-java", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465196754", "createdAt": "2020-08-04T17:00:25Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMjE0NA==", "bodyText": "I've push a copy-to-clipboard approach just now.  it asks first, just in case the clipboard contents shouldn't be changed.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465202144", "createdAt": "2020-08-04T17:10:08Z", "author": {"login": "bobjacobsen"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI0MzI3Mw==", "bodyText": "I've push a copy-to-clipboard approach just now. it asks first, just in case the clipboard contents shouldn't be changed.\n\nTested on Debian Linux and it works fine. The only thing I'm thinking of is that the \"Copy to clipboard\" dialog has the button \"Skip\" which I find somewhat confusing, since almost always that button is \"Cancel\". And I think it would be better to only close that dialog box and not the \"Report Issue\" dialog box when clicking on Skip/Cancel. The reason is that when that dialog comes up, the user may be confused and click on Skip/Cancel without really understanding what he is doing, and with the current solution, everything he has written in the \"Report Issue\" dialog is lost.\nIf the button is Cancel and only closes the \"Copy to clipboard\" dialog, the user will come back to the \"Report Issue\" dialog and can try again. I have been in this situation many times, confused with dialog boxes that I don't really understand.\nBut except this small comment, it now works fine on Debian Linux.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465243273", "createdAt": "2020-08-04T18:22:31Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw=="}, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4439, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}