{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxNjU4MDgx", "number": 9198, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNTozN1rOFA2JsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNTozN1rOFA2JsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDMxNTM3OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrit/jython/JynstrumentFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToxNTozN1rOH_VS2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNjoyNzozMlrOH_YXrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MTIyNA==", "bodyText": "Shouln't this be:\nif (! path.toLowerCase().endsWith(\".jyn\")) {\ninstead?", "url": "https://github.com/JMRI/JMRI/pull/9198#discussion_r536171224", "createdAt": "2020-12-04T15:15:37Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrit/jython/JynstrumentFactory.java", "diffHunk": "@@ -66,21 +67,25 @@ public static Jynstrument createInstrument(String path, Object context) {\n     // validate Jynstrument path, return className\n     private static String validate(String path) {\n         if (path == null) {\n+            log.error(\"Path is null\");\n             return null;\n         }\n         if (path.length() - 4 < 0) {\n-            log.error(\"File name too short\");\n+            log.error(\"File name too short (should at least end with .jyn) (got {})\", path);\n             return null;\n         }\n+        if (path.endsWith(File.separator)) {\n+            path = path.substring(0, path.length()-File.separator.length());\n+        }\n         File f = new File(path);\n \n         // Path must be a folder named xyz.jin\n         if (!f.isDirectory()) {\n             log.debug(\"Not a directory, trying parent\");\n             return null;\n         }\n-        if (path.substring(path.length() - 4).compareToIgnoreCase(\".jyn\") != 0) {\n-            log.debug(\"Not an instrument\");\n+        if (! path.toLowerCase().startsWith(\".jyn\", path.length() - 4)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca3854a9ed96c142755277a61aa4f2dc6f50a61c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjIyMTYxNQ==", "bodyText": "yes, definitively, pushing a correction.", "url": "https://github.com/JMRI/JMRI/pull/9198#discussion_r536221615", "createdAt": "2020-12-04T16:27:32Z", "author": {"login": "Lionel642"}, "path": "java/src/jmri/jmrit/jython/JynstrumentFactory.java", "diffHunk": "@@ -66,21 +67,25 @@ public static Jynstrument createInstrument(String path, Object context) {\n     // validate Jynstrument path, return className\n     private static String validate(String path) {\n         if (path == null) {\n+            log.error(\"Path is null\");\n             return null;\n         }\n         if (path.length() - 4 < 0) {\n-            log.error(\"File name too short\");\n+            log.error(\"File name too short (should at least end with .jyn) (got {})\", path);\n             return null;\n         }\n+        if (path.endsWith(File.separator)) {\n+            path = path.substring(0, path.length()-File.separator.length());\n+        }\n         File f = new File(path);\n \n         // Path must be a folder named xyz.jin\n         if (!f.isDirectory()) {\n             log.debug(\"Not a directory, trying parent\");\n             return null;\n         }\n-        if (path.substring(path.length() - 4).compareToIgnoreCase(\".jyn\") != 0) {\n-            log.debug(\"Not an instrument\");\n+        if (! path.toLowerCase().startsWith(\".jyn\", path.length() - 4)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3MTIyNA=="}, "originalCommit": {"oid": "ca3854a9ed96c142755277a61aa4f2dc6f50a61c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4344, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}