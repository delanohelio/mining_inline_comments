{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjMzMjAx", "number": 9129, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxOTozNlrOE0f5bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0NjozM1rOE00Cwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDg0MDE0OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditorAction.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxOTozNlrOHsQejg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzozNzo1NVrOHsvFcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2OTM1OA==", "bodyText": "Could you say a few words about why this is here?  It seems to defeat the purpose of the loop, but perhaps I don't understand what this loop is meant to do.", "url": "https://github.com/JMRI/JMRI/pull/9129#discussion_r516169358", "createdAt": "2020-11-02T18:19:36Z", "author": {"login": "bobjacobsen"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditorAction.java", "diffHunk": "@@ -27,6 +27,8 @@ public void actionPerformed(ActionEvent e) {\n         for (int i = 2; i < 100; i++) {\n             if (InstanceManager.getDefault(EditorManager.class).contains(name)) {\n                 name = \"My Layout \" + i;\n+            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ef96866c595349d30419fd91bf58d19ed0d35e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE5MTg4Mg==", "bodyText": "It's looking for a unique layout name\u2026 If it finds an existing one with the same name then it bumps the name and tries again\u2026 Original code tried all numbers 2 thru 100 (no break). The reality is that it only needs the first one that didn't already exist.", "url": "https://github.com/JMRI/JMRI/pull/9129#discussion_r516191882", "createdAt": "2020-11-02T19:01:43Z", "author": {"login": "geowar1"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditorAction.java", "diffHunk": "@@ -27,6 +27,8 @@ public void actionPerformed(ActionEvent e) {\n         for (int i = 2; i < 100; i++) {\n             if (InstanceManager.getDefault(EditorManager.class).contains(name)) {\n                 name = \"My Layout \" + i;\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2OTM1OA=="}, "originalCommit": {"oid": "b1ef96866c595349d30419fd91bf58d19ed0d35e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3MDgzMg==", "bodyText": "Thanks!  Got it.  Was confused by contains() instead of equals().", "url": "https://github.com/JMRI/JMRI/pull/9129#discussion_r516670832", "createdAt": "2020-11-03T13:37:55Z", "author": {"login": "bobjacobsen"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditorAction.java", "diffHunk": "@@ -27,6 +27,8 @@ public void actionPerformed(ActionEvent e) {\n         for (int i = 2; i < 100; i++) {\n             if (InstanceManager.getDefault(EditorManager.class).contains(name)) {\n                 name = \"My Layout \" + i;\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2OTM1OA=="}, "originalCommit": {"oid": "b1ef96866c595349d30419fd91bf58d19ed0d35e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODE0MDgyOnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrit/display/layoutEditor/TrackSegmentView.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0NjozM1rOHsvb-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOTo1Njo0MFrOHs-WjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3NjYwMA==", "bodyText": "The infinite loop that @danielb987 saw in CI goes through here.  Line 1909 of TrackSegment view in getCentreSeg does a setCoordsCenter call, which goes through getBounds, which in line 574 calls getCentreSeg again.  Not sure whether the underlying problem is here or in line 1909 (why is a get call setting something?), but this is the new code.", "url": "https://github.com/JMRI/JMRI/pull/9129#discussion_r516676600", "createdAt": "2020-11-03T13:46:33Z", "author": {"login": "bobjacobsen"}, "path": "java/src/jmri/jmrit/display/layoutEditor/TrackSegmentView.java", "diffHunk": "@@ -564,6 +564,15 @@ public Rectangle2D getBounds() {\n         result = new Rectangle2D.Double(ep1.getX(), ep1.getY(), 0, 0);\n         result.add(ep2);\n \n+        if (isCircle()) {\n+            result.add(getCoordsCenterCircle());\n+        } else if (isBezier()) {\n+            for (int index = 0; index < bezierControlPoints.size(); index++) {\n+                result.add(bezierControlPoints.get(index));\n+            }\n+        }\n+        result.add(getCentreSeg());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "022cda044f468d318317b851d0af3f2c484cc479"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkyMDk3Mg==", "bodyText": "Thanks for the catch/analysis!\nI added a getCentreSeg() call to getBounds() method to add that point to the returned bounds.\nBut (as you said) the getCentreSeg() method uses getBounds() to calculate where the center seg should be\u2026\nSo we can't call getCentreSeg() here\u2026 but since it calls super.setCoordsCenter(\u2026) we can use super.getCoordsCenter to get that point (without re-calculating it) instead. So\u2026 fixed(?)\n;-)", "url": "https://github.com/JMRI/JMRI/pull/9129#discussion_r516920972", "createdAt": "2020-11-03T19:56:40Z", "author": {"login": "geowar1"}, "path": "java/src/jmri/jmrit/display/layoutEditor/TrackSegmentView.java", "diffHunk": "@@ -564,6 +564,15 @@ public Rectangle2D getBounds() {\n         result = new Rectangle2D.Double(ep1.getX(), ep1.getY(), 0, 0);\n         result.add(ep2);\n \n+        if (isCircle()) {\n+            result.add(getCoordsCenterCircle());\n+        } else if (isBezier()) {\n+            for (int index = 0; index < bezierControlPoints.size(); index++) {\n+                result.add(bezierControlPoints.get(index));\n+            }\n+        }\n+        result.add(getCentreSeg());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3NjYwMA=="}, "originalCommit": {"oid": "022cda044f468d318317b851d0af3f2c484cc479"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4320, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}