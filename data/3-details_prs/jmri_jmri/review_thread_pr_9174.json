{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Njc0ODQ0", "number": 9174, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToyNzoyNlrOFA2gUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToyNzoyNlrOFA2gUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDM3MzMwOnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrix/loconet/SlotManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNToyNzoyNlrOH_V0pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNzoxMzo1MlrOIAGYFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3OTg3OA==", "bodyText": "I expected Spotbugs to fail on this. meterTask is first assigned to null and then assigned to a TimerTask. Spotbugs normally doesn't accept this since the null value is not used.", "url": "https://github.com/JMRI/JMRI/pull/9174#discussion_r536179878", "createdAt": "2020-12-04T15:27:26Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/loconet/SlotManager.java", "diffHunk": "@@ -781,6 +782,55 @@ protected void respondToAddrRequest(LocoNetMessage m, int i) {\n         }\n     }\n \n+    /**\n+     * If it is a slot being sent COMMON,\n+     *  after a delay, get the new status of the slot\n+     * If it is a true slot move, not dispatch or null\n+     *  after a delay, get the new status of the from slot, which varies by CS.\n+     *  the to slot should come in the reply.\n+     * @param m a LocoNet message\n+     * @param i the slot to which it is directed\n+     */\n+    protected void getMoreDetailsForSlot(LocoNetMessage m, int i) {\n+        // is called any time a LocoNet message is received.\n+        // sets up delayed slot read to update our effected slots to match the CS\n+        if (m.getOpCode() == LnConstants.OPC_SLOT_STAT1 &&\n+                ((m.getElement(2) & LnConstants.LOCOSTAT_MASK) == LnConstants.LOCO_COMMON ) ) {\n+            // Changing a slot to common. Depending on a CS and its OpSw, and throttle speed \n+            // it could have its status changed a number of ways.\n+            sendReadSlotDelayed(i,100);\n+        } else if (m.getOpCode() == LnConstants.OPC_MOVE_SLOTS) {\n+            // if a true move get the new from slot status\n+            // the to slot status is sent in the reply\n+            int slotTwo;\n+            slotTwo = m.getElement(2);\n+            if (i != 0 && slotTwo != 0) {\n+                sendReadSlotDelayed(i,100);\n+            }\n+       }\n+    }\n+\n+    /**\n+     * Scedule a delayed slot read.\n+     * @param slotNo - the slot.\n+     * @param delay - delay in msecs.\n+     */\n+    protected void sendReadSlotDelayed(int slotNo, long delay) {\n+        java.util.TimerTask meterTask = null;\n+        meterTask = new java.util.TimerTask() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e50edb2147465962f6dbf8a12f1d91a50b45061"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk3NTM4MQ==", "bodyText": "@Pugwash1\nI think it would be good to fix this before merge of this PR. I think Spotbugs should have failed on this and even if it didn't now, it may fail later on this.\njava.util.TimerTask meterTask = new java.util.TimerTask() {", "url": "https://github.com/JMRI/JMRI/pull/9174#discussion_r536975381", "createdAt": "2020-12-06T07:13:52Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/loconet/SlotManager.java", "diffHunk": "@@ -781,6 +782,55 @@ protected void respondToAddrRequest(LocoNetMessage m, int i) {\n         }\n     }\n \n+    /**\n+     * If it is a slot being sent COMMON,\n+     *  after a delay, get the new status of the slot\n+     * If it is a true slot move, not dispatch or null\n+     *  after a delay, get the new status of the from slot, which varies by CS.\n+     *  the to slot should come in the reply.\n+     * @param m a LocoNet message\n+     * @param i the slot to which it is directed\n+     */\n+    protected void getMoreDetailsForSlot(LocoNetMessage m, int i) {\n+        // is called any time a LocoNet message is received.\n+        // sets up delayed slot read to update our effected slots to match the CS\n+        if (m.getOpCode() == LnConstants.OPC_SLOT_STAT1 &&\n+                ((m.getElement(2) & LnConstants.LOCOSTAT_MASK) == LnConstants.LOCO_COMMON ) ) {\n+            // Changing a slot to common. Depending on a CS and its OpSw, and throttle speed \n+            // it could have its status changed a number of ways.\n+            sendReadSlotDelayed(i,100);\n+        } else if (m.getOpCode() == LnConstants.OPC_MOVE_SLOTS) {\n+            // if a true move get the new from slot status\n+            // the to slot status is sent in the reply\n+            int slotTwo;\n+            slotTwo = m.getElement(2);\n+            if (i != 0 && slotTwo != 0) {\n+                sendReadSlotDelayed(i,100);\n+            }\n+       }\n+    }\n+\n+    /**\n+     * Scedule a delayed slot read.\n+     * @param slotNo - the slot.\n+     * @param delay - delay in msecs.\n+     */\n+    protected void sendReadSlotDelayed(int slotNo, long delay) {\n+        java.util.TimerTask meterTask = null;\n+        meterTask = new java.util.TimerTask() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE3OTg3OA=="}, "originalCommit": {"oid": "6e50edb2147465962f6dbf8a12f1d91a50b45061"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4337, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}