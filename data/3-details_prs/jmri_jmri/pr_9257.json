{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NDkzOTg4", "number": 9257, "title": "messaging enhancements and cleanup, retry some timed-out messages", "bodyText": "remove 'F' and 'f' free-memory messages, these are now being used by DCC-EX for another command\nlogging additions and improvements\nalso request 'Z' at startup for Output definition list", "createdAt": "2020-12-25T01:58:01Z", "url": "https://github.com/JMRI/JMRI/pull/9257", "merged": true, "mergeCommit": {"oid": "6529b2aca96c333810f1105091f114decd075a30"}, "closed": true, "closedAt": "2020-12-27T14:41:44Z", "author": {"login": "mstevetodd"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpI9t9gH2gAyNTQ1NDkzOTg4OmM4M2MwYTNmODMyYTZlNmMxZjI1ZmU5MTljYmE3MTM0NTk1NmE5NGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqH1uGAFqTU1ODg5OTcxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c83c0a3f832a6e6c1f25fe919cba71345956a94f", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/c83c0a3f832a6e6c1f25fe919cba71345956a94f", "committedDate": "2020-12-24T00:54:47Z", "message": "messaging enhancements and cleanup, retry some failed messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2345f61c9a4060c93878fbece622ac75710ea03", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/a2345f61c9a4060c93878fbece622ac75710ea03", "committedDate": "2020-12-25T01:36:04Z", "message": "also request list of Output defs at startup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a7450732137294f89b6348fe015c0d23c0eb69a", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/4a7450732137294f89b6348fe015c0d23c0eb69a", "committedDate": "2020-12-25T03:32:03Z", "message": "request periodic 's'tatus messages for USB (already in Network)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244171d1faf400f2c8d0760b769d380aeff57522", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/244171d1faf400f2c8d0760b769d380aeff57522", "committedDate": "2020-12-25T14:07:23Z", "message": "a few comment corrections (to restart Travis)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODI3MjU5", "url": "https://github.com/JMRI/JMRI/pull/9257#pullrequestreview-558827259", "createdAt": "2020-12-25T16:24:00Z", "commit": {"oid": "244171d1faf400f2c8d0760b769d380aeff57522"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxNjoyNDowMFrOILdlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxNjozNzowOVrOILdp9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg4OTkxNA==", "bodyText": "Is toString() required here? I'm not sure, but I think you can remove the toString() call.\nMaybe the toString() call is cheap and if so, not a problem. But the reason for the check of log.isDebugEnabled() is to not call toString() if debug is disabled.\nIf you have this line as below instead, this problem goes away:\nlog.debug(\"Notified of timeout on message '{}'\", msg);\nI think this will work since I think log.debug will call msg.toString(), but I'm not sure and I haven't tested it lately.", "url": "https://github.com/JMRI/JMRI/pull/9257#discussion_r548889914", "createdAt": "2020-12-25T16:24:00Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/dccpp/DCCppProgrammer.java", "diffHunk": "@@ -264,9 +264,7 @@ synchronized public void message(DCCppMessage l) {\n     // Handle a timeout notification\n     @Override\n     public void notifyTimeout(DCCppMessage msg) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(\"Notified of timeout on message{}\", msg.toString());\n-        }\n+        log.debug(\"Notified of timeout on message '{}'\", msg.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "244171d1faf400f2c8d0760b769d380aeff57522"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODg5MTEyNg==", "bodyText": "I'm afraid that this will not work.\nhttps://docs.oracle.com/javase/7/docs/api/java/util/Timer.html#schedule(java.util.TimerTask,%20java.util.Date)\nQuote from the Timer javadoc:\nIllegalStateException - if task was already scheduled or cancelled, timer was cancelled, or timer thread terminated.\nSo if the timer task has been cancelled, can it then be scheduled again? I'm not sure about that.\nI think you always need to create a new timer task.", "url": "https://github.com/JMRI/JMRI/pull/9257#discussion_r548891126", "createdAt": "2020-12-25T16:37:09Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/dccpp/serial/DCCppAdapter.java", "diffHunk": "@@ -151,6 +156,28 @@ public DataOutputStream getOutputStream() {\n         return null;\n     }\n \n+    /**\n+     * Set up the keepAliveTimer, and start it.\n+     */\n+    private void keepAliveTimer() {\n+        if (keepAliveTimer == null) {\n+            keepAliveTimer = new java.util.TimerTask(){\n+                    @Override\n+                    public void run() {\n+                        // If the timer times out, send a request for status\n+                        DCCppAdapter.this.getSystemConnectionMemo().getDCCppTrafficController()\n+                            .sendDCCppMessage(\n+                                              jmri.jmrix.dccpp.DCCppMessage.makeCSStatusMsg(),\n+                                              null);\n+                    }\n+                };\n+        } else {\n+            keepAliveTimer.cancel();\n+        }\n+        jmri.util.TimerUtil.schedule(keepAliveTimer, keepAliveTimeoutValue, keepAliveTimeoutValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "244171d1faf400f2c8d0760b769d380aeff57522"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "212609cc65cc7422b8ee34f0d0537355d4a9b3cb", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/212609cc65cc7422b8ee34f0d0537355d4a9b3cb", "committedDate": "2020-12-26T16:14:46Z", "message": "avoid overhead of msg.toString() in debug messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODg0NzUy", "url": "https://github.com/JMRI/JMRI/pull/9257#pullrequestreview-558884752", "createdAt": "2020-12-26T17:53:08Z", "commit": {"oid": "212609cc65cc7422b8ee34f0d0537355d4a9b3cb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxNzo1MzowOFrOILlOxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQxNzo1MzoxOFrOILlO0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxNTIzNg==", "bodyText": "This toString() can be removed too.", "url": "https://github.com/JMRI/JMRI/pull/9257#discussion_r549015236", "createdAt": "2020-12-26T17:53:08Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/dccpp/DCCppTurnoutManager.java", "diffHunk": "@@ -71,10 +72,8 @@ public Turnout createNewTurnout(@Nonnull String systemName, String userName) {\n      */\n     @Override\n     public void message(DCCppReply l) {\n-        if (log.isDebugEnabled()) {\n-            log.debug(\"received message: {}\", l.toString());\n-        }\n         if (l.isTurnoutReply()) {\n+            log.debug(\"received Turnout Reply message: {}\", l.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "212609cc65cc7422b8ee34f0d0537355d4a9b3cb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTAxNTI1MQ==", "bodyText": "This toString() can be removed too.", "url": "https://github.com/JMRI/JMRI/pull/9257#discussion_r549015251", "createdAt": "2020-12-26T17:53:18Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/jmrix/dccpp/DCCppTurnoutManager.java", "diffHunk": "@@ -97,6 +96,7 @@ public void message(DCCppReply l) {\n                 }\n             }\n         } else if (l.isOutputCmdReply()) {\n+            log.debug(\"received Output Cmd Reply message: {}\", l.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "212609cc65cc7422b8ee34f0d0537355d4a9b3cb"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef5800cd699b67ff8f11e6c83da145f0dd663a4b", "author": {"user": {"login": "mstevetodd", "name": "mstevetodd"}}, "url": "https://github.com/JMRI/JMRI/commit/ef5800cd699b67ff8f11e6c83da145f0dd663a4b", "committedDate": "2020-12-27T01:57:09Z", "message": "more debug message improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODk5NzEz", "url": "https://github.com/JMRI/JMRI/pull/9257#pullrequestreview-558899713", "createdAt": "2020-12-27T02:10:04Z", "commit": {"oid": "ef5800cd699b67ff8f11e6c83da145f0dd663a4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3894, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}