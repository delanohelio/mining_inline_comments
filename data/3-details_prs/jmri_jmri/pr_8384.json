{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NjUwNzM5", "number": 8384, "title": "Spotbugs Null on some path", "bodyText": "", "createdAt": "2020-04-19T11:46:14Z", "url": "https://github.com/JMRI/JMRI/pull/8384", "merged": true, "mergeCommit": {"oid": "3980b547a613f469ba99c7532d7d0f856aab1590"}, "closed": true, "closedAt": "2020-04-21T04:14:03Z", "author": {"login": "icklesteve"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcY_g-VAH2gAyNDA1NjUwNzM5OjFjYTgyMWJjZTVmOGQzOTRiMDY0NjcxOTkyNDVjMWM4MGI1ZTcwZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZn3DQgFqTM5Njg5Mjc0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3", "author": {"user": {"login": "icklesteve", "name": "Steve Young"}}, "url": "https://github.com/JMRI/JMRI/commit/1ca821bce5f8d394b06467199245c1c80b5e70d3", "committedDate": "2020-04-19T00:40:18Z", "message": "NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDE2MjI1", "url": "https://github.com/JMRI/JMRI/pull/8384#pullrequestreview-396016225", "createdAt": "2020-04-19T13:11:04Z", "commit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMzoxMTowNFrOGH3diA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMzoxNTo0MFrOGH3g7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkwMTg5Ng==", "bodyText": "Please use a SuppressWarning annotation here\u2014if someone has removed parts of a JMRI installation that we can\u2019t compile without, we should crash on the NPE (or whatever error the JmriScriptEngineManager will throw because missing dependencies are not present instead of logging here.", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410901896", "createdAt": "2020-04-19T13:11:04Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrit/jython/JynstrumentFactory.java", "diffHunk": "@@ -33,6 +33,10 @@ public static Jynstrument createInstrument(String path, Object context) {\n         }\n         String jyFile = path + File.separator + className + \".py\";\n         ScriptEngine engine = JmriScriptEngineManager.getDefault().getEngine(JmriScriptEngineManager.PYTHON);\n+        if (engine==null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkwMjYxNA==", "bodyText": "It is not an internal error for a LayoutBlock to be null, so a JsonException should not indicate such. Also the doGet you replaced will either return a non-null result or throw a JsonException, so this check here for null is merely complexity for a situation that should not be possible.", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410902614", "createdAt": "2020-04-19T13:14:48Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/server/json/layoutblock/JsonLayoutBlockHttpService.java", "diffHunk": "@@ -52,7 +52,11 @@ public JsonLayoutBlockHttpService(ObjectMapper mapper) {\n \n     @Override\n     public JsonNode doGet(String type, String name, JsonNode data, JsonRequest request) throws JsonException {\n-        return doGet(InstanceManager.getDefault(LayoutBlockManager.class).getBySystemName(name), name, type, request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkwMjc2NQ==", "bodyText": "Please use a SuppressWarning annotation here\u2014if someone has removed parts of a JMRI installation that we can\u2019t compile without, we should crash on the NPE (or whatever error the JmriScriptEngineManager will throw because missing dependencies are not present instead of logging here.", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410902765", "createdAt": "2020-04-19T13:15:40Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrit/jython/InputWindow.java", "diffHunk": "@@ -179,7 +179,10 @@ protected boolean loadFile(JFileChooser fileChooser) {\n                     languages.setSelectedItem(JmriScriptEngineManager.getDefault().getFactoryByExtension(Files.getFileExtension(file.getName())).getLanguageName());\n                 } catch (ScriptException npe) {\n                     log.error(\"Unable to identify script language for {}, assuming its Python.\", file);\n-                    languages.setSelectedItem(JmriScriptEngineManager.getDefault().getFactory(JmriScriptEngineManager.PYTHON).getLanguageName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MDIyNjA2", "url": "https://github.com/JMRI/JMRI/pull/8384#pullrequestreview-396022606", "createdAt": "2020-04-19T14:06:18Z", "commit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNDowNjoxOFrOGH4Ldw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxNDowODoxNVrOGH4MqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMzY1NQ==", "bodyText": "Do we have a test that makes sure colorToColorName and colorToString produce the same results for the named colors?\nMy concern is that the strings produced here MAY be stored in panel files, and we need to make sure we don\u2019t break that.", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410913655", "createdAt": "2020-04-19T14:06:18Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -7144,7 +7144,7 @@ public Color getDefaultTrackColorColor() {\n \n     @Nonnull\n     public String getDefaultOccupiedTrackColor() {\n-        return ColorUtil.colorToColorName(defaultOccupiedTrackColor);\n+        return ColorUtil.colorToString(defaultOccupiedTrackColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMzgyNA==", "bodyText": "Same comment about colors", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410913824", "createdAt": "2020-04-19T14:07:42Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -7160,7 +7160,7 @@ public Color getDefaultOccupiedTrackColorColor() {\n \n     @Nonnull\n     public String getDefaultAlternativeTrackColor() {\n-        return ColorUtil.colorToColorName(defaultAlternativeTrackColor);\n+        return ColorUtil.colorToString(defaultAlternativeTrackColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMzg3MQ==", "bodyText": "Same comment about colors", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410913871", "createdAt": "2020-04-19T14:07:55Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -7176,17 +7176,17 @@ public Color getDefaultAlternativeTrackColorColor() {\n \n     @Nonnull\n     public String getDefaultTextColor() {\n-        return ColorUtil.colorToColorName(defaultTextColor);\n+        return ColorUtil.colorToString(defaultTextColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMzkwMw==", "bodyText": "Same comment about colors", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410913903", "createdAt": "2020-04-19T14:08:05Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -7176,17 +7176,17 @@ public Color getDefaultAlternativeTrackColorColor() {\n \n     @Nonnull\n     public String getDefaultTextColor() {\n-        return ColorUtil.colorToColorName(defaultTextColor);\n+        return ColorUtil.colorToString(defaultTextColor);\n     }\n \n     @Nonnull\n     public String getTurnoutCircleColor() {\n-        return ColorUtil.colorToColorName(turnoutCircleColor);\n+        return ColorUtil.colorToString(turnoutCircleColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDkxMzk2MQ==", "bodyText": "Same comment about colors", "url": "https://github.com/JMRI/JMRI/pull/8384#discussion_r410913961", "createdAt": "2020-04-19T14:08:15Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrit/display/layoutEditor/LayoutEditor.java", "diffHunk": "@@ -7176,17 +7176,17 @@ public Color getDefaultAlternativeTrackColorColor() {\n \n     @Nonnull\n     public String getDefaultTextColor() {\n-        return ColorUtil.colorToColorName(defaultTextColor);\n+        return ColorUtil.colorToString(defaultTextColor);\n     }\n \n     @Nonnull\n     public String getTurnoutCircleColor() {\n-        return ColorUtil.colorToColorName(turnoutCircleColor);\n+        return ColorUtil.colorToString(turnoutCircleColor);\n     }\n \n     @Nonnull\n     public String getTurnoutCircleThrownColor() {\n-        return ColorUtil.colorToColorName(turnoutCircleThrownColor);\n+        return ColorUtil.colorToString(turnoutCircleThrownColor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca821bce5f8d394b06467199245c1c80b5e70d3"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cc22a69a37217f11ffcc1de3bdbb4d21f1218b9", "author": {"user": {"login": "icklesteve", "name": "Steve Young"}}, "url": "https://github.com/JMRI/JMRI/commit/4cc22a69a37217f11ffcc1de3bdbb4d21f1218b9", "committedDate": "2020-04-20T13:40:25Z", "message": "add SuppressFBWarnings as per feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ef216b4e2a33a859cde9cc6973a115d42e341d6", "author": {"user": {"login": "icklesteve", "name": "Steve Young"}}, "url": "https://github.com/JMRI/JMRI/commit/6ef216b4e2a33a859cde9cc6973a115d42e341d6", "committedDate": "2020-04-20T15:00:28Z", "message": "further annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjgzMTQ5", "url": "https://github.com/JMRI/JMRI/pull/8384#pullrequestreview-396683149", "createdAt": "2020-04-20T17:55:25Z", "commit": {"oid": "6ef216b4e2a33a859cde9cc6973a115d42e341d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODkyNzQ3", "url": "https://github.com/JMRI/JMRI/pull/8384#pullrequestreview-396892747", "createdAt": "2020-04-20T23:40:37Z", "commit": {"oid": "6ef216b4e2a33a859cde9cc6973a115d42e341d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4088, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}