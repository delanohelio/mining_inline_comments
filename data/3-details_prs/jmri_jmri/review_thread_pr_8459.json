{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNDM1MDI3", "number": 8459, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo0Nzo0M1rOD4BwfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzowMjoxOFrOD4CGkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDc1NjQ1OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/Throttle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjo0Nzo0M1rOGOnqLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzoxMDo0NVrOGOohNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzAyMw==", "bodyText": "All these default methods should be public. In Java 11+, interfaces can have non-public methods, so while these are effectively public in Java 8, I don\u2019t think they are in Java 11+.", "url": "https://github.com/JMRI/JMRI/pull/8459#discussion_r417983023", "createdAt": "2020-04-30T12:47:43Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/Throttle.java", "diffHunk": "@@ -155,244 +183,975 @@\n      */\n     public boolean getIsForward();\n \n+    /**\n+     * Set direction.\n+     *\n+     * @param forward true if forward, false if reverse or undefined\n+     */\n     public void setIsForward(boolean forward);\n \n     // functions - note that we use the naming for DCC, though that's not the implication;\n     // see also DccThrottle interface\n-    public boolean getF0();\n-\n-    public void setF0(boolean f0);\n-\n-    public boolean getF1();\n-\n-    public void setF1(boolean f1);\n-\n-    public boolean getF2();\n-\n-    public void setF2(boolean f2);\n-\n-    public boolean getF3();\n-\n-    public void setF3(boolean f3);\n-\n-    public boolean getF4();\n-\n-    public void setF4(boolean f4);\n-\n-    public boolean getF5();\n-\n-    public void setF5(boolean f5);\n-\n-    public boolean getF6();\n-\n-    public void setF6(boolean f6);\n-\n-    public boolean getF7();\n-\n-    public void setF7(boolean f7);\n-\n-    public boolean getF8();\n-\n-    public void setF8(boolean f8);\n-\n-    public boolean getF9();\n-\n-    public void setF9(boolean f9);\n-\n-    public boolean getF10();\n+    \n+    /**\n+     * Set Loco Function and send to Layout.\n+     * @param functionNum Function Number, 0-28\n+     * @param newState New Function State. True on, false off.\n+     */\n+    public abstract void setFunction(int functionNum, boolean newState);\n+    \n+    /**\n+     * Get Loco Function status.\n+     * @param functionNum Function Number, 0-28\n+     * @return Function State. True on, false off.\n+     */\n+    public boolean getFunction(int functionNum);\n+    \n+    /**\n+     * Set Momentary Loco Function and send to Layout.\n+     * @param momFuncNum Momentary Function Number, 0-28\n+     * @param state New Function State. True on, false off.\n+     */\n+    public void setFunctionMomentary(int momFuncNum, boolean state);\n+    \n+    /**\n+     * Get the Momentary Function Value.\n+     * @param fN Momentary function number\n+     * @return true if momentary function is on, else false.\n+     */\n+    public boolean getFunctionMomentary(int fN);\n+            \n+    /**\n+     * Get Function 0 Status.\n+     * @return true for Function On, false for Function Off.\n+     */\n+    default boolean getF0() {\n+        return getFunction(0);\n+    }\n \n-    public void setF10(boolean f10);\n+    /**\n+     * Get Function 1 Status.\n+     * @return true for Function On, false for Function Off.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3552599bc36a117b4a26f32ee7fdca3614fcf2a"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5NzExMA==", "bodyText": "Thanks, I was wondering about that but search engine not helpful on this occasion ( as didn't realise the 11+ tweak ), will fix.", "url": "https://github.com/JMRI/JMRI/pull/8459#discussion_r417997110", "createdAt": "2020-04-30T13:10:45Z", "author": {"login": "icklesteve"}, "path": "java/src/jmri/Throttle.java", "diffHunk": "@@ -155,244 +183,975 @@\n      */\n     public boolean getIsForward();\n \n+    /**\n+     * Set direction.\n+     *\n+     * @param forward true if forward, false if reverse or undefined\n+     */\n     public void setIsForward(boolean forward);\n \n     // functions - note that we use the naming for DCC, though that's not the implication;\n     // see also DccThrottle interface\n-    public boolean getF0();\n-\n-    public void setF0(boolean f0);\n-\n-    public boolean getF1();\n-\n-    public void setF1(boolean f1);\n-\n-    public boolean getF2();\n-\n-    public void setF2(boolean f2);\n-\n-    public boolean getF3();\n-\n-    public void setF3(boolean f3);\n-\n-    public boolean getF4();\n-\n-    public void setF4(boolean f4);\n-\n-    public boolean getF5();\n-\n-    public void setF5(boolean f5);\n-\n-    public boolean getF6();\n-\n-    public void setF6(boolean f6);\n-\n-    public boolean getF7();\n-\n-    public void setF7(boolean f7);\n-\n-    public boolean getF8();\n-\n-    public void setF8(boolean f8);\n-\n-    public boolean getF9();\n-\n-    public void setF9(boolean f9);\n-\n-    public boolean getF10();\n+    \n+    /**\n+     * Set Loco Function and send to Layout.\n+     * @param functionNum Function Number, 0-28\n+     * @param newState New Function State. True on, false off.\n+     */\n+    public abstract void setFunction(int functionNum, boolean newState);\n+    \n+    /**\n+     * Get Loco Function status.\n+     * @param functionNum Function Number, 0-28\n+     * @return Function State. True on, false off.\n+     */\n+    public boolean getFunction(int functionNum);\n+    \n+    /**\n+     * Set Momentary Loco Function and send to Layout.\n+     * @param momFuncNum Momentary Function Number, 0-28\n+     * @param state New Function State. True on, false off.\n+     */\n+    public void setFunctionMomentary(int momFuncNum, boolean state);\n+    \n+    /**\n+     * Get the Momentary Function Value.\n+     * @param fN Momentary function number\n+     * @return true if momentary function is on, else false.\n+     */\n+    public boolean getFunctionMomentary(int fN);\n+            \n+    /**\n+     * Get Function 0 Status.\n+     * @return true for Function On, false for Function Off.\n+     */\n+    default boolean getF0() {\n+        return getFunction(0);\n+    }\n \n-    public void setF10(boolean f10);\n+    /**\n+     * Get Function 1 Status.\n+     * @return true for Function On, false for Function Off.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk4MzAyMw=="}, "originalCommit": {"oid": "c3552599bc36a117b4a26f32ee7fdca3614fcf2a"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDgxMjk4OnYy", "diffSide": "RIGHT", "path": "java/test/jmri/jmrix/openlcb/OlcbThrottleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzowMjoxOFrOGOoNJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzoyNzo1N1rOGOpONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5MTk3Mg==", "bodyText": "There is a specific JunitUtil method for handling the BlockManager (which I see no attempt to terminate in this test, so the comments incorrect).", "url": "https://github.com/JMRI/JMRI/pull/8459#discussion_r417991972", "createdAt": "2020-04-30T13:02:18Z", "author": {"login": "rhwood"}, "path": "java/test/jmri/jmrix/openlcb/OlcbThrottleTest.java", "diffHunk": "@@ -409,6 +409,7 @@ public static void postClassTearDown() {\n         memo = null;\n         connection = null;\n         nodeID = null;\n+        JUnitUtil.clearShutDownManager(); // put in place because Block Manager was not terminated properly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3552599bc36a117b4a26f32ee7fdca3614fcf2a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAwODYzMQ==", "bodyText": "Thanks, hadn't spotted JUnitUtil.deregisterBlockManagerShutdownTask(); before.", "url": "https://github.com/JMRI/JMRI/pull/8459#discussion_r418008631", "createdAt": "2020-04-30T13:27:57Z", "author": {"login": "icklesteve"}, "path": "java/test/jmri/jmrix/openlcb/OlcbThrottleTest.java", "diffHunk": "@@ -409,6 +409,7 @@ public static void postClassTearDown() {\n         memo = null;\n         connection = null;\n         nodeID = null;\n+        JUnitUtil.clearShutDownManager(); // put in place because Block Manager was not terminated properly", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk5MTk3Mg=="}, "originalCommit": {"oid": "c3552599bc36a117b4a26f32ee7fdca3614fcf2a"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4602, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}