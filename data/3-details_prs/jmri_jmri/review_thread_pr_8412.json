{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3OTYzOTkx", "number": 8412, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDo0NDozOVrOD1ifqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDo0NDozOVrOD1ifqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDY2MjgzOnYy", "diffSide": "RIGHT", "path": "java/src/jmri/util/ThreadingUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMDo0NDozOVrOGLB0Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo0NToxN1rOGLD6jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNzI1MQ==", "bodyText": "It seems to me this method can create multiple ThreadGroups named \"JMRI\". Are we wanting to allow that, or are we wanting there to be just one ThreadGroup named \"JMRI\"?", "url": "https://github.com/JMRI/JMRI/pull/8412#discussion_r414217251", "createdAt": "2020-04-24T00:44:39Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/util/ThreadingUtil.java", "diffHunk": "@@ -224,6 +224,25 @@ static public boolean isGUIThread() {\n         return SwingUtilities.isEventDispatchThread();\n     }\n \n+    /**\n+     * Get the JMRI default thread group.\n+     * This should be passed to as the first argument to the {@link Thread} constructor\n+     * so we can track JMRI-created threads.\n+     */\n+    static public ThreadGroup getJmriThreadGroup() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87d51f7d5ae2fb52c28400493e6982920d39309f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1MTY2MA==", "bodyText": "Once the \"JMRI\" group has been created on the first pass, this navigates the ThreadGroup tree to find the guaranteed \"main\" root, then down to find the \"JMRI\" group.", "url": "https://github.com/JMRI/JMRI/pull/8412#discussion_r414251660", "createdAt": "2020-04-24T02:45:17Z", "author": {"login": "bobjacobsen"}, "path": "java/src/jmri/util/ThreadingUtil.java", "diffHunk": "@@ -224,6 +224,25 @@ static public boolean isGUIThread() {\n         return SwingUtilities.isEventDispatchThread();\n     }\n \n+    /**\n+     * Get the JMRI default thread group.\n+     * This should be passed to as the first argument to the {@link Thread} constructor\n+     * so we can track JMRI-created threads.\n+     */\n+    static public ThreadGroup getJmriThreadGroup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIxNzI1MQ=="}, "originalCommit": {"oid": "87d51f7d5ae2fb52c28400493e6982920d39309f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4592, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}