{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTA0NjMw", "number": 8631, "title": "Xnet turnout monitor outbound", "bodyText": "@svatoun convinced me that it was necessary to adjust the internal state machine for XpressNet turnouts.\nThe code in this PR forces the turnout to not change state when a message is dispatched to the traffic controller, but to instead change state when the turnout sees the last message it queued echoed back to it by the traffic controller.\nThis simplified some of the feedback processing logic, since we no longer have to be worry, in the turnout, about whether or not we triggered the feedback.", "createdAt": "2020-06-03T23:27:00Z", "url": "https://github.com/JMRI/JMRI/pull/8631", "merged": true, "mergeCommit": {"oid": "44b989f3fc990300b9142d2e230ce277c5bb9906"}, "closed": true, "closedAt": "2020-06-04T21:22:22Z", "author": {"login": "pabender"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnh-4qgH2gAyNDI3NTA0NjMwOjdjYTUxZjNhMTA4ZjBiODYxYzMyNjE1Mzc4ZjIwNDFjZDE2YTkxYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoE_dJgFqTQyNDg1MDY4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ca51f3a108f0b861c32615378f2041cd16a91b3", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/7ca51f3a108f0b861c32615378f2041cd16a91b3", "committedDate": "2020-06-03T04:44:41Z", "message": "linting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "255bd44d99315a3c69ae186c89a6629985779763", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/255bd44d99315a3c69ae186c89a6629985779763", "committedDate": "2020-06-03T04:45:49Z", "message": "should be Boolean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "470ae827bcd360537f1bae654418c25b1ed27e7b", "author": {"user": {"login": "pabender", "name": "Paul Bender"}}, "url": "https://github.com/JMRI/JMRI/commit/470ae827bcd360537f1bae654418c25b1ed27e7b", "committedDate": "2020-06-03T12:27:34Z", "message": "proper sync"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0ODUwNjg5", "url": "https://github.com/JMRI/JMRI/pull/8631#pullrequestreview-424850689", "createdAt": "2020-06-04T21:31:59Z", "commit": {"oid": "470ae827bcd360537f1bae654418c25b1ed27e7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozMTo1OVrOGfYxUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTozMTo1OVrOGfYxUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2NDg4MQ==", "bodyText": "This is interesting. On public mailing list, it was said:\n\nThe series of off messages, including the delays, ensure that the command station tells the turnout to throw then actually stops sending the message to the rails, confirms the stop was received, and doesn\u2019t tell us \u201cI\u2019m busy, go away for a while\u201d in the process.\nIt was a hard fought painful process to get it to the point where it is and simplification of the process is not an option.\n\nNow I see that a delay between ON message and a corresponding OFF goes away. It was also said that (some) delay is necessary\nIt was also defined that\n\n\nQ3: I understood that if OFF message was sent \"immediately\", in less than 30ms after the \"ON\" message, the command station/turnout decoder might not have enough time to even start the operation - the turnout might not be switched. Correct ?\n\n\n\nCorrect.\n\nNow it seems the OFF message enters the high priority queue immediately; where is that safety delay ensured  - or is it no longer necessary ?", "url": "https://github.com/JMRI/JMRI/pull/8631#discussion_r435564881", "createdAt": "2020-06-04T21:31:59Z", "author": {"login": "svatoun"}, "path": "java/src/jmri/jmrix/lenz/XNetTurnout.java", "diffHunk": "@@ -526,19 +538,9 @@ protected synchronized void sendOffMessage() {\n             log.debug(\"Current Thread ID: {} Thread Name {}\", java.lang.Thread.currentThread().getId(), java.lang.Thread.currentThread().getName());\n         }\n         XNetMessage msg = getOffMessage();\n-        // Set the known state to the commanded state.\n-        // To avoid some of the command station busy\n-        // messages, add a short delay before sending the\n-        // first off message.\n-            if (internalState != OFFSENT) {\n-            jmri.util.ThreadingUtil.runOnLayoutDelayed( () ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "470ae827bcd360537f1bae654418c25b1ed27e7b"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4054, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}