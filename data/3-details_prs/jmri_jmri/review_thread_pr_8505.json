{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDU3NDY5", "number": 8505, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzozMzo1NVrOD6pF3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzozMzo1NVrOD6pF3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODE3MjQ2OnYy", "diffSide": "LEFT", "path": "java/src/jmri/jmrix/lenz/XNetReply.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMzozMzo1NVrOGSlt-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNzoxOTowMFrOGStEhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0NTUzMA==", "bodyText": "Thanks for the correction.", "url": "https://github.com/JMRI/JMRI/pull/8505#discussion_r422145530", "createdAt": "2020-05-08T13:33:55Z", "author": {"login": "svatoun"}, "path": "java/src/jmri/jmrix/lenz/XNetReply.java", "diffHunk": "@@ -715,10 +715,6 @@ public boolean onTurnoutFeedback(int accessoryNumber, Function<FeedbackItem, Boo\n             return Optional.empty();\n         }\n         FeedbackItem item = new FeedbackItem(this, accessoryNumber, r);\n-        if (item.getAccessoryStatus() > 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f677c2985de49f280c6b20957d59896650f4a8f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE1NDgwNg==", "bodyText": "Still a question: is this combination sent while the turnout w/feedback is still moving - none of the end switches report turnout's position ?", "url": "https://github.com/JMRI/JMRI/pull/8505#discussion_r422154806", "createdAt": "2020-05-08T13:51:31Z", "author": {"login": "svatoun"}, "path": "java/src/jmri/jmrix/lenz/XNetReply.java", "diffHunk": "@@ -715,10 +715,6 @@ public boolean onTurnoutFeedback(int accessoryNumber, Function<FeedbackItem, Boo\n             return Optional.empty();\n         }\n         FeedbackItem item = new FeedbackItem(this, accessoryNumber, r);\n-        if (item.getAccessoryStatus() > 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0NTUzMA=="}, "originalCommit": {"oid": "3f677c2985de49f280c6b20957d59896650f4a8f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI2NTk5MA==", "bodyText": "For turnouts with feedback, If the turnout is reported as still moving, the motion complete bit will be 0.  Turnouts without feedback always set the motion complete bit to 1.\nThe invalid combination may never actually be sent, but it is defined in the XpressNet manual as being \"invalid\".  Operationally, XNetTurnout objects treat both the 00 case and 11 case the same, but the XpressNet monitor treats them differently.  I caught this while refactoring the Monitor code to use the Feedback items.", "url": "https://github.com/JMRI/JMRI/pull/8505#discussion_r422265990", "createdAt": "2020-05-08T17:19:00Z", "author": {"login": "pabender"}, "path": "java/src/jmri/jmrix/lenz/XNetReply.java", "diffHunk": "@@ -715,10 +715,6 @@ public boolean onTurnoutFeedback(int accessoryNumber, Function<FeedbackItem, Boo\n             return Optional.empty();\n         }\n         FeedbackItem item = new FeedbackItem(this, accessoryNumber, r);\n-        if (item.getAccessoryStatus() > 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE0NTUzMA=="}, "originalCommit": {"oid": "3f677c2985de49f280c6b20957d59896650f4a8f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4554, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}