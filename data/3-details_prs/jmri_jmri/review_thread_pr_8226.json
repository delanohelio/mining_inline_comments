{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTYzMzQ0", "number": 8226, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowMzoxMlrODmnTMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowMzoxMlrODmnTMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODE2MzY5OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/SpeedStepMode.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDowMzoxM1rOF0ISiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMjo0OToyOVrOF2b9TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA5MQ==", "bodyText": "Please change references to peopleKey or peopleName to description, since that is a common term for this kind of key elsewhere in our code.", "url": "https://github.com/JMRI/JMRI/pull/8226#discussion_r390206091", "createdAt": "2020-03-10T10:03:13Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/SpeedStepMode.java", "diffHunk": "@@ -20,30 +20,38 @@\n  */\n @javax.annotation.concurrent.Immutable\n public enum SpeedStepMode {\n-    UNKNOWN(\"unknown\", 1, 0.0f),\n+    // NOTE: keep these up to date with xml/schema/locomotive-config.xsd\n+    UNKNOWN(\"unknown\", 1, 0.0f, \"SpeedStepUnknown\"),\n     // NMRA DCC standard speed step modes.\n-    NMRA_DCC_128(\"128\", 126), // Remember there are only 126 non-stop values in 128 speed.\n-    NMRA_DCC_28(\"28\", 28),\n-    NMRA_DCC_27(\"27\", 27),\n-    NMRA_DCC_14(\"14\", 14),\n+    NMRA_DCC_128(\"128\", 126, \"SpeedStep128\"), // Remember there are only 126 non-stop values in 128 speed.\n+    NMRA_DCC_28(\"28\", 28, \"SpeedStep28\"),\n+    NMRA_DCC_27(\"27\", 27, \"SpeedStep27\"),\n+    NMRA_DCC_14(\"14\", 14, \"SpeedStep14\"),\n     // Non-DCC speed step modes.\n-    MOTOROLA_28(\"motorola_28\", 28), // Motorola 28 speed step mode.\n-    TMCC_32(\"tmcc_32\", 32), // Lionel TMCC 32 speed step mode.\n-    INCREMENTAL(\"incremental\", 1, 1.0f);\n+    MOTOROLA_28(\"motorola_28\", 28, \"SpeedStep28Motorola\"), // Motorola 28 speed step mode.\n+    TMCC_32(\"tmcc_32\", 32, \"SpeedStep32TMCC\"), // Lionel TMCC 32 speed step mode.\n+    INCREMENTAL(\"incremental\", 1, 1.0f, \"SpeedStepIncremental\");\n \n-    SpeedStepMode(String name, int numSteps) {\n-        this(name, numSteps, 1.0f / numSteps);\n+    SpeedStepMode(String name, int numSteps, String peopleKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacfce7ff151ba455874f84de86f17456ce8fa18"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc2NzIxNA==", "bodyText": "Done.", "url": "https://github.com/JMRI/JMRI/pull/8226#discussion_r390767214", "createdAt": "2020-03-11T06:29:08Z", "author": {"login": "trainman419"}, "path": "java/src/jmri/SpeedStepMode.java", "diffHunk": "@@ -20,30 +20,38 @@\n  */\n @javax.annotation.concurrent.Immutable\n public enum SpeedStepMode {\n-    UNKNOWN(\"unknown\", 1, 0.0f),\n+    // NOTE: keep these up to date with xml/schema/locomotive-config.xsd\n+    UNKNOWN(\"unknown\", 1, 0.0f, \"SpeedStepUnknown\"),\n     // NMRA DCC standard speed step modes.\n-    NMRA_DCC_128(\"128\", 126), // Remember there are only 126 non-stop values in 128 speed.\n-    NMRA_DCC_28(\"28\", 28),\n-    NMRA_DCC_27(\"27\", 27),\n-    NMRA_DCC_14(\"14\", 14),\n+    NMRA_DCC_128(\"128\", 126, \"SpeedStep128\"), // Remember there are only 126 non-stop values in 128 speed.\n+    NMRA_DCC_28(\"28\", 28, \"SpeedStep28\"),\n+    NMRA_DCC_27(\"27\", 27, \"SpeedStep27\"),\n+    NMRA_DCC_14(\"14\", 14, \"SpeedStep14\"),\n     // Non-DCC speed step modes.\n-    MOTOROLA_28(\"motorola_28\", 28), // Motorola 28 speed step mode.\n-    TMCC_32(\"tmcc_32\", 32), // Lionel TMCC 32 speed step mode.\n-    INCREMENTAL(\"incremental\", 1, 1.0f);\n+    MOTOROLA_28(\"motorola_28\", 28, \"SpeedStep28Motorola\"), // Motorola 28 speed step mode.\n+    TMCC_32(\"tmcc_32\", 32, \"SpeedStep32TMCC\"), // Lionel TMCC 32 speed step mode.\n+    INCREMENTAL(\"incremental\", 1, 1.0f, \"SpeedStepIncremental\");\n \n-    SpeedStepMode(String name, int numSteps) {\n-        this(name, numSteps, 1.0f / numSteps);\n+    SpeedStepMode(String name, int numSteps, String peopleKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA5MQ=="}, "originalCommit": {"oid": "cacfce7ff151ba455874f84de86f17456ce8fa18"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwNDgzNQ==", "bodyText": "@trainman419\nThe code still has peopleKey instead of description. Please change this.", "url": "https://github.com/JMRI/JMRI/pull/8226#discussion_r392604835", "createdAt": "2020-03-14T17:28:12Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/SpeedStepMode.java", "diffHunk": "@@ -20,30 +20,38 @@\n  */\n @javax.annotation.concurrent.Immutable\n public enum SpeedStepMode {\n-    UNKNOWN(\"unknown\", 1, 0.0f),\n+    // NOTE: keep these up to date with xml/schema/locomotive-config.xsd\n+    UNKNOWN(\"unknown\", 1, 0.0f, \"SpeedStepUnknown\"),\n     // NMRA DCC standard speed step modes.\n-    NMRA_DCC_128(\"128\", 126), // Remember there are only 126 non-stop values in 128 speed.\n-    NMRA_DCC_28(\"28\", 28),\n-    NMRA_DCC_27(\"27\", 27),\n-    NMRA_DCC_14(\"14\", 14),\n+    NMRA_DCC_128(\"128\", 126, \"SpeedStep128\"), // Remember there are only 126 non-stop values in 128 speed.\n+    NMRA_DCC_28(\"28\", 28, \"SpeedStep28\"),\n+    NMRA_DCC_27(\"27\", 27, \"SpeedStep27\"),\n+    NMRA_DCC_14(\"14\", 14, \"SpeedStep14\"),\n     // Non-DCC speed step modes.\n-    MOTOROLA_28(\"motorola_28\", 28), // Motorola 28 speed step mode.\n-    TMCC_32(\"tmcc_32\", 32), // Lionel TMCC 32 speed step mode.\n-    INCREMENTAL(\"incremental\", 1, 1.0f);\n+    MOTOROLA_28(\"motorola_28\", 28, \"SpeedStep28Motorola\"), // Motorola 28 speed step mode.\n+    TMCC_32(\"tmcc_32\", 32, \"SpeedStep32TMCC\"), // Lionel TMCC 32 speed step mode.\n+    INCREMENTAL(\"incremental\", 1, 1.0f, \"SpeedStepIncremental\");\n \n-    SpeedStepMode(String name, int numSteps) {\n-        this(name, numSteps, 1.0f / numSteps);\n+    SpeedStepMode(String name, int numSteps, String peopleKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA5MQ=="}, "originalCommit": {"oid": "cacfce7ff151ba455874f84de86f17456ce8fa18"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyMjExMA==", "bodyText": "Ooops. Fixed.", "url": "https://github.com/JMRI/JMRI/pull/8226#discussion_r392622110", "createdAt": "2020-03-14T21:50:37Z", "author": {"login": "trainman419"}, "path": "java/src/jmri/SpeedStepMode.java", "diffHunk": "@@ -20,30 +20,38 @@\n  */\n @javax.annotation.concurrent.Immutable\n public enum SpeedStepMode {\n-    UNKNOWN(\"unknown\", 1, 0.0f),\n+    // NOTE: keep these up to date with xml/schema/locomotive-config.xsd\n+    UNKNOWN(\"unknown\", 1, 0.0f, \"SpeedStepUnknown\"),\n     // NMRA DCC standard speed step modes.\n-    NMRA_DCC_128(\"128\", 126), // Remember there are only 126 non-stop values in 128 speed.\n-    NMRA_DCC_28(\"28\", 28),\n-    NMRA_DCC_27(\"27\", 27),\n-    NMRA_DCC_14(\"14\", 14),\n+    NMRA_DCC_128(\"128\", 126, \"SpeedStep128\"), // Remember there are only 126 non-stop values in 128 speed.\n+    NMRA_DCC_28(\"28\", 28, \"SpeedStep28\"),\n+    NMRA_DCC_27(\"27\", 27, \"SpeedStep27\"),\n+    NMRA_DCC_14(\"14\", 14, \"SpeedStep14\"),\n     // Non-DCC speed step modes.\n-    MOTOROLA_28(\"motorola_28\", 28), // Motorola 28 speed step mode.\n-    TMCC_32(\"tmcc_32\", 32), // Lionel TMCC 32 speed step mode.\n-    INCREMENTAL(\"incremental\", 1, 1.0f);\n+    MOTOROLA_28(\"motorola_28\", 28, \"SpeedStep28Motorola\"), // Motorola 28 speed step mode.\n+    TMCC_32(\"tmcc_32\", 32, \"SpeedStep32TMCC\"), // Lionel TMCC 32 speed step mode.\n+    INCREMENTAL(\"incremental\", 1, 1.0f, \"SpeedStepIncremental\");\n \n-    SpeedStepMode(String name, int numSteps) {\n-        this(name, numSteps, 1.0f / numSteps);\n+    SpeedStepMode(String name, int numSteps, String peopleKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA5MQ=="}, "originalCommit": {"oid": "cacfce7ff151ba455874f84de86f17456ce8fa18"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyNTQ4NQ==", "bodyText": "Thanks.", "url": "https://github.com/JMRI/JMRI/pull/8226#discussion_r392625485", "createdAt": "2020-03-14T22:49:29Z", "author": {"login": "danielb987"}, "path": "java/src/jmri/SpeedStepMode.java", "diffHunk": "@@ -20,30 +20,38 @@\n  */\n @javax.annotation.concurrent.Immutable\n public enum SpeedStepMode {\n-    UNKNOWN(\"unknown\", 1, 0.0f),\n+    // NOTE: keep these up to date with xml/schema/locomotive-config.xsd\n+    UNKNOWN(\"unknown\", 1, 0.0f, \"SpeedStepUnknown\"),\n     // NMRA DCC standard speed step modes.\n-    NMRA_DCC_128(\"128\", 126), // Remember there are only 126 non-stop values in 128 speed.\n-    NMRA_DCC_28(\"28\", 28),\n-    NMRA_DCC_27(\"27\", 27),\n-    NMRA_DCC_14(\"14\", 14),\n+    NMRA_DCC_128(\"128\", 126, \"SpeedStep128\"), // Remember there are only 126 non-stop values in 128 speed.\n+    NMRA_DCC_28(\"28\", 28, \"SpeedStep28\"),\n+    NMRA_DCC_27(\"27\", 27, \"SpeedStep27\"),\n+    NMRA_DCC_14(\"14\", 14, \"SpeedStep14\"),\n     // Non-DCC speed step modes.\n-    MOTOROLA_28(\"motorola_28\", 28), // Motorola 28 speed step mode.\n-    TMCC_32(\"tmcc_32\", 32), // Lionel TMCC 32 speed step mode.\n-    INCREMENTAL(\"incremental\", 1, 1.0f);\n+    MOTOROLA_28(\"motorola_28\", 28, \"SpeedStep28Motorola\"), // Motorola 28 speed step mode.\n+    TMCC_32(\"tmcc_32\", 32, \"SpeedStep32TMCC\"), // Lionel TMCC 32 speed step mode.\n+    INCREMENTAL(\"incremental\", 1, 1.0f, \"SpeedStepIncremental\");\n \n-    SpeedStepMode(String name, int numSteps) {\n-        this(name, numSteps, 1.0f / numSteps);\n+    SpeedStepMode(String name, int numSteps, String peopleKey) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwNjA5MQ=="}, "originalCommit": {"oid": "cacfce7ff151ba455874f84de86f17456ce8fa18"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}