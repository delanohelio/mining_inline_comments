{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjgxNzQ2", "number": 8921, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTowNDozNVrOEXWAlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTowNDozNVrOEXWAlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyOTEzMzAyOnYy", "diffSide": "RIGHT", "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxOTowNDozNVrOG_FaiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMjozMzozMVrOG_Lf5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwMjE4NQ==", "bodyText": "As I wrote on the JMRI mailing list, I think it would be good to say that we expect to move to Java 11 summer 2021.", "url": "https://github.com/JMRI/JMRI/pull/8921#discussion_r468802185", "createdAt": "2020-08-11T19:04:35Z", "author": {"login": "danielb987"}, "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "diffHunk": "@@ -307,16 +258,16 @@\n       jlink from Java 9 or later.\n \n       <p>\n-      While we don't know yet when JMRI will have to move past Java 8, \n-      we do know that the earliest Java 9 or later will be required for users is Fall 2020.\n+      While we don't know yet when JMRI development will move past Java 8, \n+      we do know that the earliest that will happen  is after Fall 2020.\n       Allowing for migration and\n-      development time, and depending on development plans, JMRI's December 2020 release\n-      might require Java 11 (in which case it would be called JMRI 5.1)\n-      or stay with requiring Java 8 or later (in which case it would be called JMRI 4.20).\n-      Releases before Fall 202 are intended to stay fully compatible Java 8.\n+      development time, and depending on development plans, \n+      some future JMRI major release (with a number of 5.0.0 or later)\n+      will require Java 11 or later.  JMRI updates and minor releases would stay with \n+      Java 8 for a little while after that, but eventually would have go shift over.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da82a1d5bda829af017ff93c5cee3f79f02d59e9"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0NzA4OA==", "bodyText": "How's this look now?  I'm trying to capture the uncertainty of when in Spring things would really change.", "url": "https://github.com/JMRI/JMRI/pull/8921#discussion_r468847088", "createdAt": "2020-08-11T20:30:56Z", "author": {"login": "bobjacobsen"}, "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "diffHunk": "@@ -307,16 +258,16 @@\n       jlink from Java 9 or later.\n \n       <p>\n-      While we don't know yet when JMRI will have to move past Java 8, \n-      we do know that the earliest Java 9 or later will be required for users is Fall 2020.\n+      While we don't know yet when JMRI development will move past Java 8, \n+      we do know that the earliest that will happen  is after Fall 2020.\n       Allowing for migration and\n-      development time, and depending on development plans, JMRI's December 2020 release\n-      might require Java 11 (in which case it would be called JMRI 5.1)\n-      or stay with requiring Java 8 or later (in which case it would be called JMRI 4.20).\n-      Releases before Fall 202 are intended to stay fully compatible Java 8.\n+      development time, and depending on development plans, \n+      some future JMRI major release (with a number of 5.0.0 or later)\n+      will require Java 11 or later.  JMRI updates and minor releases would stay with \n+      Java 8 for a little while after that, but eventually would have go shift over.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwMjE4NQ=="}, "originalCommit": {"oid": "da82a1d5bda829af017ff93c5cee3f79f02d59e9"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg3MjMwNg==", "bodyText": "I approve this.", "url": "https://github.com/JMRI/JMRI/pull/8921#discussion_r468872306", "createdAt": "2020-08-11T21:22:01Z", "author": {"login": "danielb987"}, "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "diffHunk": "@@ -307,16 +258,16 @@\n       jlink from Java 9 or later.\n \n       <p>\n-      While we don't know yet when JMRI will have to move past Java 8, \n-      we do know that the earliest Java 9 or later will be required for users is Fall 2020.\n+      While we don't know yet when JMRI development will move past Java 8, \n+      we do know that the earliest that will happen  is after Fall 2020.\n       Allowing for migration and\n-      development time, and depending on development plans, JMRI's December 2020 release\n-      might require Java 11 (in which case it would be called JMRI 5.1)\n-      or stay with requiring Java 8 or later (in which case it would be called JMRI 4.20).\n-      Releases before Fall 202 are intended to stay fully compatible Java 8.\n+      development time, and depending on development plans, \n+      some future JMRI major release (with a number of 5.0.0 or later)\n+      will require Java 11 or later.  JMRI updates and minor releases would stay with \n+      Java 8 for a little while after that, but eventually would have go shift over.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwMjE4NQ=="}, "originalCommit": {"oid": "da82a1d5bda829af017ff93c5cee3f79f02d59e9"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg5OTM5Ng==", "bodyText": "\"but eventually would have go shift over.\"\nI don't believe everyone will be familiar with this form of colloquial English.\nThe gist of it is fine.", "url": "https://github.com/JMRI/JMRI/pull/8921#discussion_r468899396", "createdAt": "2020-08-11T22:26:54Z", "author": {"login": "Pugwash1"}, "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "diffHunk": "@@ -307,16 +258,16 @@\n       jlink from Java 9 or later.\n \n       <p>\n-      While we don't know yet when JMRI will have to move past Java 8, \n-      we do know that the earliest Java 9 or later will be required for users is Fall 2020.\n+      While we don't know yet when JMRI development will move past Java 8, \n+      we do know that the earliest that will happen  is after Fall 2020.\n       Allowing for migration and\n-      development time, and depending on development plans, JMRI's December 2020 release\n-      might require Java 11 (in which case it would be called JMRI 5.1)\n-      or stay with requiring Java 8 or later (in which case it would be called JMRI 4.20).\n-      Releases before Fall 202 are intended to stay fully compatible Java 8.\n+      development time, and depending on development plans, \n+      some future JMRI major release (with a number of 5.0.0 or later)\n+      will require Java 11 or later.  JMRI updates and minor releases would stay with \n+      Java 8 for a little while after that, but eventually would have go shift over.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwMjE4NQ=="}, "originalCommit": {"oid": "da82a1d5bda829af017ff93c5cee3f79f02d59e9"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODkwMTg2MQ==", "bodyText": "@Pugwash1\nThe text has been updated. The new text is:\nWhile we don't know with certainty when JMRI development will move past Java 8, \nwe expect that it will be during the Spring 2021 development releases, \nleading to the June 2021 production releases requiring Java 11 and \ntherefore being called JMRI 5.0.\nThere might be one or two JMRI updates and minor releases early\nin Spring that would still work with Java 8.", "url": "https://github.com/JMRI/JMRI/pull/8921#discussion_r468901861", "createdAt": "2020-08-11T22:33:31Z", "author": {"login": "danielb987"}, "path": "help/en/html/doc/Technical/TechRoadMap.shtml", "diffHunk": "@@ -307,16 +258,16 @@\n       jlink from Java 9 or later.\n \n       <p>\n-      While we don't know yet when JMRI will have to move past Java 8, \n-      we do know that the earliest Java 9 or later will be required for users is Fall 2020.\n+      While we don't know yet when JMRI development will move past Java 8, \n+      we do know that the earliest that will happen  is after Fall 2020.\n       Allowing for migration and\n-      development time, and depending on development plans, JMRI's December 2020 release\n-      might require Java 11 (in which case it would be called JMRI 5.1)\n-      or stay with requiring Java 8 or later (in which case it would be called JMRI 4.20).\n-      Releases before Fall 202 are intended to stay fully compatible Java 8.\n+      development time, and depending on development plans, \n+      some future JMRI major release (with a number of 5.0.0 or later)\n+      will require Java 11 or later.  JMRI updates and minor releases would stay with \n+      Java 8 for a little while after that, but eventually would have go shift over.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgwMjE4NQ=="}, "originalCommit": {"oid": "da82a1d5bda829af017ff93c5cee3f79f02d59e9"}, "originalPosition": 195}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4455, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}