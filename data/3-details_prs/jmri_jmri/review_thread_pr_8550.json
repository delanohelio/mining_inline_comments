{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTgzOTQy", "number": 8550, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMjo0MTowNVrOD9NE6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMjo0MTowNVrOD9NE6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTAzOTc4OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/InstanceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMjo0MTowNVrOGWkFTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMjo1NTo1MlrOGWkKCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMxMzAzNw==", "bodyText": "Should this method and the method preceding it (containsDefault) not be the same method?", "url": "https://github.com/JMRI/JMRI/pull/8550#discussion_r426313037", "createdAt": "2020-05-17T22:41:05Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/InstanceManager.java", "diffHunk": "@@ -422,6 +422,20 @@\n         return !l.isEmpty();\n     }\n \n+    /**\n+     * Check if a particular type has been initialized without\n+     * triggering an automatic initialization.\n+     *\n+     * @param <T>  The type of the class\n+     * @param type The class type\n+     * @return true if an item is available as a default for the given type;\n+     *         false otherwise\n+     */\n+    public static <T> boolean isInitialized(@Nonnull Class<T> type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "845577eacef3aaf0124a8b6626b7a40815c1bf00"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMxNDI0OA==", "bodyText": "Probably.  I think I managed to confuse myself with the multiple meanings of \"default\" here.\ncontainsDefault creates a List<T> and fires a property event, but the list is empty so there's no default item.", "url": "https://github.com/JMRI/JMRI/pull/8550#discussion_r426314248", "createdAt": "2020-05-17T22:55:52Z", "author": {"login": "bobjacobsen"}, "path": "java/src/jmri/InstanceManager.java", "diffHunk": "@@ -422,6 +422,20 @@\n         return !l.isEmpty();\n     }\n \n+    /**\n+     * Check if a particular type has been initialized without\n+     * triggering an automatic initialization.\n+     *\n+     * @param <T>  The type of the class\n+     * @param type The class type\n+     * @return true if an item is available as a default for the given type;\n+     *         false otherwise\n+     */\n+    public static <T> boolean isInitialized(@Nonnull Class<T> type) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMxMzAzNw=="}, "originalCommit": {"oid": "845577eacef3aaf0124a8b6626b7a40815c1bf00"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4567, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}