{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwODMwMzIx", "number": 8884, "title": "Send Issue Report to GitHub (was 8852)", "bodyText": "Revive @rhwood's work on a GitHub-based Issue filing tool, adding documentation, tests, etc.", "createdAt": "2020-08-01T06:11:37Z", "url": "https://github.com/JMRI/JMRI/pull/8884", "merged": true, "mergeCommit": {"oid": "60fe38fbdc0cfa126ff3344b9d7f66a4affe2bab"}, "closed": true, "closedAt": "2020-08-09T18:02:55Z", "author": {"login": "bobjacobsen"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2lt5sgH2gAyNDYwODMwMzIxOmZlZmE0YmVmODdlMGM1MjNjZGNkYzljNmZiZmYxY2E5ZTc5M2NhYzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9RYN5AFqTQ2Mzg5MTgwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fefa4bef87e0c523cdcdc9c6fbff1ca9e793cac4", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/fefa4bef87e0c523cdcdc9c6fbff1ca9e793cac4", "committedDate": "2020-07-19T23:34:37Z", "message": "fix: Send Issue Report to GitHub\n\nThe current mail report is (and has been) broken and is fragile as MTA operators are increasingly locking their systems down to prevent unauthenticated mail from being sent through them. This fix replaces the mail report with a direct submission of an issue to GitHub with the following benefits:\r\n\r\n- The JMRI project no longer needs to gather the email addresses of users\r\n- The JMRI project no longer needs to maintain an intermediary between JMRI applications and reports from the application\r\n- The JMRI project may get more direct involvement from users, since the issue submittal process directly involves them in the project's maintenance workflow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb0c01e896dbc8fe6f7db201c0cbf6cf47202f4", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/3bb0c01e896dbc8fe6f7db201c0cbf6cf47202f4", "committedDate": "2020-07-19T23:37:22Z", "message": "chore: delete file accidentally included in fefa4bef87"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c161e32d754a8ef7e6aaf40725e39b127f07d48", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/0c161e32d754a8ef7e6aaf40725e39b127f07d48", "committedDate": "2020-07-20T00:33:46Z", "message": "chore: maven runs without local.properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12c24cff4f49c5e3c258abd9372e575cee8b77ac", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/12c24cff4f49c5e3c258abd9372e575cee8b77ac", "committedDate": "2020-07-26T14:06:08Z", "message": "Merge remote-tracking branch 'upstream/master' into issue-reporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70a0fefda9e0b3bca37ecc1216071f7f4ae461bb", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/70a0fefda9e0b3bca37ecc1216071f7f4ae461bb", "committedDate": "2020-07-26T15:31:55Z", "message": "fix: more consistent handling of attachments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ed6c7378f2a567af57e99e71030c7e1dd2c459", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/69ed6c7378f2a567af57e99e71030c7e1dd2c459", "committedDate": "2020-07-26T15:45:52Z", "message": "fix: can't attach markdown files to issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234543fcfd4ebb571d767a57373fa900a65d5e30", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/234543fcfd4ebb571d767a57373fa900a65d5e30", "committedDate": "2020-07-26T15:46:21Z", "message": "fix: remove unused fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92f87c9c42aaeeaeab1f47015846ea9a16488759", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/92f87c9c42aaeeaeab1f47015846ea9a16488759", "committedDate": "2020-07-26T19:59:56Z", "message": "fix: use try-with-resources to avoid open streams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7488347df7edabe6f2a420425ed26463418c313f", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/7488347df7edabe6f2a420425ed26463418c313f", "committedDate": "2020-07-26T20:00:18Z", "message": "fix: use Static method from class that defines it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622b485be4099606631ee55e90c0e4422c859dd7", "author": {"user": {"login": "rhwood", "name": "Randall Wood"}}, "url": "https://github.com/JMRI/JMRI/commit/622b485be4099606631ee55e90c0e4422c859dd7", "committedDate": "2020-07-26T20:01:01Z", "message": "fix: Remove \"Don't Know\" reporting target"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d174796d802f1373159d1399b93c634eb07ec3", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/d0d174796d802f1373159d1399b93c634eb07ec3", "committedDate": "2020-08-03T00:23:13Z", "message": "minimal test skeleton"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f47c0f20201f7d61aae2cad549c840ad8b65a2f", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/6f47c0f20201f7d61aae2cad549c840ad8b65a2f", "committedDate": "2020-08-03T04:35:42Z", "message": "add intro help"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbf0187801d39480fac47a833ba59b2816998353", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/bbf0187801d39480fac47a833ba59b2816998353", "committedDate": "2020-08-03T04:35:56Z", "message": "headless test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f", "committedDate": "2020-08-03T04:36:08Z", "message": "release note"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTk4NDgw", "url": "https://github.com/JMRI/JMRI/pull/8884#pullrequestreview-460598480", "createdAt": "2020-08-04T08:21:46Z", "commit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMTo0N1rOG7WMJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyMTo0N1rOG7WMJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4MjcyNA==", "bodyText": "I'm not good at html, but shouldn't <li> have an ending </li> tag?", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464882724", "createdAt": "2020-08-04T08:21:47Z", "author": {"login": "danielb987"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNjAwODY1", "url": "https://github.com/JMRI/JMRI/pull/8884#pullrequestreview-460600865", "createdAt": "2020-08-04T08:24:58Z", "commit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo1OFrOG7WTZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQwODoyNDo1OFrOG7WTZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDg4NDU4Mw==", "bodyText": "Wouldn't it be good if all the <p> tags have an ending </p> tag?\nI apologize if I'm nitpicking. It's not my intention.", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r464884583", "createdAt": "2020-08-04T08:24:58Z", "author": {"login": "danielb987"}, "path": "help/en/package/apps/util/issuereporter/swing/IssueReporter.shtml", "diffHunk": "@@ -0,0 +1,75 @@\n+<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n+\"http://www.w3.org/TR/html4/strict.dtd\">\n+\n+<html lang=\"en\">\n+<head>\n+  <meta name=\"generator\" content=\n+  \"HTML Tidy for Mac OS X (vers 31 October 2006 - Apple Inc. build 15.17), see www.w3.org\">\n+\n+  <title>JMRI: Issue Reporter</title>\n+  <meta name=\"author\" content=\"Bob Jacobsen\">\n+  <meta name=\"keywords\" content=\"JMRI help Issue Reporter\">\n+  <!-- Style -->\n+  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=us-ascii\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/default.css\"\n+  media=\"screen\">\n+  <link rel=\"stylesheet\" type=\"text/css\" href=\"/css/print.css\"\n+  media=\"print\">\n+  <link rel=\"icon\" href=\"/images/jmri.ico\" type=\"image/png\">\n+  <link rel=\"home\" title=\"Home\" href=\"/\">\n+  <!-- /Style -->\n+</head>\n+\n+<body>\n+  <!--#include virtual=\"/Header.shtml\" -->\n+  <div class=\"nomenu\" id=\"mBody\">\n+    <div id=\"mainContent\">\n+\n+      <h1>JMRI: Issue Reporter</h1>\n+      <p>The JMRI Issue Reporter allows you\n+        to create an entry in JMRI's \n+        <a href=\"https://github.com/JMRI/JMRI/issues\">Issue tracking system</a>\n+        for either a bug report or a feature request.</p>\n+        \n+    <p>In order to create an entry, you need a (free)\n+        GitHub account. If you don't have one yet, follow\n+        <a href=\"https://github.com/join?ref_cta=Sign+up\">this link</a>\n+        and sign up for one.</p>\n+        \n+    <a href=\"Report_Issue__Window.png\"><img src=\"Report_Issue__Window.png\" align=\"right\" width=\"264\" height=\"256\" ></a> \n+    <p>In your default web browser, sign on to the \n+        <a href=\"https://github.com/login\">GitHub web site</a>.</p>\n+    \n+    <p>From the JMRI Help menu, select \"Report Issue...\".\n+        A window like the one on the right will open (click to make the images larger).\n+        <ul>\n+            <li>Select whether you're reporting a bug or making feature request\n+            <li>Leave JMRI selected as the report destination\n+            <li>Add a useful title.  That really helps getting attention to your item.\n+            <li>Add a detailed description.  (You can add screen shots to it later on)\n+            <li>Click the check boxes for the information you want to send \n+                along with the report. We recommend you check all three.\n+            <li>Then click the \"Submit to GitHub\" button\n+        </ul>\n+        \n+    <p>A GitHub window will open in your browser. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwODYwMTE5", "url": "https://github.com/JMRI/JMRI/pull/8884#pullrequestreview-460860119", "createdAt": "2020-08-04T14:20:31Z", "commit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyMDozMVrOG7ipow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDoyMDozMVrOG7ipow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA4Njg4Mw==", "bodyText": "This line throws an UnsupportedOperationException on Debian Linux for me.\nUnsupportedOperationException - if the current platform does not support the Desktop.Action.BROWSE action\nThis seems to be a problem with Java unable to open the browser, so I don't know if it can be fixed, but the exception needs to be handled.\n@pabender Can you test this on your Linux computer?", "url": "https://github.com/JMRI/JMRI/pull/8884#discussion_r465086883", "createdAt": "2020-08-04T14:20:31Z", "author": {"login": "danielb987"}, "path": "java/src/apps/util/issuereporter/swing/IssueReporter.java", "diffHunk": "@@ -0,0 +1,388 @@\n+package apps.util.issuereporter.swing;\n+\n+import java.awt.*;\n+import java.awt.datatransfer.*;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.WindowEvent;\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+import java.util.*;\n+import java.util.List;\n+\n+import javax.annotation.Nonnull;\n+\n+import apps.util.issuereporter.*;\n+\n+import javax.swing.*;\n+import javax.swing.GroupLayout.Alignment;\n+import static javax.swing.GroupLayout.DEFAULT_SIZE;\n+import static javax.swing.GroupLayout.PREFERRED_SIZE;\n+import javax.swing.event.DocumentEvent;\n+import javax.swing.event.DocumentListener;\n+\n+import jmri.Application;\n+\n+import org.apiguardian.api.API;\n+\n+/**\n+ * User interface for generating an issue report on the JMRI GitHub project.\n+ *\n+ * @author Randall Wood Copyright 2020\n+ */\n+@API(status = API.Status.INTERNAL)\n+public class IssueReporter extends JFrame implements ClipboardOwner, DocumentListener {\n+\n+    private static final int BUG = 0; // index in type combo box\n+    private static final int RFE = 1; // index in type combo box\n+    private JComboBox<String> typeCB;\n+    private JComboBox<GitHubRepository> repoCB;\n+    private JTextArea bodyTA;\n+    private JToggleButton submitBtn;\n+    private JTextField titleText;\n+    private JLabel descriptionLabel;\n+    private JLabel instructionsLabel;\n+    private JPanel typeOptionsPanel;\n+    private JPanel bugReportPanel;\n+    private JCheckBox profileCB;\n+    private JCheckBox sysInfoCB;\n+    private JCheckBox logsCB;\n+    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(IssueReporter.class);\n+\n+    /**\n+     * Creates new form IssueReporterUI\n+     */\n+    public IssueReporter() {\n+        initComponents();\n+    }\n+\n+    private void initComponents() {\n+\n+        titleText = new JTextField();\n+        bodyTA = new JTextArea();\n+        submitBtn = new JToggleButton();\n+        typeCB = new JComboBox<>();\n+        repoCB = new JComboBox<>();\n+        typeOptionsPanel = new JPanel();\n+        bugReportPanel = new JPanel();\n+        descriptionLabel = new JLabel();\n+        instructionsLabel = new JLabel();\n+        JLabel titleLabel = new JLabel();\n+        JScrollPane bodySP = new JScrollPane();\n+        JLabel typeLabel = new JLabel();\n+        JLabel repoLabel = new JLabel();\n+        profileCB = new JCheckBox();\n+        sysInfoCB = new JCheckBox();\n+        logsCB = new JCheckBox();\n+\n+        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n+        setTitle(Bundle.getMessage(\"IssueReporterAction.title\"));\n+        setPreferredSize(new java.awt.Dimension(400, 600));\n+\n+        titleLabel.setFont(titleLabel.getFont().deriveFont(titleLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        titleLabel.setText(Bundle.getMessage(\"IssueReporter.titleLabel.text\"));\n+\n+        bodyTA.setColumns(20);\n+        bodyTA.setLineWrap(true);\n+        bodyTA.setRows(5);\n+        bodyTA.setWrapStyleWord(true);\n+        bodySP.setViewportView(bodyTA);\n+\n+        submitBtn.setText(Bundle.getMessage(\"IssueReporter.submitBtn.text\"));\n+        submitBtn.setEnabled(false);\n+        submitBtn.addActionListener(this::submitBtnActionListener);\n+\n+        descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(descriptionLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+\n+        instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+\n+        typeLabel.setFont(typeLabel.getFont().deriveFont(typeLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        typeLabel.setText(Bundle.getMessage(\"IssueReporter.typeLabel.text\"));\n+\n+        typeCB.setModel(new DefaultComboBoxModel<>(new String[]{Bundle.getMessage(\"IssueReporterType.bug\"), Bundle.getMessage(\"IssueReporterType.feature\")}));\n+        typeCB.addActionListener(this::typeCBActionListener);\n+\n+        repoLabel.setFont(repoLabel.getFont().deriveFont(repoLabel.getFont().getStyle() | java.awt.Font.BOLD));\n+        repoLabel.setText(Bundle.getMessage(\"IssueReporter.repoLabel.text\"));\n+\n+        repoCB.setModel(new GitHubRepositoryComboBoxModel());\n+        repoCB.setRenderer(new GitHubRepositoryListCellRenderer());\n+\n+        profileCB.setText(Bundle.getMessage(\"IssueReporter.profileCB.text\"));\n+\n+        sysInfoCB.setText(Bundle.getMessage(\"IssueReporter.sysInfoCB.text\"));\n+\n+        logsCB.setText(Bundle.getMessage(\"IssueReporter.logsCB.text\"));\n+\n+        titleText.getDocument().addDocumentListener(this);\n+\n+        bodyTA.getDocument().addDocumentListener(this);\n+\n+        GroupLayout bugReportPanelLayout = new GroupLayout(bugReportPanel);\n+        bugReportPanel.setLayout(bugReportPanelLayout);\n+        bugReportPanelLayout.setHorizontalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(sysInfoCB)\n+                                        .addComponent(logsCB)\n+                                        .addComponent(profileCB))\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+        bugReportPanelLayout.setVerticalGroup(\n+                bugReportPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(bugReportPanelLayout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addComponent(sysInfoCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(logsCB)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(profileCB)\n+                                .addContainerGap(DEFAULT_SIZE, Short.MAX_VALUE))\n+        );\n+\n+        GroupLayout typeOptionsPanelLayout = new GroupLayout(typeOptionsPanel);\n+        typeOptionsPanel.setLayout(typeOptionsPanelLayout);\n+        typeOptionsPanelLayout.setHorizontalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+        );\n+        typeOptionsPanelLayout.setVerticalGroup(\n+                typeOptionsPanelLayout.createParallelGroup(Alignment.LEADING)\n+                        .addComponent(bugReportPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+        );\n+\n+        GroupLayout layout = new GroupLayout(getContentPane());\n+        getContentPane().setLayout(layout);\n+        layout.setHorizontalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                        .addComponent(bodySP, DEFAULT_SIZE, 376, Short.MAX_VALUE)\n+                                        .addComponent(instructionsLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addComponent(descriptionLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                        .addGroup(Alignment.TRAILING, layout.createSequentialGroup()\n+                                                .addGap(0, 0, Short.MAX_VALUE)\n+                                                .addComponent(submitBtn))\n+                                        .addGroup(layout.createSequentialGroup()\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING, false)\n+                                                        .addComponent(typeLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(repoLabel, PREFERRED_SIZE, 70, Short.MAX_VALUE)\n+                                                        .addComponent(titleLabel, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                                .addGroup(layout.createParallelGroup(Alignment.LEADING)\n+                                                        .addComponent(typeCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(repoCB, 0, DEFAULT_SIZE, Short.MAX_VALUE)\n+                                                        .addComponent(titleText)))\n+                                        .addComponent(typeOptionsPanel, Alignment.TRAILING, DEFAULT_SIZE, DEFAULT_SIZE, Short.MAX_VALUE))\n+                                .addContainerGap())\n+        );\n+\n+        layout.linkSize(SwingConstants.HORIZONTAL, titleLabel, typeLabel, repoLabel);\n+\n+        layout.setVerticalGroup(\n+                layout.createParallelGroup(Alignment.LEADING)\n+                        .addGroup(layout.createSequentialGroup()\n+                                .addContainerGap()\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(typeCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(typeLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(repoCB, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                        .addComponent(repoLabel))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addGroup(layout.createParallelGroup(Alignment.BASELINE)\n+                                        .addComponent(titleLabel)\n+                                        .addComponent(titleText, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE))\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(descriptionLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(instructionsLabel)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(bodySP, DEFAULT_SIZE, 109, Short.MAX_VALUE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(typeOptionsPanel, PREFERRED_SIZE, DEFAULT_SIZE, PREFERRED_SIZE)\n+                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)\n+                                .addComponent(submitBtn)\n+                                .addContainerGap())\n+        );\n+\n+        pack();\n+    }\n+\n+    @Override\n+    public void insertUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void removeUpdate(DocumentEvent e) {\n+        changedUpdate(e);\n+    }\n+\n+    @Override\n+    public void changedUpdate(DocumentEvent e) {\n+        submitBtn.setEnabled(!bodyTA.getText().isEmpty() && !titleText.getText().isEmpty());\n+    }\n+\n+    private void typeCBActionListener(ActionEvent e) {\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.bug\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.bug\"));\n+                if (!typeOptionsPanel.equals(bugReportPanel.getParent())) {\n+                    typeOptionsPanel.add(bugReportPanel);\n+                    typeOptionsPanel.setPreferredSize(bugReportPanel.getPreferredSize());\n+                    bugReportPanel.revalidate();\n+                    bugReportPanel.repaint();\n+                }\n+                break;\n+            case RFE:\n+                descriptionLabel.setText(Bundle.getMessage(\"IssueReporter.descriptionLabel.feature\"));\n+                instructionsLabel.setText(Bundle.getMessage(\"IssueReporter.instructionsLabel.feature\"));\n+                typeOptionsPanel.remove(bugReportPanel);\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+    }\n+\n+    private void submitBtnActionListener(ActionEvent e) {\n+        IssueReport report = null;\n+        switch (typeCB.getSelectedIndex()) {\n+            case BUG:\n+                report = new BugReport(titleText.getText(), bodyTA.getText(), profileCB.isSelected(), sysInfoCB.isSelected(), logsCB.isSelected());\n+                break;\n+            case RFE:\n+                report = new EnhancementRequest(titleText.getText(), bodyTA.getText());\n+                break;\n+            default:\n+                log.error(\"Unexpected selected index {} for issue type\", typeCB.getSelectedIndex(), new IllegalArgumentException());\n+        }\n+        if (report != null) {\n+            submitReport(report);\n+        }\n+    }\n+\n+    // package private\n+    private void submitReport(IssueReport report) {\n+        try {\n+            URI uri = report.submit(repoCB.getItemAt(repoCB.getSelectedIndex()));\n+            List<File> attachments = report.getAttachments();\n+            if (!attachments.isEmpty()) {\n+                JOptionPane.showMessageDialog(this,\n+                        Bundle.getMessage(\"IssueReporter.attachments.message\"),\n+                        Bundle.getMessage(\"IssueReporter.attachments.title\"),\n+                        JOptionPane.INFORMATION_MESSAGE);\n+                Desktop.getDesktop().open(attachments.get(0).getParentFile());\n+            }\n+            Desktop.getDesktop().browse(uri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "119dc74a3bc757e3f1c08232dc34b9cd9d9cd76f"}, "originalPosition": 284}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d84357b9063c4281489085babc184c56a7c3725", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/2d84357b9063c4281489085babc184c56a7c3725", "committedDate": "2020-08-04T17:09:00Z", "message": "handle no auto open browser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5670d8fddfed7131fe0e13e34df810e33831b61f", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/5670d8fddfed7131fe0e13e34df810e33831b61f", "committedDate": "2020-08-04T20:40:06Z", "message": "don't close on skip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48068e893e1aa6f26bc52f56f7e0eddb7a63b900", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/48068e893e1aa6f26bc52f56f7e0eddb7a63b900", "committedDate": "2020-08-04T22:40:45Z", "message": "user doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7e6e1f0150dc90db4da3e63e473c9bcaac948a2", "author": {"user": {"login": "bobjacobsen", "name": "Bob Jacobsen"}}, "url": "https://github.com/JMRI/JMRI/commit/f7e6e1f0150dc90db4da3e63e473c9bcaac948a2", "committedDate": "2020-08-04T22:44:37Z", "message": "help"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjY0NDY0", "url": "https://github.com/JMRI/JMRI/pull/8884#pullrequestreview-461264464", "createdAt": "2020-08-05T00:36:20Z", "commit": {"oid": "f7e6e1f0150dc90db4da3e63e473c9bcaac948a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzODkxODA1", "url": "https://github.com/JMRI/JMRI/pull/8884#pullrequestreview-463891805", "createdAt": "2020-08-09T17:50:18Z", "commit": {"oid": "f7e6e1f0150dc90db4da3e63e473c9bcaac948a2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3969, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}