{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5MjE4OTMy", "number": 9190, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMjoyMTo0MlrOE-eSWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMjoyMTo0MlrOE-eSWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzOTQzMzg1OnYy", "diffSide": "RIGHT", "path": "java/test/jmri/jmrix/loconet/pr4/PR4AdapterTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMjoyMTo0MlrOH7p58Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwMzowNDozMFrOH7qfHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNDYwOQ==", "bodyText": "Shouldn't this string be in the properties file so it could be translated?", "url": "https://github.com/JMRI/JMRI/pull/9190#discussion_r532314609", "createdAt": "2020-11-30T02:21:42Z", "author": {"login": "danielb987"}, "path": "java/test/jmri/jmrix/loconet/pr4/PR4AdapterTest.java", "diffHunk": "@@ -23,15 +23,19 @@ public void testcommandStationOptions() {\n         PR4Adapter t = new PR4Adapter();\n         String[] cmdStns = t.commandStationOptions();\n         boolean foundPR4StandaloneProgrammer = false;\n+        boolean foundPR4StandaloneLocoNet = false;\n         for (int i=0; i < cmdStns.length; i++) {\n-            Assert.assertNotEquals(\"should not find 'Stand-alone LocoNet\", \n-                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName(), cmdStns[i]);\n             if (cmdStns[i].equals(LnCommandStationType.COMMAND_STATION_PR4_ALONE.getName())) {\n                 foundPR4StandaloneProgrammer = true;\n             }\n+            if (cmdStns[i].compareTo(\n+                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName().toString() +\n+                    \" (using external LocoNet Data Termination!)\") == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a6dbe36d07d30333242b7c1621bf335b9d11206"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxOTg5Nw==", "bodyText": "No, because this string text is stored in the configuration profile, and info in the config  profile must not be I18N'ed.", "url": "https://github.com/JMRI/JMRI/pull/9190#discussion_r532319897", "createdAt": "2020-11-30T02:45:55Z", "author": {"login": "devel-bobm"}, "path": "java/test/jmri/jmrix/loconet/pr4/PR4AdapterTest.java", "diffHunk": "@@ -23,15 +23,19 @@ public void testcommandStationOptions() {\n         PR4Adapter t = new PR4Adapter();\n         String[] cmdStns = t.commandStationOptions();\n         boolean foundPR4StandaloneProgrammer = false;\n+        boolean foundPR4StandaloneLocoNet = false;\n         for (int i=0; i < cmdStns.length; i++) {\n-            Assert.assertNotEquals(\"should not find 'Stand-alone LocoNet\", \n-                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName(), cmdStns[i]);\n             if (cmdStns[i].equals(LnCommandStationType.COMMAND_STATION_PR4_ALONE.getName())) {\n                 foundPR4StandaloneProgrammer = true;\n             }\n+            if (cmdStns[i].compareTo(\n+                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName().toString() +\n+                    \" (using external LocoNet Data Termination!)\") == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNDYwOQ=="}, "originalCommit": {"oid": "0a6dbe36d07d30333242b7c1621bf335b9d11206"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMyNDEyNw==", "bodyText": "It would be good if these strings are marked with // NOI18N if they shouldn't be I18N'ed.", "url": "https://github.com/JMRI/JMRI/pull/9190#discussion_r532324127", "createdAt": "2020-11-30T03:04:30Z", "author": {"login": "danielb987"}, "path": "java/test/jmri/jmrix/loconet/pr4/PR4AdapterTest.java", "diffHunk": "@@ -23,15 +23,19 @@ public void testcommandStationOptions() {\n         PR4Adapter t = new PR4Adapter();\n         String[] cmdStns = t.commandStationOptions();\n         boolean foundPR4StandaloneProgrammer = false;\n+        boolean foundPR4StandaloneLocoNet = false;\n         for (int i=0; i < cmdStns.length; i++) {\n-            Assert.assertNotEquals(\"should not find 'Stand-alone LocoNet\", \n-                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName(), cmdStns[i]);\n             if (cmdStns[i].equals(LnCommandStationType.COMMAND_STATION_PR4_ALONE.getName())) {\n                 foundPR4StandaloneProgrammer = true;\n             }\n+            if (cmdStns[i].compareTo(\n+                    LnCommandStationType.COMMAND_STATION_STANDALONE.getName().toString() +\n+                    \" (using external LocoNet Data Termination!)\") == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjMxNDYwOQ=="}, "originalCommit": {"oid": "0a6dbe36d07d30333242b7c1621bf335b9d11206"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4341, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}