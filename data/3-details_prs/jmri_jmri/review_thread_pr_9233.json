{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTc2NjM3", "number": 9233, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNzoyMzowNFrOFEsEXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNzoyMzowNFrOFEsEXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDYwNjM4OnYy", "diffSide": "RIGHT", "path": "help/en/package/jmri/jmrit/withrottle/Protocol.shtml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxNzoyMzowNFrOIE3DGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxNzo0MFrOIFEjqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2NzEyOQ==", "bodyText": "I don't believe this is correct, I believe a new message is only sent when the minute changes. I'll look at the code shortly to verify.", "url": "https://github.com/JMRI/JMRI/pull/9233#discussion_r541967129", "createdAt": "2020-12-13T17:23:04Z", "author": {"login": "mstevetodd"}, "path": "help/en/package/jmri/jmrit/withrottle/Protocol.shtml", "diffHunk": "@@ -505,19 +505,30 @@ PFT1550686525&lt;;&gt;4.0\n PFT1550681224&lt;;&gt;0.0\n </pre>\n \n-    <p>The first number is an integer number of seconds since 12:00\n-    midnight, January 1st, 1970. This start date is the Unix time epoch,\n-    and makes it easy to convert this value using the standard time\n-    libraries. Only the hours and minutes are useful. JMRI sends a value\n-    based on the system time when the fast clock was started, so will\n-    return a value near the calendar date. The Digitrax LnWi returns\n-    values within the range 0-86400 (all the values for January 1,\n-    1970).<br/>\n+    <p>The first number is an integer number of seconds since 12:00 midnight,\n+    January 1st, 1970 fast clock time. This zero date is very close to the\n+    Unix time epoch, which is 12:00 midnight, January 1st, 1970 UTC, only\n+    differing in the time zone offset, where applicable.\n+    In fact, this makes it easy to convert this value using the standard time\n+    libraries, as long as any time zone conversions are omitted. JMRI sends a\n+    value based on the system date when the fast clock was started, so it will\n+    return a value near the calendar date. Since the JMRI fast clock does not\n+    really support calendar dates, only the hour, minute and second are useful.\n+    The Digitrax LNWI returns values within the range 0-86400, which translates\n+    to times on January 1st, 1970, when the day, month and year are \n+    calculated.<br/>\n+    To give an example: A JMRI instance started on Dec 13, 2020 with a fast clock\n+    time set to 10:23:45 am will return 1607855025, which can be converted back\n+    to hours, minutes and seconds by \"modulo dividing\" by 86400\n+    (number of seconds in a day) and calculating further as follows:<br/>\n+    1607855025 mod 86400 = 37425 seconds since midnight.<br/>\n+    37425 seconds since midnight = 10 hours 1425 seconds since midnight = \n+    10 hours 23 minutes 45 seconds since midnight = 10:23:45 am.<br/>\n     The second number is the current fast time ratio.  It\n     may be an integer value (4) or a floating point value (4.0).  If this\n     value is 0 (or 0.0), the clock is stopped.<br/>\n     Updates are sent on each change in time or rate, and when clock stopped \n-    or started.</p>\n+    or started, so expect one message every fast clock second.</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f57c0e72aff947a056c53dbdf19227091477e51"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4ODQ1OA==", "bodyText": "Sorry, my bad. You are right, it's once per minute.\n(just tested with your test server).", "url": "https://github.com/JMRI/JMRI/pull/9233#discussion_r542188458", "createdAt": "2020-12-14T08:17:40Z", "author": {"login": "newHeiko"}, "path": "help/en/package/jmri/jmrit/withrottle/Protocol.shtml", "diffHunk": "@@ -505,19 +505,30 @@ PFT1550686525&lt;;&gt;4.0\n PFT1550681224&lt;;&gt;0.0\n </pre>\n \n-    <p>The first number is an integer number of seconds since 12:00\n-    midnight, January 1st, 1970. This start date is the Unix time epoch,\n-    and makes it easy to convert this value using the standard time\n-    libraries. Only the hours and minutes are useful. JMRI sends a value\n-    based on the system time when the fast clock was started, so will\n-    return a value near the calendar date. The Digitrax LnWi returns\n-    values within the range 0-86400 (all the values for January 1,\n-    1970).<br/>\n+    <p>The first number is an integer number of seconds since 12:00 midnight,\n+    January 1st, 1970 fast clock time. This zero date is very close to the\n+    Unix time epoch, which is 12:00 midnight, January 1st, 1970 UTC, only\n+    differing in the time zone offset, where applicable.\n+    In fact, this makes it easy to convert this value using the standard time\n+    libraries, as long as any time zone conversions are omitted. JMRI sends a\n+    value based on the system date when the fast clock was started, so it will\n+    return a value near the calendar date. Since the JMRI fast clock does not\n+    really support calendar dates, only the hour, minute and second are useful.\n+    The Digitrax LNWI returns values within the range 0-86400, which translates\n+    to times on January 1st, 1970, when the day, month and year are \n+    calculated.<br/>\n+    To give an example: A JMRI instance started on Dec 13, 2020 with a fast clock\n+    time set to 10:23:45 am will return 1607855025, which can be converted back\n+    to hours, minutes and seconds by \"modulo dividing\" by 86400\n+    (number of seconds in a day) and calculating further as follows:<br/>\n+    1607855025 mod 86400 = 37425 seconds since midnight.<br/>\n+    37425 seconds since midnight = 10 hours 1425 seconds since midnight = \n+    10 hours 23 minutes 45 seconds since midnight = 10:23:45 am.<br/>\n     The second number is the current fast time ratio.  It\n     may be an integer value (4) or a floating point value (4.0).  If this\n     value is 0 (or 0.0), the clock is stopped.<br/>\n     Updates are sent on each change in time or rate, and when clock stopped \n-    or started.</p>\n+    or started, so expect one message every fast clock second.</p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk2NzEyOQ=="}, "originalCommit": {"oid": "4f57c0e72aff947a056c53dbdf19227091477e51"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4360, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}