{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDg1NTYz", "number": 8509, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozNjo0M1rOD60ScA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozNjo0M1rOD60ScA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDAwNjg4OnYy", "diffSide": "RIGHT", "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMDozNjo0M1rOGS3KVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxNDo0Mzo0OVrOGS7lhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTMxOQ==", "bodyText": "This will not ensure sufficient uniqueness, since if two JMRI instances are running the same profile, they will use the same profile ID. (The JMRI profile ID system is designed to allowed for this.)\nYou want to use jmri.util.node.NodeIdentity.networkIdentity() instead of jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId().", "url": "https://github.com/JMRI/JMRI/pull/8509#discussion_r422431319", "createdAt": "2020-05-09T00:36:43Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "diffHunk": "@@ -61,7 +61,7 @@ public void connect() throws IOException {\n                 options.put(option2Name, new Option(\"MQTT channel :\", new String[]{baseTopic, DEFAULT_BASETOPIC}));\n             }\n \n-            String clientID = CLID + \"-\" + this.getUserName();\n+            String clientID = CLID + \"-\" + this.getUserName() + \"-\" + jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b83971d21b5ae77d8142142350131caa88bf0acc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTQ5OA==", "bodyText": "(This change will also resolve the static analysis failures.)", "url": "https://github.com/JMRI/JMRI/pull/8509#discussion_r422431498", "createdAt": "2020-05-09T00:37:47Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "diffHunk": "@@ -61,7 +61,7 @@ public void connect() throws IOException {\n                 options.put(option2Name, new Option(\"MQTT channel :\", new String[]{baseTopic, DEFAULT_BASETOPIC}));\n             }\n \n-            String clientID = CLID + \"-\" + this.getUserName();\n+            String clientID = CLID + \"-\" + this.getUserName() + \"-\" + jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTMxOQ=="}, "originalCommit": {"oid": "b83971d21b5ae77d8142142350131caa88bf0acc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzNDEyOA==", "bodyText": "networkIdentity() returns a 26 character string on my system, from a quick look at the source code I am assuming this is a fixed length on all systems, the maximum client ID length allowed by the MQTT protocol is 23 characters.\nThe networkIdentity()  ID begins with \"jmri-\" if this prefix were excluded then networkIdentity() could be used as the Client ID, which from my reading of the source code for network identity would result in essentially the concatenation of the mac address and profile ID which should ensure uniqueness.", "url": "https://github.com/JMRI/JMRI/pull/8509#discussion_r422434128", "createdAt": "2020-05-09T00:56:18Z", "author": {"login": "AndTH"}, "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "diffHunk": "@@ -61,7 +61,7 @@ public void connect() throws IOException {\n                 options.put(option2Name, new Option(\"MQTT channel :\", new String[]{baseTopic, DEFAULT_BASETOPIC}));\n             }\n \n-            String clientID = CLID + \"-\" + this.getUserName();\n+            String clientID = CLID + \"-\" + this.getUserName() + \"-\" + jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTMxOQ=="}, "originalCommit": {"oid": "b83971d21b5ae77d8142142350131caa88bf0acc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ4MjI0Mw==", "bodyText": "The network identity is \"jmri-\" + MAC address (12 characters) + \"-\" + profile ID (8 characters).\nhttp://docs.oasis-open.org/mqtt/mqtt/v3.1.1/os/mqtt-v3.1.1-os.html#_Toc398718031 has minimum requirements for an acceptable client ID, which also exclude the use of dashes (as well as minimally allow 23 characters in the ID). An MQTT server may allow a longer ID and other characters than those specified.\nSo your proposal (and what JMRI had) is also not ensured to be valid name.\nTo make a safe name that is ensured to be valid, I would use:\nString clientID = (NodeIdentity.networkIdentity() + getSystemPrefix()).replaceAll(\"/[^A-Za-z0-9 ]/\", \"\");\nif (clientID.length() > 23) {\n    clientID = clientID.subString(clientID.length() - 23);\n}\n\nNote that I am truncating from the left, not the right, in an attempt to allow:\n\nSingle JMRI instance to have 2 or more MQTT connections to a single MQTT server\nSingle computer to run multiple JMRI instances with connections to a single MQTT server (assuming each instance is using different profile)\nMultiple computers running a JMRI instance triggered from copies of the same profile to a single MQTT server", "url": "https://github.com/JMRI/JMRI/pull/8509#discussion_r422482243", "createdAt": "2020-05-09T10:52:34Z", "author": {"login": "rhwood"}, "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "diffHunk": "@@ -61,7 +61,7 @@ public void connect() throws IOException {\n                 options.put(option2Name, new Option(\"MQTT channel :\", new String[]{baseTopic, DEFAULT_BASETOPIC}));\n             }\n \n-            String clientID = CLID + \"-\" + this.getUserName();\n+            String clientID = CLID + \"-\" + this.getUserName() + \"-\" + jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTMxOQ=="}, "originalCommit": {"oid": "b83971d21b5ae77d8142142350131caa88bf0acc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUwMzgxNQ==", "bodyText": "This works with the following modified regex (removed leading and trailing /)  \"[^A-Za-z0-9 ]\" as it did not remove the -\u2018s with them in.", "url": "https://github.com/JMRI/JMRI/pull/8509#discussion_r422503815", "createdAt": "2020-05-09T14:43:49Z", "author": {"login": "AndTH"}, "path": "java/src/jmri/jmrix/mqtt/MqttAdapter.java", "diffHunk": "@@ -61,7 +61,7 @@ public void connect() throws IOException {\n                 options.put(option2Name, new Option(\"MQTT channel :\", new String[]{baseTopic, DEFAULT_BASETOPIC}));\n             }\n \n-            String clientID = CLID + \"-\" + this.getUserName();\n+            String clientID = CLID + \"-\" + this.getUserName() + \"-\" + jmri.profile.ProfileManager.getDefault().getActiveProfile().getUniqueId();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzMTMxOQ=="}, "originalCommit": {"oid": "b83971d21b5ae77d8142142350131caa88bf0acc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}