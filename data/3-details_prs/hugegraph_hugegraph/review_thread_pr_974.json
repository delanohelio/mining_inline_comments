{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NTA5OTI2", "number": 974, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNToyN1rOD38kqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0OToyMFrOD8JttQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTkwNjk4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/memory/InMemoryDBTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNToyN1rOGOfVkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNToyN1rOGOfVkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0NjY3Mg==", "bodyText": "0L", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r417846672", "createdAt": "2020-04-30T08:35:27Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/memory/InMemoryDBTable.java", "diffHunk": "@@ -277,4 +319,26 @@ private static boolean matchCondition(BackendEntry item, Condition c) {\n         }\n         return false;\n     }\n+\n+    private class InMemoryShardSpliter extends ShardSpliter {\n+\n+        public InMemoryShardSpliter(String table) {\n+            super(table);\n+        }\n+\n+        @Override\n+        protected long maxKey() {\n+            return InMemoryDBTable.this.store.size();\n+        }\n+\n+        @Override\n+        protected long estimateDataSize(BackendSession session) {\n+            return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDEyODU1OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/BackendEntryIterator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozNjozOVrOGOhh_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTozNjozOVrOGOhh_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg4MjYyMA==", "bodyText": "move to fetch()", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r417882620", "createdAt": "2020-04-30T09:36:39Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/BackendEntryIterator.java", "diffHunk": "@@ -80,9 +80,17 @@ public BackendEntry next() {\n \n         this.current = null;\n         this.count += this.sizeOf(current);\n+        if (this.query.paging() && !this.query.nolimit() &&\n+            this.count > this.query.limit()) {\n+            this.reduce2limit(current);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDIwOTcyOnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/EdgeCoreTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwOTo1OTo1NlrOGOiWKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozODo0MlrOGRTaug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5NTk3Nw==", "bodyText": "TODO: unify format\nat least unify start and end", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r417895977", "createdAt": "2020-04-30T09:59:56Z", "author": {"login": "javeme"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/EdgeCoreTest.java", "diffHunk": "@@ -3326,8 +3327,18 @@ public void testScanEdgeInPaging() {\n         List<Edge> edges = new LinkedList<>();\n \n         ConditionQuery query = new ConditionQuery(HugeType.EDGE);\n-        query.scan(String.valueOf(Long.MIN_VALUE),\n-                   String.valueOf(Long.MAX_VALUE));\n+\n+        String backend = graph.backend();\n+        if (backend.equals(\"hbase\")) {\n+            query.scan(\"00\", BackendTable.ShardSpliter.END);\n+        } else if (backend.equals(\"mysql\") || backend.equals(\"postgresql\")) {\n+            query.scan(BackendTable.ShardSpliter.END,\n+                       BackendTable.ShardSpliter.END);\n+        } else {\n+            query.scan(String.valueOf(Long.MIN_VALUE),\n+                       String.valueOf(Long.MAX_VALUE));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5NzExNA==", "bodyText": "set START=END=\"\"\nand just set cassandra as long value", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r420797114", "createdAt": "2020-05-06T13:38:42Z", "author": {"login": "javeme"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/EdgeCoreTest.java", "diffHunk": "@@ -3326,8 +3327,18 @@ public void testScanEdgeInPaging() {\n         List<Edge> edges = new LinkedList<>();\n \n         ConditionQuery query = new ConditionQuery(HugeType.EDGE);\n-        query.scan(String.valueOf(Long.MIN_VALUE),\n-                   String.valueOf(Long.MAX_VALUE));\n+\n+        String backend = graph.backend();\n+        if (backend.equals(\"hbase\")) {\n+            query.scan(\"00\", BackendTable.ShardSpliter.END);\n+        } else if (backend.equals(\"mysql\") || backend.equals(\"postgresql\")) {\n+            query.scan(BackendTable.ShardSpliter.END,\n+                       BackendTable.ShardSpliter.END);\n+        } else {\n+            query.scan(String.valueOf(Long.MIN_VALUE),\n+                       String.valueOf(Long.MAX_VALUE));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5NTk3Nw=="}, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDIyMjE1OnYy", "diffSide": "RIGHT", "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDowMzo1MFrOGOieTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDowMzo1MFrOGOieTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5ODA2MA==", "bodyText": "improve code", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r417898060", "createdAt": "2020-04-30T10:03:50Z", "author": {"login": "javeme"}, "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "diffHunk": "@@ -389,6 +411,65 @@ public Number queryNumber(Session session, Query query) {\n         return selections;\n     }\n \n+    protected StringBuilder queryByRange(ConditionQuery query,\n+                                         StringBuilder select) {\n+        E.checkArgument(query.relations().size() == 1,\n+                        \"Invalid scan with multi conditions: %s\", query);\n+        Condition.Relation scan = query.relations().iterator().next();\n+        Shard shard = (Shard) scan.value();\n+\n+        String page = query.page();\n+        if (MysqlShardSpliter.END.equals(shard.start()) &&\n+            MysqlShardSpliter.END.equals(shard.end()) &&\n+            (page == null || page.isEmpty())) {\n+            select.append(this.orderByKeys());\n+            if (!query.nolimit()) {\n+                // Fetch `limit + 1` rows for judging whether reached the last page\n+                select.append(\" limit \");\n+                select.append(query.limit() + 1);\n+            }\n+            select.append(\";\");\n+            return select;\n+        }\n+\n+        // < end\n+        HugeKeys partitionKey = this.idColumnName().get(0);\n+        WhereBuilder where = this.newWhereBuilder();\n+        boolean prefixAnd = true;\n+        if (!MysqlShardSpliter.END.equals(shard.end())) {\n+            where.lt(formatKey(partitionKey), shard.end());\n+        } else {\n+            prefixAnd = false;\n+        }\n+        select.append(where.build());\n+\n+        if (page != null && !page.isEmpty()) {\n+            // >= page\n+            wrapPage(select, query, prefixAnd);\n+        } else {\n+            // >= start\n+            if (!MysqlShardSpliter.END.equals(shard.start())) {\n+                if (prefixAnd) {\n+                    select.append(\" AND \");\n+                }\n+                where = this.newWhereBuilder(false);\n+                where.gte(formatKey(partitionKey), shard.start());\n+                select.append(where.build());\n+            }\n+\n+            select.append(this.orderByKeys());\n+\n+            if (!query.nolimit()) {\n+                // Fetch `limit + 1` rows for judging whether reached the last page\n+                select.append(\" limit \");\n+                select.append(query.limit() + 1);\n+            }\n+            select.append(\";\");\n+        }\n+\n+        return select;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMDIyMzQ3OnYy", "diffSide": "RIGHT", "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlEntryIterator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDowNDowOFrOGOie_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMDowNDowOFrOGOie_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg5ODIzOQ==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r417898239", "createdAt": "2020-04-30T10:04:08Z", "author": {"login": "javeme"}, "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlEntryIterator.java", "diffHunk": "@@ -86,6 +86,14 @@ protected final boolean fetch() {\n         return this.current != null;\n     }\n \n+    @Override\n+    protected void reduce2limit(BackendEntry entry) {\n+        MysqlBackendEntry e = (MysqlBackendEntry) entry;\n+        int size = e.subRows().size();\n+        // Remove last paging row\n+        e.subRows().remove(size - 1);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f4bdb555cdfeeb0488000e4415c759d954999ee"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTU0MTg5OnYy", "diffSide": "RIGHT", "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozNTozMlrOGRTRXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozNTozMlrOGRTRXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5NDcxNg==", "bodyText": "this.wrapLimit", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r420794716", "createdAt": "2020-05-06T13:35:32Z", "author": {"login": "javeme"}, "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "diffHunk": "@@ -402,7 +402,8 @@ public Number queryNumber(Session session, Query query) {\n                 this.wrapOrderBy(selection, query);\n             }\n             if (query.paging()) {\n-                this.wrapPage(selection, query);\n+                this.wrapPage(selection, query, false);\n+                wrapLimit(selection, query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e6e22c3f8e8169d9a845ceee82e5dd41027111"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTU0NDE3OnYy", "diffSide": "RIGHT", "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozNTo1NFrOGRTSow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozNTo1NFrOGRTSow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5NTA0Mw==", "bodyText": "this.wrapPage", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r420795043", "createdAt": "2020-05-06T13:35:54Z", "author": {"login": "javeme"}, "path": "hugegraph-mysql/src/main/java/com/baidu/hugegraph/backend/store/mysql/MysqlTable.java", "diffHunk": "@@ -422,50 +423,40 @@ protected StringBuilder queryByRange(ConditionQuery query,\n         if (MysqlShardSpliter.END.equals(shard.start()) &&\n             MysqlShardSpliter.END.equals(shard.end()) &&\n             (page == null || page.isEmpty())) {\n-            select.append(this.orderByKeys());\n-            if (!query.nolimit()) {\n-                // Fetch `limit + 1` rows for judging whether reached the last page\n-                select.append(\" limit \");\n-                select.append(query.limit() + 1);\n-            }\n-            select.append(\";\");\n+            this.wrapLimit(select, query);\n             return select;\n         }\n \n-        // < end\n         HugeKeys partitionKey = this.idColumnName().get(0);\n-        WhereBuilder where = this.newWhereBuilder();\n-        boolean prefixAnd = true;\n-        if (!MysqlShardSpliter.END.equals(shard.end())) {\n-            where.lt(formatKey(partitionKey), shard.end());\n-        } else {\n-            prefixAnd = false;\n-        }\n-        select.append(where.build());\n \n         if (page != null && !page.isEmpty()) {\n             // >= page\n-            wrapPage(select, query, prefixAnd);\n+            wrapPage(select, query, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e6e22c3f8e8169d9a845ceee82e5dd41027111"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTU1ODAyOnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/VertexCoreTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozODo1NlrOGRTbbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMzozODo1NlrOGRTbbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc5NzI5Mw==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r420797293", "createdAt": "2020-05-06T13:38:56Z", "author": {"login": "javeme"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/VertexCoreTest.java", "diffHunk": "@@ -5034,10 +5035,19 @@ public void testScanVertexInPaging() {\n         init10Vertices();\n \n         List<Vertex> vertices = new LinkedList<>();\n-\n         ConditionQuery query = new ConditionQuery(HugeType.VERTEX);\n-        query.scan(String.valueOf(Long.MIN_VALUE),\n-                   String.valueOf(Long.MAX_VALUE));\n+\n+        String backend = graph.backend();\n+        if (backend.equals(\"hbase\")) {\n+            query.scan(\"00\", BackendTable.ShardSpliter.END);\n+        } else if (backend.equals(\"mysql\") || backend.equals(\"postgresql\")) {\n+            query.scan(BackendTable.ShardSpliter.END,\n+                       BackendTable.ShardSpliter.END);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e6e22c3f8e8169d9a845ceee82e5dd41027111"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mzk4OTkzOnYy", "diffSide": "RIGHT", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBSessions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NjowMVrOGU6gUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NjowMVrOGU6gUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MzI1MA==", "bodyText": "keyRange", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r424583250", "createdAt": "2020-05-13T16:46:01Z", "author": {"login": "javeme"}, "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBSessions.java", "diffHunk": "@@ -63,6 +64,7 @@ public abstract RocksDBSessions copy(HugeConfig config,\n         public static final int SCAN_LTE_END = 0x30;\n \n         public abstract String property(String table, String property);\n+        public abstract Pair<byte[], byte[]> getKeyRange(String table);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750d0374384fe0650637f534dbd23cd870e522b5"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0Mzk5NjcxOnYy", "diffSide": "RIGHT", "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStdSessions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NzozOVrOGU6kpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0NzozOVrOGU6kpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NDM1Ng==", "bodyText": "return Pair.of(startKey, null);", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r424584356", "createdAt": "2020-05-13T16:47:39Z", "author": {"login": "javeme"}, "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStdSessions.java", "diffHunk": "@@ -603,6 +604,25 @@ public String property(String table, String property) {\n             }\n         }\n \n+        @Override\n+        public Pair<byte[], byte[]> getKeyRange(String table) {\n+            byte[] startKey, endKey;\n+            try (CFHandle cf = cf(table);\n+                 RocksIterator iter = rocksdb().newIterator(cf.get())) {\n+                iter.seekToFirst();\n+                if (!iter.isValid()) {\n+                    return null;\n+                }\n+                startKey = iter.key();\n+                iter.seekToLast();\n+                if (!iter.isValid()) {\n+                    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750d0374384fe0650637f534dbd23cd870e522b5"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDAwMzA5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/BackendTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0OToyMFrOGU6ozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0OToyMFrOGU6ozg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4NTQyMg==", "bodyText": "align", "url": "https://github.com/hugegraph/hugegraph/pull/974#discussion_r424585422", "createdAt": "2020-05-13T16:49:20Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/BackendTable.java", "diffHunk": "@@ -127,7 +131,17 @@ public static final String joinTableName(String prefix, String table) {\n         // We assume the size of each key-value is 100 bytes\n         protected static final int ESTIMATE_BYTES_PER_KV = 100;\n \n-        public static final String END = \"-1\";\n+        public static final String START = \"\";\n+        public static final String END = \"\";\n+\n+        private static final byte[] EMPTY = new byte[0];\n+        public static final byte[] START_BYTES = new byte[]{0x0};\n+        public static final byte[] END_BYTES = new byte[]{\n+                -1, -1, -1, -1, -1, -1, -1, -1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "750d0374384fe0650637f534dbd23cd870e522b5"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1616, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}