{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDc3MDE0", "number": 1121, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowMDo0N1rOETgqjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozNDo1NlrOEUAtUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODkzNTgyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowMDo0N1rOG5SOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxMDo1MlrOG5axJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcyMDY2Ng==", "bodyText": "rename StoreClosure closure to future", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462720666", "createdAt": "2020-07-30T04:00:47Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -229,12 +237,25 @@ public void run(Status status, long index, byte[] reqCtx) {\n                             query, status));\n                 }\n             }\n-        });\n-        try {\n-            return closure.waitFinished();\n-        } catch (Throwable t) {\n-            throw new BackendException(\"Failed to query\", t);\n+        };\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            this.node().node().readIndex(BytesUtil.EMPTY_BYTES,\n+                                         readIndexClosure);\n+            try {\n+                return closure.waitFinished();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "176005976453a77f619f20cc14588fd6cb0a2750"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2MDU4MA==", "bodyText": "other place used closure", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462860580", "createdAt": "2020-07-30T09:10:52Z", "author": {"login": "Linary"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -229,12 +237,25 @@ public void run(Status status, long index, byte[] reqCtx) {\n                             query, status));\n                 }\n             }\n-        });\n-        try {\n-            return closure.waitFinished();\n-        } catch (Throwable t) {\n-            throw new BackendException(\"Failed to query\", t);\n+        };\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            this.node().node().readIndex(BytesUtil.EMPTY_BYTES,\n+                                         readIndexClosure);\n+            try {\n+                return closure.waitFinished();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcyMDY2Ng=="}, "originalCommit": {"oid": "176005976453a77f619f20cc14588fd6cb0a2750"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODk0MjMxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowNDo0M1rOG5SSUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowNDo0M1rOG5SSUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcyMTYxOA==", "bodyText": "move to \"status.getRaftError() == RaftError.EAGAIN\" block to line 247, just throw exception in else block", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462721618", "createdAt": "2020-07-30T04:04:43Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -215,12 +216,19 @@ private Object queryByRaft(Query query, Function<Object, Object> func) {\n         this.node().waitLeaderElected();\n         StoreCommand command = new StoreCommand(StoreAction.QUERY);\n         StoreClosure closure = new StoreClosure(command);\n-        RaftNode raftNode = this.node();\n-        raftNode.node().readIndex(BytesUtil.EMPTY_BYTES, new ReadIndexClosure() {\n+        ReadIndexClosure readIndexClosure = new ReadIndexClosure() {\n             @Override\n             public void run(Status status, long index, byte[] reqCtx) {\n                 if (status.isOk()) {\n                     closure.complete(status, () -> func.apply(query));\n+                } else if (status.getRaftError() == RaftError.EAGAIN) {\n+                    LOG.warn(\"Failed to execute query {} because of leader \" +\n+                             \"has not committed any log entry at its term\",\n+                             query);\n+                    closure.failure(status, new RaftException(\n+                            \"Failed to execute query '%s' because of leader \" +\n+                            \"has not committed any log entry at its term\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "176005976453a77f619f20cc14588fd6cb0a2750"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODk0NjExOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowNjo1MVrOG5SUcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDowNjo1MVrOG5SUcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcyMjE2MA==", "bodyText": "collect last error message like \"retries times with error: %s\"", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462722160", "createdAt": "2020-07-30T04:06:51Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -229,12 +237,25 @@ public void run(Status status, long index, byte[] reqCtx) {\n                             query, status));\n                 }\n             }\n-        });\n-        try {\n-            return closure.waitFinished();\n-        } catch (Throwable t) {\n-            throw new BackendException(\"Failed to query\", t);\n+        };\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            this.node().node().readIndex(BytesUtil.EMPTY_BYTES,\n+                                         readIndexClosure);\n+            try {\n+                return closure.waitFinished();\n+            } catch (RaftException e) {\n+                try {\n+                    Thread.sleep(RaftSharedContext.QUERY_RETRY_INTERVAL);\n+                } catch (InterruptedException ex) {\n+                    throw new BackendException(\"Try to sleep a while for \" +\n+                                               \"querying is interrupted\");\n+                }\n+            } catch (Throwable t) {\n+                throw new BackendException(\"Failed to execute query\", t);\n+            }\n         }\n+        throw new BackendException(\"Failed to query in the case of %s \" +\n+                                   \"retries times\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "176005976453a77f619f20cc14588fd6cb0a2750"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg0MjYyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxMToyMFrOG5ax_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxMToyMFrOG5ax_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2MDc5OQ==", "bodyText": "move LOG.warn at line 231 here", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462860799", "createdAt": "2020-07-30T09:11:20Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -229,11 +235,12 @@ public void run(Status status, long index, byte[] reqCtx) {\n                             query, status));\n                 }\n             }\n-        });\n+        };\n+        this.node().node().readIndex(BytesUtil.EMPTY_BYTES, readIndexClosure);\n         try {\n             return closure.waitFinished();\n         } catch (Throwable t) {\n-            throw new BackendException(\"Failed to query\", t);\n+            throw new BackendException(\"Failed to execute query\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg1NTYzOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNTowMFrOG5a6FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNTowMFrOG5a6FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2Mjg2OA==", "bodyText": "RaftNode.this.started", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462862868", "createdAt": "2020-07-30T09:15:00Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -246,6 +274,12 @@ public void onCreated(PeerId peer) {\n             LOG.info(\"The node {} replicator has created\", peer);\n         }\n \n+        @Override\n+        public void onHeartbeated(PeerId peer) {\n+            LOG.info(\"The node {} replicator has heartbeated\", peer);\n+            started = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg1NTk5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNTowNlrOG5a6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNTowNlrOG5a6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2MjkyOQ==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462862929", "createdAt": "2020-07-30T09:15:06Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -266,6 +300,7 @@ private boolean isWriteBufferOverflow(Status status) {\n         @Override\n         public void onDestroyed(PeerId peer) {\n             LOG.warn(\"The node {} prepare to offline\", peer);\n+            started = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg2MTE2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNjozN1rOG5a9hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxNjozN1rOG5a9hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2Mzc1MA==", "bodyText": "rename waitStarted", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462863750", "createdAt": "2020-07-30T09:16:37Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -165,6 +175,24 @@ protected void waitLeaderElected() {\n                   this.group(), WAIT_LEADER_TIMEOUT);\n     }\n \n+    protected boolean waitHeartbeated() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg2NzU5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxODozMVrOG5bBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozNTowN1rOG6D_fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2NDgwNg==", "bodyText": "rename ex to e", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462864806", "createdAt": "2020-07-30T09:18:31Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -165,6 +175,24 @@ protected void waitLeaderElected() {\n                   this.group(), WAIT_LEADER_TIMEOUT);\n     }\n \n+    protected boolean waitHeartbeated() {\n+        int electionTimeout = this.node.getOptions().getElectionTimeoutMs();\n+        // Raft election:heartbeat timeout factor\n+        int factor = this.node.getRaftOptions().getElectionHeartbeatFactor();\n+        int heartbeatInterval = electionTimeout / factor;\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            if (this.started) {\n+                break;\n+            }\n+            try {\n+                Thread.sleep(heartbeatInterval);\n+            } catch (InterruptedException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNTk5OA==", "bodyText": "address", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463535998", "createdAt": "2020-07-31T10:35:07Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -165,6 +175,24 @@ protected void waitLeaderElected() {\n                   this.group(), WAIT_LEADER_TIMEOUT);\n     }\n \n+    protected boolean waitHeartbeated() {\n+        int electionTimeout = this.node.getOptions().getElectionTimeoutMs();\n+        // Raft election:heartbeat timeout factor\n+        int factor = this.node.getRaftOptions().getElectionHeartbeatFactor();\n+        int heartbeatInterval = electionTimeout / factor;\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            if (this.started) {\n+                break;\n+            }\n+            try {\n+                Thread.sleep(heartbeatInterval);\n+            } catch (InterruptedException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2NDgwNg=="}, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg2NzY3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxODozM1rOG5bBsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxODozM1rOG5bBsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2NDgxOA==", "bodyText": "add cause param", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462864818", "createdAt": "2020-07-30T09:18:33Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -165,6 +175,24 @@ protected void waitLeaderElected() {\n                   this.group(), WAIT_LEADER_TIMEOUT);\n     }\n \n+    protected boolean waitHeartbeated() {\n+        int electionTimeout = this.node.getOptions().getElectionTimeoutMs();\n+        // Raft election:heartbeat timeout factor\n+        int factor = this.node.getRaftOptions().getElectionHeartbeatFactor();\n+        int heartbeatInterval = electionTimeout / factor;\n+        for (int i = 0; i < RaftSharedContext.QUERY_RETRY_TIMES; i++) {\n+            if (this.started) {\n+                break;\n+            }\n+            try {\n+                Thread.sleep(heartbeatInterval);\n+            } catch (InterruptedException ex) {\n+                throw new BackendException(\"Waiting heartbeated is interrupted\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg3MTg0OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxOTo0NVrOG5bEZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToxOTo0NVrOG5bEZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2NTUwOQ==", "bodyText": "rename StoreClosure closure to future", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462865509", "createdAt": "2020-07-30T09:19:45Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -212,11 +220,9 @@ private Object queryByRaft(Query query, Function<Object, Object> func) {\n             return func.apply(query);\n         }\n \n-        this.node().waitLeaderElected();\n         StoreCommand command = new StoreCommand(StoreAction.QUERY);\n         StoreClosure closure = new StoreClosure(command);\n-        RaftNode raftNode = this.node();\n-        raftNode.node().readIndex(BytesUtil.EMPTY_BYTES, new ReadIndexClosure() {\n+        ReadIndexClosure readIndexClosure = new ReadIndexClosure() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg3NTUwOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToyMDo0N1rOG5bGnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToyMDo0N1rOG5bGnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2NjA3Ng==", "bodyText": "Failed to wait raft node heartbeat", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462866076", "createdAt": "2020-07-30T09:20:47Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -86,6 +86,14 @@ public boolean isSchemaStore() {\n     public synchronized void open(HugeConfig config) {\n         this.store.open(config);\n         this.initRaftNodeIfNeeded();\n+\n+        RaftNode node = this.node();\n+        node.waitLeaderElected();\n+        if (node.node().isLeader()) {\n+            if (!node.waitHeartbeated()) {\n+                throw new BackendException(\"Wait raft node heartbeat failed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTkzMzMxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozNjo1NFrOG5bqtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTozNjo1NFrOG5bqtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3NTMxNw==", "bodyText": "add a common waitFor(future, timeout) method", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r462875317", "createdAt": "2020-07-30T09:36:54Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -86,6 +86,14 @@ public boolean isSchemaStore() {\n     public synchronized void open(HugeConfig config) {\n         this.store.open(config);\n         this.initRaftNodeIfNeeded();\n+\n+        RaftNode node = this.node();\n+        node.waitLeaderElected();\n+        if (node.node().isLeader()) {\n+            if (!node.waitHeartbeated()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c859c0a65aa5053bbec15eeb54393e2e3dfd1fee"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzE5NTQ4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzoyMzo0M1rOG56zvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzoyMzo0M1rOG56zvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NTUzMg==", "bodyText": "also define NO_TIMEOUT", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463385532", "createdAt": "2020-07-31T03:23:43Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -86,13 +86,13 @@ public boolean isSchemaStore() {\n     public synchronized void open(HugeConfig config) {\n         this.store.open(config);\n         this.initRaftNodeIfNeeded();\n+    }\n \n+    public void waitStoreStarted() {\n         RaftNode node = this.node();\n-        node.waitLeaderElected();\n+        node.waitLeaderElected(RaftSharedContext.WAIT_LEADER_TIMEOUT);\n         if (node.node().isLeader()) {\n-            if (!node.waitHeartbeated()) {\n-                throw new BackendException(\"Wait raft node heartbeat failed\");\n-            }\n+            node.waitHeartbeated(-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42e21eedc6bd4e7290912cd631b1178e6b97e0e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzE5NTgxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzoyNDowMlrOG56z9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzoyNDowMlrOG56z9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NTU5MQ==", "bodyText": "check not null", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463385591", "createdAt": "2020-07-31T03:24:02Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "diffHunk": "@@ -105,6 +105,13 @@ public void open(String name) {\n         this.provider.open(name);\n     }\n \n+    @Override\n+    public void waitStoreStarted() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42e21eedc6bd4e7290912cd631b1178e6b97e0e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzIwODYwOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzozMzowMVrOG567NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzozMzowMVrOG567NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4NzQ0NA==", "bodyText": "abdicated from follower", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463387444", "createdAt": "2020-07-31T03:33:01Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "diffHunk": "@@ -199,30 +194,44 @@ public boolean onSnapshotLoad(SnapshotReader reader) {\n             LOG.warn(\"Leader is not supposed to load snapshot.\");\n             return false;\n         }\n-        LOG.debug(\"The node {} start snapshot load\", this.nodeId);\n+        LOG.debug(\"The node {} start snapshot load\", this.node.nodeId());\n         return this.snapshotFile.load(this.store, reader);\n     }\n \n     @Override\n     public void onLeaderStart(long term) {\n-        LOG.info(\"The node {} become to leader\", this.nodeId);\n-        this.leaderTerm.set(term);\n+        LOG.info(\"The node {} become to leader\", this.node.nodeId());\n+        this.node.onElected(true);\n         super.onLeaderStart(term);\n     }\n \n     @Override\n     public void onLeaderStop(Status status) {\n-        LOG.info(\"The node {} abdicated from leader\", this.nodeId);\n-        this.leaderTerm.set(-1);\n+        LOG.info(\"The node {} abdicated from leader\", this.node.nodeId());\n+        this.node.onElected(false);\n         super.onLeaderStop(status);\n     }\n \n+    @Override\n+    public void onStartFollowing(LeaderChangeContext ctx) {\n+        LOG.info(\"The node {} become to follower\", this.node.nodeId());\n+        this.node.onElected(true);\n+        super.onStartFollowing(ctx);\n+    }\n+\n+    @Override\n+    public void onStopFollowing(LeaderChangeContext ctx) {\n+        LOG.info(\"The node {} become to follower\", this.node.nodeId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81fadc8c492d3a5a4ce1745a1071265d92996ba"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzIxMTY2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/ServerInfoManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzozNTowOFrOG5683A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMzozNTowOFrOG5683A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM4Nzg2OA==", "bodyText": "should use this.call() if graph.initlalized() will open tx (ensure graph tx closed when graph close)", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463387868", "createdAt": "2020-07-31T03:35:08Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/ServerInfoManager.java", "diffHunk": "@@ -337,7 +335,7 @@ private HugeServerInfo serverInfo(Id server) {\n     }\n \n     private HugeServerInfo removeSelfServerInfo() {\n-        if (this.initialized()) {\n+        if (this.graph.initialized()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81fadc8c492d3a5a4ce1745a1071265d92996ba"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDE4MjY0OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozMzo0NlrOG6D9Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozMzo0NlrOG6D9Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNTM5OQ==", "bodyText": "define const interval", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463535399", "createdAt": "2020-07-31T10:33:46Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -138,31 +153,73 @@ public Object submitAndWait(StoreCommand command, StoreClosure closure) {\n         }\n     }\n \n-    protected void waitLeaderElected() {\n+    public void onElected(boolean value) {\n+        synchronized(this.electedLock) {\n+            this.elected = value;\n+            this.electedLock.notify();\n+        }\n+    }\n+\n+    protected void waitLeaderElected(int timeout) {\n         if (this.node.getLeaderId() != null) {\n             return;\n         }\n-\n-        int consumeTime = WAIT_LEADER_TIMEOUT;\n-        int sleepInterval = 100;\n-        while (consumeTime > 0) {\n-            PeerId leaderId = this.node.getLeaderId();\n-            if (leaderId != null) {\n-                return;\n-            } else {\n+        long beginTime = System.currentTimeMillis();\n+        int internalTimeout = 3000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fccc553c3cdcb3ee8ecaf1548c82104ddcd04fad"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDE4NTc4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozNDo1NlrOG6D_GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxMDozNDo1NlrOG6D_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzUzNTg5Ng==", "bodyText": "define", "url": "https://github.com/hugegraph/hugegraph/pull/1121#discussion_r463535896", "createdAt": "2020-07-31T10:34:56Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -138,31 +153,73 @@ public Object submitAndWait(StoreCommand command, StoreClosure closure) {\n         }\n     }\n \n-    protected void waitLeaderElected() {\n+    public void onElected(boolean value) {\n+        synchronized(this.electedLock) {\n+            this.elected = value;\n+            this.electedLock.notify();\n+        }\n+    }\n+\n+    protected void waitLeaderElected(int timeout) {\n         if (this.node.getLeaderId() != null) {\n             return;\n         }\n-\n-        int consumeTime = WAIT_LEADER_TIMEOUT;\n-        int sleepInterval = 100;\n-        while (consumeTime > 0) {\n-            PeerId leaderId = this.node.getLeaderId();\n-            if (leaderId != null) {\n-                return;\n-            } else {\n+        long beginTime = System.currentTimeMillis();\n+        int internalTimeout = 3000;\n+        synchronized(this.electedLock) {\n+            while (!this.elected) {\n                 try {\n-                    Thread.sleep(sleepInterval);\n+                    this.electedLock.wait(internalTimeout);\n                 } catch (InterruptedException e) {\n                     throw new BackendException(\n-                              \"Raft group '%s' doesn't elect leader in %s ms\",\n-                              this.group(), WAIT_LEADER_TIMEOUT - consumeTime);\n+                              \"Wait raft group '%s' election error\",\n+                              e, this.group(), \"election\");\n                 }\n-                consumeTime -= sleepInterval;\n+                long consumedTime = System.currentTimeMillis() - beginTime;\n+                if (timeout > 0 && consumedTime >= timeout) {\n+                    throw new BackendException(\n+                              \"Wait raft group '{}' election timeout({}ms)\",\n+                              this.group(), \"\", consumedTime);\n+                }\n+                LOG.warn(\"Waiting raft group '{}' election cost {}s\",\n+                         this.group(), consumedTime / 1000.0);\n+            }\n+        }\n+    }\n+\n+    protected void waitStarted(int timeout) {\n+        ReadIndexClosure readIndexClosure = new ReadIndexClosure() {\n+            @Override\n+            public void run(Status status, long index, byte[] reqCtx) {\n+                if (status.isOk()) {\n+                    RaftNode.this.started = true;\n+                } else {\n+                    RaftNode.this.started = false;\n+                }\n+            }\n+        };\n+        long beginTime = System.currentTimeMillis();\n+        int internalTimeout = 3000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fccc553c3cdcb3ee8ecaf1548c82104ddcd04fad"}, "originalPosition": 149}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1469, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}