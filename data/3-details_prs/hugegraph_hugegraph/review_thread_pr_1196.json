{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTAzNzQ1", "number": 1196, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo0NDozNVrOEoYMmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoyNzowNlrOExyytA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzc0OTM2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo0NDozNVrOHZbwgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo0ODo1N1rOHZlQrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzMTIzMg==", "bodyText": "to avoid copy bytes, add method decode(bytes, offset, length), and let BytesBuffer implements OutputStream that  BytesBuffer instance could be pass into LZ4BlockOutputStream.", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496431232", "createdAt": "2020-09-29T05:44:35Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -156,14 +153,13 @@ public static String encodeBase64(byte[] bytes) {\n \n     public static String decompress(byte[] value) {\n         BytesBuffer buf = BytesBuffer.allocate(value.length * 2);\n-        try (ByteArrayInputStream bis = new ByteArrayInputStream(value);\n-             GZIPInputStream in = new GZIPInputStream(bis)) {\n+        try (ByteArrayInputStream bis = new ByteArrayInputStream(value)) {\n             byte[] bytes = new byte[value.length];\n             int len;\n-            while ((len = in.read(bytes)) > 0) {\n+            while ((len = bis.read(bytes)) > 0) {\n                 buf.write(bytes, 0, len);\n             }\n-            return decode(buf.bytes());\n+            return decode(LZ4Util.decompress(buf.bytes(), BLOCK_SIZE).array());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00f547cd2432fe880c2ef91f75b310bcdb098ed"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4NjkyNA==", "bodyText": "address it:\nuse BytesBuffer instead of ByteArrayOutputStream in compress and decompress method, and init  BytesBuffer estimate size", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496586924", "createdAt": "2020-09-29T09:48:57Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -156,14 +153,13 @@ public static String encodeBase64(byte[] bytes) {\n \n     public static String decompress(byte[] value) {\n         BytesBuffer buf = BytesBuffer.allocate(value.length * 2);\n-        try (ByteArrayInputStream bis = new ByteArrayInputStream(value);\n-             GZIPInputStream in = new GZIPInputStream(bis)) {\n+        try (ByteArrayInputStream bis = new ByteArrayInputStream(value)) {\n             byte[] bytes = new byte[value.length];\n             int len;\n-            while ((len = in.read(bytes)) > 0) {\n+            while ((len = bis.read(bytes)) > 0) {\n                 buf.write(bytes, 0, len);\n             }\n-            return decode(buf.bytes());\n+            return decode(LZ4Util.decompress(buf.bytes(), BLOCK_SIZE).array());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzMTIzMg=="}, "originalCommit": {"oid": "f00f547cd2432fe880c2ef91f75b310bcdb098ed"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzc3MDg3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo1NDo1NFrOHZb8oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo1NDo1NFrOHZb8oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNDMzNg==", "bodyText": "no need to write a buf, just LZ4Util.decompress(value)", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496434336", "createdAt": "2020-09-29T05:54:54Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -156,14 +153,13 @@ public static String encodeBase64(byte[] bytes) {\n \n     public static String decompress(byte[] value) {\n         BytesBuffer buf = BytesBuffer.allocate(value.length * 2);\n-        try (ByteArrayInputStream bis = new ByteArrayInputStream(value);\n-             GZIPInputStream in = new GZIPInputStream(bis)) {\n+        try (ByteArrayInputStream bis = new ByteArrayInputStream(value)) {\n             byte[] bytes = new byte[value.length];\n             int len;\n-            while ((len = in.read(bytes)) > 0) {\n+            while ((len = bis.read(bytes)) > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00f547cd2432fe880c2ef91f75b310bcdb098ed"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNzc3Mzk5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo1NjoxN1rOHZb-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNTo1NjoxN1rOHZb-aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzNDc5Mg==", "bodyText": "just return LZ4Util.compress(bytes, BLOCK_SIZE).bytes()", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496434792", "createdAt": "2020-09-29T05:56:17Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -142,12 +141,10 @@ public static String encodeBase64(byte[] bytes) {\n \n     public static byte[] compress(String value) {\n         final int outputSize = Math.max(32, value.length() / 8);\n-        final int gzipBufSize = 4 * (int) Bytes.KB;\n-        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(outputSize);\n-             GZIPOutputStream out = new GZIPOutputStream(bos, gzipBufSize)) {\n+        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(outputSize)) {\n             byte[] bytes = encode(value);\n-            out.write(bytes);\n-            out.finish();\n+            bytes = LZ4Util.compress(bytes, BLOCK_SIZE).array();\n+            bos.write(bytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00f547cd2432fe880c2ef91f75b310bcdb098ed"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODcwODY3OnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/resources/hugegraph.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo0NDowNFrOHZlEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTo0NDowNFrOHZlEfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU4MzgwNQ==", "bodyText": "keep origin", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496583805", "createdAt": "2020-09-29T09:44:04Z", "author": {"login": "javeme"}, "path": "hugegraph-test/src/main/resources/hugegraph.properties", "diffHunk": "@@ -1,7 +1,7 @@\n gremlin.graph=com.baidu.hugegraph.HugeFactory\n \n-backend=${backend}\n-serializer=${serializer}\n+backend=rocksdb\n+serializer=binary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2b44ce3a89794673023f0a88c538d49b5a45dc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzNzA5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NzoyMFrOHZnTOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NzoyMFrOHZnTOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDM0Ng==", "bodyText": "rename to buf", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496620346", "createdAt": "2020-09-29T10:47:20Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -135,11 +144,13 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        return LZ4Util.compress(encode(value), BLOCK_SIZE).array();\n+        BytesBuffer bf = LZ4Util.compress(encode(value), BLOCK_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7e3ee0ea6d60410d965e0bced14a75ce869b40"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzNzU3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NzoyOFrOHZnTgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0NzoyOFrOHZnTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDQxOQ==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496620419", "createdAt": "2020-09-29T10:47:28Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -135,11 +144,13 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        return LZ4Util.compress(encode(value), BLOCK_SIZE).array();\n+        BytesBuffer bf = LZ4Util.compress(encode(value), BLOCK_SIZE);\n+        return bf.bytes();\n     }\n \n     public static String decompress(byte[] value) {\n-        return decode(LZ4Util.decompress(value, BLOCK_SIZE).array());\n+        BytesBuffer bf = LZ4Util.decompress(value, BLOCK_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7e3ee0ea6d60410d965e0bced14a75ce869b40"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzOTA1OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0Nzo1NVrOHZnUeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0Nzo1NVrOHZnUeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDY2Ng==", "bodyText": "rename to buf", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496620666", "createdAt": "2020-09-29T10:47:55Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "diffHunk": "@@ -37,35 +36,35 @@\n     public static BytesBuffer compress(byte[] bytes, int blockSize) {\n         LZ4Factory factory = LZ4Factory.fastestInstance();\n         LZ4Compressor compressor = factory.fastCompressor();\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        BytesBuffer bf = new BytesBuffer(bytes.length / 8);\n         LZ4BlockOutputStream lz4Output = new LZ4BlockOutputStream(\n-                                         baos, blockSize, compressor);\n+                                         bf, blockSize, compressor);\n         try {\n             lz4Output.write(bytes);\n             lz4Output.close();\n         } catch (IOException e) {\n             throw new BackendException(\"Failed to compress\", e);\n         }\n-        return BytesBuffer.wrap(baos.toByteArray());\n+        return bf;\n     }\n \n     public static BytesBuffer decompress(byte[] bytes, int blockSize) {\n         LZ4Factory factory = LZ4Factory.fastestInstance();\n-        LZ4FastDecompressor decompresser = factory.fastDecompressor();\n+        LZ4FastDecompressor decompressor = factory.fastDecompressor();\n         ByteArrayInputStream bais = new ByteArrayInputStream(bytes);\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream(blockSize);\n+        BytesBuffer bf = new BytesBuffer(bytes.length * 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7e3ee0ea6d60410d965e0bced14a75ce869b40"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODkzOTU1OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0Nzo1OVrOHZnUvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo0Nzo1OVrOHZnUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMDczNA==", "bodyText": "rename to buf", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496620734", "createdAt": "2020-09-29T10:47:59Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "diffHunk": "@@ -37,35 +36,35 @@\n     public static BytesBuffer compress(byte[] bytes, int blockSize) {\n         LZ4Factory factory = LZ4Factory.fastestInstance();\n         LZ4Compressor compressor = factory.fastCompressor();\n-        ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+        BytesBuffer bf = new BytesBuffer(bytes.length / 8);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7e3ee0ea6d60410d965e0bced14a75ce869b40"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwODk1MTcxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MTo0NFrOHZncQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMDo1MTo0NFrOHZncQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjYyMjY1Ng==", "bodyText": "prefer keep these methods returning void", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496622656", "createdAt": "2020-09-29T10:51:44Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "diffHunk": "@@ -179,27 +181,32 @@ public BytesBuffer write(byte val) {\n         return this;\n     }\n \n-    public BytesBuffer write(int val) {\n+    @Override\n+    public void write(int b) throws IOException {\n+        this.writeByte(b);\n+    }\n+\n+    public BytesBuffer writeByte(int val) {\n         assert val <= UINT8_MAX;\n         require(BYTE_LEN);\n         this.buffer.put((byte) val);\n         return this;\n     }\n \n-    public BytesBuffer write(byte[] val) {\n+    public BytesBuffer writeByteArray(byte[] val) {\n         require(BYTE_LEN * val.length);\n         this.buffer.put(val);\n         return this;\n     }\n \n-    public BytesBuffer write(byte[] val, int offset, int length) {\n+    public BytesBuffer writeByteArray(byte[] val, int offset, int length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7e3ee0ea6d60410d965e0bced14a75ce869b40"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTIwNDkyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNTozMVrOHZp1Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNTozMVrOHZp1Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MTg1NQ==", "bodyText": "add \"@OverRide\" for 3 write() methods", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496661855", "createdAt": "2020-09-29T12:05:31Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "diffHunk": "@@ -179,27 +181,25 @@ public BytesBuffer write(byte val) {\n         return this;\n     }\n \n-    public BytesBuffer write(int val) {\n+    public void write(int val) {\n         assert val <= UINT8_MAX;\n         require(BYTE_LEN);\n         this.buffer.put((byte) val);\n-        return this;\n     }\n \n-    public BytesBuffer write(byte[] val) {\n+    public void write(byte[] val) {\n         require(BYTE_LEN * val.length);\n         this.buffer.put(val);\n-        return this;\n     }\n \n-    public BytesBuffer write(byte[] val, int offset, int length) {\n+    public void write(byte[] val, int offset, int length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0019088faf4e46fe543cf4cfee6053edcef47756"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTYyOTg0OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0NDo0NFrOHZt7Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0NDo0NFrOHZt7Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyODkwNw==", "bodyText": "add a const var buf_ratio, let init_size=bytes.length/buf_ratio, also update decompress to bytes.length*buf_ratio", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r496728907", "createdAt": "2020-09-29T13:44:44Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/LZ4Util.java", "diffHunk": "@@ -36,7 +36,7 @@\n     public static BytesBuffer compress(byte[] bytes, int blockSize) {\n         LZ4Factory factory = LZ4Factory.fastestInstance();\n         LZ4Compressor compressor = factory.fastCompressor();\n-        BytesBuffer buf = new BytesBuffer(bytes.length / 8);\n+        BytesBuffer buf = new BytesBuffer(bytes.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99f44ff40a34d23e336517de8fbfe46e1c404e5f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDE3NTE3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo1MToyMFrOHnMgMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo1MToyMFrOHnMgMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2MTM2Mg==", "bodyText": "prefer to not add this method", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r510861362", "createdAt": "2020-10-23T12:51:20Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -144,12 +144,20 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        BytesBuffer buf = LZ4Util.compress(encode(value), BLOCK_SIZE);\n+        return compress(value, 0.0F);\n+    }\n+\n+    public static byte[] compress(String value, float ratio) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c703c6d830437f215f48ccecb7bcab0104777085"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDE3NTU2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo1MToyNlrOHnMgbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoyNzoyMFrOHoE9Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2MTQyMg==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r510861422", "createdAt": "2020-10-23T12:51:26Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -144,12 +144,20 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        BytesBuffer buf = LZ4Util.compress(encode(value), BLOCK_SIZE);\n+        return compress(value, 0.0F);\n+    }\n+\n+    public static byte[] compress(String value, float ratio) {\n+        BytesBuffer buf = LZ4Util.compress(encode(value), BLOCK_SIZE, ratio);\n         return buf.bytes();\n     }\n \n     public static String decompress(byte[] value) {\n-        BytesBuffer buf = LZ4Util.decompress(value, BLOCK_SIZE);\n+        return decompress(value, 0.0F);\n+    }\n+\n+    public static String decompress(byte[] value, float ratio) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c703c6d830437f215f48ccecb7bcab0104777085"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NjI5MA==", "bodyText": "rename to bufferRatio", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r511786290", "createdAt": "2020-10-26T08:27:20Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -144,12 +144,20 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        BytesBuffer buf = LZ4Util.compress(encode(value), BLOCK_SIZE);\n+        return compress(value, 0.0F);\n+    }\n+\n+    public static byte[] compress(String value, float ratio) {\n+        BytesBuffer buf = LZ4Util.compress(encode(value), BLOCK_SIZE, ratio);\n         return buf.bytes();\n     }\n \n     public static String decompress(byte[] value) {\n-        BytesBuffer buf = LZ4Util.decompress(value, BLOCK_SIZE);\n+        return decompress(value, 0.0F);\n+    }\n+\n+    public static String decompress(byte[] value, float ratio) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2MTQyMg=="}, "originalCommit": {"oid": "c703c6d830437f215f48ccecb7bcab0104777085"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjQ3ODYwOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoyNzowNlrOHoE8wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoyNzowNlrOHoE8wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4NjE3OA==", "bodyText": "define const", "url": "https://github.com/hugegraph/hugegraph/pull/1196#discussion_r511786178", "createdAt": "2020-10-26T08:27:06Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/StringEncoding.java", "diffHunk": "@@ -141,32 +144,21 @@ public static String encodeBase64(byte[] bytes) {\n     }\n \n     public static byte[] compress(String value) {\n-        final int outputSize = Math.max(32, value.length() / 8);\n-        final int gzipBufSize = 4 * (int) Bytes.KB;\n-        try (ByteArrayOutputStream bos = new ByteArrayOutputStream(outputSize);\n-             GZIPOutputStream out = new GZIPOutputStream(bos, gzipBufSize)) {\n-            byte[] bytes = encode(value);\n-            out.write(bytes);\n-            out.finish();\n-            return bos.toByteArray();\n-        } catch (IOException e) {\n-            throw new BackendException(\"Failed to compress: %s\", e, value);\n-        }\n+        return compress(value, 0.0F);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e457ec05224154499674521ccacd420dfb82e65b"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1502, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}