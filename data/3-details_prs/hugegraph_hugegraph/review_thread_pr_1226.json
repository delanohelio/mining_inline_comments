{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNDQ0NDM0", "number": 1226, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo0OTowNFrOEyNCRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxMTowNFrOEyrR2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDc3ODI5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphIndexTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo0OTowNFrOHoteGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo0OTowNFrOHoteGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1MDA3Mw==", "bodyText": "validate", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512450073", "createdAt": "2020-10-27T06:49:04Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphIndexTransaction.java", "diffHunk": "@@ -1349,6 +1354,13 @@ private static NoIndexException noIndexException(HugeGraph graph,\n                                     name, String.join(\"/\", mismatched));\n     }\n \n+    private static void validIndexLabel(IndexLabel indexLabel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fb9f08d427ea01e588b159f9dd81b4d2697cb5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDc4OTY1OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphIndexTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1Mzo1MFrOHotk0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1Mzo1MFrOHotk0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1MTc5Mw==", "bodyText": "Can't query by label index '%s' due to it is in invalid status", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512451793", "createdAt": "2020-10-27T06:53:50Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphIndexTransaction.java", "diffHunk": "@@ -1349,6 +1354,13 @@ private static NoIndexException noIndexException(HugeGraph graph,\n                                     name, String.join(\"/\", mismatched));\n     }\n \n+    private static void validIndexLabel(IndexLabel indexLabel) {\n+        if (indexLabel.status() == SchemaStatus.INVALID) {\n+            throw new HugeException(\"The label index %s is invalid\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fb9f08d427ea01e588b159f9dd81b4d2697cb5"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDgwMzI0OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/RebuildIndexCallable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1OToyN1rOHots3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1OToyN1rOHots3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1Mzg1Mg==", "bodyText": "does save to backend store? seems need to call schemaTx.updateSchemaStatus()", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512453852", "createdAt": "2020-10-27T06:59:27Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/RebuildIndexCallable.java", "diffHunk": "@@ -158,6 +166,9 @@ private void removeIndex(Collection<Id> indexLabelIds) {\n             try {\n                 locks.lockWrites(LockUtil.INDEX_LABEL_DELETE, indexLabelIds);\n                 graphTx.removeIndex(il);\n+            } catch (Throwable t) {\n+                il.status(SchemaStatus.INVALID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fb9f08d427ea01e588b159f9dd81b4d2697cb5"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDgwMzQ5OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1OTozMlrOHots_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjo1OTozMlrOHots_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1Mzg4Ng==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512453886", "createdAt": "2020-10-27T06:59:32Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "diffHunk": "@@ -222,13 +222,19 @@ private boolean hasSameProperties(IndexLabel existedIndexLabel) {\n \n             // Create index label (just schema)\n             indexLabel.status(SchemaStatus.CREATING);\n-            this.graph().addIndexLabel(schemaLabel, indexLabel);\n+            try {\n+                this.graph().addIndexLabel(schemaLabel, indexLabel);\n \n-            // Async rebuild index\n-            Id rebuildTask = this.rebuildIndex(indexLabel, removeTasks);\n-            E.checkNotNull(rebuildTask, \"rebuild-index task\");\n+                // Async rebuild index\n+                Id rebuildTask = this.rebuildIndex(indexLabel, removeTasks);\n+                E.checkNotNull(rebuildTask, \"rebuild-index task\");\n \n-            return new IndexLabel.CreatedIndexLabel(indexLabel, rebuildTask);\n+                return new IndexLabel.CreatedIndexLabel(indexLabel,\n+                                                        rebuildTask);\n+            } catch (Throwable t) {\n+                indexLabel.status(SchemaStatus.INVALID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fb9f08d427ea01e588b159f9dd81b4d2697cb5"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDgwNjkyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowMDo1OVrOHotu6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNzowMDo1OVrOHotu6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ1NDM3OQ==", "bodyText": "rename t to e", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512454379", "createdAt": "2020-10-27T07:00:59Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "diffHunk": "@@ -222,13 +222,19 @@ private boolean hasSameProperties(IndexLabel existedIndexLabel) {\n \n             // Create index label (just schema)\n             indexLabel.status(SchemaStatus.CREATING);\n-            this.graph().addIndexLabel(schemaLabel, indexLabel);\n+            try {\n+                this.graph().addIndexLabel(schemaLabel, indexLabel);\n \n-            // Async rebuild index\n-            Id rebuildTask = this.rebuildIndex(indexLabel, removeTasks);\n-            E.checkNotNull(rebuildTask, \"rebuild-index task\");\n+                // Async rebuild index\n+                Id rebuildTask = this.rebuildIndex(indexLabel, removeTasks);\n+                E.checkNotNull(rebuildTask, \"rebuild-index task\");\n \n-            return new IndexLabel.CreatedIndexLabel(indexLabel, rebuildTask);\n+                return new IndexLabel.CreatedIndexLabel(indexLabel,\n+                                                        rebuildTask);\n+            } catch (Throwable t) {\n+                indexLabel.status(SchemaStatus.INVALID);\n+                throw t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fb9f08d427ea01e588b159f9dd81b4d2697cb5"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMjE4NTcxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo1NjowNFrOHo6xKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo1NjowNFrOHo6xKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2Nzk0NA==", "bodyText": "schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.INVALID);", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r512667944", "createdAt": "2020-10-27T12:56:04Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "diffHunk": "@@ -222,18 +222,18 @@ private boolean hasSameProperties(IndexLabel existedIndexLabel) {\n \n             // Create index label (just schema)\n             indexLabel.status(SchemaStatus.CREATING);\n+            this.graph().addIndexLabel(schemaLabel, indexLabel);\n             try {\n-                this.graph().addIndexLabel(schemaLabel, indexLabel);\n-\n                 // Async rebuild index\n                 Id rebuildTask = this.rebuildIndex(indexLabel, removeTasks);\n                 E.checkNotNull(rebuildTask, \"rebuild-index task\");\n \n                 return new IndexLabel.CreatedIndexLabel(indexLabel,\n                                                         rebuildTask);\n-            } catch (Throwable t) {\n+            } catch (Throwable e) {\n                 indexLabel.status(SchemaStatus.INVALID);\n-                throw t;\n+                this.graph().addIndexLabel(schemaLabel, indexLabel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81ea8842d2352e043900514f5f6ecea80c62f27"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTU2MjkyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNTo1MzowMlrOHpa_-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNTo1MzowMlrOHpa_-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzE5NjAyNA==", "bodyText": "also consider removeSubIndex() at line 207", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r513196024", "createdAt": "2020-10-28T05:53:02Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/schema/builder/IndexLabelBuilder.java", "diffHunk": "@@ -231,8 +231,7 @@ private boolean hasSameProperties(IndexLabel existedIndexLabel) {\n                 return new IndexLabel.CreatedIndexLabel(indexLabel,\n                                                         rebuildTask);\n             } catch (Throwable e) {\n-                indexLabel.status(SchemaStatus.INVALID);\n-                this.graph().addIndexLabel(schemaLabel, indexLabel);\n+                this.updateSchemaStatus(indexLabel, SchemaStatus.INVALID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381aefe5ad7db83be300a4ddf58cb77e43167c23"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTczMjM2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/IndexLabelRemoveCallable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxMDo0NFrOHpcidA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxNDozOVrOHpcoHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMTIzNg==", "bodyText": "should update status to INVALID  when failure to remove vertex/edge label?", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r513221236", "createdAt": "2020-10-28T07:10:44Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/IndexLabelRemoveCallable.java", "diffHunk": "@@ -54,14 +54,20 @@ protected static void removeIndexLabel(HugeGraphParams graph, Id id) {\n             // TODO add update lock\n             // Set index label to \"deleting\" status\n             schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.DELETING);\n-            // Remove index data\n-            // TODO: use event to replace direct call\n-            graphTx.removeIndex(indexLabel);\n-            // Remove label from indexLabels of vertex or edge label\n-            removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n-            removeSchema(schemaTx, indexLabel);\n-            // Should commit changes to backend store before release delete lock\n-            graph.graph().tx().commit();\n+            try {\n+                // Remove index data\n+                // TODO: use event to replace direct call\n+                graphTx.removeIndex(indexLabel);\n+                // Remove label from indexLabels of vertex or edge label\n+                removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n+                removeSchema(schemaTx, indexLabel);\n+                // Should commit changes to backend store\n+                // before release delete lock\n+                graph.graph().tx().commit();\n+            } catch (Throwable e) {\n+                schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.INVALID);\n+                throw e;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077fa8500a97936f23b8fb8ad4779d4b8224654a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMjY4Nw==", "bodyText": "no need. Fail to remove vertex/edge label will lead to partial delete of vertices/edges. vertex/edge label need to be still valid for remaining vertices/edges", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r513222687", "createdAt": "2020-10-28T07:14:39Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/IndexLabelRemoveCallable.java", "diffHunk": "@@ -54,14 +54,20 @@ protected static void removeIndexLabel(HugeGraphParams graph, Id id) {\n             // TODO add update lock\n             // Set index label to \"deleting\" status\n             schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.DELETING);\n-            // Remove index data\n-            // TODO: use event to replace direct call\n-            graphTx.removeIndex(indexLabel);\n-            // Remove label from indexLabels of vertex or edge label\n-            removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n-            removeSchema(schemaTx, indexLabel);\n-            // Should commit changes to backend store before release delete lock\n-            graph.graph().tx().commit();\n+            try {\n+                // Remove index data\n+                // TODO: use event to replace direct call\n+                graphTx.removeIndex(indexLabel);\n+                // Remove label from indexLabels of vertex or edge label\n+                removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n+                removeSchema(schemaTx, indexLabel);\n+                // Should commit changes to backend store\n+                // before release delete lock\n+                graph.graph().tx().commit();\n+            } catch (Throwable e) {\n+                schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.INVALID);\n+                throw e;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMTIzNg=="}, "originalCommit": {"oid": "077fa8500a97936f23b8fb8ad4779d4b8224654a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTczMzM2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/IndexLabelRemoveCallable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxMTowNFrOHpcjAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxMTowNFrOHpcjAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMTM3Nw==", "bodyText": "use \"/*\"", "url": "https://github.com/hugegraph/hugegraph/pull/1226#discussion_r513221377", "createdAt": "2020-10-28T07:11:04Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/job/schema/IndexLabelRemoveCallable.java", "diffHunk": "@@ -54,14 +54,20 @@ protected static void removeIndexLabel(HugeGraphParams graph, Id id) {\n             // TODO add update lock\n             // Set index label to \"deleting\" status\n             schemaTx.updateSchemaStatus(indexLabel, SchemaStatus.DELETING);\n-            // Remove index data\n-            // TODO: use event to replace direct call\n-            graphTx.removeIndex(indexLabel);\n-            // Remove label from indexLabels of vertex or edge label\n-            removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n-            removeSchema(schemaTx, indexLabel);\n-            // Should commit changes to backend store before release delete lock\n-            graph.graph().tx().commit();\n+            try {\n+                // Remove index data\n+                // TODO: use event to replace direct call\n+                graphTx.removeIndex(indexLabel);\n+                // Remove label from indexLabels of vertex or edge label\n+                removeIndexLabelFromBaseLabel(schemaTx, indexLabel);\n+                removeSchema(schemaTx, indexLabel);\n+                // Should commit changes to backend store\n+                // before release delete lock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "077fa8500a97936f23b8fb8ad4779d4b8224654a"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1508, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}