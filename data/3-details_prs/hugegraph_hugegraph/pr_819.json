{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMzQxNDQw", "number": 819, "title": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge", "bodyText": "Fix #818\nChange-Id: Ic929a4267fc411c156a32e5b381d314f382ebc9a", "createdAt": "2020-01-08T08:38:47Z", "url": "https://github.com/hugegraph/hugegraph/pull/819", "merged": true, "mergeCommit": {"oid": "7e926ac55ce08e554817ac1f5e37fb59470d500c"}, "closed": true, "closedAt": "2020-02-04T03:43:12Z", "author": {"login": "Linary"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4RNEegH2gAyMzYwMzQxNDQwOjcxOWQ3NzJhZTYxZGU4NmZkMWU5YThjYWFhYzNmODdmYmQ2YmRiMWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcA5KjiAFqTM1MjcwODI4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "committedDate": "2020-01-08T08:37:21Z", "message": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge\n\nFix #818\n\nChange-Id: Ic929a4267fc411c156a32e5b381d314f382ebc9a"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NzIxMjAy", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-339721202", "createdAt": "2020-01-08T08:59:09Z", "commit": {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo1OTowOVrOFbQRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo1OTowOVrOFbQRxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjU2Ng==", "bodyText": "compare the two ids", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364122566", "createdAt": "2020-01-08T08:59:09Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,13 +402,28 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n+        Id labelId = g.edgeLabel(newEdge.label).id();\n+        List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n+\n         if (newEdge.id != null) {\n+            // check the sortKeys are not updated\n+            HugeEdge edge = (HugeEdge) g.edges(newEdge.id).next();\n+            sortKeyIds.forEach(skId -> {\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n+                Object sortKeyValue = newEdge.properties.get(sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n+                Object oldSortKeyValue = edge.value(sortKey);\n+                E.checkArgument(sortKeyValue == null ||\n+                                sortKeyValue.equals(oldSortKeyValue),\n+                                \"The value of sort key '%s' either be null \" +\n+                                \"or equal with origin '%s', but got '%s'\",\n+                                sortKey, oldSortKeyValue, sortKeyValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4a2183293084a28f66b63252a33977f00b57771", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/d4a2183293084a28f66b63252a33977f00b57771", "committedDate": "2020-01-08T12:54:55Z", "message": "Fix override vertex/edge on some backends\n\nFix #792\n\nChange-Id: Id74f0b11f073251ff9d4aa7bc6d47605186c6f41"}, "afterCommit": {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c", "committedDate": "2020-01-08T08:37:21Z", "message": "Fix: batch update edge with edgeId and unmatched sortKeys will create a new edge\n\nFix #818\n\nChange-Id: Ic929a4267fc411c156a32e5b381d314f382ebc9a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/388bdee9ee5c8185d426855ed4bccf79bd266b23", "committedDate": "2020-01-09T02:45:49Z", "message": "simplify code\n\nChange-Id: I0a100d72dd7572cec9cd30b36674eb1f271ddc98"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjc3NzYx", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-340277761", "createdAt": "2020-01-09T03:55:43Z", "commit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo0M1rOFbqXLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1Nzo0NFrOFbqYrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTkzNQ==", "bodyText": "equal to", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549935", "createdAt": "2020-01-09T03:55:43Z", "author": {"login": "zhoney"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,30 +402,31 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n-        if (newEdge.id != null) {\n-            return EdgeId.parse(newEdge.id.toString());\n-        }\n-\n         String sortKeys = \"\";\n         Id labelId = g.edgeLabel(newEdge.label).id();\n         List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n         if (!sortKeyIds.isEmpty()) {\n             List<Object> sortKeyValues = new ArrayList<>(sortKeyIds.size());\n             sortKeyIds.forEach(skId -> {\n-                String sortKey = g.propertyKey(skId).name();\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n                 Object sortKeyValue = newEdge.properties.get(sortKey);\n                 E.checkArgument(sortKeyValue != null,\n                                 \"The value of sort key '%s' can't be null\",\n                                 sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n                 sortKeyValues.add(sortKeyValue);\n             });\n             sortKeys = ConditionQuery.concatValues(sortKeyValues);\n         }\n-\n-        // TODO: How to get Direction from JsonEdge easily? or any better way?\n         EdgeId edgeId = new EdgeId(HugeVertex.getIdValue(newEdge.source),\n                                    Directions.OUT, labelId, sortKeys,\n                                    HugeVertex.getIdValue(newEdge.target));\n+        if (newEdge.id != null) {\n+            E.checkArgument(edgeId.equals(newEdge.id),\n+                            \"The sort key values either be null \" +\n+                            \"or equal with origin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTk3OA==", "bodyText": "Create", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549978", "createdAt": "2020-01-09T03:55:56Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDAwMw==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550003", "createdAt": "2020-01-09T03:56:04Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDEwNA==", "bodyText": "the property \u201cdate\u201d has changed", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550104", "createdAt": "2020-01-09T03:56:32Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDIyMg==", "bodyText": "query to assert two different edges", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550222", "createdAt": "2020-01-09T03:57:15Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Add a new edge when sortkey value has changed\n+        assertResponseStatus(200, r);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDMxNw==", "bodyText": "Update", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550317", "createdAt": "2020-01-09T03:57:44Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDA5Mzcw", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-340409370", "createdAt": "2020-01-09T10:06:31Z", "commit": {"oid": "f1e5c1de5df77d81babfec47f837abb87a9b8e59"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDEwNTEw", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-340410510", "createdAt": "2020-01-09T10:08:32Z", "commit": {"oid": "f1e5c1de5df77d81babfec47f837abb87a9b8e59"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1e5c1de5df77d81babfec47f837abb87a9b8e59", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/f1e5c1de5df77d81babfec47f837abb87a9b8e59", "committedDate": "2020-01-09T09:54:25Z", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0"}, "afterCommit": {"oid": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "committedDate": "2020-02-03T12:15:33Z", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "committedDate": "2020-02-03T15:05:24Z", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/cfded5493bbedec8bb3918e9cee81a5e32e8e95c", "committedDate": "2020-02-03T12:15:33Z", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0"}, "afterCommit": {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/708cd4b3cd926000b806b6d3b11d2a98c183ee3a", "committedDate": "2020-02-03T15:05:24Z", "message": "some improve\n\nChange-Id: I21ce599336e8f894457756f61c5a0fb546290ac0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNzA0MTU3", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-352704157", "createdAt": "2020-02-04T03:23:51Z", "commit": {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNzA4Mjg4", "url": "https://github.com/hugegraph/hugegraph/pull/819#pullrequestreview-352708288", "createdAt": "2020-02-04T03:42:12Z", "commit": {"oid": "708cd4b3cd926000b806b6d3b11d2a98c183ee3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2353, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}