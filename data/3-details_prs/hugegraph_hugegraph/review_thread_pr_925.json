{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDcxNTQw", "number": 925, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozODo0OVrODtltfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMTozMjowMlrODu3gFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTMwMzY2OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozODo0OVrOF_Glig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozODo0OVrOF_Glig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjUyMg==", "bodyText": "improve comment", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r401712522", "createdAt": "2020-04-01T15:38:49Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -52,7 +52,8 @@\n \n     private static final Logger LOG = Log.logger(HugeTask.class);\n \n-    private static final int MAX_PROPERTY_LENGTH = BytesBuffer.STRING_LEN_MAX;\n+    // The max", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1e8fb89a4830d48c39bee80fadfbcca47fd53f9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTMwNjE2OnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozOToyMlrOF_GnGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMzo0NDowNlrOF_aSyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjkyMA==", "bodyText": "add test 128kb is ok", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r401712920", "createdAt": "2020-04-01T15:39:22Z", "author": {"login": "javeme"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "diffHunk": "@@ -429,16 +432,13 @@ public void testGremlinJobWithError() throws TimeoutException {\n         });\n \n         // Test failure task with big input\n-        char[] chars = new char[65536];\n-        for (int i = 0; i < chars.length; i++) {\n-            chars[i] = '8';\n-        }\n-        String bigInput = new String(chars);\n+        int length = 65536 * 1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1e8fb89a4830d48c39bee80fadfbcca47fd53f9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAzNTQwMQ==", "bodyText": "128kb < 64MB, will not trigger exception", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402035401", "createdAt": "2020-04-02T03:44:06Z", "author": {"login": "Linary"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "diffHunk": "@@ -429,16 +432,13 @@ public void testGremlinJobWithError() throws TimeoutException {\n         });\n \n         // Test failure task with big input\n-        char[] chars = new char[65536];\n-        for (int i = 0; i < chars.length; i++) {\n-            chars[i] = '8';\n-        }\n-        String bigInput = new String(chars);\n+        int length = 65536 * 1024;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcxMjkyMA=="}, "originalCommit": {"oid": "d1e8fb89a4830d48c39bee80fadfbcca47fd53f9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDUyNzcxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo0NDowMlrOF_lhSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo0NDowMlrOF_lhSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxOTMzOQ==", "bodyText": "set BLOB_LEN 4 bytes is ok", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402219339", "createdAt": "2020-04-02T10:44:02Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/serializer/BytesBuffer.java", "diffHunk": "@@ -51,6 +51,7 @@\n     public static final int CHAR_LEN = Character.BYTES;\n     public static final int FLOAT_LEN = Float.BYTES;\n     public static final int DOUBLE_LEN = Double.BYTES;\n+    public static final int BLOB_LEN = SHORT_LEN * 1024;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b91fdbced89ceba1e19f0c752d549103f87703"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDUzNDYxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo0NjoxMFrOF_llzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo0NjoxMFrOF_llzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMDQ5Mw==", "bodyText": "read from BLOB_LEN_MAX", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402220493", "createdAt": "2020-04-02T10:46:10Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -40,19 +40,21 @@\n import com.baidu.hugegraph.HugeException;\n import com.baidu.hugegraph.backend.id.Id;\n import com.baidu.hugegraph.backend.id.IdGenerator;\n-import com.baidu.hugegraph.backend.serializer.BytesBuffer;\n import com.baidu.hugegraph.exception.LimitExceedException;\n import com.baidu.hugegraph.type.define.SerialEnum;\n+import com.baidu.hugegraph.util.Bytes;\n import com.baidu.hugegraph.util.E;\n import com.baidu.hugegraph.util.InsertionOrderUtil;\n import com.baidu.hugegraph.util.JsonUtil;\n import com.baidu.hugegraph.util.Log;\n+import com.baidu.hugegraph.util.StringEncoding;\n \n public class HugeTask<V> extends FutureTask<V> {\n \n     private static final Logger LOG = Log.logger(HugeTask.class);\n \n-    private static final int MAX_PROPERTY_LENGTH = BytesBuffer.STRING_LEN_MAX;\n+    // The vertex property max length, for task input and result\n+    private static final int MAX_PROPERTY_LENGTH = (int) (64 * Bytes.MB);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b91fdbced89ceba1e19f0c752d549103f87703"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDU1NTg0OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1Mjo0N1rOF_ly4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1Mjo0N1rOF_ly4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyMzg0MA==", "bodyText": "call StringEncoding.compress()", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402223840", "createdAt": "2020-04-02T10:52:47Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -448,12 +450,12 @@ protected void property(String key, Object value) {\n \n         if (this.input != null) {\n             list.add(P.INPUT);\n-            list.add(this.input);\n+            list.add(StringEncoding.encode(this.input));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b91fdbced89ceba1e19f0c752d549103f87703"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzcxMjYyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDowNjoxNFrOGAEafQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDowNjoxNFrOGAEafQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNTUwMQ==", "bodyText": "add empty after 'if'", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402725501", "createdAt": "2020-04-03T04:06:14Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/GraphTransaction.java", "diffHunk": "@@ -510,6 +551,12 @@ public void removeVertex(HugeVertex vertex) {\n     }\n \n     public Iterator<Vertex> queryAdjacentVertices(Iterator<Edge> edges) {\n+        if(this.lazyLoadAdjacentVertex){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d224f93a2fdc5885b75879dc85df0369070e1a"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzcyMDU4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxMTo0OVrOGAEfCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxMTo0OVrOGAEfCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNjY2NA==", "bodyText": "The e.getMessage maybe too long to see key information, therefore use e.getCause", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402726664", "createdAt": "2020-04-03T04:11:49Z", "author": {"login": "zhoney"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "diffHunk": "@@ -289,8 +289,9 @@ protected void commitOrRollback() {\n                 LOG.error(\"Failed to rollback changes:\\n {}\", mutation, e2);\n             }\n             // Rethrow the commit exception\n+            // The e.getMessage maybe too long to see key information", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d224f93a2fdc5885b75879dc85df0369070e1a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NzczMDQ2OnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxODoxNVrOGAEkog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxODoxNVrOGAEkog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyODA5OA==", "bodyText": "delete empty of line 483 or add empty for 484-486", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r402728098", "createdAt": "2020-04-03T04:18:15Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/core/TaskCoreTest.java", "diffHunk": "@@ -479,16 +477,21 @@ public void testGremlinJobAndCancel() throws TimeoutException {\n                               \"has exceeded the max limit 10000\",\n                               task3.result());\n \n-        // Cancel failure task with big results (task exceeded limit 64k)\n-        String bigResults = \"def big='123456789'; def l=[]; \" +\n-                            \"for (i in 1..9000) l.add(big); l;\";\n+        // Cancel failure task with big results (task exceeded limit 64M)\n+        String bigResults = \"def big='12345678'; def ol=[]; def il=[]; \" +\n+                            \"for (i in 1..2000) \" +\n+                            \"   for (j in 1..1000) \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34d224f93a2fdc5885b75879dc85df0369070e1a"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDcwMjMxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMToyOTozN1rOGA_L7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMToyOTozN1rOGA_L7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODQzMA==", "bodyText": "gremlin job => job", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688430", "createdAt": "2020-04-05T11:29:37Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -115,6 +116,22 @@ public static synchronized CoreOptions instance() {\n                     10L\n             );\n \n+    public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.input_size_limit\",\n+                    \"The gremlin job input size limit in bytes.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d04c95d95721f229598715acfb87e5c3d60b5f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDcwMjQ3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMToyOTo0NVrOGA_MAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMToyOTo0NVrOGA_MAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODQ1MA==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688450", "createdAt": "2020-04-05T11:29:45Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -115,6 +116,22 @@ public static synchronized CoreOptions instance() {\n                     10L\n             );\n \n+    public static final ConfigOption<Long> TASK_INPUT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.input_size_limit\",\n+                    \"The gremlin job input size limit in bytes.\",\n+                    rangeInt(0L, Bytes.GB),\n+                    16 * Bytes.MB\n+            );\n+\n+    public static final ConfigOption<Long> TASK_RESULT_SIZE_LIMIT =\n+            new ConfigOption<>(\n+                    \"task.result_size_limit\",\n+                    \"The gremlin job result size limit in bytes.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d04c95d95721f229598715acfb87e5c3d60b5f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDcwNDIxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMTozMjowMlrOGA_M9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxMTozMjowMlrOGA_M9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY4ODY5Mw==", "bodyText": "check the length of compressed", "url": "https://github.com/hugegraph/hugegraph/pull/925#discussion_r403688693", "createdAt": "2020-04-05T11:32:02Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/task/HugeTask.java", "diffHunk": "@@ -526,11 +535,24 @@ protected void property(String key, Object value) {\n         return Collectors.toCollection(InsertionOrderUtil::newSet);\n     }\n \n-    private static void checkPropertySize(String property, String name) {\n-        if (property != null && property.length() > MAX_PROPERTY_LENGTH) {\n+    private static void checkPropertySize(HugeGraph graph, String property,\n+                                          String name) {\n+        if (property == null) {\n+            return;\n+        }\n+\n+        HugeConfig config = graph.configuration();\n+        long maxLength = BytesBuffer.STRING_LEN_MAX;\n+        if (name.equals(P.unhide(P.INPUT))) {\n+            maxLength = config.get(CoreOptions.TASK_INPUT_SIZE_LIMIT);\n+        } else if (name.equals(P.unhide(P.RESULT))) {\n+            maxLength = config.get(CoreOptions.TASK_RESULT_SIZE_LIMIT);\n+        }\n+\n+        if (property.length() > maxLength) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d04c95d95721f229598715acfb87e5c3d60b5f"}, "originalPosition": 142}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1607, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}