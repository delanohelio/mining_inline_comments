{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzA5MTY2", "number": 813, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNTowOVrODV2NlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowODozM1rODV2ONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM0OTAxOnYy", "diffSide": "RIGHT", "path": "hugegraph-example/src/main/java/com/baidu/hugegraph/example/Example1.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNTowOVrOFaRyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNTowOVrOFaRyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA5ODc4Nw==", "bodyText": "remove", "url": "https://github.com/hugegraph/hugegraph/pull/813#discussion_r363098787", "createdAt": "2020-01-05T15:05:09Z", "author": {"login": "javeme"}, "path": "hugegraph-example/src/main/java/com/baidu/hugegraph/example/Example1.java", "diffHunk": "@@ -256,6 +257,46 @@ public static void loadData(final HugeGraph graph) {\n     }\n \n     public static void testQuery(final HugeGraph graph) {\n+//        System.out.println(\">>>>groupCount=\"+\n+//                graph.traversal().E().hasLabel(\"has_vcore_attr\")\n+//                .groupCount().by(__.outV().properties(\"p_trade\").value()).explain());\n+//\n+//        System.out.println(\">>>>flatmapCount=\"+\n+//                graph.traversal().E().hasLabel(\"has_vcore_attr\")\n+//                .outV().has(\"p_trade\",\"xx\").count().profile());\n+\n+        System.out.println(\">>>>groupCount=\"+\n+                graph.traversal().E().hasLabel(\"write\")\n+                     .groupCount().by(__.bothV().values(\"name\")).toList());\n+\n+        System.out.println(\">>>>groupCount=\"+\n+                graph.traversal().E().hasLabel(\"write\")\n+                     .group().by(__.inV().values(\"name\")).toList());\n+\n+        System.out.println(\">>>>num0.v=\"+\n+                graph.traversal().V().count().toList());\n+\n+        System.out.println(\">>>>num0.e=\"+\n+                graph.traversal().E().count().toList());\n+\n+        System.out.println(\">>>>num1=\"+\n+                graph.traversal().V().hasLabel(\"author\",\"book\").count().toList());\n+\n+        System.out.println(\">>>>num1.prop=\"+\n+                graph.traversal().V().hasLabel(\"person\").has(\"age\", P.gt(18)).count().toList());\n+\n+        System.out.println(\">>>>num1 max=\"+\n+                graph.traversal().V().hasLabel(\"author\").count().max().toList());\n+\n+        System.out.println(\">>>>num2=\"+\n+                graph.traversal().V().hasLabel(\"author\").bothE().count().toList());\n+\n+        System.out.println(\">>>>num3=\"+\n+            graph.traversal().V().hasLabel(\"person\").values(\"age\").sum().toList());\n+\n+        System.out.println(\">>>>num4=\"+\n+            graph.traversal().V().hasLabel(\"person\").both().values(\"age\").sum().toList());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4f5bcfeb03817d2d8c6545cbffba4cc85e7808"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM0OTYxOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/traversal/optimize/HugeCountStepStrategy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNjoxOFrOFaRy9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNjoxOFrOFaRy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA5ODg3MA==", "bodyText": "remove //", "url": "https://github.com/hugegraph/hugegraph/pull/813#discussion_r363098870", "createdAt": "2020-01-05T15:06:18Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/traversal/optimize/HugeCountStepStrategy.java", "diffHunk": "@@ -0,0 +1,124 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.traversal.optimize;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.apache.tinkerpop.gremlin.process.traversal.Step;\n+import org.apache.tinkerpop.gremlin.process.traversal.Traversal;\n+import org.apache.tinkerpop.gremlin.process.traversal.TraversalStrategy.ProviderOptimizationStrategy;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.TraversalParent;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.map.CountGlobalStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.map.GraphStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.map.NoOpBarrierStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect.AggregateStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect.IdentityStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.sideEffect.SideEffectStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.step.util.CollectingBarrierStep;\n+import org.apache.tinkerpop.gremlin.process.traversal.strategy.AbstractTraversalStrategy;\n+import org.apache.tinkerpop.gremlin.process.traversal.util.TraversalHelper;\n+import org.apache.tinkerpop.gremlin.structure.Element;\n+\n+import com.baidu.hugegraph.backend.query.Aggregate.AggregateFunc;\n+\n+public final class HugeCountStepStrategy\n+             extends AbstractTraversalStrategy<ProviderOptimizationStrategy>\n+             implements ProviderOptimizationStrategy {\n+\n+    private static final long serialVersionUID = -3910433925919057771L;\n+\n+    private static final HugeCountStepStrategy INSTANCE;\n+\n+    static {\n+        INSTANCE = new HugeCountStepStrategy();\n+    }\n+\n+    private HugeCountStepStrategy() {\n+        // pass\n+    }\n+\n+    @Override\n+//    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4f5bcfeb03817d2d8c6545cbffba4cc85e7808"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM1MDI5OnYy", "diffSide": "RIGHT", "path": "hugegraph-cassandra/src/main/java/com/baidu/hugegraph/backend/store/cassandra/CassandraTable.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNzo0MFrOFaRzSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowNzo0MFrOFaRzSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA5ODk1NA==", "bodyText": "TODO", "url": "https://github.com/hugegraph/hugegraph/pull/813#discussion_r363098954", "createdAt": "2020-01-05T15:07:40Z", "author": {"login": "javeme"}, "path": "hugegraph-cassandra/src/main/java/com/baidu/hugegraph/backend/store/cassandra/CassandraTable.java", "diffHunk": "@@ -91,25 +98,51 @@ protected void registerMetaHandlers() {\n         });\n     }\n \n+    @Override\n+    public Number queryNumber(CassandraSessionPool.Session session,\n+                              Query query) {\n+        Aggregate aggregate = query.aggregateNotNull();\n+        Iterator<Number> results = this.query(query, statement -> {\n+            // Set request timeout to a large value\n+            // TODO read from conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4f5bcfeb03817d2d8c6545cbffba4cc85e7808"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM1MDQ3OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowODoxNVrOFaRzaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowODoxNVrOFaRzaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA5ODk4NA==", "bodyText": "remove TODO", "url": "https://github.com/hugegraph/hugegraph/pull/813#discussion_r363098984", "createdAt": "2020-01-05T15:08:15Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "diffHunk": "@@ -88,7 +88,24 @@ public BackendStore store() {\n     }\n \n     @Watched(prefix = \"tx\")\n-    public QueryResults query(Query query) {\n+    public Number queryNumber(Query query) {\n+        LOG.debug(\"Transaction queryNumber: {}\", query);\n+\n+        E.checkArgument(query.aggregate() != null,\n+                        \"The aggregate must be set for number query: %s\",\n+                        query);\n+        Query squery = this.serializer.writeQuery(query);\n+\n+        this.beforeRead();\n+        try {\n+            return this.store.queryNumber(squery);\n+        } finally {\n+            this.afterRead(); // TODO: not complete the iteration currently", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4f5bcfeb03817d2d8c6545cbffba4cc85e7808"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjM1MDYzOnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowODozM1rOFaRzew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxNTowODozM1rOFaRzew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA5OTAwMw==", "bodyText": "TODO", "url": "https://github.com/hugegraph/hugegraph/pull/813#discussion_r363099003", "createdAt": "2020-01-05T15:08:33Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -91,6 +97,15 @@ private Table table(String table) throws IOException {\n         return this.hbase.getTable(tableName);\n     }\n \n+    private AggregationClient aggregationClient() {\n+        Configuration hConfig = this.hbase.getConfiguration();\n+        hConfig = HBaseConfiguration.create(hConfig);\n+        // TODO: read from conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4f5bcfeb03817d2d8c6545cbffba4cc85e7808"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1554, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}