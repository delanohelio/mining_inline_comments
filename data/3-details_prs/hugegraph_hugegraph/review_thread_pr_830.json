{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTMxODAz", "number": 830, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1NDo1NFrODYEDaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo0MToyNFrODc9pew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTU4ODI3OnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1NDo1NFrOFdtUTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1NDo1NFrOFdtUTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NTUwMQ==", "bodyText": "The mac must be not empty here", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r366695501", "createdAt": "2020-01-15T04:54:54Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -177,20 +175,40 @@ private void checkIpAndMac(ExtraParam param) {\n         if (StringUtils.isEmpty(expectMac)) {\n             return;\n         }\n-        String actualMac;\n-        try {\n-            actualMac = this.machineInfo.getMacByInetAddress(\n-                        InetAddress.getByName(expectIp));\n-        } catch (UnknownHostException e) {\n-            throw newLicenseException(\n-                  \"Failed to get mac address for ip '%s'\", expectIp);\n-        }\n-        String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n-        String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n-        if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n-            throw newLicenseException(\n-                  \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                  actualMac, expectMac);\n+\n+        // Mac must not empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfc064c8ac65aaf2d5d58318ae2a439c8a12aa4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTU4OTkyOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1NjozOVrOFdtVXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1NjozOVrOFdtVXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NTc3NQ==", "bodyText": "move to line 200", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r366695775", "createdAt": "2020-01-15T04:56:39Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -177,20 +175,40 @@ private void checkIpAndMac(ExtraParam param) {\n         if (StringUtils.isEmpty(expectMac)) {\n             return;\n         }\n-        String actualMac;\n-        try {\n-            actualMac = this.machineInfo.getMacByInetAddress(\n-                        InetAddress.getByName(expectIp));\n-        } catch (UnknownHostException e) {\n-            throw newLicenseException(\n-                  \"Failed to get mac address for ip '%s'\", expectIp);\n-        }\n-        String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n-        String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n-        if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n-            throw newLicenseException(\n-                  \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                  actualMac, expectMac);\n+\n+        // Mac must not empty\n+        if (!StringUtils.isEmpty(expectIp)) {\n+            String actualMac;\n+            try {\n+                actualMac = this.machineInfo.getMacByInetAddress(\n+                            InetAddress.getByName(expectIp));\n+            } catch (UnknownHostException e) {\n+                throw newLicenseException(\n+                      \"Failed to get mac address for ip '%s'\", expectIp);\n+            }\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n+            if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n+                throw newLicenseException(\n+                      \"The server's mac '%s' doesn't match the authorized '%s'\",\n+                      actualMac, expectMac);\n+            }\n+        } else {\n+            matched = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfc064c8ac65aaf2d5d58318ae2a439c8a12aa4"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTU5MDIzOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNDo1Njo1OFrOFdtVjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwOToxOTowNVrOFlM6Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NTgyMQ==", "bodyText": "why not keep \":\"", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r366695821", "createdAt": "2020-01-15T04:56:58Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -177,20 +175,40 @@ private void checkIpAndMac(ExtraParam param) {\n         if (StringUtils.isEmpty(expectMac)) {\n             return;\n         }\n-        String actualMac;\n-        try {\n-            actualMac = this.machineInfo.getMacByInetAddress(\n-                        InetAddress.getByName(expectIp));\n-        } catch (UnknownHostException e) {\n-            throw newLicenseException(\n-                  \"Failed to get mac address for ip '%s'\", expectIp);\n-        }\n-        String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n-        String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n-        if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n-            throw newLicenseException(\n-                  \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                  actualMac, expectMac);\n+\n+        // Mac must not empty\n+        if (!StringUtils.isEmpty(expectIp)) {\n+            String actualMac;\n+            try {\n+                actualMac = this.machineInfo.getMacByInetAddress(\n+                            InetAddress.getByName(expectIp));\n+            } catch (UnknownHostException e) {\n+                throw newLicenseException(\n+                      \"Failed to get mac address for ip '%s'\", expectIp);\n+            }\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n+            if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n+                throw newLicenseException(\n+                      \"The server's mac '%s' doesn't match the authorized '%s'\",\n+                      actualMac, expectMac);\n+            }\n+        } else {\n+            matched = false;\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            List<String> actualMacs = this.machineInfo.getMacAddress();\n+            for (String actualMac : actualMacs) {\n+                String actualFormatMac = actualMac.replaceAll(\":\", \"-\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dfc064c8ac65aaf2d5d58318ae2a439c8a12aa4"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDU1MzExNA==", "bodyText": "There may be two kinds of join symbols in the mac address, ':' and '-', they are both valid. To avoid check failures due to symbol mismatches, so unified the symbol to '-'", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r374553114", "createdAt": "2020-02-04T09:19:05Z", "author": {"login": "Linary"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -177,20 +175,40 @@ private void checkIpAndMac(ExtraParam param) {\n         if (StringUtils.isEmpty(expectMac)) {\n             return;\n         }\n-        String actualMac;\n-        try {\n-            actualMac = this.machineInfo.getMacByInetAddress(\n-                        InetAddress.getByName(expectIp));\n-        } catch (UnknownHostException e) {\n-            throw newLicenseException(\n-                  \"Failed to get mac address for ip '%s'\", expectIp);\n-        }\n-        String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n-        String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n-        if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n-            throw newLicenseException(\n-                  \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                  actualMac, expectMac);\n+\n+        // Mac must not empty\n+        if (!StringUtils.isEmpty(expectIp)) {\n+            String actualMac;\n+            try {\n+                actualMac = this.machineInfo.getMacByInetAddress(\n+                            InetAddress.getByName(expectIp));\n+            } catch (UnknownHostException e) {\n+                throw newLicenseException(\n+                      \"Failed to get mac address for ip '%s'\", expectIp);\n+            }\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n+            if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n+                throw newLicenseException(\n+                      \"The server's mac '%s' doesn't match the authorized '%s'\",\n+                      actualMac, expectMac);\n+            }\n+        } else {\n+            matched = false;\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            List<String> actualMacs = this.machineInfo.getMacAddress();\n+            for (String actualMac : actualMacs) {\n+                String actualFormatMac = actualMac.replaceAll(\":\", \"-\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY5NTgyMQ=="}, "originalCommit": {"oid": "9dfc064c8ac65aaf2d5d58318ae2a439c8a12aa4"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjkyNzMwOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjoyODozMFrOFlSTUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjoyODozMFrOFlSTUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY0MTQ4OQ==", "bodyText": "change to \"The server's macs '%s' don't\"\nalign with newLicenseException", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r374641489", "createdAt": "2020-02-04T12:28:30Z", "author": {"login": "zhoney"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -177,20 +175,40 @@ private void checkIpAndMac(ExtraParam param) {\n         if (StringUtils.isEmpty(expectMac)) {\n             return;\n         }\n-        String actualMac;\n-        try {\n-            actualMac = this.machineInfo.getMacByInetAddress(\n-                        InetAddress.getByName(expectIp));\n-        } catch (UnknownHostException e) {\n-            throw newLicenseException(\n-                  \"Failed to get mac address for ip '%s'\", expectIp);\n-        }\n-        String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n-        String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n-        if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n-            throw newLicenseException(\n-                  \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                  actualMac, expectMac);\n+\n+        // The mac must be not empty here\n+        if (!StringUtils.isEmpty(expectIp)) {\n+            String actualMac;\n+            try {\n+                actualMac = this.machineInfo.getMacByInetAddress(\n+                            InetAddress.getByName(expectIp));\n+            } catch (UnknownHostException e) {\n+                throw newLicenseException(\n+                      \"Failed to get mac address for ip '%s'\", expectIp);\n+            }\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n+            if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n+                throw newLicenseException(\n+                      \"The server's mac '%s' doesn't match the authorized '%s'\",\n+                      actualMac, expectMac);\n+            }\n+        } else {\n+            String expectFormatMac = expectMac.replaceAll(\":\", \"-\");\n+            List<String> actualMacs = this.machineInfo.getMacAddress();\n+            matched = false;\n+            for (String actualMac : actualMacs) {\n+                String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n+                if (actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n+                    matched = true;\n+                    break;\n+                }\n+            }\n+            if (!matched) {\n+                throw newLicenseException(\n+                        \"The server's mac '%s' doesn't match the authorized '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4ef00e3b43fccdcac56152a713bcd78d13194f7"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjk2MTIyOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjozOTo1OFrOFlSnRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjozOTo1OFrOFlSnRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY0NjU5Nw==", "bodyText": "macs '%s' => macs %s", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r374646597", "createdAt": "2020-02-04T12:39:58Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -206,8 +206,8 @@ private void checkIpAndMac(ExtraParam param) {\n             }\n             if (!matched) {\n                 throw newLicenseException(\n-                        \"The server's mac '%s' doesn't match the authorized '%s'\",\n-                        actualMacs, expectMac);\n+                      \"The server's macs '%s' don't match the authorized '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f2833f158d7ae7435613d1443c588512676635"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNjk2NzYzOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo0MToyNFrOFlSqhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo0MToyNFrOFlSqhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY0NzQyOA==", "bodyText": "keep origin message \"The server's mac '%s' doesn't...\"", "url": "https://github.com/hugegraph/hugegraph/pull/830#discussion_r374647428", "createdAt": "2020-02-04T12:41:24Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/license/LicenseVerifyManager.java", "diffHunk": "@@ -190,7 +190,7 @@ private void checkIpAndMac(ExtraParam param) {\n             String actualFormatMac = actualMac.replaceAll(\":\", \"-\");\n             if (!actualFormatMac.equalsIgnoreCase(expectFormatMac)) {\n                 throw newLicenseException(\n-                      \"The server's mac '%s' doesn't match the authorized '%s'\",\n+                      \"The server's macs '%s' don't match the authorized '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8f2833f158d7ae7435613d1443c588512676635"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}