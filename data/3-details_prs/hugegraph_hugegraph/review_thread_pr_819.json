{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMzQxNDQw", "number": 819, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo1OTowOVrODWeYZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1Nzo0NFrODWu-Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0ODkzMDMwOnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo1OTowOVrOFbQRxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwODo1OTowOVrOFbQRxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDEyMjU2Ng==", "bodyText": "compare the two ids", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364122566", "createdAt": "2020-01-08T08:59:09Z", "author": {"login": "javeme"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,13 +402,28 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n+        Id labelId = g.edgeLabel(newEdge.label).id();\n+        List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n+\n         if (newEdge.id != null) {\n+            // check the sortKeys are not updated\n+            HugeEdge edge = (HugeEdge) g.edges(newEdge.id).next();\n+            sortKeyIds.forEach(skId -> {\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n+                Object sortKeyValue = newEdge.properties.get(sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n+                Object oldSortKeyValue = edge.value(sortKey);\n+                E.checkArgument(sortKeyValue == null ||\n+                                sortKeyValue.equals(oldSortKeyValue),\n+                                \"The value of sort key '%s' either be null \" +\n+                                \"or equal with origin '%s', but got '%s'\",\n+                                sortKey, oldSortKeyValue, sortKeyValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "719d772ae61de86fd1e9a8caaac3f87fbd6bdb1c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0NTc0OnYy", "diffSide": "RIGHT", "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo0M1rOFbqXLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo0M1rOFbqXLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTkzNQ==", "bodyText": "equal to", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549935", "createdAt": "2020-01-09T03:55:43Z", "author": {"login": "zhoney"}, "path": "hugegraph-api/src/main/java/com/baidu/hugegraph/api/graph/EdgeAPI.java", "diffHunk": "@@ -402,30 +402,31 @@ public static Direction parseDirection(String direction) {\n     }\n \n     private Id getEdgeId(HugeGraph g, JsonEdge newEdge) {\n-        if (newEdge.id != null) {\n-            return EdgeId.parse(newEdge.id.toString());\n-        }\n-\n         String sortKeys = \"\";\n         Id labelId = g.edgeLabel(newEdge.label).id();\n         List<Id> sortKeyIds = g.edgeLabel(labelId).sortKeys();\n         if (!sortKeyIds.isEmpty()) {\n             List<Object> sortKeyValues = new ArrayList<>(sortKeyIds.size());\n             sortKeyIds.forEach(skId -> {\n-                String sortKey = g.propertyKey(skId).name();\n+                PropertyKey pk = g.propertyKey(skId);\n+                String sortKey = pk.name();\n                 Object sortKeyValue = newEdge.properties.get(sortKey);\n                 E.checkArgument(sortKeyValue != null,\n                                 \"The value of sort key '%s' can't be null\",\n                                 sortKey);\n+                sortKeyValue = pk.convValue(sortKeyValue, true);\n                 sortKeyValues.add(sortKeyValue);\n             });\n             sortKeys = ConditionQuery.concatValues(sortKeyValues);\n         }\n-\n-        // TODO: How to get Direction from JsonEdge easily? or any better way?\n         EdgeId edgeId = new EdgeId(HugeVertex.getIdValue(newEdge.source),\n                                    Directions.OUT, labelId, sortKeys,\n                                    HugeVertex.getIdValue(newEdge.target));\n+        if (newEdge.id != null) {\n+            E.checkArgument(edgeId.equals(newEdge.id),\n+                            \"The sort key values either be null \" +\n+                            \"or equal with origin\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0NTk3OnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo1NlrOFbqXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NTo1NlrOFbqXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU0OTk3OA==", "bodyText": "Create", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364549978", "createdAt": "2020-01-09T03:55:56Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0NjEwOnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NjowNFrOFbqXcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NjowNFrOFbqXcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDAwMw==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550003", "createdAt": "2020-01-09T03:56:04Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0Njc1OnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NjozMlrOFbqX2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NjozMlrOFbqX2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDEwNA==", "bodyText": "the property \u201cdate\u201d has changed", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550104", "createdAt": "2020-01-09T03:56:32Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0NzQzOnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NzoxNVrOFbqYTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1NzoxNVrOFbqYTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDIyMg==", "bodyText": "query to assert two different edges", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550222", "createdAt": "2020-01-09T03:57:15Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Add a new edge when sortkey value has changed\n+        assertResponseStatus(200, r);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTY0ODAyOnYy", "diffSide": "RIGHT", "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1Nzo0NFrOFbqYrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwMzo1Nzo0NFrOFbqYrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1MDMxNw==", "bodyText": "Update", "url": "https://github.com/hugegraph/hugegraph/pull/819#discussion_r364550317", "createdAt": "2020-01-09T03:57:44Z", "author": {"login": "zhoney"}, "path": "hugegraph-test/src/main/java/com/baidu/hugegraph/api/EdgeApiTest.java", "diffHunk": "@@ -57,6 +60,82 @@ public void testCreate() throws IOException {\n         assertResponseStatus(201, r);\n     }\n \n+    @Test\n+    public void testBatchUpdate() throws IOException {\n+        String outVId = getVertexId(\"person\", \"name\", \"marko\");\n+        String inVId = getVertexId(\"person\", \"name\", \"josh\");\n+        // create\n+        String edge = String.format(\"{\"\n+                + \"\\\"label\\\": \\\"knows\\\",\"\n+                + \"\\\"outVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"inVLabel\\\": \\\"person\\\",\"\n+                + \"\\\"outV\\\": \\\"%s\\\",\"\n+                + \"\\\"inV\\\": \\\"%s\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"date\\\": \\\"2013-02-20\\\",\"\n+                + \"\\\"weight\\\": 1.0}\"\n+                + \"}\", outVId, inVId);\n+        Response r = client().post(path, edge);\n+        // The edge id is 'S1:marko>1>7JooBil0>S1:josh'\n+        String content = assertResponseStatus(201, r);\n+        String id = parseId(content);\n+\n+        // update edge with edgeId\n+        edge = String.format(\"{\"\n+                + \"\\\"edges\\\":[\"\n+                + \"{\"\n+                + \"\\\"id\\\":\\\"%s\\\",\"\n+                + \"\\\"label\\\":\\\"knows\\\",\"\n+                + \"\\\"outV\\\":\\\"%s\\\",\"\n+                + \"\\\"outVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"inV\\\":\\\"%s\\\",\"\n+                + \"\\\"inVLabel\\\":\\\"person\\\",\"\n+                + \"\\\"properties\\\":{\"\n+                + \"\\\"weight\\\":0.2,\"\n+                + \"\\\"date\\\":\\\"2014-02-20\\\"\"\n+                + \"}\"\n+                + \"}\"\n+                + \"],\"\n+                + \"\\\"update_strategies\\\":{\"\n+                + \"\\\"weight\\\":\\\"SUM\\\",\"\n+                + \"\\\"date\\\":\\\"BIGGER\\\"\"\n+                + \"},\"\n+                + \"\\\"check_vertex\\\":false,\"\n+                + \"\\\"create_if_not_exist\\\":true\"\n+                + \"}\", id, outVId, inVId);\n+        r = client().put(path + \"batch\", edge, ImmutableMap.of());\n+        // Now allowed to modify sortkey values, the property date has changed\n+        content = assertResponseStatus(400, r);\n+        Assert.assertTrue(content.contains(\n+                          \"either be null or equal with origin\"));\n+\n+        // update edge without edgeId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388bdee9ee5c8185d426855ed4bccf79bd266b23"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1558, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}