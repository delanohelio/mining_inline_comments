{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyMDkyOTE1", "number": 1234, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMToyNVrOEzMRkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1OTowOFrOEzOW2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTEzOTM4OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMToyNVrOHqRHHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMToyNVrOHqRHHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4MjU5MQ==", "bodyText": "keep the origin code and just add line 127~134", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514082591", "createdAt": "2020-10-29T08:31:25Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\",\"kerberos\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTE0MTg1OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMjowNFrOHqRIqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMjowNFrOHqRIqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4Mjk4NA==", "bodyText": "missing one space before \"kerberos\"", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514082984", "createdAt": "2020-10-29T08:32:04Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\",\"kerberos\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTE0NTU5OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMjo1OFrOHqRKyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozMjo1OFrOHqRKyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4MzUzMQ==", "bodyText": "improve description", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514083531", "createdAt": "2020-10-29T08:32:58Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "diffHunk": "@@ -97,4 +97,36 @@ public static synchronized HbaseOptions instance() {\n                     positiveInt(),\n                     12 * 60 * 60L\n             );\n+\n+    public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n+            new ConfigOption<>(\n+                    \"hbase.kerberos.enable\",\n+                    \"Is Kerberos authentication enabled for HBase.\",\n+                    disallowEmpty(),\n+                    false\n+            );\n+\n+    public static final ConfigOption<String> HBASE_KRB5_CONF =\n+            new ConfigOption<>(\n+                    \"hbase.krb5.conf\",\n+                    \"Krb5.conf configuration file.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTE0OTg5OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozNDoxMVrOHqRNcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODozNDoxMVrOHqRNcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4NDIwOQ==", "bodyText": "prefer hbase.kerberos_enable, same as other option name", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514084209", "createdAt": "2020-10-29T08:34:11Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseOptions.java", "diffHunk": "@@ -97,4 +97,36 @@ public static synchronized HbaseOptions instance() {\n                     positiveInt(),\n                     12 * 60 * 60L\n             );\n+\n+    public static final ConfigOption<Boolean> HBASE_KERBEROS_ENABLE =\n+            new ConfigOption<>(\n+                    \"hbase.kerberos.enable\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTM2NDQ4OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOToyOTowN1rOHqTQPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoxMToxM1rOHqU3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExNzY5Mw==", "bodyText": "add hConfig.set(\"hadoop.security.authorization\", \"true\");", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514117693", "createdAt": "2020-10-29T09:29:07Z", "author": {"login": "houzhizhen"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE0NDA1NQ==", "bodyText": "It's not a legal argument. After setting,program reports exception ,as follows:\nException in thread \"main\" java.lang.IllegalArgumentException: Invalid attribute value for hadoop.security.authentication of true\nat org.apache.hadoop.security.SecurityUtil.getAuthenticationMethod(SecurityUtil.java:609)\nat org.apache.hadoop.security.UserGroupInformation.initialize(UserGroupInformation.java:272)\nat org.apache.hadoop.security.UserGroupInformation.setConfiguration(UserGroupInformation.java:311)", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514144055", "createdAt": "2020-10-29T10:11:13Z", "author": {"login": "tmljob"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            hConfig = HBaseConfiguration.create();\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExNzY5Mw=="}, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTM3NjgwOnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTozMjowOFrOHqTYAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMToyOTowOFrOHqXiiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg==", "bodyText": "remove this line if possible.", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514119682", "createdAt": "2020-10-29T09:32:08Z", "author": {"login": "houzhizhen"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzMTQzMw==", "bodyText": "which line need to remove?pls tell me line num.", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514131433", "createdAt": "2020-10-29T09:50:47Z", "author": {"login": "tmljob"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg=="}, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE4NzkxNQ==", "bodyText": "@houzhizhen It seems that setting this environment java.security.krb5.conf  is the best way, see Locating the krb5.conf Configuration File", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514187915", "createdAt": "2020-10-29T11:29:08Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,18 +122,44 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n-        Configuration hConfig = HBaseConfiguration.create();\n-        hConfig.set(HConstants.ZOOKEEPER_QUORUM, hosts);\n-        hConfig.set(HConstants.ZOOKEEPER_CLIENT_PORT, String.valueOf(port));\n-        hConfig.set(HConstants.ZOOKEEPER_ZNODE_PARENT, znodeParent);\n-\n-        hConfig.setInt(\"zookeeper.recovery.retry\",\n-                       config.get(HbaseOptions.HBASE_ZK_RETRY));\n-\n-        // Set hbase.hconnection.threads.max 64 to avoid OOM(default value: 256)\n-        hConfig.setInt(\"hbase.hconnection.threads.max\",\n-                       config.get(HbaseOptions.HBASE_THREADS_MAX));\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n+        Configuration hConfig = null;\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDExOTY4Mg=="}, "originalCommit": {"oid": "6eba0f92918bb03608f7502ee523485463737756"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTQ4MDU3OnYy", "diffSide": "RIGHT", "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1OTowOFrOHqUZ8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1OTowOFrOHqUZ8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNjU2MA==", "bodyText": "could you move the block(line 127~138) to line 150?", "url": "https://github.com/hugegraph/hugegraph/pull/1234#discussion_r514136560", "createdAt": "2020-10-29T09:59:08Z", "author": {"login": "javeme"}, "path": "hugegraph-hbase/src/main/java/com/baidu/hugegraph/backend/store/hbase/HbaseSessions.java", "diffHunk": "@@ -121,8 +122,21 @@ public synchronized void open() throws IOException {\n         String hosts = config.get(HbaseOptions.HBASE_HOSTS);\n         int port = config.get(HbaseOptions.HBASE_PORT);\n         String znodeParent = config.get(HbaseOptions.HBASE_ZNODE_PARENT);\n-\n+        boolean isEnableKerberos = config.get(HbaseOptions.HBASE_KERBEROS_ENABLE);\n         Configuration hConfig = HBaseConfiguration.create();\n+        if(isEnableKerberos) {\n+            String krb5Conf = config.get(HbaseOptions.HBASE_KRB5_CONF);\n+            System.setProperty(\"java.security.krb5.conf\", krb5Conf);\n+            String principal = config.get(HbaseOptions.HBASE_KERBEROS_PRINCIPAL);\n+            String keyTab = config.get(HbaseOptions.HBASE_KERBEROS_KEYTAB);\n+            hConfig.set(\"hadoop.security.authentication\", \"kerberos\");\n+            hConfig.set(\"hbase.security.authentication\", \"kerberos\");\n+\n+            //  login/authenticate using keytab\n+            UserGroupInformation.setConfiguration(hConfig);\n+            UserGroupInformation.loginUserFromKeytab(principal, keyTab);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09a17941c968f08a230c0ee81509a7f57f954b06"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1511, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}