{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODc1MzUw", "number": 1158, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNzozMTowOFrOEeCpgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozOTo0OFrOEeSlHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTM2MTI4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNzozMTowOFrOHJgqBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNzozMTowOFrOHJgqBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTczNDI3OQ==", "bodyText": "execute query of vertices/edges.", "url": "https://github.com/hugegraph/hugegraph/pull/1158#discussion_r479734279", "createdAt": "2020-08-30T07:31:08Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/config/CoreOptions.java", "diffHunk": "@@ -182,14 +182,22 @@ public static synchronized CoreOptions instance() {\n                     8\n             );\n \n-    public static final ConfigOption<Integer> RATE_LIMIT =\n+    public static final ConfigOption<Integer> RATE_LIMIT_WRITE =\n             new ConfigOption<>(\n-                    \"rate_limit\",\n+                    \"rate_limit.write\",\n                     \"The max rate(items/s) to add/update/delete vertices/edges.\",\n                     rangeInt(0, Integer.MAX_VALUE),\n                     0\n             );\n \n+    public static final ConfigOption<Integer> RATE_LIMIT_READ =\n+            new ConfigOption<>(\n+                    \"rate_limit.read\",\n+                    \"The max rate(times/s) to execute query.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f8a36fb02d4969393117efb13f7ab141c8138bc"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTk3MTQ4OnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozOTo0OFrOHJ3HVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozOTo0OFrOHJ3HVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwMjIzMA==", "bodyText": "what is the behavior if it is interrupted", "url": "https://github.com/hugegraph/hugegraph/pull/1158#discussion_r480102230", "createdAt": "2020-08-31T12:39:48Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/tx/AbstractTransaction.java", "diffHunk": "@@ -150,6 +150,15 @@ public Number queryNumber(Query query) {\n \n         Query squery = this.serializer.writeQuery(query);\n \n+        // Do rate limit if needed\n+        RateLimiter rateLimiter = this.graph.readRateLimiter();\n+        if (rateLimiter != null && query.resultType().isGraph()) {\n+            double time = rateLimiter.acquire(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d281a79545a3ceafa2d08171fd2eac44d562232b"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1483, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}