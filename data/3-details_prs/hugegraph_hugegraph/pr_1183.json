{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NjgwMDQ3", "number": 1183, "title": "implement RamTable", "bodyText": "implement RamTable\nplugin ramtable to StandardHugeGrap.edges(query)\nplugin ramtable to GraphTransaction.queryEdgesFromBackend(Query query)\nallow config vertices/edges capacity of ramtable\ntiny improve: remove empty line and delete IntLongMap\nsupport concurrent loading\nfix edge direction of result is set to BOTH when query with BOTH\nadd Consumers class to util package\nfix ramtable missing some edges if vertex id is big long number(overflow int)\nfix ramtable edge id(direction IN) does not exist and adjacent vertex without props\nsupport load from file and export to file\n\nChange-Id: I4e1a5c06bd331dc29a92dcb76843990863dfe6ca", "createdAt": "2020-09-19T06:55:56Z", "url": "https://github.com/hugegraph/hugegraph/pull/1183", "merged": true, "mergeCommit": {"oid": "e35f9fbf1b66282a1c00725ca4544557e585b737"}, "closed": true, "closedAt": "2020-09-21T09:40:47Z", "author": {"login": "javeme"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKSu41gH2gAyNDg5NjgwMDQ3OjJjYmQ0NDFkOGNlZDBjNDYxY2Q4NTA4MjRhYWIwM2RiOGUzZjM2M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLAIPOAFqTQ5MjQyNjY3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2cbd441d8ced0c461cd850824aab03db8e3f363a", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/2cbd441d8ced0c461cd850824aab03db8e3f363a", "committedDate": "2020-09-19T04:45:59Z", "message": "implement RamTable  (#49)\n\n* implement RamTable\n* plugin ramtable to StandardHugeGrap.edges(query)\n* plugin ramtable to GraphTransaction.queryEdgesFromBackend(Query query)\n* allow config vertices/edges capacity of ramtable\n* tiny improve: remove empty line and delete IntLongMap\n* support concurrent loading\n* fix edge direction of result is set to BOTH when query with BOTH\n\nChange-Id: I4e1a5c06bd331dc29a92dcb76843990863dfe6ca"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08027fe4330a7e824e1a436883471309758a52f5", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/08027fe4330a7e824e1a436883471309758a52f5", "committedDate": "2020-09-19T06:49:15Z", "message": "add Consumers class to util package\n\nChange-Id: I8765582ba4e9b5fe8de4300719612a84bfce89a3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e6f35ded6620e924d84c973d05d5072e8e80ac2", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/3e6f35ded6620e924d84c973d05d5072e8e80ac2", "committedDate": "2020-09-19T06:49:15Z", "message": "fix ramtable missing some edges if vertex id is big long number(overflow int) (#58)\n\nChange-Id: Icfaba2550c7ee8892d98b1fbb736645e3d3820d1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19149a7929e69e8c57d345fb756197a0f6f44221", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/19149a7929e69e8c57d345fb756197a0f6f44221", "committedDate": "2020-09-19T06:49:15Z", "message": "fix ramtable edge id(direction IN) does not exist and adjacent vertex without props\n\nChange-Id: I92cb10fbf0f7acd818a70723bc0dbd988ca89132"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/b5f56bcb60860c9166d2e8cb7192379213201fa3", "committedDate": "2020-09-19T06:49:15Z", "message": "support load from file and export to file\n\nChange-Id: Iecfb5bad535e4954a325eb45b1d9def53fdb31c0\nusage: graph.reloadRamtable(true)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjM5MDU3", "url": "https://github.com/hugegraph/hugegraph/pull/1183#pullrequestreview-492239057", "createdAt": "2020-09-21T00:41:30Z", "commit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDo0MTozMVrOHU-XKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDo0MTozMVrOHU-XKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1NTMwNA==", "bodyText": "if(ramtable) is more understandable", "url": "https://github.com/hugegraph/hugegraph/pull/1183#discussion_r491755304", "createdAt": "2020-09-21T00:41:31Z", "author": {"login": "houzhizhen"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/StandardHugeGraph.java", "diffHunk": "@@ -126,26 +127,37 @@\n     private final BackendStoreProvider storeProvider;\n     private final TinkerpopTransaction tx;\n \n-    public StandardHugeGraph(HugeConfig configuration) {\n+    private final RamTable ramtable;\n+\n+    public StandardHugeGraph(HugeConfig config) {\n         this.params = new StandardHugeGraphParams();\n-        this.configuration = configuration;\n+        this.configuration = config;\n \n         this.schemaEventHub = new EventHub(\"schema\");\n         this.graphEventHub = new EventHub(\"graph\");\n         this.indexEventHub = new EventHub(\"index\");\n \n-        final int writeLimit = configuration.get(CoreOptions.RATE_LIMIT_WRITE);\n+        final int writeLimit = config.get(CoreOptions.RATE_LIMIT_WRITE);\n         this.writeRateLimiter = writeLimit > 0 ?\n                                 RateLimiter.create(writeLimit) : null;\n-        final int readLimit = configuration.get(CoreOptions.RATE_LIMIT_READ);\n+        final int readLimit = config.get(CoreOptions.RATE_LIMIT_READ);\n         this.readRateLimiter = readLimit > 0 ?\n                                RateLimiter.create(readLimit) : null;\n \n+        boolean ramtable = config.get(CoreOptions.QUERY_RAMTABLE_ENABLE);\n+        if (!ramtable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjM5NzU1", "url": "https://github.com/hugegraph/hugegraph/pull/1183#pullrequestreview-492239755", "createdAt": "2020-09-21T00:48:00Z", "commit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDo0ODowMFrOHU-Z8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDo0ODowMFrOHU-Z8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1NjAxNg==", "bodyText": "It is better to put this.done in finally clause.", "url": "https://github.com/hugegraph/hugegraph/pull/1183#discussion_r491756016", "createdAt": "2020-09-21T00:48:00Z", "author": {"login": "houzhizhen"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/util/Consumers.java", "diffHunk": "@@ -0,0 +1,205 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.util;\n+\n+import java.util.concurrent.ArrayBlockingQueue;\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Consumer;\n+\n+import org.slf4j.Logger;\n+\n+import com.baidu.hugegraph.HugeException;\n+import com.baidu.hugegraph.task.TaskManager.ContextCallable;\n+import com.baidu.hugegraph.util.ExecutorUtil;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class Consumers<V> {\n+\n+    public static final int CPUS = Runtime.getRuntime().availableProcessors();\n+    public static final int THREADS = 4 + CPUS / 4;\n+    public static final int QUEUE_WORKER_SIZE = 1000;\n+\n+    private static final Logger LOG = Log.logger(Consumers.class);\n+\n+    private final ExecutorService executor;\n+    private final Consumer<V> consumer;\n+    private final Runnable done;\n+\n+    private final int workers;\n+    private final int queueSize;\n+    private final CountDownLatch latch;\n+    private final BlockingQueue<V> queue;\n+\n+    private volatile boolean ending = false;\n+    private volatile Throwable exception = null;\n+\n+    public Consumers(ExecutorService executor, Consumer<V> consumer) {\n+        this(executor, consumer, null);\n+    }\n+\n+    public Consumers(ExecutorService executor,\n+                     Consumer<V> consumer, Runnable done) {\n+        this.executor = executor;\n+        this.consumer = consumer;\n+        this.done = done;\n+\n+        int workers = THREADS;\n+        if (this.executor instanceof ThreadPoolExecutor) {\n+            workers = ((ThreadPoolExecutor) this.executor).getCorePoolSize();\n+        }\n+        this.workers = workers;\n+        this.queueSize = QUEUE_WORKER_SIZE * workers;\n+        this.latch = new CountDownLatch(workers);\n+        this.queue = new ArrayBlockingQueue<>(this.queueSize);\n+    }\n+\n+    public void start(String name) {\n+        this.ending = false;\n+        this.exception = null;\n+        if (this.executor == null) {\n+            return;\n+        }\n+        LOG.info(\"Starting {} workers[{}] with queue size {}...\",\n+                 this.workers, name, this.queueSize);\n+        for (int i = 0; i < this.workers; i++) {\n+            this.executor.submit(new ContextCallable<>(this::runAndDone));\n+        }\n+    }\n+\n+    private Void runAndDone() {\n+        try {\n+            this.run();\n+            this.done();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjM5ODQx", "url": "https://github.com/hugegraph/hugegraph/pull/1183#pullrequestreview-492239841", "createdAt": "2020-09-21T00:48:52Z", "commit": {"oid": "b5f56bcb60860c9166d2e8cb7192379213201fa3"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e910426183c233a05cd52b848dedc93c03e5635e", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/e910426183c233a05cd52b848dedc93c03e5635e", "committedDate": "2020-09-21T08:31:07Z", "message": "split test into unit test and core test\n\nChange-Id: I7ccd8ab674c0333d0a35930d0822b198954d6bd7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a08421232c4c72df81f62e5a07c78bba6054c6e3", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/a08421232c4c72df81f62e5a07c78bba6054c6e3", "committedDate": "2020-09-21T07:52:34Z", "message": "split test into unit test and core test\n\nChange-Id: I7ccd8ab674c0333d0a35930d0822b198954d6bd7"}, "afterCommit": {"oid": "e910426183c233a05cd52b848dedc93c03e5635e", "author": {"user": {"login": "javeme", "name": "Jermy Li"}}, "url": "https://github.com/hugegraph/hugegraph/commit/e910426183c233a05cd52b848dedc93c03e5635e", "committedDate": "2020-09-21T08:31:07Z", "message": "split test into unit test and core test\n\nChange-Id: I7ccd8ab674c0333d0a35930d0822b198954d6bd7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDIzMDM0", "url": "https://github.com/hugegraph/hugegraph/pull/1183#pullrequestreview-492423034", "createdAt": "2020-09-21T09:34:29Z", "commit": {"oid": "e910426183c233a05cd52b848dedc93c03e5635e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNDI2Njc4", "url": "https://github.com/hugegraph/hugegraph/pull/1183#pullrequestreview-492426678", "createdAt": "2020-09-21T09:39:24Z", "commit": {"oid": "e910426183c233a05cd52b848dedc93c03e5635e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2284, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}