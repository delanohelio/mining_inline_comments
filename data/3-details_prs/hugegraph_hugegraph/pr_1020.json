{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMwMDY3MDYy", "number": 1020, "title": "Initially implement distributed consistency with jraft", "bodyText": "Change-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f", "createdAt": "2020-06-07T13:27:48Z", "url": "https://github.com/hugegraph/hugegraph/pull/1020", "merged": true, "mergeCommit": {"oid": "a25000e91c469f73ce9442280e7a0601718ed27e"}, "closed": true, "closedAt": "2020-07-28T02:43:32Z", "author": {"login": "Linary"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABco779ygBqjM0MTY1MTQ1MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5NKh9AFqTQ1NjI2MzAzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3856c93a51beda91b4debd4e263980dfe73e7ba0", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/3856c93a51beda91b4debd4e263980dfe73e7ba0", "committedDate": "2020-06-07T13:24:10Z", "message": "Initially implement distributed consistency with jraft\n\nChange-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f"}, "afterCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/20d29a3a923a3a00810f9013584783a8bdcd14a0", "committedDate": "2020-06-07T13:32:42Z", "message": "Initially implement distributed consistency with jraft\n\nChange-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTI1Mzg5", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-425925389", "createdAt": "2020-06-08T05:36:15Z", "commit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNTozNjoxNVrOGgPvNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNTo0NjoxOVrOGgP5Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NTQ2MA==", "bodyText": "can we move the log to BackendProviderFactory.open()", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436465460", "createdAt": "2020-06-08T05:36:15Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/StandardHugeGraph.java", "diffHunk": "@@ -343,9 +343,15 @@ private GraphTransaction graphTransaction() {\n \n     private BackendStoreProvider loadStoreProvider() {\n         String backend = this.configuration.get(CoreOptions.BACKEND);\n-        LOG.info(\"Opening backend store '{}' for graph '{}'\",\n-                 backend, this.name);\n-        return BackendProviderFactory.open(backend, this.name);\n+        boolean raftMode = this.configuration.get(CoreOptions.RAFT_MODE);\n+        if (raftMode) {\n+            LOG.info(\"Opening backend store '{}' in raft mode for graph '{}'\",\n+                     backend, this.name);\n+        } else {\n+            LOG.info(\"Opening backend store '{}' for graph '{}'\",\n+                     backend, this.name);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NjAwMg==", "bodyText": "log who", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436466002", "createdAt": "2020-06-08T05:38:29Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/BackendStoreStateMachine.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Iterator;\n+import com.alipay.sofa.jraft.Status;\n+import com.alipay.sofa.jraft.core.StateMachineAdapter;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class BackendStoreStateMachine extends StateMachineAdapter {\n+\n+    private static final Logger LOG = Log.logger(BackendStoreStateMachine.class);\n+\n+    private final BackendStore store;\n+    private final AtomicLong leaderTerm;\n+\n+    public BackendStoreStateMachine(BackendStore store) {\n+        this.store = store;\n+        this.leaderTerm = new AtomicLong(-1);\n+    }\n+\n+    @Override\n+    public void onApply(Iterator iter) {\n+        LOG.debug(\"Node role: {}\", this.isLeader() ? \"leader\" : \"follower\");\n+        while (iter.hasNext()) {\n+            StoreCommand command;\n+            StoreClosure closure = (StoreClosure) iter.done();\n+            if (closure != null) {\n+                // Leader just take it out from the closure\n+                command = closure.command();\n+            } else {\n+                // Follower need deserializeMutation data\n+                ByteBuffer buffer = iter.getData();\n+                command = StoreCommand.fromBytes(buffer.array());\n+            }\n+            try {\n+                Object data = this.applyCommand(command);\n+                success(closure, data);\n+            } catch (Exception e) {\n+                failure(closure, e);\n+            }\n+            iter.next();\n+        }\n+    }\n+\n+    private Object applyCommand(StoreCommand command) throws Exception {\n+        Object result = command.apply();\n+        LOG.debug(\"The store {} performed command {}\", this.store,\n+                  command.command());\n+        return result;\n+    }\n+\n+    public boolean isLeader() {\n+        return this.leaderTerm.get() > 0;\n+    }\n+\n+    @Override\n+    public void onLeaderStart(long term) {\n+        LOG.debug(\"Become to Leader\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NjI1NQ==", "bodyText": "prefer one nodes map each Provider", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436466255", "createdAt": "2020-06-08T05:39:42Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStoreProvider.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.slf4j.Logger;\n+\n+import com.baidu.hugegraph.HugeGraph;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.backend.store.BackendStoreProvider;\n+import com.baidu.hugegraph.config.HugeConfig;\n+import com.baidu.hugegraph.event.EventListener;\n+import com.baidu.hugegraph.util.Log;\n+\n+/**\n+ * Is actually an proxy\n+ */\n+public class RaftBackendStoreProvider implements BackendStoreProvider {\n+\n+    private static final Logger LOG = Log.logger(RaftBackendStoreProvider.class);\n+\n+    // It will be synchronized wrap\n+    public static final Map<String, RaftNode> RAFT_NODES = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NjQwNw==", "bodyText": "rename to stateMachine", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436466407", "createdAt": "2020-06-08T05:40:16Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Node;\n+import com.alipay.sofa.jraft.RaftGroupService;\n+import com.alipay.sofa.jraft.StateMachine;\n+import com.alipay.sofa.jraft.conf.Configuration;\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.entity.Task;\n+import com.alipay.sofa.jraft.option.NodeOptions;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.baidu.hugegraph.backend.BackendException;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class RaftNode {\n+\n+    private static final Logger LOG = Log.logger(RaftNode.class);\n+\n+    private final StateMachine fsm;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NzE3Nw==", "bodyText": "set private", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436467177", "createdAt": "2020-06-08T05:43:01Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Node;\n+import com.alipay.sofa.jraft.RaftGroupService;\n+import com.alipay.sofa.jraft.StateMachine;\n+import com.alipay.sofa.jraft.conf.Configuration;\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.entity.Task;\n+import com.alipay.sofa.jraft.option.NodeOptions;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.baidu.hugegraph.backend.BackendException;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class RaftNode {\n+\n+    private static final Logger LOG = Log.logger(RaftNode.class);\n+\n+    private final StateMachine fsm;\n+    private final Node node;\n+\n+    public RaftNode(BackendStore store, RaftSharedComponent component) {\n+        this.fsm = new BackendStoreStateMachine(store);\n+        try {\n+            this.node = this.initRaftNode(store, component);\n+        } catch (IOException e) {\n+            throw new BackendException(\"Failed to init raft node\", e);\n+        }\n+    }\n+\n+    public Node node() {\n+        return this.node;\n+    }\n+\n+    public Node initRaftNode(BackendStore store, RaftSharedComponent component)\n+                             throws IOException {\n+        final HugeConfig config = component.config();\n+        String storePath = store.database() + \"-\" + store.store();\n+        // TODO: When sharding is supported, groupId needs to be bound to\n+        //  the shard Id\n+        final String groupId = storePath;\n+        final PeerId serverId = new PeerId();\n+        serverId.parse(config.get(CoreOptions.RAFT_PEERID));\n+\n+        NodeOptions nodeOptions = this.initNodeOptions(config);\n+        nodeOptions.setFsm(this.fsm);\n+        String raftLogPath = config.get(CoreOptions.RAFT_LOG_PATH);\n+        String logUri = Paths.get(raftLogPath, \"log\", storePath).toString();\n+        FileUtils.forceMkdir(new File(logUri));\n+        nodeOptions.setLogUri(logUri);\n+        String metaUri = Paths.get(raftLogPath, \"raft_meta\", storePath)\n+                              .toString();\n+        FileUtils.forceMkdir(new File(metaUri));\n+        nodeOptions.setRaftMetaUri(metaUri);\n+        String snapshotUri = Paths.get(raftLogPath, \"snapshot\", storePath)\n+                                  .toString();\n+        FileUtils.forceMkdir(new File(snapshotUri));\n+        // TODO\uff1a\u4e3a\u65b9\u4fbf\u8c03\u8bd5\uff0c\u6682\u65f6\u5173\u95ed\u5feb\u7167\u529f\u80fd\n+        snapshotUri = null;\n+        nodeOptions.setSnapshotUri(snapshotUri);\n+\n+        // \u8fd9\u91cc\u8ba9 raft RPC \u548c\u4e1a\u52a1 RPC \u4f7f\u7528\u540c\u4e00\u4e2a RPC server, \u901a\u5e38\u4e5f\u53ef\u4ee5\u5206\u5f00\n+        RpcServer rpcServer = component.rpcServer();\n+        // \u521d\u59cb\u5316 raft group \u670d\u52a1\u6846\u67b6\n+        RaftGroupService raftGroupService;\n+        raftGroupService = new RaftGroupService(groupId, serverId, nodeOptions,\n+                                                rpcServer, true);\n+        // \u542f\u52a8\n+        return raftGroupService.start(false);\n+    }\n+\n+    public NodeOptions initNodeOptions(HugeConfig config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NzMxNw==", "bodyText": "set private", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436467317", "createdAt": "2020-06-08T05:43:33Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftNode.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.file.Paths;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Node;\n+import com.alipay.sofa.jraft.RaftGroupService;\n+import com.alipay.sofa.jraft.StateMachine;\n+import com.alipay.sofa.jraft.conf.Configuration;\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.entity.Task;\n+import com.alipay.sofa.jraft.option.NodeOptions;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.baidu.hugegraph.backend.BackendException;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class RaftNode {\n+\n+    private static final Logger LOG = Log.logger(RaftNode.class);\n+\n+    private final StateMachine fsm;\n+    private final Node node;\n+\n+    public RaftNode(BackendStore store, RaftSharedComponent component) {\n+        this.fsm = new BackendStoreStateMachine(store);\n+        try {\n+            this.node = this.initRaftNode(store, component);\n+        } catch (IOException e) {\n+            throw new BackendException(\"Failed to init raft node\", e);\n+        }\n+    }\n+\n+    public Node node() {\n+        return this.node;\n+    }\n+\n+    public Node initRaftNode(BackendStore store, RaftSharedComponent component)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NzM5Ng==", "bodyText": "set protected", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436467396", "createdAt": "2020-06-08T05:43:57Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedComponent.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.RejectedExecutionHandler;\n+import java.util.concurrent.SynchronousQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.rpc.RaftRpcServerFactory;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.alipay.sofa.jraft.util.NamedThreadFactory;\n+import com.alipay.sofa.jraft.util.ThreadPoolUtil;\n+import com.alipay.sofa.jraft.util.Utils;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+\n+public final class RaftSharedComponent {\n+\n+    private final HugeConfig config;\n+    private final RpcServer rpcServer;\n+    private final Executor readIndexExecutor;\n+\n+    public RaftSharedComponent(HugeConfig config) {\n+        this.config = config;\n+        this.rpcServer = this.initAndStartRpcServer();\n+        this.readIndexExecutor = this.initReadIndexExecutor();\n+    }\n+\n+    public HugeConfig config() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NzY1Ng==", "bodyText": "delete this method", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436467656", "createdAt": "2020-06-08T05:44:59Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedComponent.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.RejectedExecutionHandler;\n+import java.util.concurrent.SynchronousQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.rpc.RaftRpcServerFactory;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.alipay.sofa.jraft.util.NamedThreadFactory;\n+import com.alipay.sofa.jraft.util.ThreadPoolUtil;\n+import com.alipay.sofa.jraft.util.Utils;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+\n+public final class RaftSharedComponent {\n+\n+    private final HugeConfig config;\n+    private final RpcServer rpcServer;\n+    private final Executor readIndexExecutor;\n+\n+    public RaftSharedComponent(HugeConfig config) {\n+        this.config = config;\n+        this.rpcServer = this.initAndStartRpcServer();\n+        this.readIndexExecutor = this.initReadIndexExecutor();\n+    }\n+\n+    public HugeConfig config() {\n+        return this.config;\n+    }\n+\n+    public RpcServer rpcServer() {\n+        return this.rpcServer;\n+    }\n+\n+    public Executor readIndexExecutor() {\n+        return this.readIndexExecutor;\n+    }\n+\n+    private RpcServer initAndStartRpcServer() {\n+        PeerId serverId = new PeerId();\n+        serverId.parse(this.config.get(CoreOptions.RAFT_PEERID));\n+        return RaftRpcServerFactory.createAndStartRaftRpcServer(\n+                                    serverId.getEndpoint());\n+    }\n+\n+    private Executor initReadIndexExecutor() {\n+        return createReadIndexExecutor(Math.max(Utils.cpus() << 2, 4));\n+    }\n+\n+    private static ExecutorService createReadIndexExecutor(final int coreThreads) {\n+        final int maxThreads = coreThreads << 2;\n+        final RejectedExecutionHandler handler = new ThreadPoolExecutor.AbortPolicy();\n+        return newPool(coreThreads, maxThreads, \"kvstore-read-index-callback\", handler);\n+    }\n+\n+    private static ExecutorService newPool(final int coreThreads, final int maxThreads,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2NzgxNw==", "bodyText": "can remove the final for align", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436467817", "createdAt": "2020-06-08T05:45:30Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftSharedComponent.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.util.concurrent.BlockingQueue;\n+import java.util.concurrent.Executor;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.RejectedExecutionHandler;\n+import java.util.concurrent.SynchronousQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+import com.alipay.sofa.jraft.entity.PeerId;\n+import com.alipay.sofa.jraft.rpc.RaftRpcServerFactory;\n+import com.alipay.sofa.jraft.rpc.RpcServer;\n+import com.alipay.sofa.jraft.util.NamedThreadFactory;\n+import com.alipay.sofa.jraft.util.ThreadPoolUtil;\n+import com.alipay.sofa.jraft.util.Utils;\n+import com.baidu.hugegraph.config.CoreOptions;\n+import com.baidu.hugegraph.config.HugeConfig;\n+\n+public final class RaftSharedComponent {\n+\n+    private final HugeConfig config;\n+    private final RpcServer rpcServer;\n+    private final Executor readIndexExecutor;\n+\n+    public RaftSharedComponent(HugeConfig config) {\n+        this.config = config;\n+        this.rpcServer = this.initAndStartRpcServer();\n+        this.readIndexExecutor = this.initReadIndexExecutor();\n+    }\n+\n+    public HugeConfig config() {\n+        return this.config;\n+    }\n+\n+    public RpcServer rpcServer() {\n+        return this.rpcServer;\n+    }\n+\n+    public Executor readIndexExecutor() {\n+        return this.readIndexExecutor;\n+    }\n+\n+    private RpcServer initAndStartRpcServer() {\n+        PeerId serverId = new PeerId();\n+        serverId.parse(this.config.get(CoreOptions.RAFT_PEERID));\n+        return RaftRpcServerFactory.createAndStartRaftRpcServer(\n+                                    serverId.getEndpoint());\n+    }\n+\n+    private Executor initReadIndexExecutor() {\n+        return createReadIndexExecutor(Math.max(Utils.cpus() << 2, 4));\n+    }\n+\n+    private static ExecutorService createReadIndexExecutor(final int coreThreads) {\n+        final int maxThreads = coreThreads << 2;\n+        final RejectedExecutionHandler handler = new ThreadPoolExecutor.AbortPolicy();\n+        return newPool(coreThreads, maxThreads, \"kvstore-read-index-callback\", handler);\n+    }\n+\n+    private static ExecutorService newPool(final int coreThreads, final int maxThreads,\n+                                           final String name,\n+                                           final RejectedExecutionHandler handler) {\n+        final BlockingQueue<Runnable> defaultWorkQueue = new SynchronousQueue<>();\n+        return newPool(coreThreads, maxThreads, defaultWorkQueue, name, handler);\n+    }\n+\n+    private static ExecutorService newPool(final int coreThreads, final int maxThreads,\n+                                           final BlockingQueue<Runnable> workQueue,\n+                                           final String name,\n+                                           final RejectedExecutionHandler handler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ2ODAzNQ==", "bodyText": "pass this.store to StoreCommand", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r436468035", "createdAt": "2020-06-08T05:46:19Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/BackendStoreStateMachine.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Iterator;\n+import com.alipay.sofa.jraft.Status;\n+import com.alipay.sofa.jraft.core.StateMachineAdapter;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class BackendStoreStateMachine extends StateMachineAdapter {\n+\n+    private static final Logger LOG = Log.logger(BackendStoreStateMachine.class);\n+\n+    private final BackendStore store;\n+    private final AtomicLong leaderTerm;\n+\n+    public BackendStoreStateMachine(BackendStore store) {\n+        this.store = store;\n+        this.leaderTerm = new AtomicLong(-1);\n+    }\n+\n+    @Override\n+    public void onApply(Iterator iter) {\n+        LOG.debug(\"Node role: {}\", this.isLeader() ? \"leader\" : \"follower\");\n+        while (iter.hasNext()) {\n+            StoreCommand command;\n+            StoreClosure closure = (StoreClosure) iter.done();\n+            if (closure != null) {\n+                // Leader just take it out from the closure\n+                command = closure.command();\n+            } else {\n+                // Follower need deserializeMutation data\n+                ByteBuffer buffer = iter.getData();\n+                command = StoreCommand.fromBytes(buffer.array());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20d29a3a923a3a00810f9013584783a8bdcd14a0", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/20d29a3a923a3a00810f9013584783a8bdcd14a0", "committedDate": "2020-06-07T13:32:42Z", "message": "Initially implement distributed consistency with jraft\n\nChange-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f"}, "afterCommit": {"oid": "5730fcd68deaeb3f1a3ed5e2b1f60bc0b6b0651b", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/5730fcd68deaeb3f1a3ed5e2b1f60bc0b6b0651b", "committedDate": "2020-06-08T02:44:20Z", "message": "Initially implement distributed consistency with jraft\n\nChange-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c71ac822c3d48b6954e1cbebd60de2805ccd295", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/7c71ac822c3d48b6954e1cbebd60de2805ccd295", "committedDate": "2020-06-08T14:57:33Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}, "afterCommit": {"oid": "be2161ba674b282f9bed5f5b71677f9252d77d88", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/be2161ba674b282f9bed5f5b71677f9252d77d88", "committedDate": "2020-06-09T06:52:55Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be2161ba674b282f9bed5f5b71677f9252d77d88", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/be2161ba674b282f9bed5f5b71677f9252d77d88", "committedDate": "2020-06-09T06:52:55Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}, "afterCommit": {"oid": "8699a728492e19b73a9fca74aea5c80e97608c3e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8699a728492e19b73a9fca74aea5c80e97608c3e", "committedDate": "2020-06-09T08:47:04Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8699a728492e19b73a9fca74aea5c80e97608c3e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8699a728492e19b73a9fca74aea5c80e97608c3e", "committedDate": "2020-06-09T08:47:04Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}, "afterCommit": {"oid": "59e815e8fcf816c7538644b96b82c1478e557028", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/59e815e8fcf816c7538644b96b82c1478e557028", "committedDate": "2020-06-11T01:47:07Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2ODI3NzMz", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-426827733", "createdAt": "2020-06-09T06:37:30Z", "commit": {"oid": "7c71ac822c3d48b6954e1cbebd60de2805ccd295"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjozNzozMFrOGg6sxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNjozNzozNlrOGg6s4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2OTM0OQ==", "bodyText": "this.dataPath", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r437169349", "createdAt": "2020-06-09T06:37:30Z", "author": {"login": "javeme"}, "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStdSessions.java", "diffHunk": "@@ -592,6 +603,16 @@ public boolean hasChanges() {\n             return this.batch.count() > 0;\n         }\n \n+        @Override\n+        public String dataPath() {\n+            return dataPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c71ac822c3d48b6954e1cbebd60de2805ccd295"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE2OTM3Ng==", "bodyText": "ditto", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r437169376", "createdAt": "2020-06-09T06:37:36Z", "author": {"login": "javeme"}, "path": "hugegraph-rocksdb/src/main/java/com/baidu/hugegraph/backend/store/rocksdb/RocksDBStdSessions.java", "diffHunk": "@@ -592,6 +603,16 @@ public boolean hasChanges() {\n             return this.batch.count() > 0;\n         }\n \n+        @Override\n+        public String dataPath() {\n+            return dataPath;\n+        }\n+\n+        @Override\n+        public String walPath() {\n+            return walPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c71ac822c3d48b6954e1cbebd60de2805ccd295"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njc0NTY0", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-428674564", "createdAt": "2020-06-11T07:54:03Z", "commit": {"oid": "59e815e8fcf816c7538644b96b82c1478e557028"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1NDowNFrOGiSdcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1NDowNFrOGiSdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNzIxOQ==", "bodyText": "address history comments", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r438607219", "createdAt": "2020-06-11T07:54:04Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2017 HugeGraph Authors\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with this\n+ * work for additional information regarding copyright ownership. The ASF\n+ * licenses this file to You under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+ * License for the specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package com.baidu.hugegraph.backend.store.raft;\n+\n+import java.nio.ByteBuffer;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import org.slf4j.Logger;\n+\n+import com.alipay.sofa.jraft.Closure;\n+import com.alipay.sofa.jraft.Iterator;\n+import com.alipay.sofa.jraft.Status;\n+import com.alipay.sofa.jraft.core.StateMachineAdapter;\n+import com.alipay.sofa.jraft.storage.snapshot.SnapshotReader;\n+import com.alipay.sofa.jraft.storage.snapshot.SnapshotWriter;\n+import com.baidu.hugegraph.backend.store.BackendStore;\n+import com.baidu.hugegraph.util.Log;\n+\n+public class StoreStateMachine extends StateMachineAdapter {\n+\n+    private static final Logger LOG = Log.logger(StoreStateMachine.class);\n+\n+    private final BackendStore store;\n+    private final RaftSharedContext context;\n+    private final StoreSnapshotFile snapshotFile;\n+    private final AtomicLong leaderTerm;\n+\n+    public StoreStateMachine(BackendStore store, RaftSharedContext context) {\n+        this.store = store;\n+        this.context = context;\n+        this.snapshotFile = new StoreSnapshotFile();\n+        this.leaderTerm = new AtomicLong(-1);\n+    }\n+\n+    @Override\n+    public void onApply(Iterator iter) {\n+        LOG.debug(\"Node role: {}\", this.isLeader() ? \"leader\" : \"follower\");\n+        while (iter.hasNext()) {\n+            StoreCommand command;\n+            StoreClosure closure = (StoreClosure) iter.done();\n+            if (closure != null) {\n+                // Leader just take it out from the closure\n+                command = closure.command();\n+            } else {\n+                // Follower need deserializeMutation data\n+                ByteBuffer buffer = iter.getData();\n+                command = StoreCommand.fromBytes(buffer.array());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59e815e8fcf816c7538644b96b82c1478e557028"}, "originalPosition": 64}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87487304acbefcbe2dffd3590f4868ae6c12d920", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/87487304acbefcbe2dffd3590f4868ae6c12d920", "committedDate": "2020-06-12T06:43:07Z", "message": "Let StoreCommand register and apply at StateMachine\n\nChange-Id: Iabcb4b4f91a72e231145a5c1605ceb4b55820491"}, "afterCommit": {"oid": "ec7edc4b9151bcf95e91e5076f149921818a3726", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ec7edc4b9151bcf95e91e5076f149921818a3726", "committedDate": "2020-06-12T06:48:41Z", "message": "Let StoreCommand register and apply at StateMachine\n\nChange-Id: Iabcb4b4f91a72e231145a5c1605ceb4b55820491"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec7edc4b9151bcf95e91e5076f149921818a3726", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ec7edc4b9151bcf95e91e5076f149921818a3726", "committedDate": "2020-06-12T06:48:41Z", "message": "Let StoreCommand register and apply at StateMachine\n\nChange-Id: Iabcb4b4f91a72e231145a5c1605ceb4b55820491"}, "afterCommit": {"oid": "bcc25830e307ae066068cfd0bb0e80d73c571167", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/bcc25830e307ae066068cfd0bb0e80d73c571167", "committedDate": "2020-06-15T07:24:18Z", "message": "Let StoreCommand register and apply at StateMachine\n\nChange-Id: Iabcb4b4f91a72e231145a5c1605ceb4b55820491"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1f37c999e00412a962f6cba44d05b6d0ae8e685", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/c1f37c999e00412a962f6cba44d05b6d0ae8e685", "committedDate": "2020-06-17T03:00:07Z", "message": "use store action as the key of command\n\nChange-Id: If5cde785fba7bfb3253a9dd6e4bcc3a93063a0cb"}, "afterCommit": {"oid": "d5fcd372f5ee2186e131a90365f5a3c5438e0bd3", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/d5fcd372f5ee2186e131a90365f5a3c5438e0bd3", "committedDate": "2020-06-17T03:03:21Z", "message": "use store action as the key of command\n\nChange-Id: If5cde785fba7bfb3253a9dd6e4bcc3a93063a0cb"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5fcd372f5ee2186e131a90365f5a3c5438e0bd3", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/d5fcd372f5ee2186e131a90365f5a3c5438e0bd3", "committedDate": "2020-06-17T03:03:21Z", "message": "use store action as the key of command\n\nChange-Id: If5cde785fba7bfb3253a9dd6e4bcc3a93063a0cb"}, "afterCommit": {"oid": "c1c7c5863c62d1e813c45634f102a795677fe59e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/c1c7c5863c62d1e813c45634f102a795677fe59e", "committedDate": "2020-06-17T03:03:56Z", "message": "merge tx operation into one store command\n\nChange-Id: Ie1a55f2fed10ead56e067f7b158275e62a3f0d37"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1c7c5863c62d1e813c45634f102a795677fe59e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/c1c7c5863c62d1e813c45634f102a795677fe59e", "committedDate": "2020-06-17T03:03:56Z", "message": "merge tx operation into one store command\n\nChange-Id: Ie1a55f2fed10ead56e067f7b158275e62a3f0d37"}, "afterCommit": {"oid": "8f8a33cd4f988c91f6c8429fc3ff030cd0c0fa7f", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8f8a33cd4f988c91f6c8429fc3ff030cd0c0fa7f", "committedDate": "2020-06-17T07:00:08Z", "message": "merge tx operation into one store command\n\nChange-Id: Ie1a55f2fed10ead56e067f7b158275e62a3f0d37"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6aec73056af8bea1bcf5eeba5712ed4d16a643eb", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/6aec73056af8bea1bcf5eeba5712ed4d16a643eb", "committedDate": "2020-06-17T09:31:41Z", "message": "small code optimize\n\nChange-Id: I77287d80d78dcdb37dfbddbb9fee980cf5789d91"}, "afterCommit": {"oid": "7845d7d1dab2c0605c3d8e14e1d70d95676c0ff5", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/7845d7d1dab2c0605c3d8e14e1d70d95676c0ff5", "committedDate": "2020-06-22T06:36:13Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7845d7d1dab2c0605c3d8e14e1d70d95676c0ff5", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/7845d7d1dab2c0605c3d8e14e1d70d95676c0ff5", "committedDate": "2020-06-22T06:36:13Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}, "afterCommit": {"oid": "6d6f2c2f8a61dfaf00c7015a9e82fe169939a538", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/6d6f2c2f8a61dfaf00c7015a9e82fe169939a538", "committedDate": "2020-06-22T06:58:11Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d6f2c2f8a61dfaf00c7015a9e82fe169939a538", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/6d6f2c2f8a61dfaf00c7015a9e82fe169939a538", "committedDate": "2020-06-22T06:58:11Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}, "afterCommit": {"oid": "131e42210f75c5b90bb64fd7b089c1700974cdae", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/131e42210f75c5b90bb64fd7b089c1700974cdae", "committedDate": "2020-06-22T07:44:38Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTUzMTAz", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-435153103", "createdAt": "2020-06-22T17:57:27Z", "commit": {"oid": "04e3bbddc409189a68d993acd344399ad525672a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo1NzoyN1rOGnLR1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxODowMzoxOVrOGnLeJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMjQzNg==", "bodyText": "set static and rename to MutationBatch", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r443732436", "createdAt": "2020-06-22T17:57:27Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -40,10 +42,38 @@\n \n     private final BackendStore store;\n     private final RaftSharedContext context;\n+    private final ThreadLocal<MutateBatch> threadLocalBatch;\n+\n+    private class MutateBatch {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e3bbddc409189a68d993acd344399ad525672a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMzY3Nw==", "bodyText": "add try-finally for clear", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r443733677", "createdAt": "2020-06-22T17:59:46Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/RaftBackendStore.java", "diffHunk": "@@ -179,17 +208,19 @@ public Number queryNumber(Query query) {\n \n     @Override\n     public void beginTx() {\n-        this.submitAndWait(StoreCommand.BEGIN_TX);\n     }\n \n     @Override\n     public void commitTx() {\n-        this.submitAndWait(StoreCommand.COMMIT_TX);\n+        MutateBatch batch = this.getOrNewBatch();\n+        byte[] bytes = StoreSerializer.writeMutations(batch.mutations);\n+        this.submitAndWait(StoreAction.COMMIT_TX, bytes);\n+        batch.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e3bbddc409189a68d993acd344399ad525672a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczNTU4OA==", "bodyText": "call this.store.beginTx() before mutate()", "url": "https://github.com/hugegraph/hugegraph/pull/1020#discussion_r443735588", "createdAt": "2020-06-22T18:03:19Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/backend/store/raft/StoreStateMachine.java", "diffHunk": "@@ -48,50 +49,51 @@\n     private final RaftSharedContext context;\n     private final StoreSnapshotFile snapshotFile;\n     private final AtomicLong leaderTerm;\n-    private final Map<Byte, Function<BytesBuffer, Object>> funcs;\n+    private final Map<StoreAction, Function<BytesBuffer, Object>> funcs;\n \n     public StoreStateMachine(BackendStore store, RaftSharedContext context) {\n-        this.nodeId = nodeId;\n         this.store = store;\n         this.context = context;\n         this.snapshotFile = new StoreSnapshotFile();\n         this.leaderTerm = new AtomicLong(-1);\n-        this.funcs = new ConcurrentHashMap<>();\n+        this.funcs = new EnumMap<>(StoreAction.class);\n         this.registerCommands();\n     }\n \n     private void registerCommands() {\n         // StoreCommand.register(StoreCommand.INIT, this.store::init);\n-        this.register(StoreCommand.TRUNCATE, this.store::truncate);\n-        this.register(StoreCommand.BEGIN_TX, this.store::beginTx);\n-        this.register(StoreCommand.COMMIT_TX, this.store::commitTx);\n-        this.register(StoreCommand.ROLLBACK_TX, this.store::rollbackTx);\n+        this.register(StoreAction.TRUNCATE, this.store::truncate);\n         // clear\n-        this.register(StoreCommand.CLEAR, buffer -> {\n+        this.register(StoreAction.CLEAR, buffer -> {\n             boolean clearSpace = buffer.read() > 0;\n             this.store.clear(clearSpace);\n             return null;\n         });\n-        // mutate\n-        this.register(StoreCommand.MUTATE, buffer -> {\n-            BackendMutation m = StoreSerializer.deserializeMutation(buffer);\n-            this.store.mutate(m);\n+        this.register(StoreAction.BEGIN_TX, this.store::beginTx);\n+        this.register(StoreAction.COMMIT_TX, buffer -> {\n+            List<BackendMutation> ms = StoreSerializer.readMutations(buffer);\n+            for (BackendMutation mutation : ms) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04e3bbddc409189a68d993acd344399ad525672a"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99c70d978c59b6d4274b845036c6f88bc29d867d", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/99c70d978c59b6d4274b845036c6f88bc29d867d", "committedDate": "2020-06-24T07:24:21Z", "message": "let follower can forward request to leader\n\nChange-Id: I19f99e43b06b0382be04b7b05a61da5c123477c4"}, "afterCommit": {"oid": "e51d562a3f3ee3470131a8bf6a0bf61e8c991696", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/e51d562a3f3ee3470131a8bf6a0bf61e8c991696", "committedDate": "2020-06-24T07:37:15Z", "message": "let follower can forward request to leader\n\nChange-Id: I19f99e43b06b0382be04b7b05a61da5c123477c4"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e51d562a3f3ee3470131a8bf6a0bf61e8c991696", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/e51d562a3f3ee3470131a8bf6a0bf61e8c991696", "committedDate": "2020-06-24T07:37:15Z", "message": "let follower can forward request to leader\n\nChange-Id: I19f99e43b06b0382be04b7b05a61da5c123477c4"}, "afterCommit": {"oid": "ee7644a6e0b95973d237fcc6e1a40112c76eae75", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ee7644a6e0b95973d237fcc6e1a40112c76eae75", "committedDate": "2020-06-30T02:34:49Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee7644a6e0b95973d237fcc6e1a40112c76eae75", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ee7644a6e0b95973d237fcc6e1a40112c76eae75", "committedDate": "2020-06-30T02:34:49Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "98b173bed66c72b5c04df000e1aa3525741036d2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/98b173bed66c72b5c04df000e1aa3525741036d2", "committedDate": "2020-06-30T02:58:43Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98b173bed66c72b5c04df000e1aa3525741036d2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/98b173bed66c72b5c04df000e1aa3525741036d2", "committedDate": "2020-06-30T02:58:43Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "ce3684cfd2103c42d54122968e63a24842c638e8", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ce3684cfd2103c42d54122968e63a24842c638e8", "committedDate": "2020-06-30T03:18:08Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce3684cfd2103c42d54122968e63a24842c638e8", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/ce3684cfd2103c42d54122968e63a24842c638e8", "committedDate": "2020-06-30T03:18:08Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "3d5a8773dec69887d0b27e1598daff39b4aaf783", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/3d5a8773dec69887d0b27e1598daff39b4aaf783", "committedDate": "2020-07-03T07:15:50Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d5a8773dec69887d0b27e1598daff39b4aaf783", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/3d5a8773dec69887d0b27e1598daff39b4aaf783", "committedDate": "2020-07-03T07:15:50Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "f7604e48f655b51afe15a42dbe23dcc0bc884ae2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/f7604e48f655b51afe15a42dbe23dcc0bc884ae2", "committedDate": "2020-07-03T08:30:31Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7604e48f655b51afe15a42dbe23dcc0bc884ae2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/f7604e48f655b51afe15a42dbe23dcc0bc884ae2", "committedDate": "2020-07-03T08:30:31Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "f0909d8466d2ac9bccc844f60172ee1ac135f401", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/f0909d8466d2ac9bccc844f60172ee1ac135f401", "committedDate": "2020-07-03T12:43:09Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0909d8466d2ac9bccc844f60172ee1ac135f401", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/f0909d8466d2ac9bccc844f60172ee1ac135f401", "committedDate": "2020-07-03T12:43:09Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}, "afterCommit": {"oid": "0baf272df1a6d9b507dbc5a322658deb096b46a2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/0baf272df1a6d9b507dbc5a322658deb096b46a2", "committedDate": "2020-07-07T10:12:48Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51b2bdd1a8191d7b2c37ee1ea425153fcd2d3f3c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/51b2bdd1a8191d7b2c37ee1ea425153fcd2d3f3c", "committedDate": "2020-07-17T09:34:59Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}, "afterCommit": {"oid": "fc8dc34810d51dfe8317d0ab4c3672a8986db180", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/fc8dc34810d51dfe8317d0ab4c3672a8986db180", "committedDate": "2020-07-17T09:37:56Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc8dc34810d51dfe8317d0ab4c3672a8986db180", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/fc8dc34810d51dfe8317d0ab4c3672a8986db180", "committedDate": "2020-07-17T09:37:56Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}, "afterCommit": {"oid": "25a2eaed2ca94747f6053d6553cdfcdedd97cb6e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/25a2eaed2ca94747f6053d6553cdfcdedd97cb6e", "committedDate": "2020-07-17T09:41:31Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25a2eaed2ca94747f6053d6553cdfcdedd97cb6e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/25a2eaed2ca94747f6053d6553cdfcdedd97cb6e", "committedDate": "2020-07-17T09:41:31Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}, "afterCommit": {"oid": "4724a72737ff83670bfea836803aab5bd5150839", "author": {"user": {"login": "zhoney", "name": null}}, "url": "https://github.com/hugegraph/hugegraph/commit/4724a72737ff83670bfea836803aab5bd5150839", "committedDate": "2020-07-20T06:16:14Z", "message": "implement olap write and read(1st version)\n\nChange-Id: I5a230929ebc07baa900a7da5b2f9cf731f9b9741"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4724a72737ff83670bfea836803aab5bd5150839", "author": {"user": {"login": "zhoney", "name": null}}, "url": "https://github.com/hugegraph/hugegraph/commit/4724a72737ff83670bfea836803aab5bd5150839", "committedDate": "2020-07-20T06:16:14Z", "message": "implement olap write and read(1st version)\n\nChange-Id: I5a230929ebc07baa900a7da5b2f9cf731f9b9741"}, "afterCommit": {"oid": "8f213e9b11c20765810201a8dd5f3e4374e49c80", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8f213e9b11c20765810201a8dd5f3e4374e49c80", "committedDate": "2020-07-22T07:46:59Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd0856406815c1b6d6eb13424b74f2776b5369e", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/6dd0856406815c1b6d6eb13424b74f2776b5369e", "committedDate": "2020-07-22T07:52:34Z", "message": "Initially implement distributed consistency with jraft\n\nChange-Id: I75671444d48a2851b4d1ad0de8975853dd1f900f"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f4d7b67cb73a8689f5473871cfce2f2c11de3d7", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/0f4d7b67cb73a8689f5473871cfce2f2c11de3d7", "committedDate": "2020-07-22T07:52:34Z", "message": "support save and load snapshot\n\nChange-Id: I037a3011e63008082f48c1c907e4a36ab48328ce"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b247f32eef6240b7629edd3f2ecdedf04e1d129", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/1b247f32eef6240b7629edd3f2ecdedf04e1d129", "committedDate": "2020-07-22T07:52:35Z", "message": "Let StoreCommand register and apply at StateMachine\n\nChange-Id: Iabcb4b4f91a72e231145a5c1605ceb4b55820491"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1da1980e05371ab439ae7b9f35ce92e5083a329a", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/1da1980e05371ab439ae7b9f35ce92e5083a329a", "committedDate": "2020-07-22T07:52:35Z", "message": "merge tx operation into one store command\n\nChange-Id: Ie1a55f2fed10ead56e067f7b158275e62a3f0d37"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fcec4d71bba60d776a7e168649d9872dafb4fae", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/7fcec4d71bba60d776a7e168649d9872dafb4fae", "committedDate": "2020-07-22T07:52:35Z", "message": "small code optimize\n\nChange-Id: I77287d80d78dcdb37dfbddbb9fee980cf5789d91"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27dc4f5e32cabdc0095bb7d595b67624c3c050d3", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/27dc4f5e32cabdc0095bb7d595b67624c3c050d3", "committedDate": "2020-07-22T07:52:35Z", "message": "compress task data\n\nChange-Id: I4c8e936389a39da8cab04d89b8818960937473d7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7266b866640a8c348f764d6f3197e772e61af9", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/6c7266b866640a8c348f764d6f3197e772e61af9", "committedDate": "2020-07-22T07:52:36Z", "message": "adjust some raft options, like: disruptor capacity, rpc threadpool size\n\nChange-Id: I43f61fad49b3c42b3fe145d45d6135386af5cb59"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae94d54259d7d737b76979d4b2ae1e7d04adea9", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/cae94d54259d7d737b76979d4b2ae1e7d04adea9", "committedDate": "2020-07-22T07:52:36Z", "message": "let follower can forward request to leader\n\nChange-Id: I19f99e43b06b0382be04b7b05a61da5c123477c4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ea27b820bae97a15110b02b998f84b6c79dffc", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/36ea27b820bae97a15110b02b998f84b6c79dffc", "committedDate": "2020-07-22T07:52:36Z", "message": "handle remote exception, let it report backend busy\n\nCheck connection failed for address: xxx, maybe write overflow!\n\nChange-Id: I5bce82d1020ee2adb5b9baf28abbc4d68989ef56"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f213e9b11c20765810201a8dd5f3e4374e49c80", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8f213e9b11c20765810201a8dd5f3e4374e49c80", "committedDate": "2020-07-22T07:46:59Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}, "afterCommit": {"oid": "61ebaf3b304f94d63872419e9f694f8449f094a2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/61ebaf3b304f94d63872419e9f694f8449f094a2", "committedDate": "2020-07-22T07:52:37Z", "message": "cherry-pick from zhangyi\n\nChange-Id: I14fbd444dfb3052fdc3afd9094fe4a0f86f67b84"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61ebaf3b304f94d63872419e9f694f8449f094a2", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/61ebaf3b304f94d63872419e9f694f8449f094a2", "committedDate": "2020-07-22T07:52:37Z", "message": "cherry-pick from zhangyi\n\nChange-Id: I14fbd444dfb3052fdc3afd9094fe4a0f86f67b84"}, "afterCommit": {"oid": "a69b047f36839dee63e7af743e2e33c6bdd63947", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/a69b047f36839dee63e7af743e2e33c6bdd63947", "committedDate": "2020-07-22T07:52:36Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2c7a8c157bed279f7962c365c1319a1d722609", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/4e2c7a8c157bed279f7962c365c1319a1d722609", "committedDate": "2020-07-22T07:57:38Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a69b047f36839dee63e7af743e2e33c6bdd63947", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/a69b047f36839dee63e7af743e2e33c6bdd63947", "committedDate": "2020-07-22T07:52:36Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}, "afterCommit": {"oid": "4e2c7a8c157bed279f7962c365c1319a1d722609", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/4e2c7a8c157bed279f7962c365c1319a1d722609", "committedDate": "2020-07-22T07:57:38Z", "message": "add rate limit at StateMachine\n\nChange-Id: Ibaf3f3726e299dd9e51f6b763308abc799870a15"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed3d3586354d778fded1d8c85ad8229cc4d3d96", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/eed3d3586354d778fded1d8c85ad8229cc4d3d96", "committedDate": "2020-07-22T07:59:45Z", "message": "Let grizzly-http thread wait raft task applied\n\nChange-Id: I5bdec682ec35daead67cbcf92477b0d761d31610"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b45e67d0dac787a56bb4e8aef089b957c1438af", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/8b45e67d0dac787a56bb4e8aef089b957c1438af", "committedDate": "2020-07-24T07:28:31Z", "message": "exclude log4j dependency from jraft\n\nChange-Id: I49b5a6c48053ae0f5a5ebb0dfeb1651da9f155ea"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50e32fff4b1beeec7ac116e9e9d5e0a996a2692c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/50e32fff4b1beeec7ac116e9e9d5e0a996a2692c", "committedDate": "2020-07-27T13:24:51Z", "message": "some improve\n\nChange-Id: Ibc5e08488b7eda0049eb57fe68a4e124873e35a3"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22343ab6bfd69df0e8b2288dc8577647778a889f", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/22343ab6bfd69df0e8b2288dc8577647778a889f", "committedDate": "2020-07-27T13:02:51Z", "message": "some improve\n\nChange-Id: Ibc5e08488b7eda0049eb57fe68a4e124873e35a3"}, "afterCommit": {"oid": "50e32fff4b1beeec7ac116e9e9d5e0a996a2692c", "author": {"user": {"login": "Linary", "name": "Linary"}}, "url": "https://github.com/hugegraph/hugegraph/commit/50e32fff4b1beeec7ac116e9e9d5e0a996a2692c", "committedDate": "2020-07-27T13:24:51Z", "message": "some improve\n\nChange-Id: Ibc5e08488b7eda0049eb57fe68a4e124873e35a3"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Nzg1OTM1", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-455785935", "createdAt": "2020-07-27T13:34:51Z", "commit": {"oid": "50e32fff4b1beeec7ac116e9e9d5e0a996a2692c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjYzMDM1", "url": "https://github.com/hugegraph/hugegraph/pull/1020#pullrequestreview-456263035", "createdAt": "2020-07-28T02:40:02Z", "commit": {"oid": "50e32fff4b1beeec7ac116e9e9d5e0a996a2692c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2444, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}