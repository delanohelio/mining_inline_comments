{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5ODUzMjA4", "number": 1258, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzowMDowN1rOE53-IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzowMDowN1rOE53-IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTIxMzEyOnYy", "diffSide": "RIGHT", "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/traversal/algorithm/OltpTraverser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzowMDowN1rOH0mtNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOToxNjozMlrOH0rUZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyMjE2Nw==", "bodyText": "If create Consumers.ExecutorPool for every OltpTraverser, how share the executors in Consumers.ExecutorPool?", "url": "https://github.com/hugegraph/hugegraph/pull/1258#discussion_r524922167", "createdAt": "2020-11-17T07:00:07Z", "author": {"login": "houzhizhen"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/traversal/algorithm/OltpTraverser.java", "diffHunk": "@@ -48,20 +47,20 @@\n                                     implements AutoCloseable {\n \n     private static final String EXECUTOR_NAME = \"oltp\";\n-    private static ExecutorService executor;\n+    private static Consumers.ExecutorPool executors;\n \n     protected OltpTraverser(HugeGraph graph) {\n         super(graph);\n-        if (executor != null) {\n+        if (executors != null) {\n             return;\n         }\n         synchronized (OltpTraverser.class) {\n-            if (executor != null) {\n+            if (executors != null) {\n                 return;\n             }\n             int workers = this.config().get(CoreOptions.OLTP_CONCURRENT_THREADS);\n             if (workers > 0) {\n-                executor = Consumers.newThreadPool(EXECUTOR_NAME, workers);\n+                executors = new Consumers.ExecutorPool(EXECUTOR_NAME, workers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471a813aa9074ed2ed86184d29cf2c927442ebec"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk5NzczNA==", "bodyText": "all OltpTraverser share one ExecutorPool (executors)", "url": "https://github.com/hugegraph/hugegraph/pull/1258#discussion_r524997734", "createdAt": "2020-11-17T09:16:32Z", "author": {"login": "javeme"}, "path": "hugegraph-core/src/main/java/com/baidu/hugegraph/traversal/algorithm/OltpTraverser.java", "diffHunk": "@@ -48,20 +47,20 @@\n                                     implements AutoCloseable {\n \n     private static final String EXECUTOR_NAME = \"oltp\";\n-    private static ExecutorService executor;\n+    private static Consumers.ExecutorPool executors;\n \n     protected OltpTraverser(HugeGraph graph) {\n         super(graph);\n-        if (executor != null) {\n+        if (executors != null) {\n             return;\n         }\n         synchronized (OltpTraverser.class) {\n-            if (executor != null) {\n+            if (executors != null) {\n                 return;\n             }\n             int workers = this.config().get(CoreOptions.OLTP_CONCURRENT_THREADS);\n             if (workers > 0) {\n-                executor = Consumers.newThreadPool(EXECUTOR_NAME, workers);\n+                executors = new Consumers.ExecutorPool(EXECUTOR_NAME, workers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDkyMjE2Nw=="}, "originalCommit": {"oid": "471a813aa9074ed2ed86184d29cf2c927442ebec"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}