{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2ODEyNzIw", "number": 1766, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjozNjo0NFrOE3NNCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoxNjoxOVrOE3TUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MzIzNDY3OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjozNjo0NFrOHwakrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNzo1OToyOVrOHxCQ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyOTA3MQ==", "bodyText": "can be replaced with method reference\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            transaction(job -> internalSchedule(job), ejbTimerJob.getTimerJobInstance());\n          \n          \n            \n                            transaction(this::internalSchedule, ejbTimerJob.getTimerJobInstance());", "url": "https://github.com/kiegroup/jbpm/pull/1766#discussion_r520529071", "createdAt": "2020-11-10T12:36:44Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "diffHunk": "@@ -127,15 +127,20 @@ private void executeTimerJobInstance(TimerJobInstance timerJobInstance) throws E\n         try {\n             ((Callable<?>) timerJobInstance).call();\n         } catch (Exception e) {\n-            logger.warn(\"Execution of time failed due to {}\", e.getMessage(), e);\n             throw e;\n         }\n     }\n \n     private void recoverTimerJobInstance(EjbTimerJob ejbTimerJob, Exception e) {\n-        // if we have next date fired means that it would have been reescheduled already by DefaultTimerJobInstance\n         if (ejbTimerJob.getTimerJobInstance().getTrigger().hasNextFireTime() != null) {\n-            logger.warn(\"Execution of time failed Interval Trigger failed {}\", ejbTimerJob.getTimerJobInstance());\n+            // this is an interval trigger. Problem here is that the timer scheduled by DefaultTimerJobInstance is lost\n+            // because of the transaction, so we need to do this here.\n+            try {\n+                logger.warn(\"Execution of time failed Interval Trigger failed. Skipping {}\", ejbTimerJob.getTimerJobInstance());\n+                transaction(job -> internalSchedule(job), ejbTimerJob.getTimerJobInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86271b89aac278fe589fec6b854155a1b6b9e68"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE3OTM3Mg==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1766#discussion_r521179372", "createdAt": "2020-11-11T07:59:29Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "diffHunk": "@@ -127,15 +127,20 @@ private void executeTimerJobInstance(TimerJobInstance timerJobInstance) throws E\n         try {\n             ((Callable<?>) timerJobInstance).call();\n         } catch (Exception e) {\n-            logger.warn(\"Execution of time failed due to {}\", e.getMessage(), e);\n             throw e;\n         }\n     }\n \n     private void recoverTimerJobInstance(EjbTimerJob ejbTimerJob, Exception e) {\n-        // if we have next date fired means that it would have been reescheduled already by DefaultTimerJobInstance\n         if (ejbTimerJob.getTimerJobInstance().getTrigger().hasNextFireTime() != null) {\n-            logger.warn(\"Execution of time failed Interval Trigger failed {}\", ejbTimerJob.getTimerJobInstance());\n+            // this is an interval trigger. Problem here is that the timer scheduled by DefaultTimerJobInstance is lost\n+            // because of the transaction, so we need to do this here.\n+            try {\n+                logger.warn(\"Execution of time failed Interval Trigger failed. Skipping {}\", ejbTimerJob.getTimerJobInstance());\n+                transaction(job -> internalSchedule(job), ejbTimerJob.getTimerJobInstance());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUyOTA3MQ=="}, "originalCommit": {"oid": "f86271b89aac278fe589fec6b854155a1b6b9e68"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDIzNzA3OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoxNjoxOVrOHwkU8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwODowNToyMFrOHxCa2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4ODg4Mw==", "bodyText": "perhaps, exception message may also be logged in the warning", "url": "https://github.com/kiegroup/jbpm/pull/1766#discussion_r520688883", "createdAt": "2020-11-10T16:16:19Z", "author": {"login": "gmunozfe"}, "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "diffHunk": "@@ -127,15 +127,20 @@ private void executeTimerJobInstance(TimerJobInstance timerJobInstance) throws E\n         try {\n             ((Callable<?>) timerJobInstance).call();\n         } catch (Exception e) {\n-            logger.warn(\"Execution of time failed due to {}\", e.getMessage(), e);\n             throw e;\n         }\n     }\n \n     private void recoverTimerJobInstance(EjbTimerJob ejbTimerJob, Exception e) {\n-        // if we have next date fired means that it would have been reescheduled already by DefaultTimerJobInstance\n         if (ejbTimerJob.getTimerJobInstance().getTrigger().hasNextFireTime() != null) {\n-            logger.warn(\"Execution of time failed Interval Trigger failed {}\", ejbTimerJob.getTimerJobInstance());\n+            // this is an interval trigger. Problem here is that the timer scheduled by DefaultTimerJobInstance is lost\n+            // because of the transaction, so we need to do this here.\n+            try {\n+                logger.warn(\"Execution of time failed Interval Trigger failed. Skipping {}\", ejbTimerJob.getTimerJobInstance());\n+                transaction(job -> internalSchedule(job), ejbTimerJob.getTimerJobInstance());\n+            } catch (Exception e1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f86271b89aac278fe589fec6b854155a1b6b9e68"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTE4MTkxNA==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1766#discussion_r521181914", "createdAt": "2020-11-11T08:05:20Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-ejb/jbpm-services-ejb-timer/src/main/java/org/jbpm/services/ejb/timer/EJBTimerScheduler.java", "diffHunk": "@@ -127,15 +127,20 @@ private void executeTimerJobInstance(TimerJobInstance timerJobInstance) throws E\n         try {\n             ((Callable<?>) timerJobInstance).call();\n         } catch (Exception e) {\n-            logger.warn(\"Execution of time failed due to {}\", e.getMessage(), e);\n             throw e;\n         }\n     }\n \n     private void recoverTimerJobInstance(EjbTimerJob ejbTimerJob, Exception e) {\n-        // if we have next date fired means that it would have been reescheduled already by DefaultTimerJobInstance\n         if (ejbTimerJob.getTimerJobInstance().getTrigger().hasNextFireTime() != null) {\n-            logger.warn(\"Execution of time failed Interval Trigger failed {}\", ejbTimerJob.getTimerJobInstance());\n+            // this is an interval trigger. Problem here is that the timer scheduled by DefaultTimerJobInstance is lost\n+            // because of the transaction, so we need to do this here.\n+            try {\n+                logger.warn(\"Execution of time failed Interval Trigger failed. Skipping {}\", ejbTimerJob.getTimerJobInstance());\n+                transaction(job -> internalSchedule(job), ejbTimerJob.getTimerJobInstance());\n+            } catch (Exception e1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY4ODg4Mw=="}, "originalCommit": {"oid": "f86271b89aac278fe589fec6b854155a1b6b9e68"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1577, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}