{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDYwMTY4", "number": 1782, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowMjo1NVrOEvuGzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowNzozMlrOEvuNPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDczOTMzOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowMjo1NVrOHk2zdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjowNzo1NFrOHk5CdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwODY5Mw==", "bodyText": "We can keep previous separator, but forcing the length of the resulting array, just to split with the first separator:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         String[] headerParts = h.split(\":\");\n          \n          \n            \n                         String[] headerParts = h.split(\"=\", 2);", "url": "https://github.com/kiegroup/jbpm/pull/1782#discussion_r508408693", "createdAt": "2020-10-20T11:02:55Z", "author": {"login": "gmunozfe"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -905,7 +905,7 @@ protected void addAcceptHeader(HttpRequestBase theMethod,\n     protected void addCustomHeaders(String headers,\n             BiConsumer<String, String> consumer) {\n         for(String h : headers.split(\";\")) {\n-             String[] headerParts = h.split(\"=\");\n+             String[] headerParts = h.split(\":\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c3805de6657a57e5dbc02e8e83ada3025bb4347"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ0NTMwMA==", "bodyText": "@gmunozfe Thank you for pointing it out. I should have thought about backward compatibility.", "url": "https://github.com/kiegroup/jbpm/pull/1782#discussion_r508445300", "createdAt": "2020-10-20T12:07:54Z", "author": {"login": "abhijithumbe"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -905,7 +905,7 @@ protected void addAcceptHeader(HttpRequestBase theMethod,\n     protected void addCustomHeaders(String headers,\n             BiConsumer<String, String> consumer) {\n         for(String h : headers.split(\";\")) {\n-             String[] headerParts = h.split(\"=\");\n+             String[] headerParts = h.split(\":\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQwODY5Mw=="}, "originalCommit": {"oid": "9c3805de6657a57e5dbc02e8e83ada3025bb4347"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDc1NTgzOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowNzozMlrOHk29nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjowODo0MVrOHk5ELQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxMTI5Mw==", "bodyText": "It should be the other way around (expected, current):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(result, headerValue);\n          \n          \n            \n                    assertEquals(headerValue, result);", "url": "https://github.com/kiegroup/jbpm/pull/1782#discussion_r508411293", "createdAt": "2020-10-20T11:07:32Z", "author": {"login": "gmunozfe"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "diffHunk": "@@ -1069,7 +1069,29 @@ public void testHeadersSingleValue() {\n         RESTWorkItemHandler handler = new RESTWorkItemHandler();\n         String headerKey = \"headerKey\";\n         String headerValue = \"headerValue\";\n-        String headers = headerKey + \"=\" + headerValue;\n+        String headers = headerKey + \":\" + headerValue;\n+         \n+        WorkItemImpl workItem = new WorkItemImpl();\n+        workItem.setParameter(\"Url\",\n+                              serverURL + \"/header/\" + headerKey);\n+        workItem.setParameter(\"Method\",\n+                              \"GET\");\n+        workItem.setParameter(PARAM_HEADERS, headers);\n+        \n+        WorkItemManager manager = new TestWorkItemManager();\n+        handler.executeWorkItem(workItem,\n+                                manager);\n+        Map<String, Object> results = ((TestWorkItemManager) manager).getResults(workItem.getId());\n+        String result = (String) results.get(PARAM_RESULT);\n+        assertEquals(result, headerValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c3805de6657a57e5dbc02e8e83ada3025bb4347"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ0NTc0MQ==", "bodyText": "@gmunozfe Made suggested changes in this test case and in other test cases as well.", "url": "https://github.com/kiegroup/jbpm/pull/1782#discussion_r508445741", "createdAt": "2020-10-20T12:08:41Z", "author": {"login": "abhijithumbe"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "diffHunk": "@@ -1069,7 +1069,29 @@ public void testHeadersSingleValue() {\n         RESTWorkItemHandler handler = new RESTWorkItemHandler();\n         String headerKey = \"headerKey\";\n         String headerValue = \"headerValue\";\n-        String headers = headerKey + \"=\" + headerValue;\n+        String headers = headerKey + \":\" + headerValue;\n+         \n+        WorkItemImpl workItem = new WorkItemImpl();\n+        workItem.setParameter(\"Url\",\n+                              serverURL + \"/header/\" + headerKey);\n+        workItem.setParameter(\"Method\",\n+                              \"GET\");\n+        workItem.setParameter(PARAM_HEADERS, headers);\n+        \n+        WorkItemManager manager = new TestWorkItemManager();\n+        handler.executeWorkItem(workItem,\n+                                manager);\n+        Map<String, Object> results = ((TestWorkItemManager) manager).getResults(workItem.getId());\n+        String result = (String) results.get(PARAM_RESULT);\n+        assertEquals(result, headerValue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxMTI5Mw=="}, "originalCommit": {"oid": "9c3805de6657a57e5dbc02e8e83ada3025bb4347"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1608, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}