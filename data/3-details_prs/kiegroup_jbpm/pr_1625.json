{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTAyNTY2", "number": 1625, "title": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression", "bodyText": "adding expression support for case Id and prefix", "createdAt": "2020-04-02T10:53:15Z", "url": "https://github.com/kiegroup/jbpm/pull/1625", "merged": true, "mergeCommit": {"oid": "3cebc07c53510d8c676dbd04797b227b68b3591f"}, "closed": true, "closedAt": "2020-04-29T07:05:53Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU6DxhgBqjMyMDQxMTQ4MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb_RczgFqTQwMTU5MjY0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5d8dab922289570c39d83073c69cf11fb7bfd3c", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/d5d8dab922289570c39d83073c69cf11fb7bfd3c", "committedDate": "2020-04-02T10:52:00Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b3debea701a86a3d07e844468467fba8520c89ff", "committedDate": "2020-04-06T07:26:10Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDIxNjM3", "url": "https://github.com/kiegroup/jbpm/pull/1625#pullrequestreview-388021637", "createdAt": "2020-04-06T08:12:02Z", "commit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwODoxMjowMlrOGBMXlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTo1ODowOVrOGBQVuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwNDQwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return StringUtils.leftPad(text, count, pad);\n          \n          \n            \n                    return StringUtils.rightPad(text, count, pad);\n          \n      \n    \n    \n  \n\nWrong method", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403904407", "createdAt": "2020-04-06T08:12:02Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/generator/CaseIdExpressionFunctions.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.casemgmt.impl.generator;\n+\n+import org.apache.commons.lang3.StringUtils;\n+\n+public final class CaseIdExpressionFunctions {\n+\n+    public static final CaseIdExpressionFunctions CASE_ID_FUNCTIONS = new CaseIdExpressionFunctions();\n+\n+    private CaseIdExpressionFunctions() {}\n+\n+    public static final String LPAD(Integer id, Integer count, String pad) {\n+        return StringUtils.leftPad(id.toString(), count, pad);\n+    }\n+\n+    public static final String RPAD(Integer id, Integer count, String pad) {\n+        return StringUtils.rightPad(id.toString(), count, pad);\n+    }\n+\n+    public static final String LPAD(String text, Integer count, String pad) {\n+        return StringUtils.leftPad(text, count, pad);\n+    }\n+\n+    public static final String RPAD(String text, Integer count, String pad) {\n+        return StringUtils.leftPad(text, count, pad);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkwNzk2NQ==", "bodyText": "nitpicking... 2020", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403907965", "createdAt": "2020-04-06T08:18:02Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdCannotBeGeneratedException.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzNTg2NA==", "bodyText": "Update javadoc adding deploymendId param", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403935864", "createdAt": "2020-04-06T09:03:47Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -39,21 +39,31 @@\n      * Should be called only one time per given prefix. Subsequent calls with same prefix do not affect the generator state.\n      * @param prefix unique prefix that should be used for generating case identifiers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzNjMzNQ==", "bodyText": "update javadoc, now it refers to deploymentId", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403936335", "createdAt": "2020-04-06T09:04:27Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -39,21 +39,31 @@\n      * Should be called only one time per given prefix. Subsequent calls with same prefix do not affect the generator state.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void register(String prefix);\n+    void register(String deploymentId, String prefix);\n     \n     /**\n-     * Unregisters given prefix from the generator. It's up to generator implementation to either remove the prefix \n+     * Unregisters given prefixes from the generator for a particular deployment. It's up to generator implementation to either remove the prefix \n      * and its latest value permanently or resume it in case of further registration of the same prefix.\n      * @param prefix unique prefix that should be used for generating case identifiers", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzODE3MQ==", "bodyText": "It doesn't seem a very accurate description about what the method does.", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403938171", "createdAt": "2020-04-06T09:07:22Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -39,21 +39,31 @@\n      * Should be called only one time per given prefix. Subsequent calls with same prefix do not affect the generator state.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void register(String prefix);\n+    void register(String deploymentId, String prefix);\n     \n     /**\n-     * Unregisters given prefix from the generator. It's up to generator implementation to either remove the prefix \n+     * Unregisters given prefixes from the generator for a particular deployment. It's up to generator implementation to either remove the prefix \n      * and its latest value permanently or resume it in case of further registration of the same prefix.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void unregister(String prefix);\n+    void unregister(String deploymentId);\n     \n     /**\n      * Generates next value for given prefix. Returned value should include the prefix as part of the returned value.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      * @return complete case id in format (PREFIX-GENERATED_VALUE)\n      * @param optionalParameters map of optionalParameters that might be helpful for implementation\n      * @throws CasePrefixNotFoundException in case given prefix was not registered\n+     * @throws CaseIdCannotBeGeneratedException in case the expression cannot be evaluated\n      */\n-    String generate(String prefix, Map<String, Object> optionalParameters) throws CasePrefixNotFoundException;\n+    String generate(String prefix, Map<String, Object> optionalParameters);\n+\n+    /**\n+     * evaluates the current prefix to generate the sequence name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzkzODM5OA==", "bodyText": "Missing optionalParameters in the javadoc", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403938398", "createdAt": "2020-04-06T09:07:44Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -39,21 +39,31 @@\n      * Should be called only one time per given prefix. Subsequent calls with same prefix do not affect the generator state.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void register(String prefix);\n+    void register(String deploymentId, String prefix);\n     \n     /**\n-     * Unregisters given prefix from the generator. It's up to generator implementation to either remove the prefix \n+     * Unregisters given prefixes from the generator for a particular deployment. It's up to generator implementation to either remove the prefix \n      * and its latest value permanently or resume it in case of further registration of the same prefix.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void unregister(String prefix);\n+    void unregister(String deploymentId);\n     \n     /**\n      * Generates next value for given prefix. Returned value should include the prefix as part of the returned value.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      * @return complete case id in format (PREFIX-GENERATED_VALUE)\n      * @param optionalParameters map of optionalParameters that might be helpful for implementation\n      * @throws CasePrefixNotFoundException in case given prefix was not registered\n+     * @throws CaseIdCannotBeGeneratedException in case the expression cannot be evaluated\n      */\n-    String generate(String prefix, Map<String, Object> optionalParameters) throws CasePrefixNotFoundException;\n+    String generate(String prefix, Map<String, Object> optionalParameters);\n+\n+    /**\n+     * evaluates the current prefix to generate the sequence name\n+     * @param identifierPrefix expression to be evaluated\n+     * @return returns the sequence name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2OTQ2NQ==", "bodyText": "nitpicking... 2020", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r403969465", "createdAt": "2020-04-06T09:58:09Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseIdGeneratorTest.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2017 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3debea701a86a3d07e844468467fba8520c89ff", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b3debea701a86a3d07e844468467fba8520c89ff", "committedDate": "2020-04-06T07:26:10Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "7367a9217df2e7006a1b0adbde1ddadd0010afc9", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/7367a9217df2e7006a1b0adbde1ddadd0010afc9", "committedDate": "2020-04-07T10:41:29Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7367a9217df2e7006a1b0adbde1ddadd0010afc9", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/7367a9217df2e7006a1b0adbde1ddadd0010afc9", "committedDate": "2020-04-07T10:41:29Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "839d5ab40a4bf704f8a91a588433f48d31668d6a", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/839d5ab40a4bf704f8a91a588433f48d31668d6a", "committedDate": "2020-04-07T10:49:08Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "839d5ab40a4bf704f8a91a588433f48d31668d6a", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/839d5ab40a4bf704f8a91a588433f48d31668d6a", "committedDate": "2020-04-07T10:49:08Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "3508065dea63c26befe58a7aebfbbcd36d923ffb", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/3508065dea63c26befe58a7aebfbbcd36d923ffb", "committedDate": "2020-04-07T11:26:55Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3508065dea63c26befe58a7aebfbbcd36d923ffb", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/3508065dea63c26befe58a7aebfbbcd36d923ffb", "committedDate": "2020-04-07T11:26:55Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "b6294c77476f394b80469de16dd1b429d73568f1", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b6294c77476f394b80469de16dd1b429d73568f1", "committedDate": "2020-04-08T07:16:58Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDMyMTk2", "url": "https://github.com/kiegroup/jbpm/pull/1625#pullrequestreview-398032196", "createdAt": "2020-04-22T09:58:04Z", "commit": {"oid": "b6294c77476f394b80469de16dd1b429d73568f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTo1ODowNFrOGJt-Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTo1ODowNFrOGJt-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg0MzYwMg==", "bodyText": "Just curious, is this backward-compatible in case somebody implemented its own generator? It is possible to set it either directly in jBPM or through the ServiceLoader in CaseKieServerExtension in KIE Server.", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r412843602", "createdAt": "2020-04-22T09:58:04Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -37,23 +37,35 @@\n \n     /**\n      * Should be called only one time per given prefix. Subsequent calls with same prefix do not affect the generator state.\n+     * @param deploymentId deploymentId this prefix expression belongs to.\n      * @param prefix unique prefix that should be used for generating case identifiers\n      */\n-    void register(String prefix);\n+    void register(String deploymentId, String prefix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6294c77476f394b80469de16dd1b429d73568f1"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6294c77476f394b80469de16dd1b429d73568f1", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b6294c77476f394b80469de16dd1b429d73568f1", "committedDate": "2020-04-08T07:16:58Z", "message": "[JBPM-9094] Add the ability to specify an CaseId Expression and Sequence Name / Case Prefix Expression\n\nadding expression support for case Id and prefix"}, "afterCommit": {"oid": "8dc49458a81a5656f5e370b75830c0aa88e94e47", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/8dc49458a81a5656f5e370b75830c0aa88e94e47", "committedDate": "2020-04-24T08:31:03Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dc49458a81a5656f5e370b75830c0aa88e94e47", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/8dc49458a81a5656f5e370b75830c0aa88e94e47", "committedDate": "2020-04-24T08:31:03Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}, "afterCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/da018ec279fcdc40177e2557716ce0ead9dce4fb", "committedDate": "2020-04-24T11:30:59Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzUyOTE5", "url": "https://github.com/kiegroup/jbpm/pull/1625#pullrequestreview-400752919", "createdAt": "2020-04-27T08:53:54Z", "commit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwODo1Mzo1NFrOGMYMAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMTozNjozMFrOGMel4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzMjM4NQ==", "bodyText": "Remove this line", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r415632385", "createdAt": "2020-04-27T08:53:54Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -55,5 +55,16 @@\n      * @param optionalParameters map of optionalParameters that might be helpful for implementation\n      * @throws CasePrefixNotFoundException in case given prefix was not registered", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTYzNDcxNg==", "bodyText": "Same here", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r415634716", "createdAt": "2020-04-27T08:57:01Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -55,5 +55,16 @@\n      * @param optionalParameters map of optionalParameters that might be helpful for implementation\n      * @throws CasePrefixNotFoundException in case given prefix was not registered\n      */\n-    String generate(String prefix, Map<String, Object> optionalParameters) throws CasePrefixNotFoundException;\n+    String generate(String prefix, Map<String, Object> optionalParameters);\n+\n+    /**\n+     * Evaluates the current prefix expression to generate the sequence name given the parameters passed\n+     * @param identifierPrefix expression to be evaluated\n+     * @param optionalParameters parameters needed to evaluate the expression\n+     * @return returns the sequence name\n+     * @throws CasePrefixCannotBeGeneratedException when it is not possible to generate the case prefix expression", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY5MTA2Nw==", "bodyText": "Add a new test, similar to previous one with\ndata.put(\"IS_PREFIX_SEQUENCE\", null);\nand caseDefinitionId: EmptyCaseWithCaseIdPrefix4\nThere are 2 null pointer exceptions, at marshal/unmarshal methods of CaseFileInstanceMarshallingStrategy class, that could be avoided by checking\n\n\ndataEntry.getValue() != null \n  \n    \n      jbpm/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/marshalling/CaseFileInstanceMarshallingStrategy.java\n    \n    \n         Line 144\n      in\n      778e63a\n    \n    \n    \n    \n\n        \n          \n           if (marshaller.accept(dataEntry.getValue())) { \n        \n    \n  \n\n\n\n\nserializedContent.getContent() != null\n\n  \n    \n      jbpm/jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/marshalling/CaseFileInstanceMarshallingStrategy.java\n    \n    \n         Line 187\n      in\n      778e63a\n    \n    \n    \n    \n\n        \n          \n           Object value = marshaller.unmarshal(context, is, serializedContent.getContent(), classloader); \n        \n    \n  \n\n\n\n\nWdyt?", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r415691067", "createdAt": "2020-04-27T10:20:43Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseIdGeneratorTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.casemgmt.impl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.jbpm.casemgmt.api.model.instance.CaseFileInstance;\n+import org.jbpm.casemgmt.impl.util.AbstractCaseServicesBaseTest;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+\n+public class CaseIdGeneratorTest extends AbstractCaseServicesBaseTest {\n+\n+    @Override\n+    protected List<String> getProcessDefinitionFiles() {\n+        List<String> processes = new ArrayList<String>();\n+        processes.add(\"cases/EmptyCaseWithCaseIdPrefix1.bpmn2\");\n+        processes.add(\"cases/EmptyCaseWithCaseIdPrefix2.bpmn2\");\n+        processes.add(\"cases/EmptyCaseWithCaseIdPrefix3.bpmn2\");\n+        processes.add(\"cases/EmptyCaseWithCaseIdPrefix4.bpmn2\");\n+        processes.add(\"cases/EmptyCase.bpmn2\");\n+        return processes;\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithIdCaseExpression() {\n+        Map<String, Object> data = new HashMap<>();\n+        data.put(\"class\", \"test\");\n+        CaseFileInstance caseFile = caseService.newCaseFileInstance(deploymentUnit.getIdentifier(), \"EmptyCaseWithIdCaseExpression\", data);\n+\n+        String caseId = caseService.startCase(deploymentUnit.getIdentifier(), \"EmptyCaseWithIdCaseExpression\", caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"EmptyCaseWithIdCaseExpression-0000000001\", caseId);\n+        caseService.cancelCase(caseId);\n+\n+    }\n+\n+    @Test\n+    public void testStartEmptyCaseWithOverridingSequence() {\n+        Map<String, Object> data = new HashMap<>();\n+        data.put(\"CORRELATION_KEY\", \"0101010101\");\n+        data.put(\"IS_PREFIX_SEQUENCE\", false);\n+        CaseFileInstance caseFile = caseService.newCaseFileInstance(deploymentUnit.getIdentifier(), \"EmptyCaseWithIdCaseExpressionAndEmptyPrefixExpression\", data);\n+\n+        String caseId = caseService.startCase(deploymentUnit.getIdentifier(), \"EmptyCaseWithIdCaseExpressionAndEmptyPrefixExpression\", caseFile);\n+        assertNotNull(caseId);\n+        assertEquals(\"0101010101\", caseId);\n+        caseService.cancelCase(caseId);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY5NDYxMw==", "bodyText": "Add a test to cover also this line (e.g., with a non-existing variable at customCaseIdPrefix metadata)", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r415694613", "createdAt": "2020-04-27T10:26:19Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/generator/TableCaseIdGenerator.java", "diffHunk": "@@ -84,11 +87,19 @@ public void unregister(String prefix) {\n         } else {\n             logger.debug(\"Skipping remove of case id info for prefix {}\", prefix);\n         }\n+    }\n \n+    @Override\n+    public String resolveCaseIdPrefix(String expression, Map<String, Object> optionalParameters) {\n+        try {\n+            return !expression.isEmpty() ? (String) TemplateRuntime.eval(expression, CASE_ID_FUNCTIONS, optionalParameters) : \"\";\n+        } catch (org.mvel2.CompileException e) {\n+            throw new CasePrefixCannotBeGeneratedException(\"Case Id Prefix cannot be generated\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTczNzMxNQ==", "bodyText": "Why InMemoryCaseIdGenerator doesn't override this method, same as TableCaseIdGenerator?\nBoth should work the same", "url": "https://github.com/kiegroup/jbpm/pull/1625#discussion_r415737315", "createdAt": "2020-04-27T11:36:30Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/generator/CaseIdGenerator.java", "diffHunk": "@@ -55,5 +55,16 @@\n      * @param optionalParameters map of optionalParameters that might be helpful for implementation\n      * @throws CasePrefixNotFoundException in case given prefix was not registered\n      */\n-    String generate(String prefix, Map<String, Object> optionalParameters) throws CasePrefixNotFoundException;\n+    String generate(String prefix, Map<String, Object> optionalParameters);\n+\n+    /**\n+     * Evaluates the current prefix expression to generate the sequence name given the parameters passed\n+     * @param identifierPrefix expression to be evaluated\n+     * @param optionalParameters parameters needed to evaluate the expression\n+     * @return returns the sequence name\n+     * @throws CasePrefixCannotBeGeneratedException when it is not possible to generate the case prefix expression\n+     */\n+    default String resolveCaseIdPrefix(String prefix, Map<String, Object> optionalParameters) {\n+        return prefix;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a75d7f6e4bbe671ab0cd5b42950b50b67263caf", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/5a75d7f6e4bbe671ab0cd5b42950b50b67263caf", "committedDate": "2020-04-28T07:30:39Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da018ec279fcdc40177e2557716ce0ead9dce4fb", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/da018ec279fcdc40177e2557716ce0ead9dce4fb", "committedDate": "2020-04-24T11:30:59Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}, "afterCommit": {"oid": "5a75d7f6e4bbe671ab0cd5b42950b50b67263caf", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/5a75d7f6e4bbe671ab0cd5b42950b50b67263caf", "committedDate": "2020-04-28T07:30:39Z", "message": "[JPBM-9094] Add the ability to specify a Case Prefix Expression\n\nadd the possibility to specify the case Id prefix expression throgh MVEL template"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTkyNjQ5", "url": "https://github.com/kiegroup/jbpm/pull/1625#pullrequestreview-401592649", "createdAt": "2020-04-28T08:05:07Z", "commit": {"oid": "5a75d7f6e4bbe671ab0cd5b42950b50b67263caf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1078, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}