{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNDIxMzMx", "number": 1750, "title": "[JBPM-9261] unclear validation message for link in different subprocess", "bodyText": "Actually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\nSince now the ids of the missing connections are logged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\nA test case was added to verify message is printed\nJIRA:\nJBPM-9261", "createdAt": "2020-09-07T14:05:56Z", "url": "https://github.com/kiegroup/jbpm/pull/1750", "merged": true, "mergeCommit": {"oid": "0a0b9bb2ab96325614872e27843c1b244d9e8f90"}, "closed": true, "closedAt": "2020-09-10T22:25:47Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGj19oABqjM3Mzc0MzQwODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdG0RN5gFqTQ4Mzk2MjExOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd175f8692af9145faf4ad143df87a054916638b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/fd175f8692af9145faf4ad143df87a054916638b", "committedDate": "2020-09-07T14:05:16Z", "message": "[JBPM-9261] unclear validation message for link in different subprocess\n\nActually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\n\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\n\nSince now the ids of the missing connections are loggged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\n\nA test case was added to verify message is printed"}, "afterCommit": {"oid": "9353110c7203fe0e49919055655321b31c026147", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/9353110c7203fe0e49919055655321b31c026147", "committedDate": "2020-09-07T14:26:13Z", "message": "[JBPM-9261] unclear validation message for link in different subprocess\n\nActually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\n\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\n\nSince now the ids of the missing connections are loggged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\n\nA test case was added to verify message is printed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODMzOTY3", "url": "https://github.com/kiegroup/jbpm/pull/1750#pullrequestreview-483833967", "createdAt": "2020-09-08T06:40:00Z", "commit": {"oid": "9353110c7203fe0e49919055655321b31c026147"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODc3MDc3", "url": "https://github.com/kiegroup/jbpm/pull/1750#pullrequestreview-483877077", "createdAt": "2020-09-08T07:46:47Z", "commit": {"oid": "9353110c7203fe0e49919055655321b31c026147"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTU1NTQw", "url": "https://github.com/kiegroup/jbpm/pull/1750#pullrequestreview-483955540", "createdAt": "2020-09-08T09:26:47Z", "commit": {"oid": "9353110c7203fe0e49919055655321b31c026147"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOToyNjo0N1rOHOUkCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOToyNjo0N1rOHOUkCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc3OTAxOQ==", "bodyText": "Maybe we can use org.kie.api.definition.process.Process instead, just to make it a little more abstract? just like the one used below which is an instance of org.kie.api.definition.process.Node? - wdyt?", "url": "https://github.com/kiegroup/jbpm/pull/1750#discussion_r484779019", "createdAt": "2020-09-08T09:26:47Z", "author": {"login": "afalhambra"}, "path": "jbpm-bpmn2/src/main/java/org/jbpm/bpmn2/xml/ProcessHandler.java", "diffHunk": "@@ -258,28 +260,34 @@ else if (link.isThrowLink()) {\n         // throw exception if any error (this is done at the end of the process to show the user as much errors as possible) \n         StringBuilder errors = new StringBuilder();\n         if (!noNameLinks.isEmpty()) {\n-            formatError(errors,\"These nodes do not have a name \",noNameLinks.stream());\n+            formatError(errors,\"These nodes do not have a name \",noNameLinks.stream(), process);\n         }\n         if (!duplicatedTarget.isEmpty()) {\n-            formatError(errors,\"\\nThere are multiple catch nodes with the same name \",duplicatedTarget.stream());\n+            formatError(errors,\"\\nThere are multiple catch nodes with the same name \",duplicatedTarget.stream(), process);\n         }\n         if (!unconnectedTarget.isEmpty()) {\n-            formatError(errors,\"\\nThere is not connection from any throw link to these catch links \",unconnectedTarget.stream());\n+            formatError(errors,\"\\nThere is not connection from any throw link to these catch links \",unconnectedTarget.stream(), process);\n         }\n         if (!throwLinks.isEmpty()) {\n             formatError(errors,\"\\nThere is not connection from any catch link to these throw links \",throwLinks\n                                                .values()\n                                                .stream()\n-                                               .flatMap(Collection::stream));\n+                                               .flatMap(Collection::stream), process);\n         }\n         if (errors.length() > 0) {\n             throw new IllegalArgumentException (errors.toString());\n         }\n         \n     }\n     \n-    private static void formatError (StringBuilder errors, String message, Stream<IntermediateLink> stream) {\n+    private static void formatError (StringBuilder errors, String message, Stream<IntermediateLink> stream, NodeContainer container) {\n         errors.append(message).append(stream.map(IntermediateLink::getUniqueId).collect(Collectors.joining(\", \",\"{\",\"}\")));\n+        if (container instanceof Process) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9353110c7203fe0e49919055655321b31c026147"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f88fe3d3bfeb863450ba8430f84b04609fd717f1", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/f88fe3d3bfeb863450ba8430f84b04609fd717f1", "committedDate": "2020-09-08T09:30:24Z", "message": "[JBPM-9261] unclear validation message for link in different subprocess\n\nActually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\n\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\n\nSince now the ids of the missing connections are loggged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\n\nA test case was added to verify message is printed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9353110c7203fe0e49919055655321b31c026147", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/9353110c7203fe0e49919055655321b31c026147", "committedDate": "2020-09-07T14:26:13Z", "message": "[JBPM-9261] unclear validation message for link in different subprocess\n\nActually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\n\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\n\nSince now the ids of the missing connections are loggged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\n\nA test case was added to verify message is printed"}, "afterCommit": {"oid": "f88fe3d3bfeb863450ba8430f84b04609fd717f1", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/f88fe3d3bfeb863450ba8430f84b04609fd717f1", "committedDate": "2020-09-08T09:30:24Z", "message": "[JBPM-9261] unclear validation message for link in different subprocess\n\nActually, the way engine works, links are included as metadata\ninformation of the parent process or every container node, so there is\nnot vissibility between the links of a subprocess and links of the\nparent process, meaning that, at all effects, a no link scenario is\nsimilar to a link in different subprocess.\n\nError Message was already improved as part of RPHAM-3132, so message\nwhen there is no association is\n\n\"There is not connection from any throw link to these catch links {list\nof ids}\" or \"There is not connection from any catch link to these throw\nlinks {list of ids}\"\n\nSince now the ids of the missing connections are loggged, although the\nsame message is printed regardless there is no link or there is a link\nin a different process,  the user can easily tie knots, avoiding the\nconfusion.\n\nA test case was added to verify message is printed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzOTYyMTE4", "url": "https://github.com/kiegroup/jbpm/pull/1750#pullrequestreview-483962118", "createdAt": "2020-09-08T09:34:39Z", "commit": {"oid": "f88fe3d3bfeb863450ba8430f84b04609fd717f1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 764, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}