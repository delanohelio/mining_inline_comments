{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODU0Nzky", "number": 1749, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoxMzo0MFrOEgRPUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoyOToxOFrOEgRhQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjcyMzM4OnYy", "diffSide": "RIGHT", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoxMzo0MFrOHNCV-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1ODoyMVrOHN0oKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTkyOQ==", "bodyText": "try-with-resources might be another option here.", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r483431929", "createdAt": "2020-09-04T07:13:40Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -66,18 +81,23 @@ protected static DeploymentDescriptor getDescriptorFromKModule(InternalKieModule\n         DeploymentDescriptor desc = null;\n         if (kmodule.isAvailable(DeploymentDescriptor.META_INF_LOCATION)) {\n             byte[] content = kmodule.getBytes(DeploymentDescriptor.META_INF_LOCATION);\n-            ByteArrayInputStream input = new ByteArrayInputStream(content);\n-            try {\n-                desc = DeploymentDescriptorIO.fromXml(input);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException e) {\n-                    logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n-                }\n-            }\n+            desc = getDescriptorFromContent(content);\n         }\n \n         return desc;\n     }\n+\n+\n+    protected static DeploymentDescriptor getDescriptorFromContent(byte[] content) {\n+        ByteArrayInputStream input = new ByteArrayInputStream(content);\n+        try {\n+            return DeploymentDescriptorIO.fromXml(input);\n+        } finally {\n+            try {\n+                input.close();\n+            } catch (IOException e) {\n+                logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1NTc4NQ==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r484255785", "createdAt": "2020-09-07T07:58:21Z", "author": {"login": "elguardian"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -66,18 +81,23 @@ protected static DeploymentDescriptor getDescriptorFromKModule(InternalKieModule\n         DeploymentDescriptor desc = null;\n         if (kmodule.isAvailable(DeploymentDescriptor.META_INF_LOCATION)) {\n             byte[] content = kmodule.getBytes(DeploymentDescriptor.META_INF_LOCATION);\n-            ByteArrayInputStream input = new ByteArrayInputStream(content);\n-            try {\n-                desc = DeploymentDescriptorIO.fromXml(input);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException e) {\n-                    logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n-                }\n-            }\n+            desc = getDescriptorFromContent(content);\n         }\n \n         return desc;\n     }\n+\n+\n+    protected static DeploymentDescriptor getDescriptorFromContent(byte[] content) {\n+        ByteArrayInputStream input = new ByteArrayInputStream(content);\n+        try {\n+            return DeploymentDescriptorIO.fromXml(input);\n+        } finally {\n+            try {\n+                input.close();\n+            } catch (IOException e) {\n+                logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMTkyOQ=="}, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjcyODI3OnYy", "diffSide": "RIGHT", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoxNToyM1rOHNCY2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwOToxNDowOFrOHN3aGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMjY2Ng==", "bodyText": "I would add a little more info about this exception and we can follow same approach as per other IOExceptions here in this class.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n          \n          \n            \n                            logger.warn(\"Error when closing stream of kie-deployment-descriptor.xml\", e);", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r483432666", "createdAt": "2020-09-04T07:15:23Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -66,18 +81,23 @@ protected static DeploymentDescriptor getDescriptorFromKModule(InternalKieModule\n         DeploymentDescriptor desc = null;\n         if (kmodule.isAvailable(DeploymentDescriptor.META_INF_LOCATION)) {\n             byte[] content = kmodule.getBytes(DeploymentDescriptor.META_INF_LOCATION);\n-            ByteArrayInputStream input = new ByteArrayInputStream(content);\n-            try {\n-                desc = DeploymentDescriptorIO.fromXml(input);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException e) {\n-                    logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n-                }\n-            }\n+            desc = getDescriptorFromContent(content);\n         }\n \n         return desc;\n     }\n+\n+\n+    protected static DeploymentDescriptor getDescriptorFromContent(byte[] content) {\n+        ByteArrayInputStream input = new ByteArrayInputStream(content);\n+        try {\n+            return DeploymentDescriptorIO.fromXml(input);\n+        } finally {\n+            try {\n+                input.close();\n+            } catch (IOException e) {\n+                logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1NjI4Ng==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r484256286", "createdAt": "2020-09-07T07:58:52Z", "author": {"login": "elguardian"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -66,18 +81,23 @@ protected static DeploymentDescriptor getDescriptorFromKModule(InternalKieModule\n         DeploymentDescriptor desc = null;\n         if (kmodule.isAvailable(DeploymentDescriptor.META_INF_LOCATION)) {\n             byte[] content = kmodule.getBytes(DeploymentDescriptor.META_INF_LOCATION);\n-            ByteArrayInputStream input = new ByteArrayInputStream(content);\n-            try {\n-                desc = DeploymentDescriptorIO.fromXml(input);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException e) {\n-                    logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n-                }\n-            }\n+            desc = getDescriptorFromContent(content);\n         }\n \n         return desc;\n     }\n+\n+\n+    protected static DeploymentDescriptor getDescriptorFromContent(byte[] content) {\n+        ByteArrayInputStream input = new ByteArrayInputStream(content);\n+        try {\n+            return DeploymentDescriptorIO.fromXml(input);\n+        } finally {\n+            try {\n+                input.close();\n+            } catch (IOException e) {\n+                logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMjY2Ng=="}, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMwMTMzOA==", "bodyText": "I can't see this yet?", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r484301338", "createdAt": "2020-09-07T09:14:08Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -66,18 +81,23 @@ protected static DeploymentDescriptor getDescriptorFromKModule(InternalKieModule\n         DeploymentDescriptor desc = null;\n         if (kmodule.isAvailable(DeploymentDescriptor.META_INF_LOCATION)) {\n             byte[] content = kmodule.getBytes(DeploymentDescriptor.META_INF_LOCATION);\n-            ByteArrayInputStream input = new ByteArrayInputStream(content);\n-            try {\n-                desc = DeploymentDescriptorIO.fromXml(input);\n-            } finally {\n-                try {\n-                    input.close();\n-                } catch (IOException e) {\n-                    logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");\n-                }\n-            }\n+            desc = getDescriptorFromContent(content);\n         }\n \n         return desc;\n     }\n+\n+\n+    protected static DeploymentDescriptor getDescriptorFromContent(byte[] content) {\n+        ByteArrayInputStream input = new ByteArrayInputStream(content);\n+        try {\n+            return DeploymentDescriptorIO.fromXml(input);\n+        } finally {\n+            try {\n+                input.close();\n+            } catch (IOException e) {\n+                logger.debug(\"Error when closing stream of kie-deployment-descriptor.xml\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzMjY2Ng=="}, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjc2OTMxOnYy", "diffSide": "RIGHT", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwNzoyOToxOFrOHNCxTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNzo1ODo1OVrOHN0qgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzODkyNA==", "bodyText": "typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                logger.warn(\"Cound not read deployment descriptor on classpath\", e);\n          \n          \n            \n                                logger.warn(\"Could not read deployment descriptor on classpath\", e);", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r483438924", "createdAt": "2020-09-04T07:29:18Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -38,9 +42,20 @@\n     public static List<DeploymentDescriptor> getDeploymentDescriptorHierarchy(DeploymentDescriptorManager manager, KieContainer kieContainer) {\n         List<DeploymentDescriptor> descriptorHierarchy = new ArrayList<DeploymentDescriptor>();\n \n-        if (((KieContainerImpl)kieContainer).getKieProject() instanceof KieModuleKieProject) {\n-            InternalKieModule module = ((KieModuleKieProject) ((KieContainerImpl)kieContainer).getKieProject()).getInternalKieModule();\n+        KieProject kieProject = ((KieContainerImpl)kieContainer).getKieProject();\n+        if (kieProject instanceof KieModuleKieProject) {\n+            InternalKieModule module = ((KieModuleKieProject) kieProject).getInternalKieModule();\n             collectDeploymentDescriptors(module, descriptorHierarchy);\n+        } else if (kieProject instanceof ClasspathKieProject) {\n+            InputStream is = ((ClasspathKieProject) kieProject).getClassLoader().getResourceAsStream(DeploymentDescriptor.META_INF_LOCATION);\n+            if(is != null) {\n+                try {\n+                    descriptorHierarchy.add(getDescriptorFromContent(IoUtils.readBytesFromInputStream(is)));\n+                } catch (IOException e) {\n+                    logger.warn(\"Cound not read deployment descriptor on classpath\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDI1NjM4NA==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1749#discussion_r484256384", "createdAt": "2020-09-07T07:58:59Z", "author": {"login": "elguardian"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -38,9 +42,20 @@\n     public static List<DeploymentDescriptor> getDeploymentDescriptorHierarchy(DeploymentDescriptorManager manager, KieContainer kieContainer) {\n         List<DeploymentDescriptor> descriptorHierarchy = new ArrayList<DeploymentDescriptor>();\n \n-        if (((KieContainerImpl)kieContainer).getKieProject() instanceof KieModuleKieProject) {\n-            InternalKieModule module = ((KieModuleKieProject) ((KieContainerImpl)kieContainer).getKieProject()).getInternalKieModule();\n+        KieProject kieProject = ((KieContainerImpl)kieContainer).getKieProject();\n+        if (kieProject instanceof KieModuleKieProject) {\n+            InternalKieModule module = ((KieModuleKieProject) kieProject).getInternalKieModule();\n             collectDeploymentDescriptors(module, descriptorHierarchy);\n+        } else if (kieProject instanceof ClasspathKieProject) {\n+            InputStream is = ((ClasspathKieProject) kieProject).getClassLoader().getResourceAsStream(DeploymentDescriptor.META_INF_LOCATION);\n+            if(is != null) {\n+                try {\n+                    descriptorHierarchy.add(getDescriptorFromContent(IoUtils.readBytesFromInputStream(is)));\n+                } catch (IOException e) {\n+                    logger.warn(\"Cound not read deployment descriptor on classpath\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQzODkyNA=="}, "originalCommit": {"oid": "131dd9e6ed68ed957809aaf10e3d124ce07c31b8"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1562, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}