{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwODU2NTg5", "number": 1656, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzoxODoyNVrOD-f9-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzoxMDozMVrOEDUvGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODYyMDcyOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzoxODoyNVrOGYoxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOToxNDo1NFrOGZQVQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4Njk5NQ==", "bodyText": "usually if you have a proxy what is the common thing is that everything is affecting by the environment and not really at design time.\nYou need to ajust this to a system property and read from it. Also would be good if you can set/override the properties like which proxy to use\nyou have examples here how to do this\nhttps://github.com/kiegroup/droolsjbpm-integration/blob/master/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/KieServerConstants.java#L39", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r428486995", "createdAt": "2020-05-21T07:18:25Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -156,6 +155,7 @@\n     private static final Logger logger = LoggerFactory.getLogger(RESTWorkItemHandler.class);\n     private static final int DEFAULT_TOTAL_POOL_CONNECTIONS = 500;\n     private static final int DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE = 50;\n+    private static final boolean DEFAULT_USE_SYSTEM_PROPERTIES = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d57e32a54714e4df67870485437e502afa584b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODUxNzkzMw==", "bodyText": "The decission to use system properties or not is not base on the value of this private variable. The decision to use system properties or not is based on the value of the parameter passed to the constructor.\nThis private constant is there to make easier maintance in case we decide to use system properties by default in the future. Now, for backward compatibility, the default value is false. If in future we decide to use them by default, we just need to change the constant (so this constant was introduce just becasue we have many constructor, if this class was built from scracth, we should use a builder pattern)\nIf we were going to control this functionality through system properties, changes in the constructor are not needed, but that was not the proposal of the JIRA, not consistent with the current structure of the code", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r428517933", "createdAt": "2020-05-21T08:30:34Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -156,6 +155,7 @@\n     private static final Logger logger = LoggerFactory.getLogger(RESTWorkItemHandler.class);\n     private static final int DEFAULT_TOTAL_POOL_CONNECTIONS = 500;\n     private static final int DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE = 50;\n+    private static final boolean DEFAULT_USE_SYSTEM_PROPERTIES = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4Njk5NQ=="}, "originalCommit": {"oid": "c9d57e32a54714e4df67870485437e502afa584b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEzNTE2OA==", "bodyText": "Rather than following the proposal of the JIRA, since the decission to use or not system properties should be taken as execution time, not desing time, it does not make sense to change current constructor, but provide a new system property org.kie.workspace.rest.useSystemProperties (default value false) which will determine if useSystemProperties is invoked or not when creating the http connection", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429135168", "createdAt": "2020-05-22T09:14:54Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -156,6 +155,7 @@\n     private static final Logger logger = LoggerFactory.getLogger(RESTWorkItemHandler.class);\n     private static final int DEFAULT_TOTAL_POOL_CONNECTIONS = 500;\n     private static final int DEFAULT_MAX_POOL_CONNECTIONS_PER_ROUTE = 50;\n+    private static final boolean DEFAULT_USE_SYSTEM_PROPERTIES = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4Njk5NQ=="}, "originalCommit": {"oid": "c9d57e32a54714e4df67870485437e502afa584b"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjM4NzM3OnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0MzoyM1rOGZNwXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoxMDozMFrOGabVtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA==", "bodyText": "This is not testing anything. Just covering the line you added. remove this.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429092958", "createdAt": "2020-05-22T07:43:23Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEyODE2NA==", "bodyText": "This is added for coverage and for testing that, if property is enabled and there is not any system property added, this method behaves as before.\nSo, I think is a very productive addition. I vote for keeping it", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429128164", "createdAt": "2020-05-22T08:59:51Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA=="}, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MzYzOQ==", "bodyText": "No it is not.\n\nYou are modifying the behaviour of the test and make it dependent of the environment (so it is out of control)\nYou are not testing properly if the new property is using the system properties or not. e.g. one example would be to set a wrong address default adress (unreachable) and a proxy address setting in the system properties. then see if the system is taking or not what you are doing running a get operation against the proxied server.\nThis is not a proper test. Please remove and add a proper test.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429193639", "createdAt": "2020-05-22T11:30:26Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA=="}, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTMwNTE4MQ==", "bodyText": "Ok, I will remove and define a specific case.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429305181", "createdAt": "2020-05-22T15:11:54Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA=="}, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI2NTI2Mg==", "bodyText": "Hi, you need to try to test this as well. otherwise looks good.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r430265262", "createdAt": "2020-05-26T09:06:26Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA=="}, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2NDA4NQ==", "bodyText": "Additional test case using http.proxy system property has been added.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r430364085", "createdAt": "2020-05-26T12:10:30Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/BasicAuthRestWorkItemHandlerTest.java", "diffHunk": "@@ -104,6 +107,7 @@ public void setClientApiVersion() {\n \n     @Test\n     public void testGETOperation() {\n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5Mjk1OA=="}, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjM4ODE4OnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0Mzo0MlrOGZNw9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0Mzo0MlrOGZNw9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MzEwOA==", "bodyText": "open/close brackets", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429093108", "createdAt": "2020-05-22T07:43:42Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -1312,9 +1315,11 @@ protected HttpClient getHttpClient(Integer readTimeout,\n             HttpClientBuilder clientBuilder = HttpClientBuilder.create()\n                     .setDefaultRequestConfig(config);\n \n-            HttpClient httpClient = clientBuilder.build();\n+            if (Boolean.getBoolean(USE_SYSTEM_PROPERTIES))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86cb607be0176bb7ace9d2d8c6ba311e2710583e"}, "originalPosition": 350}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODI1Njg2OnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMTozMlrOGaEnow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMTozMlrOGaEnow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5MTg0Mw==", "bodyText": "Unnecessary space.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429991843", "createdAt": "2020-05-25T15:31:32Z", "author": {"login": "MarianMacik"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -718,24 +717,28 @@ public RESTWorkItemHandler(String username,\n                                String password,\n                                ClassLoader classLoader,\n                                boolean doCacheClient,\n-                               int totalPoolConnections,\n+                                int totalPoolConnections,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bd9b3578e510575144edfc51a25ebd40772e9cb"}, "originalPosition": 318}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODI1NzAyOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMTozNVrOGaEnug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMTozNVrOGaEnug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5MTg2Ng==", "bodyText": "Unnecessary space.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429991866", "createdAt": "2020-05-25T15:31:35Z", "author": {"login": "MarianMacik"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -718,24 +717,28 @@ public RESTWorkItemHandler(String username,\n                                String password,\n                                ClassLoader classLoader,\n                                boolean doCacheClient,\n-                               int totalPoolConnections,\n+                                int totalPoolConnections,\n                                int maxPoolConnectionsPerRoute,\n                                String handlingProcessId,\n                                String handlingStrategy) {\n-        this();\n+        printProtocol();\n         this.username = username;\n         this.password = password;\n         this.type = AuthenticationType.BASIC;\n         this.classLoader = classLoader;\n         this.doCacheClient = doCacheClient;\n-        if (doCacheClient) {\n+         if (doCacheClient) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bd9b3578e510575144edfc51a25ebd40772e9cb"}, "originalPosition": 330}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODI1ODM4OnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMjoxM1rOGaEong==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNTozMjoxM1rOGaEong==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk5MjA5NA==", "bodyText": "Please rename the method to something like logProtocol so it is obvious that it doesn't print anything on stdout.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r429992094", "createdAt": "2020-05-25T15:32:13Z", "author": {"login": "MarianMacik"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -718,24 +717,28 @@ public RESTWorkItemHandler(String username,\n                                String password,\n                                ClassLoader classLoader,\n                                boolean doCacheClient,\n-                               int totalPoolConnections,\n+                                int totalPoolConnections,\n                                int maxPoolConnectionsPerRoute,\n                                String handlingProcessId,\n                                String handlingStrategy) {\n-        this();\n+        printProtocol();\n         this.username = username;\n         this.password = password;\n         this.type = AuthenticationType.BASIC;\n         this.classLoader = classLoader;\n         this.doCacheClient = doCacheClient;\n-        if (doCacheClient) {\n+         if (doCacheClient) {\n             connectionManager.setMaxTotal(totalPoolConnections);\n             connectionManager.setDefaultMaxPerRoute(maxPoolConnectionsPerRoute);\n         }\n         this.handlingProcessId = handlingProcessId;\n         this.handlingStrategy = handlingStrategy;\n     }\n \n+    private void printProtocol() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bd9b3578e510575144edfc51a25ebd40772e9cb"}, "originalPosition": 338}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQ5NjA2OnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDowNjozOVrOGe-3ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNzoyNFrOGgX32Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE0MDQ3NQ==", "bodyText": "If I set this ip to an arbitrary one that does not exist. This test does not fail.\nLooks to me that this is a faulty test.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r435140475", "createdAt": "2020-06-04T10:06:39Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "diffHunk": "@@ -133,6 +136,34 @@ public void testGETOperation() {\n         assertEquals(\"request to endpoint \" + workItem.getParameter(\"Url\") + \" successfully completed OK\",\n                      responseMsg);\n     }\n+    \n+    @Test\n+    public void testGETWithProxyOperation() { \n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");\n+        System.setProperty(\"http.proxyHost\", \"127.0.0.1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aa6afe9cc175734f0c26904b1ab5a7b9eceeb5d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5ODc0NQ==", "bodyText": "Test modified and moved to a new class", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r436598745", "createdAt": "2020-06-08T10:27:24Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/test/java/org/jbpm/process/workitem/rest/RestWorkItemHandlerTest.java", "diffHunk": "@@ -133,6 +136,34 @@ public void testGETOperation() {\n         assertEquals(\"request to endpoint \" + workItem.getParameter(\"Url\") + \" successfully completed OK\",\n                      responseMsg);\n     }\n+    \n+    @Test\n+    public void testGETWithProxyOperation() { \n+        System.setProperty(RESTWorkItemHandler.USE_SYSTEM_PROPERTIES, \"true\");\n+        System.setProperty(\"http.proxyHost\", \"127.0.0.1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE0MDQ3NQ=="}, "originalCommit": {"oid": "3aa6afe9cc175734f0c26904b1ab5a7b9eceeb5d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTIwMzIwOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzowODowM1rOGgRhiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDo1MToyMVrOGgYliA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NDczMQ==", "bodyText": "dependencies needs to be managed.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r436494731", "createdAt": "2020-06-08T07:08:03Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/pom.xml", "diffHunk": "@@ -19,6 +19,16 @@\n   <properties>\n     <java.module.name>org.jbpm.workitem.rest</java.module.name>\n   </properties>\n+  \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.mock-server</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3514286c7232e0a7876d1f2652f7912d6c5b1289"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjYxMDQ0MA==", "bodyText": "Depends on droolsjbpm-build-bootstrap#1355", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r436610440", "createdAt": "2020-06-08T10:51:21Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/pom.xml", "diffHunk": "@@ -19,6 +19,16 @@\n   <properties>\n     <java.module.name>org.jbpm.workitem.rest</java.module.name>\n   </properties>\n+  \n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.mock-server</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NDczMQ=="}, "originalCommit": {"oid": "3514286c7232e0a7876d1f2652f7912d6c5b1289"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxOTIwOTIxOnYy", "diffSide": "RIGHT", "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNzoxMDozMVrOGgRlOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMDoyNzozOFrOGgX4Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NTY3Mw==", "bodyText": "done only when HTTP_CLIENT_API_43 client.... when this is false does not use the proxy.", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r436495673", "createdAt": "2020-06-08T07:10:31Z", "author": {"login": "elguardian"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -1311,10 +1315,18 @@ protected HttpClient getHttpClient(Integer readTimeout,\n \n             HttpClientBuilder clientBuilder = HttpClientBuilder.create()\n                     .setDefaultRequestConfig(config);\n+            \n+            \n+            if (Boolean.getBoolean(USE_SYSTEM_PROPERTIES)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3514286c7232e0a7876d1f2652f7912d6c5b1289"}, "originalPosition": 340}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU5ODg2Ng==", "bodyText": "Changed", "url": "https://github.com/kiegroup/jbpm/pull/1656#discussion_r436598866", "createdAt": "2020-06-08T10:27:38Z", "author": {"login": "fjtirado"}, "path": "jbpm-workitems/jbpm-workitems-rest/src/main/java/org/jbpm/process/workitem/rest/RESTWorkItemHandler.java", "diffHunk": "@@ -1311,10 +1315,18 @@ protected HttpClient getHttpClient(Integer readTimeout,\n \n             HttpClientBuilder clientBuilder = HttpClientBuilder.create()\n                     .setDefaultRequestConfig(config);\n+            \n+            \n+            if (Boolean.getBoolean(USE_SYSTEM_PROPERTIES)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5NTY3Mw=="}, "originalCommit": {"oid": "3514286c7232e0a7876d1f2652f7912d6c5b1289"}, "originalPosition": 340}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1703, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}