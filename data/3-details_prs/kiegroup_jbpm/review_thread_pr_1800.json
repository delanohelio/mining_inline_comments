{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MjYxMTE4", "number": 1800, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjo0MTozOFrOE4JNdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjo0Mzo0N1rOE4JQYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzA2NjEyOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjo0MTozOFrOHx5CDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoxNzoyMlrOHzzFiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NjY4NQ==", "bodyText": "assertThat is deprecated.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertThat(data.size(), is(queryContext.getCount()));\n          \n          \n            \n                        assertEquals(queryContext.getCount(), data.size());", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522076685", "createdAt": "2020-11-12T12:41:38Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NjQyNQ==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524076425", "createdAt": "2020-11-16T10:17:22Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NjY4NQ=="}, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzA2ODg1OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjo0MjoyMFrOHx5DrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoxNzo0MFrOHzzGhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NzEwMA==", "bodyText": "minor, just skip it if you want - static import\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Assert.assertEquals(0, p.getVariables().size());\n          \n          \n            \n                        assertEquals(0, p.getVariables().size());", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522077100", "createdAt": "2020-11-12T12:42:20Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+\n+        for (ProcessInstanceWithVarsDesc p : data) {\n+            Assert.assertEquals(0, p.getVariables().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NjY3OQ==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524076679", "createdAt": "2020-11-16T10:17:40Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -220,6 +222,22 @@ public void testQueryLikeToOperator() {\n         }\n     }\n \n+    @Test\n+    public void testQueryProcVarsExclusion() {\n+\n+        List<QueryParam> variables = list(likeTo(\"var_a\", false, \"a%\"));\n+        List<QueryParam> attributes = list(exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<ProcessInstanceWithVarsDesc> data = advanceVariableDataService.queryProcessByVariables(attributes, variables, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+\n+        for (ProcessInstanceWithVarsDesc p : data) {\n+            Assert.assertEquals(0, p.getVariables().size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3NzEwMA=="}, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzA3MzYyOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjo0Mzo0N1rOHx5GwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDoxODoyNFrOHzzJbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3Nzg4OQ==", "bodyText": "same comments as above", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r522077889", "createdAt": "2020-11-12T12:43:47Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -300,6 +318,21 @@ public void testQueryTaskByVariables() {\n         }\n     }\n \n+    @Test\n+    public void testQueryTaskExcludeByVariables() {\n+        List<QueryParam> variables = list(equalsTo(\"task_in_a1\", \"a0\"));\n+        List<QueryParam> attributes = list(equalsTo(PROCESS_ATTR_DEPLOYMENT_ID, \"org.jbpm.test:test-module:1.0.0\"), exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<String> potOwners = emptyList();\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, variables, emptyList(), potOwners, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+        for (UserTaskInstanceWithPotOwnerDesc p : data) {\n+            Assert.assertEquals(0, p.getProcessVariables().size());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA3NzQyMg==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1800#discussion_r524077422", "createdAt": "2020-11-16T10:18:24Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/AdvanceRuntimeDataServiceImplTest.java", "diffHunk": "@@ -300,6 +318,21 @@ public void testQueryTaskByVariables() {\n         }\n     }\n \n+    @Test\n+    public void testQueryTaskExcludeByVariables() {\n+        List<QueryParam> variables = list(equalsTo(\"task_in_a1\", \"a0\"));\n+        List<QueryParam> attributes = list(equalsTo(PROCESS_ATTR_DEPLOYMENT_ID, \"org.jbpm.test:test-module:1.0.0\"), exclude(PROCESS_COLLECTION_VARIABLES));\n+\n+        List<String> potOwners = emptyList();\n+        List<UserTaskInstanceWithPotOwnerDesc> data = advanceVariableDataService.queryUserTasksByVariables(attributes, variables, emptyList(), potOwners, queryContext);\n+        if (queryContext.getCount() > 0) {\n+            assertThat(data.size(), is(queryContext.getCount()));\n+        }\n+        for (UserTaskInstanceWithPotOwnerDesc p : data) {\n+            Assert.assertEquals(0, p.getProcessVariables().size());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA3Nzg4OQ=="}, "originalCommit": {"oid": "3d75a62dbf1df5df71128241e4924aec28119de6"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1626, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}