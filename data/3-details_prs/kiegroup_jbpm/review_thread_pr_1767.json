{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NjcxNzQ5", "number": 1767, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NDozOVrOExF0Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODozNDozOFrOExG7Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTExMDAyOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NDozOVrOHnCa4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozNTo0NVrOHpfCRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjE2Mg==", "bodyText": "Typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param correlationKey the process instance's unique correlation key\n          \n          \n            \n                 * @param correlationKey the process instance unique correlation key", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510696162", "createdAt": "2020-10-23T07:44:39Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MjE1MA==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513262150", "createdAt": "2020-10-28T08:35:45Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjE2Mg=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTExMjQzOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NToxNFrOHnCcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozNTo1MlrOHpfCnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjUwMQ==", "bodyText": "same typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param correlationKey the process instance's unique correlation key\n          \n          \n            \n                 * @param correlationKey the process instance unique correlation key", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510696501", "createdAt": "2020-10-23T07:45:14Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MjIzNw==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513262237", "createdAt": "2020-10-28T08:35:52Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjUwMQ=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTExODAzOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0Njo0NFrOHnCfjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozNjoxNlrOHpfDdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NzM1OQ==", "bodyText": "deploymentId is not part of the expected arguments in the method, please remove.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param deploymentId deployment that process instance belongs to", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510697359", "createdAt": "2020-10-23T07:46:44Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(String deploymentId, CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to given list of correlation keys\n+     * \n+     * @param deploymentId deployment that process instance belongs to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2MjQ1Mw==", "bodyText": "removed", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513262453", "createdAt": "2020-10-28T08:36:16Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(String deploymentId, CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to given list of correlation keys\n+     * \n+     * @param deploymentId deployment that process instance belongs to", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NzM1OQ=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTIzNTY4OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoxOTo1M1rOHnDmxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozOToxMVrOHpfJsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNTU4OQ==", "bodyText": "same as above", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510715589", "createdAt": "2020-10-23T08:19:53Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(String deploymentId,\n+                                                        List<CorrelationKey> correlationKeys,\n+                                                        String signalName,\n+                                                        Object event) {\n+\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(deploymentId, key, signalName, event));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NDA1MA==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513264050", "createdAt": "2020-10-28T08:39:11Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(String deploymentId,\n+                                                        List<CorrelationKey> correlationKeys,\n+                                                        String signalName,\n+                                                        Object event) {\n+\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(deploymentId, key, signalName, event));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNTU4OQ=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTI0NTU4OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODoyMjoyOVrOHnDsyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODozODo0M1rOHpfIpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNzEyOA==", "bodyText": "correlationKeys might be null - maybe it's worth testing it before calling forEach", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510717128", "createdAt": "2020-10-23T08:22:29Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2Mzc4MA==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513263780", "createdAt": "2020-10-28T08:38:43Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNzEyOA=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTI5MTExOnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-services-api/src/build/revapi-config.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODozNDozOFrOHnEIyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0MToxOFrOHpfOfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyNDI5OQ==", "bodyText": "This ignore section is not needed. These changes are already in 7.44 final version.", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510724299", "createdAt": "2020-10-23T08:34:38Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/build/revapi-config.json", "diffHunk": "@@ -17,7 +17,82 @@\n     \"ignores\": {\n         \"revapi\": {\n             \"_comment\": \"Changes between 7.44.0.Final and the current branch. These changes are desired and thus ignored.\",\n-            \"ignore\": []\n+            \"ignore\": [\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.String org.jbpm.services.api.model.UserTaskInstanceDesc::getCorrelationKey()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setCorrelationKey(java.lang.String)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.Integer org.jbpm.services.api.model.UserTaskInstanceDesc::getProcessType()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setProcessType(java.lang.Integer)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2NTI3Ng==", "bodyText": "ok", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r513265276", "createdAt": "2020-10-28T08:41:18Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-api/src/build/revapi-config.json", "diffHunk": "@@ -17,7 +17,82 @@\n     \"ignores\": {\n         \"revapi\": {\n             \"_comment\": \"Changes between 7.44.0.Final and the current branch. These changes are desired and thus ignored.\",\n-            \"ignore\": []\n+            \"ignore\": [\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.String org.jbpm.services.api.model.UserTaskInstanceDesc::getCorrelationKey()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setCorrelationKey(java.lang.String)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.Integer org.jbpm.services.api.model.UserTaskInstanceDesc::getProcessType()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setProcessType(java.lang.Integer)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyNDI5OQ=="}, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1581, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}