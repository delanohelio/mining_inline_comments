{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczOTU0MTU1", "number": 1741, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzowMjowN1rOEfTK6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoxNDoxMlrOEgGnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjU1NDAxOnYy", "diffSide": "RIGHT", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzowMjowN1rOHLfTKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyMzoyM1rOHNGcoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwOTE5NA==", "bodyText": "Arrays.asList().stream() can be replaced with Arrays.stream() and method reference can be used in lambda\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        descriptorHierarchy.addAll(asList(presets).stream().filter(e -> e != null).collect(toList()));\n          \n          \n            \n                        descriptorHierarchy.addAll(Arrays.stream(presets).filter(Objects::nonNull).collect(toList()));", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r481809194", "createdAt": "2020-09-02T07:02:07Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -35,6 +40,30 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(DeploymentDescriptorManagerUtil.class);\n \n+    /**\n+     * This creates a deployment descriptor\n+     * @param manager\n+     * @param kieContainer\n+     * @param presets\n+     * @return\n+     */\n+    public static DeploymentDescriptor getDeploymentDescriptor(DeploymentDescriptorManager manager, KieContainer kieContainer, MergeMode mode, DeploymentDescriptor ...presets) {\n+        List<DeploymentDescriptor> descriptorHierarchy = new ArrayList<DeploymentDescriptor>();\n+        \n+\n+        if(presets != null) {\n+            descriptorHierarchy.addAll(asList(presets).stream().filter(e -> e != null).collect(toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5OTE2OQ==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r483499169", "createdAt": "2020-09-04T09:23:23Z", "author": {"login": "elguardian"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -35,6 +40,30 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(DeploymentDescriptorManagerUtil.class);\n \n+    /**\n+     * This creates a deployment descriptor\n+     * @param manager\n+     * @param kieContainer\n+     * @param presets\n+     * @return\n+     */\n+    public static DeploymentDescriptor getDeploymentDescriptor(DeploymentDescriptorManager manager, KieContainer kieContainer, MergeMode mode, DeploymentDescriptor ...presets) {\n+        List<DeploymentDescriptor> descriptorHierarchy = new ArrayList<DeploymentDescriptor>();\n+        \n+\n+        if(presets != null) {\n+            descriptorHierarchy.addAll(asList(presets).stream().filter(e -> e != null).collect(toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgwOTE5NA=="}, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjU1OTQyOnYy", "diffSide": "RIGHT", "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzowMzoxN1rOHLfWug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToxOTo1N1rOHNGV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxMDEwNg==", "bodyText": "Not used. Please remove", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r481810106", "createdAt": "2020-09-02T07:03:17Z", "author": {"login": "afalhambra"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -15,6 +15,10 @@\n  */\n package org.jbpm.runtime.manager.impl.deploy;\n \n+import static java.util.Arrays.asList;\n+import static java.util.Collections.addAll;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NzQyNQ==", "bodyText": "asList is used", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r483497425", "createdAt": "2020-09-04T09:19:57Z", "author": {"login": "elguardian"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/deploy/DeploymentDescriptorManagerUtil.java", "diffHunk": "@@ -15,6 +15,10 @@\n  */\n package org.jbpm.runtime.manager.impl.deploy;\n \n+import static java.util.Arrays.asList;\n+import static java.util.Collections.addAll;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxMDEwNg=="}, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjYxMTM4OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNzoxMzo1OVrOHLf3bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyMDo1OVrOHNGXzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxODQ3OA==", "bodyText": "Can be simplified - descriptor != null is always true\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \t} else if (descriptor != null && !deploymentUnit.isDeployed()) {\n          \n          \n            \n                \t} else if (!deploymentUnit.isDeployed()) {", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r481818478", "createdAt": "2020-09-02T07:13:59Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "diffHunk": "@@ -253,19 +253,12 @@ protected RuntimeEnvironmentBuilder boostrapRuntimeEnvironmentBuilder(KModuleDep\n     \tDeploymentDescriptor descriptor = deploymentUnit.getDeploymentDescriptor();\n     \tif (descriptor == null || ((DeploymentDescriptorImpl)descriptor).isEmpty()) { // skip empty descriptors as its default can override settings\n \t    \tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t\t\tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+\t    \tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode);\n     \t} else if (descriptor != null && !deploymentUnit.isDeployed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5NzkzNQ==", "bodyText": "done", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r483497935", "createdAt": "2020-09-04T09:20:59Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "diffHunk": "@@ -253,19 +253,12 @@ protected RuntimeEnvironmentBuilder boostrapRuntimeEnvironmentBuilder(KModuleDep\n     \tDeploymentDescriptor descriptor = deploymentUnit.getDeploymentDescriptor();\n     \tif (descriptor == null || ((DeploymentDescriptorImpl)descriptor).isEmpty()) { // skip empty descriptors as its default can override settings\n \t    \tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t\t\tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+\t    \tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode);\n     \t} else if (descriptor != null && !deploymentUnit.isDeployed()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTgxODQ3OA=="}, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDk4Mjc2OnYy", "diffSide": "RIGHT", "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODoxNDoxMlrOHMyJ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwOToyMjoxN1rOHNGaXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NjcwNw==", "bodyText": "Previously, descriptor was only set in both cases of previous \"if...else..\"; however, now it would be set even if deploymentUnit is deployed, is it right?", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r483166707", "createdAt": "2020-09-03T18:14:12Z", "author": {"login": "gmunozfe"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "diffHunk": "@@ -253,19 +253,12 @@ protected RuntimeEnvironmentBuilder boostrapRuntimeEnvironmentBuilder(KModuleDep\n     \tDeploymentDescriptor descriptor = deploymentUnit.getDeploymentDescriptor();\n     \tif (descriptor == null || ((DeploymentDescriptorImpl)descriptor).isEmpty()) { // skip empty descriptors as its default can override settings\n \t    \tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t\t\tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+\t    \tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode);\n     \t} else if (descriptor != null && !deploymentUnit.isDeployed()) {\n     \t\tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t    \tdescriptorHierarchy.add(0, descriptor);\n-\t    \tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+    \t\tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode, deploymentUnit.getDeploymentDescriptor());\n     \t}\n-\n+        deploymentUnit.setDeploymentDescriptor(descriptor);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ5ODU4OQ==", "bodyText": "not sure about this. But I will change it how it was previously.", "url": "https://github.com/kiegroup/jbpm/pull/1741#discussion_r483498589", "createdAt": "2020-09-04T09:22:17Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/KModuleDeploymentService.java", "diffHunk": "@@ -253,19 +253,12 @@ protected RuntimeEnvironmentBuilder boostrapRuntimeEnvironmentBuilder(KModuleDep\n     \tDeploymentDescriptor descriptor = deploymentUnit.getDeploymentDescriptor();\n     \tif (descriptor == null || ((DeploymentDescriptorImpl)descriptor).isEmpty()) { // skip empty descriptors as its default can override settings\n \t    \tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t\t\tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+\t    \tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode);\n     \t} else if (descriptor != null && !deploymentUnit.isDeployed()) {\n     \t\tDeploymentDescriptorManager descriptorManager = new DeploymentDescriptorManager(\"org.jbpm.domain\");\n-            List<DeploymentDescriptor> descriptorHierarchy = DeploymentDescriptorManagerUtil.getDeploymentDescriptorHierarchy(descriptorManager, kieContainer);\n-\n-\t    \tdescriptorHierarchy.add(0, descriptor);\n-\t    \tdescriptor = merger.merge(descriptorHierarchy, mode);\n-\t\t\tdeploymentUnit.setDeploymentDescriptor(descriptor);\n+    \t\tdescriptor = getDeploymentDescriptor(descriptorManager, kieContainer, mode, deploymentUnit.getDeploymentDescriptor());\n     \t}\n-\n+        deploymentUnit.setDeploymentDescriptor(descriptor);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2NjcwNw=="}, "originalCommit": {"oid": "c20cffa0a939e8287b17d45bc73dd465051ec21e"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1550, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}