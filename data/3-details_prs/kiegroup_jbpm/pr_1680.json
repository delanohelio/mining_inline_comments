{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODIwNzcw", "number": 1680, "title": "[JBPM-9195] Case traceability from a Task Instance", "bodyText": "CorrelationKey and ProcessType added to UserTaskDescription.\nDepends on droolsjbpm-knowledge:447 and merge together with kiegroup/droolsjbpm-integration#2136\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)", "createdAt": "2020-06-17T12:32:56Z", "url": "https://github.com/kiegroup/jbpm/pull/1680", "merged": true, "mergeCommit": {"oid": "d66923fbfbc8c01a7c5e3dfe99c91661ceb86d53"}, "closed": true, "closedAt": "2020-07-16T07:08:44Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsw7tsgBqjM0NjE5ODk0ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc03MTvABqjM1NDQ1MjMwNDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecf210b946e95f2465a519ec9f31d5dcfdc108e7", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ecf210b946e95f2465a519ec9f31d5dcfdc108e7", "committedDate": "2020-06-17T12:32:18Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "61270e932ce8737ed0b328972f39e9bbb9e85f0e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/61270e932ce8737ed0b328972f39e9bbb9e85f0e", "committedDate": "2020-06-19T10:58:59Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61270e932ce8737ed0b328972f39e9bbb9e85f0e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/61270e932ce8737ed0b328972f39e9bbb9e85f0e", "committedDate": "2020-06-19T10:58:59Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "51a9e93af7c3527ca9ca8ae9e28d08adde141ce0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/51a9e93af7c3527ca9ca8ae9e28d08adde141ce0", "committedDate": "2020-06-19T11:42:22Z", "message": "[BAPL-1623] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51a9e93af7c3527ca9ca8ae9e28d08adde141ce0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/51a9e93af7c3527ca9ca8ae9e28d08adde141ce0", "committedDate": "2020-06-19T11:42:22Z", "message": "[BAPL-1623] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "175d975dc812753335a69392b4af94e091d7c1cd", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/175d975dc812753335a69392b4af94e091d7c1cd", "committedDate": "2020-06-19T11:44:13Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "175d975dc812753335a69392b4af94e091d7c1cd", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/175d975dc812753335a69392b4af94e091d7c1cd", "committedDate": "2020-06-19T11:44:13Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "ed969425b338582405c93abf4230aabd083a9767", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ed969425b338582405c93abf4230aabd083a9767", "committedDate": "2020-06-19T14:44:16Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed969425b338582405c93abf4230aabd083a9767", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ed969425b338582405c93abf4230aabd083a9767", "committedDate": "2020-06-19T14:44:16Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "bc6af915170ddc4a6e023d4deb1d4757d9b41abf", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/bc6af915170ddc4a6e023d4deb1d4757d9b41abf", "committedDate": "2020-06-19T14:53:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc6af915170ddc4a6e023d4deb1d4757d9b41abf", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/bc6af915170ddc4a6e023d4deb1d4757d9b41abf", "committedDate": "2020-06-19T14:53:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "780c6a50d34c3f095a56a9936cc92d47791c4e85", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/780c6a50d34c3f095a56a9936cc92d47791c4e85", "committedDate": "2020-06-19T15:01:41Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "780c6a50d34c3f095a56a9936cc92d47791c4e85", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/780c6a50d34c3f095a56a9936cc92d47791c4e85", "committedDate": "2020-06-19T15:01:41Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c45f901acef5d0646d9ccaf5a527ff342f544297", "committedDate": "2020-06-19T15:05:17Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjA2MzEx", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-435606311", "createdAt": "2020-06-23T09:29:31Z", "commit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyOTozMVrOGnhGMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOToyOTozMVrOGnhGMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA4OTkwNQ==", "bodyText": "Not enought check also the value of correlation key. as a rule of thumb the correlation key by default is the process instance id to string but you can start a process with a custom correlation key. (do that)", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r444089905", "createdAt": "2020-06-23T09:29:31Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1039,19 +1040,23 @@ public void testGetTaskById() {\n     \tassertEquals(\"Write a Document\", userTask.getName());\n \n     \tNodeInstanceDesc nodeInstanceDesc = runtimeDataService.getNodeInstanceForWorkItem(userTask.getWorkItemId());\n-\t\tassertNull(userTask.getSlaCompliance());\n-\t\tassertNull(userTask.getSlaDueDate());\n+    \tassertNull(userTask.getSlaCompliance());\n+    \tassertNull(userTask.getSlaDueDate());\n \n-\t\tuserTask = runtimeDataService.getTaskById(taskId,true);\n-\t\tassertNotNull(userTask);\n-\n-\t\tassertEquals(nodeInstanceDesc.getSlaCompliance(), userTask.getSlaCompliance());\n-\t\tassertEquals(nodeInstanceDesc.getSlaDueDate(), userTask.getSlaDueDate());\n+    \tuserTask = runtimeDataService.getTaskById(taskId, true);\n+    \tassertNotNull(userTask);\n+    \tassertEquals(nodeInstanceDesc.getSlaCompliance(), userTask.getSlaCompliance());\n+    \tassertEquals(nodeInstanceDesc.getSlaDueDate(), userTask.getSlaDueDate());\n+    \t\n+    \tassertNotNull(userTask.getCorrelationKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjE1Mjk4", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-435615298", "createdAt": "2020-06-23T09:40:58Z", "commit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo0MDo1OFrOGnhgWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo0MDo1OFrOGnhgWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA5NjYwMA==", "bodyText": "what about the correlation key ?", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r444096600", "createdAt": "2020-06-23T09:40:58Z", "author": {"login": "elguardian"}, "path": "jbpm-services/jbpm-services-cdi/src/test/java/org/jbpm/services/cdi/test/RuntimeDataServiceTest.java", "diffHunk": "@@ -266,7 +267,7 @@ public void testGetTasksAssignedAsPotentialOwnerGroupFromCallback() {\n         List<TaskSummary> tasks = runtimeDataService.getTasksAssignedAsPotentialOwnerByStatus(\"katy\", statuses, new QueryFilter());\n         assertNotNull(tasks);\n         assertEquals(1, tasks.size());\n-        \n+        assertEquals(WorkflowProcess.PROCESS_TYPE, tasks.get(0).getProcessType().intValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjE2NjY1", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-435616665", "createdAt": "2020-06-23T09:42:46Z", "commit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c45f901acef5d0646d9ccaf5a527ff342f544297", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c45f901acef5d0646d9ccaf5a527ff342f544297", "committedDate": "2020-06-19T15:05:17Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "c37cfb3f1a3804768e96ffa170441ae47a08fb74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c37cfb3f1a3804768e96ffa170441ae47a08fb74", "committedDate": "2020-06-23T18:41:52Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c37cfb3f1a3804768e96ffa170441ae47a08fb74", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c37cfb3f1a3804768e96ffa170441ae47a08fb74", "committedDate": "2020-06-23T18:41:52Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "44f2ecf59c1c194ab664f27d5f23dd82526b8e78", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/44f2ecf59c1c194ab664f27d5f23dd82526b8e78", "committedDate": "2020-06-24T10:11:54Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2NjAwNTg2", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-436600586", "createdAt": "2020-06-24T12:32:44Z", "commit": {"oid": "44f2ecf59c1c194ab664f27d5f23dd82526b8e78"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44f2ecf59c1c194ab664f27d5f23dd82526b8e78", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/44f2ecf59c1c194ab664f27d5f23dd82526b8e78", "committedDate": "2020-06-24T10:11:54Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "4cbad8b037d9dd1afb97c97f42ddb5c4d2e95c31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/4cbad8b037d9dd1afb97c97f42ddb5c4d2e95c31", "committedDate": "2020-06-24T14:16:21Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cbad8b037d9dd1afb97c97f42ddb5c4d2e95c31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/4cbad8b037d9dd1afb97c97f42ddb5c4d2e95c31", "committedDate": "2020-06-24T14:16:21Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "fbb756613756f84254bfdcf50cc72c451a9ba3fc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/fbb756613756f84254bfdcf50cc72c451a9ba3fc", "committedDate": "2020-06-24T19:08:26Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65c34c84a2ee145f28a4d79e4239a299309f6abf", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/65c34c84a2ee145f28a4d79e4239a299309f6abf", "committedDate": "2020-06-26T07:53:33Z", "message": "Merge pull request #3 from gmunozfe/JBPM-9195\n\nFixes at named queries"}, "afterCommit": {"oid": "3a8c52442ca2306e9135526ac311cc399c176034", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3a8c52442ca2306e9135526ac311cc399c176034", "committedDate": "2020-06-26T07:57:42Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a8c52442ca2306e9135526ac311cc399c176034", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3a8c52442ca2306e9135526ac311cc399c176034", "committedDate": "2020-06-26T07:57:42Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "54f2b17a613b2f2724f71cd4a28380ba3cd85d62", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/54f2b17a613b2f2724f71cd4a28380ba3cd85d62", "committedDate": "2020-06-26T10:24:22Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54f2b17a613b2f2724f71cd4a28380ba3cd85d62", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/54f2b17a613b2f2724f71cd4a28380ba3cd85d62", "committedDate": "2020-06-26T10:24:22Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "06d4712c515e31fd843ba9ea346b5ad0ca1d539e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/06d4712c515e31fd843ba9ea346b5ad0ca1d539e", "committedDate": "2020-06-26T10:30:59Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06d4712c515e31fd843ba9ea346b5ad0ca1d539e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/06d4712c515e31fd843ba9ea346b5ad0ca1d539e", "committedDate": "2020-06-26T10:30:59Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "8a8bfa82d340e7f04431625a3201ec09f319dc45", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8a8bfa82d340e7f04431625a3201ec09f319dc45", "committedDate": "2020-06-26T13:45:30Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a8bfa82d340e7f04431625a3201ec09f319dc45", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8a8bfa82d340e7f04431625a3201ec09f319dc45", "committedDate": "2020-06-26T13:45:30Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "3e0ff5162b6fffbecd7b46879d7bda6a15018a0a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3e0ff5162b6fffbecd7b46879d7bda6a15018a0a", "committedDate": "2020-06-26T16:15:43Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e0ff5162b6fffbecd7b46879d7bda6a15018a0a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3e0ff5162b6fffbecd7b46879d7bda6a15018a0a", "committedDate": "2020-06-26T16:15:43Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "e37f87e7d12f508f5b74feea8c10c8336397e8ce", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/e37f87e7d12f508f5b74feea8c10c8336397e8ce", "committedDate": "2020-06-29T09:05:52Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d559fbfa08151e11e3cb8a7ab4b9002731ad5bf0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/d559fbfa08151e11e3cb8a7ab4b9002731ad5bf0", "committedDate": "2020-06-29T09:19:17Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "3c81f60003d534ac954f4d9f72913e30d4b6444e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3c81f60003d534ac954f4d9f72913e30d4b6444e", "committedDate": "2020-06-29T12:36:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19ad0d37be94b5591ce8b01e6d8195962b21be4f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/19ad0d37be94b5591ce8b01e6d8195962b21be4f", "committedDate": "2020-06-29T16:13:22Z", "message": "JBPM-9195 Adding traces for test debugging\n\nThis will be removed once all test are passed"}, "afterCommit": {"oid": "ddd49135b598f4af93205fdbfe75e5b50d06626e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ddd49135b598f4af93205fdbfe75e5b50d06626e", "committedDate": "2020-07-02T08:20:10Z", "message": "JBPM-9195 Adding traces for test debugging\n\nThis will be removed once all test are passed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzc0OTg1", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-442374985", "createdAt": "2020-07-03T12:20:02Z", "commit": {"oid": "ddd49135b598f4af93205fdbfe75e5b50d06626e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddd49135b598f4af93205fdbfe75e5b50d06626e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ddd49135b598f4af93205fdbfe75e5b50d06626e", "committedDate": "2020-07-02T08:20:10Z", "message": "JBPM-9195 Adding traces for test debugging\n\nThis will be removed once all test are passed"}, "afterCommit": {"oid": "3c81f60003d534ac954f4d9f72913e30d4b6444e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3c81f60003d534ac954f4d9f72913e30d4b6444e", "committedDate": "2020-06-29T12:36:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c81f60003d534ac954f4d9f72913e30d4b6444e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/3c81f60003d534ac954f4d9f72913e30d4b6444e", "committedDate": "2020-06-29T12:36:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "ce1479c00457998ae3e99f5881f49e48e5e7a7e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ce1479c00457998ae3e99f5881f49e48e5e7a7e6", "committedDate": "2020-07-07T11:46:36Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDk1MzQ5", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-444095349", "createdAt": "2020-07-07T17:15:28Z", "commit": {"oid": "ce1479c00457998ae3e99f5881f49e48e5e7a7e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce1479c00457998ae3e99f5881f49e48e5e7a7e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/ce1479c00457998ae3e99f5881f49e48e5e7a7e6", "committedDate": "2020-07-07T11:46:36Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "8a391e8e95985e938558e07048336b838b3bcc31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8a391e8e95985e938558e07048336b838b3bcc31", "committedDate": "2020-07-08T11:47:19Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a391e8e95985e938558e07048336b838b3bcc31", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8a391e8e95985e938558e07048336b838b3bcc31", "committedDate": "2020-07-08T11:47:19Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "63e0752778e9009e553071527bbbd459866e068b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/63e0752778e9009e553071527bbbd459866e068b", "committedDate": "2020-07-08T12:16:33Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63e0752778e9009e553071527bbbd459866e068b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/63e0752778e9009e553071527bbbd459866e068b", "committedDate": "2020-07-08T12:16:33Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "e0842954dd1799d6299542f68783f32a7c766ab2", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/e0842954dd1799d6299542f68783f32a7c766ab2", "committedDate": "2020-07-08T12:19:24Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0842954dd1799d6299542f68783f32a7c766ab2", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/e0842954dd1799d6299542f68783f32a7c766ab2", "committedDate": "2020-07-08T12:19:24Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "9a3f89bb872fda12f0c7db2aae8a32345231dc66", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/9a3f89bb872fda12f0c7db2aae8a32345231dc66", "committedDate": "2020-07-08T15:47:08Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a3f89bb872fda12f0c7db2aae8a32345231dc66", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/9a3f89bb872fda12f0c7db2aae8a32345231dc66", "committedDate": "2020-07-08T15:47:08Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c42c86c20ae599745d96a56aa7a9c802a8ee4b55", "committedDate": "2020-07-09T14:25:57Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MTU0NDIx", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-447154421", "createdAt": "2020-07-13T11:10:23Z", "commit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMToxMDoyM1rOGwj97w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMToyMzozM1rOGwkXuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3NDEyNw==", "bodyText": "This check can now be made in the beginning of the method as it would eliminate possibly unnecessary querying of all task events in case the task doesn't even exist.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453574127", "createdAt": "2020-07-13T11:10:23Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/RuntimeDataServiceImpl.java", "diffHunk": "@@ -1131,11 +1131,15 @@ private void addVariableNameAndVariableValueParameters(TaskSummaryQueryBuilder q\n         List<TaskEvent> taskEvents = commandService.execute(\n     \t\t\t\tnew QueryNameCommand<List<TaskEvent>>(\"getAllTasksEvents\", params));\n \n-        if(taskEvents == null || taskEvents.isEmpty()) {\n-            \n-            UserTaskInstanceDesc task = getTaskById(taskId);\n-            if (task == null) {\n-                throw new TaskNotFoundException( MessageFormat.format(TASK_NOT_FOUND, taskId) );\n+        \n+        UserTaskInstanceDesc task = getTaskById(taskId);\n+        if (task == null) {\n+            throw new TaskNotFoundException( MessageFormat.format(TASK_NOT_FOUND, taskId) );\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3NTQ5Nw==", "bodyText": "Can you create a new test for this as this is modifying the old one? It uses a different startProcess method.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453575497", "createdAt": "2020-07-13T11:13:08Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1016,12 +1017,15 @@ public void testGetTaskByWorkItemId() {\n     \tassertNotNull(userTask);\n     \tassertEquals(processInstanceId, userTask.getProcessInstanceId());\n     \tassertEquals(\"Write a Document\", userTask.getName());\n+        assertTask(userTask, processInstanceId);\n \n     }\n \n     @Test\n     public void testGetTaskById() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3NjA2Nw==", "bodyText": "Why was this removed? It should still hold I think.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453576067", "createdAt": "2020-07-13T11:14:21Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1118,26 +1127,20 @@ public void testGetTaskAssignedAsBusinessAdminPaging() {\n     \n     @Test\n     public void testGetTaskAssignedAsBusinessAdminByStatus() {\n-\n-        for (int i = 0; i < 10; i++) {\n-\n-            processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.writedocument\");\n-        }\n+        startProcesses(10, \"org.jbpm.writedocument\");\n         \n         List<Status> statuses = new ArrayList<Status>();\n         statuses.add(Status.Ready);\n         statuses.add(Status.Reserved);\n \n         List<TaskSummary> tasks = runtimeDataService.getTasksAssignedAsBusinessAdministratorByStatus(\"Administrator\", statuses, new QueryFilter(0, 5));\n-        assertNotNull(tasks);\n-        assertEquals(5, tasks.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3NjY2Mg==", "bodyText": "Same here.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453576662", "createdAt": "2020-07-13T11:15:22Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1210,22 +1213,15 @@ public void testGetTasksAssignedAsPotentialOwnerByStatusPagingAndFiltering() {\n     \n     @Test\n     public void testGetTasksAssignedAsPotentialOwnerSortedByAlias() {\n-        List<Long> processInstanceIds = new ArrayList<Long>();\n-        for (int i = 0; i < 10; i++) {\n-\n-            processInstanceIds.add(processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.writedocument\"));\n-        }\n-\n+        startProcesses(10, \"org.jbpm.writedocument\");\n+        \n         List<Status> statuses = new ArrayList<Status>();\n         statuses.add(Status.Ready);\n         statuses.add(Status.Reserved);\n \n         QueryFilter ctx = new QueryFilter(0, 5, \"Status\", true);\n         \n         List<TaskSummary> tasks = runtimeDataService.getTasksAssignedAsPotentialOwnerByStatus(\"salaboy\", statuses, ctx);\n-        assertNotNull(tasks);\n-        assertEquals(5, tasks.size());\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3NzQ1Ng==", "bodyText": "Maybe assert the process type as well.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453577456", "createdAt": "2020-07-13T11:16:55Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1329,12 +1325,15 @@ public void testGetTaskEvents() {\n     \tassertNotNull(workItemId);\n \n     \tUserTaskInstanceDesc userTask = runtimeDataService.getTaskByWorkItemId(workItemId);\n-    \tassertNotNull(userTask);\n+        assertTask(userTask, processInstanceId);\n \n     \tList<TaskEvent> auditTasks = runtimeDataService.getTaskEvents(userTask.getTaskId(), new QueryFilter());\n     \tassertNotNull(auditTasks);\n-        assertEquals(2, auditTasks.size());\n-    \tassertEquals(TaskEvent.TaskEventType.ADDED, auditTasks.get(0).getType());\n+    \tassertEquals(2, auditTasks.size());\n+    \tTaskEvent taskEvent = auditTasks.get(0);\n+    \tassertEquals(TaskEvent.TaskEventType.ADDED, taskEvent.getType());\n+    \tassertNotNull(taskEvent.getCorrelationKey());\n+    \tassertNotNull(taskEvent.getProcessType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3ODkzNw==", "bodyText": "Maybe make the name more descriptive - e.g. what it's asserting on.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453578937", "createdAt": "2020-07-13T11:19:49Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/test/util/AbstractKieServicesBaseTest.java", "diffHunk": "@@ -110,4 +115,33 @@ protected KieFileSystem createKieFileSystemWithKProject(KieServices ks) {\n         return kfs;\n     }\n \n+    protected void assertTask(UserTaskInstanceDesc userTask, long processInstanceId) {\n+        assertTask(userTask, Long.toString(processInstanceId));\n+    }\n+\n+    protected void assertTask(UserTaskInstanceDesc userTask, String correlationKey) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4MDI2Ng==", "bodyText": "I would rather use a variable which belongs to the test itself as it's less error-prone to tests influencing each other.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453580266", "createdAt": "2020-07-13T11:22:31Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/services/test/RuntimeDataServiceImplTest.java", "diffHunk": "@@ -1239,7 +1235,7 @@ public void testGetTasksAssignedAsPotentialOwnerSortedByAlias() {\n     @Test\n     public void testTasksByStatusByProcessInstanceIdPagingAndFiltering() {\n \n-    \tLong pid = processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.writedocument\");\n+    \tprocessInstanceId = processService.startProcess(deploymentUnit.getIdentifier(), \"org.jbpm.writedocument\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU4MDcyOA==", "bodyText": "Why do we need this intermediate step and not do the conversion inside the assert method below? As this method doesn't do anything more.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453580728", "createdAt": "2020-07-13T11:23:33Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/test/java/org/jbpm/kie/test/util/AbstractKieServicesBaseTest.java", "diffHunk": "@@ -110,4 +115,33 @@ protected KieFileSystem createKieFileSystemWithKProject(KieServices ks) {\n         return kfs;\n     }\n \n+    protected void assertTask(UserTaskInstanceDesc userTask, long processInstanceId) {\n+        assertTask(userTask, Long.toString(processInstanceId));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c42c86c20ae599745d96a56aa7a9c802a8ee4b55", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/c42c86c20ae599745d96a56aa7a9c802a8ee4b55", "committedDate": "2020-07-09T14:25:57Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "2e42e6943cc9e734be3dd214ff710693e4aa607e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/2e42e6943cc9e734be3dd214ff710693e4aa607e", "committedDate": "2020-07-13T14:49:18Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e42e6943cc9e734be3dd214ff710693e4aa607e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/2e42e6943cc9e734be3dd214ff710693e4aa607e", "committedDate": "2020-07-13T14:49:18Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "8636b23fb8bdf3b2b78a16424375fd1374e12bce", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8636b23fb8bdf3b2b78a16424375fd1374e12bce", "committedDate": "2020-07-13T15:14:04Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8636b23fb8bdf3b2b78a16424375fd1374e12bce", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/8636b23fb8bdf3b2b78a16424375fd1374e12bce", "committedDate": "2020-07-13T15:14:04Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "65a55341259365b7676db2dd0774ee60129cb17c", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/65a55341259365b7676db2dd0774ee60129cb17c", "committedDate": "2020-07-13T15:17:14Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MzgzOTY0", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-447383964", "createdAt": "2020-07-13T15:56:10Z", "commit": {"oid": "65a55341259365b7676db2dd0774ee60129cb17c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1NjoxMFrOGwvAKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1NjoxMFrOGwvAKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1NDkyMg==", "bodyText": "SLA-related columns are used for node(task)-related SLA (from NodeInstanceLog), not for process SLA (from ProcessInstanceLog). These fields are used for the RuntimeDataServiceImpl#getTaskById(Long taskId, boolean withSLA) method where you can specify if you want just the task or also its SLA data. So by default it's fine that the mapper doesn't have this data.\nAt first, the join with NodeInstanceLog was implemented in 3c46765 but then we found that it negatively impacts performance so we decided to create a separate method for that and reuse the same UserTaskInstanceDesc object for that (1ed84fe). That's why SLA information is not in the mapper by default.", "url": "https://github.com/kiegroup/jbpm/pull/1680#discussion_r453754922", "createdAt": "2020-07-13T15:56:10Z", "author": {"login": "MarianMacik"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/query/mapper/UserTaskInstanceQueryMapper.java", "diffHunk": "@@ -80,7 +80,11 @@ protected UserTaskInstanceDesc buildInstance(DataSet dataSetResult, int index) {\n                 getColumnDateValue(dataSetResult, COLUMN_DUEDATE, index),//dueDate\n                 getColumnLongValue(dataSetResult, COLUMN_WORKITEMID, index), //workItemId\n                 getColumnStringValue(dataSetResult, COLUMN_FORM_NAME, index),\n-                getColumnStringValue(dataSetResult, COLUMN_SUBJECT, index)\n+                getColumnStringValue(dataSetResult, COLUMN_SUBJECT, index),\n+                getColumnStringValue(dataSetResult, COLUMN_CORRELATIONKEY, index), \n+                getColumnIntValue(dataSetResult, COLUMN_PROCESSTYPE, index),\n+                getColumnDateValue(dataSetResult, COLUMN_SLA_DUE_DATE, index), \n+                getColumnIntValue(dataSetResult, COLUMN_SLA_COMPLIANCE, index)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a55341259365b7676db2dd0774ee60129cb17c"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65a55341259365b7676db2dd0774ee60129cb17c", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/65a55341259365b7676db2dd0774ee60129cb17c", "committedDate": "2020-07-13T15:17:14Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "6e0b1d135b848bbaceaab01147d74f4443c4cbe5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/6e0b1d135b848bbaceaab01147d74f4443c4cbe5", "committedDate": "2020-07-13T17:08:16Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDU0ODk0", "url": "https://github.com/kiegroup/jbpm/pull/1680#pullrequestreview-447454894", "createdAt": "2020-07-13T17:28:38Z", "commit": {"oid": "6e0b1d135b848bbaceaab01147d74f4443c4cbe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e0b1d135b848bbaceaab01147d74f4443c4cbe5", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/6e0b1d135b848bbaceaab01147d74f4443c4cbe5", "committedDate": "2020-07-13T17:08:16Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "898a8e4e00d727e5c3cf7bf123dec972fa7957ea", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/898a8e4e00d727e5c3cf7bf123dec972fa7957ea", "committedDate": "2020-07-14T14:37:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e22734e9f60ffd7858cac6b25210c82d8a143a54", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/e22734e9f60ffd7858cac6b25210c82d8a143a54", "committedDate": "2020-07-14T14:48:11Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "898a8e4e00d727e5c3cf7bf123dec972fa7957ea", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/898a8e4e00d727e5c3cf7bf123dec972fa7957ea", "committedDate": "2020-07-14T14:37:12Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}, "afterCommit": {"oid": "e22734e9f60ffd7858cac6b25210c82d8a143a54", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/jbpm/commit/e22734e9f60ffd7858cac6b25210c82d8a143a54", "committedDate": "2020-07-14T14:48:11Z", "message": "[JBPM-9195] Case traceability from a Task Instance\n\nCorrelationKey and ProcessType added to UserTaskDescription.\n\nExisting APIs(getTaskById, getTaskByWorkItem and getTaskByProcess) are\nreused, since I believe is preferable to assume the performance cost of\nan extra join rather than having to maintain a new API for every\nattribute combination (specially when there is already a join because of\nthe introduction of subject attribute)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 943, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}