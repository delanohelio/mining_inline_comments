{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTUzMDIx", "number": 1605, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMTo0MlrODnJyFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo1NToxMVrODpD24Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzgxMzM1OnYy", "diffSide": "RIGHT", "path": "jbpm-db-scripts/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozMTo0MlrOF0_Ayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMjoxNDowNVrOF3ZjwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMjY2Ng==", "bodyText": "h2 dependency is really needed here?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r391102666", "createdAt": "2020-03-11T16:31:42Z", "author": {"login": "gmunozfe"}, "path": "jbpm-db-scripts/pom.xml", "diffHunk": "@@ -0,0 +1,154 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.jbpm</groupId>\n+    <artifactId>jbpm</artifactId>\n+    <version>7.35.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>jbpm-db-scripts</artifactId>\n+  <name>jBPM :: DB Scripts resources</name>\n+\n+  <properties>\n+    <java.module.name>org.jbpm.dbscripts</java.module.name>\n+    <spotbugs.skip>true</spotbugs.skip>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-test-util</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.persistence</groupId>\n+      <artifactId>javax.persistence-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.activation</groupId>\n+          <artifactId>javax.activation-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.h2database</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edadf13bfa0a05054cbdeaccf624f6f76c084040"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNDc1Mw==", "bodyText": "no, not needed.\nRemoved from pom.xml.\nThanks @gmunozfe", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393634753", "createdAt": "2020-03-17T12:14:05Z", "author": {"login": "afalhambra"}, "path": "jbpm-db-scripts/pom.xml", "diffHunk": "@@ -0,0 +1,154 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.jbpm</groupId>\n+    <artifactId>jbpm</artifactId>\n+    <version>7.35.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>jbpm-db-scripts</artifactId>\n+  <name>jBPM :: DB Scripts resources</name>\n+\n+  <properties>\n+    <java.module.name>org.jbpm.dbscripts</java.module.name>\n+    <spotbugs.skip>true</spotbugs.skip>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-test-util</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.persistence</groupId>\n+      <artifactId>javax.persistence-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.activation</groupId>\n+          <artifactId>javax.activation-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.h2database</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMjY2Ng=="}, "originalCommit": {"oid": "edadf13bfa0a05054cbdeaccf624f6f76c084040"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjYwNDk3OnYy", "diffSide": "RIGHT", "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTowMTo1M1rOF24XZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MToxMVrOF3iigw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA==", "bodyText": "This is a good chance to remove star imports :) as we don't encourage people to use them.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393090918", "createdAt": "2020-03-16T15:01:53Z", "author": {"login": "MarianMacik"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "diffHunk": "@@ -16,13 +16,13 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MjU4Mw==", "bodyText": "Sure, I will change them.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393182583", "createdAt": "2020-03-16T17:10:04Z", "author": {"login": "afalhambra"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "diffHunk": "@@ -16,13 +16,13 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNjczNg==", "bodyText": "Actually these star imports were already there, I only changed the package name. But anyway, removing these star imports from the classes.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393636736", "createdAt": "2020-03-17T12:18:08Z", "author": {"login": "afalhambra"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "diffHunk": "@@ -16,13 +16,13 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MTg5MQ==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393781891", "createdAt": "2020-03-17T15:51:11Z", "author": {"login": "afalhambra"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/concurrency/persistence/OneProcessPerThreadPersistenceTest.java", "diffHunk": "@@ -16,13 +16,13 @@\n \n package org.jbpm.bpmn2.concurrency.persistence;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MDkxOA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjYwOTMyOnYy", "diffSide": "RIGHT", "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTowMjo0OFrOF24aCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDozNDoyMFrOF3WX1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTU5NA==", "bodyText": "Why this change?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393091594", "createdAt": "2020-03-16T15:02:48Z", "author": {"login": "MarianMacik"}, "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "diffHunk": "@@ -9,7 +9,7 @@ is_durable varchar(1) not null,\n is_nonconcurrent varchar(1) not null,\n is_update_data varchar(1) not null,\n requests_recovery varchar(1) not null,\n-job_data blob(2000),\n+job_data blob,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4MjI2Mg==", "bodyText": "That change is due to the following issue back in 2014: https://issues.redhat.com/browse/RHBPMS-1948?attachmentViewMode=list\nLooking at the code, it was fixed (blob size 2000 was removed) but reverted back by mistake when upgrading to Quartz version 2.x.\nTherefore, this change is needed.\nJust to avoid this from happening again, I raised a PR on Quartz team to fix this issue so it won't happen again (though no answer yet so far).\nPR on Quartz: quartz-scheduler/quartz#559", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393182262", "createdAt": "2020-03-16T17:09:32Z", "author": {"login": "afalhambra"}, "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "diffHunk": "@@ -9,7 +9,7 @@ is_durable varchar(1) not null,\n is_nonconcurrent varchar(1) not null,\n is_update_data varchar(1) not null,\n requests_recovery varchar(1) not null,\n-job_data blob(2000),\n+job_data blob,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTU5NA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIxNjY0MA==", "bodyText": "So it is still not fixed in Quartz 2.x? I would have thought that it was reverted back because the new version can cope with the limit :)", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393216640", "createdAt": "2020-03-16T18:05:54Z", "author": {"login": "MarianMacik"}, "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "diffHunk": "@@ -9,7 +9,7 @@ is_durable varchar(1) not null,\n is_nonconcurrent varchar(1) not null,\n is_update_data varchar(1) not null,\n requests_recovery varchar(1) not null,\n-job_data blob(2000),\n+job_data blob,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTU5NA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUwMjY3MA==", "bodyText": "I believe it was because we didn't raise any PR on Quartz repo by that time and we overrode our fix when we upgraded to new 2.x version afterwards - but this is only my guess :)\nas you can see, they still have this blob(2000) limit in their script https://github.com/quartz-scheduler/quartz/blob/1b865546a043a1ffd9c3ddd345f94608ceccbd28/quartz-core/src/main/resources/org/quartz/impl/jdbcjobstore/tables_db2_v8.sql#L53", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393502670", "createdAt": "2020-03-17T08:09:33Z", "author": {"login": "afalhambra"}, "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "diffHunk": "@@ -9,7 +9,7 @@ is_durable varchar(1) not null,\n is_nonconcurrent varchar(1) not null,\n is_update_data varchar(1) not null,\n requests_recovery varchar(1) not null,\n-job_data blob(2000),\n+job_data blob,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTU5NA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU4MjU1MA==", "bodyText": "Ah, I get it now, so we just copied it :) Then I'm fine with that.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393582550", "createdAt": "2020-03-17T10:34:20Z", "author": {"login": "MarianMacik"}, "path": "jbpm-db-scripts/src/main/resources/db/ddl-scripts/db2/quartz_tables_db2.sql", "diffHunk": "@@ -9,7 +9,7 @@ is_durable varchar(1) not null,\n is_nonconcurrent varchar(1) not null,\n is_update_data varchar(1) not null,\n requests_recovery varchar(1) not null,\n-job_data blob(2000),\n+job_data blob,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA5MTU5NA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjY4NzgwOnYy", "diffSide": "RIGHT", "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToyMToxM1rOF25MDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MToxOVrOF3ii6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw==", "bodyText": "Again star imports.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393104397", "createdAt": "2020-03-16T15:21:13Z", "author": {"login": "MarianMacik"}, "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "diffHunk": "@@ -75,7 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYzNjg0OQ==", "bodyText": "Actually these star imports were already there, I only changed the package name. But anyway, removing these star imports from the classes.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393636849", "createdAt": "2020-03-17T12:18:22Z", "author": {"login": "afalhambra"}, "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "diffHunk": "@@ -75,7 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2NzU4Ng==", "bodyText": "Yes, I know :) Just thought that it might be a good time to eliminate them.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393667586", "createdAt": "2020-03-17T13:12:22Z", "author": {"login": "MarianMacik"}, "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "diffHunk": "@@ -75,7 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MTk5Mg==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393781992", "createdAt": "2020-03-17T15:51:19Z", "author": {"login": "afalhambra"}, "path": "jbpm-persistence/jbpm-persistence-jpa/src/test/java/org/jbpm/persistence/session/WorkItemPersistenceTest.java", "diffHunk": "@@ -75,7 +75,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.util.PersistenceUtil.*;\n+import static org.jbpm.test.persistence.util.PersistenceUtil.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwNDM5Nw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjcxMjQ3OnYy", "diffSide": "RIGHT", "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToyNjozNlrOF25baQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MTozNFrOF3ijtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ==", "bodyText": "Why is this needed now?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393108329", "createdAt": "2020-03-16T15:26:36Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE4NjA1Mw==", "bodyText": "Because I've already included a call to the reusable class in charge of creating the DB schemas: ScriptsBase.executeScriptRunner(DB_DDL_SCRIPTS_RESOURCE_PATH, false); from the parent class TimerBaseTest\nThough, I think for the time being I will comment it out as this piece of work is still in progress (works fine, but some tests are still failing due to many different reasons) and will be delivered in next PRs.\nWhat do you think? I mean, there is no harm of having this call here but I'm open to comment it out for the moment.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393186053", "createdAt": "2020-03-16T17:15:50Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIyMzQ0NA==", "bodyText": "I see... Though now when you look at it, we call a method (tearDownOnce()) which has @BeforeClass annotation on it also in @before method. I think it would be good to make it more clear. But that is just cosmetics.\nHowever, I see that now the schema is created/scripts are run in GlobalQuartzRAMTimerServiceTest which stores timers in RAM rather than DB, but there are no such operations in GlobalQuartzDBTimerServiceTest. Shouldn't it be the other way round that we should create schema in DB tests and for RAM it is not needed?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393223444", "createdAt": "2020-03-16T18:15:38Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNjY1Nw==", "bodyText": "I would say tearDownOnce() call in @before method is not needed there, since it will be called in the @after method. I think the tearDownOnce() call is needed in the @after method because it is supposed to be a RAM based database (i.e. database is created and destroy after every test method).\nBut yes, it shouldn't create/run any SQL script for this case.\nIn the other hand, GlobalQuartzDBTimerServiceTest, the SQL scripts are created/destroyed once in the @afterclass and @BeforeClass respectively in the class TimerBaseTest.\nHowever all of these changes are still in progress and will be delivered in the next upcoming PR.\nWhat do you think?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393516657", "createdAt": "2020-03-17T08:38:14Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3Nzc4NQ==", "bodyText": "Understand. Then I guess it would be probably good to not alter these classes at all? So leave them as they were, do only necessary changes so we don't mix it?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393577785", "createdAt": "2020-03-17T10:26:04Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcwNTU0Ng==", "bodyText": "Agree.\nWill revert unnecessary changes for now.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393705546", "createdAt": "2020-03-17T14:08:31Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MjE5Ng==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782196", "createdAt": "2020-03-17T15:51:34Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/timer/GlobalQuartzRAMTimerServiceTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void setUp() {\n     }\n     \n     @After\n-    public void tearDown(){\n+    public void tearDown() throws IOException, SQLException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwODMyOQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjczNjg1OnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestEventEmitter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozMjowMVrOF25qtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDozMzo0N1rOF3WWtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ==", "bodyText": "I think that here we can make an exception because this TestEventEmitter is afaik not used in two or more modules for testing. It should be only needed in the jbpm-persistence module tests. What do you think?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393112245", "createdAt": "2020-03-16T15:32:01Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestEventEmitter.java", "diffHunk": "@@ -27,7 +27,6 @@\n import org.jbpm.persistence.api.integration.InstanceView;\n import org.jbpm.persistence.api.integration.base.BaseEventCollection;\n \n-\n public class TestEventEmitter implements EventEmitter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxOTQ1Mg==", "bodyText": "It is used in the jbpm-test-coverage module - class org.jbpm.test.functional.task.ProcessHumanTaskTest.\nSo I would agree if there was no reference to this class but having more than 1 references, I would keep it in the jbpm-test-util module now.\nWould you agree?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393519452", "createdAt": "2020-03-17T08:43:32Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestEventEmitter.java", "diffHunk": "@@ -27,7 +27,6 @@\n import org.jbpm.persistence.api.integration.InstanceView;\n import org.jbpm.persistence.api.integration.base.BaseEventCollection;\n \n-\n public class TestEventEmitter implements EventEmitter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU4MjI2MA==", "bodyText": "True, sorry for a false alert :) Yes, we can leave it as is.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393582260", "createdAt": "2020-03-17T10:33:47Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestEventEmitter.java", "diffHunk": "@@ -27,7 +27,6 @@\n import org.jbpm.persistence.api.integration.InstanceView;\n import org.jbpm.persistence.api.integration.base.BaseEventCollection;\n \n-\n public class TestEventEmitter implements EventEmitter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjI0NQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjczOTM3OnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestTransactionalPersistenceEventManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozMjozOVrOF25sZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyODo0OFrOF3WLkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng==", "bodyText": "Same for other related classes.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393112676", "createdAt": "2020-03-16T15:32:39Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestTransactionalPersistenceEventManager.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.jbpm.persistence.processinstance.objects;\n+package org.jbpm.test.persistence.processinstance.objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyMzkwMQ==", "bodyText": "In this one, there is no reference outside jbpm-persistence-jpa module but IMO I would move all these classes to the jbpm-test-util module just for coherence along classes in the same package. What do you think?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393523901", "createdAt": "2020-03-17T08:51:38Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestTransactionalPersistenceEventManager.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.jbpm.persistence.processinstance.objects;\n+package org.jbpm.test.persistence.processinstance.objects;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTQxMA==", "bodyText": "OK.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393579410", "createdAt": "2020-03-17T10:28:48Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/processinstance/objects/TestTransactionalPersistenceEventManager.java", "diffHunk": "@@ -13,7 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.jbpm.persistence.processinstance.objects;\n+package org.jbpm.test.persistence.processinstance.objects;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExMjY3Ng=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjc2Mzg5OnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozODoxNVrOF2571A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MjoxNVrOF3iloA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA==", "bodyText": "Maybe update the docs so we know what is the difference between TestPersistenceContext and TestPersistenceContextBase?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393116628", "createdAt": "2020-03-16T15:38:15Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java", "diffHunk": "@@ -14,89 +14,75 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.scripts;\n+package org.jbpm.test.persistence.scripts;\n \n import java.io.File;\n import java.io.IOException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n-import java.text.DateFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Properties;\n-import java.util.Set;\n+\n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n \n import org.drools.core.impl.KnowledgeBaseFactory;\n import org.drools.core.impl.KnowledgeBaseImpl;\n import org.drools.persistence.jta.JtaTransactionManager;\n-import org.jbpm.persistence.map.impl.ProcessCreatorForHelp;\n-import org.jbpm.persistence.scripts.oldentities.ProcessInstanceInfo;\n-import org.jbpm.persistence.scripts.oldentities.SessionInfo;\n-import org.jbpm.persistence.scripts.oldentities.TaskImpl;\n-import org.jbpm.persistence.scripts.util.SQLCommandUtil;\n-import org.jbpm.persistence.scripts.util.SQLScriptUtil;\n-import org.jbpm.persistence.scripts.util.TestsUtil;\n-import org.jbpm.persistence.util.PersistenceUtil;\n-import org.kie.test.util.db.PoolingDataSourceWrapper;\n+import org.jbpm.test.persistence.scripts.util.SQLCommandUtil;\n+import org.jbpm.test.persistence.scripts.util.SQLScriptUtil;\n+import org.jbpm.test.persistence.scripts.util.TestsUtil;\n+import org.jbpm.test.persistence.util.PersistenceUtil;\n+import org.jbpm.test.persistence.util.ProcessCreatorForHelp;\n import org.kie.api.KieBase;\n import org.kie.api.runtime.Environment;\n import org.kie.api.runtime.EnvironmentName;\n-import org.kie.api.task.model.I18NText;\n-import org.kie.api.task.model.OrganizationalEntity;\n import org.kie.internal.persistence.jpa.JPAKnowledgeService;\n import org.kie.internal.runtime.StatefulKnowledgeSession;\n-import org.kie.internal.task.api.TaskModelProvider;\n-import org.kie.internal.task.api.model.InternalI18NText;\n-import org.kie.internal.task.api.model.InternalOrganizationalEntity;\n-import org.kie.internal.task.api.model.InternalPeopleAssignments;\n-import org.kie.internal.task.api.model.InternalTaskData;\n+import org.kie.test.util.db.PoolingDataSourceWrapper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER;\n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER2008;\n-import static org.jbpm.persistence.scripts.DatabaseType.SYBASE;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER2008;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SYBASE;\n \n /**\n  * Central context that hides persistence from tests, so there is no need to work with persistence in the tests\n  * (transactions etc).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNDA5Mw==", "bodyText": "Agree. Will update the docs accordingly.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393524093", "createdAt": "2020-03-17T08:52:03Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java", "diffHunk": "@@ -14,89 +14,75 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.scripts;\n+package org.jbpm.test.persistence.scripts;\n \n import java.io.File;\n import java.io.IOException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n-import java.text.DateFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Properties;\n-import java.util.Set;\n+\n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n \n import org.drools.core.impl.KnowledgeBaseFactory;\n import org.drools.core.impl.KnowledgeBaseImpl;\n import org.drools.persistence.jta.JtaTransactionManager;\n-import org.jbpm.persistence.map.impl.ProcessCreatorForHelp;\n-import org.jbpm.persistence.scripts.oldentities.ProcessInstanceInfo;\n-import org.jbpm.persistence.scripts.oldentities.SessionInfo;\n-import org.jbpm.persistence.scripts.oldentities.TaskImpl;\n-import org.jbpm.persistence.scripts.util.SQLCommandUtil;\n-import org.jbpm.persistence.scripts.util.SQLScriptUtil;\n-import org.jbpm.persistence.scripts.util.TestsUtil;\n-import org.jbpm.persistence.util.PersistenceUtil;\n-import org.kie.test.util.db.PoolingDataSourceWrapper;\n+import org.jbpm.test.persistence.scripts.util.SQLCommandUtil;\n+import org.jbpm.test.persistence.scripts.util.SQLScriptUtil;\n+import org.jbpm.test.persistence.scripts.util.TestsUtil;\n+import org.jbpm.test.persistence.util.PersistenceUtil;\n+import org.jbpm.test.persistence.util.ProcessCreatorForHelp;\n import org.kie.api.KieBase;\n import org.kie.api.runtime.Environment;\n import org.kie.api.runtime.EnvironmentName;\n-import org.kie.api.task.model.I18NText;\n-import org.kie.api.task.model.OrganizationalEntity;\n import org.kie.internal.persistence.jpa.JPAKnowledgeService;\n import org.kie.internal.runtime.StatefulKnowledgeSession;\n-import org.kie.internal.task.api.TaskModelProvider;\n-import org.kie.internal.task.api.model.InternalI18NText;\n-import org.kie.internal.task.api.model.InternalOrganizationalEntity;\n-import org.kie.internal.task.api.model.InternalPeopleAssignments;\n-import org.kie.internal.task.api.model.InternalTaskData;\n+import org.kie.test.util.db.PoolingDataSourceWrapper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER;\n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER2008;\n-import static org.jbpm.persistence.scripts.DatabaseType.SYBASE;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER2008;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SYBASE;\n \n /**\n  * Central context that hides persistence from tests, so there is no need to work with persistence in the tests\n  * (transactions etc).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MjY4OA==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782688", "createdAt": "2020-03-17T15:52:15Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/scripts/TestPersistenceContextBase.java", "diffHunk": "@@ -14,89 +14,75 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.scripts;\n+package org.jbpm.test.persistence.scripts;\n \n import java.io.File;\n import java.io.IOException;\n import java.sql.Connection;\n import java.sql.PreparedStatement;\n import java.sql.SQLException;\n-import java.text.DateFormat;\n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n-import java.util.ArrayList;\n import java.util.HashMap;\n-import java.util.HashSet;\n import java.util.List;\n import java.util.Properties;\n-import java.util.Set;\n+\n import javax.persistence.EntityManager;\n import javax.persistence.EntityManagerFactory;\n \n import org.drools.core.impl.KnowledgeBaseFactory;\n import org.drools.core.impl.KnowledgeBaseImpl;\n import org.drools.persistence.jta.JtaTransactionManager;\n-import org.jbpm.persistence.map.impl.ProcessCreatorForHelp;\n-import org.jbpm.persistence.scripts.oldentities.ProcessInstanceInfo;\n-import org.jbpm.persistence.scripts.oldentities.SessionInfo;\n-import org.jbpm.persistence.scripts.oldentities.TaskImpl;\n-import org.jbpm.persistence.scripts.util.SQLCommandUtil;\n-import org.jbpm.persistence.scripts.util.SQLScriptUtil;\n-import org.jbpm.persistence.scripts.util.TestsUtil;\n-import org.jbpm.persistence.util.PersistenceUtil;\n-import org.kie.test.util.db.PoolingDataSourceWrapper;\n+import org.jbpm.test.persistence.scripts.util.SQLCommandUtil;\n+import org.jbpm.test.persistence.scripts.util.SQLScriptUtil;\n+import org.jbpm.test.persistence.scripts.util.TestsUtil;\n+import org.jbpm.test.persistence.util.PersistenceUtil;\n+import org.jbpm.test.persistence.util.ProcessCreatorForHelp;\n import org.kie.api.KieBase;\n import org.kie.api.runtime.Environment;\n import org.kie.api.runtime.EnvironmentName;\n-import org.kie.api.task.model.I18NText;\n-import org.kie.api.task.model.OrganizationalEntity;\n import org.kie.internal.persistence.jpa.JPAKnowledgeService;\n import org.kie.internal.runtime.StatefulKnowledgeSession;\n-import org.kie.internal.task.api.TaskModelProvider;\n-import org.kie.internal.task.api.model.InternalI18NText;\n-import org.kie.internal.task.api.model.InternalOrganizationalEntity;\n-import org.kie.internal.task.api.model.InternalPeopleAssignments;\n-import org.kie.internal.task.api.model.InternalTaskData;\n+import org.kie.test.util.db.PoolingDataSourceWrapper;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER;\n-import static org.jbpm.persistence.scripts.DatabaseType.SQLSERVER2008;\n-import static org.jbpm.persistence.scripts.DatabaseType.SYBASE;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SQLSERVER2008;\n+import static org.jbpm.test.persistence.scripts.DatabaseType.SYBASE;\n \n /**\n  * Central context that hides persistence from tests, so there is no need to work with persistence in the tests\n  * (transactions etc).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNjYyOA=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg1NTI5OnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTo1ODo0NlrOF261zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1Mjo0MFrOF3imyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ==", "bodyText": "I think that these entities and also WorkItemHandlers are used specifically for jbpm-persistence tests, aren't they? In that case I think we can leave them in the jbpm-persistence module.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393131471", "createdAt": "2020-03-16T15:58:46Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.session.objects;\n+package org.jbpm.test.persistence.session.objects;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNjcxMQ==", "bodyText": "I agree.\nWill revert these classes", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393526711", "createdAt": "2020-03-17T08:56:41Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.session.objects;\n+package org.jbpm.test.persistence.session.objects;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4Mjk4NQ==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393782985", "createdAt": "2020-03-17T15:52:40Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntity.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.session.objects;\n+package org.jbpm.test.persistence.session.objects;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTQ3MQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg2MTE0OnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMDowN1rOF265fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1Mjo0OVrOF3inVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw==", "bodyText": "Is this needed? My understanding by the name of the class is that no getters/setters should be present.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393132413", "createdAt": "2020-03-16T16:00:07Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java", "diffHunk": "@@ -68,5 +69,9 @@ public int hashCode() {\n         hash = 41 * hash + (this.test != null ? this.test.hashCode() : 0);\n         return hash;\n     }\n+\n+    public String getTest() {\n+        return test;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyOTQ0Mg==", "bodyText": "Can't recall now why this was added but as we agreed to keep these classes in the jbpm-persistence module I won't make any of these changes.\nReverting this back.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393529442", "createdAt": "2020-03-17T09:01:45Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java", "diffHunk": "@@ -68,5 +69,9 @@ public int hashCode() {\n         hash = 41 * hash + (this.test != null ? this.test.hashCode() : 0);\n         return hash;\n     }\n+\n+    public String getTest() {\n+        return test;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MzEyNw==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393783127", "createdAt": "2020-03-17T15:52:49Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/session/objects/MyEntityOnlyFields.java", "diffHunk": "@@ -68,5 +69,9 @@ public int hashCode() {\n         hash = 41 * hash + (this.test != null ? this.test.hashCode() : 0);\n         return hash;\n     }\n+\n+    public String getTest() {\n+        return test;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQxMw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg2ODIwOnYy", "diffSide": "RIGHT", "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowMTo0NlrOF2699w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMDoyOTo0OVrOF3WN1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ==", "bodyText": "Probably again used just in jbpm-persistence tests?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393133559", "createdAt": "2020-03-16T16:01:46Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java", "diffHunk": "@@ -14,21 +14,25 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.map.impl;\n+package org.jbpm.test.persistence.util;\n \n import java.util.ArrayList;\n import java.util.List;\n \n import org.jbpm.process.core.Work;\n-import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n-import org.jbpm.process.core.impl.WorkImpl;\n-import org.jbpm.persistence.session.objects.Person;\n import org.jbpm.process.core.context.variable.Variable;\n+import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n import org.jbpm.process.core.event.EventTypeFilter;\n+import org.jbpm.process.core.impl.WorkImpl;\n import org.jbpm.ruleflow.core.RuleFlowProcess;\n+import org.jbpm.test.persistence.session.objects.Person;\n import org.jbpm.workflow.core.Node;\n import org.jbpm.workflow.core.impl.ConnectionImpl;\n-import org.jbpm.workflow.core.node.*;\n+import org.jbpm.workflow.core.node.EndNode;\n+import org.jbpm.workflow.core.node.EventNode;\n+import org.jbpm.workflow.core.node.StartNode;\n+import org.jbpm.workflow.core.node.SubProcessNode;\n+import org.jbpm.workflow.core.node.WorkItemNode;\n \n public class ProcessCreatorForHelp {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzMzI1MQ==", "bodyText": "This class is used by TestPersistenceContextBase class (one of the class we want to reuse) and it was located in the jbpm-installer module originally (now in the jbpm-test-util).\nSo this ProcessCreatorForHelp class is used by two classes, one in the jbpm-persistence  and one in the jbpm-test-util module.\nI would keep it in jbpm-test-util. What do you think?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393533251", "createdAt": "2020-03-17T09:08:29Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java", "diffHunk": "@@ -14,21 +14,25 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.map.impl;\n+package org.jbpm.test.persistence.util;\n \n import java.util.ArrayList;\n import java.util.List;\n \n import org.jbpm.process.core.Work;\n-import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n-import org.jbpm.process.core.impl.WorkImpl;\n-import org.jbpm.persistence.session.objects.Person;\n import org.jbpm.process.core.context.variable.Variable;\n+import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n import org.jbpm.process.core.event.EventTypeFilter;\n+import org.jbpm.process.core.impl.WorkImpl;\n import org.jbpm.ruleflow.core.RuleFlowProcess;\n+import org.jbpm.test.persistence.session.objects.Person;\n import org.jbpm.workflow.core.Node;\n import org.jbpm.workflow.core.impl.ConnectionImpl;\n-import org.jbpm.workflow.core.node.*;\n+import org.jbpm.workflow.core.node.EndNode;\n+import org.jbpm.workflow.core.node.EventNode;\n+import org.jbpm.workflow.core.node.StartNode;\n+import org.jbpm.workflow.core.node.SubProcessNode;\n+import org.jbpm.workflow.core.node.WorkItemNode;\n \n public class ProcessCreatorForHelp {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU3OTk4OA==", "bodyText": "Ah, then it's fine.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393579988", "createdAt": "2020-03-17T10:29:49Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/persistence/util/ProcessCreatorForHelp.java", "diffHunk": "@@ -14,21 +14,25 @@\n  * limitations under the License.\n  */\n \n-package org.jbpm.persistence.map.impl;\n+package org.jbpm.test.persistence.util;\n \n import java.util.ArrayList;\n import java.util.List;\n \n import org.jbpm.process.core.Work;\n-import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n-import org.jbpm.process.core.impl.WorkImpl;\n-import org.jbpm.persistence.session.objects.Person;\n import org.jbpm.process.core.context.variable.Variable;\n+import org.jbpm.process.core.datatype.impl.type.ObjectDataType;\n import org.jbpm.process.core.event.EventTypeFilter;\n+import org.jbpm.process.core.impl.WorkImpl;\n import org.jbpm.ruleflow.core.RuleFlowProcess;\n+import org.jbpm.test.persistence.session.objects.Person;\n import org.jbpm.workflow.core.Node;\n import org.jbpm.workflow.core.impl.ConnectionImpl;\n-import org.jbpm.workflow.core.node.*;\n+import org.jbpm.workflow.core.node.EndNode;\n+import org.jbpm.workflow.core.node.EventNode;\n+import org.jbpm.workflow.core.node.StartNode;\n+import org.jbpm.workflow.core.node.SubProcessNode;\n+import org.jbpm.workflow.core.node.WorkItemNode;\n \n public class ProcessCreatorForHelp {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMzU1OQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjg4NzIzOnYy", "diffSide": "RIGHT", "path": "jbpm-xes/src/test/java/org/jbpm/xes/XESPersistenceBase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowNjoxN1rOF27KJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MzowOVrOF3ioag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw==", "bodyText": "I guess jbpm-xes module then doesn't need to depend on jbpm-persistence-jpa test-jar artifact?", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393136677", "createdAt": "2020-03-16T16:06:17Z", "author": {"login": "MarianMacik"}, "path": "jbpm-xes/src/test/java/org/jbpm/xes/XESPersistenceBase.java", "diffHunk": "@@ -17,8 +17,9 @@\n package org.jbpm.xes;\n \n import java.util.Properties;\n-import org.jbpm.persistence.util.PersistenceUtil;\n+\n import org.jbpm.test.JbpmJUnitBaseTestCase;\n+import org.jbpm.test.persistence.util.PersistenceUtil;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU1MTUwMQ==", "bodyText": "Nice catch!\nRemoving jbpm-persistence-jpa dependencies from pom.xml (not needed)", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393551501", "createdAt": "2020-03-17T09:40:23Z", "author": {"login": "afalhambra"}, "path": "jbpm-xes/src/test/java/org/jbpm/xes/XESPersistenceBase.java", "diffHunk": "@@ -17,8 +17,9 @@\n package org.jbpm.xes;\n \n import java.util.Properties;\n-import org.jbpm.persistence.util.PersistenceUtil;\n+\n import org.jbpm.test.JbpmJUnitBaseTestCase;\n+import org.jbpm.test.persistence.util.PersistenceUtil;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MzQwMg==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393783402", "createdAt": "2020-03-17T15:53:09Z", "author": {"login": "afalhambra"}, "path": "jbpm-xes/src/test/java/org/jbpm/xes/XESPersistenceBase.java", "diffHunk": "@@ -17,8 +17,9 @@\n package org.jbpm.xes;\n \n import java.util.Properties;\n-import org.jbpm.persistence.util.PersistenceUtil;\n+\n import org.jbpm.test.JbpmJUnitBaseTestCase;\n+import org.jbpm.test.persistence.util.PersistenceUtil;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjY3Nw=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjkxMTc1OnYy", "diffSide": "RIGHT", "path": "jbpm-db-scripts/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoxMjowNVrOF27ZyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNTo1MzoyMVrOF3ipAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0MDY4MQ==", "bodyText": "This dependency is probably no longer needed as PersistenceUtil is now in jbpm-test-util? Can you please also check other modules as quite a lot of them used that class and because it is now migrated to jbpm-test-util we probably no longer need dependency on that test-jar.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393140681", "createdAt": "2020-03-16T16:12:05Z", "author": {"login": "MarianMacik"}, "path": "jbpm-db-scripts/pom.xml", "diffHunk": "@@ -0,0 +1,149 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.jbpm</groupId>\n+    <artifactId>jbpm</artifactId>\n+    <version>7.35.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>jbpm-db-scripts</artifactId>\n+  <name>jBPM :: DB Scripts resources</name>\n+\n+  <properties>\n+    <java.module.name>org.jbpm.dbscripts</java.module.name>\n+    <spotbugs.skip>true</spotbugs.skip>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-test-util</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.persistence</groupId>\n+      <artifactId>javax.persistence-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.activation</groupId>\n+          <artifactId>javax.activation-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.narayana.jta</groupId>\n+      <artifactId>narayana-jta</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-persistence-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-runtime-manager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-kie-services</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-human-task-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-human-task-audit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-executor</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-audit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-persistence-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-persistence-jpa</artifactId>\n+      <type>test-jar</type>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc4MzU1NA==", "bodyText": "Done.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r393783554", "createdAt": "2020-03-17T15:53:21Z", "author": {"login": "afalhambra"}, "path": "jbpm-db-scripts/pom.xml", "diffHunk": "@@ -0,0 +1,149 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+  <parent>\n+    <groupId>org.jbpm</groupId>\n+    <artifactId>jbpm</artifactId>\n+    <version>7.35.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>jbpm-db-scripts</artifactId>\n+  <name>jBPM :: DB Scripts resources</name>\n+\n+  <properties>\n+    <java.module.name>org.jbpm.dbscripts</java.module.name>\n+    <spotbugs.skip>true</spotbugs.skip>\n+  </properties>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-test-util</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>ch.qos.logback</groupId>\n+      <artifactId>logback-classic</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>commons-io</groupId>\n+      <artifactId>commons-io</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>javax.persistence</groupId>\n+      <artifactId>javax.persistence-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-core</artifactId>\n+      <scope>test</scope>\n+      <exclusions>\n+        <exclusion>\n+          <groupId>javax.activation</groupId>\n+          <artifactId>javax.activation-api</artifactId>\n+        </exclusion>\n+      </exclusions>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.hibernate</groupId>\n+      <artifactId>hibernate-entitymanager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jboss.narayana.jta</groupId>\n+      <artifactId>narayana-jta</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.kie</groupId>\n+      <artifactId>kie-internal</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.drools</groupId>\n+      <artifactId>drools-persistence-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-runtime-manager</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-kie-services</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-human-task-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-human-task-audit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-executor</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-audit</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-persistence-jpa</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.jbpm</groupId>\n+      <artifactId>jbpm-persistence-jpa</artifactId>\n+      <type>test-jar</type>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0MDY4MQ=="}, "originalCommit": {"oid": "03996a26e97d6187809adb8e43f4751a6d5bd149"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MzgxNDA5OnYy", "diffSide": "LEFT", "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/regression/ISOTimerTest.bpmn2", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDo1NToxMVrOF3_t8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzoyNDozMlrOF4Evew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1OTk1Mg==", "bodyText": "Just one thing I noticed is that for some reason (probably due to a whitespace) this file was included as well. But it's up to you if you want to revert it :)", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r394259952", "createdAt": "2020-03-18T10:55:11Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/regression/ISOTimerTest.bpmn2", "diffHunk": "@@ -1,150 +1,150 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "662a46ab24355fc0a56fe7ee72e8f7b8df9cdd8c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI2ODk0MA==", "bodyText": "No... actually it is due to the newline character/line separator, apparently that file was uploaded using CRTL windows style and when I saw it got changed in my laptop to LF linux style - think due to KIE coding standards I have in my Intellij.\nSo.. I guess it should be using LF instead of CRTL? that's why it is changed, nothing else.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r394268940", "createdAt": "2020-03-18T11:11:35Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/regression/ISOTimerTest.bpmn2", "diffHunk": "@@ -1,150 +1,150 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1OTk1Mg=="}, "originalCommit": {"oid": "662a46ab24355fc0a56fe7ee72e8f7b8df9cdd8c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0MjI2Nw==", "bodyText": "Ah, sure, no problem.", "url": "https://github.com/kiegroup/jbpm/pull/1605#discussion_r394342267", "createdAt": "2020-03-18T13:24:32Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/regression/ISOTimerTest.bpmn2", "diffHunk": "@@ -1,150 +1,150 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1OTk1Mg=="}, "originalCommit": {"oid": "662a46ab24355fc0a56fe7ee72e8f7b8df9cdd8c"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1824, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}