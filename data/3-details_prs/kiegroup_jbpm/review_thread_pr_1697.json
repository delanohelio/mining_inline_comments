{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTYwNjc4", "number": 1697, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoxOToyM1rOEMrHRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowNDozNFrOEQ9UhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzI0NzQxOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMjoxOToyM1rOGu7IjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODo1MTo1OFrOGvH3Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1NjUyNA==", "bodyText": "Is this really needed to be exposed in the model? Other setters are not part of the interface.\nMissing doc comment above.", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r451856524", "createdAt": "2020-07-08T22:19:23Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -66,6 +66,8 @@\n      */\n     CaseFileInstance getCaseFile();\n     \n+    void setCaseFile (CaseFileInstance  caseFileInstance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00b9945a2df703d81b8d1b64f705678d293fece1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA2NTA5MQ==", "bodyText": "Either we add this or we have to cast when setting the case file in case \"withData\" is true, I will incorporate the java doc.", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r452065091", "createdAt": "2020-07-09T08:51:58Z", "author": {"login": "fjtirado"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -66,6 +66,8 @@\n      */\n     CaseFileInstance getCaseFile();\n     \n+    void setCaseFile (CaseFileInstance  caseFileInstance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg1NjUyNA=="}, "originalCommit": {"oid": "00b9945a2df703d81b8d1b64f705678d293fece1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU0OTU5OnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjowNTowNVrOGxQrug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjowNTowNVrOGxQrug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwNjc0Ng==", "bodyText": "Missing owner in the javadoc params", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454306746", "createdAt": "2020-07-14T12:05:05Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "diffHunk": "@@ -234,6 +251,14 @@\n      */\n     Collection<CaseInstance> getCaseInstancesOwnedBy(String owner, List<CaseStatus> statuses, QueryContext queryContext);\n     \n+    /**\n+     * Returns all case instances owned by given user\n+     * @param statuses list of statuses that case should be in to match", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU1MTcwOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjowNTo0NFrOGxQtBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjowNTo0NFrOGxQtBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMwNzA3Ng==", "bodyText": "Could you switch them to be in the same order than in the method definition?", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454307076", "createdAt": "2020-07-14T12:05:44Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/CaseRuntimeDataService.java", "diffHunk": "@@ -249,6 +274,14 @@\n      */\n     Collection<CaseInstance> getCaseInstancesAnyRole(List<CaseStatus> statuses, QueryContext queryContext);\n     \n+    /**\n+     * Returns case instances that given user (via identity provider) is involved in in any role.\n+     * @param statuses statuses of the case instances\n+     * @param queryContext control parameters for the result e.g. sorting, paging\n+     * @param withData indicates if case file data should be included in the result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU3MzgwOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxMjozNlrOGxQ6QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxMjozNlrOGxQ6QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMDQ2NQ==", "bodyText": "Could you add a test for coverage this method? I think it's the only one missing for complete coverage", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454310465", "createdAt": "2020-07-14T12:12:36Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImpl.java", "diffHunk": "@@ -494,17 +507,19 @@ private int compareMilestones(CaseMilestoneInstance o1, CaseMilestoneInstance o2\n         return processInstances;\n     }\n \n-\n     @Override\n     public Collection<CaseInstance> getCaseInstancesOwnedBy(String owner, List<CaseStatus> statuses, QueryContext queryContext) {\n+        return getCaseInstancesOwnedBy(owner,statuses, false, queryContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "563289c73dcb100cf2d4448d2f6bf284f9df4dfb"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDIzNjEzOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDo1MDowOFrOGxXSTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo1MjoyN1rOGxewcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNDkyNA==", "bodyText": "Just a small typo\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Set case file information to this instance \n          \n          \n            \n                 * Sets case file information to this instance", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454414924", "createdAt": "2020-07-14T14:50:08Z", "author": {"login": "afalhambra"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -60,12 +58,18 @@\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified \n      *  </p>\n      */\n     CaseFileInstance getCaseFile();\n     \n+    \n+    /**\n+     * Set case file information to this instance ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNzMzMA==", "bodyText": "Good catch", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454537330", "createdAt": "2020-07-14T17:52:27Z", "author": {"login": "fjtirado"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -60,12 +58,18 @@\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified \n      *  </p>\n      */\n     CaseFileInstance getCaseFile();\n     \n+    \n+    /**\n+     * Set case file information to this instance ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxNDkyNA=="}, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDM3MDY3OnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNToxODozN1rOGxYl_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo1MzowM1rOGxexww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzNjM0OA==", "bodyText": "As there is only 1 single list as argument, it could be replaced with:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());\n          \n          \n            \n                        Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Collections.singletonList(CaseStatus.OPEN), true, new QueryContext());", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454436348", "createdAt": "2020-07-14T15:18:37Z", "author": {"login": "afalhambra"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -89,7 +89,7 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNzY2Nw==", "bodyText": "yes, thats better", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454537667", "createdAt": "2020-07-14T17:53:03Z", "author": {"login": "fjtirado"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -89,7 +89,7 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(Arrays.asList(CaseStatus.OPEN), true, new QueryContext());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQzNjM0OA=="}, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNDQyMzk5OnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNTozMDowOFrOGxZHOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNzo0ODozOFrOGxem9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0NDg1OA==", "bodyText": "not sure about this change? why not use true instead? or if that's not the aim of this test, why don't we keep it as it was originally?", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454444858", "createdAt": "2020-07-14T15:30:08Z", "author": {"login": "afalhambra"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java", "diffHunk": "@@ -513,7 +513,7 @@ public void testCaseWithSubCaseQuery() {\n \n             caseService.triggerAdHocFragment(MID_CASE_ID, \"Sub Case\", null);\n \n-            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(false,new QueryContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDUzNDkwMA==", "bodyText": "you are right, this is unneeded, so keeping the original", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r454534900", "createdAt": "2020-07-14T17:48:38Z", "author": {"login": "fjtirado"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/SubCaseServiceImplTest.java", "diffHunk": "@@ -513,7 +513,7 @@ public void testCaseWithSubCaseQuery() {\n \n             caseService.triggerAdHocFragment(MID_CASE_ID, \"Sub Case\", null);\n \n-            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n+            Collection<CaseInstance> caseInstances = caseRuntimeDataService.getCaseInstances(false,new QueryContext());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0NDg1OA=="}, "originalCommit": {"oid": "7ff2d94d992abda4305288917128bb0d29478971"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Njc0OTcwOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDo0MzowOFrOGzOW9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMToxNToxNFrOGzPK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NTgxMw==", "bodyText": "Add also a test for getCaseInstancesOwnedBy including withData=true", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r456365813", "createdAt": "2020-07-17T10:43:08Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -88,21 +89,12 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertEquals(FIRST_CASE_ID, cInstance.getCaseId());\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n+            \n+            List<CaseStatus> statuses = Collections.singletonList(CaseStatus.OPEN);\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n-            assertNotNull(instances);\n-\n-            assertEquals(1, instances.size());\n-            CaseInstance instance = instances.iterator().next();\n-            assertNotNull(instance);\n-\n-            assertEquals(FIRST_CASE_ID, instance.getCaseId());\n-            assertEquals(EMPTY_CASE_P_ID, instance.getCaseDefinitionId());\n-            assertEquals(\"my first case\", instance.getCaseDescription());\n-            assertEquals(USER, instance.getOwner());\n-            assertEquals(ProcessInstance.STATE_ACTIVE, instance.getStatus().intValue());\n-            assertEquals(deploymentUnit.getIdentifier(), instance.getDeploymentId());\n-            assertNotNull(instance.getStartedAt());\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstances(statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDefinition(EMPTY_CASE_P_ID, statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDeployment(deploymentUnit.getIdentifier(), statuses, true, new QueryContext()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347bd3867be57b8bb620275f2f20f6294600ed88"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM3OTEwOQ==", "bodyText": "Added in a different place", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r456379109", "createdAt": "2020-07-17T11:15:14Z", "author": {"login": "fjtirado"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseRuntimeDataServiceImplTest.java", "diffHunk": "@@ -88,21 +89,12 @@ public void testStartEmptyCaseWithCaseFile() {\n             assertEquals(FIRST_CASE_ID, cInstance.getCaseId());\n             assertNotNull(cInstance.getCaseFile());\n             assertEquals(\"my first case\", cInstance.getCaseFile().getData(\"name\"));\n+            \n+            List<CaseStatus> statuses = Collections.singletonList(CaseStatus.OPEN);\n \n-            Collection<CaseInstance> instances = caseRuntimeDataService.getCaseInstances(new QueryContext());\n-            assertNotNull(instances);\n-\n-            assertEquals(1, instances.size());\n-            CaseInstance instance = instances.iterator().next();\n-            assertNotNull(instance);\n-\n-            assertEquals(FIRST_CASE_ID, instance.getCaseId());\n-            assertEquals(EMPTY_CASE_P_ID, instance.getCaseDefinitionId());\n-            assertEquals(\"my first case\", instance.getCaseDescription());\n-            assertEquals(USER, instance.getOwner());\n-            assertEquals(ProcessInstance.STATE_ACTIVE, instance.getStatus().intValue());\n-            assertEquals(deploymentUnit.getIdentifier(), instance.getDeploymentId());\n-            assertNotNull(instance.getStartedAt());\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstances(statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDefinition(EMPTY_CASE_P_ID, statuses, true, new QueryContext()));\n+            assertCaseInstance(caseRuntimeDataService.getCaseInstancesByDeployment(deploymentUnit.getIdentifier(), statuses, true, new QueryContext()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2NTgxMw=="}, "originalCommit": {"oid": "347bd3867be57b8bb620275f2f20f6294600ed88"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjA3NjQzOnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozOTo1MlrOG1Youg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozOTo1MlrOG1Youg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYzMTM1NA==", "bodyText": "will  be empty - Unnecessary space between will and be :)", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r458631354", "createdAt": "2020-07-22T08:39:52Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-api/src/main/java/org/jbpm/casemgmt/api/model/instance/CaseInstance.java", "diffHunk": "@@ -60,12 +58,18 @@\n     /**\n      * Returns case file associated with this case.\n      * <p>\n-     *     Note: {@link CaseInstance#getCaseFile()} will always be empty.\n-     *     Refer to using {@link CaseService#getCaseFileInstance(String)} when access to case file information is needed.\n+     *     Note: {@link CaseInstance#getCaseFile()} will  be empty unless <code>withData</code> flag is specified ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8d3c5cbe92fcd133a02885b74aa15784e12c3d"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MjE3MzQ4OnYy", "diffSide": "RIGHT", "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowNDozNFrOG1Zjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwOTowNDozNFrOG1Zjhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY0NjQwNg==", "bodyText": "As in the previous PR, I would specifically create a test for that to not mix the focus of the test. For example this one is called testCaseRolesWithQueries so I don't expect it to test CaseFile retrieval for case instances.", "url": "https://github.com/kiegroup/jbpm/pull/1697#discussion_r458646406", "createdAt": "2020-07-22T09:04:34Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java", "diffHunk": "@@ -1840,20 +1840,27 @@ public void testCaseRolesWithQueries() {\n             instances = caseRuntimeDataService.getCaseInstancesAnyRole(status, new QueryContext());\n             assertNotNull(instances);\n             assertFalse(\"Opened case was returned when searching for cancelled case instances.\", instances.stream().anyMatch(n -> n.getCaseId().equals(caseId)));\n-\n+            \n             status = Arrays.asList(CaseStatus.OPEN);\n+            \n+            instances = caseRuntimeDataService.getCaseInstancesOwnedBy(\"john\", status, true, new QueryContext());\n+            assertNotNull(instances);\n+            assertEquals(1, instances.size());\n+            assertNotNull(instances.iterator().next().getCaseFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8d3c5cbe92fcd133a02885b74aa15784e12c3d"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}