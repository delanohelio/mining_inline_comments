{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NzY1NTgy", "number": 1685, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzozNDoyMVrOEH2UBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzo0NDo0N1rOEH2j0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjY1MzUwOnYy", "diffSide": "RIGHT", "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzozNDoyMVrOGnc2VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo1MjozMlrOGnj5jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMDMwOQ==", "bodyText": "This can be replaced with method reference:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThatThrownBy(() -> {\n          \n          \n            \n                        configureWrongProps();\n          \n          \n            \n                    }).isInstanceOf(IllegalArgumentException.class)\n          \n          \n            \n                    assertThatThrownBy(this::configureWrongProps).isInstanceOf(IllegalArgumentException.class)", "url": "https://github.com/kiegroup/jbpm/pull/1685#discussion_r444020309", "createdAt": "2020-06-23T07:34:21Z", "author": {"login": "afalhambra"}, "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "diffHunk": "@@ -161,44 +205,51 @@ public void testUserGroups() {\n \n     @Test\n     public void testUserNotExists() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         boolean exists = callback.existsUser(\"mike\");\n         assertFalse(exists);\n     }\n \n     @Test\n     public void testGroupNotExists() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         boolean exists = callback.existsGroup(\"HR\");\n         assertFalse(exists);\n     }\n \n     @Test\n     public void testNoUserGroups() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         List<String> groups = callback.getGroupsForUser(\"mike\");\n         assertNotNull(groups);\n         assertEquals(0, groups.size());\n \n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test\n     public void testInvalidConfiguration() {\n-\n-        Properties invalidProps = new Properties();\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(invalidProps);\n-        callback.getGroupsForUser(\"mike\");\n-        fail(\"Should fail as it does not have valid configuration\");\n-\n+        assertThatThrownBy(() -> {\n+            configureWrongProps();\n+        }).isInstanceOf(IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1366e8d9c19204bd251e712db364b92b8c2bbb1"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNTgyMA==", "bodyText": "Done", "url": "https://github.com/kiegroup/jbpm/pull/1685#discussion_r444135820", "createdAt": "2020-06-23T10:52:32Z", "author": {"login": "gmunozfe"}, "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "diffHunk": "@@ -161,44 +205,51 @@ public void testUserGroups() {\n \n     @Test\n     public void testUserNotExists() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         boolean exists = callback.existsUser(\"mike\");\n         assertFalse(exists);\n     }\n \n     @Test\n     public void testGroupNotExists() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         boolean exists = callback.existsGroup(\"HR\");\n         assertFalse(exists);\n     }\n \n     @Test\n     public void testNoUserGroups() {\n-\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(props);\n         List<String> groups = callback.getGroupsForUser(\"mike\");\n         assertNotNull(groups);\n         assertEquals(0, groups.size());\n \n     }\n \n-    @Test(expected = IllegalArgumentException.class)\n+    @Test\n     public void testInvalidConfiguration() {\n-\n-        Properties invalidProps = new Properties();\n-        DBUserGroupCallbackImpl callback = new DBUserGroupCallbackImpl(invalidProps);\n-        callback.getGroupsForUser(\"mike\");\n-        fail(\"Should fail as it does not have valid configuration\");\n-\n+        assertThatThrownBy(() -> {\n+            configureWrongProps();\n+        }).isInstanceOf(IllegalArgumentException.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMDMwOQ=="}, "originalCommit": {"oid": "e1366e8d9c19204bd251e712db364b92b8c2bbb1"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjY5Mzk0OnYy", "diffSide": "RIGHT", "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzo0NDo0N1rOGndOjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDo1Mjo1MFrOGnj6FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyNjUwOQ==", "bodyText": "maybe we can restrict a little access modifier here, not a big issue. Maybe private or protected?", "url": "https://github.com/kiegroup/jbpm/pull/1685#discussion_r444026509", "createdAt": "2020-06-23T07:44:47Z", "author": {"login": "afalhambra"}, "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "diffHunk": "@@ -34,12 +41,34 @@\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n \n+@RunWith(Parameterized.class)\n public class DBUserGroupCallbackImplTest {\n \n+    public enum Configuration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1366e8d9c19204bd251e712db364b92b8c2bbb1"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEzNTk1Ng==", "bodyText": "Switched to protected", "url": "https://github.com/kiegroup/jbpm/pull/1685#discussion_r444135956", "createdAt": "2020-06-23T10:52:50Z", "author": {"login": "gmunozfe"}, "path": "jbpm-human-task/jbpm-human-task-core/src/test/java/org/jbpm/services/task/identity/DBUserGroupCallbackImplTest.java", "diffHunk": "@@ -34,12 +41,34 @@\n import org.junit.After;\n import org.junit.Before;\n import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n \n+@RunWith(Parameterized.class)\n public class DBUserGroupCallbackImplTest {\n \n+    public enum Configuration {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyNjUwOQ=="}, "originalCommit": {"oid": "e1366e8d9c19204bd251e712db364b92b8c2bbb1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1739, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}