{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMzQxMTg1", "number": 1589, "title": "[JBPM-9002] no catching timer for parallel task or subprocess", "bodyText": "register boundary events for multiple instance loop.", "createdAt": "2020-02-03T14:14:45Z", "url": "https://github.com/kiegroup/jbpm/pull/1589", "merged": true, "mergeCommit": {"oid": "cf161c7d548a1dbc11a33889c7b0a18fa1b9fb1d"}, "closed": true, "closedAt": "2021-04-08T06:53:10Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABeH4Y2UgBqjQ1MjE0MDI3MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeKtgsQAFqTYyOTcxMjA4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "625c61fffb42557280e7ddf9216b05748301ad83", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/625c61fffb42557280e7ddf9216b05748301ad83", "committedDate": "2020-02-03T14:06:02Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess\n\nregister boundary events for multiple instance loop."}, "afterCommit": {"oid": "ca6bd004065ce37a55a2c83a88164a1bd3c0ce1a", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/ca6bd004065ce37a55a2c83a88164a1bd3c0ce1a", "committedDate": "2021-03-29T13:06:15Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca6bd004065ce37a55a2c83a88164a1bd3c0ce1a", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/ca6bd004065ce37a55a2c83a88164a1bd3c0ce1a", "committedDate": "2021-03-29T13:06:15Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}, "afterCommit": {"oid": "c21f24b822f36ec50a61a95ecff5a7f9a8a1691e", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/c21f24b822f36ec50a61a95ecff5a7f9a8a1691e", "committedDate": "2021-03-30T07:19:43Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c21f24b822f36ec50a61a95ecff5a7f9a8a1691e", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/c21f24b822f36ec50a61a95ecff5a7f9a8a1691e", "committedDate": "2021-03-30T07:19:43Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}, "afterCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/db9d11845a3c7052d7f972ddb8e6339daca54c58", "committedDate": "2021-03-30T14:18:16Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1MDk5Mzgw", "url": "https://github.com/kiegroup/jbpm/pull/1589#pullrequestreview-625099380", "createdAt": "2021-03-31T09:48:07Z", "commit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMVQwOTo0ODowN1rOJAvR8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0zMVQxMToxNDozMlrOJAyfig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc1NDQxOA==", "bodyText": "This method is not used in the test. Perhaps you could also check in the test that there are 3 aborted items after boundary timer is triggered.", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604754418", "createdAt": "2021-03-31T09:48:07Z", "author": {"login": "gmunozfe"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/objects/TestWorkItemHandler.java", "diffHunk": "@@ -45,8 +49,14 @@ public WorkItem getWorkItem() {\n         }\n     }\n \n+    public List<WorkItem> getAbortedWorkItems() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc1NTM5MQ==", "bodyText": "You could also include that getAbortedWorkItems size is 3:\nassertThat(handler.getAbortedWorkItems().size()).isEqualTo(3);", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604755391", "createdAt": "2021-03-31T09:49:28Z", "author": {"login": "gmunozfe"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/IntermediateEventTest.java", "diffHunk": "@@ -2148,6 +2148,29 @@ public void testTimerMultipleInstances() throws Exception {\n         assertProcessInstanceFinished(processInstance, ksession);\n     }\n \n+    @Test\n+    public void testBoundaryTimerMultipleHumanTaskInstances() throws Exception {\n+        NodeLeftCountDownProcessEventListener countDownListener = new NodeLeftCountDownProcessEventListener(\"end1\", 1);\n+        KieBase kbase = createKnowledgeBaseWithoutDumper(\"BPMN2-MultiInstanceLoopHumanTaskWithBoundaryTimer.bpmn2\");\n+\n+        ksession = createKnowledgeSession(kbase);\n+        ksession.addEventListener(countDownListener);\n+        TestWorkItemHandler handler = new TestWorkItemHandler();\n+\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Human Task\", handler);\n+        ProcessInstance processInstance = ksession.startProcess(\"simple.parallel\");\n+        processInstance.getId();\n+        assertProcessInstanceActive(processInstance);\n+\n+        countDownListener.waitTillCompleted(5000L);\n+\n+        List<WorkItem> workItems = handler.getWorkItems();\n+        assertThat(workItems).isNotNull();\n+        assertThat(workItems.size()).isEqualTo(3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc3NzAzMg==", "bodyText": "It could also be added the invocation to abort the workitem:\nmanager.abortWorkItem(workItem.getId());", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604777032", "createdAt": "2021-03-31T10:22:38Z", "author": {"login": "gmunozfe"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/objects/TestWorkItemHandler.java", "diffHunk": "@@ -19,17 +19,21 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-import org.kie.api.runtime.process.*;\n+import org.kie.api.runtime.process.WorkItem;\n+import org.kie.api.runtime.process.WorkItemHandler;\n+import org.kie.api.runtime.process.WorkItemManager;\n \n public class TestWorkItemHandler implements WorkItemHandler {\n \n-    private List<WorkItem> workItems = new ArrayList<WorkItem>();\n+    private List<WorkItem> workItems = new ArrayList<>();\n+    private List<WorkItem> abortedWorkItems = new ArrayList<>();\n \n     public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {\n         workItems.add(workItem);\n     }\n \n     public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {\n+        abortedWorkItems.add(workItem);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc4NjkwNw==", "bodyText": "this line seems useless, it can be removed", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604786907", "createdAt": "2021-03-31T10:39:07Z", "author": {"login": "gmunozfe"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/IntermediateEventTest.java", "diffHunk": "@@ -2148,6 +2148,29 @@ public void testTimerMultipleInstances() throws Exception {\n         assertProcessInstanceFinished(processInstance, ksession);\n     }\n \n+    @Test\n+    public void testBoundaryTimerMultipleHumanTaskInstances() throws Exception {\n+        NodeLeftCountDownProcessEventListener countDownListener = new NodeLeftCountDownProcessEventListener(\"end1\", 1);\n+        KieBase kbase = createKnowledgeBaseWithoutDumper(\"BPMN2-MultiInstanceLoopHumanTaskWithBoundaryTimer.bpmn2\");\n+\n+        ksession = createKnowledgeSession(kbase);\n+        ksession.addEventListener(countDownListener);\n+        TestWorkItemHandler handler = new TestWorkItemHandler();\n+\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Human Task\", handler);\n+        ProcessInstance processInstance = ksession.startProcess(\"simple.parallel\");\n+        processInstance.getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc4ODU2MA==", "bodyText": "this method is not used at all, though it can be useful for future use, you can keep it", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604788560", "createdAt": "2021-03-31T10:41:57Z", "author": {"login": "gmunozfe"}, "path": "jbpm-test-util/src/main/java/org/jbpm/test/listener/process/DefaultCountDownProcessEventListener.java", "diffHunk": "@@ -51,6 +51,9 @@ public void waitTillCompleted() {\n         }\n     }\n \n+    public long count() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc4OTA5OQ==", "bodyText": "remove this blank line and add it at the end of the method (nitpicking)", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604789099", "createdAt": "2021-03-31T10:42:54Z", "author": {"login": "gmunozfe"}, "path": "jbpm-flow/src/main/java/org/jbpm/workflow/instance/node/ForEachNodeInstance.java", "diffHunk": "@@ -94,6 +94,16 @@ public ContextContainer getContextContainer() {\n         return getForEachNode().getCompositeNode();\n     }\n \n+    @Override\n+    public void triggerCompleted() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDgwNzA1MA==", "bodyText": "If all instances are really aborted, then the workItem node is finished and the flow continues also executing by this branch (in fact, there are 2 flows: boundary and workitem output)", "url": "https://github.com/kiegroup/jbpm/pull/1589#discussion_r604807050", "createdAt": "2021-03-31T11:14:32Z", "author": {"login": "gmunozfe"}, "path": "jbpm-bpmn2/src/test/java/org/jbpm/bpmn2/objects/TestWorkItemHandler.java", "diffHunk": "@@ -19,17 +19,21 @@\n import java.util.ArrayList;\n import java.util.List;\n \n-import org.kie.api.runtime.process.*;\n+import org.kie.api.runtime.process.WorkItem;\n+import org.kie.api.runtime.process.WorkItemHandler;\n+import org.kie.api.runtime.process.WorkItemManager;\n \n public class TestWorkItemHandler implements WorkItemHandler {\n \n-    private List<WorkItem> workItems = new ArrayList<WorkItem>();\n+    private List<WorkItem> workItems = new ArrayList<>();\n+    private List<WorkItem> abortedWorkItems = new ArrayList<>();\n \n     public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {\n         workItems.add(workItem);\n     }\n \n     public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {\n+        abortedWorkItems.add(workItem);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNDc3NzAzMg=="}, "originalCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc0dff68f67a991aa2cce0c12c2290d016a49c53", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/dc0dff68f67a991aa2cce0c12c2290d016a49c53", "committedDate": "2021-04-07T07:05:55Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db9d11845a3c7052d7f972ddb8e6339daca54c58", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/db9d11845a3c7052d7f972ddb8e6339daca54c58", "committedDate": "2021-03-30T14:18:16Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}, "afterCommit": {"oid": "dc0dff68f67a991aa2cce0c12c2290d016a49c53", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/dc0dff68f67a991aa2cce0c12c2290d016a49c53", "committedDate": "2021-04-07T07:05:55Z", "message": "[JBPM-9002] no catching timer for parallel task or subprocess"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI5NzEyMDg5", "url": "https://github.com/kiegroup/jbpm/pull/1589#pullrequestreview-629712089", "createdAt": "2021-04-07T08:09:04Z", "commit": {"oid": "dc0dff68f67a991aa2cce0c12c2290d016a49c53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1031, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}