{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NDc0NDQy", "number": 1637, "title": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table", "bodyText": "trim string in execution error info so it does truncate when info does not fit the column", "createdAt": "2020-04-21T06:48:28Z", "url": "https://github.com/kiegroup/jbpm/pull/1637", "merged": true, "mergeCommit": {"oid": "d5538b18f3e3f560f80d203dc517f138e6307279"}, "closed": true, "closedAt": "2020-05-05T06:34:44Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccB9-zAFqTQwMTY0Mzc3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccn4Z0ABqjMyODc5MTg1Nzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjQzNzc1", "url": "https://github.com/kiegroup/jbpm/pull/1637#pullrequestreview-401643775", "createdAt": "2020-04-28T09:09:44Z", "commit": {"oid": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTowOTo0NFrOGNKbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxMToxMjowOFrOGNO7Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1NTQ0MA==", "bodyText": "Remove or update the comment", "url": "https://github.com/kiegroup/jbpm/pull/1637#discussion_r416455440", "createdAt": "2020-04-28T09:09:44Z", "author": {"login": "gmunozfe"}, "path": "jbpm-runtime-manager/src/test/java/org/jbpm/runtime/manager/impl/error/ExecutionErrorInfoTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.runtime.manager.impl.error;\n+\n+import java.util.Random;\n+\n+import org.assertj.core.api.Assertions;\n+import org.jbpm.runtime.manager.impl.jpa.ExecutionErrorInfo;\n+import org.junit.After;\n+import org.junit.Test;\n+\n+public class ExecutionErrorInfoTest {\n+\n+    @After\n+    public void tearUp() {\n+        System.clearProperty(\"org.kie.jbpm.error.log.length\");\n+    }\n+    @Test\n+    public void testTrimmedErrorMessage() {\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        String randomString = randomString(300);\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(255);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString.substring(0, 255));\n+    }\n+\n+    @Test\n+    public void testTrimmedNotDefaultErrorMessage() {\n+        System.setProperty(\"org.kie.jbpm.error.log.length\", \"5\");\n+        String randomString = randomString(100);\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(5);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString.substring(0, 5));\n+    }\n+\n+    @Test\n+    public void testDefaultErrorMessage() {\n+        String randomString = randomString(100);\n+        ExecutionErrorInfo info = new ExecutionErrorInfo();\n+        info.setErrorMessage(randomString);\n+        Assertions.assertThat(info.getErrorMessage().length()).isEqualTo(100);\n+        Assertions.assertThat(info.getErrorMessage()).isEqualTo(randomString);\n+    }\n+\n+    private String randomString(int size) {\n+        char[] array = new char[size]; // length is bounded by 7", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjUyOTIxOA==", "bodyText": "Perhaps we may use Apache Commons Lang abbreviate method, adding 3 dots at the end, to indicate that it's trimmed. Notice that this method would throw IllegalArgumentException if length is equal or less than 3 (should not be a common length to use). What do you think?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    String trimmedErrorMessage = errorMessage;\n          \n          \n            \n                    if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {\n          \n          \n            \n                        trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);\n          \n          \n            \n                    }\n          \n          \n            \n                    super.setErrorMessage(trimmedErrorMessage);\n          \n          \n            \n                    super.setErrorMessage(StringUtils.abbreviate(errorMessage, ERROR_LOG_LENGTH));", "url": "https://github.com/kiegroup/jbpm/pull/1637#discussion_r416529218", "createdAt": "2020-04-28T11:12:08Z", "author": {"login": "gmunozfe"}, "path": "jbpm-runtime-manager/src/main/java/org/jbpm/runtime/manager/impl/jpa/ExecutionErrorInfo.java", "diffHunk": "@@ -103,6 +105,15 @@ public Long getActivityId() {\n         return super.getActivityId();\n     }\n \n+    @Override\n+    public void setErrorMessage(String errorMessage) {\n+        String trimmedErrorMessage = errorMessage;\n+        if (trimmedErrorMessage != null && trimmedErrorMessage.length() > ERROR_LOG_LENGTH) {\n+            trimmedErrorMessage = trimmedErrorMessage.substring(0, ERROR_LOG_LENGTH);\n+        }\n+        super.setErrorMessage(trimmedErrorMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff351582cd2a7926bb1401ab2ced5496702ccbcf", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/ff351582cd2a7926bb1401ab2ced5496702ccbcf", "committedDate": "2020-04-30T07:23:39Z", "message": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table\n\ntrim string in execution error info so it does truncate when info does not fit the column"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/2d9a2564f0e3b7da6154acd1fb8cd2bd07ccc5f7", "committedDate": "2020-04-21T06:47:45Z", "message": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table\n\ntrim string in execution error info so it does truncate when info does not fit the column"}, "afterCommit": {"oid": "ff351582cd2a7926bb1401ab2ced5496702ccbcf", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/ff351582cd2a7926bb1401ab2ced5496702ccbcf", "committedDate": "2020-04-30T07:23:39Z", "message": "[RHPAM-2903] 255 characters limitation in ExecutionErrorInfo database table\n\ntrim string in execution error info so it does truncate when info does not fit the column"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 877, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}