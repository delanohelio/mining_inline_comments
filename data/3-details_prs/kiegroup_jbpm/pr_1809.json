{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MzI0ODA2", "number": 1809, "title": "JBPM-9484 Improve BPMN -> FEEL integration", "bodyText": "JIRA: https://issues.redhat.com/browse/JBPM-9484\nreferenced Pull Requests: none\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-11-24T09:07:11Z", "url": "https://github.com/kiegroup/jbpm/pull/1809", "merged": true, "mergeCommit": {"oid": "1a9d3174f123cabb36eef6b5d978e22e1c33b081"}, "closed": true, "closedAt": "2020-11-25T07:36:18Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfmAEGgH2gAyNTI2MzI0ODA2OmUzZjgyMTM3MzY3YTUxN2QxMDY3ZGRlYTI1NzMxYjgzYjIwM2ZjNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfpbdHgH2gAyNTI2MzI0ODA2OjcyZGRlYTdlYmJlNjkxNmVkZGYwZjNlNjNjZmY4YWYwMmZiMTQyZTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3f82137367a517d1067ddea25731b83b203fc70", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/jbpm/commit/e3f82137367a517d1067ddea25731b83b203fc70", "committedDate": "2020-11-24T09:05:21Z", "message": "JBPM-9484 Improve BPMN -> FEEL integration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzQxMjQ0", "url": "https://github.com/kiegroup/jbpm/pull/1809#pullrequestreview-537341244", "createdAt": "2020-11-24T10:17:51Z", "commit": {"oid": "e3f82137367a517d1067ddea25731b83b203fc70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNzo1MVrOH44Y0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNzo1MVrOH44Y0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwNjE2MQ==", "bodyText": "If we want to process all events generated by the listener and do not fail with the first error, I guess we will need something like\nStringBuilder errorMessage = new StringBuilder();\nfor (FeelEvent : listerner.getEvents()) {\n    processEvent(event,errorMessage);\n}\nif (errorMessage.length()>0) { throw new FeelReturnValueEvaluatorException(errorMessage);}\n\nand  processEvent method\n\nprivate static void processEvent(FEELEvent event, StringBuilder messageBuilder) {\n\n....\n case ERROR:\n              messageBuilder.append(event.getSeverity().toString()).append(\" \").append(event.getMessage());\n                if (event.getOffendingSymbol() != null) {\n                    messageBuilder.append(\" ( offending symbol: '\").append(event.getOffendingSymbol()).append(\"' )\");\n                }\n                if (event.getSourceException() != null) {\n                    messageBuilder.append(\"  \").append(event.getSourceException().getMessage());\n                }\n                 break;\n.....\n}", "url": "https://github.com/kiegroup/jbpm/pull/1809#discussion_r529406161", "createdAt": "2020-11-24T10:17:51Z", "author": {"login": "fjtirado"}, "path": "jbpm-flow/src/main/java/org/jbpm/process/instance/impl/FeelReturnValueEvaluator.java", "diffHunk": "@@ -74,16 +78,17 @@ public Object evaluate(ProcessContext context) throws Exception {\n             VariableScopeInstance variableScope = (VariableScopeInstance) ((WorkflowProcessInstance)context.getProcessInstance())\n                     .getContextInstance(VariableScope.VARIABLE_SCOPE);\n     \n-            if (variables != null ) {\n-                variables.putAll(variableScope.getVariables());\n-            }\n+            variables.putAll(variableScope.getVariables());\n         }\n         DMNRuntime runtime = ((KieSession) context.getKieRuntime()).getKieRuntime(DMNRuntime.class);\n         List<FEELProfile> profiles = (List)((DMNRuntimeImpl) runtime).getProfiles();\n         FEEL feel = FEEL.newInstance(runtime.getRootClassLoader(), profiles);\n+        FeelReturnValueEvaluatorListener listener = new FeelReturnValueEvaluatorListener();\n+        feel.addListener(listener);\n         \n         Object value = feel.evaluate(expr, variables);\n \n+        listener.getEvents().forEach(FeelReturnValueEvaluator::processEvents);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f82137367a517d1067ddea25731b83b203fc70"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45145a4a5352c904bf7c02baab1cf1a94a9ac6f8", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/jbpm/commit/45145a4a5352c904bf7c02baab1cf1a94a9ac6f8", "committedDate": "2020-11-24T10:53:03Z", "message": "implement codereview feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3Mzc1NzY0", "url": "https://github.com/kiegroup/jbpm/pull/1809#pullrequestreview-537375764", "createdAt": "2020-11-24T10:58:33Z", "commit": {"oid": "45145a4a5352c904bf7c02baab1cf1a94a9ac6f8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDE3Mjk5", "url": "https://github.com/kiegroup/jbpm/pull/1809#pullrequestreview-537417299", "createdAt": "2020-11-24T11:54:36Z", "commit": {"oid": "45145a4a5352c904bf7c02baab1cf1a94a9ac6f8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NDozN1rOH49crA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMTo1NDozN1rOH49crA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ4OTA2OA==", "bodyText": "Considering that it collects only ERROR events, what about rename it as\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FeelReturnValueEvaluatorListener implements FEELEventListener {\n          \n          \n            \n            public class FeelErrorEvaluatorListener implements FEELEventListener {", "url": "https://github.com/kiegroup/jbpm/pull/1809#discussion_r529489068", "createdAt": "2020-11-24T11:54:37Z", "author": {"login": "danielezonca"}, "path": "jbpm-flow/src/main/java/org/jbpm/process/instance/impl/FeelReturnValueEvaluatorListener.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jbpm.process.instance.impl;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.kie.dmn.api.feel.runtime.events.FEELEvent;\n+import org.kie.dmn.api.feel.runtime.events.FEELEventListener;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class FeelReturnValueEvaluatorListener implements FEELEventListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45145a4a5352c904bf7c02baab1cf1a94a9ac6f8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91476c52484f4cbe796202091c6be6c14204b417", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/jbpm/commit/91476c52484f4cbe796202091c6be6c14204b417", "committedDate": "2020-11-24T13:03:09Z", "message": "improve sonarcloud score"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ddea7ebbe6916eddf0f3e63cff8af02fb142e8", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/jbpm/commit/72ddea7ebbe6916eddf0f3e63cff8af02fb142e8", "committedDate": "2020-11-24T13:04:59Z", "message": "Rename listener name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 856, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}