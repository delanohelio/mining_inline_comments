{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NDUxNjgw", "number": 1797, "title": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true", "bodyText": "Jira: https://issues.redhat.com/browse/JBPM-9459", "createdAt": "2020-11-10T12:23:30Z", "url": "https://github.com/kiegroup/jbpm/pull/1797", "merged": true, "mergeCommit": {"oid": "402894e7b9e5cd1ba2efcf31ac62224ec1524472"}, "closed": true, "closedAt": "2020-11-12T14:45:44Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbJS15gBqjM5Nzg4ODA5MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbxIYzAFqTUyOTAwODU0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98954e3a71121611f3684cc07083673c05aec927", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/98954e3a71121611f3684cc07083673c05aec927", "committedDate": "2020-11-10T12:22:49Z", "message": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true"}, "afterCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341", "committedDate": "2020-11-10T13:20:17Z", "message": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MTU0ODIx", "url": "https://github.com/kiegroup/jbpm/pull/1797#pullrequestreview-528154821", "createdAt": "2020-11-11T13:07:00Z", "commit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxMzowNzowMFrOHxMYpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMDo0NDoyMlrOHx08iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTM0NTE4OA==", "bodyText": "typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // we need to abort first otherwise the end node will completed the process normally (something that should not happen\n          \n          \n            \n                            // we need to abort first otherwise the end node will complete the process normally (something that should not happen)", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521345188", "createdAt": "2020-11-11T13:07:00Z", "author": {"login": "afalhambra"}, "path": "jbpm-flow/src/main/java/org/jbpm/workflow/instance/node/EventSubProcessNodeInstance.java", "diffHunk": "@@ -79,21 +79,23 @@ public void nodeInstanceCompleted(org.jbpm.workflow.instance.NodeInstance nodeIn\n         if (nodeInstance instanceof EndNodeInstance) { \n             if (getCompositeNode().isKeepActive()) {\n                 StartNode startNode = getCompositeNode().findStartNode();\n-                triggerCompleted(true);\n+\n+                // we need to abort first otherwise the end node will completed the process normally (something that should not happen", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5MTQ5Mw==", "bodyText": "please change package name\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <bpmn2:process id=\"nested-abort.exception\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"exception\" isExecutable=\"true\" processType=\"Public\">\n          \n          \n            \n              <bpmn2:process id=\"nested-abort.exception\" drools:packageName=\"org.jbpm.test.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"exception\" isExecutable=\"true\" processType=\"Public\">", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521991493", "createdAt": "2020-11-12T10:15:47Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/Exception.bpmn2", "diffHunk": "@@ -0,0 +1,286 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_0S1DcBjUEeunWshXBgPhRw\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ConnectTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ContentDataInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_MethodInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_PasswordInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ReadTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_UrlInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_UsernameInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ConnectTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ContentDataInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_PasswordInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ReadTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UsernameInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:process id=\"nested-abort.exception\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"exception\" isExecutable=\"true\" processType=\"Public\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5MjA3MQ==", "bodyText": "There's no need for a second task call actually. This can be removed.", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521992071", "createdAt": "2020-11-12T10:16:41Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/Exception.bpmn2", "diffHunk": "@@ -0,0 +1,286 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_0S1DcBjUEeunWshXBgPhRw\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ConnectTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ContentDataInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_MethodInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_PasswordInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_ReadTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_UrlInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__1DBE0765-593C-45A8-B3AA-337A64D3062E_UsernameInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ConnectTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ContentDataInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_PasswordInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ReadTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UsernameInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:process id=\"nested-abort.exception\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"exception\" isExecutable=\"true\" processType=\"Public\">\n+    <bpmn2:sequenceFlow id=\"_41FDCB68-AD96-4E54-847F-6CA248DE0D64\" sourceRef=\"_1DBE0765-593C-45A8-B3AA-337A64D3062E\" targetRef=\"_998B99CB-C057-44EC-80F8-0C1C67632319\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_DA62AAE0-2F86-426E-BB72-35B82267F16B\" sourceRef=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526\" targetRef=\"_1DBE0765-593C-45A8-B3AA-337A64D3062E\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_44F0D147-486A-4142-8F8B-0C1A1494D245\" sourceRef=\"_26C4F040-851F-4EDA-9222-23BAA7B05B64\" targetRef=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.source\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:sequenceFlow id=\"_3CCDD702-7C2D-44A3-99C6-EF7AC511C461\" sourceRef=\"_E5580B86-C933-4E61-AFA7-DBD56F59746E\" targetRef=\"_26C4F040-851F-4EDA-9222-23BAA7B05B64\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"isAutoConnection.target\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+    </bpmn2:sequenceFlow>\n+    <bpmn2:endEvent id=\"_998B99CB-C057-44EC-80F8-0C1C67632319\">\n+      <bpmn2:incoming>_41FDCB68-AD96-4E54-847F-6CA248DE0D64</bpmn2:incoming>\n+    </bpmn2:endEvent>\n+    <bpmn2:task id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526\" drools:taskName=\"Rest\" name=\"REST\">\n+      <bpmn2:extensionElements>\n+        <drools:metaData name=\"elementname\">\n+          <drools:metaValue><![CDATA[REST]]></drools:metaValue>\n+        </drools:metaData>\n+        <drools:metaData name=\"customAsync\">\n+          <drools:metaValue><![CDATA[true]]></drools:metaValue>\n+        </drools:metaData>\n+      </bpmn2:extensionElements>\n+      <bpmn2:incoming>_44F0D147-486A-4142-8F8B-0C1A1494D245</bpmn2:incoming>\n+      <bpmn2:outgoing>_DA62AAE0-2F86-426E-BB72-35B82267F16B</bpmn2:outgoing>\n+      <bpmn2:ioSpecification id=\"_0S1DcRjUEeunWshXBgPhRw\">\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ConnectTimeoutInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ConnectTimeoutInputXItem\" name=\"ConnectTimeout\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ContentDataInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ContentDataInputXItem\" name=\"ContentData\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputXItem\" name=\"Method\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_PasswordInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_PasswordInputXItem\" name=\"Password\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ReadTimeoutInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ReadTimeoutInputXItem\" name=\"ReadTimeout\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputXItem\" name=\"Url\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UsernameInputX\" drools:dtype=\"String\" itemSubjectRef=\"__C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UsernameInputXItem\" name=\"Username\"/>\n+        <bpmn2:dataInput id=\"_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_TaskNameInputX\" drools:dtype=\"Object\" name=\"TaskName\"/>\n+        <bpmn2:inputSet id=\"_0S1DchjUEeunWshXBgPhRw\">\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ConnectTimeoutInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ContentDataInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_PasswordInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_ReadTimeoutInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UsernameInputX</bpmn2:dataInputRefs>\n+          <bpmn2:dataInputRefs>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_TaskNameInputX</bpmn2:dataInputRefs>\n+        </bpmn2:inputSet>\n+        <bpmn2:outputSet id=\"_0S1DcxjUEeunWshXBgPhRw\"/>\n+      </bpmn2:ioSpecification>\n+      <bpmn2:dataInputAssociation id=\"_0S1DdBjUEeunWshXBgPhRw\">\n+        <bpmn2:targetRef>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputX</bpmn2:targetRef>\n+        <bpmn2:assignment id=\"_0S1DdRjUEeunWshXBgPhRw\">\n+          <bpmn2:from xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DdhjUEeunWshXBgPhRw\"><![CDATA[GET]]></bpmn2:from>\n+          <bpmn2:to xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DdxjUEeunWshXBgPhRw\">_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_MethodInputX</bpmn2:to>\n+        </bpmn2:assignment>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_0S1DeBjUEeunWshXBgPhRw\">\n+        <bpmn2:targetRef>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputX</bpmn2:targetRef>\n+        <bpmn2:assignment id=\"_0S1DeRjUEeunWshXBgPhRw\">\n+          <bpmn2:from xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DehjUEeunWshXBgPhRw\"><![CDATA[https://www.google.com]]></bpmn2:from>\n+          <bpmn2:to xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DexjUEeunWshXBgPhRw\">_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_UrlInputX</bpmn2:to>\n+        </bpmn2:assignment>\n+      </bpmn2:dataInputAssociation>\n+      <bpmn2:dataInputAssociation id=\"_0S1DfBjUEeunWshXBgPhRw\">\n+        <bpmn2:targetRef>_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_TaskNameInputX</bpmn2:targetRef>\n+        <bpmn2:assignment id=\"_0S1DfRjUEeunWshXBgPhRw\">\n+          <bpmn2:from xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DfhjUEeunWshXBgPhRw\"><![CDATA[Rest]]></bpmn2:from>\n+          <bpmn2:to xsi:type=\"bpmn2:tFormalExpression\" id=\"_0S1DfxjUEeunWshXBgPhRw\">_C48C30F9-F9BF-43B8-A1FC-46CB271B5526_TaskNameInputX</bpmn2:to>\n+        </bpmn2:assignment>\n+      </bpmn2:dataInputAssociation>\n+    </bpmn2:task>\n+    <bpmn2:task id=\"_1DBE0765-593C-45A8-B3AA-337A64D3062E\" drools:taskName=\"Rest\" name=\"REST\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5NDE2Nw==", "bodyText": "please change package name\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <bpmn2:process id=\"nested-abort.level1P\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level1P\" isExecutable=\"true\" processType=\"Public\">\n          \n          \n            \n              <bpmn2:process id=\"nested-abort.level1P\" drools:packageName=\"org.jbpm.test.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level1P\" isExecutable=\"true\" processType=\"Public\">", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521994167", "createdAt": "2020-11-12T10:19:58Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/Level1P.bpmn2", "diffHunk": "@@ -0,0 +1,147 @@\n+<bpmn2:definitions xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_jVei4PC-EDifGe5PaIYmug\" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:process id=\"nested-abort.level1P\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level1P\" isExecutable=\"true\" processType=\"Public\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5NDY2Mw==", "bodyText": "please change package name\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <bpmn2:process id=\"nested-abort.level2C\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level2C\" isExecutable=\"true\" processType=\"Public\">\n          \n          \n            \n              <bpmn2:process id=\"nested-abort.level2C\" drools:packageName=\"org.jbpm.test.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level2C\" isExecutable=\"true\" processType=\"Public\">", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521994663", "createdAt": "2020-11-12T10:20:44Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/Level2C.bpmn2", "diffHunk": "@@ -0,0 +1,145 @@\n+<bpmn2:definitions xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_lJnaAPC-EDiFTownq8X-mw\" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:process id=\"nested-abort.level2C\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level2C\" isExecutable=\"true\" processType=\"Public\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5NTc5OA==", "bodyText": "please change package name\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              <bpmn2:process id=\"nested-abort.level3SC\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level3SC\" isExecutable=\"true\" processType=\"Public\">\n          \n          \n            \n              <bpmn2:process id=\"nested-abort.level3SC\" drools:packageName=\"org.jbpm.test.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level3SC\" isExecutable=\"true\" processType=\"Public\">", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521995798", "createdAt": "2020-11-12T10:22:29Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/Level3SC.bpmn2", "diffHunk": "@@ -0,0 +1,204 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_VoC38A6eEeuLXvl6Y20vSQ\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:error id=\"java.lang.RuntimeException\" errorCode=\"java.lang.RuntimeException\"/>\n+  <bpmn2:process id=\"nested-abort.level3SC\" drools:packageName=\"com.bala.nested_abort\" drools:version=\"1.0\" drools:adHoc=\"false\" name=\"level3SC\" isExecutable=\"true\" processType=\"Public\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5Nzk2Mg==", "bodyText": "There is no such exception class in our tests. Please change to something else", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521997962", "createdAt": "2020-11-12T10:25:51Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/resources/org/jbpm/test/functional/async/SubProcess.bpmn2", "diffHunk": "@@ -0,0 +1,222 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<bpmn2:definitions xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://www.omg.org/bpmn20\" xmlns:bpmn2=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:bpsim=\"http://www.bpsim.org/schemas/1.0\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:drools=\"http://www.jboss.org/drools\" id=\"_D5j9MBjUEeunWshXBgPhRw\" xsi:schemaLocation=\"http://www.omg.org/spec/BPMN/20100524/MODEL BPMN20.xsd http://www.jboss.org/drools drools.xsd http://www.bpsim.org/schemas/1.0 bpsim.xsd http://www.omg.org/spec/DD/20100524/DC DC.xsd http://www.omg.org/spec/DD/20100524/DI DI.xsd \" exporter=\"jBPM Process Modeler\" exporterVersion=\"2.0\" targetNamespace=\"http://www.omg.org/bpmn20\">\n+  <bpmn2:itemDefinition id=\"_errorItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__CFC4ADC6-C14B-4F65-8F11-B898C39216C9_errorObjectInputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__747BA832-B68E-4E52-A5C7-838E052F8D1F_eOutputXItem\" structureRef=\"Object\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_MethodInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_UrlInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_ConnectTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_ContentDataInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_PasswordInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_ReadTimeoutInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_UsernameInputXItem\" structureRef=\"String\"/>\n+  <bpmn2:itemDefinition id=\"__9ABE6FBC-2131-4C38-9EBA-2FA551D7EB83_ResultOutputXItem\" structureRef=\"java.lang.Object\"/>\n+  <bpmn2:signal id=\"_32c760ea-a1dd-30e2-9bf0-63b9ce037d43\" name=\"MainProcessSignal\"/>\n+  <bpmn2:error id=\"com.test.cascade_abort.EMCRestAPIException\" errorCode=\"com.test.cascade_abort.EMCRestAPIException\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTk5ODkyOQ==", "bodyText": "Unused import - please remove\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import org.junit.Assert;", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r521998929", "createdAt": "2020-11-12T10:27:22Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -16,19 +16,30 @@\n \n package org.jbpm.test.functional.async;\n \n+import static java.util.Collections.emptyMap;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.jbpm.test.tools.TrackingListenerAssert.assertProcessStarted;\n+import static org.jbpm.test.tools.TrackingListenerAssert.assertTriggeredAndLeft;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n import org.jbpm.executor.ExecutorServiceFactory;\n import org.jbpm.kie.services.impl.admin.commands.TriggerNodeCommand;\n import org.jbpm.test.JbpmTestCase;\n import org.jbpm.test.listener.TrackingProcessEventListener;\n import org.junit.After;\n+import org.junit.Assert;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMDE3Ng==", "bodyText": "Isn't it too much? Actually child process 3, just directly throw a runtimeException so it should be pretty straight forward.", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522000176", "createdAt": "2020-11-12T10:29:21Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwMTY1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n          \n          \n            \n                            if(ERROR_MULTILEVEL_MAIN_PROCESS_ID.equals(event.getProcessInstance().getProcessId())) {", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522001659", "createdAt": "2020-11-12T10:31:40Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwNTc0Mw==", "bodyText": "It might be clearer\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n          \n          \n            \n                    assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(ProcessInstance.STATE_ABORTED));", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522005743", "createdAt": "2020-11-12T10:38:09Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwNjE0MA==", "bodyText": "is it not the same as previous assert?", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522006140", "createdAt": "2020-11-12T10:38:51Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwNjY4OA==", "bodyText": "I think we should also check the status of subprocess 2 and 3, as they must be in an aborted state", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522006688", "createdAt": "2020-11-12T10:39:43Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwNjkzMg==", "bodyText": "Same as previous test", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522006932", "createdAt": "2020-11-12T10:40:03Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwNzQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {\n          \n          \n            \n                            if(if(ERROR_ASYNC_MAIN_EXCEPTION_PROCESS_ID.equals(event.getProcessInstance().getProcessId())) {.equals(event.getProcessInstance().getProcessId())) {", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522007463", "createdAt": "2020-11-12T10:40:52Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)\n+    public void testErrorAsyncActivity() throws Exception {\n+\n+        KieSession ksession = createKSession(ERROR_ASYNC_CHILD_EXCEPTION_PROCESS,  ERROR_ASYNC_MAIN_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwODIzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n          \n          \n            \n                    assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(ProcessInstance.STATE_ABORTED));", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522008234", "createdAt": "2020-11-12T10:42:03Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)\n+    public void testErrorAsyncActivity() throws Exception {\n+\n+        KieSession ksession = createKSession(ERROR_ASYNC_CHILD_EXCEPTION_PROCESS,  ERROR_ASYNC_MAIN_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler(true));\n+        ProcessInstance pi = ksession.startProcess(ERROR_ASYNC_MAIN_EXCEPTION_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwODY2Nw==", "bodyText": "I think we should also check status of subprocess to verify it is also in an aborted status", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522008667", "createdAt": "2020-11-12T10:42:42Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)\n+    public void testErrorAsyncActivity() throws Exception {\n+\n+        KieSession ksession = createKSession(ERROR_ASYNC_CHILD_EXCEPTION_PROCESS,  ERROR_ASYNC_MAIN_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler(true));\n+        ProcessInstance pi = ksession.startProcess(ERROR_ASYNC_MAIN_EXCEPTION_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwOTU0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            // empty", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522009545", "createdAt": "2020-11-12T10:44:05Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)\n+    public void testErrorAsyncActivity() throws Exception {\n+\n+        KieSession ksession = createKSession(ERROR_ASYNC_CHILD_EXCEPTION_PROCESS,  ERROR_ASYNC_MAIN_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler(true));\n+        ProcessInstance pi = ksession.startProcess(ERROR_ASYNC_MAIN_EXCEPTION_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n \n+    class RestWorkItemHandler implements WorkItemHandler {\n \n+        \n+        private boolean throwException;\n+\n+        public RestWorkItemHandler() {\n+            this(false);\n+        }\n+        \n+        public RestWorkItemHandler(boolean throwException) {\n+            this.throwException = throwException;\n+        }\n+        \n+        @Override\n+        public void executeWorkItem(WorkItem workItem, WorkItemManager manager) {\n+            if(throwException) {\n+                throw new RuntimeException();\n+            }\n+            manager.completeWorkItem(workItem.getId(), emptyMap());\n+        }\n+\n+        @Override\n+        public void abortWorkItem(WorkItem workItem, WorkItemManager manager) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAwOTczNg==", "bodyText": "can be static\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                class RestWorkItemHandler implements WorkItemHandler {\n          \n          \n            \n                static class RestWorkItemHandler implements WorkItemHandler {", "url": "https://github.com/kiegroup/jbpm/pull/1797#discussion_r522009736", "createdAt": "2020-11-12T10:44:22Z", "author": {"login": "afalhambra"}, "path": "jbpm-test-coverage/src/test/java/org/jbpm/test/functional/async/AsyncAdHocSubprocessTest.java", "diffHunk": "@@ -91,6 +126,81 @@ public void testAdHocSubAsyncProcessAuto() throws Exception {\n         assertProcessInstanceAborted(id);\n     }\n \n+    @Test(timeout = 30000)\n+    public void testErrorMultilevelActivity() throws Exception {\n+\n+        \n+        \n+        KieSession ksession = createKSession(ERROR_MULTILEVEL_MAIN_PROCESS, ERROR_MULTILEVEL_CHILD_PROCESS, ERROR_MULTILEVEL_CHILD_CHILD_PROCESS, ERROR_MULTILEVEL_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"nested-abort.level1P\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler());\n+        ProcessInstance pi = ksession.startProcess(ERROR_MULTILEVEL_MAIN_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n+\n+    \n+\n+    @Test(timeout = 30000)\n+    public void testErrorAsyncActivity() throws Exception {\n+\n+        KieSession ksession = createKSession(ERROR_ASYNC_CHILD_EXCEPTION_PROCESS,  ERROR_ASYNC_MAIN_EXCEPTION_PROCESS);\n+        final CountDownLatch latch = new CountDownLatch(1);\n+        ksession.addEventListener(new DefaultProcessEventListener() {\n+            @Override\n+            public void afterProcessCompleted(ProcessCompletedEvent event) {\n+                if(\"cascade-abort.MainProcess\".equals(event.getProcessInstance().getProcessId())) {\n+                    latch.countDown();\n+                }\n+            }\n+        });\n+        ksession.getWorkItemManager().registerWorkItemHandler(\"Rest\", new RestWorkItemHandler(true));\n+        ProcessInstance pi = ksession.startProcess(ERROR_ASYNC_MAIN_EXCEPTION_PROCESS_ID);\n+        latch.await();\n+\n+        Thread.sleep(1000L);\n+        assertThat(getLogService().findProcessInstance(pi.getId()).getStatus(), is(3));\n+        assertProcessInstanceAborted(pi.getId());\n+ \n+    }\n \n+    class RestWorkItemHandler implements WorkItemHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf058d34e1feab742d65c9c9fb5f2ea16ea4f93b", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/cf058d34e1feab742d65c9c9fb5f2ea16ea4f93b", "committedDate": "2020-11-12T11:26:50Z", "message": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/6792e1ea4b8cdb2fd5c6b3a4f591ad75c8d5f341", "committedDate": "2020-11-10T13:20:17Z", "message": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true"}, "afterCommit": {"oid": "cf058d34e1feab742d65c9c9fb5f2ea16ea4f93b", "author": {"user": {"login": "elguardian", "name": "Enrique Gonz\u00e1lez Mart\u00ednez"}}, "url": "https://github.com/kiegroup/jbpm/commit/cf058d34e1feab742d65c9c9fb5f2ea16ea4f93b", "committedDate": "2020-11-12T11:26:50Z", "message": "[JBPM-9459] Nested process instances abort doesn't work when a task in event subprocess is marked with \"Is Async\" as true"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MDA4NTQ0", "url": "https://github.com/kiegroup/jbpm/pull/1797#pullrequestreview-529008544", "createdAt": "2020-11-12T11:47:42Z", "commit": {"oid": "cf058d34e1feab742d65c9c9fb5f2ea16ea4f93b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 831, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}