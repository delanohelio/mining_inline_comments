{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMDMzNjM5", "number": 1659, "title": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after", "bodyText": "Now it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map.", "createdAt": "2020-05-22T16:42:41Z", "url": "https://github.com/kiegroup/jbpm/pull/1659", "merged": true, "mergeCommit": {"oid": "ac70a039d202675b0cf5232ad3c7e68876128e37"}, "closed": true, "closedAt": "2020-06-23T09:23:06Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckri85gBqjMzNjkyNzU1ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuB8lugFqTQzNTYwMDY5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "746d972e8061015f27bab8f338061c93995577f6", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/746d972e8061015f27bab8f338061c93995577f6", "committedDate": "2020-05-22T16:39:41Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}, "afterCommit": {"oid": "e9ae966c2e7690646796c806bd45b12f1a341881", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/e9ae966c2e7690646796c806bd45b12f1a341881", "committedDate": "2020-05-25T08:11:08Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9ae966c2e7690646796c806bd45b12f1a341881", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/e9ae966c2e7690646796c806bd45b12f1a341881", "committedDate": "2020-05-25T08:11:08Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}, "afterCommit": {"oid": "5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0", "committedDate": "2020-05-25T10:50:34Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjQ3MTMw", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-417647130", "createdAt": "2020-05-25T11:28:39Z", "commit": {"oid": "5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMToyODo0MFrOGZ-EEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMToyODo0MFrOGZ-EEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg4NDQzMg==", "bodyText": "It should control also that variable has a previous value assigned which tries to be overwritten", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r429884432", "createdAt": "2020-05-25T11:28:40Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/AddDataCaseFileInstanceCommand.java", "diffHunk": "@@ -73,6 +74,15 @@ public Void execute(Context context) {\n         \n         KieSession ksession = ((RegistryContext) context).lookup( KieSession.class );\n         \n+        org.jbpm.process.instance.ProcessInstance pi = (org.jbpm.process.instance.ProcessInstance) ksession.getProcessInstance(processInstanceId);\n+        VariableScope variableScope = (VariableScope) pi.getContextContainer().getDefaultContext(VariableScope.VARIABLE_SCOPE);\n+        \n+        for (String name: parameters.keySet())\n+        {\n+            if (variableScope.isReadOnly(VariableScope.CASE_FILE_PREFIX+name))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/5c4ccd4102f105ba2f76ccbe83f34ea73b6b7bf0", "committedDate": "2020-05-25T10:50:34Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}, "afterCommit": {"oid": "da973012bc88cf9b75af3b8e355b71c5f019d048", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/da973012bc88cf9b75af3b8e355b71c5f019d048", "committedDate": "2020-05-25T13:11:17Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da973012bc88cf9b75af3b8e355b71c5f019d048", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/da973012bc88cf9b75af3b8e355b71c5f019d048", "committedDate": "2020-05-25T13:11:17Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}, "afterCommit": {"oid": "9afb2b3b05442e6db2a89d1feb6c2a0b57862309", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/9afb2b3b05442e6db2a89d1feb6c2a0b57862309", "committedDate": "2020-05-25T15:40:47Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTgzODU2", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-418183856", "createdAt": "2020-05-26T10:52:46Z", "commit": {"oid": "9afb2b3b05442e6db2a89d1feb6c2a0b57862309"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo1Mjo0NlrOGaY9BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDo1Mjo0NlrOGaY9BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMyNDk5Ng==", "bodyText": "I am not very convince about this.\nIf you are starting a case o restarting one to avoid any problem with variable you just need to check whether the oldValue and the newOne are the same instead of this. This will fix the issue regarding using the newCaseFileInstance + startCase... reopening will be more tricky as drools and facts are involved.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r430324996", "createdAt": "2020-05-26T10:52:46Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/StartCaseCommand.java", "diffHunk": "@@ -125,6 +123,7 @@ public void matchCreated(MatchCreatedEvent event) {\n         }\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n+        params.put(VariableScope.FORCE_UPDATE, Boolean.TRUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9afb2b3b05442e6db2a89d1feb6c2a0b57862309"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTg0MTUz", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-418184153", "createdAt": "2020-05-26T10:53:14Z", "commit": {"oid": "9afb2b3b05442e6db2a89d1feb6c2a0b57862309"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9afb2b3b05442e6db2a89d1feb6c2a0b57862309", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/9afb2b3b05442e6db2a89d1feb6c2a0b57862309", "committedDate": "2020-05-25T15:40:47Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it when reopening.\n\nImplementation note. In order to not change existing interface, which I\nbelieve to be out of scope, the\nparameter to decide if ViolationException should be thrown or not is\nspecified inside the parameters map."}, "afterCommit": {"oid": "7a47a0592c88a5a67a43c1619d2640f97b8ce1e0", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/7a47a0592c88a5a67a43c1619d2640f97b8ce1e0", "committedDate": "2020-05-26T14:22:29Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a47a0592c88a5a67a43c1619d2640f97b8ce1e0", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/7a47a0592c88a5a67a43c1619d2640f97b8ce1e0", "committedDate": "2020-05-26T14:22:29Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "18a0059edc966bae836522d2daf0a0767340d12a", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/18a0059edc966bae836522d2daf0a0767340d12a", "committedDate": "2020-05-27T22:27:47Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18a0059edc966bae836522d2daf0a0767340d12a", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/18a0059edc966bae836522d2daf0a0767340d12a", "committedDate": "2020-05-27T22:27:47Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/03c7d3b0d82f470b8550181d8c15b17d34622d02", "committedDate": "2020-05-28T07:17:32Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzQ3NDIw", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-420747420", "createdAt": "2020-05-29T08:20:53Z", "commit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoyMDo1M1rOGcTUFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoyNDozOFrOGcTcDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyOTc0OQ==", "bodyText": "logic spreaded between VariableScopeInstance and here.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432329749", "createdAt": "2020-05-29T08:20:53Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/AddDataCaseFileInstanceCommand.java", "diffHunk": "@@ -85,6 +87,16 @@ public Void execute(Context context) {\n         \n         CaseEventSupport caseEventSupport = getCaseEventSupport(context);\n         caseEventSupport.fireBeforeCaseDataAdded(caseFile.getCaseId(), caseFile, caseFile.getDefinitionId(), parameters);\n+        \n+        org.jbpm.process.instance.ProcessInstance pi = (org.jbpm.process.instance.ProcessInstance) ksession.getProcessInstance(processInstanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMyOTg2OA==", "bodyText": "logic spreaded between VariableScopeInstance and here.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432329868", "createdAt": "2020-05-29T08:21:04Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/RemoveDataCaseFileInstanceCommand.java", "diffHunk": "@@ -60,6 +64,17 @@ public Void execute(Context context) {\n         // apply authorization\n         authorizationManager.checkDataAuthorization(caseFile.getCaseId(), caseFile, variableNames);\n         \n+        \n+        org.jbpm.process.instance.ProcessInstance pi = (org.jbpm.process.instance.ProcessInstance) ksession.getProcessInstance(processInstanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMDE4MA==", "bodyText": "why removed the check of null ?", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432330180", "createdAt": "2020-05-29T08:21:40Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/ReopenCaseCommand.java", "diffHunk": "@@ -78,29 +78,43 @@ public Void execute(Context context) {\n         \n         KieSession ksession = ((RegistryContext) context).lookup( KieSession.class );\n                                \n-        CaseFileInstance caseFile = getCaseFile(ksession, caseId);                        \n+        CaseFileInstance caseFile = getCaseFile(ksession, caseId);     \n         \n         caseEventSupport.fireBeforeCaseReopened(caseId, caseFile, deploymentId, caseDefinitionId, data);\n         \n         logger.debug(\"Updating case file in working memory\");\n         FactHandle factHandle = ksession.getFactHandle(caseFile);\n-        ((CaseFileInstanceImpl)caseFile).setCaseReopenDate(new Date());\n-        if (data != null && !data.isEmpty()) {\n-            caseFile.addAll(data);\n-        }\n         ksession.update(factHandle, caseFile);\n         \n         logger.debug(\"Starting process instance for case {} and case definition {}\", caseId, caseDefinitionId);\n         CorrelationKey correlationKey = correlationKeyFactory.newCorrelationKey(caseId);\n         Map<String, Object> params = new HashMap<>();\n         // set case id to allow it to use CaseContext when creating runtime engine\n         params.put(EnvironmentName.CASE_ID, caseId);\n+        final Map<String, Object> caseData = caseFile.getData();\n+        \n+        \n+        for (Map.Entry<String, Object> entry : caseData.entrySet()) {\n+            params.put(VariableScope.CASE_FILE_PREFIX + entry.getKey(), entry.getValue());\n+        }\n+        \n+        if (data != null)   {\n+            for (Map.Entry<String, Object> entry : data.entrySet()) {\n+                params.put(VariableScope.CASE_FILE_PREFIX + entry.getKey(), entry.getValue());\n+            }\n+        }\n+\n         long processInstanceId = processService.startProcess(deploymentId, caseDefinitionId, correlationKey, params);\n+        \n+        ((CaseFileInstanceImpl)caseFile).setCaseReopenDate(new Date());\n+        if (data != null) {\n+            caseFile.addAll(data);\n+        }\n+        \n         logger.debug(\"Removing case file from working memory to allow refiring of rules...\");\n         ksession.delete(factHandle);\n         ksession.insert(caseFile);\n-        final Map<String, Object> caseData = caseFile.getData();\n-        if (caseData != null && !caseData.isEmpty()) {\n+        if (!caseData.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMDUwNQ==", "bodyText": "unneeded", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432330505", "createdAt": "2020-05-29T08:22:15Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/StartCaseCommand.java", "diffHunk": "@@ -112,10 +111,7 @@ public void matchCreated(MatchCreatedEvent event) {\n         });\n         commands.add(commandsFactory.newInsert(caseFile));\n         commands.add(commandsFactory.newFireAllRules());\n-\n-        BatchExecutionCommand batch = commandsFactory.newBatchExecution(commands);\n-        processService.execute(deploymentId, CaseContext.get(caseId), batch);\n-\n+        processService.execute(deploymentId, CaseContext.get(caseId), commandsFactory.newBatchExecution(commands));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMDczNw==", "bodyText": "unneeded", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432330737", "createdAt": "2020-05-29T08:22:40Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/model/instance/CaseFileInstanceImpl.java", "diffHunk": "@@ -113,7 +113,7 @@ public Date getCaseEndDate() {\n \n     @Override\n     public Map<String, Object> getData() {\n-        return this.data;\n+        return Collections.unmodifiableMap(this.data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMTQwOA==", "bodyText": "this will required a full downstream compilation at least. Commands are sensitive. @gmunozfe", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432331408", "createdAt": "2020-05-29T08:23:54Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/RemoveDataCaseFileInstanceCommand.java", "diffHunk": "@@ -40,9 +42,11 @@\n \n     private List<String> variableNames;\n     private AuthorizationManager authorizationManager;\n+    private Long processInstanceId;\n     \n-    public RemoveDataCaseFileInstanceCommand(IdentityProvider identityProvider, List<String> variableNames, AuthorizationManager authorizationManager) {                \n+    public RemoveDataCaseFileInstanceCommand(Long processInstanceId, IdentityProvider identityProvider, List<String> variableNames, AuthorizationManager authorizationManager) {                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMTc5MQ==", "bodyText": "generate new file for these test.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432331791", "createdAt": "2020-05-29T08:24:38Z", "author": {"login": "elguardian"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/resources/cases/UserTaskCaseRestrictedCaseFileItem.bpmn2", "diffHunk": "@@ -18,6 +18,14 @@\n         </tns:metaData>\n       </bpmn2:extensionElements>\n     </bpmn2:property>\n+    \n+    <bpmn2:property id=\"caseFile_r\" itemSubjectRef=\"_sItem\" name=\"caseFile_r\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03c7d3b0d82f470b8550181d8c15b17d34622d02", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/03c7d3b0d82f470b8550181d8c15b17d34622d02", "committedDate": "2020-05-28T07:17:32Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "9681fd1d6f0629d72d9404b8758885f964e46f65", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/9681fd1d6f0629d72d9404b8758885f964e46f65", "committedDate": "2020-05-29T12:26:11Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDE1ODg1", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-421015885", "createdAt": "2020-05-29T14:37:51Z", "commit": {"oid": "9681fd1d6f0629d72d9404b8758885f964e46f65"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDozNzo1MVrOGcfmZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDozNzo1MVrOGcfmZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjUzMTA0NQ==", "bodyText": "It doesn't match with the file name (case sensitive)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    processes.add(\"cases/UserTaskCaseReadOnlyCaseFileItem.bpmn2\");\n          \n          \n            \n                    processes.add(\"cases/UserTaskCaseReadonlyCaseFileItem.bpmn2\");\n          \n      \n    \n    \n  \n\nor change the file name.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r432531045", "createdAt": "2020-05-29T14:37:51Z", "author": {"login": "gmunozfe"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/test/java/org/jbpm/casemgmt/impl/CaseServiceImplTest.java", "diffHunk": "@@ -146,6 +146,7 @@\n         processes.add(\"cases/UserTaskCaseRequiredCaseFileItem.bpmn2\");\n         processes.add(\"cases/UserTaskCaseRestrictedCaseFileItem.bpmn2\");\n         processes.add(\"cases/UserTaskCaseRequiredRestrictedCaseFileItem.bpmn2\");\n+        processes.add(\"cases/UserTaskCaseReadOnlyCaseFileItem.bpmn2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9681fd1d6f0629d72d9404b8758885f964e46f65"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9681fd1d6f0629d72d9404b8758885f964e46f65", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/9681fd1d6f0629d72d9404b8758885f964e46f65", "committedDate": "2020-05-29T12:26:11Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "b880fb224049023d0482c6526139448cf0f0fc3d", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b880fb224049023d0482c6526139448cf0f0fc3d", "committedDate": "2020-05-29T14:44:58Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b880fb224049023d0482c6526139448cf0f0fc3d", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/b880fb224049023d0482c6526139448cf0f0fc3d", "committedDate": "2020-05-29T14:44:58Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "65ac5110b5635cf545564f9b948a6de61af0922e", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/65ac5110b5635cf545564f9b948a6de61af0922e", "committedDate": "2020-06-04T09:01:43Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65ac5110b5635cf545564f9b948a6de61af0922e", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/65ac5110b5635cf545564f9b948a6de61af0922e", "committedDate": "2020-06-04T09:01:43Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "cf8f5cb5c26a1065f472b9d957ae5e6c438ddd10", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/cf8f5cb5c26a1065f472b9d957ae5e6c438ddd10", "committedDate": "2020-06-04T12:58:35Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf8f5cb5c26a1065f472b9d957ae5e6c438ddd10", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/cf8f5cb5c26a1065f472b9d957ae5e6c438ddd10", "committedDate": "2020-06-04T12:58:35Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21", "committedDate": "2020-06-08T15:11:00Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDY1MjI2", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-431465226", "createdAt": "2020-06-16T12:47:06Z", "commit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjo0NzowNlrOGkZnWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNTowOToyMFrOGkgBwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgyMTU5Mg==", "bodyText": "Can you clarify it here, please? So VariableScopeInstance.setVariable calls fire methods which we don't want to call, so we use this approach?", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r440821592", "createdAt": "2020-06-16T12:47:06Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/AddDataCaseFileInstanceCommand.java", "diffHunk": "@@ -81,6 +82,16 @@ public Void execute(Context context) {\n         // apply authorization\n         authorizationManager.checkDataAuthorization(caseFile.getCaseId(), caseFile, parameters.keySet());\n         \n+        // check read only variables, due to dependencies between firexxxCaseData methods, we need this logic here, we cannot reuse VariableScopeInstance.setVariable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwNTk3MA==", "bodyText": "Any reason why this was removed?", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r440905970", "createdAt": "2020-06-16T14:42:38Z", "author": {"login": "MarianMacik"}, "path": "jbpm-test-coverage/src/main/java/org/jbpm/test/entity/MedicalRecord.java", "diffHunk": "@@ -110,9 +110,6 @@ public boolean equals(Object obj) {\n         if ((this.description == null) ? (other.description != null) : !this.description.equals(other.description)) {\n             return false;\n         }\n-        if (this.patient != other.patient && (this.patient == null || !this.patient.equals(other.patient))) {\n-            return false;\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkyNTkyOQ==", "bodyText": "In theory somebody can be already using that via ProcessService to be run as a separate command, so we can break backward compatibility, but if there is no other way, it is ok from my side.", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r440925929", "createdAt": "2020-06-16T15:08:19Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/RemoveDataCaseFileInstanceCommand.java", "diffHunk": "@@ -40,9 +42,11 @@\n \n     private List<String> variableNames;\n     private AuthorizationManager authorizationManager;\n+    private Long processInstanceId;\n     \n-    public RemoveDataCaseFileInstanceCommand(IdentityProvider identityProvider, List<String> variableNames, AuthorizationManager authorizationManager) {                \n+    public RemoveDataCaseFileInstanceCommand(Long processInstanceId, IdentityProvider identityProvider, List<String> variableNames, AuthorizationManager authorizationManager) {                ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkyNjY1OA==", "bodyText": "Maybe use the same message as in VariableScopeInstance?\nthrow new VariableViolationException(getProcessInstance().getId(), name, \"Variable '\" + name + \"' is already set and is marked as read only\");", "url": "https://github.com/kiegroup/jbpm/pull/1659#discussion_r440926658", "createdAt": "2020-06-16T15:09:20Z", "author": {"login": "MarianMacik"}, "path": "jbpm-case-mgmt/jbpm-case-mgmt-impl/src/main/java/org/jbpm/casemgmt/impl/command/RemoveDataCaseFileInstanceCommand.java", "diffHunk": "@@ -59,7 +63,15 @@ public Void execute(Context context) {\n         \n         // apply authorization\n         authorizationManager.checkDataAuthorization(caseFile.getCaseId(), caseFile, variableNames);\n-        \n+          \n+        org.jbpm.process.instance.ProcessInstance pi = (org.jbpm.process.instance.ProcessInstance) ksession.getProcessInstance(processInstanceId);\n+        VariableScope variableScope = (VariableScope) pi.getContextContainer().getDefaultContext(VariableScope.VARIABLE_SCOPE);\n+        for (String name: variableNames) {\n+            if (caseFile.getData(name) != null && variableScope.isReadOnly(VariableScope.CASE_FILE_PREFIX+name)) {\n+                throw new VariableViolationException(pi.getId(), name,\"variable is read only and cannot be removed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74156c2b50141d04a3986b4b67e42d57507bbd32", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/74156c2b50141d04a3986b4b67e42d57507bbd32", "committedDate": "2020-06-16T16:15:59Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/2615d1a8758c56a9b1a5d8e92e3d669f3d2e7e21", "committedDate": "2020-06-08T15:11:00Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}, "afterCommit": {"oid": "74156c2b50141d04a3986b4b67e42d57507bbd32", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/74156c2b50141d04a3986b4b67e42d57507bbd32", "committedDate": "2020-06-16T16:15:59Z", "message": "[JBPM-9097] Case variable: \"readonly\" tag permits changing value after\n\nNow it is possible to assign a value to a case property when the\nprocess is created, but a ViolationException will be thrown if trying\nto update it with a different value when reopening."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODUxMjgy", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-431851282", "createdAt": "2020-06-16T20:05:48Z", "commit": {"oid": "74156c2b50141d04a3986b4b67e42d57507bbd32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTc3NDYx", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-432177461", "createdAt": "2020-06-17T08:32:50Z", "commit": {"oid": "74156c2b50141d04a3986b4b67e42d57507bbd32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NjAwNjkx", "url": "https://github.com/kiegroup/jbpm/pull/1659#pullrequestreview-435600691", "createdAt": "2020-06-23T09:22:41Z", "commit": {"oid": "74156c2b50141d04a3986b4b67e42d57507bbd32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 917, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}