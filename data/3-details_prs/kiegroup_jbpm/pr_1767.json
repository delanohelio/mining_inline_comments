{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NjcxNzQ5", "number": 1767, "title": "[JBPM-9405] Provide API method to signal process instance with correlation key", "bodyText": "Jira: https://issues.redhat.com/browse/JBPM-9405\nAdded process service to signal by correlation key.", "createdAt": "2020-10-05T08:03:55Z", "url": "https://github.com/kiegroup/jbpm/pull/1767", "merged": true, "mergeCommit": {"oid": "bdd3b21afed3cde1aa153708d3d24692cab0ed95"}, "closed": true, "closedAt": "2020-11-02T14:07:43Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPfMBKgBqjM4MzkwOTk0MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXPFVpAFqTUxOTQ5NTg1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71a17af21ea5264c16221a11787be113a2cd07a0", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/71a17af21ea5264c16221a11787be113a2cd07a0", "committedDate": "2020-10-05T08:02:50Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}, "afterCommit": {"oid": "d768639355ef2caac7d9ba9a36a868a53451bfbe", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/d768639355ef2caac7d9ba9a36a868a53451bfbe", "committedDate": "2020-10-05T08:06:07Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d768639355ef2caac7d9ba9a36a868a53451bfbe", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/d768639355ef2caac7d9ba9a36a868a53451bfbe", "committedDate": "2020-10-05T08:06:07Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}, "afterCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/e4e776993540c438519afffa76bb686624b54224", "committedDate": "2020-10-13T07:06:13Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDE5NjY2", "url": "https://github.com/kiegroup/jbpm/pull/1767#pullrequestreview-515419666", "createdAt": "2020-10-23T07:44:39Z", "commit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzo0NDozOVrOHnCa4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODozNDozOFrOHnEIyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjE2Mg==", "bodyText": "Typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param correlationKey the process instance's unique correlation key\n          \n          \n            \n                 * @param correlationKey the process instance unique correlation key", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510696162", "createdAt": "2020-10-23T07:44:39Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NjUwMQ==", "bodyText": "same typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param correlationKey the process instance's unique correlation key\n          \n          \n            \n                 * @param correlationKey the process instance unique correlation key", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510696501", "createdAt": "2020-10-23T07:45:14Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY5NzM1OQ==", "bodyText": "deploymentId is not part of the expected arguments in the method, please remove.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param deploymentId deployment that process instance belongs to", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510697359", "createdAt": "2020-10-23T07:46:44Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/main/java/org/jbpm/services/api/ProcessService.java", "diffHunk": "@@ -192,7 +192,54 @@\n      * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n      */\n     void signalProcessInstances(String deploymentId, List<Long> processInstanceIds, String signalName, Object event);\n-    \n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to a single process instance by correlation key\n+     * \n+     * @param deploymentId deployment that process instance belongs to\n+     * @param correlationKey the process instance's unique correlation key\n+     * @param signalName the signal's id in the process\n+     * @param event the event object to be passed in with the event\n+     * @throws DeploymentNotFoundException in case deployment unit was not found\n+     * @throws ProcessInstanceNotFoundException in case process instance with given id was not found\n+     */\n+    void signalProcessInstanceByCorrelationKey(String deploymentId, CorrelationKey correlationKey, String signalName, Object event);\n+\n+    /**\n+     * Signal an event to given list of correlation keys\n+     * \n+     * @param deploymentId deployment that process instance belongs to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNTU4OQ==", "bodyText": "same as above", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510715589", "createdAt": "2020-10-23T08:19:53Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(String deploymentId,\n+                                                        List<CorrelationKey> correlationKeys,\n+                                                        String signalName,\n+                                                        Object event) {\n+\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(deploymentId, key, signalName, event));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcxNzEyOA==", "bodyText": "correlationKeys might be null - maybe it's worth testing it before calling forEach", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510717128", "createdAt": "2020-10-23T08:22:29Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-kie-services/src/main/java/org/jbpm/kie/services/impl/ProcessServiceImpl.java", "diffHunk": "@@ -295,6 +295,43 @@ public void signalProcessInstances(String deploymentId, List<Long> processInstan\n \n     }\n \n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(CorrelationKey correlationKey, String signalName, Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(pi.getId(), signalName, event);\n+        \n+    }\n+\n+    @Override\n+    public void signalProcessInstanceByCorrelationKey(String deploymentId,\n+                                                      CorrelationKey correlationKey,\n+                                                      String signalName,\n+                                                      Object event) {\n+        ProcessInstanceDesc pi = dataService.getProcessInstanceByCorrelationKey(correlationKey);\n+        if(pi == null) {\n+            throw new ProcessInstanceNotFoundException(\"Process with correlation key \" + correlationKey + \" not found\");\n+        }\n+        signalProcessInstance(deploymentId, pi.getId(), signalName, event);\n+    }\n+\n+    @Override\n+    public void signalProcessInstancesByCorrelationKeys(List<CorrelationKey> correlationKeys, String signalName, Object event) {\n+        correlationKeys.forEach(key -> signalProcessInstanceByCorrelationKey(key, signalName, event));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDcyNDI5OQ==", "bodyText": "This ignore section is not needed. These changes are already in 7.44 final version.", "url": "https://github.com/kiegroup/jbpm/pull/1767#discussion_r510724299", "createdAt": "2020-10-23T08:34:38Z", "author": {"login": "afalhambra"}, "path": "jbpm-services/jbpm-services-api/src/build/revapi-config.json", "diffHunk": "@@ -17,7 +17,82 @@\n     \"ignores\": {\n         \"revapi\": {\n             \"_comment\": \"Changes between 7.44.0.Final and the current branch. These changes are desired and thus ignored.\",\n-            \"ignore\": []\n+            \"ignore\": [\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.String org.jbpm.services.api.model.UserTaskInstanceDesc::getCorrelationKey()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setCorrelationKey(java.lang.String)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setCorrelationKey\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method java.lang.Integer org.jbpm.services.api.model.UserTaskInstanceDesc::getProcessType()\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"getProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },\n+                {\n+                    \"code\": \"java.method.addedToInterface\",\n+                    \"new\": \"method void org.jbpm.services.api.model.UserTaskInstanceDesc::setProcessType(java.lang.Integer)\",\n+                    \"package\": \"org.jbpm.services.api.model\",\n+                    \"classSimpleName\": \"UserTaskInstanceDesc\",\n+                    \"methodName\": \"setProcessType\",\n+                    \"elementKind\": \"method\",\n+                    \"justification\": \"https://issues.redhat.com/browse/BAPL-1623\"\n+                },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f19e35dccda87369446687330b14cb3536cbc877", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/f19e35dccda87369446687330b14cb3536cbc877", "committedDate": "2020-10-28T10:09:15Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4e776993540c438519afffa76bb686624b54224", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/e4e776993540c438519afffa76bb686624b54224", "committedDate": "2020-10-13T07:06:13Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}, "afterCommit": {"oid": "f19e35dccda87369446687330b14cb3536cbc877", "author": {"user": null}, "url": "https://github.com/kiegroup/jbpm/commit/f19e35dccda87369446687330b14cb3536cbc877", "committedDate": "2020-10-28T10:09:15Z", "message": "[JBPM-9405] Provide API method to signal process instance with correlationKey"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDk1ODU2", "url": "https://github.com/kiegroup/jbpm/pull/1767#pullrequestreview-519495856", "createdAt": "2020-10-29T09:51:54Z", "commit": {"oid": "f19e35dccda87369446687330b14cb3536cbc877"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 782, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}