{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMTAxODg2", "number": 1803, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToxNjowNVrOE5-A6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToxNzozNVrOE5-DIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjIwMzMxOnYy", "diffSide": "RIGHT", "path": "jbpm-persistence/jbpm-persistence-api/src/main/java/org/jbpm/persistence/api/integration/base/TransactionalPersistenceEventManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToxNjowNVrOH0wFeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNToyMDo1M1rOH4SM1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3NTgzNA==", "bodyText": "maybe it's worth checking whether this.emitter is null as it might be already closed. wdyt?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.emitter.close();\n          \n          \n            \n                    emitter = null;\n          \n          \n            \n                    if (this.emitter != null) {\n          \n          \n            \n                        this.emitter.close();\n          \n          \n            \n                        emitter = null;\n          \n          \n            \n                    }", "url": "https://github.com/kiegroup/jbpm/pull/1803#discussion_r525075834", "createdAt": "2020-11-17T11:16:05Z", "author": {"login": "afalhambra"}, "path": "jbpm-persistence/jbpm-persistence-api/src/main/java/org/jbpm/persistence/api/integration/base/TransactionalPersistenceEventManager.java", "diffHunk": "@@ -153,5 +153,6 @@ public void close() {\n         }\n         \n         this.emitter.close();\n+        emitter = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89a2b6595c01d321f782092d85c7bc1347c5706"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc4MDUwMQ==", "bodyText": "It cannot be null at this point, because previously it was checked that isActive (i.e., not null)", "url": "https://github.com/kiegroup/jbpm/pull/1803#discussion_r528780501", "createdAt": "2020-11-23T15:20:53Z", "author": {"login": "gmunozfe"}, "path": "jbpm-persistence/jbpm-persistence-api/src/main/java/org/jbpm/persistence/api/integration/base/TransactionalPersistenceEventManager.java", "diffHunk": "@@ -153,5 +153,6 @@ public void close() {\n         }\n         \n         this.emitter.close();\n+        emitter = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3NTgzNA=="}, "originalCommit": {"oid": "a89a2b6595c01d321f782092d85c7bc1347c5706"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjIwODk3OnYy", "diffSide": "RIGHT", "path": "jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMToxNzozNVrOH0wI1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNToxNjo0NVrOH4SBOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3NjY5Mw==", "bodyText": "Shouldn't we leave to the default ProducerConfig.MAX_BLOCK_MS_CONFIG value (60secs)? - wdyt?", "url": "https://github.com/kiegroup/jbpm/pull/1803#discussion_r525076693", "createdAt": "2020-11-17T11:17:35Z", "author": {"login": "afalhambra"}, "path": "jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java", "diffHunk": "@@ -154,6 +154,8 @@ public EventCollection newCollection() {\n         if (clientId != null) {\n             configs.put(ProducerConfig.CLIENT_ID_CONFIG, clientId);\n         }\n+        configs.put(ProducerConfig.MAX_BLOCK_MS_CONFIG, \n+                    System.getProperty(\"org.kie.jbpm.event.emitters.kafka.max.block.ms\", \"2000\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89a2b6595c01d321f782092d85c7bc1347c5706"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTIyNTg1MQ==", "bodyText": "Problem is that default one is too long, thats the point of this JIRA ;)", "url": "https://github.com/kiegroup/jbpm/pull/1803#discussion_r525225851", "createdAt": "2020-11-17T15:04:46Z", "author": {"login": "fjtirado"}, "path": "jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java", "diffHunk": "@@ -154,6 +154,8 @@ public EventCollection newCollection() {\n         if (clientId != null) {\n             configs.put(ProducerConfig.CLIENT_ID_CONFIG, clientId);\n         }\n+        configs.put(ProducerConfig.MAX_BLOCK_MS_CONFIG, \n+                    System.getProperty(\"org.kie.jbpm.event.emitters.kafka.max.block.ms\", \"2000\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3NjY5Mw=="}, "originalCommit": {"oid": "a89a2b6595c01d321f782092d85c7bc1347c5706"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODc3NzUzMQ==", "bodyText": "Right, it keeps on waiting (by default 60 sec) if broker is down and cannot establish a socket connection. Value can be overridden by each customer by means of the system variable.", "url": "https://github.com/kiegroup/jbpm/pull/1803#discussion_r528777531", "createdAt": "2020-11-23T15:16:45Z", "author": {"login": "gmunozfe"}, "path": "jbpm-event-emitters/jbpm-event-emitters-kafka/src/main/java/org/jbpm/event/emitters/kafka/KafkaEventEmitter.java", "diffHunk": "@@ -154,6 +154,8 @@ public EventCollection newCollection() {\n         if (clientId != null) {\n             configs.put(ProducerConfig.CLIENT_ID_CONFIG, clientId);\n         }\n+        configs.put(ProducerConfig.MAX_BLOCK_MS_CONFIG, \n+                    System.getProperty(\"org.kie.jbpm.event.emitters.kafka.max.block.ms\", \"2000\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTA3NjY5Mw=="}, "originalCommit": {"oid": "a89a2b6595c01d321f782092d85c7bc1347c5706"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1629, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}