{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MjMyODQz", "number": 299, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozMjozM1rOD7Viqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNDo0OVrOD7y-Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ1NTE0OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozMjozM1rOGTmUcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwODozNzoyOFrOGT8Gew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMzk1NA==", "bodyText": "just the table name", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423203954", "createdAt": "2020-05-11T17:32:33Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "diffHunk": "@@ -114,6 +114,20 @@ public MutateRowsRequest toProto(RequestContext requestContext) {\n         .build();\n   }\n \n+  /**\n+   * Wraps the protobuf {@link MutateRowsRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNDQ1MA==", "bodyText": "Also please add a warning that the mutations should be idempotent (ie should not use server timestamps) because the mutations will be retried", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423204450", "createdAt": "2020-05-11T17:33:26Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "diffHunk": "@@ -114,6 +114,20 @@ public MutateRowsRequest toProto(RequestContext requestContext) {\n         .build();\n   }\n \n+  /**\n+   * Wraps the protobuf {@link MutateRowsRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMzk1NA=="}, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNDc2Mw==", "bodyText": "Also, lets mark this as BetaApi, in case this doesn't prove useful", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423204763", "createdAt": "2020-05-11T17:33:57Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "diffHunk": "@@ -114,6 +114,20 @@ public MutateRowsRequest toProto(RequestContext requestContext) {\n         .build();\n   }\n \n+  /**\n+   * Wraps the protobuf {@link MutateRowsRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMzk1NA=="}, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MDgyNw==", "bodyText": "Thanks for the review, I have updated the JavaDoc with the same information. PTAL", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423560827", "createdAt": "2020-05-12T08:37:28Z", "author": {"login": "rahulKQL"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "diffHunk": "@@ -114,6 +114,20 @@ public MutateRowsRequest toProto(RequestContext requestContext) {\n         .build();\n   }\n \n+  /**\n+   * Wraps the protobuf {@link MutateRowsRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwMzk1NA=="}, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ2Mjc1OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ConditionalRowMutation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNDozOVrOGTmZMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNDozOVrOGTmZMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTE2OA==", "bodyText": "Same notes as BulkMutation, but you dont need to comment about idempotency this rpc is not retried", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423205168", "createdAt": "2020-05-11T17:34:39Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ConditionalRowMutation.java", "diffHunk": "@@ -136,4 +136,19 @@ public CheckAndMutateRowRequest toProto(RequestContext requestContext) {\n         .setAppProfileId(requestContext.getAppProfileId())\n         .build();\n   }\n+\n+  /**\n+   * Wraps the protobuf {@link CheckAndMutateRowRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten\n+   * by the configuration in the BigtableDataClient.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ2MzU1OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ReadModifyWriteRow.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNDo1MVrOGTmZrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNDo1MVrOGTmZrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTI5NQ==", "bodyText": "same as ConditionalRowMutation", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423205295", "createdAt": "2020-05-11T17:34:51Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ReadModifyWriteRow.java", "diffHunk": "@@ -137,4 +137,19 @@ public ReadModifyWriteRowRequest toProto(RequestContext requestContext) {\n         .setAppProfileId(requestContext.getAppProfileId())\n         .build();\n   }\n+\n+  /**\n+   * Wraps the protobuf {@link ReadModifyWriteRowRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten\n+   * by the configuration in the BigtableDataClient.\n+   */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ2NDEzOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNTowM1rOGTmaGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNTowM1rOGTmaGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTQwMw==", "bodyText": "Same as bulk mutation", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423205403", "createdAt": "2020-05-11T17:35:03Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutation.java", "diffHunk": "@@ -214,4 +214,18 @@ public MutateRowsRequest toBulkProto(RequestContext requestContext) {\n             Entry.newBuilder().setRowKey(key).addAllMutations(mutation.getMutations()).build())\n         .build();\n   }\n+\n+  /**\n+   * Wraps the protobuf {@link MutateRowRequest}.\n+   *\n+   * <p>WARNING: Please note that the project id & instance id in the table name will be overwritten\n+   * by the configuration in the BigtableDataClient.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTQ2Njg1OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutationEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNTo0OFrOGTmb2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNTo0OFrOGTmb2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTg1MA==", "bodyText": "I dont think we need this...its only used by BulkMutation and if someone is using BulkMutation, they are already using the models", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423205850", "createdAt": "2020-05-11T17:35:48Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutationEntry.java", "diffHunk": "@@ -177,4 +178,11 @@ public RowMutationEntry deleteRow() {\n         .addAllMutations(mutation.getMutations())\n         .build();\n   }\n+\n+  /** Wraps the protobuf {@link MutateRowRequest}. */\n+  public static RowMutationEntry fromProtobuf(MutateRowsRequest.Entry request) {\n+    // TODO: Should we have an option for Mutation.fromProto(List<com.google.bigtable.v2.Mutation>)?\n+    return new RowMutationEntry(\n+        request.getRowKey(), Mutation.fromProtoUnsafe(request.getMutationsList()));\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea099c43aa7316caeab63d96ddbc658e817c36ed"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODk4Mzc1OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ConditionalRowMutation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoxODoyMlrOGUI8Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoxODoyMlrOGUI8Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3MTE1NQ==", "bodyText": "Here and everywhere else, please stay consistent with existing fromProto methods", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423771155", "createdAt": "2020-05-12T14:18:22Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/ConditionalRowMutation.java", "diffHunk": "@@ -136,4 +137,20 @@ public CheckAndMutateRowRequest toProto(RequestContext requestContext) {\n         .setAppProfileId(requestContext.getAppProfileId())\n         .build();\n   }\n+\n+  /**\n+   * Wraps the protobuf {@link CheckAndMutateRowRequest}.\n+   *\n+   * <p>WARNING: Please note that the table name will be overwritten by the configuration in the\n+   * BigtableDataClient. The mutation must always be idempotent because it would be retried.\n+   */\n+  @BetaApi\n+  public static ConditionalRowMutation fromProtobuf(@Nonnull CheckAndMutateRowRequest request) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTAyODIwOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDoyNzoxMlrOGUJYuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOToxNToxMlrOGUVPcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODQ4OQ==", "bodyText": "This javadoc is not quite right. Please rephrase to:\nConstructs a row mutation from an existing protobuf object.\n\n<p>Callers must ensure that the protobuf argument is not using serverside timestamps. The client assumes that all mutations are idempotent and will retry in case of transient errors. This can lead to row duplication.\n\n<p>When applied, the resulting Mutation object will ignore the project id and instance id in the table_name and instead apply the configuration in the client", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423778489", "createdAt": "2020-05-12T14:27:12Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +87,17 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Wraps the List of protobuf {@link com.google.bigtable.v2.Mutation}. This method creates a\n+   * mutation instance that is idempotent in nature, which could safely be retried.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MDUzOA==", "bodyText": "Actually nevermind, please remove this fromProto method altogether. This object is not a top level model so from proto is not needed here", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423780538", "createdAt": "2020-05-12T14:29:51Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +87,17 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Wraps the List of protobuf {@link com.google.bigtable.v2.Mutation}. This method creates a\n+   * mutation instance that is idempotent in nature, which could safely be retried.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODQ4OQ=="}, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk0MzgwOQ==", "bodyText": "It seems we need this utility for RowMutation#fromProto. At present, there is no other option to create model.Mutation from List of proto com.google.bigtable.v2.Mutation.", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423943809", "createdAt": "2020-05-12T18:25:28Z", "author": {"login": "rahulKQL"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +87,17 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Wraps the List of protobuf {@link com.google.bigtable.v2.Mutation}. This method creates a\n+   * mutation instance that is idempotent in nature, which could safely be retried.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODQ4OQ=="}, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk3MjcyMg==", "bodyText": "ok, can it be package private? or internalapi?", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423972722", "createdAt": "2020-05-12T19:15:12Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +87,17 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Wraps the List of protobuf {@link com.google.bigtable.v2.Mutation}. This method creates a\n+   * mutation instance that is idempotent in nature, which could safely be retried.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc3ODQ4OQ=="}, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTA1NTQ4OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozMjo1OFrOGUJqeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozMjo1OFrOGUJqeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4MzAzNA==", "bodyText": "Please replace with:\nWraps the protobuf {@link MutateRowRequest}.\n<p>This is meant for advanced usage only. Please ensure that the MutateRowRequest does not use server side timestamps. The BigtableDataClient assumes that RowMutations are idempotent and is configured to enable retries by default. If serverside timestamps are enabled, this can lead to duplicate mutations\n\n<p>WARNING: Please note that the table name will be overwritten by the configuration in the\n   * BigtableDataClient.", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423783034", "createdAt": "2020-05-12T14:32:58Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowMutation.java", "diffHunk": "@@ -214,4 +215,18 @@ public MutateRowsRequest toBulkProto(RequestContext requestContext) {\n             Entry.newBuilder().setRowKey(key).addAllMutations(mutation.getMutations()).build())\n         .build();\n   }\n+\n+  /**\n+   * Wraps the protobuf {@link MutateRowRequest}.\n+   *\n+   * <p>WARNING: Please note that the table name will be overwritten by the configuration in the\n+   * BigtableDataClient. The mutation must always be idempotent because it would be retried.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTA2NzQyOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozNToyNVrOGUJxzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDozNToyNVrOGUJxzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc4NDkwOA==", "bodyText": "The mutation must always be idempotent because it would be retried. needs to be explained more, please add a similar warning as described below for RowMutation.", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423784908", "createdAt": "2020-05-12T14:35:25Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/BulkMutation.java", "diffHunk": "@@ -114,6 +115,21 @@ public MutateRowsRequest toProto(RequestContext requestContext) {\n         .build();\n   }\n \n+  /**\n+   * Wraps the protobuf {@link MutateRowsRequest}.\n+   *\n+   * <p>WARNING: Please note that the table name will be overwritten by the configuration in the\n+   * BigtableDataClient. The mutation must always be idempotent because it would be retried.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "154130de8ee8e5812e4bb3f33e44a3b721d14f50"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDI3NzIzOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTozNDo0OVrOGUV8kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToyNTozMVrOGU3DkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NDI3NQ==", "bodyText": "Why is this visible for testing? I thought it was needed by RowMutation?", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r423984275", "createdAt": "2020-05-12T19:34:49Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +88,23 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Constructs a row mutation from an existing protobuf object.\n+   *\n+   * <p>Callers must ensure that the protobuf argument is not using serverside timestamps. The\n+   * client assumes that all mutations are idempotent and will retry in case of transient errors.\n+   * This can lead to row duplication.\n+   *\n+   * <p>When applied, the resulting Mutation object will ignore the project id and instance id in\n+   * the table_name and instead apply the configuration in the client\n+   */\n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "511f924d76638758489850a1d3b6ab32c155a58a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUyNjczNw==", "bodyText": "This was my overlook, I have removed the unneeded annotation. PTAL", "url": "https://github.com/googleapis/java-bigtable/pull/299#discussion_r424526737", "createdAt": "2020-05-13T15:25:31Z", "author": {"login": "rahulKQL"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Mutation.java", "diffHunk": "@@ -87,6 +88,23 @@ public static Mutation fromProtoUnsafe(List<com.google.bigtable.v2.Mutation> pro\n     return mutation;\n   }\n \n+  /**\n+   * Constructs a row mutation from an existing protobuf object.\n+   *\n+   * <p>Callers must ensure that the protobuf argument is not using serverside timestamps. The\n+   * client assumes that all mutations are idempotent and will retry in case of transient errors.\n+   * This can lead to row duplication.\n+   *\n+   * <p>When applied, the resulting Mutation object will ignore the project id and instance id in\n+   * the table_name and instead apply the configuration in the client\n+   */\n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk4NDI3NQ=="}, "originalCommit": {"oid": "511f924d76638758489850a1d3b6ab32c155a58a"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3409, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}