{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNjQyMDMz", "number": 276, "title": "feat: expose new API with ReadRowsRequest in EnhancedBigtableStub", "bodyText": "Fixes #275\nThis commit would enable the user to target the table using an absolute resource name on each read request. Currently, we expose ServerStreamingCallable<Query, RowT>, which does not have an option to provide different app-profile-id on each request.\nThank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:\n\n Make sure to open an issue as a bug/issue before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea\n Ensure the tests and linter pass\n Code coverage does not decrease (if any source code was changed)\n Appropriate docs were updated (if necessary)", "createdAt": "2020-04-30T15:34:50Z", "url": "https://github.com/googleapis/java-bigtable/pull/276", "merged": true, "mergeCommit": {"oid": "394efe459ebe34030bf1d09116eebb4ec4f311e9"}, "closed": true, "closedAt": "2020-05-11T17:13:16Z", "author": {"login": "rahulKQL"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccu3DwAH2gAyNDExNjQyMDMzOmZiMDI1YWUxNWZkYzg3YzE3YzRkMzU4YTM0ZGM0YWJjZjRlODJjNjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgRdQYAFqTQwOTI4NTk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "author": {"user": {"login": "rahulKQL", "name": "Rahul Kesharwani"}}, "url": "https://github.com/googleapis/java-bigtable/commit/fb025ae15fdc87c17c4d358a34dc4abcf4e82c63", "committedDate": "2020-04-30T15:31:44Z", "message": "feat: expose StreamingCallable with ReadRowsRequest in EnhancedBigtableStub\n\nThis commit would enable the user to target the table using absolute resource name on each read request. Currently we expose `ServerStreamingCallable<Query, RowT>`, which does not have an option to provide different `app-profile-id` on each request."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDAwOTIy", "url": "https://github.com/googleapis/java-bigtable/pull/276#pullrequestreview-404400922", "createdAt": "2020-05-01T21:05:43Z", "commit": {"oid": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNTo0M1rOGPVucQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNjowNVrOGPVu8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNzc3Nw==", "bodyText": "Please mark this as BetaApi and add a disclaimer that this method might be removed in the future", "url": "https://github.com/googleapis/java-bigtable/pull/276#discussion_r418737777", "createdAt": "2020-05-01T21:05:43Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStub.java", "diffHunk": "@@ -230,6 +230,66 @@ private EnhancedBigtableStub(\n   private <RowT> ServerStreamingCallable<Query, RowT> createReadRowsBaseCallable(\n       ServerStreamingCallSettings<Query, Row> readRowsSettings, RowAdapter<RowT> rowAdapter) {\n \n+    return new ReadRowsUserCallable<>(\n+        createReadRowsRawCallable(readRowsSettings, rowAdapter), requestContext);\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsRawCallable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNzkwNQ==", "bodyText": "This should not be public", "url": "https://github.com/googleapis/java-bigtable/pull/276#discussion_r418737905", "createdAt": "2020-05-01T21:06:05Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStub.java", "diffHunk": "@@ -230,6 +230,66 @@ private EnhancedBigtableStub(\n   private <RowT> ServerStreamingCallable<Query, RowT> createReadRowsBaseCallable(\n       ServerStreamingCallSettings<Query, Row> readRowsSettings, RowAdapter<RowT> rowAdapter) {\n \n+    return new ReadRowsUserCallable<>(\n+        createReadRowsRawCallable(readRowsSettings, rowAdapter), requestContext);\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsRawCallable(\n+      RowAdapter<RowT> adapter) {\n+    return createReadRowsBaseCallable(adapter)\n+        .withDefaultCallContext(clientContext.getDefaultCallContext());\n+  }\n+\n+  /**\n+   * Creates a callable chain to handle ReadRows RPCs. The chain will:\n+   *\n+   * <ul>\n+   *   <li>Dispatch the RPC with {@link ReadRowsRequest}.\n+   *   <li>Upon receiving the response stream, it will merge the {@link\n+   *       com.google.bigtable.v2.ReadRowsResponse.CellChunk}s in logical rows. The actual row\n+   *       implementation can be configured by the {@code rowAdapter} parameter.\n+   *   <li>Retry/resume on failure.\n+   *   <li>Filter out marker rows.\n+   * </ul>\n+   *\n+   * <p>NOTE: the caller is responsible for adding tracing & metrics.\n+   */\n+  public <RowT> ServerStreamingCallable<ReadRowsRequest, RowT> createReadRowsBaseCallable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb025ae15fdc87c17c4d358a34dc4abcf4e82c63"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d32c60f5a6320b7ab696f232965341c1d6b6cbb", "author": {"user": {"login": "rahulKQL", "name": "Rahul Kesharwani"}}, "url": "https://github.com/googleapis/java-bigtable/commit/5d32c60f5a6320b7ab696f232965341c1d6b6cbb", "committedDate": "2020-05-11T14:46:40Z", "message": "chore: reorganized createReadRows callable methods\n\nWith this commit, the public createReadRowsCallable() would refer to single createReadRowsBaseCallable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5Mjg1OTQ0", "url": "https://github.com/googleapis/java-bigtable/pull/276#pullrequestreview-409285944", "createdAt": "2020-05-11T15:32:00Z", "commit": {"oid": "5d32c60f5a6320b7ab696f232965341c1d6b6cbb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1104, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}