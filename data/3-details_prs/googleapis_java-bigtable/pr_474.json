{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MTQzMzI5", "number": 474, "title": "fix: Make refreshing channel compatible with BigtableDataClientFactory", "bodyText": "Thank you for opening a Pull Request! Before submitting your PR, there are a few things you can do to make sure it goes smoothly:\n\n Make sure to open an issue as a bug/issue before writing your code!  That way we can discuss the change, evaluate designs, and agree on the general idea\n Ensure the tests and linter pass\n Code coverage does not decrease (if any source code was changed)\n Appropriate docs were updated (if necessary)\n\nFixes #458  \u2615\ufe0f", "createdAt": "2020-10-16T23:16:17Z", "url": "https://github.com/googleapis/java-bigtable/pull/474", "merged": true, "mergeCommit": {"oid": "fc741645536e01fac772136bc8346f73ff95e600"}, "closed": true, "closedAt": "2020-10-22T17:59:03Z", "author": {"login": "mutianf"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTOxcCAH2gAyNTA1MTQzMzI5OjYxZDVlNjMyZTZjNjRlMjczYWMwNjQxNTBhZjkxZTBhODE0OTc5ZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVE_58AH2gAyNTA1MTQzMzI5OmQyNmUxN2E2NDQ0NTE0NmM2ZmU4MTQ2M2UwMDMzMjQxOTZhMDRlZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "61d5e632e6c64e273ac064150af91e0a814979dd", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/61d5e632e6c64e273ac064150af91e0a814979dd", "committedDate": "2020-10-16T23:14:28Z", "message": "Make refreshing channel compatible with BigtableDataClientFactory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwODQzOTEz", "url": "https://github.com/googleapis/java-bigtable/pull/474#pullrequestreview-510843913", "createdAt": "2020-10-16T23:18:06Z", "commit": {"oid": "61d5e632e6c64e273ac064150af91e0a814979dd"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMzoxODowNlrOHjSI5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMzoxODowN1rOHjSI6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1OTM5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Preconditions.checkArgument(appProfileId != null,\n          \n          \n            \n                        \"refreshingChannel only works when appProfileId is set\");\n          \n          \n            \n                    InstantiatingGrpcChannelProvider.Builder channelProviderBuilder =\n          \n          \n            \n                        ((InstantiatingGrpcChannelProvider) getTransportChannelProvider()).toBuilder();\n          \n          \n            \n                    Preconditions.checkArgument(\n          \n          \n            \n                        appProfileId != null, \"refreshingChannel only works when appProfileId is set\");\n          \n          \n            \n                          BigtableChannelPrimer.create(\n          \n          \n            \n                              getCredentialsProvider().getCredentials(),\n          \n          \n            \n                              projectId,\n          \n          \n            \n                              instanceId,\n          \n          \n            \n                              appProfileId,\n          \n          \n            \n                              primedTableIds));", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r506759396", "createdAt": "2020-10-16T23:18:06Z", "author": {"login": "yoshi-code-bot"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java", "diffHunk": "@@ -806,6 +807,18 @@ public EnhancedBigtableStubSettings build() {\n         Preconditions.checkArgument(\n             getTransportChannelProvider() instanceof InstantiatingGrpcChannelProvider,\n             \"refreshingChannel only works with InstantiatingGrpcChannelProviders\");\n+        Preconditions.checkArgument(appProfileId != null,\n+            \"refreshingChannel only works when appProfileId is set\");\n+        InstantiatingGrpcChannelProvider.Builder channelProviderBuilder =\n+            ((InstantiatingGrpcChannelProvider) getTransportChannelProvider()).toBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61d5e632e6c64e273ac064150af91e0a814979dd"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1OTM5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                BigtableDataSettings.Builder builder = BigtableDataSettings.newBuilderForEmulator(port)\n          \n          \n            \n                    .setProjectId(DEFAULT_PROJECT_ID)\n          \n          \n            \n                    .setInstanceId(DEFAULT_INSTANCE_ID)\n          \n          \n            \n                    .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n          \n          \n            \n                    .setPrimingTableIds(tableIds)\n          \n          \n            \n                    .setRefreshingChannel(true);\n          \n          \n            \n                BigtableDataSettings.Builder builder =\n          \n          \n            \n                    BigtableDataSettings.newBuilderForEmulator(port)\n          \n          \n            \n                        .setProjectId(DEFAULT_PROJECT_ID)\n          \n          \n            \n                        .setInstanceId(DEFAULT_INSTANCE_ID)\n          \n          \n            \n                        .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n          \n          \n            \n                        .setPrimingTableIds(tableIds)\n          \n          \n            \n                        .setRefreshingChannel(true);", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r506759397", "createdAt": "2020-10-16T23:18:07Z", "author": {"login": "yoshi-code-bot"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactoryTest.java", "diffHunk": "@@ -191,8 +230,73 @@ public void testCreateForInstanceWithAppProfileHasCorrectSettings() throws Excep\n     assertThat(service.lastRequest.getAppProfileId()).isEqualTo(\"other-app-profile\");\n   }\n \n+  @Test\n+  public void testCreateWithRefreshingChannel() throws Exception {\n+    String[] tableIds = {\"fake-table1\", \"fake-table2\"};\n+    int poolSize = 3;\n+    BigtableDataSettings.Builder builder = BigtableDataSettings.newBuilderForEmulator(port)\n+        .setProjectId(DEFAULT_PROJECT_ID)\n+        .setInstanceId(DEFAULT_INSTANCE_ID)\n+        .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n+        .setPrimingTableIds(tableIds)\n+        .setRefreshingChannel(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61d5e632e6c64e273ac064150af91e0a814979dd"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc1OTQwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .setTableName(String.format(\"projects/%s/instances/%s/tables/%s\",\n          \n          \n            \n                            DEFAULT_PROJECT_ID, DEFAULT_INSTANCE_ID, tableId))\n          \n          \n            \n                        .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n          \n          \n            \n                        .setRows(RowSet.newBuilder().addRowKeys(ByteString.copyFromUtf8(\"nonexistent-priming-row\")))\n          \n          \n            \n                        .setFilter(RowFilter.newBuilder().setBlockAllFilter(true).build())\n          \n          \n            \n                        .setRowsLimit(1)\n          \n          \n            \n                        .build()\n          \n          \n            \n                    );\n          \n          \n            \n                            .setTableName(\n          \n          \n            \n                                String.format(\n          \n          \n            \n                                    \"projects/%s/instances/%s/tables/%s\",\n          \n          \n            \n                                    DEFAULT_PROJECT_ID, DEFAULT_INSTANCE_ID, tableId))\n          \n          \n            \n                            .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n          \n          \n            \n                            .setRows(\n          \n          \n            \n                                RowSet.newBuilder()\n          \n          \n            \n                                    .addRowKeys(ByteString.copyFromUtf8(\"nonexistent-priming-row\")))\n          \n          \n            \n                            .setFilter(RowFilter.newBuilder().setBlockAllFilter(true).build())\n          \n          \n            \n                            .setRowsLimit(1)\n          \n          \n            \n                            .build());", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r506759400", "createdAt": "2020-10-16T23:18:07Z", "author": {"login": "yoshi-code-bot"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactoryTest.java", "diffHunk": "@@ -191,8 +230,73 @@ public void testCreateForInstanceWithAppProfileHasCorrectSettings() throws Excep\n     assertThat(service.lastRequest.getAppProfileId()).isEqualTo(\"other-app-profile\");\n   }\n \n+  @Test\n+  public void testCreateWithRefreshingChannel() throws Exception {\n+    String[] tableIds = {\"fake-table1\", \"fake-table2\"};\n+    int poolSize = 3;\n+    BigtableDataSettings.Builder builder = BigtableDataSettings.newBuilderForEmulator(port)\n+        .setProjectId(DEFAULT_PROJECT_ID)\n+        .setInstanceId(DEFAULT_INSTANCE_ID)\n+        .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n+        .setPrimingTableIds(tableIds)\n+        .setRefreshingChannel(true);\n+    InstantiatingGrpcChannelProvider channelProvider =\n+        (InstantiatingGrpcChannelProvider) builder.stubSettings().getTransportChannelProvider();\n+    InstantiatingGrpcChannelProvider.Builder channelProviderBuilder = channelProvider.toBuilder();\n+    channelProviderBuilder.setPoolSize(poolSize);\n+    builder.stubSettings().setTransportChannelProvider(channelProviderBuilder.build());\n+\n+    BigtableDataClientFactory factory = BigtableDataClientFactory.create(builder.build());\n+    factory.createDefault();\n+    factory.createForAppProfile(\"other-appprofile\");\n+    factory.createForInstance(\"other-project\", \"other-instance\");\n+\n+    // Make sure that the clients are sharing the same ChannelPool\n+    assertThat(attributes).hasSize(poolSize);\n+    // Make sure that prime requests were sent only once per table per connection\n+    assertThat(service.readRowsRequests).hasSize(poolSize * tableIds.length);\n+    List<ReadRowsRequest> expectedRequests = new LinkedList<>();\n+    for (String tableId : tableIds) {\n+      for (int i = 0; i < poolSize; i++) {\n+        expectedRequests.add(\n+            ReadRowsRequest.newBuilder()\n+            .setTableName(String.format(\"projects/%s/instances/%s/tables/%s\",\n+                DEFAULT_PROJECT_ID, DEFAULT_INSTANCE_ID, tableId))\n+            .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n+            .setRows(RowSet.newBuilder().addRowKeys(ByteString.copyFromUtf8(\"nonexistent-priming-row\")))\n+            .setFilter(RowFilter.newBuilder().setBlockAllFilter(true).build())\n+            .setRowsLimit(1)\n+            .build()\n+        );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61d5e632e6c64e273ac064150af91e0a814979dd"}, "originalPosition": 138}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45673db1fec87c67863ad0b1d243c7091d3bd27d", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/45673db1fec87c67863ad0b1d243c7091d3bd27d", "committedDate": "2020-10-16T23:30:12Z", "message": "Fix formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "054704c0402f1e03fa25613da16703bfd5d631d9", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/054704c0402f1e03fa25613da16703bfd5d631d9", "committedDate": "2020-10-18T01:48:01Z", "message": "fix test case and add coverage"}, "afterCommit": {"oid": "c89aa60cd6da1f381229f75aae0d853e7557cf7a", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/c89aa60cd6da1f381229f75aae0d853e7557cf7a", "committedDate": "2020-10-18T01:57:57Z", "message": "Fix test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDI3MDkx", "url": "https://github.com/googleapis/java-bigtable/pull/474#pullrequestreview-511027091", "createdAt": "2020-10-18T02:01:17Z", "commit": {"oid": "c89aa60cd6da1f381229f75aae0d853e7557cf7a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139254dd248d95fbdea3de99f61920aa5ccd6c6a", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/139254dd248d95fbdea3de99f61920aa5ccd6c6a", "committedDate": "2020-10-18T02:03:43Z", "message": "Fix test case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c89aa60cd6da1f381229f75aae0d853e7557cf7a", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/c89aa60cd6da1f381229f75aae0d853e7557cf7a", "committedDate": "2020-10-18T01:57:57Z", "message": "Fix test case"}, "afterCommit": {"oid": "139254dd248d95fbdea3de99f61920aa5ccd6c6a", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/139254dd248d95fbdea3de99f61920aa5ccd6c6a", "committedDate": "2020-10-18T02:03:43Z", "message": "Fix test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODU3Mzkx", "url": "https://github.com/googleapis/java-bigtable/pull/474#pullrequestreview-511857391", "createdAt": "2020-10-19T14:57:41Z", "commit": {"oid": "139254dd248d95fbdea3de99f61920aa5ccd6c6a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1Nzo0MVrOHkS_-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDo1Nzo0MVrOHkS_-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgyMjA3NQ==", "bodyText": "can we instead move this logic to FakeServiceHelper?", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r507822075", "createdAt": "2020-10-19T14:57:41Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactoryTest.java", "diffHunk": "@@ -60,16 +76,35 @@\n   private WatchdogProvider watchdogProvider;\n   private ApiClock apiClock;\n   private BigtableDataSettings defaultSettings;\n+  private int port;\n+\n+  private final BlockingQueue<Attributes> attributes = new LinkedBlockingDeque<>();\n \n   @Before\n   public void setUp() throws IOException {\n     service = new FakeBigtableService();\n \n-    serviceHelper = new FakeServiceHelper(service);\n-    serviceHelper.start();\n+    try (ServerSocket ss = new ServerSocket(0)) {\n+      port = ss.getLocalPort();\n+    }\n+\n+    fakeServer =\n+        ServerBuilder.forPort(port)\n+            .addService(service)\n+            .addTransportFilter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139254dd248d95fbdea3de99f61920aa5ccd6c6a"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "213112311e3d47587f79255d75fb13784dd53213", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/213112311e3d47587f79255d75fb13784dd53213", "committedDate": "2020-10-19T17:32:06Z", "message": "Add ServerTransportFilter in FakeServiceHelper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODY1Mjkw", "url": "https://github.com/googleapis/java-bigtable/pull/474#pullrequestreview-512865290", "createdAt": "2020-10-20T15:31:15Z", "commit": {"oid": "213112311e3d47587f79255d75fb13784dd53213"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozMToxNVrOHlDULg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo0MDowMlrOHlD81A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxMzY3OA==", "bodyText": "Please add comment, something along the lines of:\nChannel refreshing only needs to be configured on the shared ClientContext, derivative clients don't have the ability to reconfigure the refresh logic", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r508613678", "createdAt": "2020-10-20T15:31:15Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactory.java", "diffHunk": "@@ -189,8 +189,9 @@ public BigtableDataClient createForInstance(\n   }\n \n   // Update stub settings to use shared resources in this factory\n-  private void patchStubSettings(StubSettings.Builder stubSettings) {\n+  private void patchStubSettings(EnhancedBigtableStubSettings.Builder stubSettings) {\n     stubSettings\n+        .setRefreshingChannel(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "213112311e3d47587f79255d75fb13784dd53213"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYyNDA4NA==", "bodyText": "I think there is a subtle bug here:\nIf the original CredentialsProvider was a GoogleCredentialsProvider then each time getCredentials is called, it will be a new instance, which means the credentials used for refreshing will diverge from the normal request credentials.\nI think you need to wrap reset the credentials to be FixedCredentials here.\nAlso please move the getCredentials line into its own try/catch its kinda hard to see which line can throw the IOException", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r508624084", "createdAt": "2020-10-20T15:40:02Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java", "diffHunk": "@@ -806,6 +807,20 @@ public EnhancedBigtableStubSettings build() {\n         Preconditions.checkArgument(\n             getTransportChannelProvider() instanceof InstantiatingGrpcChannelProvider,\n             \"refreshingChannel only works with InstantiatingGrpcChannelProviders\");\n+        InstantiatingGrpcChannelProvider.Builder channelProviderBuilder =\n+            ((InstantiatingGrpcChannelProvider) getTransportChannelProvider()).toBuilder();\n+        try {\n+          channelProviderBuilder.setChannelPrimer(\n+              BigtableChannelPrimer.create(\n+                  getCredentialsProvider().getCredentials(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "213112311e3d47587f79255d75fb13784dd53213"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff40075d061197b3fa3fead5dc8d3c48ddb5f8e", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/2ff40075d061197b3fa3fead5dc8d3c48ddb5f8e", "committedDate": "2020-10-21T17:01:32Z", "message": "Fix credentials provider settings add added test to verify it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODU1OTQ5", "url": "https://github.com/googleapis/java-bigtable/pull/474#pullrequestreview-514855949", "createdAt": "2020-10-22T15:30:16Z", "commit": {"oid": "2ff40075d061197b3fa3fead5dc8d3c48ddb5f8e"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTozMDoxN1rOHmnlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTozMjoyMlrOHmnrbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI1NjQ1NQ==", "bodyText": "Might be good to split termination attrs from setup attrs", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r510256455", "createdAt": "2020-10-22T15:30:17Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactoryTest.java", "diffHunk": "@@ -60,16 +73,32 @@\n   private WatchdogProvider watchdogProvider;\n   private ApiClock apiClock;\n   private BigtableDataSettings defaultSettings;\n+  private int port;\n+\n+  private final BlockingQueue<Attributes> attributes = new LinkedBlockingDeque<>();\n \n   @Before\n   public void setUp() throws IOException {\n     service = new FakeBigtableService();\n-\n-    serviceHelper = new FakeServiceHelper(service);\n+    ServerTransportFilter transportFilter =\n+        new ServerTransportFilter() {\n+          @Override\n+          public Attributes transportReady(Attributes transportAttrs) {\n+            attributes.add(transportAttrs);\n+            return super.transportReady(transportAttrs);\n+          }\n+\n+          @Override\n+          public void transportTerminated(Attributes transportAttrs) {\n+            attributes.add(transportAttrs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff40075d061197b3fa3fead5dc8d3c48ddb5f8e"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI1ODAzMA==", "bodyText": "Make sure that only 1 instance is created for all clients", "url": "https://github.com/googleapis/java-bigtable/pull/474#discussion_r510258030", "createdAt": "2020-10-22T15:32:22Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/BigtableDataClientFactoryTest.java", "diffHunk": "@@ -191,8 +220,95 @@ public void testCreateForInstanceWithAppProfileHasCorrectSettings() throws Excep\n     assertThat(service.lastRequest.getAppProfileId()).isEqualTo(\"other-app-profile\");\n   }\n \n+  @Test\n+  public void testCreateWithRefreshingChannel() throws Exception {\n+    String[] tableIds = {\"fake-table1\", \"fake-table2\"};\n+    int poolSize = 3;\n+    BigtableDataSettings.Builder builder =\n+        BigtableDataSettings.newBuilderForEmulator(port)\n+            .setProjectId(DEFAULT_PROJECT_ID)\n+            .setInstanceId(DEFAULT_INSTANCE_ID)\n+            .setAppProfileId(DEFAULT_APP_PROFILE_ID)\n+            .setPrimingTableIds(tableIds)\n+            .setRefreshingChannel(true);\n+    builder\n+        .stubSettings()\n+        .setCredentialsProvider(credentialsProvider)\n+        .setStreamWatchdogProvider(watchdogProvider)\n+        .setExecutorProvider(executorProvider);\n+    InstantiatingGrpcChannelProvider channelProvider =\n+        (InstantiatingGrpcChannelProvider) builder.stubSettings().getTransportChannelProvider();\n+    InstantiatingGrpcChannelProvider.Builder channelProviderBuilder = channelProvider.toBuilder();\n+    channelProviderBuilder.setPoolSize(poolSize);\n+    builder.stubSettings().setTransportChannelProvider(channelProviderBuilder.build());\n+\n+    BigtableDataClientFactory factory = BigtableDataClientFactory.create(builder.build());\n+    factory.createDefault();\n+    factory.createForAppProfile(\"other-appprofile\");\n+    factory.createForInstance(\"other-project\", \"other-instance\");\n+\n+    // Make sure that only 1 instance is created by each provider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ff40075d061197b3fa3fead5dc8d3c48ddb5f8e"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d26e17a64445146c6fe81463e003324196a04ede", "author": {"user": {"login": "mutianf", "name": "Mattie Fu"}}, "url": "https://github.com/googleapis/java-bigtable/commit/d26e17a64445146c6fe81463e003324196a04ede", "committedDate": "2020-10-22T16:59:04Z", "message": "Clean up test cases and comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1027, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}