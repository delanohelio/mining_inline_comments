{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NjMxODE3", "number": 407, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1OTo1NFrOEgFGcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1OTo1NFrOEgFGcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDczNDU5OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowCell.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1OTo1NFrOHMvrog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo1Nzo0NFrOHMxoAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjE3OA==", "bodyText": "This doesnt optimize for the common case. The common case is empty labels. This is currently creating an extra allocation. Optimization would be:\nlabels = labels.isEmpty()? ImmutableList.of() : ImmutableList.copyOf(labels);", "url": "https://github.com/googleapis/java-bigtable/pull/407#discussion_r483126178", "createdAt": "2020-09-03T16:59:54Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowCell.java", "diffHunk": "@@ -62,7 +63,8 @@ public static RowCell create(\n       long timestamp,\n       @Nonnull List<String> labels,\n       @Nonnull ByteString value) {\n-    return new AutoValue_RowCell(family, qualifier, timestamp, value, labels);\n+    // Ensure that the list is serializable and optimize for the common case\n+    return new AutoValue_RowCell(family, qualifier, timestamp, value, ImmutableList.copyOf(labels));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b33307bdf977aed2f6e7f11ad3bbbaa588958454"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1ODAxOA==", "bodyText": "Yes, indeed. I assumed ImmutableList.of() accepts var args, but it is not.\nTernary Operator does not work here(the compiler is not happy), so I have to use if.\nPlease take a look.", "url": "https://github.com/googleapis/java-bigtable/pull/407#discussion_r483158018", "createdAt": "2020-09-03T17:57:44Z", "author": {"login": "dmitry-fa"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/RowCell.java", "diffHunk": "@@ -62,7 +63,8 @@ public static RowCell create(\n       long timestamp,\n       @Nonnull List<String> labels,\n       @Nonnull ByteString value) {\n-    return new AutoValue_RowCell(family, qualifier, timestamp, value, labels);\n+    // Ensure that the list is serializable and optimize for the common case\n+    return new AutoValue_RowCell(family, qualifier, timestamp, value, ImmutableList.copyOf(labels));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyNjE3OA=="}, "originalCommit": {"oid": "b33307bdf977aed2f6e7f11ad3bbbaa588958454"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3385, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}