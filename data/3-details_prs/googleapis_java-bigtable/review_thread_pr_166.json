{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MjI5ODk3", "number": 166, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozNjoyOFrODaQTwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozNjoyOFrODaQTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODU2NzY4OnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozNjoyOFrOFhGzVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxOTowODoxN1rOFhJbEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1ODc3NQ==", "bodyText": "can we add a test please?", "url": "https://github.com/googleapis/java-bigtable/pull/166#discussion_r370258775", "createdAt": "2020-01-23T17:36:28Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "diffHunk": "@@ -162,7 +166,11 @@ public Query range(ByteStringRange range) {\n    * filters, please use {@link Filters#interleave()} or {@link Filters#chain()}.\n    */\n   public Query filter(Filters.Filter filter) {\n-    builder.setFilter(filter.toProto());\n+    Preconditions.checkNotNull(filter, \"filter can't be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80cabb83570509dba173a3a9a651adb58f58a4b5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NTA1MA==", "bodyText": "Thanks for the review. Added test case for null check. I haven't added any test case for the filter size. I hope that should be fine.", "url": "https://github.com/googleapis/java-bigtable/pull/166#discussion_r370275050", "createdAt": "2020-01-23T18:11:24Z", "author": {"login": "rahulKQL"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "diffHunk": "@@ -162,7 +166,11 @@ public Query range(ByteStringRange range) {\n    * filters, please use {@link Filters#interleave()} or {@link Filters#chain()}.\n    */\n   public Query filter(Filters.Filter filter) {\n-    builder.setFilter(filter.toProto());\n+    Preconditions.checkNotNull(filter, \"filter can't be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1ODc3NQ=="}, "originalCommit": {"oid": "80cabb83570509dba173a3a9a651adb58f58a4b5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5NTQyMQ==", "bodyText": "Apologies for being unclear, if you could add a test case for filter size as well that would be awesome :)", "url": "https://github.com/googleapis/java-bigtable/pull/166#discussion_r370295421", "createdAt": "2020-01-23T18:54:39Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "diffHunk": "@@ -162,7 +166,11 @@ public Query range(ByteStringRange range) {\n    * filters, please use {@link Filters#interleave()} or {@link Filters#chain()}.\n    */\n   public Query filter(Filters.Filter filter) {\n-    builder.setFilter(filter.toProto());\n+    Preconditions.checkNotNull(filter, \"filter can't be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1ODc3NQ=="}, "originalCommit": {"oid": "80cabb83570509dba173a3a9a651adb58f58a4b5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5ODkwOA==", "bodyText": "I intentionally didn't add test case for that. Reason being the filter size needs to be more than 20MB, I thought that'd be a little large.\nI would add unit test right away.", "url": "https://github.com/googleapis/java-bigtable/pull/166#discussion_r370298908", "createdAt": "2020-01-23T19:02:05Z", "author": {"login": "rahulKQL"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "diffHunk": "@@ -162,7 +166,11 @@ public Query range(ByteStringRange range) {\n    * filters, please use {@link Filters#interleave()} or {@link Filters#chain()}.\n    */\n   public Query filter(Filters.Filter filter) {\n-    builder.setFilter(filter.toProto());\n+    Preconditions.checkNotNull(filter, \"filter can't be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1ODc3NQ=="}, "originalCommit": {"oid": "80cabb83570509dba173a3a9a651adb58f58a4b5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDMwMTcxNA==", "bodyText": "Understood - LGTM. @igorbernstein2 any other thoughts?", "url": "https://github.com/googleapis/java-bigtable/pull/166#discussion_r370301714", "createdAt": "2020-01-23T19:08:17Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/models/Query.java", "diffHunk": "@@ -162,7 +166,11 @@ public Query range(ByteStringRange range) {\n    * filters, please use {@link Filters#interleave()} or {@link Filters#chain()}.\n    */\n   public Query filter(Filters.Filter filter) {\n-    builder.setFilter(filter.toProto());\n+    Preconditions.checkNotNull(filter, \"filter can't be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1ODc3NQ=="}, "originalCommit": {"oid": "80cabb83570509dba173a3a9a651adb58f58a4b5"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3423, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}