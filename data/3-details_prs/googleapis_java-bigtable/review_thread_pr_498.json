{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjQ0Mjkz", "number": 498, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1MToxOFrOEzVbmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NjozNlrOEzY20A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjYzOTYwOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1MToxOFrOHqfnQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzoxMjowMVrOHqmLng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMDE5Mw==", "bodyText": "I think this integration test is in a weird state: it was written in fork where TestEnvRule didnt exist and uses its own property names (ie. bigtable.adminendpoint vs bigtable.admin-endpoint. So this test should either migrate to the TestEnvRule now or we should stick to the bespoke property names", "url": "https://github.com/googleapis/java-bigtable/pull/498#discussion_r514320193", "createdAt": "2020-10-29T14:51:18Z", "author": {"login": "igorbernstein2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "diffHunk": "@@ -56,11 +64,11 @@\n \n @RunWith(JUnit4.class)\n public class BigtableBackupIT {\n+  @ClassRule public static TestEnvRule testEnvRule = new TestEnvRule();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4f4d296d618e25710e6aa55d265240c4eddc9a3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMTgwNA==", "bodyText": "I'll give migrating a try", "url": "https://github.com/googleapis/java-bigtable/pull/498#discussion_r514321804", "createdAt": "2020-10-29T14:53:22Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "diffHunk": "@@ -56,11 +64,11 @@\n \n @RunWith(JUnit4.class)\n public class BigtableBackupIT {\n+  @ClassRule public static TestEnvRule testEnvRule = new TestEnvRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMDE5Mw=="}, "originalCommit": {"oid": "b4f4d296d618e25710e6aa55d265240c4eddc9a3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQyNzgwNg==", "bodyText": "@igorbernstein2 switched over to TestEnvRule, PTAL", "url": "https://github.com/googleapis/java-bigtable/pull/498#discussion_r514427806", "createdAt": "2020-10-29T17:12:01Z", "author": {"login": "kolea2"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "diffHunk": "@@ -56,11 +64,11 @@\n \n @RunWith(JUnit4.class)\n public class BigtableBackupIT {\n+  @ClassRule public static TestEnvRule testEnvRule = new TestEnvRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyMDE5Mw=="}, "originalCommit": {"oid": "b4f4d296d618e25710e6aa55d265240c4eddc9a3"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzIwMDgwOnYy", "diffSide": "RIGHT", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NjozNlrOHqlFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjo0NjozNlrOHqlFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQwOTkwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if(result.getOptimizeRestoredTableOperationToken() != null) {\n          \n          \n            \n                  if (result.getOptimizeRestoredTableOperationToken() != null) {", "url": "https://github.com/googleapis/java-bigtable/pull/498#discussion_r514409908", "createdAt": "2020-10-29T16:46:36Z", "author": {"login": "yoshi-code-bot"}, "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/admin/v2/it/BigtableBackupIT.java", "diffHunk": "@@ -320,13 +279,15 @@ public void restoreTableTest() throws InterruptedException, ExecutionException {\n           .that(result.getTable().getId())\n           .isEqualTo(tableId);\n \n-      // The assertion might be missing if the test is running against a HDD cluster or an\n-      // optimization is not necessary.\n-      assertWithMessage(\"Empty OptimizeRestoredTable token\")\n-          .that(result.getOptimizeRestoredTableOperationToken())\n-          .isNotNull();\n-      tableAdmin.awaitOptimizeRestoredTable(result.getOptimizeRestoredTableOperationToken());\n-      tableAdmin.getTable(tableId);\n+      if(result.getOptimizeRestoredTableOperationToken() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5d97add00194c48d6da5e57c5e6fd8130244e3f"}, "originalPosition": 243}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3355, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}