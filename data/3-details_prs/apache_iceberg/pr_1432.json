{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNzg1ODk0", "number": 1432, "title": "Core: CachingCatalog - create metadata table instance based on cached table operation for origin table", "bodyText": "closes #1431\nThis patch invalidates metadata tables in cache when the base table is modified, via leveraging listener.\nIceberg sends CreateSnapshotEvent event when the table adds a new snapshot, which means the table is modified. CachingCatalog will listen the event and find the relevant metadata tables in the cache, and invalidate them.\nWith Spark 3 the tricky part appears: listener provides table name as full identifier which may add catalog name if you don't use default Spark catalog, whereas CachingCatalog caches the table identifiers which don't contain the catalog name part. Since we just invalidate the cache entities which won't hurt much, the patch applies a bit broader criteria to match with.\n\ncompare with case-insensitive, regardless of the option of case-sensitive in CachingCatalog\ncompare via endsWith(), as we assume caching catalog has table identifiers which don't have the catalog part", "createdAt": "2020-09-08T05:34:20Z", "url": "https://github.com/apache/iceberg/pull/1432", "merged": true, "mergeCommit": {"oid": "18b0ee76e1d694ee1a436d18ba992a8b4335ff48"}, "closed": true, "closedAt": "2020-09-10T22:01:51Z", "author": {"login": "HeartSaVioR"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGw1sGAH2gAyNDgxNzg1ODk0OmY2ZDA0MDMxZDc1Nzc3ZmVkMjYwMWU2ODBmYTU0MzhiZTQ3OWU3ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHYiO0gH2gAyNDgxNzg1ODk0OjlkZjY5ZWY1MzdlMjY3ZjMyODY1OTQwZjkxODQxMmUxZTlhY2Q2OWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6d04031d75777fed2601e680fa5438be479e782", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/f6d04031d75777fed2601e680fa5438be479e782", "committedDate": "2020-09-08T05:34:52Z", "message": "Core. Invalidate metadata tables in cache when the base table is modified"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0269750afeedc0385aacda6b2ac7af8d55a4519a", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/0269750afeedc0385aacda6b2ac7af8d55a4519a", "committedDate": "2020-09-08T05:17:22Z", "message": "Core. Invalidate metadata tables in cache when the base table is modified"}, "afterCommit": {"oid": "f6d04031d75777fed2601e680fa5438be479e782", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/f6d04031d75777fed2601e680fa5438be479e782", "committedDate": "2020-09-08T05:34:52Z", "message": "Core. Invalidate metadata tables in cache when the base table is modified"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODEwMDYz", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-483810063", "createdAt": "2020-09-08T05:46:53Z", "commit": {"oid": "f6d04031d75777fed2601e680fa5438be479e782"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTo0Njo1NFrOHONhDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNTo0Njo1NFrOHONhDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDY2MzU2Ng==", "bodyText": "I only added the test to verify the new change. If we want to have another functional tests, we can have them in separate PR.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r484663566", "createdAt": "2020-09-08T05:46:54Z", "author": {"login": "HeartSaVioR"}, "path": "core/src/test/java/org/apache/iceberg/hadoop/TestCachingCatalog.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.hadoop;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.iceberg.CachingCatalog;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.catalog.Catalog;\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableMap;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestCachingCatalog extends HadoopTableTestBase {\n+\n+  @Test\n+  public void testInvalidateMetadataTablesIfBaseTableIsModified() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6d04031d75777fed2601e680fa5438be479e782"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/3e2b25992331c34f7a210139fdf8c7c5089491ca", "committedDate": "2020-09-09T05:19:50Z", "message": "Change the approach to create metadata table instance based on cached table operation for origin table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NjY5MzY3", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-484669367", "createdAt": "2020-09-09T05:24:02Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyNDowM1rOHO3Iyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyNDowM1rOHO3Iyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTQ4Mw==", "bodyText": "Calling BaseMetastoreCatalog.fullTableName here is a bit odd, but I'm not sure we would want to extract the method to somewhere else.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485345483", "createdAt": "2020-09-09T05:24:03Z", "author": {"login": "HeartSaVioR"}, "path": "core/src/main/java/org/apache/iceberg/MetadataTableUtils.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.exceptions.NoSuchTableException;\n+\n+public final class MetadataTableUtils {\n+  private MetadataTableUtils() {}\n+\n+  public static boolean isValidMetadataIdentifier(TableIdentifier identifier) {\n+    return MetadataTableType.from(identifier.name()) != null &&\n+        isValidIdentifier(TableIdentifier.of(identifier.namespace().levels()));\n+  }\n+\n+  private static boolean isValidIdentifier(TableIdentifier tableIdentifier) {\n+    // by default allow all identifiers\n+    return true;\n+  }\n+\n+  public static Table createMetadataTableInstance(TableOperations originTableOps,\n+                                                  String fullTableName,\n+                                                  MetadataTableType type) {\n+    Table baseTableForMetadata = new BaseTable(originTableOps, fullTableName);\n+    switch (type) {\n+      case ENTRIES:\n+        return new ManifestEntriesTable(originTableOps, baseTableForMetadata);\n+      case FILES:\n+        return new DataFilesTable(originTableOps, baseTableForMetadata);\n+      case HISTORY:\n+        return new HistoryTable(originTableOps, baseTableForMetadata);\n+      case SNAPSHOTS:\n+        return new SnapshotsTable(originTableOps, baseTableForMetadata);\n+      case MANIFESTS:\n+        return new ManifestsTable(originTableOps, baseTableForMetadata);\n+      case PARTITIONS:\n+        return new PartitionsTable(originTableOps, baseTableForMetadata);\n+      case ALL_DATA_FILES:\n+        return new AllDataFilesTable(originTableOps, baseTableForMetadata);\n+      case ALL_MANIFESTS:\n+        return new AllManifestsTable(originTableOps, baseTableForMetadata);\n+      case ALL_ENTRIES:\n+        return new AllEntriesTable(originTableOps, baseTableForMetadata);\n+      default:\n+        throw new NoSuchTableException(\"Unknown metadata table type: %s for %s\", type, fullTableName);\n+    }\n+  }\n+\n+  public static Table createMetadataTableInstance(TableOperations originTableOps,\n+                                                  TableIdentifier originTableIdentifier,\n+                                                  MetadataTableType type) {\n+    return createMetadataTableInstance(originTableOps,\n+        BaseMetastoreCatalog.fullTableName(type.name(), originTableIdentifier),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDcxNzI0", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485471724", "createdAt": "2020-09-09T23:37:39Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzozOVrOHPdzDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzozOVrOHPdzDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3ODg5NQ==", "bodyText": "I don't think that this needs to be a final class. That limits what we can do to evolve it later.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485978895", "createdAt": "2020-09-09T23:37:39Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/MetadataTableUtils.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.exceptions.NoSuchTableException;\n+\n+public final class MetadataTableUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDcxODI3", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485471827", "createdAt": "2020-09-09T23:37:58Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzo1OFrOHPdzYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozNzo1OFrOHPdzYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3ODk3Ng==", "bodyText": "I don't think that {} is allowed by our style checker. I think you have to add a newline.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485978976", "createdAt": "2020-09-09T23:37:58Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/MetadataTableUtils.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.exceptions.NoSuchTableException;\n+\n+public final class MetadataTableUtils {\n+  private MetadataTableUtils() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDcyMjIw", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485472220", "createdAt": "2020-09-09T23:39:02Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozOTowMlrOHPd0qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzozOTowMlrOHPd0qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3OTMwNQ==", "bodyText": "I don't see much value in delegating to this method, since it assumes that the identifier is valid. Instead, I think we should just check that the identifier might reference a metadata table in isValidMetadataIdentifier and assume the remaining part is valid. After all, we'll have to load it anyway.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485979305", "createdAt": "2020-09-09T23:39:02Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/MetadataTableUtils.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.exceptions.NoSuchTableException;\n+\n+public final class MetadataTableUtils {\n+  private MetadataTableUtils() {}\n+\n+  public static boolean isValidMetadataIdentifier(TableIdentifier identifier) {\n+    return MetadataTableType.from(identifier.name()) != null &&\n+        isValidIdentifier(TableIdentifier.of(identifier.namespace().levels()));\n+  }\n+\n+  private static boolean isValidIdentifier(TableIdentifier tableIdentifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDczMzQw", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485473340", "createdAt": "2020-09-09T23:42:25Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MjoyNVrOHPd4jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MjoyNVrOHPd4jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4MDMwMA==", "bodyText": "We avoid static method imports. Can you call MetadataTableUtils.createMetadataTableInstance instead?", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485980300", "createdAt": "2020-09-09T23:42:25Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java", "diffHunk": "@@ -50,6 +50,8 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+import static org.apache.iceberg.MetadataTableUtils.createMetadataTableInstance;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDczNTAx", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485473501", "createdAt": "2020-09-09T23:42:54Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0Mjo1NFrOHPd5FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0Mjo1NFrOHPd5FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4MDQzNw==", "bodyText": "This implementation looks good to me.", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485980437", "createdAt": "2020-09-09T23:42:54Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +67,29 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    TableIdentifier canonicalized = canonicalizeIdentifier(ident);\n+    Table cached = tableCache.getIfPresent(canonicalized);\n+    if (cached != null) {\n+      return cached;\n+    }\n+\n+    if (isValidMetadataIdentifier(canonicalized)) {\n+      TableIdentifier originTableIdentifier = TableIdentifier.of(canonicalized.namespace().levels());\n+      Table originTable = tableCache.get(originTableIdentifier, catalog::loadTable);\n+\n+      // share TableOperations instance of origin table for all metadata tables, so that metadata table instances are\n+      // also refreshed as well when origin table instance is refreshed.\n+      if (originTable instanceof HasTableOperations) {\n+        TableOperations ops = ((HasTableOperations) originTable).operations();\n+        MetadataTableType type = MetadataTableType.from(canonicalized.name());\n+\n+        Table metadataTable = createMetadataTableInstance(ops, originTableIdentifier, type);\n+        tableCache.put(canonicalized, metadataTable);\n+        return metadataTable;\n+      }\n+    }\n+\n+    return tableCache.get(canonicalized, catalog::loadTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDczNzA0", "url": "https://github.com/apache/iceberg/pull/1432#pullrequestreview-485473704", "createdAt": "2020-09-09T23:43:30Z", "commit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MzozMFrOHPd5wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzo0MzozMFrOHPd5wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk4MDYxMA==", "bodyText": "How about renaming this to hasMetadataTableName since we assume the rest is a valid identifier?", "url": "https://github.com/apache/iceberg/pull/1432#discussion_r485980610", "createdAt": "2020-09-09T23:43:30Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/MetadataTableUtils.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.exceptions.NoSuchTableException;\n+\n+public final class MetadataTableUtils {\n+  private MetadataTableUtils() {}\n+\n+  public static boolean isValidMetadataIdentifier(TableIdentifier identifier) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e2b25992331c34f7a210139fdf8c7c5089491ca"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4876d7e0d4cde7bca0e374b8e783bc33b5fc64cf", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/4876d7e0d4cde7bca0e374b8e783bc33b5fc64cf", "committedDate": "2020-09-10T00:58:12Z", "message": "Reflect review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9df69ef537e267f32865940f918412e1e9acd69e", "author": {"user": {"login": "HeartSaVioR", "name": "Jungtaek Lim"}}, "url": "https://github.com/apache/iceberg/commit/9df69ef537e267f32865940f918412e1e9acd69e", "committedDate": "2020-09-10T03:49:49Z", "message": "Style fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4186, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}