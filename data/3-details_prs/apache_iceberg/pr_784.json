{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDUxODU0", "number": 784, "title": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.", "bodyText": "While obtaining a file system based on provided configuration covers the majority of use cases, it does not cover the ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled.", "createdAt": "2020-02-06T18:40:20Z", "url": "https://github.com/apache/iceberg/pull/784", "merged": true, "mergeCommit": {"oid": "87c3cf620203758d572658d269e2bf8ebb3c1e9e"}, "closed": true, "closedAt": "2020-02-17T00:08:17Z", "author": {"login": "vrozov"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAG4ICgH2gAyMzcyMDUxODU0OjEwODkyZGIzYzZkZDNkZWNhNGIzMzIwMDhkYjI3ZDNkOTIzODg1MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDI6M4ABqjMwMjUxMDIwMTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10892db3c6dd3deca4b332008db27d3d92388507", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/10892db3c6dd3deca4b332008db27d3d92388507", "committedDate": "2020-02-01T17:06:49Z", "message": "Instantiate Hadoop FileSystem during construction of HadoopOutputFile similar to HadoopInputFile and use it to create HadoopInputFile and other methods."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzgyNzIw", "url": "https://github.com/apache/iceberg/pull/784#pullrequestreview-354782720", "createdAt": "2020-02-06T21:25:26Z", "commit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzY1NzUy", "url": "https://github.com/apache/iceberg/pull/784#pullrequestreview-356365752", "createdAt": "2020-02-11T00:45:52Z", "commit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NTo1MlrOFn6tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NTo1MlrOFn6tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwMDY5MA==", "bodyText": "This needs to return the Configuration that was passed in when creating the HadoopInputFile, if there was one. The file system's Configuration may not contain the same configuration properties as the one that was passed in, and this Configuration is needed in some paths.", "url": "https://github.com/apache/iceberg/pull/784#discussion_r377400690", "createdAt": "2020-02-11T00:45:52Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopInputFile.java", "diffHunk": "@@ -133,7 +143,7 @@ public SeekableInputStream newStream() {\n   }\n \n   public Configuration getConf() {\n-    return conf;\n+    return fs.getConf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzY1OTQ4", "url": "https://github.com/apache/iceberg/pull/784#pullrequestreview-356365948", "createdAt": "2020-02-11T00:46:34Z", "commit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NjozNFrOFn6uJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NjozNFrOFn6uJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwMDg2OA==", "bodyText": "This should include an error message that explains what went wrong, like \"Invalid input file length: %s\"", "url": "https://github.com/apache/iceberg/pull/784#discussion_r377400868", "createdAt": "2020-02-11T00:46:34Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopInputFile.java", "diffHunk": "@@ -54,51 +55,60 @@ public static HadoopInputFile fromLocation(CharSequence location, long length,\n     return fromPath(path, length, conf);\n   }\n \n+  public static HadoopInputFile fromLocation(CharSequence location, FileSystem fs) {\n+    Path path = new Path(location.toString());\n+    return fromPath(path, fs);\n+  }\n+\n+  public static HadoopInputFile fromLocation(CharSequence location, long length,\n+                                             FileSystem fs) {\n+    Path path = new Path(location.toString());\n+    return fromPath(path, length, fs);\n+  }\n+\n   public static HadoopInputFile fromPath(Path path, Configuration conf) {\n-    try {\n-      FileSystem fs = path.getFileSystem(conf);\n-      return new HadoopInputFile(fs, path, conf);\n-    } catch (IOException e) {\n-      throw new RuntimeIOException(e, \"Failed to get file system for path: %s\", path);\n-    }\n+    FileSystem fs = Util.getFs(path, conf);\n+    return fromPath(path, fs);\n   }\n \n   public static HadoopInputFile fromPath(Path path, long length, Configuration conf) {\n-    try {\n-      FileSystem fs = path.getFileSystem(conf);\n-      return new HadoopInputFile(fs, path, length, conf);\n-    } catch (IOException e) {\n-      throw new RuntimeIOException(e, \"Failed to get file system for path: %s\", path);\n-    }\n+    FileSystem fs = Util.getFs(path, conf);\n+    return fromPath(path, length, fs);\n+  }\n+\n+  public static HadoopInputFile fromPath(Path path, FileSystem fs) {\n+    return new HadoopInputFile(fs, path);\n+  }\n+\n+  public static HadoopInputFile fromPath(Path path, long length, FileSystem fs) {\n+    return new HadoopInputFile(fs, path, length);\n   }\n \n   public static HadoopInputFile fromStatus(FileStatus stat, Configuration conf) {\n-    try {\n-      FileSystem fs = stat.getPath().getFileSystem(conf);\n-      return new HadoopInputFile(fs, stat, conf);\n-    } catch (IOException e) {\n-      throw new RuntimeIOException(e, \"Failed to get file system for path: %s\", stat.getPath());\n-    }\n+    FileSystem fs = Util.getFs(stat.getPath(), conf);\n+    return fromStatus(stat, fs);\n+  }\n+\n+  public static HadoopInputFile fromStatus(FileStatus stat, FileSystem fs) {\n+    return new HadoopInputFile(fs, stat);\n   }\n \n-  private HadoopInputFile(FileSystem fs, Path path, Configuration conf) {\n+  private HadoopInputFile(FileSystem fs, Path path) {\n     this.fs = fs;\n     this.path = path;\n-    this.conf = conf;\n   }\n \n-  private HadoopInputFile(FileSystem fs, Path path, long length, Configuration conf) {\n+  private HadoopInputFile(FileSystem fs, Path path, long length) {\n+    checkArgument(length >= 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzY2MjI3", "url": "https://github.com/apache/iceberg/pull/784#pullrequestreview-356366227", "createdAt": "2020-02-11T00:47:26Z", "commit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NzoyNlrOFn6vCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0NzoyNlrOFn6vCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwMTA5Ng==", "bodyText": "The project's style avoids static imports. Can you use Preconditions.checkArgument instead of just the method name where this is called?", "url": "https://github.com/apache/iceberg/pull/784#discussion_r377401096", "createdAt": "2020-02-11T00:47:26Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopInputFile.java", "diffHunk": "@@ -30,6 +30,8 @@\n import org.apache.iceberg.io.InputFile;\n import org.apache.iceberg.io.SeekableInputStream;\n \n+import static com.google.common.base.Preconditions.checkArgument;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzY2NTUy", "url": "https://github.com/apache/iceberg/pull/784#pullrequestreview-356366552", "createdAt": "2020-02-11T00:48:32Z", "commit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0ODozMlrOFn6wGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMDo0ODozMlrOFn6wGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQwMTM3MQ==", "bodyText": "This also needs to return the Configuration that was used to create the output file, if there was one.", "url": "https://github.com/apache/iceberg/pull/784#discussion_r377401371", "createdAt": "2020-02-11T00:48:32Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopOutputFile.java", "diffHunk": "@@ -73,7 +87,7 @@ public Path getPath() {\n   }\n \n   public Configuration getConf() {\n-    return conf;\n+    return fs.getConf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b8e6e4e66742568829f87dc71ad4d76738e60bf", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/6b8e6e4e66742568829f87dc71ad4d76738e60bf", "committedDate": "2020-02-06T01:33:29Z", "message": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.\n\nWhile obtaining file system based on provided configuration covers majority of use cases, it does not cover ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled."}, "afterCommit": {"oid": "45754669b73e4a41f1d9dffaaf71b79d0dbf2803", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/45754669b73e4a41f1d9dffaaf71b79d0dbf2803", "committedDate": "2020-02-11T02:53:48Z", "message": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.\n\nWhile obtaining file system based on provided configuration covers majority of use cases, it does not cover ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df2b316c934446fb791761e73f78a3995a7b30c", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/3df2b316c934446fb791761e73f78a3995a7b30c", "committedDate": "2020-02-11T03:09:51Z", "message": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.\n\nWhile obtaining file system based on provided configuration covers majority of use cases, it does not cover ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45754669b73e4a41f1d9dffaaf71b79d0dbf2803", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/45754669b73e4a41f1d9dffaaf71b79d0dbf2803", "committedDate": "2020-02-11T02:53:48Z", "message": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.\n\nWhile obtaining file system based on provided configuration covers majority of use cases, it does not cover ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled."}, "afterCommit": {"oid": "3df2b316c934446fb791761e73f78a3995a7b30c", "author": {"user": {"login": "vrozov", "name": "Vlad Rozov"}}, "url": "https://github.com/apache/iceberg/commit/3df2b316c934446fb791761e73f78a3995a7b30c", "committedDate": "2020-02-11T03:09:51Z", "message": "Allow caller to construct HadoopInputFile and HadoopOutputFile using an existing instance of FileSystem object.\n\nWhile obtaining file system based on provided configuration covers majority of use cases, it does not cover ability to use an instance of FilterFileSystem with modified behavior or cases when caching of FileSystem object is disabled."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4923, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}