{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMzEwNTM2", "number": 1139, "title": "Fix executor memory leak in Parquet row group filter", "bodyText": "Spark executors use a new thread for each task, and Iceberg reuses a thread-local evaluator when running row group filters. The combination of new threads and thread-local prevents those evaluators from being garbage collected.\nThe evaluator holds state for the current row group, which can be large for the dictionary row group filter. This PR avoids a large memory leak by cleaning up references to the row group's dictionaries and other state after each evaluation.", "createdAt": "2020-06-25T23:45:22Z", "url": "https://github.com/apache/iceberg/pull/1139", "merged": true, "mergeCommit": {"oid": "e168f59d91469e4f6aae32dbb78f8fc504a64eb2"}, "closed": true, "closedAt": "2020-06-29T18:06:42Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu3b5hgH2gAyNDQwMzEwNTM2OmM3MjBlNTY5Mjk3NjM3MDY5MTZjMTZmYmFlYThiMDQxMTZiNTU0ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcv7YGrgFqTQzODkyNzI0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c720e56929763706916c16fbaea8b04116b55485", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/c720e56929763706916c16fbaea8b04116b55485", "committedDate": "2020-06-25T23:41:51Z", "message": "Fix executor memory leak in Parquet row group filter."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4ODc2NzMz", "url": "https://github.com/apache/iceberg/pull/1139#pullrequestreview-438876733", "createdAt": "2020-06-29T04:20:16Z", "commit": {"oid": "c720e56929763706916c16fbaea8b04116b55485"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTI3MjQy", "url": "https://github.com/apache/iceberg/pull/1139#pullrequestreview-438927242", "createdAt": "2020-06-29T06:51:15Z", "commit": {"oid": "c720e56929763706916c16fbaea8b04116b55485"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo1MToxNVrOGqG94A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo1MToxNVrOGqG94A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNzUyMA==", "bodyText": "As it resets all instance variables, how about directly creating a new EvalVisitor object instead of using ThreadLocal here?", "url": "https://github.com/apache/iceberg/pull/1139#discussion_r446807520", "createdAt": "2020-06-29T06:51:15Z", "author": {"login": "jun-he"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetDictionaryRowGroupFilter.java", "diffHunk": "@@ -116,7 +116,18 @@ private boolean eval(MessageType fileSchema, BlockMetaData rowGroup,\n         }\n       }\n \n-      return ExpressionVisitors.visitEvaluator(expr, this);\n+      try {\n+        return ExpressionVisitors.visitEvaluator(expr, this);\n+\n+      } finally {\n+        // allow temporary state to be collected because this is in a thread-local", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c720e56929763706916c16fbaea8b04116b55485"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4562, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}