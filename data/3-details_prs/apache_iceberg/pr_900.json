{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTU5MTMw", "number": 900, "title": "Spark: Add ORC JMH tests for IcebergSource", "bodyText": "Added JMH tests for Flat and Nested data to compare between Spark native reader, Spark native reader vectorized and Iceberg Source\nHad to copy IcebergSourceFlatDataBenchmark and modify it to not use timestamp type since Spark native reader does not work with the ORC type which Iceberg uses for timestamps\n\nResults:\nBenchmark                                                                          Mode  Cnt   Score   Error  Units\nIcebergSourceFlatORCDataReadBenchmark.readFileSourceNonVectorized                    ss    5   8.986 \u00b1 0.891   s/op\nIcebergSourceFlatORCDataReadBenchmark.readFileSourceVectorized                       ss    5   4.093 \u00b1 0.967   s/op\nIcebergSourceFlatORCDataReadBenchmark.readIceberg                                    ss    5   9.109 \u00b1 1.556   s/op\nIcebergSourceFlatORCDataReadBenchmark.readWithProjectionFileSourceNonVectorized      ss    5   2.178 \u00b1 0.471   s/op\nIcebergSourceFlatORCDataReadBenchmark.readWithProjectionFileSourceVectorized         ss    5   0.623 \u00b1 0.093   s/op\nIcebergSourceFlatORCDataReadBenchmark.readWithProjectionIceberg                      ss    5   1.578 \u00b1 0.602   s/op\nIcebergSourceNestedORCDataReadBenchmark.readFileSourceNonVectorized                  ss    5  20.567 \u00b1 2.050   s/op\nIcebergSourceNestedORCDataReadBenchmark.readFileSourceVectorized                     ss    5  20.409 \u00b1 1.032   s/op\nIcebergSourceNestedORCDataReadBenchmark.readIceberg                                  ss    5   3.396 \u00b1 0.592   s/op\nIcebergSourceNestedORCDataReadBenchmark.readWithProjectionFileSourceNonVectorized    ss    5  21.921 \u00b1 4.345   s/op\nIcebergSourceNestedORCDataReadBenchmark.readWithProjectionFileSourceVectorized       ss    5  20.902 \u00b1 1.004   s/op\nIcebergSourceNestedORCDataReadBenchmark.readWithProjectionIceberg                    ss    5   2.935 \u00b1 0.816   s/op", "createdAt": "2020-04-07T09:48:13Z", "url": "https://github.com/apache/iceberg/pull/900", "merged": true, "mergeCommit": {"oid": "3ec55563d4e33c358df61d0f284913a0ad90fc99"}, "closed": true, "closedAt": "2020-05-22T18:31:43Z", "author": {"login": "shardulm94"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVQGT8AH2gAyNDAwMTU5MTMwOmVjNzhmOTY2ZjlmNDQ1NDg2Mzk4MzEwYzhiYWE4YTAzZTNlMDBmOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj2iT_gFqTQxNzEwNzQyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec78f966f9f445486398310c8baa8a03e3e00f9b", "author": {"user": {"login": "shardulm94", "name": "Shardul Mahadik"}}, "url": "https://github.com/apache/iceberg/commit/ec78f966f9f445486398310c8baa8a03e3e00f9b", "committedDate": "2020-04-07T09:43:52Z", "message": "Spark: Add ORC JMH tests for IcebergSource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTc3MTY3", "url": "https://github.com/apache/iceberg/pull/900#pullrequestreview-391177167", "createdAt": "2020-04-09T22:39:23Z", "commit": {"oid": "ec78f966f9f445486398310c8baa8a03e3e00f9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjozOToyNFrOGDrwlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjozOToyNFrOGDrwlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxNTg2MA==", "bodyText": "Will switching to TimestampType.withoutZone() in IcebergSourceFlatDataBenchmark help?", "url": "https://github.com/apache/iceberg/pull/900#discussion_r406515860", "createdAt": "2020-04-09T22:39:24Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/jmh/java/org/apache/iceberg/spark/source/orc/IcebergSourceFlatORCDataBenchmark.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.spark.source.orc;\n+\n+import com.google.common.collect.Maps;\n+import java.util.Map;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.iceberg.PartitionSpec;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.TableProperties;\n+import org.apache.iceberg.hadoop.HadoopTables;\n+import org.apache.iceberg.spark.source.IcebergSourceBenchmark;\n+import org.apache.iceberg.types.Types;\n+\n+import static org.apache.iceberg.types.Types.NestedField.optional;\n+import static org.apache.iceberg.types.Types.NestedField.required;\n+\n+\n+/**\n+ * Same as {@link org.apache.iceberg.spark.source.IcebergSourceFlatDataBenchmark} but we disable the Timestamp with\n+ * zone type for ORC performance tests as Spark native reader does not support ORC's TIMESTAMP_INSTANT type\n+ */\n+public abstract class IcebergSourceFlatORCDataBenchmark extends IcebergSourceBenchmark {\n+\n+  @Override\n+  protected Configuration initHadoopConf() {\n+    return new Configuration();\n+  }\n+\n+  @Override\n+  protected final Table initTable() {\n+    Schema schema = new Schema(\n+        required(1, \"longCol\", Types.LongType.get()),\n+        required(2, \"intCol\", Types.IntegerType.get()),\n+        required(3, \"floatCol\", Types.FloatType.get()),\n+        optional(4, \"doubleCol\", Types.DoubleType.get()),\n+        optional(5, \"decimalCol\", Types.DecimalType.of(20, 5)),\n+        optional(6, \"dateCol\", Types.DateType.get()),\n+        // Disable timestamp column for ORC performance tests as Spark native reader does not support ORC's", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec78f966f9f445486398310c8baa8a03e3e00f9b"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTA3NDI1", "url": "https://github.com/apache/iceberg/pull/900#pullrequestreview-417107425", "createdAt": "2020-05-22T18:25:48Z", "commit": {"oid": "ec78f966f9f445486398310c8baa8a03e3e00f9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4770, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}