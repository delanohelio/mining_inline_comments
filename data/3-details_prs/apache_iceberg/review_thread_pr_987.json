{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTcxNjg4", "number": 987, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMjo0M1rOD32Aww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyMDoxMlrOD32Ndg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODgzMjAzOnYy", "diffSide": "RIGHT", "path": "hive/src/test/java/org/apache/iceberg/hive/TestHiveCommits.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMjo0M1rOGOVP_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMjo0M1rOGOVP_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MTQwNA==", "bodyText": "nit: this itself gives the TableMetadataV2, no?", "url": "https://github.com/apache/iceberg/pull/987#discussion_r417681404", "createdAt": "2020-04-30T00:02:43Z", "author": {"login": "rdsr"}, "path": "hive/src/test/java/org/apache/iceberg/hive/TestHiveCommits.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.hive;\n+\n+import org.apache.iceberg.HasTableOperations;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.TableMetadata;\n+import org.apache.iceberg.types.Types;\n+import org.apache.thrift.TException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Matchers.anyLong;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.spy;\n+\n+public class TestHiveCommits extends HiveTableBaseTest {\n+\n+  @Test\n+  public void testSuppressUnlockExceptions() throws TException, InterruptedException {\n+    Table table = catalog.loadTable(TABLE_IDENTIFIER);\n+    HiveTableOperations ops = (HiveTableOperations) ((HasTableOperations) table).operations();\n+\n+    TableMetadata metadataV1 = ops.current();\n+\n+    table.updateSchema()\n+        .addColumn(\"n\", Types.IntegerType.get())\n+        .commit();\n+\n+    ops.refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODg2NDU0OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyMDoxMlrOGOVjvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDozMDo0NlrOGOVwtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4NjQ2Mg==", "bodyText": "I'm generally ok, but what's the behavior you've seen on the server side? Can new locks still be acquired by other clients or the table is left in a locked state forever?", "url": "https://github.com/apache/iceberg/pull/987#discussion_r417686462", "createdAt": "2020-04-30T00:20:12Z", "author": {"login": "rdsr"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -296,13 +296,18 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n   private void unlock(Optional<Long> lockId) {\n     if (lockId.isPresent()) {\n       try {\n-        metaClients.run(client -> {\n-          client.unlock(lockId.get());\n-          return null;\n-        });\n+        doUnlock(lockId.get());\n       } catch (Exception e) {\n-        throw new RuntimeException(String.format(\"Failed to unlock %s.%s\", database, tableName), e);\n+        LOG.warn(\"Failed to unlock {}.{}\", database, tableName, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4OTc4MA==", "bodyText": "If an update succeeds, then this method must return success.\nIf it doesn't return successfully but did update, then the caller will delete the metadata file that was attempted. But that metadata file was actually commited. In that case, the table is broken.\nAlso note that Iceberg must delete the metadata file that was attempted if the commit fails. If not, then the situation where an attempt succeeds but the method throws an exception can result in a retry, which could succeed because the table is fine. In that case, the table has silently committed the same data twice. It is better to break the table than to corrupt the data.", "url": "https://github.com/apache/iceberg/pull/987#discussion_r417689780", "createdAt": "2020-04-30T00:30:46Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -296,13 +296,18 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n   private void unlock(Optional<Long> lockId) {\n     if (lockId.isPresent()) {\n       try {\n-        metaClients.run(client -> {\n-          client.unlock(lockId.get());\n-          return null;\n-        });\n+        doUnlock(lockId.get());\n       } catch (Exception e) {\n-        throw new RuntimeException(String.format(\"Failed to unlock %s.%s\", database, tableName), e);\n+        LOG.warn(\"Failed to unlock {}.{}\", database, tableName, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4NjQ2Mg=="}, "originalCommit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3969, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}