{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MjQ3NTYz", "number": 1897, "title": "Add support for timestamp with local zone in Hive3", "bodyText": "Break up TimestampObjectInspector classes into two separate classes for (i) normal timestamps and (ii) timestamps with zone (instead of using inner classes)\nFor Hive3, take advantage of its TimestampWithLocalTimeZone type (which Hive2 doesn't have) instead of just converting timestampTz into normal timestamps", "createdAt": "2020-12-09T15:09:15Z", "url": "https://github.com/apache/iceberg/pull/1897", "merged": true, "mergeCommit": {"oid": "4c0bf8aec7b04f8b969fb34685775492c0a04fcc"}, "closed": true, "closedAt": "2020-12-12T21:09:46Z", "author": {"login": "marton-bod"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkgADqAH2gAyNTM1MjQ3NTYzOmM4MDdmNzIxMDlmZjY2NWY4ODcxZjU1ODdiZjZkMmZhOWY2ZDIzYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlaD2NAFqTU1MDcwOTI0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c807f72109ff665f8871f5587bf6d2fa9f6d23b0", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/c807f72109ff665f8871f5587bf6d2fa9f6d23b0", "committedDate": "2020-12-09T14:55:32Z", "message": "Add support for timestamp with local zone in Hive3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eb9c9d1732873f85499d49fdfae2db7d3d1b144", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/5eb9c9d1732873f85499d49fdfae2db7d3d1b144", "committedDate": "2020-12-09T15:42:23Z", "message": "Merge branch 'master' into hive3_timestamptz"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "460089962d5aa2cae329d771ae74d45c3e025a43", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/460089962d5aa2cae329d771ae74d45c3e025a43", "committedDate": "2020-12-09T15:56:58Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/cb1e011fef1091c4734718cb2481d9dc88baa81d", "committedDate": "2020-12-09T16:39:32Z", "message": "fix checkstyle 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTk0MTA2", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-548994106", "createdAt": "2020-12-10T09:20:54Z", "commit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyMDo1NFrOIC_NYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyMDo1NFrOIC_NYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwMzY4Mg==", "bodyText": "You might want to rebase to master. We need to implement WriteObjectInspector.\nAlso we need to test for them as well", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r540003682", "createdAt": "2020-12-10T09:20:54Z", "author": {"login": "pvary"}, "path": "hive3/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergTimestampObjectInspectorHive3.java", "diffHunk": "@@ -20,50 +20,32 @@\n package org.apache.iceberg.mr.hive.serde.objectinspector;\n \n import java.time.LocalDateTime;\n-import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n import org.apache.hadoop.hive.common.type.Timestamp;\n import org.apache.hadoop.hive.serde2.io.TimestampWritableV2;\n import org.apache.hadoop.hive.serde2.objectinspector.primitive.AbstractPrimitiveJavaObjectInspector;\n import org.apache.hadoop.hive.serde2.objectinspector.primitive.TimestampObjectInspector;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;\n \n-public abstract class IcebergTimestampObjectInspectorHive3 extends AbstractPrimitiveJavaObjectInspector\n+public class IcebergTimestampObjectInspectorHive3 extends AbstractPrimitiveJavaObjectInspector", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTk2MzAy", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-548996302", "createdAt": "2020-12-10T09:23:25Z", "commit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyMzoyNVrOIC_Uyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyMzoyNVrOIC_Uyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwNTU3OQ==", "bodyText": "Could we test that the same instant with different offset will result in the same TimestampTZ?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r540005579", "createdAt": "2020-12-10T09:23:25Z", "author": {"login": "pvary"}, "path": "hive3/src/test/java/org/apache/iceberg/mr/hive/serde/objectinspector/TestIcebergTimestampWithZoneObjectInspectorHive3.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.mr.hive.serde.objectinspector;\n+\n+import java.time.LocalDateTime;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n+import org.apache.hadoop.hive.common.type.TimestampTZ;\n+import org.apache.hadoop.hive.serde2.io.TimestampLocalTZWritable;\n+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.TimestampLocalTZObjectInspector;\n+import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestIcebergTimestampWithZoneObjectInspectorHive3 {\n+\n+  @Test\n+  public void testIcebergTimestampLocalTZObjectInspector() {\n+    TimestampLocalTZObjectInspector oi = IcebergTimestampWithZoneObjectInspectorHive3.get();\n+\n+    Assert.assertEquals(ObjectInspector.Category.PRIMITIVE, oi.getCategory());\n+    Assert.assertEquals(PrimitiveObjectInspector.PrimitiveCategory.TIMESTAMPLOCALTZ, oi.getPrimitiveCategory());\n+\n+    Assert.assertEquals(TypeInfoFactory.timestampLocalTZTypeInfo, oi.getTypeInfo());\n+    Assert.assertEquals(TypeInfoFactory.timestampLocalTZTypeInfo.getTypeName(), oi.getTypeName());\n+\n+    Assert.assertEquals(TimestampTZ.class, oi.getJavaPrimitiveClass());\n+    Assert.assertEquals(TimestampLocalTZWritable.class, oi.getPrimitiveWritableClass());\n+\n+    Assert.assertNull(oi.copyObject(null));\n+    Assert.assertNull(oi.getPrimitiveJavaObject(null));\n+    Assert.assertNull(oi.getPrimitiveWritableObject(null));\n+\n+    long epochSeconds = 1601471970L;\n+    OffsetDateTime offsetDateTime = OffsetDateTime.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTk2OTcz", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-548996973", "createdAt": "2020-12-10T09:24:15Z", "commit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNDoxNVrOIC_W-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNDoxNVrOIC_W-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwNjEzNg==", "bodyText": "How can we be sure that this epoch seconds really result in the expected TZ?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r540006136", "createdAt": "2020-12-10T09:24:15Z", "author": {"login": "pvary"}, "path": "hive3/src/test/java/org/apache/iceberg/mr/hive/serde/objectinspector/TestIcebergTimestampWithZoneObjectInspectorHive3.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.mr.hive.serde.objectinspector;\n+\n+import java.time.LocalDateTime;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n+import org.apache.hadoop.hive.common.type.TimestampTZ;\n+import org.apache.hadoop.hive.serde2.io.TimestampLocalTZWritable;\n+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.TimestampLocalTZObjectInspector;\n+import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestIcebergTimestampWithZoneObjectInspectorHive3 {\n+\n+  @Test\n+  public void testIcebergTimestampLocalTZObjectInspector() {\n+    TimestampLocalTZObjectInspector oi = IcebergTimestampWithZoneObjectInspectorHive3.get();\n+\n+    Assert.assertEquals(ObjectInspector.Category.PRIMITIVE, oi.getCategory());\n+    Assert.assertEquals(PrimitiveObjectInspector.PrimitiveCategory.TIMESTAMPLOCALTZ, oi.getPrimitiveCategory());\n+\n+    Assert.assertEquals(TypeInfoFactory.timestampLocalTZTypeInfo, oi.getTypeInfo());\n+    Assert.assertEquals(TypeInfoFactory.timestampLocalTZTypeInfo.getTypeName(), oi.getTypeName());\n+\n+    Assert.assertEquals(TimestampTZ.class, oi.getJavaPrimitiveClass());\n+    Assert.assertEquals(TimestampLocalTZWritable.class, oi.getPrimitiveWritableClass());\n+\n+    Assert.assertNull(oi.copyObject(null));\n+    Assert.assertNull(oi.getPrimitiveJavaObject(null));\n+    Assert.assertNull(oi.getPrimitiveWritableObject(null));\n+\n+    long epochSeconds = 1601471970L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTk3OTU2", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-548997956", "createdAt": "2020-12-10T09:25:25Z", "commit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNToyNlrOIC_aUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOToyNToyNlrOIC_aUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDAwNjk5NA==", "bodyText": "Why did we remove this?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r540006994", "createdAt": "2020-12-10T09:25:26Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergTimestampObjectInspector.java", "diffHunk": "@@ -80,22 +57,16 @@ public TimestampWritable getPrimitiveWritableObject(Object o) {\n \n   @Override\n   public Object copyObject(Object o) {\n-    if (o == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb1e011fef1091c4734718cb2481d9dc88baa81d"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98e54e6a50b6ed032fbba18815a2104570135f1c", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/98e54e6a50b6ed032fbba18815a2104570135f1c", "committedDate": "2020-12-10T17:28:38Z", "message": "address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a356b00e0e96453914e0decbbf93994d786d50d", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/9a356b00e0e96453914e0decbbf93994d786d50d", "committedDate": "2020-12-11T11:08:16Z", "message": "Add convert method to timestamp inspectors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "400ada5fb23b9f89c152642237cfb73038f9d50e", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/400ada5fb23b9f89c152642237cfb73038f9d50e", "committedDate": "2020-12-11T11:36:47Z", "message": "Add Hive3 unit tests for HiveSchemaUtil"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMTU1MTM1", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-550155135", "createdAt": "2020-12-11T14:40:16Z", "commit": {"oid": "400ada5fb23b9f89c152642237cfb73038f9d50e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDo0MDoxNlrOID7qzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNDo0MDoxNlrOID7qzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDk5NDI1Mg==", "bodyText": "Do we lose nanos here?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r540994252", "createdAt": "2020-12-11T14:40:16Z", "author": {"login": "pvary"}, "path": "hive3/src/main/java/org/apache/iceberg/mr/hive/serde/objectinspector/IcebergTimestampObjectInspectorHive3.java", "diffHunk": "@@ -20,50 +20,38 @@\n package org.apache.iceberg.mr.hive.serde.objectinspector;\n \n import java.time.LocalDateTime;\n-import java.time.OffsetDateTime;\n import java.time.ZoneOffset;\n import org.apache.hadoop.hive.common.type.Timestamp;\n import org.apache.hadoop.hive.serde2.io.TimestampWritableV2;\n import org.apache.hadoop.hive.serde2.objectinspector.primitive.AbstractPrimitiveJavaObjectInspector;\n import org.apache.hadoop.hive.serde2.objectinspector.primitive.TimestampObjectInspector;\n import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;\n \n-public abstract class IcebergTimestampObjectInspectorHive3 extends AbstractPrimitiveJavaObjectInspector\n-    implements TimestampObjectInspector {\n+public class IcebergTimestampObjectInspectorHive3 extends AbstractPrimitiveJavaObjectInspector\n+    implements TimestampObjectInspector, WriteObjectInspector {\n \n-  private static final IcebergTimestampObjectInspectorHive3 INSTANCE_WITH_ZONE =\n-      new IcebergTimestampObjectInspectorHive3() {\n-        @Override\n-        LocalDateTime toLocalDateTime(Object o) {\n-          return ((OffsetDateTime) o).toLocalDateTime();\n-        }\n-      };\n+  private static final IcebergTimestampObjectInspectorHive3 INSTANCE = new IcebergTimestampObjectInspectorHive3();\n \n-  private static final IcebergTimestampObjectInspectorHive3 INSTANCE_WITHOUT_ZONE =\n-      new IcebergTimestampObjectInspectorHive3() {\n-        @Override\n-        LocalDateTime toLocalDateTime(Object o) {\n-          return (LocalDateTime) o;\n-        }\n-      };\n-\n-  public static IcebergTimestampObjectInspectorHive3 get(boolean adjustToUTC) {\n-    return adjustToUTC ? INSTANCE_WITH_ZONE : INSTANCE_WITHOUT_ZONE;\n+  public static IcebergTimestampObjectInspectorHive3 get() {\n+    return INSTANCE;\n   }\n \n   private IcebergTimestampObjectInspectorHive3() {\n     super(TypeInfoFactory.timestampTypeInfo);\n   }\n \n-\n-  abstract LocalDateTime toLocalDateTime(Object object);\n+  @Override\n+  public LocalDateTime convert(Object o) {\n+    return o == null ? null : LocalDateTime.ofEpochSecond(\n+        ((TimestampWritableV2) o).getTimestamp().toEpochSecond(), 0, ZoneOffset.UTC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "400ada5fb23b9f89c152642237cfb73038f9d50e"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/203631a2c44ff65410df56a91aaaf3ffe30ccc4b", "committedDate": "2020-12-11T14:58:49Z", "message": "add back nanos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMzkxNjYy", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-550391662", "createdAt": "2020-12-11T18:04:18Z", "commit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODowNDoxOFrOIED8_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODowNDoxOFrOIED8_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEyOTk4MA==", "bodyText": "equalsIgnoreCase?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r541129980", "createdAt": "2020-12-11T18:04:18Z", "author": {"login": "rdblue"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveSchemaConverter.java", "diffHunk": "@@ -99,6 +99,10 @@ Type convertType(TypeInfo typeInfo) {\n           case INTERVAL_YEAR_MONTH:\n           case INTERVAL_DAY_TIME:\n           default:\n+            // special case for Timestamp with Local TZ which is only available in Hive3\n+            if (\"TIMESTAMPLOCALTZ\".equals(((PrimitiveTypeInfo) typeInfo).getPrimitiveCategory().name())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTc1NTg5", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-550575589", "createdAt": "2020-12-11T21:02:27Z", "commit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTowMjoyN1rOIENjQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTowMjoyN1rOIENjQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4NzIzNA==", "bodyText": "Is it possible to use super and add only specific fields?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r541287234", "createdAt": "2020-12-11T21:02:27Z", "author": {"login": "pvary"}, "path": "hive3/src/test/java/org/apache/iceberg/mr/hive/TestHiveSchemaUtilHive3.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.mr.hive;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.hadoop.hive.metastore.api.FieldSchema;\n+import org.apache.hadoop.hive.serde.serdeConstants;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.hive.TestHiveSchemaUtil;\n+import org.apache.iceberg.types.Types;\n+\n+import static org.apache.iceberg.types.Types.NestedField.optional;\n+\n+public class TestHiveSchemaUtilHive3 extends TestHiveSchemaUtil {\n+\n+  @Override\n+  protected List<FieldSchema> getSupportedFieldSchemas() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTc3MzIw", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-550577320", "createdAt": "2020-12-11T21:05:31Z", "commit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTowNTozMVrOIENu6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTowNTozMVrOIENu6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI5MDIxOQ==", "bodyText": "We do not check nanos. Do we want to do it?", "url": "https://github.com/apache/iceberg/pull/1897#discussion_r541290219", "createdAt": "2020-12-11T21:05:31Z", "author": {"login": "pvary"}, "path": "hive3/src/test/java/org/apache/iceberg/mr/hive/serde/objectinspector/TestIcebergTimestampObjectInspectorHive3.java", "diffHunk": "@@ -51,6 +48,7 @@ public void testIcebergTimestampObjectInspector() {\n     Assert.assertNull(oi.copyObject(null));\n     Assert.assertNull(oi.getPrimitiveJavaObject(null));\n     Assert.assertNull(oi.getPrimitiveWritableObject(null));\n+    Assert.assertNull(oi.convert(null));\n \n     long epochMilli = 1601471970000L;\n     LocalDateTime local = LocalDateTime.ofInstant(Instant.ofEpochMilli(epochMilli), ZoneId.of(\"UTC\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203631a2c44ff65410df56a91aaaf3ffe30ccc4b"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f393a093eea127e64075cae2dcbad3cebc008f32", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/f393a093eea127e64075cae2dcbad3cebc008f32", "committedDate": "2020-12-12T09:52:47Z", "message": "address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzA5MjQ4", "url": "https://github.com/apache/iceberg/pull/1897#pullrequestreview-550709248", "createdAt": "2020-12-12T10:34:10Z", "commit": {"oid": "f393a093eea127e64075cae2dcbad3cebc008f32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3576, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}