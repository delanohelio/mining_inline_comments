{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjU1ODU1", "number": 950, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODowNjoxMFrOD05NDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODowNjoxMFrOD05NDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Nzg5NzczOnYy", "diffSide": "RIGHT", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxODowNjoxMFrOGKD7pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzowNTo0NVrOGKyyEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIwMzM2NA==", "bodyText": "This implementation is too tied to how the Deque is used. I would expect iterating over the object passed in to create the right name, but this assumes it needs to use descendingIterator(). How about updating these methods to accept Iterator<String> instead so that they aren't tightly coupled to the original use?", "url": "https://github.com/apache/iceberg/pull/950#discussion_r413203364", "createdAt": "2020-04-22T18:06:10Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -287,4 +288,28 @@ public static boolean isIntType(PrimitiveType primitiveType) {\n     }\n     return primitiveType.getPrimitiveTypeName() == PrimitiveType.PrimitiveTypeName.INT32;\n   }\n+\n+  public static String[] currentPath(Deque<String> fieldNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac5c8a5e9d9740a07d8d1a984e246c6fcebb3ceb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ1ODE4OQ==", "bodyText": "It's not appropriate  to put the two methods in ParquetUtil.java, I've moved them out of the utility class.  Thanks.", "url": "https://github.com/apache/iceberg/pull/950#discussion_r413458189", "createdAt": "2020-04-23T02:14:48Z", "author": {"login": "openinx"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -287,4 +288,28 @@ public static boolean isIntType(PrimitiveType primitiveType) {\n     }\n     return primitiveType.getPrimitiveTypeName() == PrimitiveType.PrimitiveTypeName.INT32;\n   }\n+\n+  public static String[] currentPath(Deque<String> fieldNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIwMzM2NA=="}, "originalCommit": {"oid": "ac5c8a5e9d9740a07d8d1a984e246c6fcebb3ceb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk3MDk2MA==", "bodyText": "That works for me.", "url": "https://github.com/apache/iceberg/pull/950#discussion_r413970960", "createdAt": "2020-04-23T17:05:45Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -287,4 +288,28 @@ public static boolean isIntType(PrimitiveType primitiveType) {\n     }\n     return primitiveType.getPrimitiveTypeName() == PrimitiveType.PrimitiveTypeName.INT32;\n   }\n+\n+  public static String[] currentPath(Deque<String> fieldNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIwMzM2NA=="}, "originalCommit": {"oid": "ac5c8a5e9d9740a07d8d1a984e246c6fcebb3ceb"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2949, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}