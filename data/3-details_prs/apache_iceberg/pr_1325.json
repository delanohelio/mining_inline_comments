{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTczODI4", "number": 1325, "title": "Throw error when adding non-null columns using the alter table ddl", "bodyText": "Fixes #1324\n\nThrow error when adding a required column using the Alter table DDL\nAdded a new unit test to verify this scenario\n\nWith the fix,\nscala> spark.sql(\"CREATE TABLE local.t1 (id int COMMENT 'unique id', data string not null) USING iceberg\")\nres0: org.apache.spark.sql.DataFrame = []\n\nscala> spark.sql(\"ALTER TABLE local.t1 ADD COLUMN time int NOT NULL\")\norg.apache.spark.SparkException: Unsupported table change: Incompatible change: cannot add required column: time\n  at org.apache.spark.sql.execution.datasources.v2.AlterTableExec.run(AlterTableExec.scala:40)\n  at org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result$lzycompute(V2CommandExec.scala:39)\n  at org.apache.spark.sql.execution.datasources.v2.V2CommandExec.result(V2CommandExec.scala:39)\n  at org.apache.spark.sql.execution.datasources.v2.V2CommandExec.executeCollect(V2CommandExec.scala:45)\n  at org.apache.spark.sql.Dataset.$anonfun$logicalPlan$1(Dataset.scala:229)\n  at org.apache.spark.sql.Dataset.$anonfun$withAction$1(Dataset.scala:3618)\n  at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$5(SQLExecution.scala:100)\n  at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:160)\n  at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:87)\n  at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:763)\n  at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:64)\n  at org.apache.spark.sql.Dataset.withAction(Dataset.scala:3616)\n  at org.apache.spark.sql.Dataset.<init>(Dataset.scala:229)\n  at org.apache.spark.sql.Dataset$.$anonfun$ofRows$2(Dataset.scala:100)\n  at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:763)\n  at org.apache.spark.sql.Dataset$.ofRows(Dataset.scala:97)\n  at org.apache.spark.sql.SparkSession.$anonfun$sql$1(SparkSession.scala:606)\n  at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:763)\n  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:601)\n  ... 47 elided\nCaused by: java.lang.IllegalArgumentException: Incompatible change: cannot add required column: time\n  at org.apache.iceberg.relocated.com.google.common.base.Preconditions.checkArgument(Preconditions.java:217)\n  at org.apache.iceberg.spark.Spark3Util.apply(Spark3Util.java:180)\n  at org.apache.iceberg.spark.Spark3Util.applySchemaChanges(Spark3Util.java:123)\n  at org.apache.iceberg.spark.SparkCatalog.commitChanges(SparkCatalog.java:435)\n  at org.apache.iceberg.spark.SparkCatalog.alterTable(SparkCatalog.java:224)\n  at org.apache.iceberg.spark.SparkCatalog.alterTable(SparkCatalog.java:78)\n  at org.apache.spark.sql.execution.datasources.v2.AlterTableExec.run(AlterTableExec.scala:37)\n  ... 65 more", "createdAt": "2020-08-12T07:20:45Z", "url": "https://github.com/apache/iceberg/pull/1325", "merged": true, "mergeCommit": {"oid": "8e2d486e77a70bbc9e8b16485a113f35f711513f"}, "closed": true, "closedAt": "2020-08-14T16:26:44Z", "author": {"login": "skambha"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-FhDggH2gAyNDY2NTczODI4OmQyN2NjYWI0ZDE4ZGVmZTM4ZGU0ZGQyNzZkMzA2YzI2MWZhMzYyMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-q8szAH2gAyNDY2NTczODI4OjcxZmRkYTczMjkwNzMwNzQ3NmMxYjIzYmYxYjI4YjRiM2UwYjNkYmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d27ccab4d18defe38de4dd276d306c261fa36223", "author": {"user": {"login": "skambha", "name": "Sunitha Kambhampati"}}, "url": "https://github.com/apache/iceberg/commit/d27ccab4d18defe38de4dd276d306c261fa36223", "committedDate": "2020-08-12T06:35:01Z", "message": "Fix the schema changes update to add a required column based on nullability property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MTYyMzQ2", "url": "https://github.com/apache/iceberg/pull/1325#pullrequestreview-466162346", "createdAt": "2020-08-12T18:19:10Z", "commit": {"oid": "d27ccab4d18defe38de4dd276d306c261fa36223"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxOToxMFrOG_tG0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxOToxMFrOG_tG0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MjQ5Nw==", "bodyText": "I'm not sure that this should call allowIncompatibleChanges() because adding a required column when there are no existing values will break reading the new column in any table with data in it. The only time it is safe to add a required column is if there is no data in the table.\nWhat about throwing an exception here instead? I agree that the column should not be optional if NOT NULL was specified.\nAnother alternative is to check whether the table has data and allow the incompatible change if it doesn't have any rows.", "url": "https://github.com/apache/iceberg/pull/1325#discussion_r469452497", "createdAt": "2020-08-12T18:19:10Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/Spark3Util.java", "diffHunk": "@@ -178,8 +178,12 @@ private static void apply(UpdateSchema pendingUpdate, TableChange.UpdateColumnPo\n \n   private static void apply(UpdateSchema pendingUpdate, TableChange.AddColumn add) {\n     Type type = SparkSchemaUtil.convert(add.dataType());\n-    pendingUpdate.addColumn(parentName(add.fieldNames()), leafName(add.fieldNames()), type, add.comment());\n-\n+    if (add.isNullable()) {\n+      pendingUpdate.addColumn(parentName(add.fieldNames()), leafName(add.fieldNames()), type, add.comment());\n+    } else {\n+      pendingUpdate.allowIncompatibleChanges()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d27ccab4d18defe38de4dd276d306c261fa36223"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71fdda732907307476c1b23bf1b28b4b3e0b3dba", "author": {"user": {"login": "skambha", "name": "Sunitha Kambhampati"}}, "url": "https://github.com/apache/iceberg/commit/71fdda732907307476c1b23bf1b28b4b3e0b3dba", "committedDate": "2020-08-14T02:11:42Z", "message": "Throw exception when adding a required column"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4019, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}