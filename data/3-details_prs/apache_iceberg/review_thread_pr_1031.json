{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1Njc2NTAy", "number": 1031, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo1MToxM1rOD9g5VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo1MToxM1rOD9g5VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODI4NjkyOnYy", "diffSide": "RIGHT", "path": "data/src/test/java/org/apache/iceberg/data/DataTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo1MToxM1rOGXDhvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNDozMjo1NVrOGX65vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg==", "bodyText": "Iceberg won't actually write data in milliseconds, so we would need to write a Parquet file using the annotation and confirm that a time column is correct when reading.\nCan you remove this change?", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r426828222", "createdAt": "2020-05-18T18:51:13Z", "author": {"login": "rdblue"}, "path": "data/src/test/java/org/apache/iceberg/data/DataTest.java", "diffHunk": "@@ -56,7 +56,8 @@\n       required(114, \"dec_9_0\", Types.DecimalType.of(9, 0)),\n       required(115, \"dec_11_2\", Types.DecimalType.of(11, 2)),\n       required(116, \"dec_38_10\", Types.DecimalType.of(38, 10)), // maximum precision\n-      required(117, \"time\", Types.TimeType.get())\n+      required(117, \"time\", Types.TimeType.get()),\n+      required(118, \"time_ms\",  Types.TimeType.get())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6106979bee24c3f83674539f282b5e7efc44e737"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MTk2MQ==", "bodyText": "done.", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r427381961", "createdAt": "2020-05-19T15:12:44Z", "author": {"login": "pranaydharmale"}, "path": "data/src/test/java/org/apache/iceberg/data/DataTest.java", "diffHunk": "@@ -56,7 +56,8 @@\n       required(114, \"dec_9_0\", Types.DecimalType.of(9, 0)),\n       required(115, \"dec_11_2\", Types.DecimalType.of(11, 2)),\n       required(116, \"dec_38_10\", Types.DecimalType.of(38, 10)), // maximum precision\n-      required(117, \"time\", Types.TimeType.get())\n+      required(117, \"time\", Types.TimeType.get()),\n+      required(118, \"time_ms\",  Types.TimeType.get())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg=="}, "originalCommit": {"oid": "6106979bee24c3f83674539f282b5e7efc44e737"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzczNTQ4Ng==", "bodyText": "@rdblue do we have any boilerplate code I can use to do that?", "url": "https://github.com/apache/iceberg/pull/1031#discussion_r427735486", "createdAt": "2020-05-20T04:32:55Z", "author": {"login": "pranaydharmale"}, "path": "data/src/test/java/org/apache/iceberg/data/DataTest.java", "diffHunk": "@@ -56,7 +56,8 @@\n       required(114, \"dec_9_0\", Types.DecimalType.of(9, 0)),\n       required(115, \"dec_11_2\", Types.DecimalType.of(11, 2)),\n       required(116, \"dec_38_10\", Types.DecimalType.of(38, 10)), // maximum precision\n-      required(117, \"time\", Types.TimeType.get())\n+      required(117, \"time\", Types.TimeType.get()),\n+      required(118, \"time_ms\",  Types.TimeType.get())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyODIyMg=="}, "originalCommit": {"oid": "6106979bee24c3f83674539f282b5e7efc44e737"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3992, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}