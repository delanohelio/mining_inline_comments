{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTIxMTI1", "number": 1132, "title": "Fix errors when reading options in Avro files with non-null defaults", "bodyText": "Avro files written by non-Iceberg writers can contain optional schemas where the NULL schema is second in the options list. If there is a default value associated with the field, we need to ensure that our visitors preserve this ordering else it can lead to issues like org.apache.avro.AvroTypeException: Invalid default for field field: [] not a [\"null\",{\"type\":\"array\",\"items\":\"long\"}]. This is because the Avro spec requires the type of the default value to match the first option in the schema.\nThe changes should be limited to the codepaths which interact with non-Iceberg Avro files so I believe the visitors used in ProjectionDatumReader are the only ones affected.\nError stacktraces:\norg.apache.avro.AvroTypeException: Invalid default for field field: [] not a [\"null\",{\"type\":\"array\",\"items\":\"int\",\"element-id\":1}]\n\n\tat org.apache.avro.Schema.validateDefault(Schema.java:1540)\n\tat org.apache.avro.Schema.access$500(Schema.java:87)\n\tat org.apache.avro.Schema$Field.<init>(Schema.java:521)\n\tat org.apache.avro.Schema$Field.<init>(Schema.java:567)\n\tat org.apache.iceberg.avro.PruneColumns.copyField(PruneColumns.java:252)\n\tat org.apache.iceberg.avro.PruneColumns.record(PruneColumns.java:83)\n\tat org.apache.iceberg.avro.PruneColumns.record(PruneColumns.java:34)\n\tat org.apache.iceberg.avro.AvroSchemaVisitor.visit(AvroSchemaVisitor.java:50)\n\tat org.apache.iceberg.avro.PruneColumns.rootSchema(PruneColumns.java:46)\n\tat org.apache.iceberg.avro.AvroSchemaUtil.pruneColumns(AvroSchemaUtil.java:99)\n\tat org.apache.iceberg.avro.ProjectionDatumReader.setSchema(ProjectionDatumReader.java:59)\n\n\norg.apache.avro.AvroTypeException: Invalid default for field field: [] not a [\"null\",{\"type\":\"array\",\"items\":\"long\"}]\n\n\tat org.apache.avro.Schema.validateDefault(Schema.java:1540)\n\tat org.apache.avro.Schema.access$500(Schema.java:87)\n\tat org.apache.avro.Schema$Field.<init>(Schema.java:521)\n\tat org.apache.avro.Schema$Field.<init>(Schema.java:567)\n\tat org.apache.iceberg.avro.AvroSchemaUtil.copyField(AvroSchemaUtil.java:362)\n\tat org.apache.iceberg.avro.BuildAvroProjection.field(BuildAvroProjection.java:134)\n\tat org.apache.iceberg.avro.BuildAvroProjection.field(BuildAvroProjection.java:41)\n\tat org.apache.iceberg.avro.AvroCustomOrderSchemaVisitor$VisitFieldFuture.get(AvroCustomOrderSchemaVisitor.java:124)\n\tat org.apache.iceberg.relocated.com.google.common.collect.Iterators$6.transform(Iterators.java:783)\n\tat org.apache.iceberg.relocated.com.google.common.collect.TransformedIterator.next(TransformedIterator.java:47)\n\tat org.apache.iceberg.relocated.com.google.common.collect.Iterators.addAll(Iterators.java:356)\n\tat org.apache.iceberg.relocated.com.google.common.collect.Lists.newArrayList(Lists.java:143)\n\tat org.apache.iceberg.relocated.com.google.common.collect.Lists.newArrayList(Lists.java:130)\n\tat org.apache.iceberg.avro.BuildAvroProjection.record(BuildAvroProjection.java:60)\n\tat org.apache.iceberg.avro.BuildAvroProjection.record(BuildAvroProjection.java:41)\n\tat org.apache.iceberg.avro.AvroCustomOrderSchemaVisitor.visit(AvroCustomOrderSchemaVisitor.java:51)\n\tat org.apache.iceberg.avro.AvroSchemaUtil.buildAvroProjection(AvroSchemaUtil.java:104)\n\tat org.apache.iceberg.avro.ProjectionDatumReader.setSchema(ProjectionDatumReader.java:60)", "createdAt": "2020-06-22T18:56:41Z", "url": "https://github.com/apache/iceberg/pull/1132", "merged": true, "mergeCommit": {"oid": "d1ba7b62abdad6b9fd8f3ec98f789ca53e9cf7b4"}, "closed": true, "closedAt": "2020-06-23T23:27:02Z", "author": {"login": "shardulm94"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct_dVWAH2gAyNDM4MTIxMTI1OjE0ZmI5NTUxOWIzNDQyMDkyZWI2YWEwMmEyNjA4ZTk3ZTJlOGRmZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuM0noAH2gAyNDM4MTIxMTI1OmJiOWUwMTNmZmU1YzdiNWViYTEyOWQ5YjYxYmRjNjg4ZTI5OTUyNDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8", "author": {"user": {"login": "shardulm94", "name": "Shardul Mahadik"}}, "url": "https://github.com/apache/iceberg/commit/14fb95519b3442092eb6aa02a2608e97e2e8dfd8", "committedDate": "2020-06-23T06:28:44Z", "message": "Fix errors when reading options in Avro files with non-null defaults"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c58716cc29d69440756d23835f9fe78c12522cf9", "author": {"user": {"login": "shardulm94", "name": "Shardul Mahadik"}}, "url": "https://github.com/apache/iceberg/commit/c58716cc29d69440756d23835f9fe78c12522cf9", "committedDate": "2020-06-22T18:47:42Z", "message": "Fix errors when reading options in Avro files with non-null defaults"}, "afterCommit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8", "author": {"user": {"login": "shardulm94", "name": "Shardul Mahadik"}}, "url": "https://github.com/apache/iceberg/commit/14fb95519b3442092eb6aa02a2608e97e2e8dfd8", "committedDate": "2020-06-23T06:28:44Z", "message": "Fix errors when reading options in Avro files with non-null defaults"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTYwNzA4", "url": "https://github.com/apache/iceberg/pull/1132#pullrequestreview-435960708", "createdAt": "2020-06-23T16:37:50Z", "commit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjozNzo1MFrOGnxihg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjozNzo1MFrOGnxihg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1OTMwMg==", "bodyText": "Why detect non-null here? Couldn't this always pass null because it is either null already or will be replaced with null?", "url": "https://github.com/apache/iceberg/pull/1132#discussion_r444359302", "createdAt": "2020-06-23T16:37:50Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/avro/PruneColumns.java", "diffHunk": "@@ -247,8 +255,9 @@ private static Schema copyRecord(Schema record, List<Schema.Field> newFields) {\n   }\n \n   private static Schema.Field copyField(Schema.Field field, Schema newSchema, Integer fieldId) {\n+    // do not copy over non-null default values as the file is expected to have values for fields in the file schema\n     Schema.Field copy = new Schema.Field(field.name(),\n-        newSchema, field.doc(), field.defaultVal(), field.order());\n+        newSchema, field.doc(), hasNonNullDefault(field) ? null : field.defaultVal(), field.order());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTk1NDQ2", "url": "https://github.com/apache/iceberg/pull/1132#pullrequestreview-435995446", "createdAt": "2020-06-23T17:22:08Z", "commit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzoyMjowOFrOGnzKVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzoyMjowOFrOGnzKVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM4NTg3OA==", "bodyText": "Tests look good to me.", "url": "https://github.com/apache/iceberg/pull/1132#discussion_r444385878", "createdAt": "2020-06-23T17:22:08Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/avro/TestAvroOptionsWithNonNullDefaults.java", "diffHunk": "@@ -0,0 +1,128 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.avro;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.avro.Schema;\n+import org.apache.avro.file.DataFileWriter;\n+import org.apache.avro.generic.GenericData;\n+import org.apache.avro.generic.GenericDatumWriter;\n+import org.apache.iceberg.Files;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.junit.Assert;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import static org.apache.avro.Schema.Type.INT;\n+import static org.apache.avro.Schema.Type.LONG;\n+import static org.apache.avro.Schema.Type.NULL;\n+\n+public class TestAvroOptionsWithNonNullDefaults {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14fb95519b3442092eb6aa02a2608e97e2e8dfd8"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb9e013ffe5c7b5eba129d9b61bdc688e2995240", "author": {"user": {"login": "shardulm94", "name": "Shardul Mahadik"}}, "url": "https://github.com/apache/iceberg/commit/bb9e013ffe5c7b5eba129d9b61bdc688e2995240", "committedDate": "2020-06-23T22:02:56Z", "message": "Reorder option schemas where NULL is not the first option"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}