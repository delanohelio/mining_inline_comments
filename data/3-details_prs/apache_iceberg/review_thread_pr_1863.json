{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTg4ODQ5", "number": 1863, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTozODo1OVrOE_0f7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyMjozNVrOE_2kqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzU1ODg3OnYy", "diffSide": "RIGHT", "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTozODo1OVrOH9vNNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzo0NjoxNFrOH9y6mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5ODYxNA==", "bodyText": "you might want to include maxKeys(1) as well since we only care about a single entry (and validate that it matches exactly)", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r534498614", "createdAt": "2020-12-02T21:38:59Z", "author": {"login": "danielcweeks"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -77,6 +78,12 @@ public boolean exists() {\n \n   protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n+      // list object to force strong consistency\n+      client().listObjectsV2(ListObjectsV2Request.builder()\n+          .bucket(uri().bucket())\n+          .prefix(uri().key())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eac1c09da1f13b8f9e69a6d00510e353e02ecc5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0OTMwMg==", "bodyText": "Do we want to validate, or just set metadata to null so that exists() return false? I understand that it is not likely that a file name is a prefix of another file, but we cannot eliminate the possibility of some location provider with such behavior.", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r534549302", "createdAt": "2020-12-02T23:20:29Z", "author": {"login": "jackye1995"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -77,6 +78,12 @@ public boolean exists() {\n \n   protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n+      // list object to force strong consistency\n+      client().listObjectsV2(ListObjectsV2Request.builder()\n+          .bucket(uri().bucket())\n+          .prefix(uri().key())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5ODYxNA=="}, "originalCommit": {"oid": "5eac1c09da1f13b8f9e69a6d00510e353e02ecc5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1OTM4NQ==", "bodyText": "See the updated logic for more details", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r534559385", "createdAt": "2020-12-02T23:46:14Z", "author": {"login": "jackye1995"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -77,6 +78,12 @@ public boolean exists() {\n \n   protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n+      // list object to force strong consistency\n+      client().listObjectsV2(ListObjectsV2Request.builder()\n+          .bucket(uri().bucket())\n+          .prefix(uri().key())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ5ODYxNA=="}, "originalCommit": {"oid": "5eac1c09da1f13b8f9e69a6d00510e353e02ecc5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg5ODY2OnYy", "diffSide": "RIGHT", "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoyMjozNVrOH9yWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzowMjowOFrOH-nMoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MDE1NQ==", "bodyText": "I think this changes the exception behavior a little bit because now S3InputFile.getLength() will throw NPE as opposed to S3 NOT_FOUND in the event it does not exist and getLength() is called.  Not a huge issue, but we might consider improving that a little.", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r534550155", "createdAt": "2020-12-02T23:22:35Z", "author": {"login": "danielcweeks"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -75,13 +76,14 @@ public boolean exists() {\n     }\n   }\n \n-  protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n+  protected S3Object getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n-      HeadObjectRequest.Builder requestBuilder = HeadObjectRequest.builder()\n+      ListObjectsV2Response response = client().listObjectsV2(ListObjectsV2Request.builder()\n           .bucket(uri().bucket())\n-          .key(uri().key());\n-      S3RequestUtil.configureEncryption(awsProperties, requestBuilder);\n-      metadata = client().headObject(requestBuilder.build());\n+          .prefix(uri().key())\n+          .maxKeys(1)\n+          .build());\n+      metadata = response.hasContents() ? response.contents().get(0) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad7aacfb40f13202ccb9f20cad514d18075d5565"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1OTMyOA==", "bodyText": "Yeah I was going to ask, I saw in HadoopInputFile it simply throws a RuntimeIOException when asking for length of a file not exist. Probably better to check existence and throw NotFoundException in this case.", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r534559328", "createdAt": "2020-12-02T23:46:03Z", "author": {"login": "jackye1995"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -75,13 +76,14 @@ public boolean exists() {\n     }\n   }\n \n-  protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n+  protected S3Object getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n-      HeadObjectRequest.Builder requestBuilder = HeadObjectRequest.builder()\n+      ListObjectsV2Response response = client().listObjectsV2(ListObjectsV2Request.builder()\n           .bucket(uri().bucket())\n-          .key(uri().key());\n-      S3RequestUtil.configureEncryption(awsProperties, requestBuilder);\n-      metadata = client().headObject(requestBuilder.build());\n+          .prefix(uri().key())\n+          .maxKeys(1)\n+          .build());\n+      metadata = response.hasContents() ? response.contents().get(0) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MDE1NQ=="}, "originalCommit": {"oid": "ad7aacfb40f13202ccb9f20cad514d18075d5565"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQxNTk2OQ==", "bodyText": "I agree, NotFoundException would be much better.", "url": "https://github.com/apache/iceberg/pull/1863#discussion_r535415969", "createdAt": "2020-12-03T17:02:08Z", "author": {"login": "rdblue"}, "path": "aws/src/main/java/org/apache/iceberg/aws/s3/BaseS3File.java", "diffHunk": "@@ -75,13 +76,14 @@ public boolean exists() {\n     }\n   }\n \n-  protected HeadObjectResponse getObjectMetadata() throws S3Exception {\n+  protected S3Object getObjectMetadata() throws S3Exception {\n     if (metadata == null) {\n-      HeadObjectRequest.Builder requestBuilder = HeadObjectRequest.builder()\n+      ListObjectsV2Response response = client().listObjectsV2(ListObjectsV2Request.builder()\n           .bucket(uri().bucket())\n-          .key(uri().key());\n-      S3RequestUtil.configureEncryption(awsProperties, requestBuilder);\n-      metadata = client().headObject(requestBuilder.build());\n+          .prefix(uri().key())\n+          .maxKeys(1)\n+          .build());\n+      metadata = response.hasContents() ? response.contents().get(0) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU1MDE1NQ=="}, "originalCommit": {"oid": "ad7aacfb40f13202ccb9f20cad514d18075d5565"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}