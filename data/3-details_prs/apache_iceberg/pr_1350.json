{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDg3Nzkw", "number": 1350, "title": "Update Static Analysis", "bodyText": "This is an incomplete upgrade but enough to compile the new code and expose the new warnings.\nVersion Bumps\nbaseline 0.55 -> 3.36.2\ngit-version 0.9 -> 0.12.3\nCheckstyle Changes Require for Compile\n\nLineLength no longer is a Treewalker so it needs to be moved\nMissingJavaDocMethod is now it's own module, allowMissingThrows properties have been removed\nMinLineCount was owned by MissingJavaDocMethod but we only set this to a huge number\n\nFindBug Suppression Required for Compile\n\nStrictUnusedVariables must be disabled because we have several hundred cases of method parameters not being used in their bodies\n\nNew Checkstyle Violations\n\nRightCurly - We use Same but this triggers on private constructors with same line braces\n\nNew Baseline/Findbug Warnings\n\nFinal Class - Class not declared final but all constructors are private\nJavadoc Missing Summary - No Summary mostly in our case this is where we have methods with only a @return\nRawTypes - Using a parameterized class without a parameterized type\nReferenceEquality - We have a few instances of == instead of Equals\nLambdaMethodReference - Using s -> s.foo instead of s::foo\nLoggerEnclosingClass - using getLogger for super in child\nUncessaryAnonymousClass - Extend Function instead of using a lambda\nCollectionUndefinedEquality - Using equality or contains on Collection without it's own equals or badly behaving equality like (UTF8 strings)\nJDKObsolete : Collection of many things\n\n\nUsing Date (we use Date internally in some places we don't need to be using it)\n\n\n\n\nUsing linked list ( Warning argues that it is not performed compared to ArrayList and we should us that unless we need nulls or want to benchmark)\n\n\n\n\nSortedMap is deprecated use NavigableMap instead\n\n\nPublic constructor for Abstract Class\nCollectionStreamForeach : Collection.stream.foreach should be Collection.foreach\nMissingOverrides", "createdAt": "2020-08-17T21:57:38Z", "url": "https://github.com/apache/iceberg/pull/1350", "merged": true, "mergeCommit": {"oid": "44c1d00b37f0d7fc2e978baad4f7a861a8335cf0"}, "closed": true, "closedAt": "2020-08-21T20:02:15Z", "author": {"login": "RussellSpitzer"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAzAyLgH2gAyNDY5MDg3NzkwOmVjMzY0ZTc3YzAzNjE3NjIyNTdkN2M2MGJiM2RmYzc0ZDJmNDk2ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdBJYn4AH2gAyNDY5MDg3NzkwOjJlYzllYWRlY2M0YmU5MTE5NTc5NGM4OThhNjI5ZmRjYjFjNzc5YWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ec364e77c0361762257d7c60bb3dfc74d2f496ea", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/ec364e77c0361762257d7c60bb3dfc74d2f496ea", "committedDate": "2020-08-20T16:43:15Z", "message": "Update Static Analysis WIP\n\nWIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc9cd66d47bcda779d58d4208ab946c0d51576d", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/3bc9cd66d47bcda779d58d4208ab946c0d51576d", "committedDate": "2020-08-20T16:43:19Z", "message": "Fix Style Issues that were Previously False Negatives\n\nRemove check for Constructors on a single line, We do this alot\nFix several methods without braces on their own lines\nFix incorrect indentation in a few files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9441ae7cf60bfd8729448445f67e9b9b0fbb554", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/d9441ae7cf60bfd8729448445f67e9b9b0fbb554", "committedDate": "2020-08-20T16:36:36Z", "message": "Fix Style Issues that were Previously False Negatives\n\nRemove check for Constructors on a single line, We do this alot\nFix several methods without braces on their own lines\nFix incorrect indentation in a few files"}, "afterCommit": {"oid": "3bc9cd66d47bcda779d58d4208ab946c0d51576d", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/3bc9cd66d47bcda779d58d4208ab946c0d51576d", "committedDate": "2020-08-20T16:43:19Z", "message": "Fix Style Issues that were Previously False Negatives\n\nRemove check for Constructors on a single line, We do this alot\nFix several methods without braces on their own lines\nFix incorrect indentation in a few files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/b78acbcfec9e0fa5f41fd3eec2bced304c36e42e", "committedDate": "2020-08-20T21:24:55Z", "message": "Fix Optional orElse\n\nOrElse vs OrElseGet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTk4NDY1", "url": "https://github.com/apache/iceberg/pull/1350#pullrequestreview-471998465", "createdAt": "2020-08-20T21:27:57Z", "commit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToyNzo1N1rOHET6gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToyNzo1N1rOHET6gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MjYyNA==", "bodyText": "Because schema is non-final we can't just switch this to a lambda", "url": "https://github.com/apache/iceberg/pull/1350#discussion_r474282624", "createdAt": "2020-08-20T21:27:57Z", "author": {"login": "RussellSpitzer"}, "path": "spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java", "diffHunk": "@@ -143,8 +143,9 @@\n       } catch (IOException ioe) {\n         LOG.warn(\"Failed to get Hadoop Filesystem\", ioe);\n       }\n+      Boolean localityFallback = LOCALITY_WHITELIST_FS.contains(scheme);\n       this.localityPreferred = options.get(\"locality\").map(Boolean::parseBoolean)\n-          .orElse(LOCALITY_WHITELIST_FS.contains(scheme));\n+          .orElse(localityFallback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDA5MDA4", "url": "https://github.com/apache/iceberg/pull/1350#pullrequestreview-472009008", "createdAt": "2020-08-20T21:47:51Z", "commit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0Nzo1MVrOHEUcdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0Nzo1MVrOHEUcdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTMxNw==", "bodyText": "This seems more general than \"allowThrowsTagsForSubclasses\"? Are we sure it does the same thing?", "url": "https://github.com/apache/iceberg/pull/1350#discussion_r474291317", "createdAt": "2020-08-20T21:47:51Z", "author": {"login": "rdblue"}, "path": ".baseline/checkstyle/checkstyle.xml", "diffHunk": "@@ -409,11 +409,9 @@\n         <module name=\"JavadocMethod\"> <!-- Java Style Guide: Where Javadoc is used -->\n             <property name=\"scope\" value=\"public\"/>\n             <property name=\"allowMissingParamTags\" value=\"true\"/>\n-            <property name=\"allowMissingThrowsTags\" value=\"true\"/>\n             <property name=\"allowMissingReturnTag\" value=\"true\"/>\n-            <property name=\"minLineCount\" value=\"99999999\"/>\n             <property name=\"allowedAnnotations\" value=\"Override, Test\"/>\n-            <property name=\"allowThrowsTagsForSubclasses\" value=\"true\"/>\n+            <property name=\"validateThrows\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDA5MTQ0", "url": "https://github.com/apache/iceberg/pull/1350#pullrequestreview-472009144", "createdAt": "2020-08-20T21:48:08Z", "commit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0ODowOFrOHEUc2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0ODowOFrOHEUc2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTQxNw==", "bodyText": "Do we require the empty line?", "url": "https://github.com/apache/iceberg/pull/1350#discussion_r474291417", "createdAt": "2020-08-20T21:48:08Z", "author": {"login": "rdblue"}, "path": "arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java", "diffHunk": "@@ -347,7 +347,9 @@ public String toString() {\n     }\n \n     @Override\n-    public void setBatchSize(int batchSize) {}\n+    public void setBatchSize(int batchSize) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDA5NTEy", "url": "https://github.com/apache/iceberg/pull/1350#pullrequestreview-472009512", "createdAt": "2020-08-20T21:48:51Z", "commit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0ODo1MVrOHEUd_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0ODo1MVrOHEUd_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5MTcxMQ==", "bodyText": "Nice that it catches these.", "url": "https://github.com/apache/iceberg/pull/1350#discussion_r474291711", "createdAt": "2020-08-20T21:48:51Z", "author": {"login": "rdblue"}, "path": "orc/src/main/java/org/apache/iceberg/orc/ORCSchemaUtil.java", "diffHunk": "@@ -267,7 +267,7 @@ private static TypeDescription buildOrcProjection(Integer fieldId, Type type, bo\n           // e.g. renaming column c -> d and adding new column d\n           String name = Optional.ofNullable(mapping.get(nestedField.fieldId()))\n               .map(OrcField::name)\n-              .orElse(nestedField.name() + \"_r\" + nestedField.fieldId());\n+              .orElseGet(() -> nestedField.name() + \"_r\" + nestedField.fieldId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b78acbcfec9e0fa5f41fd3eec2bced304c36e42e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1aeaf75b65dd68013b34f4a2b8ba503e23c5beba", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/1aeaf75b65dd68013b34f4a2b8ba503e23c5beba", "committedDate": "2020-08-20T22:36:39Z", "message": "Switch to Effectively Local Scheme in Reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f23296c829304f44c1cb999bad689ce17f6fe44", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/0f23296c829304f44c1cb999bad689ce17f6fe44", "committedDate": "2020-08-21T15:09:51Z", "message": "Fix Spacing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e452662271c1647f056ad13e190ca18fea38fc03", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/e452662271c1647f056ad13e190ca18fea38fc03", "committedDate": "2020-08-21T17:45:15Z", "message": "Fix all Single Line Constructors\n\nWe decided to enforce no single line constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ec9eadecc4be91195794c898a629fdcb1c779aa", "author": {"user": {"login": "RussellSpitzer", "name": "Russell Spitzer"}}, "url": "https://github.com/apache/iceberg/commit/2ec9eadecc4be91195794c898a629fdcb1c779aa", "committedDate": "2020-08-21T18:47:12Z", "message": "Fix Comments without Whitespace\n\nUse todoComment rules as a CommentRegex to find comments which lead\nwith a word character. Flags these instances as a mistake."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4065, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}