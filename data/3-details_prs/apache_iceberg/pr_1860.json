{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMDMzMjIz", "number": 1860, "title": "Spark: Fix resolution of procedures with expressions", "bodyText": "This PR fixes the resolution of procedures that contain expressions as arguments.", "createdAt": "2020-12-02T13:54:47Z", "url": "https://github.com/apache/iceberg/pull/1860", "merged": true, "mergeCommit": {"oid": "a4e1cdb2bb595a1257af2fa460216bcdf682977b"}, "closed": true, "closedAt": "2020-12-03T00:34:37Z", "author": {"login": "aokolnychyi"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiO8kGgFqTU0Mjg1Njc1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiVi-SAH2gAyNTMxMDMzMjIzOjMwZGZhNzcwOWJhNWRkODgyZjM2YmZhYzU4MWFhMjYxNDhiYjI4NmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODU2NzUw", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-542856750", "createdAt": "2020-12-02T13:55:29Z", "commit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo1NToyOVrOH9cA0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMzo1NToyOVrOH9cA0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE4NDE0Nw==", "bodyText": "We cannot call dataType as it may not be resolved yet (e.g. calls to functions).", "url": "https://github.com/apache/iceberg/pull/1860#discussion_r534184147", "createdAt": "2020-12-02T13:55:29Z", "author": {"login": "aokolnychyi"}, "path": "spark3-extensions/src/main/scala/org/apache/spark/sql/catalyst/analysis/ResolveProcedures.scala", "diffHunk": "@@ -79,19 +79,7 @@ case class ResolveProcedures(spark: SparkSession) extends Rule[LogicalPlan] with\n \n     nameToArgMap.foreach { case (name, arg) =>\n       val position = nameToPositionMap(name)\n-      val param = params(position)\n-      val paramType = param.dataType\n-      val argType = arg.expr.dataType", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTI3Njcw", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-543127670", "createdAt": "2020-12-02T18:34:55Z", "commit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODozNDo1NVrOH9oxyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxODozNDo1NVrOH9oxyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDM5MzI4OA==", "bodyText": "Maybe \"Wrong arg type and cannot cast type x to type y\"?\nNot super important", "url": "https://github.com/apache/iceberg/pull/1860#discussion_r534393288", "createdAt": "2020-12-02T18:34:55Z", "author": {"login": "RussellSpitzer"}, "path": "spark3-extensions/src/main/scala/org/apache/spark/sql/catalyst/analysis/ProcedureArgumentCoercion.scala", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.spark.sql.catalyst.analysis\n+\n+import org.apache.spark.sql.AnalysisException\n+import org.apache.spark.sql.catalyst.expressions.Cast\n+import org.apache.spark.sql.catalyst.plans.logical.{Call, LogicalPlan}\n+import org.apache.spark.sql.catalyst.rules.Rule\n+\n+object ProcedureArgumentCoercion extends Rule[LogicalPlan] {\n+  override def apply(plan: LogicalPlan): LogicalPlan = plan resolveOperators {\n+    case c @ Call(procedure, args) if c.resolved =>\n+      val params = procedure.parameters\n+\n+      val newArgs = args.zipWithIndex.map { case (arg, index) =>\n+        val param = params(index)\n+        val paramType = param.dataType\n+        val argType = arg.dataType\n+\n+        if (paramType != argType && !Cast.canUpCast(argType, paramType)) {\n+          throw new AnalysisException(\n+            s\"Wrong arg type for ${param.name}: expected $paramType but got $argType\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMTMwMjk4", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-543130298", "createdAt": "2020-12-02T18:38:17Z", "commit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjE0MjA0", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-543214204", "createdAt": "2020-12-02T20:33:22Z", "commit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33acd1a9e88919c3ef09c0749f34fb04e7864f3d", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/33acd1a9e88919c3ef09c0749f34fb04e7864f3d", "committedDate": "2020-12-02T20:48:01Z", "message": "Spark: Fix resolution of procedures with expressions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c953560d49d425e7ce55fe2e8f11344fe341133a", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/c953560d49d425e7ce55fe2e8f11344fe341133a", "committedDate": "2020-12-02T13:54:34Z", "message": "Spark: Fix resolution of procedures with expressions"}, "afterCommit": {"oid": "33acd1a9e88919c3ef09c0749f34fb04e7864f3d", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/33acd1a9e88919c3ef09c0749f34fb04e7864f3d", "committedDate": "2020-12-02T20:48:01Z", "message": "Spark: Fix resolution of procedures with expressions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjM0OTY4", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-543234968", "createdAt": "2020-12-02T21:03:47Z", "commit": {"oid": "33acd1a9e88919c3ef09c0749f34fb04e7864f3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQzMjQz", "url": "https://github.com/apache/iceberg/pull/1860#pullrequestreview-543243243", "createdAt": "2020-12-02T21:16:20Z", "commit": {"oid": "33acd1a9e88919c3ef09c0749f34fb04e7864f3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30dfa7709ba5dd882f36bfac581aa26148bb286e", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/30dfa7709ba5dd882f36bfac581aa26148bb286e", "committedDate": "2020-12-02T21:36:52Z", "message": "Fix tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3482, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}