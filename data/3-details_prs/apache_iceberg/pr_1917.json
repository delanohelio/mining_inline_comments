{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2OTM1NzI0", "number": 1917, "title": "Hive: Convert the CREATE TABLE ... PARTITIONED BY to Iceberg identity partitions", "bodyText": "After consulting with the field folks they convinced me that it would be beneficial to have the first version of conversion in place for creating partitioned Iceberg tables from Hive. They suggested that even in this limited form this feature can boost adoption by allowing to try out Iceberg tables with partitions without changing the actual SQL commands.", "createdAt": "2020-12-11T14:23:03Z", "url": "https://github.com/apache/iceberg/pull/1917", "merged": true, "mergeCommit": {"oid": "05752965f5eb453d895db44fb2d072d270646644"}, "closed": true, "closedAt": "2020-12-18T18:44:19Z", "author": {"login": "pvary"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlImJAAH2gAyNTM2OTM1NzI0OmY5Y2NmNDBjMTQzNzQ1MjUwYWI2ODQ2ZTRjNDZmMWU0YjRjNThhYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm5XfKAFqTU1NDIxNzE2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/f9ccf40c143745250ab6846e4c46f1e4b4c58ac6", "committedDate": "2020-12-11T14:13:20Z", "message": "Hive: Convert the CREATE TABLE ... PARTITIONED BY to Iceberg identity partitions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzE0MjY2", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-550714266", "createdAt": "2020-12-12T12:01:09Z", "commit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjowMToxMFrOIEeYRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo0NToxMlrOIEeyBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2Mjk1MQ==", "bodyText": "nit: can use !hmsTable.getPartitionKeys().isEmpty()", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r541562951", "createdAt": "2020-12-12T12:01:10Z", "author": {"login": "marton-bod"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && hmsTable.getPartitionKeys().size() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU2OTU0MA==", "bodyText": "Can we make runPartitionedWriteTest generic enough to reuse it here too? Would be great to have an execution test for multi-level partition as well.", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r541569540", "createdAt": "2020-12-12T12:45:12Z", "author": {"login": "marton-bod"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/TestHiveIcebergStorageHandler.java", "diffHunk": "@@ -666,45 +666,52 @@ public void testCreateTableWithColumnSpecification() throws IOException {\n   }\n \n   @Test\n-  public void testCreateTableWithColumnSpecificationPartitioned() {\n+  public void testCreateTableWithColumnSpecificationPartitioned() throws IOException {\n+    TableIdentifier identifier = TableIdentifier.of(\"default\", \"customers\");\n+    runPartitionedWriteTest(identifier, createSQLForPartitionedTableBySchema(testTables, identifier));\n+  }\n+\n+  @Test\n+  public void testCreatePartitionedTableByProperty() throws IOException {\n+    TableIdentifier identifier = TableIdentifier.of(\"default\", \"customers\");\n+    runPartitionedWriteTest(identifier, createSQLForPartitionedTableByProperty(testTables, identifier));\n+  }\n+\n+  @Test\n+  public void testCreatePartitionedTableWithPropertiesAndWithColumnSpecification() {\n+    PartitionSpec spec = PartitionSpec.builderFor(CUSTOMER_SCHEMA).identity(\"last_name\").build();\n+\n     AssertHelpers.assertThrows(\"should throw exception\", IllegalArgumentException.class,\n-        \"currently not supported\", () -> {\n+        \"Provide only one of the following\", () -> {\n           shell.executeStatement(\"CREATE EXTERNAL TABLE customers (customer_id BIGINT) \" +\n               \"PARTITIONED BY (first_name STRING) \" +\n               \"STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \" +\n-              testTables.locationForCreateTableSQL(TableIdentifier.of(\"default\", \"customers\")));\n+              testTables.locationForCreateTableSQL(TableIdentifier.of(\"default\", \"customers\")) +\n+              \" TBLPROPERTIES ('\" + InputFormatConfig.PARTITION_SPEC + \"'='\" +\n+              PartitionSpecParser.toJson(spec) + \"')\");\n         }\n     );\n   }\n \n   @Test\n-  public void testCreatePartitionedTable() throws IOException {\n+  public void testCreateTableWithColumnSpecificationMultilevelPartitioned() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzE3MTk2", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-550717196", "createdAt": "2020-12-12T12:48:43Z", "commit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo0ODo0NFrOIEe0Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMjo0ODo0NFrOIEe0Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3MDA2Mg==", "bodyText": "nit: shall we check hmsTable.isSetPartitionKeys() here? in other places we seem to use that instead of the null check", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r541570062", "createdAt": "2020-12-12T12:48:44Z", "author": {"login": "marton-bod"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && hmsTable.getPartitionKeys().size() != 0) {\n+        // Add partitioning columns to the original column list before creating the Iceberg Schema\n+        List<FieldSchema> cols = new ArrayList<>(hmsTable.getSd().getCols());\n+        cols.addAll(hmsTable.getPartitionKeys());\n+        return HiveSchemaUtil.convert(cols);\n+      } else {\n+        return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      }\n     }\n   }\n \n   private static PartitionSpec spec(Schema schema, Properties properties,\n       org.apache.hadoop.hive.metastore.api.Table hmsTable) {\n \n-    Preconditions.checkArgument(hmsTable.getPartitionKeys() == null || hmsTable.getPartitionKeys().isEmpty(),\n-        \"Partitioned Hive tables are currently not supported\");\n-\n     if (properties.getProperty(InputFormatConfig.PARTITION_SPEC) != null) {\n+      Preconditions.checkArgument(hmsTable.getPartitionKeys() == null || hmsTable.getPartitionKeys().isEmpty(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ccf40c143745250ab6846e4c46f1e4b4c58ac6"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04073e2ca7626be583375c66c38be12b29e9a1cd", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/04073e2ca7626be583375c66c38be12b29e9a1cd", "committedDate": "2020-12-12T12:56:24Z", "message": "Review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNzM3NjQ0", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-550737644", "createdAt": "2020-12-12T13:20:44Z", "commit": {"oid": "04073e2ca7626be583375c66c38be12b29e9a1cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMzoyMDo0NVrOIEfHUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxMzoyMDo0NVrOIEfHUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTU3NDk5NA==", "bodyText": "shouldn't this be !hmsTable.isSetPartitionKeys()?", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r541574994", "createdAt": "2020-12-12T13:20:45Z", "author": {"login": "marton-bod"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {\n+        // Add partitioning columns to the original column list before creating the Iceberg Schema\n+        List<FieldSchema> cols = new ArrayList<>(hmsTable.getSd().getCols());\n+        cols.addAll(hmsTable.getPartitionKeys());\n+        return HiveSchemaUtil.convert(cols);\n+      } else {\n+        return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      }\n     }\n   }\n \n   private static PartitionSpec spec(Schema schema, Properties properties,\n       org.apache.hadoop.hive.metastore.api.Table hmsTable) {\n \n-    Preconditions.checkArgument(hmsTable.getPartitionKeys() == null || hmsTable.getPartitionKeys().isEmpty(),\n-        \"Partitioned Hive tables are currently not supported\");\n-\n     if (properties.getProperty(InputFormatConfig.PARTITION_SPEC) != null) {\n+      Preconditions.checkArgument(hmsTable.isSetPartitionKeys() || hmsTable.getPartitionKeys().isEmpty(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04073e2ca7626be583375c66c38be12b29e9a1cd"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b362083163f4052e8aa124d5b3d5c3ed2577d785", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/b362083163f4052e8aa124d5b3d5c3ed2577d785", "committedDate": "2020-12-12T17:01:25Z", "message": "Refactored test so we try out the insert path for multi level partitions as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/ff585b45f95684a236aacd7fd8f1dbc177ab0765", "committedDate": "2020-12-12T19:04:32Z", "message": "Inceased heap size"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMjYzODMw", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-552263830", "createdAt": "2020-12-15T09:36:35Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE1NjM1", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554215635", "createdAt": "2020-12-17T01:32:00Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMjowMFrOIHgkoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMjowMFrOIHgkoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NDYwOA==", "bodyText": "Nit: generally prefer Lists.newArrayList() to specific class constructors.", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r544744608", "createdAt": "2020-12-17T01:32:00Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {\n+        // Add partitioning columns to the original column list before creating the Iceberg Schema\n+        List<FieldSchema> cols = new ArrayList<>(hmsTable.getSd().getCols());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE1ODc1", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554215875", "createdAt": "2020-12-17T01:32:41Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMjo0MVrOIHglwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMjo0MVrOIHglwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NDg5Nw==", "bodyText": "Nit: this could be an else if to remove a level of indentation.", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r544744897", "createdAt": "2020-12-17T01:32:41Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE2MTEy", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554216112", "createdAt": "2020-12-17T01:33:28Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMzoyOFrOIHgmew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozMzoyOFrOIHgmew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NTA4Mw==", "bodyText": "When would isSetPartitionKeys() be true and getPartitionKeys() empty?", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r544745083", "createdAt": "2020-12-17T01:33:28Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE2MzE5", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554216319", "createdAt": "2020-12-17T01:34:07Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozNDowN1rOIHgnVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozNDowN1rOIHgnVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NTMwMg==", "bodyText": "Nit: could be else if case.", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r544745302", "createdAt": "2020-12-17T01:34:07Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/hive/HiveIcebergMetaHook.java", "diffHunk": "@@ -197,20 +205,32 @@ private static Schema schema(Properties properties, org.apache.hadoop.hive.metas\n     if (properties.getProperty(InputFormatConfig.TABLE_SCHEMA) != null) {\n       return SchemaParser.fromJson(properties.getProperty(InputFormatConfig.TABLE_SCHEMA));\n     } else {\n-      return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {\n+        // Add partitioning columns to the original column list before creating the Iceberg Schema\n+        List<FieldSchema> cols = new ArrayList<>(hmsTable.getSd().getCols());\n+        cols.addAll(hmsTable.getPartitionKeys());\n+        return HiveSchemaUtil.convert(cols);\n+      } else {\n+        return HiveSchemaUtil.convert(hmsTable.getSd().getCols());\n+      }\n     }\n   }\n \n   private static PartitionSpec spec(Schema schema, Properties properties,\n       org.apache.hadoop.hive.metastore.api.Table hmsTable) {\n \n-    Preconditions.checkArgument(hmsTable.getPartitionKeys() == null || hmsTable.getPartitionKeys().isEmpty(),\n-        \"Partitioned Hive tables are currently not supported\");\n-\n     if (properties.getProperty(InputFormatConfig.PARTITION_SPEC) != null) {\n+      Preconditions.checkArgument(!hmsTable.isSetPartitionKeys() || hmsTable.getPartitionKeys().isEmpty(),\n+          \"Provide only one of the following: Hive partition specification, or the \" +\n+              InputFormatConfig.PARTITION_SPEC + \" property\");\n       return PartitionSpecParser.fromJson(schema, properties.getProperty(InputFormatConfig.PARTITION_SPEC));\n     } else {\n-      return PartitionSpec.unpartitioned();\n+      if (hmsTable.isSetPartitionKeys() && !hmsTable.getPartitionKeys().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE3MDgx", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554217081", "createdAt": "2020-12-17T01:36:21Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozNjoyMlrOIHgqcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTozNjoyMlrOIHgqcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc0NjA5OQ==", "bodyText": "Why was this needed? Additional tasks because of partitioning?", "url": "https://github.com/apache/iceberg/pull/1917#discussion_r544746099", "createdAt": "2020-12-17T01:36:22Z", "author": {"login": "rdblue"}, "path": "build.gradle", "diffHunk": "@@ -542,7 +542,7 @@ project(':iceberg-mr') {\n \n   test {\n     // testJoinTables / testScanTable\n-    maxHeapSize '1500m'\n+    maxHeapSize '2500m'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjE3MTY4", "url": "https://github.com/apache/iceberg/pull/1917#pullrequestreview-554217168", "createdAt": "2020-12-17T01:36:36Z", "commit": {"oid": "ff585b45f95684a236aacd7fd8f1dbc177ab0765"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3595, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}