{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNTE3NDAz", "number": 1070, "title": "Update metrics tests to use Iceberg generics", "bodyText": "This updates TestMetrics to use Iceberg generic records for its test cases. This is to avoid creating an Avro writer for ORC just to make the tests work.\nUsing Iceberg generics for this test required moving the generic record classes to core so they are available to TestMetrics in core. Reader and writer classes for Avro are also moved to core.", "createdAt": "2020-05-26T23:30:28Z", "url": "https://github.com/apache/iceberg/pull/1070", "merged": true, "mergeCommit": {"oid": "9b2e1b4f2daafc85f29354eb2082d7f09bd36225"}, "closed": true, "closedAt": "2020-05-27T20:56:37Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclNRkRAH2gAyNDIzNTE3NDAzOjI0N2UyZTZhZjIwMGM0ZWQwMWU2ZDdiNjI1ZmU4NzhlN2E3NzU4Njk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcldRicgFqTQxOTQ4MzkxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "247e2e6af200c4ed01e6d7b625fe878e7a775869", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/247e2e6af200c4ed01e6d7b625fe878e7a775869", "committedDate": "2020-05-26T23:29:14Z", "message": "Move Avro generics to core."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dadaaec953be75be4ef02e995ac4c6516013bb59", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/dadaaec953be75be4ef02e995ac4c6516013bb59", "committedDate": "2020-05-26T23:29:14Z", "message": "Update TestMetrics to use Iceberg generics.\n\nThis is to support ORC metrics using the same tests. ORC doesn't support\nwriting Avro records."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/ee89bd324c4cbe68a6553188569dc1fd38880fa5", "committedDate": "2020-05-27T00:23:21Z", "message": "Fix checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzkwMjQx", "url": "https://github.com/apache/iceberg/pull/1070#pullrequestreview-418790241", "createdAt": "2020-05-27T01:10:58Z", "commit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMToxMDo1OVrOGa1XOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMToxMDo1OVrOGa1XOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc5MDQ1OQ==", "bodyText": "Sorry if I'm missing some context, but why is the uuidCol dropped?", "url": "https://github.com/apache/iceberg/pull/1070#discussion_r430790459", "createdAt": "2020-05-27T01:10:59Z", "author": {"login": "edgarRd"}, "path": "core/src/test/java/org/apache/iceberg/TestMetrics.java", "diffHunk": "@@ -95,59 +88,57 @@\n       optional(8, \"dateCol\", DateType.get()),\n       required(9, \"timeCol\", TimeType.get()),\n       required(10, \"timestampCol\", TimestampType.withoutZone()),\n-      optional(11, \"uuidCol\", UUIDType.get()),\n-      required(12, \"fixedCol\", FixedType.ofLength(4)),\n-      required(13, \"binaryCol\", BinaryType.get())\n+      required(11, \"fixedCol\", FixedType.ofLength(4)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NzkxMjY1", "url": "https://github.com/apache/iceberg/pull/1070#pullrequestreview-418791265", "createdAt": "2020-05-27T01:11:52Z", "commit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMToxMTo1MlrOGa1YHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMToxNjowNVrOGa1iaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc5MDY4NQ==", "bodyText": "is the test name misleading? Seems like we are testing for multiple records, not repeated values in maps and lists", "url": "https://github.com/apache/iceberg/pull/1070#discussion_r430790685", "createdAt": "2020-05-27T01:11:52Z", "author": {"login": "rdsr"}, "path": "core/src/test/java/org/apache/iceberg/TestMetrics.java", "diffHunk": "@@ -95,59 +88,57 @@\n       optional(8, \"dateCol\", DateType.get()),\n       required(9, \"timeCol\", TimeType.get()),\n       required(10, \"timestampCol\", TimestampType.withoutZone()),\n-      optional(11, \"uuidCol\", UUIDType.get()),\n-      required(12, \"fixedCol\", FixedType.ofLength(4)),\n-      required(13, \"binaryCol\", BinaryType.get())\n+      required(11, \"fixedCol\", FixedType.ofLength(4)),\n+      required(12, \"binaryCol\", BinaryType.get())\n   );\n \n-  private final UUID uuid = UUID.randomUUID();\n-  private final GenericFixed fixed = new GenericData.Fixed(\n-      org.apache.avro.Schema.createFixed(\"fixedCol\", null, null, 4),\n-      \"abcd\".getBytes(StandardCharsets.UTF_8));\n+  private final byte[] fixed = \"abcd\".getBytes(StandardCharsets.UTF_8);\n \n   public abstract Metrics getMetrics(InputFile file);\n \n-  public abstract File writeRecords(Schema schema, Record... records) throws IOException;\n+  public abstract InputFile writeRecords(Schema schema, Record... records) throws IOException;\n \n-  public abstract File writeRecords(Schema schema, Map<String, String> properties, GenericData.Record... records)\n+  public abstract InputFile writeRecordsWithSmallRowGroups(Schema schema, Record... records)\n       throws IOException;\n \n-  public abstract int splitCount(File parquetFile) throws IOException;\n+  public abstract int splitCount(InputFile parquetFile) throws IOException;\n+\n+  public boolean supportsSmallRowGroups() {\n+    return false;\n+  }\n \n   @Test\n   public void testMetricsForRepeatedValues() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc5MzMyMA==", "bodyText": "nit: seems like comment is not adding anything more", "url": "https://github.com/apache/iceberg/pull/1070#discussion_r430793320", "createdAt": "2020-05-27T01:16:05Z", "author": {"login": "rdsr"}, "path": "data/src/test/java/org/apache/iceberg/parquet/TestParquetMetrics.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.UUID;\n+import org.apache.iceberg.FileFormat;\n+import org.apache.iceberg.Files;\n+import org.apache.iceberg.Metrics;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.TableProperties;\n+import org.apache.iceberg.TestMetrics;\n+import org.apache.iceberg.data.Record;\n+import org.apache.iceberg.data.parquet.GenericParquetWriter;\n+import org.apache.iceberg.io.FileAppender;\n+import org.apache.iceberg.io.InputFile;\n+import org.apache.iceberg.io.OutputFile;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableMap;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.parquet.hadoop.ParquetFileReader;\n+import org.junit.Rule;\n+import org.junit.rules.TemporaryFolder;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NDgzOTE3", "url": "https://github.com/apache/iceberg/pull/1070#pullrequestreview-419483917", "createdAt": "2020-05-27T18:07:34Z", "commit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODowNzozNFrOGbXIFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxODowNzozNFrOGbXIFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM0MzYzNg==", "bodyText": "SGTM. Thanks for the context.", "url": "https://github.com/apache/iceberg/pull/1070#discussion_r431343636", "createdAt": "2020-05-27T18:07:34Z", "author": {"login": "edgarRd"}, "path": "core/src/test/java/org/apache/iceberg/TestMetrics.java", "diffHunk": "@@ -95,59 +88,57 @@\n       optional(8, \"dateCol\", DateType.get()),\n       required(9, \"timeCol\", TimeType.get()),\n       required(10, \"timestampCol\", TimestampType.withoutZone()),\n-      optional(11, \"uuidCol\", UUIDType.get()),\n-      required(12, \"fixedCol\", FixedType.ofLength(4)),\n-      required(13, \"binaryCol\", BinaryType.get())\n+      required(11, \"fixedCol\", FixedType.ofLength(4)),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDc5MDQ1OQ=="}, "originalCommit": {"oid": "ee89bd324c4cbe68a6553188569dc1fd38880fa5"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4453, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}