{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzYwMjgz", "number": 1512, "title": "Spark: Implement equals and hashCode in SparkBatchScan", "bodyText": "Spark creates a \"canonicalized\" plan to determine whether two plan trees produce the same result. If two trees produce the same result, then Spark will reuse shuffle data to reduce the number of stages. In DSv2, the equality of Spark's BatchScanExec depends on the equality of the Scan produced by sources.\nThis implements equals and hashCode in SparkBatchScan so that the canonicalized plan is equal when scans are equivalent.", "createdAt": "2020-09-25T20:41:40Z", "url": "https://github.com/apache/iceberg/pull/1512", "merged": true, "mergeCommit": {"oid": "78e80d2a35c4c93e68776c31c24cc8ccb06fed4b"}, "closed": true, "closedAt": "2020-09-30T00:17:47Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMb8qCgH2gAyNDkzMzYwMjgzOjA5MGVlY2RlNjM0YWE4NjI1YzYwYjNhYjhlNzBiZjBlOWNjNjAwNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNxeXbAFqTQ5OTAwODM5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/090eecde634aa8625c60b3ab8e70bf0e9cc60071", "committedDate": "2020-09-25T20:38:01Z", "message": "Spark: Implement equals and hashCode in SparkBatchScan."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2ODQzNTYw", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-496843560", "createdAt": "2020-09-25T20:48:19Z", "commit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo0ODoyMFrOHYSC7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMDo0ODoyMFrOHYSC7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTIyMzUzMw==", "bodyText": "if they aren't case sensitive aren't they equal if the lowercased names are equivelent?\nIe\n(insensitive) == (insenstive) && (TaBle).equals(table)?\nIf we just want to check the fields being equal I understand that too", "url": "https://github.com/apache/iceberg/pull/1512#discussion_r495223533", "createdAt": "2020-09-25T20:48:20Z", "author": {"login": "RussellSpitzer"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java", "diffHunk": "@@ -208,6 +209,38 @@ public Statistics estimateStatistics() {\n     return new Stats(sizeInBytes, numRows);\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    SparkBatchScan that = (SparkBatchScan) o;\n+    // compare Spark schemas to ignore field ids\n+    StructType thisSchema = SparkSchemaUtil.convert(expectedSchema);\n+    StructType thatSchema = SparkSchemaUtil.convert(that.expectedSchema);\n+    return caseSensitive == that.caseSensitive &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2ODQ0NDc2", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-496844476", "createdAt": "2020-09-25T20:49:05Z", "commit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2ODkzNDQy", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-496893442", "createdAt": "2020-09-25T22:18:49Z", "commit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjoxODo0OVrOHYVWHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMjoxODo0OVrOHYVWHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTI3NzU5OA==", "bodyText": "Oops, I'm also missing an update that uses readSchema() and a lazy variable to avoid converting multiple times.", "url": "https://github.com/apache/iceberg/pull/1512#discussion_r495277598", "createdAt": "2020-09-25T22:18:49Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java", "diffHunk": "@@ -208,6 +209,38 @@ public Statistics estimateStatistics() {\n     return new Stats(sizeInBytes, numRows);\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    SparkBatchScan that = (SparkBatchScan) o;\n+    // compare Spark schemas to ignore field ids\n+    StructType thisSchema = SparkSchemaUtil.convert(expectedSchema);\n+    StructType thatSchema = SparkSchemaUtil.convert(that.expectedSchema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090eecde634aa8625c60b3ab8e70bf0e9cc60071"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/38d865cec7e8cf098fd2ed6889b1f286c84376f0", "committedDate": "2020-09-25T22:59:12Z", "message": "Ignore caseSensitive and make schema conversion lazy."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDU1NDEw", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-497055410", "createdAt": "2020-09-27T06:28:27Z", "commit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODA5ODY2", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-497809866", "createdAt": "2020-09-28T18:55:55Z", "commit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1NTo1NlrOHZLjEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODo1NTo1NlrOHZLjEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE2NTY1MA==", "bodyText": "would it make sense to use deepEquals here instead of constructing a string?", "url": "https://github.com/apache/iceberg/pull/1512#discussion_r496165650", "createdAt": "2020-09-28T18:55:56Z", "author": {"login": "holdenk"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkBatchScan.java", "diffHunk": "@@ -208,6 +213,33 @@ public Statistics estimateStatistics() {\n     return new Stats(sizeInBytes, numRows);\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    SparkBatchScan that = (SparkBatchScan) o;\n+    return table.toString().equals(that.table.toString()) &&\n+        readSchema().equals(that.readSchema()) && // compare Spark schemas to ignore field ids\n+        filterExpressions.toString().equals(that.filterExpressions.toString()) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTI0Mzgw", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-497924380", "createdAt": "2020-09-28T21:48:25Z", "commit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDA4Mzkx", "url": "https://github.com/apache/iceberg/pull/1512#pullrequestreview-499008391", "createdAt": "2020-09-30T00:16:46Z", "commit": {"oid": "38d865cec7e8cf098fd2ed6889b1f286c84376f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3849, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}