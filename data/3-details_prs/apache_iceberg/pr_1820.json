{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MDA3NDYx", "number": 1820, "title": "Core: update record_count behavior, include in manifest reader", "bodyText": "Please see this comment for the reason to have this change\nPlease note that this changes the behavior of recordCount in BaseFile; originally if BaseFile was created by avro schema reflection without populating recordCount, calling recordCount() will throw NPE because its return type is primitive. I'm currently following the same style as fileSizeInBytes to return -1 when it is not populated.\nOne implication of this is that the NPE problem described in the original comment will no longer exist, instead metrics evaluators will not filter out anything.\nAlternatively I can refrain from changing this and accept that data.recordCount() could throw NPE in tests, or change the return type of recordCount() to be Long; I don't really have a strong preference so suggestions are welcome!", "createdAt": "2020-11-25T02:47:25Z", "url": "https://github.com/apache/iceberg/pull/1820", "merged": true, "mergeCommit": {"oid": "97703fb147f07174a3c5bb100080bfe6b568e06c"}, "closed": true, "closedAt": "2021-02-03T01:04:18Z", "author": {"login": "yyanyy"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgC4c-gFqTUzODc2NzU2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd2VqT5AFqTU4MTkwNDY3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzY3NTY4", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-538767568", "createdAt": "2020-11-25T18:44:17Z", "commit": {"oid": "684459ca6e2757a247d495dda32f2feb2b37dc38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NDoxN1rOH5_8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NDoxN1rOH5_8rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3ODYwNw==", "bodyText": "Keeps record count or discards record count?\nI think it was an oversight to not include record count in stats. I think we should just have one list.", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530578607", "createdAt": "2020-11-25T18:44:17Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -52,8 +54,13 @@\n public class ManifestReader<F extends ContentFile<F>>\n     extends CloseableGroup implements CloseableIterable<F> {\n   static final ImmutableList<String> ALL_COLUMNS = ImmutableList.of(\"*\");\n-  static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n+\n+  // the difference between the two stats set below is to support ContentFile.copyWithoutStats(), which\n+  // still keeps record count.\n+  private static final Set<String> STATS_COLUMNS = Sets.newHashSet(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "684459ca6e2757a247d495dda32f2feb2b37dc38"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NzY4NjA0", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-538768604", "createdAt": "2020-11-25T18:45:59Z", "commit": {"oid": "684459ca6e2757a247d495dda32f2feb2b37dc38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NTo1OVrOH6AAGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxODo0NTo1OVrOH6AAGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDU3OTQ4Mw==", "bodyText": "If this returned List, then we wouldn't need to copy the list in ManifestGroup", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r530579483", "createdAt": "2020-11-25T18:45:59Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -289,12 +296,12 @@ static boolean dropStats(Expression rowFilter, Collection<String> columns) {\n         Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS).isEmpty();\n   }\n \n-  private static Collection<String> withStatsColumns(Collection<String> columns) {\n+  static Collection<String> withStatsColumns(Collection<String> columns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "684459ca6e2757a247d495dda32f2feb2b37dc38"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjYwODIz", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-545660823", "createdAt": "2020-12-06T00:53:00Z", "commit": {"oid": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwMDo1MzowMFrOIADQ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwMDo1MzowMFrOIADQ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNDQwNA==", "bodyText": "I don't think we should make this change. I like that the NullPointerException ensures that an incorrect record count just can't be used.", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r536924404", "createdAt": "2020-12-06T00:53:00Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseFile.java", "diffHunk": "@@ -60,7 +60,7 @@ public PartitionData copy() {\n   private String filePath = null;\n   private FileFormat format = null;\n   private PartitionData partitionData = null;\n-  private Long recordCount = null;\n+  private long recordCount = -1L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NjYxMDAy", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-545661002", "createdAt": "2020-12-06T00:57:25Z", "commit": {"oid": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwMDo1NzoyNVrOIADTSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwMDo1NzoyNVrOIADTSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjkyNTAwMQ==", "bodyText": "I think this should always contain the record count, even after copyWithoutStats. That's primarily to drop the stats maps, which can be really large.", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r536925001", "createdAt": "2020-12-06T00:57:25Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -149,19 +150,35 @@ private void assertFullStats(DataFile dataFile) {\n     Assert.assertNull(dataFile.columnSizes());\n     Assert.assertEquals(VALUE_COUNT, dataFile.valueCounts());\n     Assert.assertEquals(NULL_VALUE_COUNTS, dataFile.nullValueCounts());\n+    Assert.assertEquals(NAN_VALUE_COUNTS, dataFile.nanValueCounts());\n     Assert.assertEquals(LOWER_BOUNDS, dataFile.lowerBounds());\n     Assert.assertEquals(UPPER_BOUNDS, dataFile.upperBounds());\n-    Assert.assertEquals(NAN_VALUE_COUNTS, dataFile.nanValueCounts());\n+\n+    Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n   }\n \n   private void assertStatsDropped(DataFile dataFile) {\n-    Assert.assertEquals(3, dataFile.recordCount()); // always select record count in all test cases\n+    Assert.assertEquals(3, dataFile.recordCount()); // record count is not considered as droppable stats\n     Assert.assertNull(dataFile.columnSizes());\n     Assert.assertNull(dataFile.valueCounts());\n     Assert.assertNull(dataFile.nullValueCounts());\n+    Assert.assertNull(dataFile.nanValueCounts());\n     Assert.assertNull(dataFile.lowerBounds());\n     Assert.assertNull(dataFile.upperBounds());\n+\n+    Assert.assertEquals(FILE_PATH, dataFile.path()); // always select file path in all test cases\n+  }\n+\n+  private void assertNoStats(DataFile dataFile) {\n+    Assert.assertEquals(-1L, dataFile.recordCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "287c82bc91ee7f0bb006169a7b4c25d7ba8f88b2", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/287c82bc91ee7f0bb006169a7b4c25d7ba8f88b2", "committedDate": "2020-12-08T20:16:45Z", "message": "Core: update record_count behavior, include in manifest reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "106d5db5e92f630762744a861faa8ee869d6cb67", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/106d5db5e92f630762744a861faa8ee869d6cb67", "committedDate": "2020-12-08T20:16:45Z", "message": "update columns type to list in manifest reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76d6056f78ba4021dfed59e03a0904c2d0047546", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/76d6056f78ba4021dfed59e03a0904c2d0047546", "committedDate": "2020-12-08T20:16:45Z", "message": "revert basefile change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/bb09e68e7b774e83ab4111c2edf0f1e135d7cb4a", "committedDate": "2020-11-25T20:10:49Z", "message": "update columns type to list in manifest reader"}, "afterCommit": {"oid": "76d6056f78ba4021dfed59e03a0904c2d0047546", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/76d6056f78ba4021dfed59e03a0904c2d0047546", "committedDate": "2020-12-08T20:16:45Z", "message": "revert basefile change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/7e757de881d41626d72452990c84ed65a3db8bd5", "committedDate": "2020-12-08T21:07:54Z", "message": "update some comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzM4MzYw", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-559338360", "createdAt": "2020-12-29T00:07:00Z", "commit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDowNzowMFrOIMERNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDowNzowMFrOIMERNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyMzc2Nw==", "bodyText": "Did you mean interaction or intersection?", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549523767", "createdAt": "2020-12-29T00:07:00Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -282,14 +283,18 @@ private static boolean requireStatsProjection(Expression rowFilter, Collection<S\n \n   static boolean dropStats(Expression rowFilter, Collection<String> columns) {\n     // Make sure we only drop all stats if we had projected all stats\n-    // We do not drop stats even if we had partially added some stats columns\n-    return rowFilter != Expressions.alwaysTrue() &&\n-        columns != null &&\n-        !columns.containsAll(ManifestReader.ALL_COLUMNS) &&\n-        Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS).isEmpty();\n+    // We do not drop stats even if we had partially added some stats columns, except for record_count column.\n+    // Since we don't want to keep stats map which could be huge in size just because we select record_count, which\n+    // is a primitive type.\n+    if (rowFilter != Expressions.alwaysTrue() && columns != null &&\n+        !columns.containsAll(ManifestReader.ALL_COLUMNS)) {\n+      Set<String> interaction = Sets.intersection(Sets.newHashSet(columns), STATS_COLUMNS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzM4NjA2", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-559338606", "createdAt": "2020-12-29T00:08:37Z", "commit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDowODozN1rOIMESPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDowODozN1rOIMESPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDAyOA==", "bodyText": "Why was it necessary to change this to List instead of Collection? That's not a binary-compatible change. Couldn't we just make a copy of the collection if we need the field to be a list? I'm also not sure why columns can't be a Collection.", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549524028", "createdAt": "2020-12-29T00:08:37Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -136,7 +137,7 @@ public PartitionSpec spec() {\n     return spec;\n   }\n \n-  public ManifestReader<F> select(Collection<String> newColumns) {\n+  public ManifestReader<F> select(List<String> newColumns) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzM5MDM4", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-559339038", "createdAt": "2020-12-29T00:11:59Z", "commit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDoxMTo1OVrOIMEUDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMDoxMTo1OVrOIMEUDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUyNDQ5Mw==", "bodyText": "Do the tests also validate that if stats columns were added, copyWithoutStats will remove the maps, like upperBounds, but not recordCount?", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r549524493", "createdAt": "2020-12-29T00:11:59Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -74,7 +74,7 @@ public void testReadIncludesFullStats() throws IOException {\n   }\n \n   @Test\n-  public void testReadWithFilterIncludesFullStats() throws IOException {\n+  public void testReadEntriesWithFilterIncludesFullStats() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e757de881d41626d72452990c84ed65a3db8bd5"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e177d1937fadf031d3c491a384a1194cc752e41", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/7e177d1937fadf031d3c491a384a1194cc752e41", "committedDate": "2021-01-06T00:39:35Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1Nzg3ODQ4", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-565787848", "createdAt": "2021-01-11T22:24:46Z", "commit": {"oid": "7e177d1937fadf031d3c491a384a1194cc752e41"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMjoyNDo0NlrOIRppzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQyMjozODo0NFrOIRqCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM3OTE0OA==", "bodyText": "nit: use immutable set", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r555379148", "createdAt": "2021-01-11T22:24:46Z", "author": {"login": "jackye1995"}, "path": "core/src/main/java/org/apache/iceberg/ManifestReader.java", "diffHunk": "@@ -52,8 +52,9 @@\n public class ManifestReader<F extends ContentFile<F>>\n     extends CloseableGroup implements CloseableIterable<F> {\n   static final ImmutableList<String> ALL_COLUMNS = ImmutableList.of(\"*\");\n-  static final Set<String> STATS_COLUMNS = Sets.newHashSet(\n-      \"value_counts\", \"null_value_counts\", \"nan_value_counts\", \"lower_bounds\", \"upper_bounds\");\n+\n+  private static final Set<String> STATS_COLUMNS = Sets.newHashSet(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e177d1937fadf031d3c491a384a1194cc752e41"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTM4NTM3Ng==", "bodyText": "nit: to minimize changes, no need to move line for this. Same comment for L206", "url": "https://github.com/apache/iceberg/pull/1820#discussion_r555385376", "createdAt": "2021-01-11T22:38:44Z", "author": {"login": "jackye1995"}, "path": "core/src/test/java/org/apache/iceberg/TestManifestReaderStats.java", "diffHunk": "@@ -100,47 +110,79 @@ public void testReadEntriesWithFilterAndSelectIncludesFullStats() throws IOExcep\n   public void testReadIteratorWithFilterAndSelectDropsStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\"))\n+        .select(ImmutableList.of(\"file_path\"))\n         .filterRows(Expressions.equal(\"id\", 3))) {\n       DataFile entry = reader.iterator().next();\n       assertStatsDropped(entry);\n     }\n   }\n+\n+  @Test\n+  public void testReadIteratorWithFilterAndSelectRecordCountDropsStats() throws IOException {\n+    ManifestFile manifest = writeManifest(1000L, FILE);\n+    try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n+        .select(ImmutableList.of(\"file_path\", \"record_count\"))\n+        .filterRows(Expressions.equal(\"id\", 3))) {\n+      DataFile entry = reader.iterator().next();\n+      assertStatsDropped(entry);\n+    }\n+  }\n+\n   @Test\n   public void testReadIteratorWithFilterAndSelectStatsIncludesFullStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\", \"value_counts\"))\n+        .select(ImmutableList.of(\"file_path\", \"value_counts\"))\n         .filterRows(Expressions.equal(\"id\", 3))) {\n       DataFile entry = reader.iterator().next();\n       assertFullStats(entry);\n+\n+      // explicitly call copyWithoutStats and ensure record count will not be dropped\n+      assertStatsDropped(entry.copyWithoutStats());\n     }\n   }\n \n   @Test\n-  public void testReadEntriesWithSelectNotIncludeFullStats() throws IOException {\n+  public void testReadEntriesWithSelectNotProjectStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\"))) {\n+        .select(ImmutableList.of(\"file_path\"))) {\n       CloseableIterable<ManifestEntry<DataFile>> entries = reader.entries();\n       ManifestEntry<DataFile> entry = entries.iterator().next();\n-      assertStatsDropped(entry.file());\n+      DataFile dataFile = entry.file();\n+\n+      // selected field is populated\n+      Assert.assertEquals(FILE_PATH, dataFile.path());\n+\n+      // not selected fields are all null and not projected\n+      Assert.assertNull(dataFile.columnSizes());\n+      Assert.assertNull(dataFile.valueCounts());\n+      Assert.assertNull(dataFile.nullValueCounts());\n+      Assert.assertNull(dataFile.nanValueCounts());\n+      Assert.assertNull(dataFile.lowerBounds());\n+      Assert.assertNull(dataFile.upperBounds());\n+      assertNullRecordCount(dataFile);\n     }\n   }\n+\n   @Test\n-  public void testReadEntriesWithSelectCertainStatNotIncludeFullStats() throws IOException {\n+  public void testReadEntriesWithSelectCertainStatNotProjectStats() throws IOException {\n     ManifestFile manifest = writeManifest(1000L, FILE);\n     try (ManifestReader<DataFile> reader = ManifestFiles.read(manifest, FILE_IO)\n-        .select(ImmutableSet.of(\"record_count\", \"value_counts\"))) {\n+        .select(ImmutableList.of(\"file_path\", \"value_counts\"))) {\n       DataFile dataFile = reader.iterator().next();\n \n-      Assert.assertEquals(3, dataFile.recordCount());\n-      Assert.assertNull(dataFile.columnSizes());\n+      // selected fields are populated\n       Assert.assertEquals(VALUE_COUNT, dataFile.valueCounts());\n+      Assert.assertEquals(FILE_PATH, dataFile.path());\n+\n+      // not selected fields are all null and not projected\n+      Assert.assertNull(dataFile.columnSizes());\n       Assert.assertNull(dataFile.nullValueCounts());\n+      Assert.assertNull(dataFile.nanValueCounts());\n       Assert.assertNull(dataFile.lowerBounds());\n       Assert.assertNull(dataFile.upperBounds());\n-      Assert.assertNull(dataFile.nanValueCounts());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e177d1937fadf031d3c491a384a1194cc752e41"}, "originalPosition": 139}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca8e3623087e32df2cfd6a58199001ef20b87d34", "author": {"user": {"login": "yyanyy", "name": null}}, "url": "https://github.com/apache/iceberg/commit/ca8e3623087e32df2cfd6a58199001ef20b87d34", "committedDate": "2021-01-12T01:53:44Z", "message": "minor changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NzY4Mzg3", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-567768387", "createdAt": "2021-01-14T00:36:55Z", "commit": {"oid": "ca8e3623087e32df2cfd6a58199001ef20b87d34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxOTA0Njcy", "url": "https://github.com/apache/iceberg/pull/1820#pullrequestreview-581904672", "createdAt": "2021-02-03T01:03:22Z", "commit": {"oid": "ca8e3623087e32df2cfd6a58199001ef20b87d34"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3410, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}