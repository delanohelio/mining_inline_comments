{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5OTEzMjk2", "number": 1933, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNTozN1rOFFiaMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyMDoxOVrOFH41tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzUwOTYyOnYy", "diffSide": "RIGHT", "path": "spark/src/main/java/org/apache/iceberg/spark/SparkWriteOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNTozN1rOIGGHag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNTozN1rOIGGHag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2MjU3MA==", "bodyText": "I feel like there are more write properties. Is there a reason we don't include others?", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r543262570", "createdAt": "2020-12-15T11:25:37Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/spark/SparkWriteOptions.java", "diffHunk": "@@ -29,4 +29,7 @@ private SparkWriteOptions() {\n \n   // Overrides table property write.spark.fanout.enabled(default: false)\n   public static final String FANOUT_ENABLED = \"fanout-enabled\";\n+\n+  // Fileformat for write operations\n+  public static final String WRITE_FORMAT = \"write-format\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fba22440b4a6ef8567eca49f034c264ccc9757d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzUxMDk5OnYy", "diffSide": "RIGHT", "path": "spark/src/main/java/org/apache/iceberg/spark/SparkReadOptions.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNTo1OFrOIGGIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNTo1OFrOIGGIPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2Mjc4MA==", "bodyText": "There are also more read options. Why not include all of them?", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r543262780", "createdAt": "2020-12-15T11:25:58Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/spark/SparkReadOptions.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.spark;\n+\n+/**\n+ * Spark DF read options\n+ */\n+public class SparkReadOptions {\n+\n+  private SparkReadOptions() {\n+  }\n+\n+  // Snapshot ID of the table snapshot to read\n+  public static final String SNAPSHOT_ID = \"snapshot-id\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fba22440b4a6ef8567eca49f034c264ccc9757d"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzUxNjA1OnYy", "diffSide": "RIGHT", "path": "spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNzowOVrOIGGLHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMToyNzowOVrOIGGLHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2MzUxNg==", "bodyText": "Shall we use SparkReadOptions.SNAPSHOT_ID here?", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r543263516", "createdAt": "2020-12-15T11:27:09Z", "author": {"login": "aokolnychyi"}, "path": "spark2/src/main/java/org/apache/iceberg/spark/source/Reader.java", "diffHunk": "@@ -107,7 +108,7 @@\n       boolean caseSensitive, DataSourceOptions options) {\n     this.table = table;\n     this.snapshotId = options.get(\"snapshot-id\").map(Long::parseLong).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fba22440b4a6ef8567eca49f034c264ccc9757d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODE1MzM2OnYy", "diffSide": "RIGHT", "path": "site/docs/spark.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoxOToyMVrOIJhjXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoxOToyMVrOIJhjXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1NzgyMQ==", "bodyText": "Can you remove \"ex:\" here and add the a language to the block so that it is highlighted correctly?", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r546857821", "createdAt": "2020-12-21T18:19:21Z", "author": {"login": "rdblue"}, "path": "site/docs/spark.md", "diffHunk": "@@ -347,6 +347,28 @@ df.createOrReplaceTempView(\"table\")\n spark.sql(\"\"\"select count(1) from table\"\"\").show()\n ```\n \n+**Note**: Dataframe read options are available as static constants in [SparkReadOptions](https://github.com/apache/iceberg/blob/master/core/src/main/java/org/apache/iceberg/types/SparkReadOptions.java) class.\n+\n+| Spark Read option    | Constant               |\n+| --------------- | --------------------- |\n+| snapshot-id     | SNAPSHOT_ID              |\n+| as-of-timestamp | AS_OF_TIMESTAMP              |\n+| split-size      | SPLIT_SIZE |\n+| lookback        | LOOKBACK |\n+| file-open-cost  | FILE_OPEN_COST |\n+| vectorization-enabled  | VECTORIZATION_ENABLED |\n+| batch-size  | VECTORIZATION_BATCH_SIZE |\n+\n+Usage:\n+```\n+ex: spark", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade06aebf84a7a5f15b50be84d5a3e12bd3b6276"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODE1NTY2OnYy", "diffSide": "RIGHT", "path": "site/docs/spark.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyMDoxMFrOIJhkzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyMDoxMFrOIJhkzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1ODE4OQ==", "bodyText": "I'm not sure that we want to encourage users to refer to constants in Iceberg. What do you think, @aokolnychyi, @holdenk, @RussellSpitzer?", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r546858189", "createdAt": "2020-12-21T18:20:10Z", "author": {"login": "rdblue"}, "path": "site/docs/spark.md", "diffHunk": "@@ -347,6 +347,28 @@ df.createOrReplaceTempView(\"table\")\n spark.sql(\"\"\"select count(1) from table\"\"\").show()\n ```\n \n+**Note**: Dataframe read options are available as static constants in [SparkReadOptions](https://github.com/apache/iceberg/blob/master/core/src/main/java/org/apache/iceberg/types/SparkReadOptions.java) class.\n+\n+| Spark Read option    | Constant               |\n+| --------------- | --------------------- |\n+| snapshot-id     | SNAPSHOT_ID              |\n+| as-of-timestamp | AS_OF_TIMESTAMP              |\n+| split-size      | SPLIT_SIZE |\n+| lookback        | LOOKBACK |\n+| file-open-cost  | FILE_OPEN_COST |\n+| vectorization-enabled  | VECTORIZATION_ENABLED |\n+| batch-size  | VECTORIZATION_BATCH_SIZE |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade06aebf84a7a5f15b50be84d5a3e12bd3b6276"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzODE1NjA2OnYy", "diffSide": "RIGHT", "path": "site/docs/spark.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxODoyMDoxOVrOIJhlCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQyMDo0ODozMFrOIJlfWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1ODI0OA==", "bodyText": "Same comment here as above.", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r546858248", "createdAt": "2020-12-21T18:20:19Z", "author": {"login": "rdblue"}, "path": "site/docs/spark.md", "diffHunk": "@@ -513,6 +535,27 @@ data.write\n \n The behavior of DataFrameWriter overwrite mode was undefined in Spark 2.4, but is required to overwrite the entire table in Spark 3. Because of this new requirement, the Iceberg source's behavior changed in Spark 3. In Spark 2.4, the behavior was to dynamically overwrite partitions. To use the Spark 2.4 behavior, add option `overwrite-mode=dynamic`.\n \n+**Note**: Dataframe write options are available as static constants in [SparkWriteOptions](https://github.com/apache/iceberg/blob/master/core/src/main/java/org/apache/iceberg/types/SparkWriteOptions.java) class.\n+\n+| Spark write option           | Constant                    |\n+| ---------------------- | -------------------------- |\n+| write-format           | WRITE_FORMAT |\n+| target-file-size-bytes | TARGET_FILE_SIZE_BYTES      |\n+| check-nullability      | CHECK_NULLABILITY                       |\n+| snapshot-property._custom-key_    |SNAPSHOT_PROPERTY_PREFIX._custom-key_)            |\n+| fanout-enabled       | FANOUT_ENABLED        |\n+| check-ordering       | CHECK_ORDERING        |\n+\n+Usage:\n+```\n+ex: spark", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade06aebf84a7a5f15b50be84d5a3e12bd3b6276"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjkyMjMzMQ==", "bodyText": "done", "url": "https://github.com/apache/iceberg/pull/1933#discussion_r546922331", "createdAt": "2020-12-21T20:48:30Z", "author": {"login": "karuppayya"}, "path": "site/docs/spark.md", "diffHunk": "@@ -513,6 +535,27 @@ data.write\n \n The behavior of DataFrameWriter overwrite mode was undefined in Spark 2.4, but is required to overwrite the entire table in Spark 3. Because of this new requirement, the Iceberg source's behavior changed in Spark 3. In Spark 2.4, the behavior was to dynamically overwrite partitions. To use the Spark 2.4 behavior, add option `overwrite-mode=dynamic`.\n \n+**Note**: Dataframe write options are available as static constants in [SparkWriteOptions](https://github.com/apache/iceberg/blob/master/core/src/main/java/org/apache/iceberg/types/SparkWriteOptions.java) class.\n+\n+| Spark write option           | Constant                    |\n+| ---------------------- | -------------------------- |\n+| write-format           | WRITE_FORMAT |\n+| target-file-size-bytes | TARGET_FILE_SIZE_BYTES      |\n+| check-nullability      | CHECK_NULLABILITY                       |\n+| snapshot-property._custom-key_    |SNAPSHOT_PROPERTY_PREFIX._custom-key_)            |\n+| fanout-enabled       | FANOUT_ENABLED        |\n+| check-ordering       | CHECK_ORDERING        |\n+\n+Usage:\n+```\n+ex: spark", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg1ODI0OA=="}, "originalCommit": {"oid": "ade06aebf84a7a5f15b50be84d5a3e12bd3b6276"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3336, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}