{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3OTE3ODQz", "number": 1742, "title": "Fix decimal scale issue in predicate literals", "bodyText": "Proposing a fix for the issue: #1699 -\nIn summary, the problem is that for a predicate literal you cannot use a decimal type which has a different scale than the column\u2019s type you compare it against.\nTo resolve this, I\u2019ve considered three options:\n\nKeeping the status quo: This would entail that we keep the current logic as is, and provide clear documentation that when using decimals in predicate literals, the same scale needs to be used as the type you compare it against. This may go against user expectations (e.g. this is not how it works in Hive at the moment).\nChange the literal\u2019s scale to match that of the type definition in DecimalLiteral.to(). This would involve rounding if the literal\u2019s scale was the higher one. This introduces the problem that, for example, if we have 100.22 and 100.23 in our table, then running SELECT * FROM tbl WHERE val >= 100.225 could give unexpected results for users due to rounding.\nWe ignore the scale differences during conversion (DecimalLiteral.to()) to other decimal types, since decimals with different scales can still be compared in predicates. This avoids any information loss.\n\nI\u2019ve decided to go with option 3 considering the pros and cons. What do you think @rdblue?", "createdAt": "2020-11-09T17:21:22Z", "url": "https://github.com/apache/iceberg/pull/1742", "merged": true, "mergeCommit": {"oid": "57475083dc5220d01aa915356a3024251afb6772"}, "closed": true, "closedAt": "2020-11-16T20:43:34Z", "author": {"login": "marton-bod"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABda4AB9gH2gAyNTE3OTE3ODQzOmZjZjJmY2NhZmFmZDI3Njk2YThkZTZkYzI1MmQ3ZWQxOWFjZmQ0Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddJp0sAH2gAyNTE3OTE3ODQzOmFhNWU4OTdhNjBlNmZlNTc5ZGFjOTZiODljNmYxZjI3OTUxNGM2MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/fcf2fccafafd27696a8de6dc252d7ed19acfd467", "committedDate": "2020-11-09T17:13:59Z", "message": "Fix decimal scale issue in predicate literals"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzQ5NDc4", "url": "https://github.com/apache/iceberg/pull/1742#pullrequestreview-526749478", "createdAt": "2020-11-09T23:58:14Z", "commit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo1ODoxNFrOHwGVwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo1ODoxNFrOHwGVwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE5NzU2OQ==", "bodyText": "Why was this removed?", "url": "https://github.com/apache/iceberg/pull/1742#discussion_r520197569", "createdAt": "2020-11-09T23:58:14Z", "author": {"login": "rdblue"}, "path": "api/src/test/java/org/apache/iceberg/expressions/TestMiscLiteralConversions.java", "diffHunk": "@@ -231,7 +231,6 @@ public void testInvalidDecimalConversions() {\n         Types.TimeType.get(),\n         Types.TimestampType.withZone(),\n         Types.TimestampType.withoutZone(),\n-        Types.DecimalType.of(9, 4),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzQ5NjIw", "url": "https://github.com/apache/iceberg/pull/1742#pullrequestreview-526749620", "createdAt": "2020-11-09T23:58:37Z", "commit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo1ODozOFrOHwGWNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMzo1ODozOFrOHwGWNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE5NzY4NQ==", "bodyText": "Nit: indentation is off. It should be 2 indents (4 spaces) for continuation indents.", "url": "https://github.com/apache/iceberg/pull/1742#discussion_r520197685", "createdAt": "2020-11-09T23:58:38Z", "author": {"login": "rdblue"}, "path": "api/src/test/java/org/apache/iceberg/expressions/TestNumericLiteralConversions.java", "diffHunk": "@@ -153,17 +154,12 @@ public void testDoubleToDecimalConversion() {\n   public void testDecimalToDecimalConversion() {\n     Literal<BigDecimal> lit = Literal.of(new BigDecimal(\"34.11\"));\n \n-    Assert.assertSame(\"Should return identical object when converting to same scale\",\n-        lit, lit.to(Types.DecimalType.of(9, 2)));\n-    Assert.assertSame(\"Should return identical object when converting to same scale\",\n-        lit, lit.to(Types.DecimalType.of(11, 2)));\n-\n-    Assert.assertNull(\"Changing decimal scale is not allowed\",\n-        lit.to(Types.DecimalType.of(9, 0)));\n-    Assert.assertNull(\"Changing decimal scale is not allowed\",\n-        lit.to(Types.DecimalType.of(9, 1)));\n-    Assert.assertNull(\"Changing decimal scale is not allowed\",\n-        lit.to(Types.DecimalType.of(9, 3)));\n+    IntStream.range(0, 10).forEach(scale -> {\n+      Assert.assertSame(\"Should return identical object\",\n+              lit, lit.to(Types.DecimalType.of(9, scale)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NzUxNDM3", "url": "https://github.com/apache/iceberg/pull/1742#pullrequestreview-526751437", "createdAt": "2020-11-10T00:03:07Z", "commit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDowMzowN1rOHwGcUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwMDowMzowN1rOHwGcUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE5OTI1MQ==", "bodyText": "I think test values should be created using strings so we know that we know the exact BigDecimal values. Converting from float seems unreliable. The one that uses an integer and a specific scale seems fine.", "url": "https://github.com/apache/iceberg/pull/1742#discussion_r520199251", "createdAt": "2020-11-10T00:03:07Z", "author": {"login": "rdblue"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -176,6 +177,40 @@ public void testScanEmptyTable() throws IOException {\n     Assert.assertEquals(0, rows.size());\n   }\n \n+  @Test\n+  public void testDecimalTableWithPredicateLiterals() throws IOException {\n+    shell.setHiveSessionValue(\"hive.vectorized.execution.enabled\", \"false\");\n+    Schema schema = new Schema(required(1, \"decimal_field\", Types.DecimalType.of(7, 2)));\n+    List<Record> records = TestHelper.RecordsBuilder.newInstance(schema)\n+            .add(BigDecimal.valueOf(8500, 2)) // 85.00\n+            .add(BigDecimal.valueOf(100.56))\n+            .add(BigDecimal.valueOf(100.57))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcf2fccafafd27696a8de6dc252d7ed19acfd467"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c72a431f73eddb2fd8f45da5d3975926f5f504d", "author": {"user": {"login": "marton-bod", "name": "Marton Bod"}}, "url": "https://github.com/apache/iceberg/commit/7c72a431f73eddb2fd8f45da5d3975926f5f504d", "committedDate": "2020-11-10T10:06:17Z", "message": "create bigdecimals in test using strings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa5e897a60e6fe579dac96b89c6f1f279514c622", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/aa5e897a60e6fe579dac96b89c6f1f279514c622", "committedDate": "2020-11-16T18:55:52Z", "message": "Merge branch 'master' into decimal_scale_fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3716, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}