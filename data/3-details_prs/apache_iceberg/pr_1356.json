{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NTUxMzk4", "number": 1356, "title": "Parquet: Add vectorized position reader", "bodyText": "This adds parquet position reader for the vectorized case.", "createdAt": "2020-08-18T14:52:42Z", "url": "https://github.com/apache/iceberg/pull/1356", "merged": true, "mergeCommit": {"oid": "63790502b37e3a620b608e13597dd434519565c7"}, "closed": true, "closedAt": "2020-12-18T18:39:20Z", "author": {"login": "chenjunjiedada"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHxOnWgFqTQ4NjU3OTcyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnclVQAFqTU1NTcyMzg4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NTc5NzIz", "url": "https://github.com/apache/iceberg/pull/1356#pullrequestreview-486579723", "createdAt": "2020-09-11T08:26:04Z", "commit": {"oid": "036eb2228f860ec939c3505bac66d0280fe81a89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoyNjowNFrOHQTWug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODoyNjowNFrOHQTWug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1NjM3OA==", "bodyText": "I am unsure if returning a singleton instance for PostitionVectorReader is safe, since it contains a member variable rowStart which seems to differ for every row group created. Can there be a possibility of multiple tasks running on the same executor JVM and wanting to refer to different PostionVectorReaders at the same time?", "url": "https://github.com/apache/iceberg/pull/1356#discussion_r486856378", "createdAt": "2020-09-11T08:26:04Z", "author": {"login": "shardulm94"}, "path": "arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java", "diffHunk": "@@ -332,6 +334,10 @@ public static VectorizedArrowReader nulls() {\n     return NullVectorReader.INSTANCE;\n   }\n \n+  public static VectorizedArrowReader positions() {\n+    return PositionVectorReader.INSTANCE;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "036eb2228f860ec939c3505bac66d0280fe81a89"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Mzg3MTg3", "url": "https://github.com/apache/iceberg/pull/1356#pullrequestreview-488387187", "createdAt": "2020-09-15T07:11:27Z", "commit": {"oid": "52f44687a533f0d9b9895c9dc4326b7ef7785654"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzoxMToyN1rOHRz0-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzozODoyOFrOHR0xZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQzNjk4Nw==", "bodyText": "Seems like technically this class is redundant since the user can use VectorHolder directly, but is probably good for readability?", "url": "https://github.com/apache/iceberg/pull/1356#discussion_r488436987", "createdAt": "2020-09-15T07:11:27Z", "author": {"login": "shardulm94"}, "path": "arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorHolder.java", "diffHunk": "@@ -131,4 +140,10 @@ public Object getConstant() {\n     }\n   }\n \n+  public static class PositionVectorHolder extends VectorHolder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52f44687a533f0d9b9895c9dc4326b7ef7785654"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1MjQ1NQ==", "bodyText": "Can this follow an approach similar to VectorizedArrowReader and not create a new FieldVector and NullabilityHolder for every invocation?\n\n  \n    \n      iceberg/arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java\n    \n    \n        Lines 123 to 125\n      in\n      52f4468\n    \n    \n    \n    \n\n        \n          \n           } else { \n        \n\n        \n          \n             vec.setValueCount(0); \n        \n\n        \n          \n             nullabilityHolder.reset();", "url": "https://github.com/apache/iceberg/pull/1356#discussion_r488452455", "createdAt": "2020-09-15T07:38:28Z", "author": {"login": "shardulm94"}, "path": "arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java", "diffHunk": "@@ -354,6 +360,40 @@ public void setBatchSize(int batchSize) {\n     }\n   }\n \n+  private static final class PositionVectorReader extends VectorizedArrowReader {\n+    private long rowStart;\n+\n+    @Override\n+    public VectorHolder read(VectorHolder reuse, int numValsToRead) {\n+      Field arrowField = ArrowSchemaUtil.convert(MetadataColumns.ROW_POSITION);\n+      FieldVector vec = arrowField.createVector(ArrowAllocation.rootAllocator());\n+      ((BigIntVector) vec).allocateNew(numValsToRead);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52f44687a533f0d9b9895c9dc4326b7ef7785654"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NzU3NTAw", "url": "https://github.com/apache/iceberg/pull/1356#pullrequestreview-498757500", "createdAt": "2020-09-29T18:17:35Z", "commit": {"oid": "73de3696204c8fe1ed99cfddda2cf488c413f735"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxNzozNVrOHZ7Ffg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxODoxNzozNVrOHZ7Ffg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk0NDUxMA==", "bodyText": "Why are we setting this inside of the for loop?", "url": "https://github.com/apache/iceberg/pull/1356#discussion_r496944510", "createdAt": "2020-09-29T18:17:35Z", "author": {"login": "holdenk"}, "path": "arrow/src/main/java/org/apache/iceberg/arrow/vectorized/VectorizedArrowReader.java", "diffHunk": "@@ -354,6 +360,47 @@ public void setBatchSize(int batchSize) {\n     }\n   }\n \n+  private static final class PositionVectorReader extends VectorizedArrowReader {\n+    private long rowStart;\n+    private NullabilityHolder nulls;\n+\n+    @Override\n+    public VectorHolder read(VectorHolder reuse, int numValsToRead) {\n+      Field arrowField = ArrowSchemaUtil.convert(MetadataColumns.ROW_POSITION);\n+      FieldVector vec = arrowField.createVector(ArrowAllocation.rootAllocator());\n+\n+      if (reuse != null) {\n+        vec.setValueCount(0);\n+        nulls.reset();\n+      } else {\n+        ((BigIntVector) vec).allocateNew(numValsToRead);\n+        for (int i = 0; i < numValsToRead; i += 1) {\n+          vec.getDataBuffer().setLong(i * Long.BYTES, rowStart + i);\n+          nulls = new NullabilityHolder(numValsToRead);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73de3696204c8fe1ed99cfddda2cf488c413f735"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "949c250785d6f32dc3368573ab1823bda34556ea", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/949c250785d6f32dc3368573ab1823bda34556ea", "committedDate": "2020-10-12T14:50:24Z", "message": "Merge branch 'master' into add-position-for-parquet-vectorized-reader"}, "afterCommit": {"oid": "a34a9df939eed920166ec6e9a10c9040d88bc929", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/a34a9df939eed920166ec6e9a10c9040d88bc929", "committedDate": "2020-10-12T15:31:41Z", "message": "fix allocation inside loop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaeed07bb0750124f76fcab625553cfb6f9c3d6b", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/aaeed07bb0750124f76fcab625553cfb6f9c3d6b", "committedDate": "2020-11-10T01:48:16Z", "message": "Parquet: Add vectorized position reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78257b02d8845244c294df04eb0634d8315f170e", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/78257b02d8845244c294df04eb0634d8315f170e", "committedDate": "2020-11-10T07:13:50Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de70c968dcf67615004f9683d37ce25def327ead", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/de70c968dcf67615004f9683d37ce25def327ead", "committedDate": "2020-11-10T07:13:50Z", "message": "Don't use singleton for position reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a351f04dca0ffb08c28e11690cac2b3662f755", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/96a351f04dca0ffb08c28e11690cac2b3662f755", "committedDate": "2020-11-10T07:13:50Z", "message": "avoid unnecessary allocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca79a675d25f4e87259940066decd3a3b9a6e342", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/ca79a675d25f4e87259940066decd3a3b9a6e342", "committedDate": "2020-11-10T07:13:50Z", "message": "fix allocation inside loop"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a34a9df939eed920166ec6e9a10c9040d88bc929", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/a34a9df939eed920166ec6e9a10c9040d88bc929", "committedDate": "2020-10-12T15:31:41Z", "message": "fix allocation inside loop"}, "afterCommit": {"oid": "ca79a675d25f4e87259940066decd3a3b9a6e342", "author": {"user": {"login": "chenjunjiedada", "name": "Chen, Junjie"}}, "url": "https://github.com/apache/iceberg/commit/ca79a675d25f4e87259940066decd3a3b9a6e342", "committedDate": "2020-11-10T07:13:50Z", "message": "fix allocation inside loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NzIzODg3", "url": "https://github.com/apache/iceberg/pull/1356#pullrequestreview-555723887", "createdAt": "2020-12-18T18:38:24Z", "commit": {"oid": "ca79a675d25f4e87259940066decd3a3b9a6e342"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4077, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}