{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4Njc0Mjg1", "number": 722, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MDoyOFrODYCo_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MTowMlrODYCpZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTM1Njc4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MDoyOFrOFdrJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoxNzoyMFrOFeACTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDA5MQ==", "bodyText": "We don't typically use ImmutableList to avoid leaking it in methods that are accidentally public or purposely part of the API. I'm +1 for returning ImmutableList.copyOf(errors) below, but I don't think we should guarantee the list will be an ImmutableList.", "url": "https://github.com/apache/iceberg/pull/722#discussion_r366660091", "createdAt": "2020-01-15T01:40:28Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java", "diffHunk": "@@ -93,7 +93,7 @@ private CheckCompatibility(Schema schema, boolean checkOrdering, boolean checkNu\n   }\n \n   @Override\n-  public List<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {\n+  public ImmutableList<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MjIzOA==", "bodyText": "Then we should disable this warning:\n/Users/fokkodriesprong/Desktop/incubator-iceberg/api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java:96: warning: [MixedMutabilityReturnType] This method returns both mutable and immutable collections or maps from different paths. This may be confusing for users of the method.\n  public List<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {\n\nPersonally I prefer to change the signature to ImmutableList.", "url": "https://github.com/apache/iceberg/pull/722#discussion_r366942238", "createdAt": "2020-01-15T15:33:10Z", "author": {"login": "Fokko"}, "path": "api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java", "diffHunk": "@@ -93,7 +93,7 @@ private CheckCompatibility(Schema schema, boolean checkOrdering, boolean checkNu\n   }\n \n   @Override\n-  public List<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {\n+  public ImmutableList<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDA5MQ=="}, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwMjE4OQ==", "bodyText": "I think what that message is saying is that sometimes the method returns a mutable list and sometimes it returns an immutable one. I don't think the signature change is required to solve the problem. We just need to make sure that all paths return either immutable or mutable.\nWe can't change the signature because we don't want to leak Guava in the Iceberg API.", "url": "https://github.com/apache/iceberg/pull/722#discussion_r367002189", "createdAt": "2020-01-15T17:17:20Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/types/CheckCompatibility.java", "diffHunk": "@@ -93,7 +93,7 @@ private CheckCompatibility(Schema schema, boolean checkOrdering, boolean checkNu\n   }\n \n   @Override\n-  public List<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {\n+  public ImmutableList<String> struct(Types.StructType readStruct, Iterable<List<String>> fieldErrorLists) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDA5MQ=="}, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTM1NzA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseRewriteManifests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MDo0MVrOFdrKIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTozMjowN1rOFd8Vrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDEzMQ==", "bodyText": "Why does this need to change?", "url": "https://github.com/apache/iceberg/pull/722#discussion_r366660131", "createdAt": "2020-01-15T01:40:41Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseRewriteManifests.java", "diffHunk": "@@ -53,7 +53,7 @@\n   private static final String REPLACED_MANIFESTS_COUNT = \"manifests-replaced\";\n   private static final String PROCESSED_ENTRY_COUNT = \"entries-processed\";\n \n-  private static final Set<ManifestEntry.Status> ALLOWED_ENTRY_STATUSES = ImmutableSet.of(\n+  private static final ImmutableSet<ManifestEntry.Status> ALLOWED_ENTRY_STATUSES = ImmutableSet.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0MTYxNA==", "bodyText": "/Users/fokkodriesprong/Desktop/incubator-iceberg/core/src/main/java/org/apache/iceberg/BaseRewriteManifests.java:56: warning: [MutableConstantField] Constant field declarations should use the immutable type (such as ImmutableList) instead of the general collection interface type (such as List)\n  private static final Set<ManifestEntry.Status> ALLOWED_ENTRY_STATUSES = ImmutableSet.of(", "url": "https://github.com/apache/iceberg/pull/722#discussion_r366941614", "createdAt": "2020-01-15T15:32:07Z", "author": {"login": "Fokko"}, "path": "core/src/main/java/org/apache/iceberg/BaseRewriteManifests.java", "diffHunk": "@@ -53,7 +53,7 @@\n   private static final String REPLACED_MANIFESTS_COUNT = \"manifests-replaced\";\n   private static final String PROCESSED_ENTRY_COUNT = \"entries-processed\";\n \n-  private static final Set<ManifestEntry.Status> ALLOWED_ENTRY_STATUSES = ImmutableSet.of(\n+  private static final ImmutableSet<ManifestEntry.Status> ALLOWED_ENTRY_STATUSES = ImmutableSet.of(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDEzMQ=="}, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTM1NzgyOnYy", "diffSide": "RIGHT", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetFilters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MTowMlrOFdrKiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTo0MTowMlrOFdrKiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY2MDIzNQ==", "bodyText": "These changes look good to me.", "url": "https://github.com/apache/iceberg/pull/722#discussion_r366660235", "createdAt": "2020-01-15T01:41:02Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetFilters.java", "diffHunk": "@@ -136,29 +136,22 @@ protected Expression bind(UnboundPredicate<?> pred) {\n             case NOT_EQ:\n               return FilterApi.notEq(col, getParquetPrimitive(lit));\n           }\n-\n+          break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d201509fa59f8f8d203ec97feea33d406e1888bc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2963, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}