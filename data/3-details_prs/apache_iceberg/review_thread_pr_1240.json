{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MjAxNDEw", "number": 1240, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTo0OTowMFrOER3-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMDo1NDozNFrOESLwJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTc4MzE0OnYy", "diffSide": "RIGHT", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTo0OTowMFrOG20ktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjowNlrOG3ZO5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzNzY1NQ==", "bodyText": "Nit: this file doesn't need to change. Can you revert this to avoid git conflicts?", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460137655", "createdAt": "2020-07-24T15:49:00Z", "author": {"login": "rdblue"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java", "diffHunk": "@@ -66,6 +66,7 @@ public void dropTestTable() throws Exception {\n     tableLocation.getFileSystem(hiveConf).delete(tableLocation, true);\n     catalog.dropTable(TABLE_IDENTIFIER, false /* metadata only, location was already deleted */);\n   }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODI3Ng==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738276", "createdAt": "2020-07-27T08:46:06Z", "author": {"login": "pvary"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableBaseTest.java", "diffHunk": "@@ -66,6 +66,7 @@ public void dropTestTable() throws Exception {\n     tableLocation.getFileSystem(hiveConf).delete(tableLocation, true);\n     catalog.dropTable(TABLE_IDENTIFIER, false /* metadata only, location was already deleted */);\n   }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzNzY1NQ=="}, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTc4ODM2OnYy", "diffSide": "RIGHT", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTo1MDoyMlrOG20n3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjozNFrOG3ZQJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzODQ2MQ==", "bodyText": "The catalog supports creating a namespace, so I think this test would be better if it used the catalog to create the namespace with a location (\"location\" property) instead of going through the metastore client directly. Could you update it?", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460138461", "createdAt": "2020-07-24T15:50:22Z", "author": {"login": "rdblue"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -295,4 +302,29 @@ public void testListTables() {\n     Assert.assertEquals(1, expectedIdents.size());\n     Assert.assertTrue(catalog.tableExists(TABLE_IDENTIFIER));\n   }\n+\n+  @Test\n+  public void testNonDefaultDatabaseLocation() throws IOException, TException {\n+    // Create a new location and a non-default database / namespace for it\n+    File nonDefaultLocation = createTempDirectory(NON_DEFAULT_DATABASE,\n+        asFileAttribute(fromString(\"rwxrwxrwx\"))).toFile();\n+    Database database = new Database();\n+\n+    database.setName(NON_DEFAULT_DATABASE);\n+    database.setLocationUri(nonDefaultLocation.getPath());\n+    metastoreClient.createDatabase(database);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODU5OQ==", "bodyText": "Sure! Updated.\nThanks for the review!", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738599", "createdAt": "2020-07-27T08:46:34Z", "author": {"login": "pvary"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -295,4 +302,29 @@ public void testListTables() {\n     Assert.assertEquals(1, expectedIdents.size());\n     Assert.assertTrue(catalog.tableExists(TABLE_IDENTIFIER));\n   }\n+\n+  @Test\n+  public void testNonDefaultDatabaseLocation() throws IOException, TException {\n+    // Create a new location and a non-default database / namespace for it\n+    File nonDefaultLocation = createTempDirectory(NON_DEFAULT_DATABASE,\n+        asFileAttribute(fromString(\"rwxrwxrwx\"))).toFile();\n+    Database database = new Database();\n+\n+    database.setName(NON_DEFAULT_DATABASE);\n+    database.setLocationUri(nonDefaultLocation.getPath());\n+    metastoreClient.createDatabase(database);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEzODQ2MQ=="}, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTAyMzczOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMDo1NDozNFrOG3PGyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODo0NjoxNFrOG3ZPOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MjM2Mw==", "bodyText": "Nit: Typo in thous?", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460572363", "createdAt": "2020-07-26T20:54:34Z", "author": {"login": "shardulm94"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -376,6 +376,28 @@ public TableOperations newTableOps(TableIdentifier tableIdentifier) {\n \n   @Override\n   protected String defaultWarehouseLocation(TableIdentifier tableIdentifier) {\n+    // This is a little edgy since we basically duplicate the HMS location generation logic.\n+    // Sadly I do not see a good way around this if we want to keep the order of events, like:\n+    // - Create meta files\n+    // - Create the metadata in HMS, and thous commit the changes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODM2MQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1240#discussion_r460738361", "createdAt": "2020-07-27T08:46:14Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -376,6 +376,28 @@ public TableOperations newTableOps(TableIdentifier tableIdentifier) {\n \n   @Override\n   protected String defaultWarehouseLocation(TableIdentifier tableIdentifier) {\n+    // This is a little edgy since we basically duplicate the HMS location generation logic.\n+    // Sadly I do not see a good way around this if we want to keep the order of events, like:\n+    // - Create meta files\n+    // - Create the metadata in HMS, and thous commit the changes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3MjM2Mw=="}, "originalCommit": {"oid": "667d9b63a431bea1467ad54ab7941b85a9482c81"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3797, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}