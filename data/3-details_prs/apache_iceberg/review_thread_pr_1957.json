{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjg1OTM4", "number": 1957, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowODo1MFrOFHSpxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoxMzoyM1rOFHSvow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTg5OTU4OnYy", "diffSide": "RIGHT", "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowODo1MFrOIItSwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQyMjoyNDowNFrOII-7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTYwMg==", "bodyText": "Did you intend to set this in the constructor?", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546001602", "createdAt": "2020-12-18T18:08:50Z", "author": {"login": "rdblue"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -56,6 +56,7 @@\n \n   private CloseableIterator<T> currentIterator;\n   private T current = null;\n+  private FileScanTask currentTask = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3ODk5OA==", "bodyText": "Not really, does it matter if it is in the constructor? It is going to be set to null in the constructor anyway. Similar to the current variable above it.", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546178998", "createdAt": "2020-12-19T02:38:24Z", "author": {"login": "shardulm94"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -56,6 +56,7 @@\n \n   private CloseableIterator<T> currentIterator;\n   private T current = null;\n+  private FileScanTask currentTask = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTYwMg=="}, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI5MDU3NA==", "bodyText": "Sorry, I missed that this is getting set in next. I thought that change was just to indentation. Nevermind!", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546290574", "createdAt": "2020-12-19T22:24:04Z", "author": {"login": "rdblue"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -56,6 +56,7 @@\n \n   private CloseableIterator<T> currentIterator;\n   private T current = null;\n+  private FileScanTask currentTask = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTYwMg=="}, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTkxNDU5OnYy", "diffSide": "RIGHT", "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoxMzoyM1rOIItbqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQwMjozODozMFrOII4HvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMzg4MA==", "bodyText": "The main problem I have with this is that it alters the exception by discarding its type. Callers can no longer catch exceptions and handle errors. For example, a caller might catch a SocketException and retry, but let an EOFException propagate.\nIs there another way to attach the data? What about logging the file path and exception instead of modifying the exception?\nAnother option is to create a new exception and attach it as suppressed, then throw the original unmodified.", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546003880", "createdAt": "2020-12-18T18:13:23Z", "author": {"login": "rdblue"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -77,16 +78,30 @@\n   }\n \n   public boolean next() throws IOException {\n-    while (true) {\n-      if (currentIterator.hasNext()) {\n-        this.current = currentIterator.next();\n-        return true;\n-      } else if (tasks.hasNext()) {\n-        this.currentIterator.close();\n-        this.currentIterator = open(tasks.next());\n+    try {\n+      while (true) {\n+        if (currentIterator.hasNext()) {\n+          this.current = currentIterator.next();\n+          return true;\n+        } else if (tasks.hasNext()) {\n+          this.currentIterator.close();\n+          this.currentTask = tasks.next();\n+          this.currentIterator = open(currentTask);\n+        } else {\n+          this.currentIterator.close();\n+          return false;\n+        }\n+      }\n+    } catch (IOException | RuntimeException e) {\n+      if (currentTask == null || currentTask.isDataTask()) {\n+        throw e;\n       } else {\n-        this.currentIterator.close();\n-        return false;\n+        String message = String.format(\"Error reading file: %s\", getInputFile(currentTask).location());\n+        if (e instanceof IOException) {\n+          throw new IOException(message, e);\n+        } else {\n+          throw new RuntimeException(message, e);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA0ODQ3MQ==", "bodyText": "+1 To Logging an error", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546048471", "createdAt": "2020-12-18T19:29:14Z", "author": {"login": "RussellSpitzer"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -77,16 +78,30 @@\n   }\n \n   public boolean next() throws IOException {\n-    while (true) {\n-      if (currentIterator.hasNext()) {\n-        this.current = currentIterator.next();\n-        return true;\n-      } else if (tasks.hasNext()) {\n-        this.currentIterator.close();\n-        this.currentIterator = open(tasks.next());\n+    try {\n+      while (true) {\n+        if (currentIterator.hasNext()) {\n+          this.current = currentIterator.next();\n+          return true;\n+        } else if (tasks.hasNext()) {\n+          this.currentIterator.close();\n+          this.currentTask = tasks.next();\n+          this.currentIterator = open(currentTask);\n+        } else {\n+          this.currentIterator.close();\n+          return false;\n+        }\n+      }\n+    } catch (IOException | RuntimeException e) {\n+      if (currentTask == null || currentTask.isDataTask()) {\n+        throw e;\n       } else {\n-        this.currentIterator.close();\n-        return false;\n+        String message = String.format(\"Error reading file: %s\", getInputFile(currentTask).location());\n+        if (e instanceof IOException) {\n+          throw new IOException(message, e);\n+        } else {\n+          throw new RuntimeException(message, e);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMzg4MA=="}, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA3NzU0Nw==", "bodyText": "Logging the error makes sense! Thanks for the suggestion.", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546077547", "createdAt": "2020-12-18T20:34:11Z", "author": {"login": "shardulm94"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -77,16 +78,30 @@\n   }\n \n   public boolean next() throws IOException {\n-    while (true) {\n-      if (currentIterator.hasNext()) {\n-        this.current = currentIterator.next();\n-        return true;\n-      } else if (tasks.hasNext()) {\n-        this.currentIterator.close();\n-        this.currentIterator = open(tasks.next());\n+    try {\n+      while (true) {\n+        if (currentIterator.hasNext()) {\n+          this.current = currentIterator.next();\n+          return true;\n+        } else if (tasks.hasNext()) {\n+          this.currentIterator.close();\n+          this.currentTask = tasks.next();\n+          this.currentIterator = open(currentTask);\n+        } else {\n+          this.currentIterator.close();\n+          return false;\n+        }\n+      }\n+    } catch (IOException | RuntimeException e) {\n+      if (currentTask == null || currentTask.isDataTask()) {\n+        throw e;\n       } else {\n-        this.currentIterator.close();\n-        return false;\n+        String message = String.format(\"Error reading file: %s\", getInputFile(currentTask).location());\n+        if (e instanceof IOException) {\n+          throw new IOException(message, e);\n+        } else {\n+          throw new RuntimeException(message, e);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMzg4MA=="}, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE3OTAwNQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1957#discussion_r546179005", "createdAt": "2020-12-19T02:38:30Z", "author": {"login": "shardulm94"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/BaseDataReader.java", "diffHunk": "@@ -77,16 +78,30 @@\n   }\n \n   public boolean next() throws IOException {\n-    while (true) {\n-      if (currentIterator.hasNext()) {\n-        this.current = currentIterator.next();\n-        return true;\n-      } else if (tasks.hasNext()) {\n-        this.currentIterator.close();\n-        this.currentIterator = open(tasks.next());\n+    try {\n+      while (true) {\n+        if (currentIterator.hasNext()) {\n+          this.current = currentIterator.next();\n+          return true;\n+        } else if (tasks.hasNext()) {\n+          this.currentIterator.close();\n+          this.currentTask = tasks.next();\n+          this.currentIterator = open(currentTask);\n+        } else {\n+          this.currentIterator.close();\n+          return false;\n+        }\n+      }\n+    } catch (IOException | RuntimeException e) {\n+      if (currentTask == null || currentTask.isDataTask()) {\n+        throw e;\n       } else {\n-        this.currentIterator.close();\n-        return false;\n+        String message = String.format(\"Error reading file: %s\", getInputFile(currentTask).location());\n+        if (e instanceof IOException) {\n+          throw new IOException(message, e);\n+        } else {\n+          throw new RuntimeException(message, e);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMzg4MA=="}, "originalCommit": {"oid": "5f37abf1ac17e0006926c73757b01f2d5311719b"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3071, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}