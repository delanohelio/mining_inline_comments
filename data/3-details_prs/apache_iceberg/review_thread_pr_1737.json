{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDIwMDcx", "number": 1737, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzoyMzo1MFrOE2RRCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzoyMzo1MFrOE2RRCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MzQxNDUwOnYy", "diffSide": "RIGHT", "path": "site/docs/custom-catalog.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzoyMzo1MFrOHvAeGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzozODo1N1rOHvAstw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ==", "bodyText": "This isn't really needed for a custom catalog, and it is an option for the built-in catalogs. I think maybe we should move this to a doc on customizing tables, instead of here. Or, maybe just make it more clear that this isn't required. I think it is somewhat common for people to want to customize catalogs, and I don't want to make it seem like it is harder than it already is.", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519052825", "createdAt": "2020-11-06T23:23:50Z", "author": {"login": "rdblue"}, "path": "site/docs/custom-catalog.md", "diffHunk": "@@ -127,8 +137,111 @@ public class CustomCatalog extends BaseMetastoreCatalog {\n     // Example service to rename table\n     CustomService.renameTable(from.namepsace().level(0), from.name(), to.name());\n   }\n+\n+  // implement this method to read catalog name and properties during initialization\n+  public void initialize(String name, Map<String, String> properties) {\n+  }\n }\n ```\n+\n+Catalog implementations can be dynamically loaded in most compute engines.\n+For Spark and Flink, you can specify the `catalog-impl` catalog property to load it.\n+Read the [Configuration](../configuration/#catalog-properties) section for more details.\n+For MapReduce, implement `org.apache.iceberg.mr.CatalogLoader` and set Hadoop property `iceberg.mr.catalog.loader.class` to load it.\n+If your catalog must read Hadoop configuration to access certain environment properties, make your catalog implement `org.apache.hadoop.conf.Configurable`.\n+\n+### Custom file IO implementation\n+\n+Extend `FileIO` and provide implementation to read and write data files\n+\n+Example:\n+```java\n+public class CustomFileIO implements FileIO {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "308acfab8b29678ad6e688e85116ca67e1bfb1e4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MzUwOQ==", "bodyText": "Actually, I think this is fine. We may want to clarify some of the wording, but I think this page is turning into general docs for customizing tables.", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519053509", "createdAt": "2020-11-06T23:26:29Z", "author": {"login": "rdblue"}, "path": "site/docs/custom-catalog.md", "diffHunk": "@@ -127,8 +137,111 @@ public class CustomCatalog extends BaseMetastoreCatalog {\n     // Example service to rename table\n     CustomService.renameTable(from.namepsace().level(0), from.name(), to.name());\n   }\n+\n+  // implement this method to read catalog name and properties during initialization\n+  public void initialize(String name, Map<String, String> properties) {\n+  }\n }\n ```\n+\n+Catalog implementations can be dynamically loaded in most compute engines.\n+For Spark and Flink, you can specify the `catalog-impl` catalog property to load it.\n+Read the [Configuration](../configuration/#catalog-properties) section for more details.\n+For MapReduce, implement `org.apache.iceberg.mr.CatalogLoader` and set Hadoop property `iceberg.mr.catalog.loader.class` to load it.\n+If your catalog must read Hadoop configuration to access certain environment properties, make your catalog implement `org.apache.hadoop.conf.Configurable`.\n+\n+### Custom file IO implementation\n+\n+Extend `FileIO` and provide implementation to read and write data files\n+\n+Example:\n+```java\n+public class CustomFileIO implements FileIO {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ=="}, "originalCommit": {"oid": "308acfab8b29678ad6e688e85116ca67e1bfb1e4"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1NjU2Nw==", "bodyText": "Yes, maybe a more generic title like Customization would make more sense now.", "url": "https://github.com/apache/iceberg/pull/1737#discussion_r519056567", "createdAt": "2020-11-06T23:38:57Z", "author": {"login": "jackye1995"}, "path": "site/docs/custom-catalog.md", "diffHunk": "@@ -127,8 +137,111 @@ public class CustomCatalog extends BaseMetastoreCatalog {\n     // Example service to rename table\n     CustomService.renameTable(from.namepsace().level(0), from.name(), to.name());\n   }\n+\n+  // implement this method to read catalog name and properties during initialization\n+  public void initialize(String name, Map<String, String> properties) {\n+  }\n }\n ```\n+\n+Catalog implementations can be dynamically loaded in most compute engines.\n+For Spark and Flink, you can specify the `catalog-impl` catalog property to load it.\n+Read the [Configuration](../configuration/#catalog-properties) section for more details.\n+For MapReduce, implement `org.apache.iceberg.mr.CatalogLoader` and set Hadoop property `iceberg.mr.catalog.loader.class` to load it.\n+If your catalog must read Hadoop configuration to access certain environment properties, make your catalog implement `org.apache.hadoop.conf.Configurable`.\n+\n+### Custom file IO implementation\n+\n+Extend `FileIO` and provide implementation to read and write data files\n+\n+Example:\n+```java\n+public class CustomFileIO implements FileIO {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MjgyNQ=="}, "originalCommit": {"oid": "308acfab8b29678ad6e688e85116ca67e1bfb1e4"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3408, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}