{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MTg2OTQ4", "number": 1551, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo1MTowN1rOEq9doQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo1MTowN1rOEq9doQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDgyNjU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo1MTowN1rOHddx4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo1NjowN1rOHdd3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1ODY1OA==", "bodyText": "Could this cause a problem if I have a table that goes unsorted -> sorted 1,2,3 -> unsorted -> sorted 4,5,6?  Wouldn't the ids then go 0 -> 1 -> 0 -> 1, where we have two separate sort orders with the id 1?", "url": "https://github.com/apache/iceberg/pull/1551#discussion_r500658658", "createdAt": "2020-10-06T23:51:07Z", "author": {"login": "danielcweeks"}, "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -491,6 +491,43 @@ public TableMetadata updatePartitionSpec(PartitionSpec newPartitionSpec) {\n         currentSnapshotId, snapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n   }\n \n+  public TableMetadata updateSortOrder(SortOrder newOrder) {\n+    SortOrder.checkCompatibility(newOrder, schema);\n+\n+    // determine the next order id\n+    int newOrderId = INITIAL_SORT_ORDER_ID;\n+    for (SortOrder order : sortOrders) {\n+      if (order.sameOrder(newOrder)) {\n+        newOrderId = order.orderId();\n+        break;\n+      } else if (newOrderId <= order.orderId()) {\n+        newOrderId = order.orderId() + 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b971cd7255335d9df70ab56dfd7b3ea0495719"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY2MDE1OA==", "bodyText": "I guess if they're only added incrementally with ascending orderIds the last will always be the largest value (e.g. max(orderIds).", "url": "https://github.com/apache/iceberg/pull/1551#discussion_r500660158", "createdAt": "2020-10-06T23:56:07Z", "author": {"login": "danielcweeks"}, "path": "core/src/main/java/org/apache/iceberg/TableMetadata.java", "diffHunk": "@@ -491,6 +491,43 @@ public TableMetadata updatePartitionSpec(PartitionSpec newPartitionSpec) {\n         currentSnapshotId, snapshots, snapshotLog, addPreviousFile(file, lastUpdatedMillis));\n   }\n \n+  public TableMetadata updateSortOrder(SortOrder newOrder) {\n+    SortOrder.checkCompatibility(newOrder, schema);\n+\n+    // determine the next order id\n+    int newOrderId = INITIAL_SORT_ORDER_ID;\n+    for (SortOrder order : sortOrders) {\n+      if (order.sameOrder(newOrder)) {\n+        newOrderId = order.orderId();\n+        break;\n+      } else if (newOrderId <= order.orderId()) {\n+        newOrderId = order.orderId() + 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1ODY1OA=="}, "originalCommit": {"oid": "65b971cd7255335d9df70ab56dfd7b3ea0495719"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3569, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}