{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzI1MTEx", "number": 1301, "title": "Add position delete filter and utils", "bodyText": "This adds a position delete row filter and helpers for constructing a row filter that will filter deletes to a specific data file and merge deletes from multiple delete files. These utilities are written using CloseableIterable and handle file closing.", "createdAt": "2020-08-06T01:23:50Z", "url": "https://github.com/apache/iceberg/pull/1301", "merged": true, "mergeCommit": {"oid": "48360064447f2c93194b366240a044a353840e6e"}, "closed": true, "closedAt": "2020-08-06T22:07:53Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8FcL5gH2gAyNDYzNzI1MTExOjAxZGM5MzQyYjA3ZmI2NGVjYzkzNTM2NDc2NDIyMzJiYmQ4YzI0ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8WfocAFqTQ2Mjg4MTQxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01dc9342b07fb64ecc9353647642232bbd8c24ec", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/01dc9342b07fb64ecc9353647642232bbd8c24ec", "committedDate": "2020-08-06T01:21:51Z", "message": "Add position delete filter and utils."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMTI2MDUw", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462126050", "createdAt": "2020-08-06T01:25:19Z", "commit": {"oid": "01dc9342b07fb64ecc9353647642232bbd8c24ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNToxOVrOG8f-dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMToyNToxOVrOG8f-dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA5MTYzNw==", "bodyText": "We can move this to a better place later, but it isn't available elsewhere so it makes sense to add it here.", "url": "https://github.com/apache/iceberg/pull/1301#discussion_r466091637", "createdAt": "2020-08-06T01:25:19Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/deletes/Deletes.java", "diffHunk": "@@ -0,0 +1,163 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.deletes;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.Function;\n+import org.apache.iceberg.Accessor;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.StructLike;\n+import org.apache.iceberg.io.CloseableGroup;\n+import org.apache.iceberg.io.CloseableIterable;\n+import org.apache.iceberg.io.CloseableIterator;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Iterators;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.relocated.com.google.common.collect.Sets;\n+import org.apache.iceberg.types.Comparators;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.util.Filter;\n+import org.apache.iceberg.util.FilterIterator;\n+import org.apache.iceberg.util.SortedMerge;\n+import org.apache.iceberg.util.StructLikeWrapper;\n+\n+public class Deletes {\n+  private static final Schema POSITION_DELETE_SCHEMA = new Schema(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dc9342b07fb64ecc9353647642232bbd8c24ec"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTc5NTAz", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462579503", "createdAt": "2020-08-06T14:34:18Z", "commit": {"oid": "01dc9342b07fb64ecc9353647642232bbd8c24ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b74c3569e937d8e900e7d03cd1e2c550fa735d6", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/2b74c3569e937d8e900e7d03cd1e2c550fa735d6", "committedDate": "2020-08-06T16:17:27Z", "message": "Remove unused imports to fix checkstyle."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/ed60d0e0b13e9cd524d15c84dfada566b5e55ef4", "committedDate": "2020-08-06T17:50:39Z", "message": "Fix line length for checkstyle."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e81ef95b3f18aa9f80c9495ce5462cd712c67903", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/e81ef95b3f18aa9f80c9495ce5462cd712c67903", "committedDate": "2020-08-06T17:49:22Z", "message": "Fix line length for checkstyle."}, "afterCommit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/ed60d0e0b13e9cd524d15c84dfada566b5e55ef4", "committedDate": "2020-08-06T17:50:39Z", "message": "Fix line length for checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzkzNTc0", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462793574", "createdAt": "2020-08-06T18:57:21Z", "commit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo1NzoyMVrOG9ATqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOTozODo1MVrOG9BoEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYyMTM1Mw==", "bodyText": "Why filename and not file_path like we use for DataFile?", "url": "https://github.com/apache/iceberg/pull/1301#discussion_r466621353", "createdAt": "2020-08-06T18:57:21Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/deletes/Deletes.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.deletes;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.iceberg.Accessor;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.StructLike;\n+import org.apache.iceberg.io.CloseableGroup;\n+import org.apache.iceberg.io.CloseableIterable;\n+import org.apache.iceberg.io.CloseableIterator;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.types.Comparators;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.util.Filter;\n+import org.apache.iceberg.util.FilterIterator;\n+import org.apache.iceberg.util.SortedMerge;\n+\n+public class Deletes {\n+  private static final Schema POSITION_DELETE_SCHEMA = new Schema(\n+      Types.NestedField.required(1, \"filename\", Types.StringType.get(), \"Data file location of the deleted row\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY0Mjk2MA==", "bodyText": "Does this mean we will filter out positions after we read data and project meta columns? Do we plan to push this down to readers in the future? How will it work with vectorized execution?", "url": "https://github.com/apache/iceberg/pull/1301#discussion_r466642960", "createdAt": "2020-08-06T19:38:51Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/deletes/Deletes.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.deletes;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.iceberg.Accessor;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.StructLike;\n+import org.apache.iceberg.io.CloseableGroup;\n+import org.apache.iceberg.io.CloseableIterable;\n+import org.apache.iceberg.io.CloseableIterator;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.types.Comparators;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.util.Filter;\n+import org.apache.iceberg.util.FilterIterator;\n+import org.apache.iceberg.util.SortedMerge;\n+\n+public class Deletes {\n+  private static final Schema POSITION_DELETE_SCHEMA = new Schema(\n+      Types.NestedField.required(1, \"filename\", Types.StringType.get(), \"Data file location of the deleted row\"),\n+      Types.NestedField.required(2, \"pos\", Types.LongType.get(), \"Row position in the data file of the deleted row\")\n+  );\n+\n+  private static final Accessor<StructLike> FILENAME_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(1);\n+  private static final Accessor<StructLike> POSITION_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(2);\n+\n+  private Deletes() {\n+  }\n+\n+  public static <T> CloseableIterable<T> positionFilter(CloseableIterable<T> rows, Function<T, Long> rowToPosition,\n+                                                        CloseableIterable<Long> posDeletes) {\n+    return new PositionDeleteFilter<>(rows, rowToPosition, posDeletes);\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation, CloseableIterable<StructLike> posDeletes) {\n+    return deletePositions(dataLocation, ImmutableList.of(posDeletes));\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation,\n+                                                        List<CloseableIterable<StructLike>> deleteFiles) {\n+    DataFileFilter locationFilter = new DataFileFilter(dataLocation);\n+    List<CloseableIterable<Long>> positions = Lists.transform(deleteFiles, deletes ->\n+        CloseableIterable.transform(locationFilter.filter(deletes), row -> (Long) POSITION_ACCESSOR.get(row)));\n+\n+    return new SortedMerge<>(Long::compare, positions);\n+  }\n+\n+  private static class PositionDeleteFilter<T> extends CloseableGroup implements CloseableIterable<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODM5Nzk2", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462839796", "createdAt": "2020-08-06T20:08:03Z", "commit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDowODowM1rOG9ChRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDowODowM1rOG9ChRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1NzYwNw==", "bodyText": "Does this assume rows are ordered by position?", "url": "https://github.com/apache/iceberg/pull/1301#discussion_r466657607", "createdAt": "2020-08-06T20:08:03Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/deletes/Deletes.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.deletes;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.iceberg.Accessor;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.StructLike;\n+import org.apache.iceberg.io.CloseableGroup;\n+import org.apache.iceberg.io.CloseableIterable;\n+import org.apache.iceberg.io.CloseableIterator;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.types.Comparators;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.util.Filter;\n+import org.apache.iceberg.util.FilterIterator;\n+import org.apache.iceberg.util.SortedMerge;\n+\n+public class Deletes {\n+  private static final Schema POSITION_DELETE_SCHEMA = new Schema(\n+      Types.NestedField.required(1, \"filename\", Types.StringType.get(), \"Data file location of the deleted row\"),\n+      Types.NestedField.required(2, \"pos\", Types.LongType.get(), \"Row position in the data file of the deleted row\")\n+  );\n+\n+  private static final Accessor<StructLike> FILENAME_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(1);\n+  private static final Accessor<StructLike> POSITION_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(2);\n+\n+  private Deletes() {\n+  }\n+\n+  public static <T> CloseableIterable<T> positionFilter(CloseableIterable<T> rows, Function<T, Long> rowToPosition,\n+                                                        CloseableIterable<Long> posDeletes) {\n+    return new PositionDeleteFilter<>(rows, rowToPosition, posDeletes);\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation, CloseableIterable<StructLike> posDeletes) {\n+    return deletePositions(dataLocation, ImmutableList.of(posDeletes));\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation,\n+                                                        List<CloseableIterable<StructLike>> deleteFiles) {\n+    DataFileFilter locationFilter = new DataFileFilter(dataLocation);\n+    List<CloseableIterable<Long>> positions = Lists.transform(deleteFiles, deletes ->\n+        CloseableIterable.transform(locationFilter.filter(deletes), row -> (Long) POSITION_ACCESSOR.get(row)));\n+\n+    return new SortedMerge<>(Long::compare, positions);\n+  }\n+\n+  private static class PositionDeleteFilter<T> extends CloseableGroup implements CloseableIterable<T> {\n+    private final CloseableIterable<T> rows;\n+    private final Function<T, Long> extractPos;\n+    private final CloseableIterable<Long> deletePositions;\n+\n+    private PositionDeleteFilter(CloseableIterable<T> rows, Function<T, Long> extractPos,\n+                                 CloseableIterable<Long> deletePositions) {\n+      this.rows = rows;\n+      this.extractPos = extractPos;\n+      this.deletePositions = deletePositions;\n+    }\n+\n+    @Override\n+    public CloseableIterator<T> iterator() {\n+      CloseableIterator<Long> deletePosIterator = deletePositions.iterator();\n+\n+      CloseableIterator<T> iter;\n+      if (deletePosIterator.hasNext()) {\n+        iter = new PositionFilterIterator(rows.iterator(), deletePosIterator);\n+      } else {\n+        iter = rows.iterator();\n+        try {\n+          deletePosIterator.close();\n+        } catch (IOException e) {\n+          throw new UncheckedIOException(\"Failed to close delete positions iterator\", e);\n+        }\n+      }\n+\n+      addCloseable(iter);\n+\n+      return iter;\n+    }\n+\n+    private class PositionFilterIterator extends FilterIterator<T> {\n+      private final CloseableIterator<Long> deletePosIterator;\n+      private long nextDeletePos;\n+\n+      protected PositionFilterIterator(CloseableIterator<T> items, CloseableIterator<Long> deletePositions) {\n+        super(items);\n+        this.deletePosIterator = deletePositions;\n+        this.nextDeletePos = deletePosIterator.next();\n+      }\n+\n+      @Override\n+      protected boolean shouldKeep(T row) {\n+        long currentPos = extractPos.apply(row);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "originalPosition": 116}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODQ0MzUw", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462844350", "createdAt": "2020-08-06T20:15:20Z", "commit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoxNToyMFrOG9Cu9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDoxNToyMFrOG9Cu9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2MTEwOA==", "bodyText": "One of the assumptions was that positional deletes are lightweight and we can build an in-memory map from file_path to a set of deleted positions for a given task. If I understand correctly, the current logic will scan deleteFiles for every data file.", "url": "https://github.com/apache/iceberg/pull/1301#discussion_r466661108", "createdAt": "2020-08-06T20:15:20Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/deletes/Deletes.java", "diffHunk": "@@ -0,0 +1,159 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.deletes;\n+\n+import java.io.IOException;\n+import java.io.UncheckedIOException;\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.function.Function;\n+import org.apache.iceberg.Accessor;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.StructLike;\n+import org.apache.iceberg.io.CloseableGroup;\n+import org.apache.iceberg.io.CloseableIterable;\n+import org.apache.iceberg.io.CloseableIterator;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.types.Comparators;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.util.Filter;\n+import org.apache.iceberg.util.FilterIterator;\n+import org.apache.iceberg.util.SortedMerge;\n+\n+public class Deletes {\n+  private static final Schema POSITION_DELETE_SCHEMA = new Schema(\n+      Types.NestedField.required(1, \"filename\", Types.StringType.get(), \"Data file location of the deleted row\"),\n+      Types.NestedField.required(2, \"pos\", Types.LongType.get(), \"Row position in the data file of the deleted row\")\n+  );\n+\n+  private static final Accessor<StructLike> FILENAME_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(1);\n+  private static final Accessor<StructLike> POSITION_ACCESSOR = POSITION_DELETE_SCHEMA.accessorForField(2);\n+\n+  private Deletes() {\n+  }\n+\n+  public static <T> CloseableIterable<T> positionFilter(CloseableIterable<T> rows, Function<T, Long> rowToPosition,\n+                                                        CloseableIterable<Long> posDeletes) {\n+    return new PositionDeleteFilter<>(rows, rowToPosition, posDeletes);\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation, CloseableIterable<StructLike> posDeletes) {\n+    return deletePositions(dataLocation, ImmutableList.of(posDeletes));\n+  }\n+\n+  public static CloseableIterable<Long> deletePositions(String dataLocation,\n+                                                        List<CloseableIterable<StructLike>> deleteFiles) {\n+    DataFileFilter locationFilter = new DataFileFilter(dataLocation);\n+    List<CloseableIterable<Long>> positions = Lists.transform(deleteFiles, deletes ->\n+        CloseableIterable.transform(locationFilter.filter(deletes), row -> (Long) POSITION_ACCESSOR.get(row)));\n+\n+    return new SortedMerge<>(Long::compare, positions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed60d0e0b13e9cd524d15c84dfada566b5e55ef4"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4842c6a7e9d577b9463d8f32a6ae2e7215207ec7", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/4842c6a7e9d577b9463d8f32a6ae2e7215207ec7", "committedDate": "2020-08-06T21:08:03Z", "message": "Use file_path for position delete location."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec74b743522e65da60016e75a9e484a8692a0b9", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/1ec74b743522e65da60016e75a9e484a8692a0b9", "committedDate": "2020-08-06T21:09:05Z", "message": "Fix imports for checkstyle."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODgxNDE5", "url": "https://github.com/apache/iceberg/pull/1301#pullrequestreview-462881419", "createdAt": "2020-08-06T21:14:00Z", "commit": {"oid": "1ec74b743522e65da60016e75a9e484a8692a0b9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4400, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}