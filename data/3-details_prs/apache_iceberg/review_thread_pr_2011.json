{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTY3OTUx", "number": 2011, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDoxNTowNVrOFKZxpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDoxNzoyMVrOFKZyuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NDUyMzkwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDoxNTowNVrOINLHwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxMjo0MDoyOFrOINQBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDYxMA==", "bodyText": "Can you use Objects.hash instead? That's a much more compact implementation that does basically the same thing.", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550684610", "createdAt": "2020-12-31T20:15:05Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&\n+          this.parentId.equals(other.parentId()) &&\n+          this.sequenceNumber == other.sequenceNumber() &&\n+          this.timestampMillis == other.timestampMillis();\n+\n+    }\n+    return false;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 7;\n+    hash = 31 * hash + (int) this.snapshotId;\n+    hash = 31 * hash + (this.parentId == null ? 0 : this.parentId.hashCode());\n+    hash = 31 * hash + (int) sequenceNumber;\n+    hash = 31 * hash + (int) timestampMillis;\n+    return hash;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NDkwNg==", "bodyText": "Sure!", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550764906", "createdAt": "2021-01-01T12:40:28Z", "author": {"login": "Fokko"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&\n+          this.parentId.equals(other.parentId()) &&\n+          this.sequenceNumber == other.sequenceNumber() &&\n+          this.timestampMillis == other.timestampMillis();\n+\n+    }\n+    return false;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 7;\n+    hash = 31 * hash + (int) this.snapshotId;\n+    hash = 31 * hash + (this.parentId == null ? 0 : this.parentId.hashCode());\n+    hash = 31 * hash + (int) sequenceNumber;\n+    hash = 31 * hash + (int) timestampMillis;\n+    return hash;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDYxMA=="}, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NDUyNTY2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDoxNjozMlrOINLIoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxMjo0MTozN1rOINQBtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDgzMg==", "bodyText": "Style nits: we like to separate control flow blocks with a blank line, and avoid a blank line before the end of a block or method.", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550684832", "createdAt": "2020-12-31T20:16:32Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&\n+          this.parentId.equals(other.parentId()) &&\n+          this.sequenceNumber == other.sequenceNumber() &&\n+          this.timestampMillis == other.timestampMillis();\n+\n+    }\n+    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2NDk4Mw==", "bodyText": "Thanks for letting me know, I've updated the style.", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550764983", "createdAt": "2021-01-01T12:41:37Z", "author": {"login": "Fokko"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&\n+          this.parentId.equals(other.parentId()) &&\n+          this.sequenceNumber == other.sequenceNumber() &&\n+          this.timestampMillis == other.timestampMillis();\n+\n+    }\n+    return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDgzMg=="}, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NDUyNjY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQyMDoxNzoyMVrOINLJFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQyMTo0Mzo0NVrOINSyrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDk1MA==", "bodyText": "Shouldn't this also include the the table  that was loaded? Or is it enough that id and parent id are almost certainly unique?", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550684950", "createdAt": "2020-12-31T20:17:21Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3MTI5NQ==", "bodyText": "I had the same thought. For the Beam use-case, this is sufficient. If you want to split out a single stream into multiple tables, then you would do a key-by on the destination table. The comparisons will be made within the table, therefore the sequenceNumber will make this unique. I'm happy to also add the table that was loaded, but this isn't in the class right now.", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550771295", "createdAt": "2021-01-01T14:00:49Z", "author": {"login": "Fokko"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDk1MA=="}, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDgxMDI4Nw==", "bodyText": "I think it's okay for now, but it is an open question what makes two snapshots equal. Being careful here and including more fields as you do is pretty reasonable.", "url": "https://github.com/apache/iceberg/pull/2011#discussion_r550810287", "createdAt": "2021-01-01T21:43:45Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseSnapshot.java", "diffHunk": "@@ -211,6 +211,32 @@ private void cacheChanges() {\n     this.cachedDeletes = deletes.build();\n   }\n \n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o instanceof BaseSnapshot) {\n+      BaseSnapshot other = (BaseSnapshot) o;\n+      return this.snapshotId == other.snapshotId() &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NDk1MA=="}, "originalCommit": {"oid": "3ef5bc07eaf7c18e0a53f17d9971f38c7c159e1c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3121, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}