{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNjcxMzEy", "number": 1490, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoyODoxOFrOEmgNfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjoxNzowNlrOEnPQPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODA5MDg3OnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoyODoxOFrOHWkKtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTo0MDo1MFrOHasnGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyMzI4NQ==", "bodyText": "In reality this is Catalog specific. Works with HadoopTables / HadoopCatalog.\nI am not entirely sure, but I think this step could be omitted with HiveCatalog. @marton-bod?", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r493423285", "createdAt": "2020-09-23T10:28:18Z", "author": {"login": "pvary"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTQzMQ==", "bodyText": "I agree, it would be great to have a section for Hadoop path-based tables and a section for Hive catalog tables.\nMaybe we should have a section for reading existing Iceberg tables that has two sub-sections: Hadoop tables and Hive tables.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494641431", "createdAt": "2020-09-24T22:17:48Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyMzI4NQ=="}, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkyMDQ2NQ==", "bodyText": "Yup, makes sense, I've only covered the HadoopTables path here. I'll look into how to add the others.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494920465", "createdAt": "2020-09-25T11:18:59Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyMzI4NQ=="}, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1NTkyOA==", "bodyText": "OK, I've clarified that this document only covers the HadoopTables path. As discussed in the community sync today we agreed it would be better to have some documentation, even if we just cover this path for now, and we'll add in documentation for the Hive/Hadoop Catalog paths later.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r497755928", "createdAt": "2020-09-30T19:40:50Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQyMzI4NQ=="}, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODI1OTEyOnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1OTo1NVrOHWl6Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTowMjowM1rOHWmBAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ1MTc5OQ==", "bodyText": "Nit: Consider There is a plan to add this in the future. Soon to me implies that it's being actively worked on and it sounds more correct imo to leave it as \"in the future\" over \"soon\".\nAgain though, just a nit.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r493451799", "createdAt": "2020-09-23T10:59:55Z", "author": {"login": "kbendick"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this soon.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ1MzU2OQ==", "bodyText": "Agreed, I'll update that now. No nit is too small to pick! ;)", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r493453569", "createdAt": "2020-09-23T11:02:03Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this soon.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ1MTc5OQ=="}, "originalCommit": {"oid": "9a418b47ce88221b0b7956f5fbae01c706c067d9"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDAzMjA5OnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNjo0MzozN1rOHW3ZtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMToxODowM1rOHX_hMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczODQyMA==", "bodyText": "Should we update the Hive metastore integration to automatically set up the correct StorageHandler so HMS tables are automatically readable? That seems reasonable for 0.10.0.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r493738420", "createdAt": "2020-09-23T16:43:37Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMyNDkyMA==", "bodyText": "Created a pull request: #1505", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494324920", "createdAt": "2020-09-24T13:39:54Z", "author": {"login": "pvary"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczODQyMA=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkxOTk4NA==", "bodyText": "I'll wait to see where the above goes as the results of this will probably need documenting here too - how to set up the hive-site.xml config params etc.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494919984", "createdAt": "2020-09-25T11:18:03Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzczODQyMA=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTc5NDUxOnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjoxNTozM1rOHXud7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQwODo0MjoyN1rOHX6jzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MDYyMQ==", "bodyText": "Does this need to be available to the metastore or just the client?", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494640621", "createdAt": "2020-09-24T22:15:33Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDgzODczMg==", "bodyText": "The client.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494838732", "createdAt": "2020-09-25T08:42:27Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MDYyMQ=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTc5ODM4OnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMjoxNzowNlrOHXugGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTo0MToyN1rOHasoXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTE3OA==", "bodyText": "Spark and Flink docs use tables at the top of docs to signal what is supported or not and to give status updates. Would it make sense to use one here as well? Then we don't have to find the sections that need to be removed.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494641178", "createdAt": "2020-09-24T22:17:06Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this in the future.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDkyMjU1Ng==", "bodyText": "You mean something like this with the Spark versions? Could do, the alternative would be just remove this  section and the one above and below from here entirely and only add them back in when they've been implemented which might actually be simpler. I'm easy either way.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r494922556", "createdAt": "2020-09-25T11:23:31Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this in the future.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTE3OA=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE3NzUzMQ==", "bodyText": "Yeah, that's the table I was thinking of. It's easier to look at a table than to find a section of documentation that says something isn't supported. I'm also fine with dropping the sections. We can always add a table later.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r495177531", "createdAt": "2020-09-25T19:01:43Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this in the future.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTE3OA=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc1NjI1Mg==", "bodyText": "I've dropped all those sections for now, will add them back in when the PRs for those features are merged into master.", "url": "https://github.com/apache/iceberg/pull/1490#discussion_r497756252", "createdAt": "2020-09-30T19:41:27Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -0,0 +1,62 @@\n+<!--\n+ - Licensed to the Apache Software Foundation (ASF) under one or more\n+ - contributor license agreements.  See the NOTICE file distributed with\n+ - this work for additional information regarding copyright ownership.\n+ - The ASF licenses this file to You under the Apache License, Version 2.0\n+ - (the \"License\"); you may not use this file except in compliance with\n+ - the License.  You may obtain a copy of the License at\n+ -\n+ -   http://www.apache.org/licenses/LICENSE-2.0\n+ -\n+ - Unless required by applicable law or agreed to in writing, software\n+ - distributed under the License is distributed on an \"AS IS\" BASIS,\n+ - WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ - See the License for the specific language governing permissions and\n+ - limitations under the License.\n+ -->\n+\n+# Hive\n+\n+## Hive read support\n+Iceberg supports the reading of Iceberg tables from [Hive](https://hive.apache.org) by using a [StorageHandler](https://cwiki.apache.org/confluence/display/Hive/StorageHandlers). \n+\n+### Table creation\n+This section explains the various steps needed in order to overlay a Hive table \"on top of\" an existing Iceberg table.\n+\n+#### Create an Iceberg table\n+The first step is to create an Iceberg table using the Spark/Java/Python API. For the purposes of this documentation we will assume that the table is called `table_a` and that the base location of the table is `s3://some_bucket/some_path/table_a`.\n+\n+#### Add the Iceberg Hive Runtime jar file to the Hive classpath\n+The `HiveIcebergStorageHandler` and supporting classes need to be made available on Hive's classpath. For example, if using Hive 2.x and the Hive shell, this can be achieved by issuing a statement like so:\n+```sql\n+add jar /path/to/iceberg-hive-runtime.jar;\n+```\n+There are many others ways to achieve this including adding the jar file to Hive's auxillary classpath (so it is available by default) - please refer to Hive's documentation for more information.\n+\n+#### Create a Hive table\n+Now overlay a Hive table on top of this Iceberg table by issuing Hive DDL like so:\n+```sql\n+CREATE EXTERNAL TABLE table_a \n+STORED BY 'org.apache.iceberg.mr.hive.HiveIcebergStorageHandler' \n+LOCATION 's3://some_bucket/some_path/table_a';\n+```\n+\n+#### Query the Iceberg table via Hive\n+You should now be able to issue Hive SQL `SELECT` queries using the above table and see the results returned from the underlying Iceberg table. Both the Map Reduce and Tez query execution engines are supported.\n+```sql\n+SELECT * from table_a;\n+```\n+\n+### Features\n+\n+#### Predicate pushdown\n+Pushdown of the Hive SQL `WHERE` clause has been implemented so that these filters are used at the Iceberg TableScan level as well as by the Parquet and ORC Readers.\n+\n+#### Column selection\n+The projection of columns from the HiveSQL `SELECT` clause down to the Iceberg readers to reduce the number of columns read is currently being worked on.\n+\n+### Time travel and system tables\n+Support for accesing Iceberg's time travel feature and other system tables isn't currently supported but there is a plan to add this in the future.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDY0MTE3OA=="}, "originalCommit": {"oid": "431c58a72843d51bd6636c9ef30c3fc21040117d"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3510, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}