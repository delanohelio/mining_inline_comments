{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTAwNzk3", "number": 1979, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1MDoyOVrOFJm6cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMTo1NTo0MlrOFMXDUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjE5MDU5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1MDoyOVrOIMA3Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1MDoyOVrOIMA3Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2NzkwNw==", "bodyText": "This should throw either RuntimeIOException or UncheckedIOException. If the status can't be loaded, returning false is not correct.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r549467907", "createdAt": "2020-12-28T19:50:29Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;\n+    }\n+  }\n+\n+  private boolean isDirectory(Path path) {\n+    try {\n+      return fs.getFileStatus(path).isDirectory();\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjE5MTY0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo1MToxM1rOIMA3pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMjowNDo1OVrOIW7MXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA==", "bodyText": "Same here. Returning false is not correct.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r549468068", "createdAt": "2020-12-28T19:51:13Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTczNDE4Mg==", "bodyText": "We use the iceberg HadoopCatalog over Azure ABFS, Users use spark to list the tables in the catalog. However not every user has access to all tables on disk (we use file system access control list). When a user cannot access a folder the listStatus function will throw a subclass of IOException.\nIn my ticket I suggested using a flag to configure the HadoopCatalog to throw errors when unable to list these directories or return false if it is expected that some users will not be able to list all folders/tables.\n#1941\nThe listStatus throws an FileNotFoundException when the path provided does not exists. I will handle that as a \"normal\" condition, any other IOException I will either catch or not based on a configuration flag.  This should handle scenarios where not all user's can access all tables/namespaces\nWhat do you think about that proposal?", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r549734182", "createdAt": "2020-12-29T14:55:39Z", "author": {"login": "cccs-jc"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5ODU3NQ==", "bodyText": "I think it makes sense to catch FileNotFoundException and return false. What is the exception class that you get when a user can't list path? I would rather use that instead of suppressing any IOException if there is a flag set.\nIt is also unclear how that suppression is set.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r549798575", "createdAt": "2020-12-29T18:07:09Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDIwNDQ4MQ==", "bodyText": "I've added support for a flag. However I have not yet retrieved the value from the configuration properties.\nThe exception thrown is this one:\nhttps://hadoop.apache.org/docs/r3.2.0/api/org/apache/hadoop/fs/azurebfs/contracts/exceptions/AbfsRestOperationException.html\nIOException\nAzureBlobFileSystemException\nAbfsRestOperationException\nUnfortunately the exception thrown is an ABFS specific class.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r550204481", "createdAt": "2020-12-30T14:00:32Z", "author": {"login": "cccs-jc"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDY4NTI4NA==", "bodyText": "Should the boolean be configurable? How are you setting it?", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r550685284", "createdAt": "2020-12-31T20:19:49Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA2NTIxMQ==", "bodyText": "Hey Ryan, sorry for the late reply. Ya I'm thinking it could support a flag passed in as a configuration via the org.apache.hadoop.conf.Configuration\nI'm just not sure how to pass values into that configuration object. For example there is already a FILE_IO_IMPL supported. How would I add an additional configuration like FILE_IO_IMPL?", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r551065211", "createdAt": "2021-01-03T22:56:55Z", "author": {"login": "cccs-jc"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MzU5MQ==", "bodyText": "Getting the config from catalog properties looks good, but I'd move the property constant as I noted above.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553053591", "createdAt": "2021-01-07T01:11:47Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDkwOTQwNg==", "bodyText": "this is really brittle design. It will only work for one specific store and contains the assumption that the store always returns the string \"AuthorizationPermissionMismatch\" on an error. If the abfs store ever changed that string everything will break.\n\nThat abfs exception also includes a status code, 403, which is what should really be used as the signal.\nOther stores return AccessDeniedException. Has anyone considered filing a hadoop bug asking for translation of rest exceptions with 403s into those? I am reasonably confident nobody is going reject PRs there.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r560909406", "createdAt": "2021-01-20T12:04:59Z", "author": {"login": "steveloughran"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +139,25 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (IOException e) {\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2ODA2OA=="}, "originalCommit": {"oid": "4c672213740dca9b70a07e80249764aaf5654ec4"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDM3ODkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjozMjoxOVrOIN4Xdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjozMjoxOVrOIN4Xdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyNTkxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean suppressACLExcpetion = false;\n          \n          \n            \n              private boolean suppressACLException = false;", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r551425911", "createdAt": "2021-01-04T16:32:19Z", "author": {"login": "massdosage"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -80,6 +82,7 @@\n   private final String warehouseLocation;\n   private final FileSystem fs;\n   private final FileIO fileIO;\n+  private boolean suppressACLExcpetion = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2219cd9edd845d7490ce294e7f53e10c6104f1ef"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDM4OTU4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjozNTowM1rOIN4d0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzo1NToyMVrOIN7OkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyNzUzOQ==", "bodyText": "These exceptions could be thrown be errors that don't have anything to do with ACL so can we try come up with a more generic name for this flag? suppressIOException maybe? I guess it depends on where they will be configured and how.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r551427539", "createdAt": "2021-01-04T16:35:03Z", "author": {"login": "massdosage"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +142,37 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    } catch (IOException e) {\n+      if (suppressACLExcpetion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2219cd9edd845d7490ce294e7f53e10c6104f1ef"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ3Mjc4NQ==", "bodyText": "fair enough.\nI'm going to add this configuration like it is done for the FILE_IO_IMPL for example.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r551472785", "createdAt": "2021-01-04T17:55:21Z", "author": {"login": "cccs-jc"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -139,6 +142,37 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    } catch (IOException e) {\n+      if (suppressACLExcpetion) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyNzUzOQ=="}, "originalCommit": {"oid": "2219cd9edd845d7490ce294e7f53e10c6104f1ef"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDgyMjk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/CatalogProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNjoxM1rOIPbn2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNjoxM1rOIPbn2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjEyMQ==", "bodyText": "Since this is specific to Hadoop, let's move it into HadoopCatalog. I don't think the other catalogs would need this because they do not list using FS operations. A private constant in HadoopCatalog should be fine and we can always expose it later if we need to.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553052121", "createdAt": "2021-01-07T01:06:13Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/CatalogProperties.java", "diffHunk": "@@ -34,6 +34,8 @@ private CatalogProperties() {\n   public static final String HIVE_CLIENT_POOL_SIZE = \"clients\";\n   public static final int HIVE_CLIENT_POOL_SIZE_DEFAULT = 2;\n \n+  public static final String HADOOP_SUPPRESS_IOEXCEPTION = \"suppress-io-exception\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDgyNDY3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNjo1N1rOIPboww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNjo1N1rOIPboww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjM1NQ==", "bodyText": "Can you move this to after fileIO is set? The line above and that line are related so we shouldn't separate them.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553052355", "createdAt": "2021-01-07T01:06:57Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -129,6 +136,8 @@ public void initialize(String name, Map<String, String> properties) {\n     this.fs = Util.getFs(new Path(warehouseLocation), conf);\n \n     String fileIOImpl = properties.get(CatalogProperties.FILE_IO_IMPL);\n+    this.suppressIOException = Boolean.parseBoolean(properties.get(CatalogProperties.HADOOP_SUPPRESS_IOEXCEPTION));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDgyNTkyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNzo0OFrOIPbpjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMTo1NTowNlrOIQC8mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjU1OA==", "bodyText": "I would really prefer if this were more specific and looked at the exception message as well to ensure the error is a permissions or ACL problem.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553052558", "createdAt": "2021-01-07T01:07:48Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -158,6 +167,44 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean shouldSuppressIOException(IOException ioException) {\n+    String name = ioException.getClass().getName();\n+    return suppressIOException && name.startsWith(\"org.apache.hadoop.fs.azurebfs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQ2OTcxNA==", "bodyText": "I have fixed the code review suggestions.\nI'm detecting the azure blob permission exception using the message (that's all I have available). In that message there is an AzureServiceErrorCode of value \"AuthorizationPermissionMismatch\" which I use to detect a permission issue.\nI agree this is much better error handling since it will let other errors be reported.\nI'm thinking the flag should thus be \"suppress permission errors\". What do you think?", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553469714", "createdAt": "2021-01-07T17:22:29Z", "author": {"login": "cccs-jc"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -158,6 +167,44 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean shouldSuppressIOException(IOException ioException) {\n+    String name = ioException.getClass().getName();\n+    return suppressIOException && name.startsWith(\"org.apache.hadoop.fs.azurebfs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjU1OA=="}, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY5NjQxMQ==", "bodyText": "That sounds good to me!", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553696411", "createdAt": "2021-01-08T01:55:06Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -158,6 +167,44 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean shouldSuppressIOException(IOException ioException) {\n+    String name = ioException.getClass().getName();\n+    return suppressIOException && name.startsWith(\"org.apache.hadoop.fs.azurebfs\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjU1OA=="}, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDgyNjQ1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowODowNVrOIPbp2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowODowNVrOIPbp2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjYzNA==", "bodyText": "Typo: Unalbe -> Unable", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553052634", "createdAt": "2021-01-07T01:08:05Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -158,6 +167,44 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean shouldSuppressIOException(IOException ioException) {\n+    String name = ioException.getClass().getName();\n+    return suppressIOException && name.startsWith(\"org.apache.hadoop.fs.azurebfs\");\n+  }\n+\n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    } catch (IOException e) {\n+      if (shouldSuppressIOException(e)) {\n+        LOG.warn(\"Unalbe to metadata directory {}: {}\", metadataPath, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDgyNjgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowODoxNlrOIPbqEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowODoxNlrOIPbqEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MjY4OQ==", "bodyText": "Same typo.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553052689", "createdAt": "2021-01-07T01:08:16Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopCatalog.java", "diffHunk": "@@ -158,6 +167,44 @@ public String name() {\n     return catalogName;\n   }\n \n+  private boolean shouldSuppressIOException(IOException ioException) {\n+    String name = ioException.getClass().getName();\n+    return suppressIOException && name.startsWith(\"org.apache.hadoop.fs.azurebfs\");\n+  }\n+\n+  private boolean isTableDir(Path path) {\n+    Path metadataPath = new Path(path, \"metadata\");\n+    // Only the path which contains metadata is the path for table, otherwise it could be\n+    // still a namespace.\n+    try {\n+      return fs.listStatus(metadataPath, TABLE_FILTER).length >= 1;\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    } catch (IOException e) {\n+      if (shouldSuppressIOException(e)) {\n+        LOG.warn(\"Unalbe to metadata directory {}: {}\", metadataPath, e);\n+        return false;\n+      } else {\n+        throw new UncheckedIOException(e);\n+      }\n+    }\n+  }\n+\n+  private boolean isDirectory(Path path) {\n+    try {\n+      return fs.getFileStatus(path).isDirectory();\n+    } catch (FileNotFoundException e) {\n+      return false;\n+    } catch (IOException e) {\n+      if (shouldSuppressIOException(e)) {\n+        LOG.warn(\"Unalbe to list directory {}: {}\", path, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6ee95a43ec2335d49264d12ea6e45f318ca2b55"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NTA0OTEyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/ConfigProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMTo1NTo0MlrOIQC9Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMTo1NTo0MlrOIQC9Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY5NjU5OQ==", "bodyText": "Nit: this file doesn't need to be touched. Could you remove this whitespace change? It may cause git conflicts.", "url": "https://github.com/apache/iceberg/pull/1979#discussion_r553696599", "createdAt": "2021-01-08T01:55:42Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/ConfigProperties.java", "diffHunk": "@@ -25,4 +25,5 @@ private ConfigProperties() {\n   }\n \n   public static final String ENGINE_HIVE_ENABLED = \"iceberg.engine.hive.enabled\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b03929ac607a523f3efac72d15bce6fbf2d980f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3085, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}