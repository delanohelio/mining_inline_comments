{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDcxNTkw", "number": 1094, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozNDoyMlrOECuRTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo1NjoxN1rOECv4dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjkwNzAzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozNDoyMlrOGfWz3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDoxMjozMlrOGfcYlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjc2NA==", "bodyText": "It is ugly but I don't see another way.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435532764", "createdAt": "2020-06-04T20:34:22Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -82,18 +83,21 @@ public Schema schema() {\n \n     private Scan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns,\n-        ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, ImmutableMap<String, String> options) {\n+      super(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzk2NQ==", "bodyText": "The list of parameters seems really large, it produces a bunch of changes for adding a new param and it's hard to track. Would it make sense to refactor into an object like TableScanOptions or TableScanContext and create appropriate builders?", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435543965", "createdAt": "2020-06-04T20:56:28Z", "author": {"login": "edgarRd"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -82,18 +83,21 @@ public Schema schema() {\n \n     private Scan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns,\n-        ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, ImmutableMap<String, String> options) {\n+      super(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjc2NA=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU5NDQ0Ng==", "bodyText": "I think it is worth exploring using a builder here as a follow-up PR. @edgarRd, would you be interested to try this out?", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435594446", "createdAt": "2020-06-04T22:49:47Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -82,18 +83,21 @@ public Schema schema() {\n \n     private Scan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns,\n-        ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, ImmutableMap<String, String> options) {\n+      super(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjc2NA=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwMzAzMQ==", "bodyText": "I think it's a good idea to do this, but keep in mind that we will still need to use the refinement pattern for both Scan objects and Options, so that existing instances are immutable. It would help reduce the size of changes when we add options to scans, though.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435603031", "createdAt": "2020-06-04T23:16:45Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -82,18 +83,21 @@ public Schema schema() {\n \n     private Scan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns,\n-        ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, ImmutableMap<String, String> options) {\n+      super(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjc2NA=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyNDA4NQ==", "bodyText": "Sure, I can take a stab at it.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435624085", "createdAt": "2020-06-05T00:12:32Z", "author": {"login": "edgarRd"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -82,18 +83,21 @@ public Schema schema() {\n \n     private Scan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns,\n-        ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, ImmutableMap<String, String> options) {\n+      super(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjc2NA=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjkxMDI4OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/apache/iceberg/TableTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozNToxNlrOGfW1sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozNToxNlrOGfW1sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMzIzMg==", "bodyText": "Had to change this because files are filtered out otherwise.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435533232", "createdAt": "2020-06-04T20:35:16Z", "author": {"login": "aokolnychyi"}, "path": "core/src/test/java/org/apache/iceberg/TableTestBase.java", "diffHunk": "@@ -56,25 +56,25 @@\n \n   static final DataFile FILE_A = DataFiles.builder(SPEC)\n       .withPath(\"/path/to/data-a.parquet\")\n-      .withFileSizeInBytes(0)\n+      .withFileSizeInBytes(10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzE2NzM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/AllDataFilesTable.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo1NDo0NFrOGfZWtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMzoxNDoxOVrOGfbDhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NDQ1NQ==", "bodyText": "What about not supporting this option for metadata tables? It doesn't seem necessary and if we can simplify this PR, that would be helpful.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435574455", "createdAt": "2020-06-04T21:54:44Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/AllDataFilesTable.java", "diffHunk": "@@ -85,19 +86,23 @@ public Schema schema() {\n \n     private AllDataFilesTableScan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns, Schema fileSchema,\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, Schema fileSchema,\n         ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+      super(\n+          ops, table, snapshotId, schema, rowFilter, ignoreResiduals,\n+          caseSensitive, colStats, selectedColumns, options);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU5MjQ5MQ==", "bodyText": "I don't have a strong opinion here. We have to check whether we can hit this filtering problem during our actions that rewrite metadata in the future. In metadata tables, we have either static tasks or we read Avro right now. So, we cannot really skip parts of a file like in Parquet, but it is still important to think this through. What if something changes and we start filtering out records on our side before passing records to query engines or write some metadata as Parquet? Static metadata tables have alwaysTrue as their data filter. Others, on the other hand, do have a valid data filter passed further that can cause issues.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435592491", "createdAt": "2020-06-04T22:44:18Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/AllDataFilesTable.java", "diffHunk": "@@ -85,19 +86,23 @@ public Schema schema() {\n \n     private AllDataFilesTableScan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns, Schema fileSchema,\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, Schema fileSchema,\n         ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+      super(\n+          ops, table, snapshotId, schema, rowFilter, ignoreResiduals,\n+          caseSensitive, colStats, selectedColumns, options);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NDQ1NQ=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYwMjMwOQ==", "bodyText": "I think it's fine if this is already done. You make a good point about possibly needing it later.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435602309", "createdAt": "2020-06-04T23:14:19Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/AllDataFilesTable.java", "diffHunk": "@@ -85,19 +86,23 @@ public Schema schema() {\n \n     private AllDataFilesTableScan(\n         TableOperations ops, Table table, Long snapshotId, Schema schema, Expression rowFilter,\n-        boolean caseSensitive, boolean colStats, Collection<String> selectedColumns, Schema fileSchema,\n+        boolean ignoreResiduals, boolean caseSensitive, boolean colStats,\n+        Collection<String> selectedColumns, Schema fileSchema,\n         ImmutableMap<String, String> options) {\n-      super(ops, table, snapshotId, schema, rowFilter, caseSensitive, colStats, selectedColumns, options);\n+      super(\n+          ops, table, snapshotId, schema, rowFilter, ignoreResiduals,\n+          caseSensitive, colStats, selectedColumns, options);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NDQ1NQ=="}, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzE3MTA4OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/apache/iceberg/TestDataTableScan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo1NjoxN1rOGfZZCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTo1NjoxN1rOGfZZCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NTA0OA==", "bodyText": "Test looks good.", "url": "https://github.com/apache/iceberg/pull/1094#discussion_r435575048", "createdAt": "2020-06-04T21:56:17Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestDataTableScan.java", "diffHunk": "@@ -69,4 +74,36 @@ public void testTableScanHonorsSelectWithoutCaseSensitivity() {\n         scan2.schema().asStruct());\n   }\n \n+  @Test\n+  public void testTableScanHonorsIgnoreResiduals() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94644570c99ed3561325e59dd4e72fb6b674076e"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3872, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}