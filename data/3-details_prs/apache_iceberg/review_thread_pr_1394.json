{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0Njc5MTk2", "number": 1394, "reviewThreads": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzowMDo1N1rOEdNhIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxNzoyNlrOEfC6lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDY1NjMzOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzowMDo1N1rOHIPQHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0NTozNFrOHIRF_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMDU0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);\n          \n          \n            \n                  LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478400542", "createdAt": "2020-08-27T13:00:57Z", "author": {"login": "massdosage"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMDcxNw==", "bodyText": "Fixed. Thanks!", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478430717", "createdAt": "2020-08-27T13:45:34Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table form: [{}], to: [{}]\", from, to);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMDU0Mg=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDY2MjY4OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzowMjozMVrOHIPUJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToxNDo1MlrOHJRuWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ==", "bodyText": "Is the additional \\ here intentional? If so, what behaviour changes?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478401575", "createdAt": "2020-08-27T13:02:31Z", "author": {"login": "massdosage"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwNTMzNA==", "bodyText": "Collapsing the multiline log to a single line - was not brave enough to remove the \\n-s altogether.\nThis should create logs like:\nUnclosed input stream created by:\\n {Stacktrace.line1\\n  Stractrace.line2\\n  Stractrace.line3}", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478405334", "createdAt": "2020-08-27T13:08:22Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODIxMA==", "bodyText": "This makes logs harder to read. What is the intended purpose of this change?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478758210", "createdAt": "2020-08-27T23:58:09Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5MTU0MA==", "bodyText": "When I have to read Hive logs where there are plenty of concurrent queries running parallel, extra log lines will appear inside if we have multiline logs which will make them hard to read (even harder than the one proposed above).\nAlso only the first line of the log will get the timestamp and other log header information, which will make it hard to use any log analyzer tool to check them.\nThese are the main reasons in Hive we usually try to avoid multiline logs, and accept the drawback of the \"hardness\" of reading them.\nI am open to suggestions, even reverting back to this change if you strongly feel that it should remain as it is.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479191540", "createdAt": "2020-08-28T11:53:34Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMyODU5NQ==", "bodyText": "Reverted in the meantime to proceed with the patch", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479328595", "createdAt": "2020-08-28T14:10:17Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNDQ1NQ==", "bodyText": "@pvary, I'm not sure why, but I've never seen mixed log lines in our environment. So I don't think it is a good idea to solve the problem for one environment by making logs harder to read everywhere.\nWhat about using a custom appender or SLF4J binding in your environment that converts newlines to \\\\n so that you can configure it locally? I think that is a fairly easy solution that doesn't require changing logs everywhere.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479414455", "createdAt": "2020-08-28T16:34:40Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ4OTYyNg==", "bodyText": "Ok. Keeping the reverted stuff", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479489626", "createdAt": "2020-08-28T19:14:52Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQwMTU3NQ=="}, "originalCommit": {"oid": "94472c657080b13f934bf227bbec0110efcd0af0"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkxNDE2OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1NDoxN1rOHIlBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMTo1ODoyMVrOHI_29A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzE3Mw==", "bodyText": "What is the purpose of this debug message? I'm not sure how it would help.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757173", "createdAt": "2020-08-27T23:54:17Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +89,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace [{}] resulted in the following tables: [{}]\", namespace, tableIdentifiers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTE5NjkxNg==", "bodyText": "In Hive we often find that it could be important to know what is the exact information we got from downstream systems, so we can decide if we have to check downstream code to find the problem, or we have to check if we had a bug in Hive code.\nFor the specific situation (made up example), it could be that HMS returned wrong list of tables because the namespace contained '%' character and HMS used as a wildcard instead of returning exact matches. This debug log could help find the root cause of the issue.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479196916", "createdAt": "2020-08-28T11:58:21Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +89,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace [{}] resulted in the following tables: [{}]\", namespace, tableIdentifiers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzE3Mw=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkxNjQ3OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1NTozMVrOHIlCig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyMDo0OFrOHLE7Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA==", "bodyText": "How about \"Dropped table: {}\" instead of using a passive form? We also tend to use : instead of brackets in messages.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757514", "createdAt": "2020-08-27T23:55:31Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMTY4Mw==", "bodyText": "Done, I will also remove every '[]' - I tend to use them because once spent 2 days trying to figure out why my code is not able to find table 'sneakytable', where the log cleanly shows that 'sneakytable ' is in the listing (notice the missing ' ', which is hardly noticeable in the logs if the beginning/end of the variable is not marked clearly, and it is the end of the line :))", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479201683", "createdAt": "2020-08-28T12:02:35Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDk3NzQyOA==", "bodyText": "I too have endured this pain of whitespace at the start/end of a string like this causing all kinds of problems and being really hard to spot as the cause!", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480977428", "createdAt": "2020-09-01T08:50:51Z", "author": {"login": "massdosage"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NzAzNA==", "bodyText": "For concerns like this, I prefer to have a quote method that handles special characters. That way you get a readable error message when everything is normal, but the space problem is highlighted when it needs to be. So ident.quote() would return db.table normally and db.\"table \" if there is a trailing space.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481377034", "createdAt": "2020-09-01T19:20:48Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzUxNA=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkxNzcxOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1NjowOVrOHIlDNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowMjo1NVrOHJALFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzY4Nw==", "bodyText": "How about \"Skipping drop, table does not exist: {}\"?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757687", "createdAt": "2020-08-27T23:56:09Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Unable to drop missing table: [{}]\", identifier, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMjA2OQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479202069", "createdAt": "2020-08-28T12:02:55Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +141,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Table is dropped [{}]\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Unable to drop missing table: [{}]\", identifier, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1NzY4Nw=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkxODMxOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1NjoyNVrOHIlDjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjowMzoyNVrOHJANMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg==", "bodyText": "Can you remove the brackers?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757772", "createdAt": "2020-08-27T23:56:25Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzg0NQ==", "bodyText": "Here and in other messages", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478757845", "createdAt": "2020-08-27T23:56:39Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIwMjYwOQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479202609", "createdAt": "2020-08-28T12:03:25Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +182,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: [{}], to: [{}]\", from, to);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1Nzc3Mg=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkyMjk0OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzo1OTowOFrOHIlGPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMjoxNDowMVrOHJA8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODQ2Mw==", "bodyText": "In configuration, we use uri instead of location. Can you use that here?\nAlso, other toString methods use the helpers in MoreObjects. To have a common format, could you use that instead?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478758463", "createdAt": "2020-08-27T23:59:08Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(\n           Arrays.copyOfRange(createStack, 1, createStack.length));\n-      LOG.warn(\"Unclosed input stream created by:\\n\\t{}\", trace);\n+      LOG.warn(\"Unclosed input stream created by:\\\\n\\t{}\", trace);\n     }\n   }\n+\n+  @Override\n+  public String toString() {\n+    return \"HiveCatalog [name=\" + name + \", location=\" + this.conf.get(\"hive.metastore.uris\") + \"]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTIxNDc3Mg==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479214772", "createdAt": "2020-08-28T12:14:01Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -465,9 +495,14 @@ protected void finalize() throws Throwable {\n     super.finalize();\n     if (!closed) {\n       close(); // releasing resources is more important than printing the warning\n-      String trace = Joiner.on(\"\\n\\t\").join(\n+      String trace = Joiner.on(\"\\\\n\\t\").join(\n           Arrays.copyOfRange(createStack, 1, createStack.length));\n-      LOG.warn(\"Unclosed input stream created by:\\n\\t{}\", trace);\n+      LOG.warn(\"Unclosed input stream created by:\\\\n\\t{}\", trace);\n     }\n   }\n+\n+  @Override\n+  public String toString() {\n+    return \"HiveCatalog [name=\" + name + \", location=\" + this.conf.get(\"hive.metastore.uris\") + \"]\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc1ODQ2Mw=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkzNDA3OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDowNTo0MVrOHIlM7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzowNTo1MVrOHJEPJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDE3Mg==", "bodyText": "I think these changes are too verbose for INFO, although I do think it would be good to have a log message for the commit.\nCould you add an INFO log in BaseMetastoreTableOperations#commit instead of these? Something like this:\nLOG.info(\"Successfully committed to table {} in {} ms: {}\", table.name(), end - start, newMetadataLocation);\nThat way, logging is not too verbose, consistent across implementations, and adds useful info: the time it took to commit.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760172", "createdAt": "2020-08-28T00:05:41Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -143,9 +144,11 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n       // TODO add lock heart beating for cases where default lock timeout is too low.\n       Table tbl;\n       if (base != null) {\n+        LOG.info(\"Committing existing table [{}]\", fullName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI2ODY0Nw==", "bodyText": "This was a bit more involved. Please check the resulting method changes:\n\nBaseMetastoreTableOperations did not know about the tableName - added fullName\nBaseMetastoreTableOperations#commit did not know about the newMetadataLocation - added newMetadataLocation as a return value for doCommit\nAdded Stopwatch to the used guava classes", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479268647", "createdAt": "2020-08-28T13:05:51Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -143,9 +144,11 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n       // TODO add lock heart beating for cases where default lock timeout is too low.\n       Table tbl;\n       if (base != null) {\n+        LOG.info(\"Committing existing table [{}]\", fullName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDE3Mg=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkzNTI1OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDowNjoyM1rOHIlNqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzowODowNFrOHJEWfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDM2Mg==", "bodyText": "There is already a log in BaseMetastoreTableOperations for this. It has the location, but not the table name. Maybe just add table name to that one.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760362", "createdAt": "2020-08-28T00:06:23Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -130,6 +130,7 @@ protected void doRefresh() {\n     }\n \n     refreshFromMetadataLocation(metadataLocation);\n+    LOG.debug(\"Refreshed [{}]\", fullName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3MDUyNw==", "bodyText": "removed", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479270527", "createdAt": "2020-08-28T13:08:04Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -130,6 +130,7 @@ protected void doRefresh() {\n     }\n \n     refreshFromMetadataLocation(metadataLocation);\n+    LOG.debug(\"Refreshed [{}]\", fullName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDM2Mg=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjkzOTIwOnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDowODo1MVrOHIlQHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzoyNTo1OFrOHJFXaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDk5MQ==", "bodyText": "I think this should be done in the catalog or HadoopTables, not in Catalogs. Otherwise, we don't get the log message consistently when table loads go directly through the catalog (as in Spark 3) or through a different class like IcebergSource (Spark 2). And if we were to later add a message to the catalog, then this would be a duplicate.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478760991", "createdAt": "2020-08-28T00:08:51Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -65,13 +68,17 @@ public static Table loadTable(Configuration conf, Properties props) {\n   private static Table loadTable(Configuration conf, String tableIdentifier, String tableLocation) {\n     Optional<Catalog> catalog = loadCatalog(conf);\n \n+    Table table;\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n-      return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+      table = catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      table = new HadoopTables(conf).load(tableLocation);\n     }\n \n-    Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n-    return new HadoopTables(conf).load(tableLocation);\n+    LOG.info(\"Table loaded by catalog: [{}]\", table);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4NzE0NA==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479287144", "createdAt": "2020-08-28T13:25:58Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -65,13 +68,17 @@ public static Table loadTable(Configuration conf, Properties props) {\n   private static Table loadTable(Configuration conf, String tableIdentifier, String tableLocation) {\n     Optional<Catalog> catalog = loadCatalog(conf);\n \n+    Table table;\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n-      return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+      table = catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      table = new HadoopTables(conf).load(tableLocation);\n     }\n \n-    Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n-    return new HadoopTables(conf).load(tableLocation);\n+    LOG.info(\"Table loaded by catalog: [{}]\", table);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MDk5MQ=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjk0MjgzOnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDoxMTowMVrOHIlSOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzoyNjo0OVrOHJFaqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTUzMA==", "bodyText": "I think it would be better to give more specific information:\nLOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478761530", "createdAt": "2020-08-28T00:11:01Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +90,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Dynamic catalog is used: [{}]\", catalog);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI4Nzk3OQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479287979", "createdAt": "2020-08-28T13:26:49Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +90,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Dynamic catalog is used: [{}]\", catalog);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTUzMA=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5Mjk0NTc5OnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMDoxMjo0OFrOHIlT9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzozNTozOVrOHJF5uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTk3Mg==", "bodyText": "Aren't there already logs for this from the underlying file system implementation?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r478761972", "createdAt": "2020-08-28T00:12:48Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java", "diffHunk": "@@ -227,6 +227,7 @@ public void close() throws IOException {\n \n     private CloseableIterable<T> open(FileScanTask currentTask, Schema readSchema) {\n       DataFile file = currentTask.file();\n+      LOG.debug(\"Opening [{}] for read\", file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI5NTkyOQ==", "bodyText": "You are right. Removed.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479295929", "createdAt": "2020-08-28T13:35:39Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java", "diffHunk": "@@ -227,6 +227,7 @@ public void close() throws IOException {\n \n     private CloseableIterable<T> open(FileScanTask currentTask, Schema readSchema) {\n       DataFile file = currentTask.file();\n+      LOG.debug(\"Opening [{}] for read\", file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc2MTk3Mg=="}, "originalCommit": {"oid": "9db3dd5fba5b95ce95b2076f6ae291c25b364109"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAwNDIwOnYy", "diffSide": "RIGHT", "path": "bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjozNzo1M1rOHJNPFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToxNjo0MFrOHJRxgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNjA4NQ==", "bodyText": "We are trying to avoid adding more Guava classes. Could you use System.currentTimeMilis() instead?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479416085", "createdAt": "2020-08-28T16:37:53Z", "author": {"login": "rdblue"}, "path": "bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java", "diffHunk": "@@ -81,6 +82,7 @@\n     Multimaps.class.getName();\n     Ordering.class.getName();\n     Sets.class.getName();\n+    Stopwatch.class.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MDQzNQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479490435", "createdAt": "2020-08-28T19:16:40Z", "author": {"login": "pvary"}, "path": "bundled-guava/src/main/java/org/apache/iceberg/GuavaClasses.java", "diffHunk": "@@ -81,6 +82,7 @@\n     Multimaps.class.getName();\n     Ordering.class.getName();\n     Sets.class.getName();\n+    Stopwatch.class.getName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNjA4NQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAxNTg1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0MTozN1rOHJNWhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyMDoyN1rOHJR3oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNzk5MA==", "bodyText": "This base class is extended by external projects, so I think we should avoid breaking changes like this one.\nI propose adding a tableName method with a base implementation that returns null. Hive can override the implementation to provide the table name (as could external implementations) and the log message can include the table name if it is non-null. Does that sound reasonable?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479417990", "createdAt": "2020-08-28T16:41:37Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -46,12 +48,18 @@\n \n   private static final String METADATA_FOLDER_NAME = \"metadata\";\n \n+  private String fullName;\n   private TableMetadata currentMetadata = null;\n   private String currentMetadataLocation = null;\n   private boolean shouldRefresh = true;\n   private int version = -1;\n \n-  protected BaseMetastoreTableOperations() {\n+  protected BaseMetastoreTableOperations(String fullName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjAwMQ==", "bodyText": "Absolutely!\nDone", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492001", "createdAt": "2020-08-28T19:20:27Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -46,12 +48,18 @@\n \n   private static final String METADATA_FOLDER_NAME = \"metadata\";\n \n+  private String fullName;\n   private TableMetadata currentMetadata = null;\n   private String currentMetadataLocation = null;\n   private boolean shouldRefresh = true;\n   private int version = -1;\n \n-  protected BaseMetastoreTableOperations() {\n+  protected BaseMetastoreTableOperations(String fullName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNzk5MA=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAyNDI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0NDoyMVrOHJNb7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyMToyOVrOHJR5Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTM3NQ==", "bodyText": "I don't think we should change the signature of this method, since there are external implementations. This also highlights that there is not even a requirement to store metadata in a file (this could be implemented with a backing database). So we probably shouldn't log the metadata location from this class.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479419375", "createdAt": "2020-08-28T16:44:21Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",\n+        fullName,\n+        newMetadataLocation,\n+        stopwatch.elapsed(TimeUnit.MILLISECONDS));\n   }\n \n-  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n+  /**\n+   * Executes the commit in the Metastore\n+   * @param base The base table metadata\n+   * @param metadata The new table metadata\n+   * @return The new metadata location\n+   */\n+  protected String doCommit(TableMetadata base, TableMetadata metadata) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjQxMA==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492410", "createdAt": "2020-08-28T19:21:29Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",\n+        fullName,\n+        newMetadataLocation,\n+        stopwatch.elapsed(TimeUnit.MILLISECONDS));\n   }\n \n-  protected void doCommit(TableMetadata base, TableMetadata metadata) {\n+  /**\n+   * Executes the commit in the Metastore\n+   * @param base The base table metadata\n+   * @param metadata The new table metadata\n+   * @return The new metadata location\n+   */\n+  protected String doCommit(TableMetadata base, TableMetadata metadata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTM3NQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAyNTk5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0NDo1M1rOHJNc8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyMTo1MVrOHJR59g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTYzNA==", "bodyText": "I don't think we need so many colons. How about Successfully committed to table {} in {} ms?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479419634", "createdAt": "2020-08-28T16:44:53Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5MjU5OA==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479492598", "createdAt": "2020-08-28T19:21:51Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -101,12 +109,25 @@ public void commit(TableMetadata base, TableMetadata metadata) {\n       return;\n     }\n \n-    doCommit(base, metadata);\n+    Stopwatch stopwatch = Stopwatch.createStarted();\n+    String newMetadataLocation = doCommit(base, metadata);\n     deleteRemovedMetadataFiles(base, metadata);\n     requestRefresh();\n+    stopwatch.stop();\n+\n+    LOG.info(\"Successfully committed to table: {} in: {} ms: {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxOTYzNA=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAzMDYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0NjoxNFrOHJNftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNDozMDoyNlrOHJY1cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg==", "bodyText": "I think this is misleading. What we want to know is whether a cached version of the table was used or whether the catalog loaded the table. The catalog should log when it loads a table, so this just needs to log when there was a cache hit.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479420342", "createdAt": "2020-08-28T16:46:14Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +66,10 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    LOG.info(\"Table loaded by catalog: {}\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NDk3MQ==", "bodyText": "I was thinking around the same lines, but I did not find a way to differentiate between the cache hit, and the cache miss.\nShall we just remove the log, or you have some idea how to check for cache hit?\nRemoved the log for the time being.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479494971", "createdAt": "2020-08-28T19:27:32Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +66,10 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    LOG.info(\"Table loaded by catalog: {}\", result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwOTQwOA==", "bodyText": "Well, a cache hit could just be the absence of a log message. But you could also inject an atomic boolean in the load table call that is passed to the cache. If it gets called, it sets the boolean to true. Then the log only triggers if it was not called.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479509408", "createdAt": "2020-08-28T20:01:40Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +66,10 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    LOG.info(\"Table loaded by catalog: {}\", result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNjEyOQ==", "bodyText": "Ok, then cache hit will be marked by the absence of the log message.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479606129", "createdAt": "2020-08-29T04:30:26Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/CachingCatalog.java", "diffHunk": "@@ -63,7 +66,10 @@ private TableIdentifier canonicalizeIdentifier(TableIdentifier tableIdentifier)\n \n   @Override\n   public Table loadTable(TableIdentifier ident) {\n-    return tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    Table result = tableCache.get(canonicalizeIdentifier(ident), catalog::loadTable);\n+    LOG.info(\"Table loaded by catalog: {}\", result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDM0Mg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAzMzU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0NzowN1rOHJNhdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyODo1MlrOHJSFNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4OQ==", "bodyText": "HadoopTables is logging this message, so there is no need to add it here. Also, can we log the location instead of the table instance?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479420789", "createdAt": "2020-08-28T16:47:07Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java", "diffHunk": "@@ -71,20 +74,24 @@ public HadoopTables(Configuration conf) {\n    */\n   @Override\n   public Table load(String location) {\n+    Table result;\n     Pair<String, MetadataTableType> parsedMetadataType = parseMetadataType(location);\n \n     if (parsedMetadataType != null) {\n       // Load a metadata table\n-      return loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n+      result = loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n     } else {\n       // Load a normal table\n       TableOperations ops = newTableOps(location);\n       if (ops.current() != null) {\n-        return new BaseTable(ops, location);\n+        result = new BaseTable(ops, location);\n       } else {\n         throw new NoSuchTableException(\"Table does not exist at location: \" + location);\n       }\n     }\n+\n+    LOG.info(\"Table loaded by HadoopTables: {}\", result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTQ3Nw==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495477", "createdAt": "2020-08-28T19:28:52Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTables.java", "diffHunk": "@@ -71,20 +74,24 @@ public HadoopTables(Configuration conf) {\n    */\n   @Override\n   public Table load(String location) {\n+    Table result;\n     Pair<String, MetadataTableType> parsedMetadataType = parseMetadataType(location);\n \n     if (parsedMetadataType != null) {\n       // Load a metadata table\n-      return loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n+      result = loadMetadataTable(parsedMetadataType.first(), parsedMetadataType.second());\n     } else {\n       // Load a normal table\n       TableOperations ops = newTableOps(location);\n       if (ops.current() != null) {\n-        return new BaseTable(ops, location);\n+        result = new BaseTable(ops, location);\n       } else {\n         throw new NoSuchTableException(\"Table does not exist at location: \" + location);\n       }\n     }\n+\n+    LOG.info(\"Table loaded by HadoopTables: {}\", result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMDc4OQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzAzOTgwOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo0OTowM1rOHJNlGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyOToyNFrOHJSGOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMTcyMQ==", "bodyText": "Let's clean up the message a bit: \"Listing namespace {} returned tables: {}\"", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479421721", "createdAt": "2020-08-28T16:49:03Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +91,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace: {} resulted in the following tables: {}\", namespace, tableIdentifiers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTczOQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495739", "createdAt": "2020-08-28T19:29:24Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -89,10 +91,13 @@ public HiveCatalog(String name, String uri, int clientPoolSize, Configuration co\n \n     try {\n       List<String> tables = clients.run(client -> client.getAllTables(database));\n-      return tables.stream()\n+      List<TableIdentifier> tableIdentifiers = tables.stream()\n           .map(t -> TableIdentifier.of(namespace, t))\n           .collect(Collectors.toList());\n \n+      LOG.debug(\"Listing of namespace: {} resulted in the following tables: {}\", namespace, tableIdentifiers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMTcyMQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA0MzgxOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1MDoxMlrOHJNnaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOToyOTo1MFrOHJSG7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjMxMw==", "bodyText": "Should this be info?\nI doubt that this is much help if you have to turn debug on and re-run because whether the table exists is external and modified by this method.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479422313", "createdAt": "2020-08-28T16:50:12Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +143,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Dropped table: {}\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NTkxNw==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479495917", "createdAt": "2020-08-28T19:29:50Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -138,9 +143,11 @@ public boolean dropTable(TableIdentifier identifier, boolean purge) {\n         dropTableData(ops.io(), lastMetadata);\n       }\n \n+      LOG.info(\"Dropped table: {}\", identifier);\n       return true;\n \n     } catch (NoSuchTableException | NoSuchObjectException e) {\n+      LOG.debug(\"Skipping drop, table does not exist: {}\", identifier, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjMxMw=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA0NDQ5OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1MDoyN1rOHJNnzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozMDowNlrOHJSHaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjQxNQ==", "bodyText": "No need for colons after from and to.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479422415", "createdAt": "2020-08-28T16:50:27Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +184,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: {}, to: {}\", from, to);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5NjA0MQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479496041", "createdAt": "2020-08-28T19:30:06Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -177,6 +184,8 @@ public void renameTable(TableIdentifier from, TableIdentifier originalTo) {\n         return null;\n       });\n \n+      LOG.info(\"Renamed table from: {}, to: {}\", from, to);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMjQxNQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA1MTc3OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1MjozOVrOHJNsRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozNDoyMFrOHJSOLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzU1Ng==", "bodyText": "I'm really skeptical that this is a good idea. Properties can contain sensitive information that we don't want to leak into logs. If the operation succeeds, we can get the properties directly from the table. If it fails, we will get an exception and the properties that were attempted aren't very important (the user should also be able to tell us what they were).", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479423556", "createdAt": "2020-08-28T16:52:39Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -285,7 +300,15 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Set properties for: {} to: {} resulted: {}\",\n+          namespace,\n+          Joiner.on(\",\").withKeyValueSeparator(\"=\").join(properties),\n+          result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5Nzc3NA==", "bodyText": "Good point!\nRemoved the printing of the parameters.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479497774", "createdAt": "2020-08-28T19:34:20Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -285,7 +300,15 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Set properties for: {} to: {} resulted: {}\",\n+          namespace,\n+          Joiner.on(\",\").withKeyValueSeparator(\"=\").join(properties),\n+          result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzU1Ng=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA1Mjk3OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1MzowMVrOHJNs9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNDo1MjowNVrOHJY7og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg==", "bodyText": "Same here. I'd rather not add debug logs for properties.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479423732", "createdAt": "2020-08-28T16:53:01Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -296,7 +319,10 @@ public boolean removeProperties(Namespace namespace,  Set<String> properties) {\n     properties.forEach(key -> parameter.put(key, null));\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODQ0Mw==", "bodyText": "We do not log the actual values, just the properties we are removing.\nCould it also contain sensitive information?\nIf not I would keep the log message, so we can be able to trace things in case of trouble", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479498443", "createdAt": "2020-08-28T19:35:50Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -296,7 +319,10 @@ public boolean removeProperties(Namespace namespace,  Set<String> properties) {\n     properties.forEach(key -> parameter.put(key, null));\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwODk2OA==", "bodyText": "If not logging the properties, then what is the value of this log? If the query fails, it will throw an exception so the only time this will run is when the result is true. That doesn't seem useful to me, considering this is called from an operation that probably logs itself, like updateProperties.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479508968", "createdAt": "2020-08-28T20:00:37Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -296,7 +319,10 @@ public boolean removeProperties(Namespace namespace,  Set<String> properties) {\n     properties.forEach(key -> parameter.put(key, null));\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNzcxNA==", "bodyText": "Removed the alterHiveDataBase method return value, since it is a private function and as you correctly pointed out never returns false.\nTried to find the usages of the HiveCatalog.setProperties/removeProperties method, and followed the call stack a few steps, but did not find any logs around that. (I might missed something)", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479607714", "createdAt": "2020-08-29T04:52:05Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -296,7 +319,10 @@ public boolean removeProperties(Namespace namespace,  Set<String> properties) {\n     properties.forEach(key -> parameter.put(key, null));\n     Database database = convertToDatabase(namespace, parameter);\n \n-    return alterHiveDataBase(namespace, database);\n+    boolean result = alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Remove properties: {} from: {} resulted: {}\", properties, namespace, result);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyMzczMg=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA1NTM2OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1Mzo0NVrOHJNuZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozNjo1N1rOHJSSlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwMw==", "bodyText": "Same here. We should not be logging potentially sensitive properties.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479424103", "createdAt": "2020-08-28T16:53:45Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +355,13 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"For namespace: {} loaded metadata: {}\",\n+            namespace,\n+            Joiner.on(\",\").withKeyValueSeparator(\"=\").join(metadata));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5ODkwMg==", "bodyText": "Removed", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479498902", "createdAt": "2020-08-28T19:36:57Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +355,13 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"For namespace: {} loaded metadata: {}\",\n+            namespace,\n+            Joiner.on(\",\").withKeyValueSeparator(\"=\").join(metadata));\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDEwMw=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA1NzQyOnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NDoyNVrOHJNvow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTozODoxM1rOHJSUmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDQxOQ==", "bodyText": "Looks like this change is not needed. Could you roll it back?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479424419", "createdAt": "2020-08-28T16:54:25Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -68,10 +71,11 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n       return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      return new HadoopTables(conf).load(tableLocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ5OTQxNg==", "bodyText": "I missed this one. Sorry :(\nReverted", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479499416", "createdAt": "2020-08-28T19:38:13Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -68,10 +71,11 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n     if (catalog.isPresent()) {\n       Preconditions.checkArgument(tableIdentifier != null, \"Table identifier not set\");\n       return catalog.get().loadTable(TableIdentifier.parse(tableIdentifier));\n+    } else {\n+      Preconditions.checkArgument(tableLocation != null, \"Table location not set\");\n+      return new HadoopTables(conf).load(tableLocation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNDQxOQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzA2MjcxOnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjo1NTo1MVrOHJNytQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MTozOFrOHJSaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTIwNQ==", "bodyText": "How about logging a similar message in the HADOOP and HIVE cases instead of this?\nLOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n\nThat gives more information about the path the code took.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479425205", "createdAt": "2020-08-28T16:55:51Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +87,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          break;\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          break;\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n+\n+      LOG.info(\"Catalog is used: {}\", catalog);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMDgxMg==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479500812", "createdAt": "2020-08-28T19:41:38Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +87,33 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          break;\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          break;\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n+\n+      LOG.info(\"Catalog is used: {}\", catalog);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQyNTIwNQ=="}, "originalCommit": {"oid": "b1a48b8813c1072ad67061796b1511f698efe151"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5OTAyMzE3OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQyMjoxNjo1OFrOHJeSDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzozNTo1MVrOHKpRZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg==", "bodyText": "This log doesn't seem useful to me since it doesn't have any information other than the method reached this point. It should be clear from other places (e.g., the SQL statement that ran) what was called. And we know it is successful or else an error is logged.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479695372", "createdAt": "2020-08-29T22:16:58Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -300,17 +300,11 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    boolean result = alterHiveDataBase(namespace, database);\n+    alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Successfully set properties for {}\", namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89ebfe17a8a29f8878ff61214093731e22df43ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcyODE3Mw==", "bodyText": "First I removed the logs, but then thought better of it.\nAdded it back with the list of the name of the properties we decided to set.\nThis way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\nDo you think it is worthwhile to log this way?\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\nThanks again!\nPeter", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r479728173", "createdAt": "2020-08-30T06:23:26Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -300,17 +300,11 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    boolean result = alterHiveDataBase(namespace, database);\n+    alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Successfully set properties for {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}, "originalCommit": {"oid": "89ebfe17a8a29f8878ff61214093731e22df43ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ4MzcyMg==", "bodyText": "This way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\n\nI don't think I follow your logic here. All this says is that setProperties succeeded. But that's usually obvious from the job because the SQL that's running is ALTER TABLE ... SET TBLPROPERTIES or ALTER TABLE ... UNSET TBLPROPERTIES. So it seems to me that this is already clear from context.\n\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\n\nDon't worry about it! I had a similar thought because I'm asking for so many logs to be removed or changed. Sounds like we're both happy to come to an agreement and improve logging, even if that takes a lot of discussion. Thanks for your patience here.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480483722", "createdAt": "2020-09-01T00:08:34Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -300,17 +300,11 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    boolean result = alterHiveDataBase(namespace, database);\n+    alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Successfully set properties for {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}, "originalCommit": {"oid": "89ebfe17a8a29f8878ff61214093731e22df43ed"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkyNDAwNA==", "bodyText": "This way we will at least know how the SparkCatalog.alterNamespace/FlinkCatalog.alterNamespace classified the properties, and which one was removed which one was set instead.\n\nI don't think I follow your logic here. All this says is that setProperties succeeded. But that's usually obvious from the job because the SQL that's running is ALTER TABLE ... SET TBLPROPERTIES or ALTER TABLE ... UNSET TBLPROPERTIES. So it seems to me that this is already clear from context.\n\nI understand your concerns about logging where the only added info we have is that the code line is reached, and I agree that is rarely useful (I occasionally find them handy when debugging performance issues, but that is a rare case). This is why I have removed the logs in the first commit.\nAfter pushing the commit I checked again how the catalog calls are called.\nIn the fear of stating the obvious:\n\nSparkCatalog.alterNamespace/FlinkCatalog.alterNamespace gets an array of NamespaceChange and splits them to 2 lists updates/removals.\nUpdates ends in setProperties call, removals ends in a removeProperties call.\n\nThat is why I have added back and modified the setProperties logging, so it will log not only the call but also logs the properties.keySet() too. This way we could know which properties were removed, and which were updated in this call. I think this could be beneficial to have in debug level, unless this info is also available somewhere else in the logs.\n\n\nI kinda feel that I have dragged on too much on your patience, so one last request and I will remove both log lines from the code.\n\nDon't worry about it! I had a similar thought because I'm asking for so many logs to be removed or changed. Sounds like we're both happy to come to an agreement and improve logging, even if that takes a lot of discussion. Thanks for your patience here.\n\nGood to meet a likeminded person, and thanks for all the useful help here!", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r480924004", "createdAt": "2020-09-01T07:35:51Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -300,17 +300,11 @@ public boolean setProperties(Namespace namespace,  Map<String, String> propertie\n     parameter.putAll(properties);\n     Database database = convertToDatabase(namespace, parameter);\n \n-    boolean result = alterHiveDataBase(namespace, database);\n+    alterHiveDataBase(namespace, database);\n+    LOG.debug(\"Successfully set properties for {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5NTM3Mg=="}, "originalCommit": {"oid": "89ebfe17a8a29f8878ff61214093731e22df43ed"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTAwMzg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozMDoyMFrOHK8HnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozNjo1MVrOHLDVew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMjc5Nw==", "bodyText": "Could we rename this to tableName so it is more clear for implementations? It would also be good to add Javadoc.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481232797", "createdAt": "2020-09-01T15:30:20Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -54,6 +54,10 @@\n   protected BaseMetastoreTableOperations() {\n   }\n \n+  protected String fullName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTAzNQ==", "bodyText": "Renamed and added javadoc.\nCould you please check them?\nThanks, Peter", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351035", "createdAt": "2020-09-01T18:36:51Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/BaseMetastoreTableOperations.java", "diffHunk": "@@ -54,6 +54,10 @@\n   protected BaseMetastoreTableOperations() {\n   }\n \n+  protected String fullName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMjc5Nw=="}, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTAwODgyOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozMTozN1rOHK8K2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozNzowMVrOHLDV2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMzYyNA==", "bodyText": "Is this change needed? This is an instance variable so there should be no need to call the getter.", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481233624", "createdAt": "2020-09-01T15:31:37Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -111,7 +116,7 @@ protected void doRefresh() {\n     String metadataLocation = null;\n     try {\n       Table table = metaClients.run(client -> client.getTable(database, tableName));\n-      validateTableIsIceberg(table, fullName);\n+      validateTableIsIceberg(table, fullName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTEyOA==", "bodyText": "Reverted", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351128", "createdAt": "2020-09-01T18:37:01Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -111,7 +116,7 @@ protected void doRefresh() {\n     String metadataLocation = null;\n     try {\n       Table table = metaClients.run(client -> client.getTable(database, tableName));\n-      validateTableIsIceberg(table, fullName);\n+      validateTableIsIceberg(table, fullName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzMzYyNA=="}, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTAxMTU2OnYy", "diffSide": "RIGHT", "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTozMjoxNVrOHK8MkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxODozNzoxNFrOHLDWTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNDA2NA==", "bodyText": "How about Catalog is not configured instead?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481234064", "createdAt": "2020-09-01T15:32:15Z", "author": {"login": "rdblue"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +86,32 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          LOG.info(\"Loaded Hadoop catalog {}\", catalog);\n+          return Optional.of(catalog);\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          LOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n+          return Optional.of(catalog);\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n     }\n \n+    LOG.info(\"No catalog is used\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM1MTI0Ng==", "bodyText": "Changed the text", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481351246", "createdAt": "2020-09-01T18:37:14Z", "author": {"login": "pvary"}, "path": "mr/src/main/java/org/apache/iceberg/mr/Catalogs.java", "diffHunk": "@@ -83,28 +86,32 @@ private static Table loadTable(Configuration conf, String tableIdentifier, Strin\n               .impl(catalogLoaderClass)\n               .build()\n               .newInstance();\n-      return Optional.of(loader.load(conf));\n+      Catalog catalog = loader.load(conf);\n+      LOG.info(\"Loaded catalog {} using {}\", catalog, catalogLoaderClass);\n+      return Optional.of(catalog);\n     }\n \n     String catalogName = conf.get(InputFormatConfig.CATALOG);\n \n     if (catalogName != null) {\n+      Catalog catalog;\n       switch (catalogName.toLowerCase()) {\n         case HADOOP:\n           String warehouseLocation = conf.get(InputFormatConfig.HADOOP_CATALOG_WAREHOUSE_LOCATION);\n \n-          if (warehouseLocation != null) {\n-            return Optional.of(new HadoopCatalog(conf, warehouseLocation));\n-          }\n-\n-          return Optional.of(new HadoopCatalog(conf));\n+          catalog = (warehouseLocation != null) ? new HadoopCatalog(conf, warehouseLocation) : new HadoopCatalog(conf);\n+          LOG.info(\"Loaded Hadoop catalog {}\", catalog);\n+          return Optional.of(catalog);\n         case HIVE:\n-          return Optional.of(HiveCatalogs.loadCatalog(conf));\n+          catalog = HiveCatalogs.loadCatalog(conf);\n+          LOG.info(\"Loaded Hive Metastore catalog {}\", catalog);\n+          return Optional.of(catalog);\n         default:\n           throw new NoSuchNamespaceException(\"Catalog \" + catalogName + \" is not supported.\");\n       }\n     }\n \n+    LOG.info(\"No catalog is used\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIzNDA2NA=="}, "originalCommit": {"oid": "8b823421e765e929db0f1cd8859ee77d974d65c7"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTg5MDc5OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxNzoyNlrOHLE0QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToyNzo0MVrOHLFINA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw==", "bodyText": "Sorry, but I didn't catch this before. This is logging a property map that could contain sensitive items. Could you log just the keys instead?", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481375297", "createdAt": "2020-09-01T19:17:26Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +350,9 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01d4ed1eaea882b05c06c9482f89abecf4c86dda"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3OTc4Ng==", "bodyText": "Thanks for the quick turn-around!", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481379786", "createdAt": "2020-09-01T19:26:21Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +350,9 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}, "originalCommit": {"oid": "01d4ed1eaea882b05c06c9482f89abecf4c86dda"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MDAzMw==", "bodyText": "I did not log the metadata loaded, as I should.\nAdded the log of the loaded metadata keys, like this:\nLoaded metadata for namespace dbname_load found [owner, location, comment, group]", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481380033", "createdAt": "2020-09-01T19:26:55Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +350,9 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}, "originalCommit": {"oid": "01d4ed1eaea882b05c06c9482f89abecf4c86dda"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4MDQwNA==", "bodyText": "And feel free to ask changes if they are needed. Better now, than 1 year from now when some info is leaked!", "url": "https://github.com/apache/iceberg/pull/1394#discussion_r481380404", "createdAt": "2020-09-01T19:27:41Z", "author": {"login": "pvary"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveCatalog.java", "diffHunk": "@@ -329,7 +350,9 @@ private boolean alterHiveDataBase(Namespace namespace,  Database database) {\n \n     try {\n       Database database = clients.run(client -> client.getDatabase(namespace.level(0)));\n-      return convertToMetadata(database);\n+      Map<String, String> metadata = convertToMetadata(database);\n+      LOG.debug(\"Loaded metadata for namespace {}\", namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3NTI5Nw=="}, "originalCommit": {"oid": "01d4ed1eaea882b05c06c9482f89abecf4c86dda"}, "originalPosition": 138}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3699, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}