{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NjIwMDU1", "number": 953, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozOTozNFrOD1ZR5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozOTo1OVrOD1ZSkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzE1MzAwOnYy", "diffSide": "RIGHT", "path": "data/src/test/java/org/apache/iceberg/data/orc/TestGenericData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozOTozNFrOGK0M2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjoxNDo0NlrOGLIJwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDIwMQ==", "bodyText": "I think this should be a separate test case.", "url": "https://github.com/apache/iceberg/pull/953#discussion_r413994201", "createdAt": "2020-04-23T17:39:34Z", "author": {"login": "rdblue"}, "path": "data/src/test/java/org/apache/iceberg/data/orc/TestGenericData.java", "diffHunk": "@@ -71,6 +72,30 @@ protected void writeAndValidate(Schema schema) throws IOException {\n     for (int i = 0; i < expected.size(); i += 1) {\n       DataTestHelpers.assertEquals(schema.asStruct(), expected.get(i), rows.get(i));\n     }\n+\n+    // Also write and validate where all rows are the same (repeating)\n+    List<Record> expectedRepeating = Collections.nCopies(100, expected.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034135b3ad46a9969f279fac0d15efaed51a423c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyMTA4OA==", "bodyText": "Fixed", "url": "https://github.com/apache/iceberg/pull/953#discussion_r414321088", "createdAt": "2020-04-24T06:14:46Z", "author": {"login": "shardulm94"}, "path": "data/src/test/java/org/apache/iceberg/data/orc/TestGenericData.java", "diffHunk": "@@ -71,6 +72,30 @@ protected void writeAndValidate(Schema schema) throws IOException {\n     for (int i = 0; i < expected.size(); i += 1) {\n       DataTestHelpers.assertEquals(schema.asStruct(), expected.get(i), rows.get(i));\n     }\n+\n+    // Also write and validate where all rows are the same (repeating)\n+    List<Record> expectedRepeating = Collections.nCopies(100, expected.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDIwMQ=="}, "originalCommit": {"oid": "034135b3ad46a9969f279fac0d15efaed51a423c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzE1NDczOnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozOTo1OVrOGK0N5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjoxNDo1MFrOGLIJ4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDQ3MQ==", "bodyText": "Let's add new test cases instead of appending new validations to old ones.", "url": "https://github.com/apache/iceberg/pull/953#discussion_r413994471", "createdAt": "2020-04-23T17:39:59Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReader.java", "diffHunk": "@@ -60,5 +61,29 @@ protected void writeAndValidate(Schema schema) throws IOException {\n       }\n       Assert.assertFalse(\"Should not have extra rows\", actualRows.hasNext());\n     }\n+\n+    // Also write and validate where all rows are the same (repeating)\n+    final Iterable<InternalRow> expectedRepeating = Collections.nCopies(100, expected.iterator().next());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "034135b3ad46a9969f279fac0d15efaed51a423c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMyMTEyMQ==", "bodyText": "Fixed", "url": "https://github.com/apache/iceberg/pull/953#discussion_r414321121", "createdAt": "2020-04-24T06:14:50Z", "author": {"login": "shardulm94"}, "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestSparkOrcReader.java", "diffHunk": "@@ -60,5 +61,29 @@ protected void writeAndValidate(Schema schema) throws IOException {\n       }\n       Assert.assertFalse(\"Should not have extra rows\", actualRows.hasNext());\n     }\n+\n+    // Also write and validate where all rows are the same (repeating)\n+    final Iterable<InternalRow> expectedRepeating = Collections.nCopies(100, expected.iterator().next());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5NDQ3MQ=="}, "originalCommit": {"oid": "034135b3ad46a9969f279fac0d15efaed51a423c"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2954, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}