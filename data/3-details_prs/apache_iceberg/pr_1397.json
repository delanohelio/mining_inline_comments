{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0OTQwOTkx", "number": 1397, "title": "Actions: Speed up expire snapshots action", "bodyText": "This replaces use of the all_data_files metadata table in RemoveOrphanFilesAction and ExpireSnapshotsAction with a call to read data file paths from manifest files in parallel. This avoids reading all of the manifest lists in the Spark driver to plan the all_data_files scan.\nOn large tables, this runs much faster with adaptive execution and broadcast joins disabled. Both optimizations use size estimates that are incorrect because the number of data files is much larger than the number of manifests in a table, and Spark does not account for a single row (manifest file) producing thousands or millions of result rows (data files) in a stage.", "createdAt": "2020-08-27T20:48:20Z", "url": "https://github.com/apache/iceberg/pull/1397", "merged": true, "mergeCommit": {"oid": "a15e601b5abeb4707644e50d920f83c5be172108"}, "closed": true, "closedAt": "2020-08-27T23:08:55Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDGpj3AH2gAyNDc0OTQwOTkxOmRkYmVhNTJkY2ZlYTMwZDYzMTEyNTI0NDZhZjIzYTIxZjk0ZjViN2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDIonsgFqTQ3NzE0MDE5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ddbea52dcfea30d6311252446af23a21f94f5b7d", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/ddbea52dcfea30d6311252446af23a21f94f5b7d", "committedDate": "2020-08-27T20:43:50Z", "message": "Do not use all_data_files table in ExpireSnapshotsAction."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "472907892983a590135f5e4c54e8c16c18865e0c", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/472907892983a590135f5e4c54e8c16c18865e0c", "committedDate": "2020-08-27T20:43:50Z", "message": "Deduplicate manifests before reading in expire action and broadcast IO."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/da38878e37447bf4f40dbcce2fd10ebda872d7d1", "committedDate": "2020-08-27T20:43:50Z", "message": "Fix memory consumption in ExpireSnapshotsAction."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDc0OTc3", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477074977", "createdAt": "2020-08-27T20:56:24Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1NjoyNFrOHIg9ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1NjoyNFrOHIg9ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5MDc0Ng==", "bodyText": "The Datafile Equivalent of this is named SparkDataFile, although it isn't written as a Bean as uses a \"wrap(Row row)\" method fo applying. I think this naming more sense to me, just wanted to note.", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478690746", "createdAt": "2020-08-27T20:56:24Z", "author": {"login": "RussellSpitzer"}, "path": "spark/src/main/java/org/apache/iceberg/actions/ManifestFileBean.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.actions;\n+\n+import java.util.List;\n+import org.apache.iceberg.ManifestContent;\n+import org.apache.iceberg.ManifestFile;\n+\n+public class ManifestFileBean implements ManifestFile {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDc2Mjc4", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477076278", "createdAt": "2020-08-27T20:58:27Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1ODoyN1rOHIhB8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDo1ODoyN1rOHIhB8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5MTgyNA==", "bodyText": "I forgot about this when I refactored before! Good catch", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478691824", "createdAt": "2020-08-27T20:58:27Z", "author": {"login": "RussellSpitzer"}, "path": "spark/src/main/java/org/apache/iceberg/actions/BaseAction.java", "diffHunk": "@@ -57,8 +65,8 @@ protected String metadataTableName(String tableName, MetadataTableType type) {\n   }\n \n   /**\n-   * Returns all the path locations of all Manifest Lists for a given table\n-   * @param table the table\n+   * Returns all the path locations of all Manifest Lists for a given list of snapshots\n+   * @param snapshots snapshots", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDkzOTI2", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477093926", "createdAt": "2020-08-27T21:23:11Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToyMzoxMVrOHIhv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToyMzoxMVrOHIhv_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwMzYxMg==", "bodyText": "As we discussed a bit, it may make sense to log a warning here for users with \"adaptive query on\" that they will lose the ability to control the parallelism of the manifest read stage with that parameter enabled. I'm a little torn on whether that is too technical a detail or whether it will trip up lots of real users ...", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478703612", "createdAt": "2020-08-27T21:23:11Z", "author": {"login": "RussellSpitzer"}, "path": "spark/src/main/java/org/apache/iceberg/actions/BaseAction.java", "diffHunk": "@@ -94,9 +102,30 @@ protected String metadataTableName(String tableName, MetadataTableType type) {\n     return buildValidDataFileDF(spark, table().toString());\n   }\n \n+  private static class ReadManifest implements FlatMapFunction<ManifestFileBean, String> {\n+    private final Broadcast<FileIO> io;\n+\n+    ReadManifest(Broadcast<FileIO> io) {\n+      this.io = io;\n+    }\n+\n+    @Override\n+    public Iterator<String> call(ManifestFileBean manifest) {\n+      return new ClosingIterator<>(ManifestFiles.readPaths(manifest, io.getValue()).iterator());\n+    }\n+  }\n+\n   protected Dataset<Row> buildValidDataFileDF(SparkSession spark, String tableName) {\n-    String allDataFilesMetadataTable = metadataTableName(tableName, MetadataTableType.ALL_DATA_FILES);\n-    return spark.read().format(\"iceberg\").load(allDataFilesMetadataTable).select(\"file_path\");\n+    JavaSparkContext context = new JavaSparkContext(spark.sparkContext());\n+    Broadcast<FileIO> ioBroadcast = context.broadcast(SparkUtil.serializableFileIO(table()));\n+    String allManifestsMetadataTable = metadataTableName(tableName, MetadataTableType.ALL_MANIFESTS);\n+\n+    Dataset<ManifestFileBean> allManifests = spark.read().format(\"iceberg\").load(allManifestsMetadataTable)\n+        .selectExpr(\"path\", \"length\", \"partition_spec_id as partitionSpecId\", \"added_snapshot_id as addedSnapshotId\")\n+        .dropDuplicates(\"path\")\n+        .as(Encoders.bean(ManifestFileBean.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDk1NjEx", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477095611", "createdAt": "2020-08-27T21:26:09Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToyNjowOVrOHIh1mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMToyNjowOVrOHIh1mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwNTA0OA==", "bodyText": "For these and the other ones like it, should we throw unsupported? Since these values are not actually populated?", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478705048", "createdAt": "2020-08-27T21:26:09Z", "author": {"login": "RussellSpitzer"}, "path": "spark/src/main/java/org/apache/iceberg/actions/ManifestFileBean.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.actions;\n+\n+import java.util.List;\n+import org.apache.iceberg.ManifestContent;\n+import org.apache.iceberg.ManifestFile;\n+\n+public class ManifestFileBean implements ManifestFile {\n+  private String path = null;\n+  private Long length = null;\n+  private Integer partitionSpecId = null;\n+  private Long addedSnapshotId = null;\n+\n+  public String getPath() {\n+    return path;\n+  }\n+\n+  public void setPath(String path) {\n+    this.path = path;\n+  }\n+\n+  public Long getLength() {\n+    return length;\n+  }\n+\n+  public void setLength(Long length) {\n+    this.length = length;\n+  }\n+\n+  public Integer getPartitionSpecId() {\n+    return partitionSpecId;\n+  }\n+\n+  public void setPartitionSpecId(Integer partitionSpecId) {\n+    this.partitionSpecId = partitionSpecId;\n+  }\n+\n+  public Long getAddedSnapshotId() {\n+    return addedSnapshotId;\n+  }\n+\n+  public void setAddedSnapshotId(Long addedSnapshotId) {\n+    this.addedSnapshotId = addedSnapshotId;\n+  }\n+\n+  @Override\n+  public String path() {\n+    return path;\n+  }\n+\n+  @Override\n+  public long length() {\n+    return length;\n+  }\n+\n+  @Override\n+  public int partitionSpecId() {\n+    return partitionSpecId;\n+  }\n+\n+  @Override\n+  public ManifestContent content() {\n+    return ManifestContent.DATA;\n+  }\n+\n+  @Override\n+  public long sequenceNumber() {\n+    return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDk1ODI4", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477095828", "createdAt": "2020-08-27T21:26:33Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTAxMDY4", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477101068", "createdAt": "2020-08-27T21:35:55Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTozNTo1NlrOHIiGJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTozNTo1NlrOHIiGJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcwOTI4NA==", "bodyText": "Do we want to document or reflect in the name that we return paths for liveEntries only?", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478709284", "createdAt": "2020-08-27T21:35:56Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/ManifestFiles.java", "diffHunk": "@@ -23,15 +23,30 @@\n import java.util.Map;\n import org.apache.iceberg.ManifestReader.FileType;\n import org.apache.iceberg.exceptions.RuntimeIOException;\n+import org.apache.iceberg.io.CloseableIterable;\n import org.apache.iceberg.io.FileIO;\n import org.apache.iceberg.io.InputFile;\n import org.apache.iceberg.io.OutputFile;\n import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n \n public class ManifestFiles {\n   private ManifestFiles() {\n   }\n \n+  /**\n+   * Returns a {@link CloseableIterable} of file paths in the {@link ManifestFile}.\n+   *\n+   * @param manifest a ManifestFile\n+   * @param io a FileIO\n+   * @return a manifest reader\n+   */\n+  public static CloseableIterable<String> readPaths(ManifestFile manifest, FileIO io) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTAzMDgy", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477103082", "createdAt": "2020-08-27T21:39:26Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTozOToyNlrOHIiMPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTozOToyNlrOHIiMPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxMDg0Ng==", "bodyText": "Let's add a manual repartition step to avoid surprises with adaptive execution.", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478710846", "createdAt": "2020-08-27T21:39:26Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/actions/BaseAction.java", "diffHunk": "@@ -94,9 +102,30 @@ protected String metadataTableName(String tableName, MetadataTableType type) {\n     return buildValidDataFileDF(spark, table().toString());\n   }\n \n+  private static class ReadManifest implements FlatMapFunction<ManifestFileBean, String> {\n+    private final Broadcast<FileIO> io;\n+\n+    ReadManifest(Broadcast<FileIO> io) {\n+      this.io = io;\n+    }\n+\n+    @Override\n+    public Iterator<String> call(ManifestFileBean manifest) {\n+      return new ClosingIterator<>(ManifestFiles.readPaths(manifest, io.getValue()).iterator());\n+    }\n+  }\n+\n   protected Dataset<Row> buildValidDataFileDF(SparkSession spark, String tableName) {\n-    String allDataFilesMetadataTable = metadataTableName(tableName, MetadataTableType.ALL_DATA_FILES);\n-    return spark.read().format(\"iceberg\").load(allDataFilesMetadataTable).select(\"file_path\");\n+    JavaSparkContext context = new JavaSparkContext(spark.sparkContext());\n+    Broadcast<FileIO> ioBroadcast = context.broadcast(SparkUtil.serializableFileIO(table()));\n+    String allManifestsMetadataTable = metadataTableName(tableName, MetadataTableType.ALL_MANIFESTS);\n+\n+    Dataset<ManifestFileBean> allManifests = spark.read().format(\"iceberg\").load(allManifestsMetadataTable)\n+        .selectExpr(\"path\", \"length\", \"partition_spec_id as partitionSpecId\", \"added_snapshot_id as addedSnapshotId\")\n+        .dropDuplicates(\"path\")\n+        .as(Encoders.bean(ManifestFileBean.class));\n+\n+    return allManifests.flatMap(new ReadManifest(ioBroadcast), Encoders.STRING()).toDF(\"file_path\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTA1Mzk1", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477105395", "createdAt": "2020-08-27T21:43:38Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTo0MzozOFrOHIiTRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTo0MzozOFrOHIiTRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxMjY0Nw==", "bodyText": "In other actions, we have private static methods at the end of the classes like below:\nprivate static FlatMapFunction<Iterator<String>, String> listDirsRecursively(\n      Broadcast<SerializableConfiguration> conf,\n      long olderThanTimestamp) {\n\n    return (FlatMapFunction<Iterator<String>, String>) dirs -> {\n      // logic\n    };\n  }\n\nI am OK with this approach too but may make sense to align it with other places.", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478712647", "createdAt": "2020-08-27T21:43:38Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/actions/BaseAction.java", "diffHunk": "@@ -94,9 +102,30 @@ protected String metadataTableName(String tableName, MetadataTableType type) {\n     return buildValidDataFileDF(spark, table().toString());\n   }\n \n+  private static class ReadManifest implements FlatMapFunction<ManifestFileBean, String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTA1OTk1", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477105995", "createdAt": "2020-08-27T21:44:49Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTo0NDo0OVrOHIiVPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMTo0NDo0OVrOHIiVPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxMzE0OQ==", "bodyText": "nit: We use Broadcast<FileIO> io in all other places.", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478713149", "createdAt": "2020-08-27T21:44:49Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/actions/BaseAction.java", "diffHunk": "@@ -94,9 +102,30 @@ protected String metadataTableName(String tableName, MetadataTableType type) {\n     return buildValidDataFileDF(spark, table().toString());\n   }\n \n+  private static class ReadManifest implements FlatMapFunction<ManifestFileBean, String> {\n+    private final Broadcast<FileIO> io;\n+\n+    ReadManifest(Broadcast<FileIO> io) {\n+      this.io = io;\n+    }\n+\n+    @Override\n+    public Iterator<String> call(ManifestFileBean manifest) {\n+      return new ClosingIterator<>(ManifestFiles.readPaths(manifest, io.getValue()).iterator());\n+    }\n+  }\n+\n   protected Dataset<Row> buildValidDataFileDF(SparkSession spark, String tableName) {\n-    String allDataFilesMetadataTable = metadataTableName(tableName, MetadataTableType.ALL_DATA_FILES);\n-    return spark.read().format(\"iceberg\").load(allDataFilesMetadataTable).select(\"file_path\");\n+    JavaSparkContext context = new JavaSparkContext(spark.sparkContext());\n+    Broadcast<FileIO> ioBroadcast = context.broadcast(SparkUtil.serializableFileIO(table()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTE0MjQ0", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477114244", "createdAt": "2020-08-27T22:00:47Z", "commit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMjowMDo0N1rOHIiwDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMjowMDo0N1rOHIiwDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcyMDAxMw==", "bodyText": "SparkDataFile is in org.apache.iceberg.spark. Do we want to have these next to each other?", "url": "https://github.com/apache/iceberg/pull/1397#discussion_r478720013", "createdAt": "2020-08-27T22:00:47Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/actions/ManifestFileBean.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.actions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da38878e37447bf4f40dbcce2fd10ebda872d7d1"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "740989ce69826b44dc168a5564e57092fc0742b0", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/740989ce69826b44dc168a5564e57092fc0742b0", "committedDate": "2020-08-27T22:07:33Z", "message": "Avoid adaptive execution problem in ExpireSnapshotsAction."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MTQwMTk1", "url": "https://github.com/apache/iceberg/pull/1397#pullrequestreview-477140195", "createdAt": "2020-08-27T23:02:37Z", "commit": {"oid": "740989ce69826b44dc168a5564e57092fc0742b0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4138, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}