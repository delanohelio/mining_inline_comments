{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MTc2NjQ2", "number": 1998, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODozMDowNFrOFJl9ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODozMDowNFrOFJl9ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjAzNDM0OnYy", "diffSide": "RIGHT", "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODozMDowNFrOIL_gWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMTozNTowMlrOIMNT5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NTcyMg==", "bodyText": "Not a fan of Throw within a Catch.\nMaybe you can wrap it in something else.", "url": "https://github.com/apache/iceberg/pull/1998#discussion_r549445722", "createdAt": "2020-12-28T18:30:04Z", "author": {"login": "giovannifumarola"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -367,6 +363,20 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     return lockId;\n   }\n \n+  private void cleanupMetadataAndUnlock(boolean errorThrown, String metadataLocation, Optional<Long> lockId) {\n+    try {\n+      if (errorThrown) {\n+        // if anything went wrong, clean up the uncommitted metadata file\n+        io().deleteFile(metadataLocation);\n+      }\n+    } catch (RuntimeException e) {\n+      LOG.error(\"Fail to cleanup metadata file at {}\", metadataLocation, e);\n+      throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4df96840ea674a160d2fa5af56dda2ecfcd98bd8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0ODkyNw==", "bodyText": "I think this is fine because we don't want to wrap or modify the original exception, and it is helpful to log the metadata location that was not correctly deleted.", "url": "https://github.com/apache/iceberg/pull/1998#discussion_r549448927", "createdAt": "2020-12-28T18:41:41Z", "author": {"login": "rdblue"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -367,6 +363,20 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     return lockId;\n   }\n \n+  private void cleanupMetadataAndUnlock(boolean errorThrown, String metadataLocation, Optional<Long> lockId) {\n+    try {\n+      if (errorThrown) {\n+        // if anything went wrong, clean up the uncommitted metadata file\n+        io().deleteFile(metadataLocation);\n+      }\n+    } catch (RuntimeException e) {\n+      LOG.error(\"Fail to cleanup metadata file at {}\", metadataLocation, e);\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NTcyMg=="}, "originalCommit": {"oid": "4df96840ea674a160d2fa5af56dda2ecfcd98bd8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY3MTg0MA==", "bodyText": "I think we may leverage runSafely that was added recently.\n    ExceptionUtil.runSafely(\n        () -> {\n          if (errorThrown) {\n            // if anything went wrong, clean up the uncommitted metadata file\n            io().deleteFile(metadataLocation);\n          }\n          return Void.TYPE;\n        },\n        e -> LOG.error(\"Failed to cleanup metadata file at {}\", metadataLocation, e),\n        () -> unlock(lockId));", "url": "https://github.com/apache/iceberg/pull/1998#discussion_r549671840", "createdAt": "2020-12-29T11:34:43Z", "author": {"login": "aokolnychyi"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -367,6 +363,20 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     return lockId;\n   }\n \n+  private void cleanupMetadataAndUnlock(boolean errorThrown, String metadataLocation, Optional<Long> lockId) {\n+    try {\n+      if (errorThrown) {\n+        // if anything went wrong, clean up the uncommitted metadata file\n+        io().deleteFile(metadataLocation);\n+      }\n+    } catch (RuntimeException e) {\n+      LOG.error(\"Fail to cleanup metadata file at {}\", metadataLocation, e);\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NTcyMg=="}, "originalCommit": {"oid": "4df96840ea674a160d2fa5af56dda2ecfcd98bd8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY3MTkwOQ==", "bodyText": "cc @rdblue @jackye1995 @giovannifumarola", "url": "https://github.com/apache/iceberg/pull/1998#discussion_r549671909", "createdAt": "2020-12-29T11:35:02Z", "author": {"login": "aokolnychyi"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -367,6 +363,20 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     return lockId;\n   }\n \n+  private void cleanupMetadataAndUnlock(boolean errorThrown, String metadataLocation, Optional<Long> lockId) {\n+    try {\n+      if (errorThrown) {\n+        // if anything went wrong, clean up the uncommitted metadata file\n+        io().deleteFile(metadataLocation);\n+      }\n+    } catch (RuntimeException e) {\n+      LOG.error(\"Fail to cleanup metadata file at {}\", metadataLocation, e);\n+      throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0NTcyMg=="}, "originalCommit": {"oid": "4df96840ea674a160d2fa5af56dda2ecfcd98bd8"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3106, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}