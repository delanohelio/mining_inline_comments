{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTg5ODIx", "number": 749, "title": "Convert Spark In filter to iceberg IN Expression", "bodyText": "Issue #748", "createdAt": "2020-01-26T07:27:47Z", "url": "https://github.com/apache/iceberg/pull/749", "merged": true, "mergeCommit": {"oid": "905637d9efc4a84b15ed54024f60abb39ad44edd"}, "closed": true, "closedAt": "2020-02-03T17:07:55Z", "author": {"login": "jun-he"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-C-VoAH2gAyMzY3MTg5ODIxOjMyYWJmZTIxZGEyN2FlNWJkMzljNzgwNTExNjc1Mzc1MTA3ZjU5Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAoXQMgH2gAyMzY3MTg5ODIxOjhhYWNlY2JiMThkMDc1NGFhOGZjZDdiMDVhYWIxOTg4NWI5YTQwZmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928", "author": {"user": {"login": "jun-he", "name": null}}, "url": "https://github.com/apache/iceberg/commit/32abfe21da27ae5bd39c780511675375107f5928", "committedDate": "2020-01-26T07:26:08Z", "message": "Convert Spark In filter to iceberg IN Expression"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NjkwNDY2", "url": "https://github.com/apache/iceberg/pull/749#pullrequestreview-348690466", "createdAt": "2020-01-27T14:13:40Z", "commit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMzo0MVrOFiEAJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMzo0MVrOFiEAJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MTQ3OQ==", "bodyText": "Will it be hard to add tests for a couple of other data types?", "url": "https://github.com/apache/iceberg/pull/749#discussion_r371261479", "createdAt": "2020-01-27T14:13:41Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java", "diffHunk": "@@ -425,6 +426,21 @@ public void testFilterByNonProjectedColumn() {\n     }\n   }\n \n+  @Test\n+  public void testInFilter() {\n+    File location = buildPartitionedTable(\"partitioned_by_data\", PARTITION_BY_DATA, \"data_ident\", \"data\");\n+\n+    DataSourceOptions options = new DataSourceOptions(ImmutableMap.of(\n+        \"path\", location.toString())\n+    );\n+\n+    IcebergSource source = new IcebergSource();\n+    DataSourceReader reader = source.createReader(options);\n+    pushFilters(reader, new In(\"data\", new String[]{\"foo\", \"junction\", \"brush\"}));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NjkwNTQx", "url": "https://github.com/apache/iceberg/pull/749#pullrequestreview-348690541", "createdAt": "2020-01-27T14:13:47Z", "commit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMzo0N1rOFiEAWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNDoxMzo0N1rOFiEAWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTI2MTUyOQ==", "bodyText": "What if values contain null? Can we add a test for this?", "url": "https://github.com/apache/iceberg/pull/749#discussion_r371261529", "createdAt": "2020-01-27T14:13:47Z", "author": {"login": "aokolnychyi"}, "path": "spark/src/main/java/org/apache/iceberg/spark/SparkFilters.java", "diffHunk": "@@ -122,11 +122,7 @@ public static Expression convert(Filter filter) {\n \n         case IN:\n           In inFilter = (In) filter;\n-          Expression in = alwaysFalse();\n-          for (Object value : inFilter.values()) {\n-            in = or(in, equal(inFilter.attribute(), convertLiteral(value)));\n-          }\n-          return in;\n+          return in(inFilter.attribute(), inFilter.values());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODU1NjU3", "url": "https://github.com/apache/iceberg/pull/749#pullrequestreview-348855657", "createdAt": "2020-01-27T17:48:58Z", "commit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzo0ODo1OVrOFiLwFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzo0ODo1OVrOFiLwFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4ODQzOQ==", "bodyText": "This dropped the call to convertLiteral for each value. That converts values that Spark uses into Iceberg values. I think we still need to call it:\n          In inFilter = (In) filter;\n          List<Object> nonNullLiterals = Stream.of(inFilter.values())\n              .filter(Objects::nonNull)\n              .map(SparkFilters::convertLiteral)\n              .collect(Collectors.toList());\n          return Expressions.in(inFilter.attribute(), nonNullLiterals);", "url": "https://github.com/apache/iceberg/pull/749#discussion_r371388439", "createdAt": "2020-01-27T17:48:59Z", "author": {"login": "rdblue"}, "path": "spark/src/main/java/org/apache/iceberg/spark/SparkFilters.java", "diffHunk": "@@ -122,11 +122,7 @@ public static Expression convert(Filter filter) {\n \n         case IN:\n           In inFilter = (In) filter;\n-          Expression in = alwaysFalse();\n-          for (Object value : inFilter.values()) {\n-            in = or(in, equal(inFilter.attribute(), convertLiteral(value)));\n-          }\n-          return in;\n+          return in(inFilter.attribute(), inFilter.values());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32abfe21da27ae5bd39c780511675375107f5928"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "842e57b66f940c5885ec344274ed7df068a5e349", "author": {"user": {"login": "jun-he", "name": null}}, "url": "https://github.com/apache/iceberg/commit/842e57b66f940c5885ec344274ed7df068a5e349", "committedDate": "2020-01-31T05:27:06Z", "message": "address the comments and add additional unit tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODUzODI2", "url": "https://github.com/apache/iceberg/pull/749#pullrequestreview-351853826", "createdAt": "2020-02-01T01:19:02Z", "commit": {"oid": "842e57b66f940c5885ec344274ed7df068a5e349"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMToxOTowMlrOFkbpcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMToxOTowMlrOFkbpcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc0NjAzMw==", "bodyText": "Why was it necessary to change these values? This doesn't change the hour partitions the values are stored in.", "url": "https://github.com/apache/iceberg/pull/749#discussion_r373746033", "createdAt": "2020-02-01T01:19:02Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestFilteredScan.java", "diffHunk": "@@ -543,11 +579,11 @@ private File buildPartitionedTable(String desc, PartitionSpec spec, String udf,\n \n   private List<Record> testRecords(org.apache.avro.Schema avroSchema) {\n     return Lists.newArrayList(\n-        record(avroSchema, 0L, timestamp(\"2017-12-22T09:20:44.294658+00:00\"), \"junction\"),\n+        record(avroSchema, 0L, timestamp(\"2017-12-22T09:20:44.294+00:00\"), \"junction\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "842e57b66f940c5885ec344274ed7df068a5e349"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aacecbb18d0754aa8fcd7b05aab19885b9a40fc", "author": {"user": {"login": "jun-he", "name": null}}, "url": "https://github.com/apache/iceberg/commit/8aacecbb18d0754aa8fcd7b05aab19885b9a40fc", "committedDate": "2020-02-03T08:07:41Z", "message": "update the unit test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4892, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}