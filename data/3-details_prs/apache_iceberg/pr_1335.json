{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDU3MTUy", "number": 1335, "title": "Spark: Follow name mapping while importing Parquet tables", "bodyText": "We have to follow name mapping while importing Parquet tables so that metrics are collected correctly. Right now, we may have corrupted metadata if the underlying name mapping does not match ids that would be generated based on positions.", "createdAt": "2020-08-13T15:23:04Z", "url": "https://github.com/apache/iceberg/pull/1335", "merged": true, "mergeCommit": {"oid": "3990daae506822dc6b85c7b6d8461be28ca5362e"}, "closed": true, "closedAt": "2020-08-15T18:21:44Z", "author": {"login": "aokolnychyi"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-hrxiAFqTQ2Njg3MDA5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_DCdpgH2gAyNDY3NDU3MTUyOjA3ZjY4NGYwYWIyOTcwNmI4YmExYTNkNTJkYTE2NDEzZmNmOGExMmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODcwMDk5", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466870099", "createdAt": "2020-08-13T15:24:03Z", "commit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNDowNFrOHAQpJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNDowNFrOHAQpJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNDcyNw==", "bodyText": "I kept the initialization in place. It triggers validation. Otherwise, some tests fail.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470034727", "createdAt": "2020-08-13T15:24:04Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/mapping/MappedFields.java", "diffHunk": "@@ -37,21 +38,21 @@ public static MappedFields of(List<MappedField> fields) {\n   }\n \n   private final List<MappedField> fields;\n-  private final Map<String, Integer> nameToId;\n-  private final Map<Integer, MappedField> idToField;\n+  private transient Map<String, Integer> nameToId;\n+  private transient Map<Integer, MappedField> idToField;\n \n   private MappedFields(List<MappedField> fields) {\n     this.fields = ImmutableList.copyOf(fields);\n-    this.nameToId = indexIds(fields);\n-    this.idToField = indexFields(fields);\n+    lazyNameToId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODcwODc4", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466870878", "createdAt": "2020-08-13T15:24:55Z", "commit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNDo1NVrOHAQrjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNDo1NVrOHAQrjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNTM0Mg==", "bodyText": "Same here.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470035342", "createdAt": "2020-08-13T15:24:55Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/mapping/NameMapping.java", "diffHunk": "@@ -43,31 +44,45 @@ public static NameMapping of(MappedFields fields) {\n   }\n \n   private final MappedFields mapping;\n-  private final Map<Integer, MappedField> fieldsById;\n-  private final Map<String, MappedField> fieldsByName;\n+  private transient Map<Integer, MappedField> fieldsById;\n+  private transient Map<String, MappedField> fieldsByName;\n \n   NameMapping(MappedFields mapping) {\n     this.mapping = mapping;\n-    this.fieldsById = MappingUtil.indexById(mapping);\n-    this.fieldsByName = MappingUtil.indexByName(mapping);\n+    lazyFieldsById();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODcxOTY0", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466871964", "createdAt": "2020-08-13T15:26:10Z", "commit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNjoxMFrOHAQu4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyNjoxMFrOHAQu4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNjE5Mw==", "bodyText": "While we are using guava classes, I think it should be ok as Spark uses Java serialization for closures.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470036193", "createdAt": "2020-08-13T15:26:10Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/mapping/NameMapping.java", "diffHunk": "@@ -27,7 +28,7 @@\n /**\n  * Represents a mapping from external schema names to Iceberg type IDs.\n  */\n-public class NameMapping {\n+public class NameMapping implements Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODc0MTQ3", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466874147", "createdAt": "2020-08-13T15:28:36Z", "commit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyODozNlrOHAQ1RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyODozNlrOHAQ1RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzNzgyOA==", "bodyText": "We have to prune columns without ids. Otherwise, ParquetSchemaUtil.convert will assign fallback ids to columns not present in the name mapping and they will most likely conflict with ids assigned by the name mapping.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470037828", "createdAt": "2020-08-13T15:28:36Z", "author": {"login": "aokolnychyi"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -136,6 +154,19 @@ public static Metrics footerMetrics(ParquetMetadata metadata, MetricsConfig metr\n         toBufferMap(fileSchema, lowerBounds), toBufferMap(fileSchema, upperBounds));\n   }\n \n+  private static MessageType getParquetType(ParquetMetadata metadata, Schema expectedSchema, NameMapping nameMapping) {\n+    MessageType type = metadata.getFileMetaData().getSchema();\n+    if (ParquetSchemaUtil.hasIds(type)) {\n+      return expectedSchema != null ? ParquetSchemaUtil.pruneColumns(type, expectedSchema) : type;\n+    } else if (nameMapping != null) {\n+      MessageType typeWithIds = ParquetSchemaUtil.applyNameMapping(type, nameMapping);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODc1MjQw", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466875240", "createdAt": "2020-08-13T15:29:49Z", "commit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyOTo0OVrOHAQ4kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNToyOTo0OVrOHAQ4kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzODY3Mg==", "bodyText": "The idea here is that we should import metrics only for columns in the current schema.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470038672", "createdAt": "2020-08-13T15:29:49Z", "author": {"login": "aokolnychyi"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -136,6 +154,19 @@ public static Metrics footerMetrics(ParquetMetadata metadata, MetricsConfig metr\n         toBufferMap(fileSchema, lowerBounds), toBufferMap(fileSchema, upperBounds));\n   }\n \n+  private static MessageType getParquetType(ParquetMetadata metadata, Schema expectedSchema, NameMapping nameMapping) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b90def1b7cd10984e0e436d3ac838305935a881", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/2b90def1b7cd10984e0e436d3ac838305935a881", "committedDate": "2020-08-13T15:33:09Z", "message": "Spark: Respect name mapping while importing Parquet tables"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/1827e6ad3f9c8ce1265b0e47b5aad9480a3848d1", "committedDate": "2020-08-13T15:08:09Z", "message": "Spark: Respect name mapping while importing Parquet tables"}, "afterCommit": {"oid": "2b90def1b7cd10984e0e436d3ac838305935a881", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/2b90def1b7cd10984e0e436d3ac838305935a881", "committedDate": "2020-08-13T15:33:09Z", "message": "Spark: Respect name mapping while importing Parquet tables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODgxNjgz", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-466881683", "createdAt": "2020-08-13T15:36:56Z", "commit": {"oid": "2b90def1b7cd10984e0e436d3ac838305935a881"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjo1N1rOHARK4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjo1N1rOHARK4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MzM2Mw==", "bodyText": "This would fail before the PR as the metrics were imported in the wrong way. The previous predicate did not trigger this issue, so I changed it.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470043363", "createdAt": "2020-08-13T15:36:57Z", "author": {"login": "aokolnychyi"}, "path": "spark2/src/test/java/org/apache/iceberg/spark/source/TestSparkTableUtil.java", "diffHunk": "@@ -239,18 +238,13 @@ public void testImportWithNameMapping() throws Exception {\n     List<String> actual = spark.read().format(\"iceberg\").load(DB_NAME + \".target_table\")\n         .select(\"data\")\n         .sort(\"data\")\n-        .filter(\"data<'c'\")\n-        .collectAsList()\n-        .stream()\n-        .map(r -> r.getString(0))\n-        .collect(Collectors.toList());\n+        .filter(\"data >= 'b'\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b90def1b7cd10984e0e436d3ac838305935a881"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff54e7fd75e4d92795735bfb0ab8560c59d0c437", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/ff54e7fd75e4d92795735bfb0ab8560c59d0c437", "committedDate": "2020-08-14T17:42:24Z", "message": "Switch to using a separate visitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1e4f54b1bf2fc1c887bc4a918f934680b4d6bc8", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/f1e4f54b1bf2fc1c887bc4a918f934680b4d6bc8", "committedDate": "2020-08-14T17:45:20Z", "message": "Make package-private"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzU4NjQ3", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467758647", "createdAt": "2020-08-14T17:46:06Z", "commit": {"oid": "f1e4f54b1bf2fc1c887bc4a918f934680b4d6bc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo0NjowNlrOHA9VnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo0NjowNlrOHA9VnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc2NzAwNQ==", "bodyText": "I've refactored the common logic in MessageTypeToType to a base class.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470767005", "createdAt": "2020-08-14T17:46:06Z", "author": {"login": "aokolnychyi"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/BaseMessageTypeToType.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import java.util.Optional;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n+import org.apache.iceberg.types.Type;\n+import org.apache.iceberg.types.Types;\n+import org.apache.iceberg.types.Types.TimestampType;\n+import org.apache.parquet.schema.LogicalTypeAnnotation;\n+import org.apache.parquet.schema.PrimitiveType;\n+\n+abstract class BaseMessageTypeToType extends ParquetTypeVisitor<Type> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1e4f54b1bf2fc1c887bc4a918f934680b4d6bc8"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzU5NjEz", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467759613", "createdAt": "2020-08-14T17:47:47Z", "commit": {"oid": "ff54e7fd75e4d92795735bfb0ab8560c59d0c437"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo0Nzo0N1rOHA9YSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNzo0Nzo0N1rOHA9YSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDc2NzY5MQ==", "bodyText": "This is the same in both visitors. Should it be moved into the base class?", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470767691", "createdAt": "2020-08-14T17:47:47Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToTypeWithoutAssigningIds.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.apache.iceberg.relocated.com.google.common.base.Joiner;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n+import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n+import org.apache.iceberg.relocated.com.google.common.collect.Maps;\n+import org.apache.iceberg.types.Type;\n+import org.apache.iceberg.types.Types;\n+import org.apache.parquet.schema.GroupType;\n+import org.apache.parquet.schema.MessageType;\n+import org.apache.parquet.schema.Type.Repetition;\n+\n+import static org.apache.iceberg.types.Types.NestedField.optional;\n+import static org.apache.iceberg.types.Types.NestedField.required;\n+\n+/**\n+ * A visitor that converts a {@link MessageType} to a {@link Type} in Iceberg without assigning ids.\n+ * Columns without ids are pruned.\n+ */\n+public class MessageTypeToTypeWithoutAssigningIds extends BaseMessageTypeToType {\n+  private static final Joiner DOT = Joiner.on(\".\");\n+\n+  private final Map<String, Integer> aliasToId = Maps.newHashMap();\n+\n+  MessageTypeToTypeWithoutAssigningIds() {}\n+\n+  public Map<String, Integer> getAliases() {\n+    return aliasToId;\n+  }\n+\n+  @Override\n+  public Type message(MessageType message, List<Type> fields) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff54e7fd75e4d92795735bfb0ab8560c59d0c437"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340b92ad0a2e183205b64ef11264760f85f7dbe3", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/340b92ad0a2e183205b64ef11264760f85f7dbe3", "committedDate": "2020-08-14T23:00:49Z", "message": "Squash logic into MessageTypeToType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a88f11d7fbcc5a0768b113b535fafe62bb2a06a", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/8a88f11d7fbcc5a0768b113b535fafe62bb2a06a", "committedDate": "2020-08-14T23:07:46Z", "message": "Minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/a4413d820f43bc89a889ce39bd3e888386d28b30", "committedDate": "2020-08-15T00:23:03Z", "message": "Handle empty projections"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTI5OTk0", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467929994", "createdAt": "2020-08-15T00:24:13Z", "commit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoyNDoxM1rOHBGR5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDoyNDoxM1rOHBGR5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxMzUxMQ==", "bodyText": "This part requires attention. Tests for empty projections would fail otherwise.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470913511", "createdAt": "2020-08-15T00:24:13Z", "author": {"login": "aokolnychyi"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java", "diffHunk": "@@ -56,36 +60,38 @@\n \n   @Override\n   public Type message(MessageType message, List<Type> fields) {\n-    return struct(message, fields);\n+    Type struct = struct(message, fields);\n+    return struct != null ? struct : Types.StructType.of(Lists.newArrayList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTMzNjMx", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467933631", "createdAt": "2020-08-15T00:55:13Z", "commit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDo1NToxM1rOHBGhhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDo1NToxM1rOHBGhhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxNzUwOQ==", "bodyText": "I think it would be fine to continue to use withExpectedSize because the size will actually be smaller.", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470917509", "createdAt": "2020-08-15T00:55:13Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java", "diffHunk": "@@ -56,36 +60,38 @@\n \n   @Override\n   public Type message(MessageType message, List<Type> fields) {\n-    return struct(message, fields);\n+    Type struct = struct(message, fields);\n+    return struct != null ? struct : Types.StructType.of(Lists.newArrayList());\n   }\n \n   @Override\n   public Type struct(GroupType struct, List<Type> fieldTypes) {\n-    if (struct == root) {\n-      nextId = 1; // use the reserved IDs for the root struct\n-    }\n-\n     List<org.apache.parquet.schema.Type> parquetFields = struct.getFields();\n-    List<Types.NestedField> fields = Lists.newArrayListWithExpectedSize(fieldTypes.size());\n+    List<Types.NestedField> fields = Lists.newArrayList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTMzOTEz", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467933913", "createdAt": "2020-08-15T00:58:34Z", "commit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDo1ODozNFrOHBGi3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDo1ODozNFrOHBGi3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxNzg1Mw==", "bodyText": "Do we want to expose nameToIdFunc or do we want to have one that accepts a NameMapping?", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470917853", "createdAt": "2020-08-15T00:58:34Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetSchemaUtil.java", "diffHunk": "@@ -41,8 +43,29 @@ public static MessageType convert(Schema schema, String name) {\n     return new TypeToMessageType().convert(schema, name);\n   }\n \n+  /**\n+   * Converts a Parquet schema to an Iceberg schema. Fields without IDs are kept and assigned fallback IDs.\n+   *\n+   * @param parquetSchema a Parquet schema\n+   * @return a matching Iceberg schema for the provided Parquet schema\n+   */\n   public static Schema convert(MessageType parquetSchema) {\n-    MessageTypeToType converter = new MessageTypeToType(parquetSchema);\n+    // if the Parquet schema does not contain ids, we assign fallback ids to top-level fields\n+    // all remaining fields will get ids >= 1000 to avoid pruning columns without ids\n+    MessageType parquetSchemaWithIds = hasIds(parquetSchema) ? parquetSchema : addFallbackIds(parquetSchema);\n+    AtomicInteger nextId = new AtomicInteger(1000);\n+    return convert(parquetSchemaWithIds, name -> nextId.getAndIncrement());\n+  }\n+\n+  /**\n+   * Converts a Parquet schema to an Iceberg schema. Fields without IDs are pruned.\n+   *\n+   * @param parquetSchema a Parquet schema\n+   * @param nameToIdFunc a name to field id mapping function\n+   * @return a matching Iceberg schema for the provided Parquet schema\n+   */\n+  public static Schema convert(MessageType parquetSchema, Function<String[], Integer> nameToIdFunc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTM0MzA5", "url": "https://github.com/apache/iceberg/pull/1335#pullrequestreview-467934309", "createdAt": "2020-08-15T01:02:39Z", "commit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMTowMjozOVrOHBGkww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMTowMjozOVrOHBGkww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxODMzOQ==", "bodyText": "What about naming this convertAndPrune?", "url": "https://github.com/apache/iceberg/pull/1335#discussion_r470918339", "createdAt": "2020-08-15T01:02:39Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetUtil.java", "diffHunk": "@@ -86,15 +95,23 @@ public static Metrics footerMetrics(ParquetMetadata metadata, MetricsConfig metr\n     Map<Integer, Literal<?>> upperBounds = Maps.newHashMap();\n     Set<Integer> missingStats = Sets.newHashSet();\n \n-    MessageType parquetType = metadata.getFileMetaData().getSchema();\n-    Schema fileSchema = ParquetSchemaUtil.convert(parquetType);\n+    // ignore metrics for fields we failed to determine reliable IDs\n+    MessageType parquetTypeWithIds = getParquetTypeWithIds(metadata, nameMapping);\n+    Schema fileSchema = ParquetSchemaUtil.convert(parquetTypeWithIds, name -> null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4413d820f43bc89a889ce39bd3e888386d28b30"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "093f69e1a6df124d8b1100d6d08829c360a9ed51", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/093f69e1a6df124d8b1100d6d08829c360a9ed51", "committedDate": "2020-08-15T01:43:42Z", "message": "Minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07f684f0ab29706b8ba1a3d52da16413fcf8a12c", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/07f684f0ab29706b8ba1a3d52da16413fcf8a12c", "committedDate": "2020-08-15T06:15:43Z", "message": "Fix checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4035, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}