{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MTcwNTEx", "number": 1997, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOToxNjozMVrOFJmgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOToxNjozMVrOFJmgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjEyMzQwOnYy", "diffSide": "RIGHT", "path": "aws/src/main/java/org/apache/iceberg/aws/AwsClientFactories.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOToxNjozMVrOIMARJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxOTo0NDo1MlrOIMAvmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1ODIxNA==", "bodyText": "Unrelated to this change:\n\n\nDid we consider using SdkAsyncHttpClient such as NettyNioAsyncHttpClient for non blocking IO.\n\n\nShould we have different HTTP clients across different services to avoid contention for the shared connection pool and also have flexibility to configure the http client settings based on the service?\n\n\nShould we use async service clients like S3AsyncClient etc", "url": "https://github.com/apache/iceberg/pull/1997#discussion_r549458214", "createdAt": "2020-12-28T19:16:31Z", "author": {"login": "abhishekkhanna1"}, "path": "aws/src/main/java/org/apache/iceberg/aws/AwsClientFactories.java", "diffHunk": "@@ -30,12 +29,6 @@\n \n public class AwsClientFactories {\n \n-  /**\n-   * The implementation class of {@link AwsClientFactory} to customize AWS client configurations.\n-   * If set, all AWS clients will be configured by the specified class before initialization.\n-   */\n-  public static final String CLIENT_FACTORY_CONFIG_KEY = \"client.factory\";\n-\n   private static final SdkHttpClient HTTP_CLIENT_DEFAULT = UrlConnectionHttpClient.create();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89bc21ba76169df766593ac5f5798967b5301775"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ2NjAxMQ==", "bodyText": "Yes we considered about using Netty async implementation and async AWS client, especially for s3. There was some discussion about that in #1767, and some people mentioned that Netty implementation has some unresolved bug. Since the existing solution using java future is good enough, we just chose that route.\nI will do some testing to see if it can improve S3 FileIO performance, and if it works I will raise another PR. The API for client factory can always be updated for async clients.", "url": "https://github.com/apache/iceberg/pull/1997#discussion_r549466011", "createdAt": "2020-12-28T19:44:52Z", "author": {"login": "jackye1995"}, "path": "aws/src/main/java/org/apache/iceberg/aws/AwsClientFactories.java", "diffHunk": "@@ -30,12 +29,6 @@\n \n public class AwsClientFactories {\n \n-  /**\n-   * The implementation class of {@link AwsClientFactory} to customize AWS client configurations.\n-   * If set, all AWS clients will be configured by the specified class before initialization.\n-   */\n-  public static final String CLIENT_FACTORY_CONFIG_KEY = \"client.factory\";\n-\n   private static final SdkHttpClient HTTP_CLIENT_DEFAULT = UrlConnectionHttpClient.create();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ1ODIxNA=="}, "originalCommit": {"oid": "89bc21ba76169df766593ac5f5798967b5301775"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3103, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}