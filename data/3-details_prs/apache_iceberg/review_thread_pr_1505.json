{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNDU0OTAy", "number": 1505, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MDo1NVrOEnjAGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDo0ODoxNVrOEpMscA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTAzMzg2OnYy", "diffSide": "RIGHT", "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MDo1NVrOHYM1_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzoyMzoxN1rOHYec5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzODMwMQ==", "bodyText": "I think this should be in the storageDescriptor method instead of here in the commit.", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495138301", "createdAt": "2020-09-25T17:40:55Z", "author": {"login": "rdblue"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -169,6 +171,15 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n         tbl.getParameters().put(\"EXTERNAL\", \"TRUE\"); // using the external table type also requires this\n       }\n \n+      // If  needed set the required properties on the table to be able to query from Hive\n+      if (hiveEngineEnabled(metadata, conf)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNjc4OQ==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495426789", "createdAt": "2020-09-26T07:23:17Z", "author": {"login": "pvary"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -169,6 +171,15 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n         tbl.getParameters().put(\"EXTERNAL\", \"TRUE\"); // using the external table type also requires this\n       }\n \n+      // If  needed set the required properties on the table to be able to query from Hive\n+      if (hiveEngineEnabled(metadata, conf)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzODMwMQ=="}, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTAzODkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0MjozN1rOHYM5KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzoyMjoxN1rOHYecmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzOTExMw==", "bodyText": "Could we move this to a class for Hadoop configuration properties, like org.apache.iceberg.hadoop.ConfigProperties?", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495139113", "createdAt": "2020-09-25T17:42:37Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "diffHunk": "@@ -126,4 +126,8 @@ private TableProperties() {\n \n   public static final String SNAPSHOT_ID_INHERITANCE_ENABLED = \"compatibility.snapshot-id-inheritance.enabled\";\n   public static final boolean SNAPSHOT_ID_INHERITANCE_ENABLED_DEFAULT = false;\n+\n+  public static final String ENGINE_HIVE_ENABLED = \"engine.hive.enabled\";\n+  public static final String ENGINE_HIVE_ENABLED_HIVE_CONF = \"iceberg.engine.hive.enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNjcxMw==", "bodyText": "Done", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495426713", "createdAt": "2020-09-26T07:22:17Z", "author": {"login": "pvary"}, "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "diffHunk": "@@ -126,4 +126,8 @@ private TableProperties() {\n \n   public static final String SNAPSHOT_ID_INHERITANCE_ENABLED = \"compatibility.snapshot-id-inheritance.enabled\";\n   public static final boolean SNAPSHOT_ID_INHERITANCE_ENABLED_DEFAULT = false;\n+\n+  public static final String ENGINE_HIVE_ENABLED = \"engine.hive.enabled\";\n+  public static final String ENGINE_HIVE_ENABLED_HIVE_CONF = \"iceberg.engine.hive.enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzOTExMw=="}, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5OTA0Njg0OnYy", "diffSide": "RIGHT", "path": "hive-metastore/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0NToyMVrOHYM-WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwNzoyMzowNVrOHYec3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0MDQ0MQ==", "bodyText": "It looks like a lot of test cases are mixed together in this method, but separated by comments. I think it would be better to make these separate test methods because then they are run independently, so you can see all of the failures at once, instead of just one failure per run that potentially hides the others.", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495140441", "createdAt": "2020-09-25T17:45:21Z", "author": {"login": "rdblue"}, "path": "hive-metastore/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -325,4 +329,71 @@ public void testNonDefaultDatabaseLocation() throws IOException, TException {\n     metastoreClient.dropDatabase(NON_DEFAULT_DATABASE, true, true, true);\n   }\n \n+  @Test\n+  public void testEngineHiveEnabled() throws TException {\n+    // Default already created\n+    org.apache.hadoop.hive.metastore.api.Table hmsTable = metastoreClient.getTable(DB_NAME, TABLE_NAME);\n+\n+    assertHiveEnabled(hmsTable, false);\n+\n+    catalog.dropTable(TABLE_IDENTIFIER);\n+\n+    // Enable by hive-conf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQyNjc4MA==", "bodyText": "Done (kept true/false tests in a single test case, but separated on config source)", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r495426780", "createdAt": "2020-09-26T07:23:05Z", "author": {"login": "pvary"}, "path": "hive-metastore/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -325,4 +329,71 @@ public void testNonDefaultDatabaseLocation() throws IOException, TException {\n     metastoreClient.dropDatabase(NON_DEFAULT_DATABASE, true, true, true);\n   }\n \n+  @Test\n+  public void testEngineHiveEnabled() throws TException {\n+    // Default already created\n+    org.apache.hadoop.hive.metastore.api.Table hmsTable = metastoreClient.getTable(DB_NAME, TABLE_NAME);\n+\n+    assertHiveEnabled(hmsTable, false);\n+\n+    catalog.dropTable(TABLE_IDENTIFIER);\n+\n+    // Enable by hive-conf", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0MDQ0MQ=="}, "originalCommit": {"oid": "7f1b3724fc5d711af0849c932ee9d124fff791f1"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNjM1MDU2OnYy", "diffSide": "RIGHT", "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDo0ODoxNVrOHauvlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQyMDo1Njo0NVrOHavBsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDg3MA==", "bodyText": "Should this be removed if the engine is not enabled? Because this is a table property, I don't think it would be automatically removed at any point.", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r497790870", "createdAt": "2020-09-30T20:48:15Z", "author": {"login": "rdblue"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -169,6 +173,12 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n         tbl.getParameters().put(\"EXTERNAL\", \"TRUE\"); // using the external table type also requires this\n       }\n \n+      // If needed set the 'storate_handler' property to enable query from Hive\n+      if (hiveEngineEnabled) {\n+        tbl.getParameters().put(hive_metastoreConstants.META_TABLE_STORAGE,\n+            \"org.apache.iceberg.mr.hive.HiveIcebergStorageHandler\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc6c7e17831962933db89c3ef8d7502a490a5202"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5NTUwNA==", "bodyText": "Good catch!\nDone", "url": "https://github.com/apache/iceberg/pull/1505#discussion_r497795504", "createdAt": "2020-09-30T20:56:45Z", "author": {"login": "pvary"}, "path": "hive-metastore/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -169,6 +173,12 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n         tbl.getParameters().put(\"EXTERNAL\", \"TRUE\"); // using the external table type also requires this\n       }\n \n+      // If needed set the 'storate_handler' property to enable query from Hive\n+      if (hiveEngineEnabled) {\n+        tbl.getParameters().put(hive_metastoreConstants.META_TABLE_STORAGE,\n+            \"org.apache.iceberg.mr.hive.HiveIcebergStorageHandler\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc5MDg3MA=="}, "originalCommit": {"oid": "cc6c7e17831962933db89c3ef8d7502a490a5202"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3530, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}