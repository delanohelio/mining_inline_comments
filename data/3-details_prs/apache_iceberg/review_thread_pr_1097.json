{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MzU3ODQ0", "number": 1097, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0MDowMFrOEDiK_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozODowMlrOED95Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTQxMDU0OnYy", "diffSide": "RIGHT", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjo0MDowMFrOGgm2Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMTo1NjozOFrOGhFykA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NDAzNA==", "bodyText": "Tests for new cases should be in separate test methods instead of tacked on to existing tests. Also, can you change the assertions to check the full table schema instead of just sizes? It should be something like this:\nSchema expectedSchema = new Schema(...);\nicebergTable.updateSchema()\n    ...\n    .commit();\n\nAssert.assertEquals(\"Schema should match expected\", expected.asStruct(), icebergTable.schema().asStruct());", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r436844034", "createdAt": "2020-06-08T16:40:00Z", "author": {"login": "rdblue"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -238,6 +238,19 @@ public void testExistingTableUpdate() throws TException {\n         .map(Types.NestedField::name)\n         .collect(Collectors.toList());\n     Assert.assertEquals(icebergColumns, hiveColumns);\n+\n+    // Add two columns with different types, then verify we could delete the first column in hive metastore\n+    // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n+    // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n+    int columnCount = icebergTable.schema().columns().size();\n+    icebergTable.updateSchema()\n+            .addColumn(\"str1\", Types.StringType.get())\n+            .addColumn(\"int1\", Types.IntegerType.get())\n+            .commit();\n+    Assert.assertEquals(\"2 columns added\", columnCount + 2, icebergTable.schema().columns().size());\n+\n+    icebergTable.updateSchema().deleteColumn(\"str1\").commit();\n+    Assert.assertEquals(\"1 column deleted\", columnCount + 1, icebergTable.schema().columns().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eaa3bb0e123e063624eb774848ccc4d740c18243"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM1MTA1Ng==", "bodyText": "added a new test method testColumnTypeChangeInMetastore()", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r437351056", "createdAt": "2020-06-09T11:56:38Z", "author": {"login": "vanliu-tx"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -238,6 +238,19 @@ public void testExistingTableUpdate() throws TException {\n         .map(Types.NestedField::name)\n         .collect(Collectors.toList());\n     Assert.assertEquals(icebergColumns, hiveColumns);\n+\n+    // Add two columns with different types, then verify we could delete the first column in hive metastore\n+    // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n+    // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n+    int columnCount = icebergTable.schema().columns().size();\n+    icebergTable.updateSchema()\n+            .addColumn(\"str1\", Types.StringType.get())\n+            .addColumn(\"int1\", Types.IntegerType.get())\n+            .commit();\n+    Assert.assertEquals(\"2 columns added\", columnCount + 2, icebergTable.schema().columns().size());\n+\n+    icebergTable.updateSchema().deleteColumn(\"str1\").commit();\n+    Assert.assertEquals(\"1 column deleted\", columnCount + 1, icebergTable.schema().columns().size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg0NDAzNA=="}, "originalCommit": {"oid": "eaa3bb0e123e063624eb774848ccc4d740c18243"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk1Mjk0OnYy", "diffSide": "RIGHT", "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozODowMlrOGhTFuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozODowMlrOGhTFuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2ODk1NQ==", "bodyText": "It isn't necessary to reload the table. The one in memory is updated when an operation commits.", "url": "https://github.com/apache/iceberg/pull/1097#discussion_r437568955", "createdAt": "2020-06-09T16:38:02Z", "author": {"login": "rdblue"}, "path": "hive/src/test/java/org/apache/iceberg/hive/HiveTableTest.java", "diffHunk": "@@ -240,6 +243,37 @@ public void testExistingTableUpdate() throws TException {\n     Assert.assertEquals(icebergColumns, hiveColumns);\n   }\n \n+  @Test\n+  public void testColumnTypeChangeInMetastore() throws TException {\n+    Table icebergTable = catalog.loadTable(TABLE_IDENTIFIER);\n+\n+    Schema expectedSchema = new Schema(Types.StructType.of(\n+            required(1, \"id\", Types.LongType.get()),\n+            optional(2, \"data\", Types.LongType.get()),\n+            optional(3, \"string\", Types.StringType.get()),\n+            optional(4, \"int\", Types.IntegerType.get())).fields());\n+    // Add columns with different types, then verify we could delete one column in hive metastore\n+    // as hive conf METASTORE_DISALLOW_INCOMPATIBLE_COL_TYPE_CHANGES was set to false. If this was set to true,\n+    // an InvalidOperationException would thrown in method MetaStoreUtils#throwExceptionIfIncompatibleColTypeChange()\n+    icebergTable.updateSchema()\n+            .addColumn(\"data\", Types.LongType.get())\n+            .addColumn(\"string\", Types.StringType.get())\n+            .addColumn(\"int\", Types.IntegerType.get())\n+            .commit();\n+\n+    icebergTable = catalog.loadTable(TABLE_IDENTIFIER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b6e09c73b15991bb8269267027b15899bd7a297"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3878, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}