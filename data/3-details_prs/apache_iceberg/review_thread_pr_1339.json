{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NjY1NDcz", "number": 1339, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzo0MjowOFrOEZ2Ung==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODowNDozNlrOEZ3DHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTM5ODcwOnYy", "diffSide": "RIGHT", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzo0MjowOFrOHC6YBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNzo0MjowOFrOHC6YBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgxNTYyMw==", "bodyText": "Got confused for a second, I think what the comment wants to say is that out of the two types which require truncation (string/binary) ORC only supports string bounds. Can we rephrase the comment?", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r472815623", "createdAt": "2020-08-19T07:42:08Z", "author": {"login": "shardulm94"}, "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -203,7 +227,29 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n       BooleanColumnStatistics booleanStats = (BooleanColumnStatistics) columnStats;\n       max = booleanStats.getTrueCount() > 0;\n     }\n-    return Optional.ofNullable(Conversions.toByteBuffer(column.type(), max));\n+    return Optional.ofNullable(Conversions.toByteBuffer(type, truncateIfNeeded(Bound.UPPER, type, max, metricsMode)));\n+  }\n+\n+  private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n+    // ORC only stores min/max for String columns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690127cf535b05b34f2d47fa352fb51d3df62f86"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTUxNzc0OnYy", "diffSide": "RIGHT", "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwODowNDozNlrOHC7l8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMTowNDo0M1rOHDj3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgzNTU2OA==", "bodyText": "Might be better to check if the Metrics mode != Truncate, seems easier to read that way. Also we have a Precondition later to assert the same, which may be unnecessary if we make the check here.", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r472835568", "createdAt": "2020-08-19T08:04:36Z", "author": {"login": "shardulm94"}, "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -203,7 +227,29 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n       BooleanColumnStatistics booleanStats = (BooleanColumnStatistics) columnStats;\n       max = booleanStats.getTrueCount() > 0;\n     }\n-    return Optional.ofNullable(Conversions.toByteBuffer(column.type(), max));\n+    return Optional.ofNullable(Conversions.toByteBuffer(type, truncateIfNeeded(Bound.UPPER, type, max, metricsMode)));\n+  }\n+\n+  private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n+    // ORC only stores min/max for String columns\n+    if (value == null || metricsMode == MetricsModes.Full.get() || type.typeId() != Type.TypeID.STRING) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "690127cf535b05b34f2d47fa352fb51d3df62f86"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5NTQwNA==", "bodyText": "Done.", "url": "https://github.com/apache/iceberg/pull/1339#discussion_r473495404", "createdAt": "2020-08-20T01:04:43Z", "author": {"login": "edgarRd"}, "path": "orc/src/main/java/org/apache/iceberg/orc/OrcMetrics.java", "diffHunk": "@@ -203,7 +227,29 @@ private static Metrics buildOrcMetrics(final long numOfRows, final TypeDescripti\n       BooleanColumnStatistics booleanStats = (BooleanColumnStatistics) columnStats;\n       max = booleanStats.getTrueCount() > 0;\n     }\n-    return Optional.ofNullable(Conversions.toByteBuffer(column.type(), max));\n+    return Optional.ofNullable(Conversions.toByteBuffer(type, truncateIfNeeded(Bound.UPPER, type, max, metricsMode)));\n+  }\n+\n+  private static Object truncateIfNeeded(Bound bound, Type type, Object value, MetricsMode metricsMode) {\n+    // ORC only stores min/max for String columns\n+    if (value == null || metricsMode == MetricsModes.Full.get() || type.typeId() != Type.TypeID.STRING) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjgzNTU2OA=="}, "originalCommit": {"oid": "690127cf535b05b34f2d47fa352fb51d3df62f86"}, "originalPosition": 189}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3648, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}