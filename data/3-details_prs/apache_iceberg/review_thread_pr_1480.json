{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTcwNzgx", "number": 1480, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxNTo1OVrOElw2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxNjo0NlrOElw3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDMzMDQxOnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/data/parquet/vectorized/TestParquetDictionaryEncodedVectorizedReads.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxNTo1OVrOHVax7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxNTo1OVrOHVax7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMDkxMQ==", "bodyText": "It's strange that this adds the transform and then ignores it. Is there a better way to structure this so that it doesn't require doing this? Maybe just don't call this method in a subclass?", "url": "https://github.com/apache/iceberg/pull/1480#discussion_r492220911", "createdAt": "2020-09-21T17:15:59Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/data/parquet/vectorized/TestParquetDictionaryEncodedVectorizedReads.java", "diffHunk": "@@ -38,7 +39,8 @@\n public class TestParquetDictionaryEncodedVectorizedReads extends TestParquetVectorizedReads {\n \n   @Override\n-  Iterable<GenericData.Record> generateData(Schema schema, int numRecords, long seed, float nullPercentage) {\n+  Iterable<GenericData.Record> generateData(Schema schema, int numRecords, long seed, float nullPercentage,\n+                                            Function<GenericData.Record, GenericData.Record> transform) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65819657b3e27fd77ed489dfce5ebdce0c67bfdb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDMzMzM1OnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoxNjo0NlrOHVazwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjo0MzozN1rOHVsHIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMTM3OA==", "bodyText": "Why change this?", "url": "https://github.com/apache/iceberg/pull/1480#discussion_r492221378", "createdAt": "2020-09-21T17:16:46Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java", "diffHunk": "@@ -99,7 +99,7 @@ public static void assertEqualsBatch(Types.StructType struct, Iterator<Record> e\n         if (checkArrowValidityVector) {\n           ColumnVector columnVector = batch.column(i);\n           ValueVector arrowVector = ((IcebergArrowColumnVector) columnVector).vectorAccessor().getVector();\n-          Assert.assertEquals(\"Nullability doesn't match\", expectedValue == null, arrowVector.isNull(rowId));\n+          Assert.assertFalse(\"Nullability doesn't match\", expectedValue == null ^ arrowVector.isNull(rowId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65819657b3e27fd77ed489dfce5ebdce0c67bfdb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwNDg2NA==", "bodyText": "While stepping through the tests I realized that the case for expectedValue != null wasn't being tested. So I tweaked the check. slightly to cover both the cases.", "url": "https://github.com/apache/iceberg/pull/1480#discussion_r492504864", "createdAt": "2020-09-22T06:43:37Z", "author": {"login": "samarthjain"}, "path": "spark/src/test/java/org/apache/iceberg/spark/data/TestHelpers.java", "diffHunk": "@@ -99,7 +99,7 @@ public static void assertEqualsBatch(Types.StructType struct, Iterator<Record> e\n         if (checkArrowValidityVector) {\n           ColumnVector columnVector = batch.column(i);\n           ValueVector arrowVector = ((IcebergArrowColumnVector) columnVector).vectorAccessor().getVector();\n-          Assert.assertEquals(\"Nullability doesn't match\", expectedValue == null, arrowVector.isNull(rowId));\n+          Assert.assertFalse(\"Nullability doesn't match\", expectedValue == null ^ arrowVector.isNull(rowId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyMTM3OA=="}, "originalCommit": {"oid": "65819657b3e27fd77ed489dfce5ebdce0c67bfdb"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3500, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}