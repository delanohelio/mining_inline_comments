{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzMxNDIx", "number": 1130, "title": "Identity Partitioning: Use PartitionUtil.constantsMap in InputFormat", "bodyText": "", "createdAt": "2020-06-19T23:33:20Z", "url": "https://github.com/apache/iceberg/pull/1130", "merged": true, "mergeCommit": {"oid": "afb6a12027b1eaffafd667a77ade81f7bd0180d3"}, "closed": true, "closedAt": "2020-06-22T21:52:20Z", "author": {"login": "rdsr"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs7sHUAH2gAyNDM3MzMxNDIxOmRjNTQ4ZGViMmJlMTIyMzM5YWI1ZTJlMWVhMzM4MmU5MDJhODNhMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct1bShgBqjM0Njk3MjAwOTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dc548deb2be122339ab5e2e1ea3382e902a83a15", "author": {"user": {"login": "rdsr", "name": "Ratandeep Ratti"}}, "url": "https://github.com/apache/iceberg/commit/dc548deb2be122339ab5e2e1ea3382e902a83a15", "committedDate": "2020-06-19T23:31:20Z", "message": "Identity Partitioning: Use partitionsMap in InputFormat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzgwMzM5", "url": "https://github.com/apache/iceberg/pull/1130#pullrequestreview-434380339", "createdAt": "2020-06-19T23:35:27Z", "commit": {"oid": "dc548deb2be122339ab5e2e1ea3382e902a83a15"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzozNToyN1rOGmjUfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzozNToyN1rOGmjUfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3Nzc1OQ==", "bodyText": "I was hesitant to use the converter from TableScanIterable as it seems it might only supports Avro. Also we might require different maps for Hive and Pig", "url": "https://github.com/apache/iceberg/pull/1130#discussion_r443077759", "createdAt": "2020-06-19T23:35:27Z", "author": {"login": "rdsr"}, "path": "mr/src/main/java/org/apache/iceberg/mr/mapreduce/IcebergInputFormat.java", "diffHunk": "@@ -348,49 +342,38 @@ public void close() throws IOException {\n       currentIterator.close();\n     }\n \n-    private static Map<String, Integer> buildNameToPos(Schema expectedSchema) {\n-      Map<String, Integer> nameToPos = Maps.newHashMap();\n-      for (int pos = 0; pos < expectedSchema.asStruct().fields().size(); pos++) {\n-        Types.NestedField field = expectedSchema.asStruct().fields().get(pos);\n-        nameToPos.put(field.name(), pos);\n-      }\n-      return nameToPos;\n-    }\n-\n-    private CloseableIterator<T> open(FileScanTask currentTask) {\n-      DataFile file = currentTask.file();\n-      // schema of rows returned by readers\n-      PartitionSpec spec = currentTask.spec();\n-      Set<Integer> idColumns =  Sets.intersection(spec.identitySourceIds(), TypeUtil.getProjectedIds(expectedSchema));\n-      boolean hasJoinedPartitionColumns = !idColumns.isEmpty();\n+    private CloseableIterator<T> open(FileScanTask task) {\n+      PartitionSpec spec = task.spec();\n+      Set<Integer> idColumns = spec.identitySourceIds();\n+      Schema partitionSchema = TypeUtil.select(expectedSchema, idColumns);\n+      boolean projectsIdentityPartitionColumns = !partitionSchema.columns().isEmpty();\n \n       CloseableIterable<T> iterable;\n-      if (hasJoinedPartitionColumns) {\n-        Schema readDataSchema = TypeUtil.selectNot(expectedSchema, idColumns);\n-        Schema identityPartitionSchema = TypeUtil.select(expectedSchema, idColumns);\n-        iterable = CloseableIterable.transform(open(currentTask, readDataSchema),\n-            row -> withIdentityPartitionColumns(row, identityPartitionSchema, spec, file.partition()));\n+      if (projectsIdentityPartitionColumns) {\n+        //TODO: seems like we have to specify a converter to convert the partition values", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc548deb2be122339ab5e2e1ea3382e902a83a15"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ec3fccc76ba2122a268506ae2463bc6b4183c98", "author": {"user": {"login": "rdsr", "name": "Ratandeep Ratti"}}, "url": "https://github.com/apache/iceberg/commit/0ec3fccc76ba2122a268506ae2463bc6b4183c98", "committedDate": "2020-06-22T18:47:02Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05257ce8906a95488973d4632a939e7e14ef5e12", "author": {"user": {"login": "rdsr", "name": "Ratandeep Ratti"}}, "url": "https://github.com/apache/iceberg/commit/05257ce8906a95488973d4632a939e7e14ef5e12", "committedDate": "2020-06-22T18:07:42Z", "message": "Address review comments"}, "afterCommit": {"oid": "0ec3fccc76ba2122a268506ae2463bc6b4183c98", "author": {"user": {"login": "rdsr", "name": "Ratandeep Ratti"}}, "url": "https://github.com/apache/iceberg/commit/0ec3fccc76ba2122a268506ae2463bc6b4183c98", "committedDate": "2020-06-22T18:47:02Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4554, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}