{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTQ0ODUx", "number": 1862, "title": "Spark: Implement copy-on-write DELETE", "bodyText": "This PR adds the Iceberg part to support copy-on-write DELETE in Spark.", "createdAt": "2020-12-02T16:40:49Z", "url": "https://github.com/apache/iceberg/pull/1862", "merged": true, "mergeCommit": {"oid": "af5f60068c75195c0bb41ca85065e05282fe2fe8"}, "closed": true, "closedAt": "2020-12-04T19:29:00Z", "author": {"login": "aokolnychyi"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiRU0PgFqTU0MzAyODIxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi7qLqAH2gAyNTMxMTQ0ODUxOmJkOWE5YjMzZDcyMWM2NDAwZjQxOGQ3NGUxZDc4Nzk2ZjZiNGM3Zjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDI4MjEx", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543028211", "createdAt": "2020-12-02T16:41:47Z", "commit": {"oid": "225167896ff7c3b7c4c59ff7998306673dbf9904"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo0MTo0N1rOH9kDKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo0MTo0N1rOH9kDKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxNTgxNw==", "bodyText": "Well, I wanted it to be write.delete.isolation-level but we have no way to find out which operation is being performed in the merge builder.", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534315817", "createdAt": "2020-12-02T16:41:47Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "diffHunk": "@@ -140,4 +140,10 @@ private TableProperties() {\n \n   public static final String GC_ENABLED = \"gc.enabled\";\n   public static final boolean GC_ENABLED_DEFAULT = true;\n+\n+  public static final String WRITE_ISOLATION_LEVEL = \"write.isolation-level\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225167896ff7c3b7c4c59ff7998306673dbf9904"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "225167896ff7c3b7c4c59ff7998306673dbf9904", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/225167896ff7c3b7c4c59ff7998306673dbf9904", "committedDate": "2020-12-02T16:39:30Z", "message": "Spark: Implement copy-on-write DELETE"}, "afterCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/8ecea59d1035bcc73931cb923314bf7db4392b9c", "committedDate": "2020-12-02T16:42:04Z", "message": "Spark: Implement copy-on-write DELETE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDI5MjE4", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543029218", "createdAt": "2020-12-02T16:42:52Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo0Mjo1MlrOH9kGPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNjo0Mjo1MlrOH9kGPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDMxNjYwNA==", "bodyText": "Same here. I wanted it to be write.delete.mode.", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534316604", "createdAt": "2020-12-02T16:42:52Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/TableProperties.java", "diffHunk": "@@ -140,4 +140,10 @@ private TableProperties() {\n \n   public static final String GC_ENABLED = \"gc.enabled\";\n   public static final boolean GC_ENABLED_DEFAULT = true;\n+\n+  public static final String WRITE_ISOLATION_LEVEL = \"write.isolation-level\";\n+  public static final String WRITE_ISOLATION_LEVEL_DEFAULT = \"serializable\";\n+\n+  public static final String WRITE_ROW_LEVEL_MODE = \"write.row-level.mode\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQyNTQ0", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543242544", "createdAt": "2020-12-02T21:15:21Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNToyMVrOH9ubzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNToyMVrOH9ubzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NTk2NQ==", "bodyText": "Does this need to be in api? I think it is only used to parse a string and hold the result. For now, I would move it to core to avoid exposing it too widely.\nFYI @jacques-n: isolation level for a single table.", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534485965", "createdAt": "2020-12-02T21:15:21Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/IsolationLevel.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+/**\n+ * An isolation level in a table.\n+ * <p>\n+ * Two isolation levels are supported: serializable and snapshot isolation. Both of them provide\n+ * a read consistent view of the table to all operations and allow readers to see only already\n+ * committed data. While serializable is the strongest isolation level in databases,\n+ * snapshot isolation is beneficial for environments with many concurrent writers.\n+ * <p>\n+ * The serializable isolation level guarantees that an ongoing UPDATE/DELETE/MERGE operation\n+ * fails if a concurrent transaction commits a new file that might contain rows matching\n+ * the condition used in UPDATE/DELETE/MERGE. For example, if there is an ongoing update\n+ * on a subset of rows and a concurrent transaction adds a new file with records\n+ * that potentially match the update condition, the update operation must fail under\n+ * the serializable isolation but can still commit under the snapshot isolation.\n+ */\n+public enum IsolationLevel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDA4MTgz", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543408183", "createdAt": "2020-12-03T03:07:26Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzowNzoyNlrOH93dRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzowNzoyNlrOH93dRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYzMzc5Ng==", "bodyText": "Shouldn't this return writeInfo.options()?", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534633796", "createdAt": "2020-12-03T03:07:26Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkMergeBuilder.java", "diffHunk": "@@ -0,0 +1,110 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.spark.source;\n+\n+import java.util.HashMap;\n+import java.util.Locale;\n+import java.util.Map;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.iceberg.IsolationLevel;\n+import org.apache.iceberg.Snapshot;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.TableProperties;\n+import org.apache.spark.sql.SparkSession;\n+import org.apache.spark.sql.connector.iceberg.write.MergeBuilder;\n+import org.apache.spark.sql.connector.read.Scan;\n+import org.apache.spark.sql.connector.read.ScanBuilder;\n+import org.apache.spark.sql.connector.write.LogicalWriteInfo;\n+import org.apache.spark.sql.connector.write.WriteBuilder;\n+import org.apache.spark.sql.util.CaseInsensitiveStringMap;\n+\n+class SparkMergeBuilder implements MergeBuilder {\n+\n+  private final SparkSession spark;\n+  private final Table table;\n+  private final LogicalWriteInfo writeInfo;\n+  private final IsolationLevel isolationLevel;\n+\n+  // lazy vars\n+  private ScanBuilder lazyScanBuilder;\n+  private Scan configuredScan;\n+  private WriteBuilder lazyWriteBuilder;\n+\n+  SparkMergeBuilder(SparkSession spark, Table table, LogicalWriteInfo writeInfo) {\n+    this.spark = spark;\n+    this.table = table;\n+    this.writeInfo = writeInfo;\n+\n+    String isolationLevelAsString = table.properties().getOrDefault(\n+        TableProperties.WRITE_ISOLATION_LEVEL,\n+        TableProperties.WRITE_ISOLATION_LEVEL_DEFAULT\n+    ).toUpperCase(Locale.ROOT);\n+    this.isolationLevel = IsolationLevel.valueOf(isolationLevelAsString);\n+  }\n+\n+  @Override\n+  public ScanBuilder asScanBuilder() {\n+    return scanBuilder();\n+  }\n+\n+  private ScanBuilder scanBuilder() {\n+    if (lazyScanBuilder == null) {\n+      SparkScanBuilder scanBuilder = new SparkScanBuilder(spark, table, scanOptions()) {\n+        public Scan build() {\n+          Scan scan = super.buildMergeScan();\n+          SparkMergeBuilder.this.configuredScan = scan;\n+          return scan;\n+        }\n+      };\n+      // ignore residuals to ensure we read full files\n+      lazyScanBuilder = scanBuilder.ignoreResiduals();\n+    }\n+\n+    return lazyScanBuilder;\n+  }\n+\n+  private CaseInsensitiveStringMap scanOptions() {\n+    Snapshot currentSnapshot = table.currentSnapshot();\n+\n+    if (currentSnapshot == null) {\n+      return CaseInsensitiveStringMap.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDA5NDU3", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543409457", "createdAt": "2020-12-03T03:11:05Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzoxMTowNVrOH93h3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzoxMTowNVrOH93h3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYzNDk3NQ==", "bodyText": "Are v2 references committed in Spark?", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534634975", "createdAt": "2020-12-03T03:11:05Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -160,6 +167,43 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n     return new SparkWriteBuilder(sparkSession(), icebergTable, info);\n   }\n \n+  @Override\n+  public MergeBuilder newMergeBuilder(LogicalWriteInfo info) {\n+    String mode = icebergTable.properties().getOrDefault(WRITE_ROW_LEVEL_MODE, WRITE_ROW_LEVEL_MODE_DEFAULT);\n+    ValidationException.check(mode.equals(\"copy-on-write\"), \"Unsupported row operations mode: %s\", mode);\n+    return new SparkMergeBuilder(sparkSession(), icebergTable, info);\n+  }\n+\n+  @Override\n+  public boolean canDeleteWhere(Filter[] filters) {\n+    if (table().specs().size() > 1) {\n+      // cannot guarantee a metadata delete will be successful if we have multiple specs\n+      return false;\n+    }\n+\n+    Set<Integer> identitySourceIds = table().spec().identitySourceIds();\n+    Schema schema = table().schema();\n+\n+    for (Filter filter : filters) {\n+      // return false if the filter requires rewrite or if we cannot translate the filter\n+      if (requiresRewrite(filter, schema, identitySourceIds) || SparkFilters.convert(filter) == null) {\n+        return false;\n+      }\n+    }\n+\n+    return true;\n+  }\n+\n+  private boolean requiresRewrite(Filter filter, Schema schema, Set<Integer> identitySourceIds) {\n+    // TODO: handle dots correctly via v2references", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDEwODM0", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543410834", "createdAt": "2020-12-03T03:15:16Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzoxNToxNlrOH93nLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzoxNToxNlrOH93nLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYzNjMzNQ==", "bodyText": "We may want to add another TODO to detect more cases that don't require rewrites.", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r534636335", "createdAt": "2020-12-03T03:15:16Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -160,6 +167,43 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n     return new SparkWriteBuilder(sparkSession(), icebergTable, info);\n   }\n \n+  @Override\n+  public MergeBuilder newMergeBuilder(LogicalWriteInfo info) {\n+    String mode = icebergTable.properties().getOrDefault(WRITE_ROW_LEVEL_MODE, WRITE_ROW_LEVEL_MODE_DEFAULT);\n+    ValidationException.check(mode.equals(\"copy-on-write\"), \"Unsupported row operations mode: %s\", mode);\n+    return new SparkMergeBuilder(sparkSession(), icebergTable, info);\n+  }\n+\n+  @Override\n+  public boolean canDeleteWhere(Filter[] filters) {\n+    if (table().specs().size() > 1) {\n+      // cannot guarantee a metadata delete will be successful if we have multiple specs\n+      return false;\n+    }\n+\n+    Set<Integer> identitySourceIds = table().spec().identitySourceIds();\n+    Schema schema = table().schema();\n+\n+    for (Filter filter : filters) {\n+      // return false if the filter requires rewrite or if we cannot translate the filter\n+      if (requiresRewrite(filter, schema, identitySourceIds) || SparkFilters.convert(filter) == null) {\n+        return false;\n+      }\n+    }\n+\n+    return true;\n+  }\n+\n+  private boolean requiresRewrite(Filter filter, Schema schema, Set<Integer> identitySourceIds) {\n+    // TODO: handle dots correctly via v2references", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNDExMDYw", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543411060", "createdAt": "2020-12-03T03:15:49Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNzkxMDUw", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-543791050", "createdAt": "2020-12-03T10:04:00Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDowNDowMFrOH-QVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDowNDowMFrOH-QVqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0MTQ1MA==", "bodyText": "We could set operation inside info.options() in RewriteDelete and pass it here so that we can support table properties like write.delete.mode instead of write.row-level.mode. Thoughts, @rdblue?", "url": "https://github.com/apache/iceberg/pull/1862#discussion_r535041450", "createdAt": "2020-12-03T10:04:00Z", "author": {"login": "aokolnychyi"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -160,6 +167,43 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n     return new SparkWriteBuilder(sparkSession(), icebergTable, info);\n   }\n \n+  @Override\n+  public MergeBuilder newMergeBuilder(LogicalWriteInfo info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0Mzc5MjUx", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-544379251", "createdAt": "2020-12-03T20:13:49Z", "commit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9731a2fe7fde5ccccf1c1f18b8b9018763060e50", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/9731a2fe7fde5ccccf1c1f18b8b9018763060e50", "committedDate": "2020-12-04T14:19:09Z", "message": "Spark: Implement copy-on-write DELETE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f9001a60091e2c8601d3d17ad81469fa01f138", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/96f9001a60091e2c8601d3d17ad81469fa01f138", "committedDate": "2020-12-04T14:19:49Z", "message": "Review comments and more tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ecea59d1035bcc73931cb923314bf7db4392b9c", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/8ecea59d1035bcc73931cb923314bf7db4392b9c", "committedDate": "2020-12-02T16:42:04Z", "message": "Spark: Implement copy-on-write DELETE"}, "afterCommit": {"oid": "96f9001a60091e2c8601d3d17ad81469fa01f138", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/96f9001a60091e2c8601d3d17ad81469fa01f138", "committedDate": "2020-12-04T14:19:49Z", "message": "Review comments and more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "912a761447e4c4d139e922ce679a4836dbc1b57d", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/912a761447e4c4d139e922ce679a4836dbc1b57d", "committedDate": "2020-12-04T16:11:43Z", "message": "Refine test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2baa4af4e9ab1ff2fbcdaf5a7996989795e7f624", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/2baa4af4e9ab1ff2fbcdaf5a7996989795e7f624", "committedDate": "2020-12-04T16:13:36Z", "message": "Fix style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MTYwOTU0", "url": "https://github.com/apache/iceberg/pull/1862#pullrequestreview-545160954", "createdAt": "2020-12-04T17:34:16Z", "commit": {"oid": "2baa4af4e9ab1ff2fbcdaf5a7996989795e7f624"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd9a9b33d721c6400f418d74e1d78796f6b4c7f9", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/bd9a9b33d721c6400f418d74e1d78796f6b4c7f9", "committedDate": "2020-12-04T18:01:08Z", "message": "Ignore concurrency tests for Hadoop"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3489, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}