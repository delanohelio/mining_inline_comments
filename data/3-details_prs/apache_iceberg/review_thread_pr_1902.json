{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODgwMTE3", "number": 1902, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNjozOVrOFDc6Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToyNzoyOVrOFDsNlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MTYzNjc1OnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNjozOVrOIDGz8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMjoyNjozOVrOIDGz8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDEyODI0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating or modifying (alter/insert etc) the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:\n          \n          \n            \n            The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating or modifying (altering, inserting etc.) the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:", "url": "https://github.com/apache/iceberg/pull/1902#discussion_r540128243", "createdAt": "2020-12-10T12:26:39Z", "author": {"login": "massdosage"}, "path": "site/docs/hive.md", "diffHunk": "@@ -57,7 +57,7 @@ Iceberg tables created using `HiveCatalog` are automatically registered with Hiv\n The first step is to create an Iceberg table using the Spark/Java/Python API and `HiveCatalog`. For the purposes of this documentation we will assume that the table is called `table_b` and that the table location is `s3://some_path/table_b`. In order for Iceberg to correctly set up the Hive table for querying some configuration values need to be set, the two options for this are described below - you can use either or the other depending on your use case.\n \n ##### Hive Configuration\n-The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:\n+The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating or modifying (alter/insert etc) the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd17fb1527c4d3af3c5706d1d82b625510e40c3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDE0NDIwOnYy", "diffSide": "RIGHT", "path": "site/docs/hive.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToyNzoyOVrOIDeDZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToyNzoyOVrOIDeDZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwOTAyOA==", "bodyText": "Should we set the table property when a table is created from Hive with this enabled? That way it would take effect for all engines by default.", "url": "https://github.com/apache/iceberg/pull/1902#discussion_r540509028", "createdAt": "2020-12-10T21:27:29Z", "author": {"login": "rdblue"}, "path": "site/docs/hive.md", "diffHunk": "@@ -57,7 +57,7 @@ Iceberg tables created using `HiveCatalog` are automatically registered with Hiv\n The first step is to create an Iceberg table using the Spark/Java/Python API and `HiveCatalog`. For the purposes of this documentation we will assume that the table is called `table_b` and that the table location is `s3://some_path/table_b`. In order for Iceberg to correctly set up the Hive table for querying some configuration values need to be set, the two options for this are described below - you can use either or the other depending on your use case.\n \n ##### Hive Configuration\n-The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:\n+The value `iceberg.engine.hive.enabled` needs to be set to `true` and added to the Hive configuration file on the classpath of the application creating or modifying (altering, inserting etc.) the table. This can be done by modifying the relevant `hive-site.xml`. Alternatively this can be done programmatically like so:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f716f6ac05288ea804f2461e3fbf95b0baf603a9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3313, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}