{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NjUyOTc1", "number": 1919, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODowN1rOFET2ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQyMzozMzoxMFrOFEjABA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDYzOTM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/PartitionSpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODowN1rOIEY-MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODowN1rOIEY-MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NDM1Mg==", "bodyText": "Needed to add fields using Transform, not a string.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r541474352", "createdAt": "2020-12-12T01:58:07Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/PartitionSpec.java", "diffHunk": "@@ -480,9 +481,13 @@ Builder add(int sourceId, String name, String transform) {\n \n     Builder add(int sourceId, int fieldId, String name, String transform) {\n       Types.NestedField column = schema.findField(sourceId);\n-      checkAndAddPartitionName(name, column.fieldId());\n       Preconditions.checkNotNull(column, \"Cannot find source column: %s\", sourceId);\n-      fields.add(new PartitionField(sourceId, fieldId, name, Transforms.fromString(column.type(), transform)));\n+      return add(sourceId, fieldId, name, Transforms.fromString(column.type(), transform));\n+    }\n+\n+    Builder add(int sourceId, int fieldId, String name, Transform<?, ?> transform) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d39ee11d4066100bb8d1cf9e5899dec2d37635d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDYzOTcyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/PartitionSpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODoyN1rOIEY-Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODoyN1rOIEY-Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NDM5OQ==", "bodyText": "Needed to allow identity partitions that have been deleted.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r541474399", "createdAt": "2020-12-12T01:58:27Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/PartitionSpec.java", "diffHunk": "@@ -463,8 +464,8 @@ public Builder truncate(String sourceName, int width) {\n     }\n \n     public Builder alwaysNull(String sourceName, String targetName) {\n-      checkAndAddPartitionName(targetName);\n       Types.NestedField sourceColumn = findSourceColumn(sourceName);\n+      checkAndAddPartitionName(targetName, sourceColumn.fieldId()); // can duplicate a source column name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d39ee11d4066100bb8d1cf9e5899dec2d37635d"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDY0MDE4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/UpdatePartitionSpec.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODo0NVrOIEY-kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1ODo0NVrOIEY-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NDQ1MQ==", "bodyText": "Will add Javadoc for these methods after there is agreement on this API.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r541474451", "createdAt": "2020-12-12T01:58:45Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/UpdatePartitionSpec.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.exceptions.CommitFailedException;\n+import org.apache.iceberg.expressions.Term;\n+\n+/**\n+ * API for partition spec evolution.\n+ * <p>\n+ * When committing, these changes will be applied to the current table metadata. Commit conflicts\n+ * will not be resolved and will result in a {@link CommitFailedException}.\n+ */\n+public interface UpdatePartitionSpec extends PendingUpdate<PartitionSpec> {\n+  UpdatePartitionSpec addField(String sourceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d39ee11d4066100bb8d1cf9e5899dec2d37635d"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMDY0MTQ1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/transforms/PartitionSpecVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1OTozMVrOIEY_Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQwMTo1OTozMVrOIEY_Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTQ3NDU5OA==", "bodyText": "Refactored this out of the method above to visit individual fields, for setting default partition names based on the transform.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r541474598", "createdAt": "2020-12-12T01:59:31Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/transforms/PartitionSpecVisitor.java", "diffHunk": "@@ -113,37 +113,43 @@ default T unknown(int fieldId, String sourceName, int sourceId, String transform\n    * @deprecated this will be removed in 0.11.0; use {@link #visit(PartitionSpec, PartitionSpecVisitor)} instead.\n    */\n   @Deprecated\n-  @SuppressWarnings(\"checkstyle:CyclomaticComplexity\")\n   static <R> List<R> visit(Schema schema, PartitionSpec spec, PartitionSpecVisitor<R> visitor) {\n     List<R> results = Lists.newArrayListWithExpectedSize(spec.fields().size());\n \n     for (PartitionField field : spec.fields()) {\n-      String sourceName = schema.findColumnName(field.sourceId());\n-      Transform<?, ?> transform = field.transform();\n-\n-      if (transform instanceof Identity) {\n-        results.add(visitor.identity(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform instanceof Bucket) {\n-        int numBuckets = ((Bucket<?>) transform).numBuckets();\n-        results.add(visitor.bucket(field.fieldId(), sourceName, field.sourceId(), numBuckets));\n-      } else if (transform instanceof Truncate) {\n-        int width = ((Truncate<?>) transform).width();\n-        results.add(visitor.truncate(field.fieldId(), sourceName, field.sourceId(), width));\n-      } else if (transform == Dates.YEAR || transform == Timestamps.YEAR) {\n-        results.add(visitor.year(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform == Dates.MONTH || transform == Timestamps.MONTH) {\n-        results.add(visitor.month(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform == Dates.DAY || transform == Timestamps.DAY) {\n-        results.add(visitor.day(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform == Timestamps.HOUR) {\n-        results.add(visitor.hour(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform instanceof VoidTransform) {\n-        results.add(visitor.alwaysNull(field.fieldId(), sourceName, field.sourceId()));\n-      } else if (transform instanceof UnknownTransform) {\n-        results.add(visitor.unknown(field.fieldId(), sourceName, field.sourceId(), transform.toString()));\n-      }\n+      results.add(visit(schema, field, visitor));\n     }\n \n     return results;\n   }\n+\n+  static <R> R visit(Schema schema, PartitionField field, PartitionSpecVisitor<R> visitor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d39ee11d4066100bb8d1cf9e5899dec2d37635d"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzEyMDY4OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQyMzozMzoxMFrOIEs-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo1MToxOFrOIGVZRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgwMjIyMw==", "bodyText": "Maybe add a test for .removeField(\"myField\").addField(\"myField\")? What's the expected outcome for that?", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r541802223", "createdAt": "2020-12-12T23:33:10Z", "author": {"login": "johnclara"}, "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.transforms.Transforms;\n+import org.apache.iceberg.types.Types;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.day;\n+import static org.apache.iceberg.expressions.Expressions.hour;\n+import static org.apache.iceberg.expressions.Expressions.month;\n+import static org.apache.iceberg.expressions.Expressions.ref;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+import static org.apache.iceberg.expressions.Expressions.year;\n+\n+public class TestUpdatePartitionSpecV1 {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0e9dcd6aa9655619ff8855b377393ac7943bb1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjYzNjU2MQ==", "bodyText": "The expected result of any combination should be the same as if the two were done as separate changes, except for cases that signal some problem. For example, renaming a field and deleting the original field shows that there are two conflicting changes, even though we could apply one and then fail the second.\nI agree that this should have a test for that case, as well as possibly some additional checks for consistency with rename.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r542636561", "createdAt": "2020-12-14T18:48:44Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.transforms.Transforms;\n+import org.apache.iceberg.types.Types;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.day;\n+import static org.apache.iceberg.expressions.Expressions.hour;\n+import static org.apache.iceberg.expressions.Expressions.month;\n+import static org.apache.iceberg.expressions.Expressions.ref;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+import static org.apache.iceberg.expressions.Expressions.year;\n+\n+public class TestUpdatePartitionSpecV1 {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgwMjIyMw=="}, "originalCommit": {"oid": "a0e9dcd6aa9655619ff8855b377393ac7943bb1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcxNzUzMw==", "bodyText": "Cool, so would order matter?\nis .removeField(\"myField\").addField(\"myField\") different from .addField(\"myField\").removeField(\"myField\")?", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r542717533", "createdAt": "2020-12-14T20:01:06Z", "author": {"login": "johnclara"}, "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.transforms.Transforms;\n+import org.apache.iceberg.types.Types;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.day;\n+import static org.apache.iceberg.expressions.Expressions.hour;\n+import static org.apache.iceberg.expressions.Expressions.month;\n+import static org.apache.iceberg.expressions.Expressions.ref;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+import static org.apache.iceberg.expressions.Expressions.year;\n+\n+public class TestUpdatePartitionSpecV1 {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgwMjIyMw=="}, "originalCommit": {"oid": "a0e9dcd6aa9655619ff8855b377393ac7943bb1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjg0NDUwNA==", "bodyText": "Yes. Imagine I have partition shard=bucket(id, 16) and ran .removeField(\"shard\").addField(\"shard\", bucket(id, 32)). That replaces a 16-bin bucket scheme with a 32-bin bucket scheme. The opposite would add a bucket partition and then remove it, which looks like a mistake. So the second one would be rejected, the first would be allowed.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r542844504", "createdAt": "2020-12-14T22:00:30Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.transforms.Transforms;\n+import org.apache.iceberg.types.Types;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.day;\n+import static org.apache.iceberg.expressions.Expressions.hour;\n+import static org.apache.iceberg.expressions.Expressions.month;\n+import static org.apache.iceberg.expressions.Expressions.ref;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+import static org.apache.iceberg.expressions.Expressions.year;\n+\n+public class TestUpdatePartitionSpecV1 {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgwMjIyMw=="}, "originalCommit": {"oid": "a0e9dcd6aa9655619ff8855b377393ac7943bb1a"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxMjkwMQ==", "bodyText": "I added quite a few more test cases for situations like this and improved error messages. Now, if you attempt to rename a field that was added you get an error that clearly says you can't rename an added field, instead of an error that says the field is unknown. Same thing for combinations of adds and deletes.\nI also added a check to not allow adding duplicate time columns, like days(\"ts\") and hours(\"ts\"). That's allowed if the partition already existed, but not when adding partition fields.", "url": "https://github.com/apache/iceberg/pull/1919#discussion_r543512901", "createdAt": "2020-12-15T16:51:18Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestUpdatePartitionSpecV1.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.apache.iceberg.relocated.com.google.common.collect.ImmutableList;\n+import org.apache.iceberg.transforms.Transforms;\n+import org.apache.iceberg.types.Types;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.day;\n+import static org.apache.iceberg.expressions.Expressions.hour;\n+import static org.apache.iceberg.expressions.Expressions.month;\n+import static org.apache.iceberg.expressions.Expressions.ref;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+import static org.apache.iceberg.expressions.Expressions.year;\n+\n+public class TestUpdatePartitionSpecV1 {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTgwMjIyMw=="}, "originalCommit": {"oid": "a0e9dcd6aa9655619ff8855b377393ac7943bb1a"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3328, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}