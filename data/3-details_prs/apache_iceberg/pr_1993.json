{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1OTc1NjIz", "number": 1993, "title": "Add additional partition spec update tests", "bodyText": "Add some of additional tests (from #922) for partition spec updates.", "createdAt": "2020-12-28T07:40:44Z", "url": "https://github.com/apache/iceberg/pull/1993", "merged": true, "mergeCommit": {"oid": "767d551de787a81bf68356978df43ef2d18239d0"}, "closed": true, "closedAt": "2020-12-29T10:02:09Z", "author": {"login": "jun-he"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqhDEAAH2gAyNTQ1OTc1NjIzOjRmNmIzZDYwNTAyODc0M2FmZTdjYTRhZDg1OWNkMWIwNjg3OGRmODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdq3yYoAFqTU1OTQ2MDMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f6b3d605028743afe7ca4ad859cd1b06878df89", "author": {"user": {"login": "jun-he", "name": null}}, "url": "https://github.com/apache/iceberg/commit/4f6b3d605028743afe7ca4ad859cd1b06878df89", "committedDate": "2020-12-28T07:32:16Z", "message": "add additional partition spec update tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjUxMDU1", "url": "https://github.com/apache/iceberg/pull/1993#pullrequestreview-559251055", "createdAt": "2020-12-28T18:18:00Z", "commit": {"oid": "4f6b3d605028743afe7ca4ad859cd1b06878df89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODoxODowMFrOIL_GNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODoxODowMFrOIL_GNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzOTAzMQ==", "bodyText": "We don't use the return value of the ++ operator because it is not obvious which value is returned. Could you move these to separate lines?", "url": "https://github.com/apache/iceberg/pull/1993#discussion_r549439031", "createdAt": "2020-12-28T18:18:00Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/TestTableUpdatePartitionSpec.java", "diffHunk": "@@ -0,0 +1,182 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg;\n+\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import static org.apache.iceberg.expressions.Expressions.bucket;\n+import static org.apache.iceberg.expressions.Expressions.truncate;\n+\n+@RunWith(Parameterized.class)\n+public class TestTableUpdatePartitionSpec extends TableTestBase {\n+\n+  @Parameterized.Parameters\n+  public static Object[][] parameters() {\n+    return new Object[][] {\n+        new Object[] { 1 },\n+        new Object[] { 2 },\n+    };\n+  }\n+\n+  public TestTableUpdatePartitionSpec(int formatVersion) {\n+    super(formatVersion);\n+  }\n+\n+  @Before\n+  public void verifyInitialSpec() {\n+    PartitionSpec initialSpec = PartitionSpec.builderFor(table.schema()).bucket(\"data\", 16).build();\n+    Assert.assertEquals(\"Should use the expected initial spec\", initialSpec, table.spec());\n+    Assert.assertEquals(1000, table.spec().lastAssignedFieldId());\n+    Assert.assertEquals(0, table.spec().specId());\n+  }\n+\n+  @Test\n+  public void testCommitUpdatedSpec() {\n+    table.updateSpec()\n+        .addField(bucket(\"id\", 8))\n+        .commit();\n+\n+    PartitionSpec evolvedSpec = PartitionSpec.builderFor(table.schema())\n+        .withSpecId(1)\n+        .bucket(\"data\", 16)\n+        .bucket(\"id\", 8, \"id_bucket_8\")\n+        .build();\n+    Assert.assertEquals(\"Should append a partition field to the spec\", evolvedSpec, table.spec());\n+    Assert.assertEquals(1001, table.spec().lastAssignedFieldId());\n+\n+    table.updateSpec()\n+        .removeField(\"id_bucket_8\")\n+        .removeField(\"data_bucket\")\n+        .addField(truncate(\"data\", 8))\n+        .commit();\n+\n+    V1Assert.assertEquals(\"Should soft delete id and data buckets\", PartitionSpec.builderFor(table.schema())\n+        .withSpecId(2)\n+        .alwaysNull(\"data\", \"data_bucket\")\n+        .alwaysNull(\"id\", \"id_bucket_8\")\n+        .truncate(\"data\", 8, \"data_trunc_8\")\n+        .build(), table.spec());\n+\n+    V2Assert.assertEquals(\"Should hard delete id and data buckets\", PartitionSpec.builderFor(table.schema())\n+        .withSpecId(2)\n+        .add(2, 1002, \"data_trunc_8\", \"truncate[8]\")\n+        .build(), table.spec());\n+\n+    Assert.assertEquals(1002, table.spec().lastAssignedFieldId());\n+  }\n+\n+  @Test\n+  public void testNoopCommit() {\n+    TableMetadata current = table.ops().current();\n+    int currentVersion = TestTables.metadataVersion(\"test\");\n+\n+    // no-op commit due to no-op\n+    table.updateSpec().commit();\n+    TableMetadata updated = table.ops().current();\n+    Integer updatedVersion = TestTables.metadataVersion(\"test\");\n+    Assert.assertEquals(current, updated);\n+    Assert.assertEquals(++currentVersion, updatedVersion.intValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f6b3d605028743afe7ca4ad859cd1b06878df89"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjUzNDQy", "url": "https://github.com/apache/iceberg/pull/1993#pullrequestreview-559253442", "createdAt": "2020-12-28T18:21:48Z", "commit": {"oid": "4f6b3d605028743afe7ca4ad859cd1b06878df89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "753be6ad3a49740011d7c705aba46225a6914fcf", "author": {"user": {"login": "jun-he", "name": null}}, "url": "https://github.com/apache/iceberg/commit/753be6ad3a49740011d7c705aba46225a6914fcf", "committedDate": "2020-12-29T08:17:36Z", "message": "address the review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NDYwMzIx", "url": "https://github.com/apache/iceberg/pull/1993#pullrequestreview-559460321", "createdAt": "2020-12-29T10:01:52Z", "commit": {"oid": "753be6ad3a49740011d7c705aba46225a6914fcf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3335, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}