{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NDg5MjE5", "number": 840, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzo1MzowNFrODnvcng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzo1MzowNFrODnvcng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTk4NDMwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/types/TypeUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzo1MzowNFrOF16WcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNjoxMTozMVrOF2JsVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA3NDg2NA==", "bodyText": "nit: would be better to name the two as preVisitField(...)  & postVisitField(...) ?", "url": "https://github.com/apache/iceberg/pull/840#discussion_r392074864", "createdAt": "2020-03-13T07:53:04Z", "author": {"login": "openinx"}, "path": "api/src/main/java/org/apache/iceberg/types/TypeUtil.java", "diffHunk": "@@ -190,7 +189,11 @@ public static boolean isPromotionAllowed(Type from, Type.PrimitiveType to) {\n   }\n \n   public static class SchemaVisitor<T> {\n-    private final Deque<Integer> fieldIds = Lists.newLinkedList();\n+    public void beforeField(Types.NestedField field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e856545c0e71579fee9c67b110cb9d84d7836db9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyNjIzMQ==", "bodyText": "Why do you prefer those names? I think they capture the same information.\nI'm going to go ahead and merge this since @chenjunjiedada is hitting the problem, but we can rename these later if we think that there is value.", "url": "https://github.com/apache/iceberg/pull/840#discussion_r392326231", "createdAt": "2020-03-13T16:11:31Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/types/TypeUtil.java", "diffHunk": "@@ -190,7 +189,11 @@ public static boolean isPromotionAllowed(Type from, Type.PrimitiveType to) {\n   }\n \n   public static class SchemaVisitor<T> {\n-    private final Deque<Integer> fieldIds = Lists.newLinkedList();\n+    public void beforeField(Types.NestedField field) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA3NDg2NA=="}, "originalCommit": {"oid": "e856545c0e71579fee9c67b110cb9d84d7836db9"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2841, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}