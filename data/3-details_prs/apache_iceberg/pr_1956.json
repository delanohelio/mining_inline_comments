{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjgxMDcy", "number": 1956, "title": "Flink: Upgrade version from 1.11.0 to 1.12.1", "bodyText": "", "createdAt": "2020-12-18T04:34:44Z", "url": "https://github.com/apache/iceberg/pull/1956", "merged": true, "mergeCommit": {"oid": "c5e67915b01c2cbf2eea40a412c2765f0c8278e8"}, "closed": true, "closedAt": "2021-02-02T07:57:25Z", "author": {"login": "stevenzwu"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoP7tYAFqTU1NjE1NDQwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd2G-pOAFqTU4MTA2Njg4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTU0NDAx", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-556154401", "createdAt": "2020-12-21T06:27:59Z", "commit": {"oid": "6c3caf41a3f1930355f8eaec1189a4e7a5e6c583"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoyODowMFrOIJNlDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoyODowMFrOIJNlDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzMDU3Mg==", "bodyText": "I checked the flink codebase,  all the RowData's TypeSerializer related classes are not expose to be public, they are marked as Internal.  The only way I can think of is:  Use a compactbility utility to load InternalTypeInfo  or RowDataTypeInfo class if there's exist one.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r546530572", "createdAt": "2020-12-21T06:28:00Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/sink/FlinkSink.java", "diffHunk": "@@ -91,7 +91,7 @@ public static Builder forRow(DataStream<Row> input, TableSchema tableSchema) {\n     DataType[] fieldDataTypes = tableSchema.getFieldDataTypes();\n \n     DataFormatConverters.RowConverter rowConverter = new DataFormatConverters.RowConverter(fieldDataTypes);\n-    return builderFor(input, rowConverter::toInternal, RowDataTypeInfo.of(rowType))\n+    return builderFor(input, rowConverter::toInternal, InternalTypeInfo.of(rowType))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c3caf41a3f1930355f8eaec1189a4e7a5e6c583"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTU4ODc3", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-556158877", "createdAt": "2020-12-21T06:41:33Z", "commit": {"oid": "6c3caf41a3f1930355f8eaec1189a4e7a5e6c583"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjo0MTozM1rOIJNzmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjo0MTozM1rOIJNzmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDI5OQ==", "bodyText": "It's strange here, because I saw the TableColumn is marked as PublicEvolving, but after released flink 1.12.0 it did not have any Interface compatibility guarantee.  At least, it should marked as deprecated, and keep it a major release.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r546534299", "createdAt": "2020-12-21T06:41:33Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestFlinkCatalogTable.java", "diffHunk": "@@ -83,8 +83,8 @@ public void testGetTable() {\n             Types.NestedField.optional(1, \"strV\", Types.StringType.get())));\n     Assert.assertEquals(\n         Arrays.asList(\n-            TableColumn.of(\"id\", DataTypes.BIGINT()),\n-            TableColumn.of(\"strV\", DataTypes.STRING())),\n+            TableColumn.physical(\"id\", DataTypes.BIGINT()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c3caf41a3f1930355f8eaec1189a4e7a5e6c583"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "61279cc7a5c888119170a83fdf68e4e54e0295b3", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/61279cc7a5c888119170a83fdf68e4e54e0295b3", "committedDate": "2020-12-22T23:23:42Z", "message": "define MiniClusterWithClientResource @ClassRule directly so that we can disable CoreOptions.CHECK_LEAKED_CLASSLOADER"}, "afterCommit": {"oid": "2c721b14acecc12f211bafebdf14c8fe0734d86a", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/2c721b14acecc12f211bafebdf14c8fe0734d86a", "committedDate": "2020-12-23T00:42:12Z", "message": "define MiniClusterWithClientResource @ClassRule directly so that we can disable CoreOptions.CHECK_LEAKED_CLASSLOADER"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mjg5NTk5", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-559289599", "createdAt": "2020-12-28T20:18:23Z", "commit": {"oid": "2c721b14acecc12f211bafebdf14c8fe0734d86a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDoxODoyNFrOIMBS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMDoxODoyNFrOIMBS4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ3NTA0Mw==", "bodyText": "Would it make sense to use 2 here (or any value greater than 1)? At my work, we've found that some people's code runs into issues once it's distributed. I highly doubt that's likely to be the case here, given that typically those users were relatively new end users of flink, but it still might be helpful to run the tests with non-local shuffles (not in the same JVM). We could do 2 and then halve the number of slots per task manager.\nYour call, but since this has been helpful for some people in my organization I thought I'd mention it.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r549475043", "createdAt": "2020-12-28T20:18:24Z", "author": {"login": "kbendick"}, "path": "flink/src/test/java/org/apache/iceberg/flink/sink/TestFlinkIcebergSink.java", "diffHunk": "@@ -46,21 +49,36 @@\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.junit.Assert;\n import org.junit.Before;\n-import org.junit.Rule;\n+import org.junit.ClassRule;\n import org.junit.Test;\n import org.junit.rules.TemporaryFolder;\n import org.junit.runner.RunWith;\n import org.junit.runners.Parameterized;\n \n @RunWith(Parameterized.class)\n-public class TestFlinkIcebergSink extends AbstractTestBase {\n+public class TestFlinkIcebergSink extends TestBaseUtils {\n   private static final TypeInformation<Row> ROW_TYPE_INFO = new RowTypeInfo(\n       SimpleDataUtil.FLINK_SCHEMA.getFieldTypes());\n   private static final DataFormatConverters.RowConverter CONVERTER = new DataFormatConverters.RowConverter(\n       SimpleDataUtil.FLINK_SCHEMA.getFieldDataTypes());\n \n-  @Rule\n-  public TemporaryFolder tempFolder = new TemporaryFolder();\n+  private static final int DEFAULT_PARALLELISM = 4;\n+\n+  private static final org.apache.flink.configuration.Configuration config =\n+      new org.apache.flink.configuration.Configuration()\n+          // disable classloader check as Avro may cache class/object in the serializers.\n+          .set(CoreOptions.CHECK_LEAKED_CLASSLOADER, false);\n+\n+  @ClassRule\n+  public static MiniClusterWithClientResource miniClusterResource = new MiniClusterWithClientResource(\n+      new MiniClusterResourceConfiguration.Builder()\n+          .setNumberTaskManagers(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c721b14acecc12f211bafebdf14c8fe0734d86a"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c721b14acecc12f211bafebdf14c8fe0734d86a", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/2c721b14acecc12f211bafebdf14c8fe0734d86a", "committedDate": "2020-12-23T00:42:12Z", "message": "define MiniClusterWithClientResource @ClassRule directly so that we can disable CoreOptions.CHECK_LEAKED_CLASSLOADER"}, "afterCommit": {"oid": "65089cf003edf477c3a6dd615e34fcdd8ee96807", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/65089cf003edf477c3a6dd615e34fcdd8ee96807", "committedDate": "2020-12-31T00:44:18Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65089cf003edf477c3a6dd615e34fcdd8ee96807", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/65089cf003edf477c3a6dd615e34fcdd8ee96807", "committedDate": "2020-12-31T00:44:18Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}, "afterCommit": {"oid": "ebbf155e3aee84c64d28e11101988be017e14134", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/ebbf155e3aee84c64d28e11101988be017e14134", "committedDate": "2020-12-31T00:54:03Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebbf155e3aee84c64d28e11101988be017e14134", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/ebbf155e3aee84c64d28e11101988be017e14134", "committedDate": "2020-12-31T00:54:03Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}, "afterCommit": {"oid": "70235e302af747a9ab8828324477d404911b1eb2", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/70235e302af747a9ab8828324477d404911b1eb2", "committedDate": "2021-01-02T19:24:29Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70235e302af747a9ab8828324477d404911b1eb2", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/70235e302af747a9ab8828324477d404911b1eb2", "committedDate": "2021-01-02T19:24:29Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}, "afterCommit": {"oid": "0f2c7977b05a4638811c296c8843dd3e8e56628c", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/0f2c7977b05a4638811c296c8843dd3e8e56628c", "committedDate": "2021-01-03T02:31:30Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f2c7977b05a4638811c296c8843dd3e8e56628c", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/0f2c7977b05a4638811c296c8843dd3e8e56628c", "committedDate": "2021-01-03T02:31:30Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}, "afterCommit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/558e3f5996ecc092b04142df560858ab530e53dd", "committedDate": "2021-01-04T22:58:58Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDczMzU2", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-561473356", "createdAt": "2021-01-05T02:20:47Z", "commit": {"oid": "0f2c7977b05a4638811c296c8843dd3e8e56628c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMTozMVrOIOH22w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMTozMVrOIOH22w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTcwNw==", "bodyText": "I read the javadoc about  TableResult again.  The correct way to execute sql and get the results is:\nTableResult result = tEnv.execute(\"select ...\");\n// using try-with-resources statement\ntry (CloseableIterator<Row> it = result.collect()) {\n        it... // collect same data\n}\nThen I think we don't have to call c.getJobExecutionResult().get() here. How about removing  the line101 ~ line 106 and the following part use try-with-resources statement ?", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r551679707", "createdAt": "2021-01-05T02:21:31Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/FlinkTestBase.java", "diffHunk": "@@ -76,7 +99,7 @@ protected TableEnvironment getTableEnv() {\n     TableResult tableResult = getTableEnv().executeSql(String.format(query, args));\n     tableResult.getJobClient().ifPresent(c -> {\n       try {\n-        c.getJobExecutionResult(Thread.currentThread().getContextClassLoader()).get();\n+        c.getJobExecutionResult().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDc0MzQ4", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-561474348", "createdAt": "2021-01-05T02:23:47Z", "commit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMzo0N1rOIOH6EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMzo0N1rOIOH6EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY4MDUyOA==", "bodyText": "Similar issues  here.  ( see https://github.com/apache/iceberg/pull/1956/files#r551679707 )", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r551680528", "createdAt": "2021-01-05T02:23:47Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/source/TestFlinkScanSql.java", "diffHunk": "@@ -107,7 +121,14 @@ public void testResiduals() throws Exception {\n   }\n \n   private List<Row> executeSQL(String sql) {\n-    return Lists.newArrayList(tEnv.executeSql(sql).collect());\n+    CloseableIterator<Row> iter = getTableEnv().executeSql(sql).collect();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDc0OTYy", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-561474962", "createdAt": "2021-01-05T02:25:47Z", "commit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyNTo0N1rOIOH8cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyNTo0N1rOIOH8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY4MTEzNw==", "bodyText": "Why do we need to change here ?", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r551681137", "createdAt": "2021-01-05T02:25:47Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/source/TestFlinkScanSql.java", "diffHunk": "@@ -52,12 +53,25 @@ public TestFlinkScanSql(String fileFormat) {\n   @Override\n   public void before() throws IOException {\n     super.before();\n-    tEnv = TableEnvironment.create(EnvironmentSettings.newInstance().useBlinkPlanner().inBatchMode().build());\n-    tEnv.executeSql(String.format(\n+    getTableEnv().executeSql(String.format(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "558e3f5996ecc092b04142df560858ab530e53dd", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/558e3f5996ecc092b04142df560858ab530e53dd", "committedDate": "2021-01-04T22:58:58Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}, "afterCommit": {"oid": "4f1f1d48b2dc1148b27db2bb16abe3b8a94f3563", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/4f1f1d48b2dc1148b27db2bb16abe3b8a94f3563", "committedDate": "2021-01-05T03:59:09Z", "message": "use try-with-resources statement for collecting table result"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f1f1d48b2dc1148b27db2bb16abe3b8a94f3563", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/4f1f1d48b2dc1148b27db2bb16abe3b8a94f3563", "committedDate": "2021-01-05T03:59:09Z", "message": "use try-with-resources statement for collecting table result"}, "afterCommit": {"oid": "f33e94c29845ffee9a2586098a942182f965a623", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/f33e94c29845ffee9a2586098a942182f965a623", "committedDate": "2021-01-06T22:11:07Z", "message": "use try-with-resources statement for collecting table result"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f33e94c29845ffee9a2586098a942182f965a623", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/f33e94c29845ffee9a2586098a942182f965a623", "committedDate": "2021-01-06T22:11:07Z", "message": "use try-with-resources statement for collecting table result"}, "afterCommit": {"oid": "f9d4dd6047b0328993818d687cf8193c2f6f26d6", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/f9d4dd6047b0328993818d687cf8193c2f6f26d6", "committedDate": "2021-01-17T00:34:12Z", "message": "use try-with-resources statement for collecting table result"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9d4dd6047b0328993818d687cf8193c2f6f26d6", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/f9d4dd6047b0328993818d687cf8193c2f6f26d6", "committedDate": "2021-01-17T00:34:12Z", "message": "use try-with-resources statement for collecting table result"}, "afterCommit": {"oid": "98d9f6ad511b47b554ca14ae5d7fa8931161b3bf", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/98d9f6ad511b47b554ca14ae5d7fa8931161b3bf", "committedDate": "2021-01-19T01:22:44Z", "message": "update TestFlinkTableSourc with Flink 1.12 upgrade as the behavior changed: (1) like '%' or '%%' now matches null (2) NOT IN filter push down may not maintain the same order"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e51c2dc328b33638a9dbe5a0ec3ee6f2a880e3b", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/4e51c2dc328b33638a9dbe5a0ec3ee6f2a880e3b", "committedDate": "2021-01-19T04:24:17Z", "message": "update Flink version from 1.12.0 to 1.12.1"}, "afterCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/4b9baeb07babb634a5d717df180666ece2792edf", "committedDate": "2021-01-26T23:29:29Z", "message": "update Flink version from 1.12.0 to 1.12.1"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MjcwNDAx", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578270401", "createdAt": "2021-01-28T12:13:45Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjoxMzo0NVrOIb0wEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjoxMzo0NVrOIb0wEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA0NjczNg==", "bodyText": "ditto.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566046736", "createdAt": "2021-01-28T12:13:45Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestFlinkCatalogTable.java", "diffHunk": "@@ -107,7 +107,7 @@ public void testRenameTable() {\n         () -> getTableEnv().from(\"tl\")\n     );\n     Assert.assertEquals(\n-        Collections.singletonList(TableColumn.of(\"id\", DataTypes.BIGINT())),\n+        Collections.singletonList(TableColumn.physical(\"id\", DataTypes.BIGINT())),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MjcxNzUz", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578271753", "createdAt": "2021-01-28T12:15:28Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjoxNToyOVrOIb0zjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjoxNToyOVrOIb0zjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA0NzYyOQ==", "bodyText": "Why do we need to change here ?  in the new flink 1.12.1 release,  the null data will be hit the LIKE '%%' ?", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566047629", "createdAt": "2021-01-28T12:15:29Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestFlinkTableSource.java", "diffHunk": "@@ -617,12 +617,14 @@ public void testFilterNotPushDownLike() {\n     explainNoPushDown = getTableEnv().explainSql(sqlNoPushDown);\n     Assert.assertFalse(\"Explain should not contain FilterPushDown\",\n         explainNoPushDown.contains(expectedFilterPushDownExplain));\n+\n     sqlNoPushDown = \"SELECT * FROM  \" + TABLE_NAME + \"  WHERE data LIKE '%%' \";\n     resultLike = sql(sqlNoPushDown);\n-    Assert.assertEquals(\"Should have 2 records\", 2, resultLike.size());\n+    Assert.assertEquals(\"Should have 3 records\", 3, resultLike.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4Mjg0MTQz", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578284143", "createdAt": "2021-01-28T12:30:29Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjozMDozMFrOIb1bKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjozMDozMFrOIb1bKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA1Nzc2OQ==", "bodyText": "I'd prefer to create our iceberg's RowDataCloner (which is similar to the RowDataConvert ),  so that we could get ride of this flink internal InternalSerializers.\nRelying on flink internal interfaces that do not promise compatibility should be avoided as much as possible in subsequent development codes.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566057769", "createdAt": "2021-01-28T12:30:30Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestHelpers.java", "diffHunk": "@@ -62,9 +61,8 @@ private TestHelpers() {\n   }\n \n   public static RowData copyRowData(RowData from, RowType rowType) {\n-    ExecutionConfig config = new ExecutionConfig();\n     TypeSerializer[] fieldSerializers = rowType.getChildren().stream()\n-        .map((LogicalType type) -> InternalSerializers.create(type, config))\n+        .map((LogicalType type) -> InternalSerializers.create(type))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4Mjg5NDQw", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578289440", "createdAt": "2021-01-28T12:37:36Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjozNzozNlrOIb1q8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjozNzozNlrOIb1q8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA2MTgxMQ==", "bodyText": "Nit: How about just import the org.apache.flink.configuration.Configuration class and use:\nprivate static final Configuration config = new Configuration().set(CoreOptions.CHECK_LEAKED_CLASSLOADER, false);\nhere.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566061811", "createdAt": "2021-01-28T12:37:36Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/FlinkTestBase.java", "diffHunk": "@@ -34,8 +36,28 @@\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.rules.TemporaryFolder;\n \n-public abstract class FlinkTestBase extends AbstractTestBase {\n+public abstract class FlinkTestBase extends TestBaseUtils {\n+\n+  private static final int DEFAULT_PARALLELISM = 4;\n+\n+  private static final org.apache.flink.configuration.Configuration config =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MjkyNTk5", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578292599", "createdAt": "2021-01-28T12:41:52Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjo0MTo1MlrOIb10cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOFQxMjo0MTo1MlrOIb10cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA2NDI0MQ==", "bodyText": "As this InternalTypeInfo is the flink internal API that we have to depends on in the flink+iceberg integration work,  I'd like to move this InternalTypeInfo.of(RowType rowType) into a separate small utility methods,  in case of changing every places that refer this internal class.\nopeninx@2a63571#diff-e4d1084ea160d030f3a225948d224678436b79eb5a94df230c71cdc7327f99d8R43", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566064241", "createdAt": "2021-01-28T12:41:52Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/sink/FlinkSink.java", "diffHunk": "@@ -33,7 +33,7 @@\n import org.apache.flink.table.api.TableSchema;\n import org.apache.flink.table.data.RowData;\n import org.apache.flink.table.data.util.DataFormatConverters;\n-import org.apache.flink.table.runtime.typeutils.RowDataTypeInfo;\n+import org.apache.flink.table.runtime.typeutils.InternalTypeInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MjkzMzc4", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578293378", "createdAt": "2021-01-28T12:42:52Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4MzUzNzM4", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-578353738", "createdAt": "2021-01-28T13:54:32Z", "commit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/4b9baeb07babb634a5d717df180666ece2792edf", "committedDate": "2021-01-26T23:29:29Z", "message": "update Flink version from 1.12.0 to 1.12.1"}, "afterCommit": {"oid": "976cc67f1030b9f938bed214b9041f167d8a71be", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/976cc67f1030b9f938bed214b9041f167d8a71be", "committedDate": "2021-01-28T19:17:30Z", "message": "address the review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c31ca403fb55480ed0e6edeaecabc2843ab2ff51", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/c31ca403fb55480ed0e6edeaecabc2843ab2ff51", "committedDate": "2021-01-28T21:30:59Z", "message": "fix javadoc"}, "afterCommit": {"oid": "5dd3ea888dc0c439a428742407bd4b48483ed9e8", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/5dd3ea888dc0c439a428742407bd4b48483ed9e8", "committedDate": "2021-01-28T22:43:45Z", "message": "fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5MjU3MzM4", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-579257338", "createdAt": "2021-01-29T13:32:31Z", "commit": {"oid": "5dd3ea888dc0c439a428742407bd4b48483ed9e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMzozMjozMVrOIckLoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQxMzozMjozMVrOIckLoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjgyMzg0MQ==", "bodyText": "I think we need to disable the CoreOptions.CHECK_LEAKED_CLASSLOADER here  ?  Seems like we usually validation the iceberg tables results once we've terminated the flink job.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r566823841", "createdAt": "2021-01-29T13:32:31Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/FlinkTestBase.java", "diffHunk": "@@ -34,8 +37,27 @@\n import org.apache.iceberg.relocated.com.google.common.collect.Lists;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.rules.TemporaryFolder;\n \n-public abstract class FlinkTestBase extends AbstractTestBase {\n+public abstract class FlinkTestBase extends TestBaseUtils {\n+\n+  private static final int DEFAULT_PARALLELISM = 4;\n+\n+  private static final Configuration config = new Configuration()\n+          // disable classloader check as Avro may cache class/object in the serializers.\n+          .set(CoreOptions.CHECK_LEAKED_CLASSLOADER, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5dd3ea888dc0c439a428742407bd4b48483ed9e8"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dd3ea888dc0c439a428742407bd4b48483ed9e8", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/5dd3ea888dc0c439a428742407bd4b48483ed9e8", "committedDate": "2021-01-28T22:43:45Z", "message": "fix javadoc"}, "afterCommit": {"oid": "8fd95cb99da61ead466d20000d248d7a3d5bf92c", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/8fd95cb99da61ead466d20000d248d7a3d5bf92c", "committedDate": "2021-02-01T16:39:54Z", "message": "create our own MiniClusterTestBase class that disable classloader check, because Flink tests can still use Flink's classloader to read and validate table result after the Flink job is terminated."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fd95cb99da61ead466d20000d248d7a3d5bf92c", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/8fd95cb99da61ead466d20000d248d7a3d5bf92c", "committedDate": "2021-02-01T16:39:54Z", "message": "create our own MiniClusterTestBase class that disable classloader check, because Flink tests can still use Flink's classloader to read and validate table result after the Flink job is terminated."}, "afterCommit": {"oid": "ae99bc30db9de35ae016c952c3ba90a39b4d4307", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/ae99bc30db9de35ae016c952c3ba90a39b4d4307", "committedDate": "2021-02-01T17:06:35Z", "message": "create our own MiniClusterBase class that disable classloader check, because Flink tests can still use Flink's classloader to read and validate table result after the Flink job is terminated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75f0b00d3be0149bc34ca934516fe1d652047f45", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/75f0b00d3be0149bc34ca934516fe1d652047f45", "committedDate": "2021-02-01T21:45:03Z", "message": "upgrade flink version from 1.11.0 to 1.12.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b43928a2693de0b5949f5804b2c95796fc119d", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/60b43928a2693de0b5949f5804b2c95796fc119d", "committedDate": "2021-02-01T21:45:03Z", "message": "only create table env once and close the table result itertor in TestFlinkScanSql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1af9e61b48d337bc233bda5d66d85b6830ab72c1", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/1af9e61b48d337bc233bda5d66d85b6830ab72c1", "committedDate": "2021-02-01T21:45:03Z", "message": "disable CoreOptions.CHECK_LEAKED_CLASSLOADER for FlinkTestBase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed59526a1a1fd23416349dfd2e4c65d1e34dcdfa", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/ed59526a1a1fd23416349dfd2e4c65d1e34dcdfa", "committedDate": "2021-02-01T21:45:03Z", "message": "use try-with-resources statement for collecting table result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1289ea124283357c73ef3818a2546c31b8aa3d1", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/b1289ea124283357c73ef3818a2546c31b8aa3d1", "committedDate": "2021-02-01T21:45:03Z", "message": "update TestFlinkTableSourc with Flink 1.12 upgrade as the behavior changed: (1) like '%' or '%%' now matches null (2) NOT IN filter push down may not maintain the same order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f81e48ca3927ada56098260f51dd47c3b03c13", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/f9f81e48ca3927ada56098260f51dd47c3b03c13", "committedDate": "2021-02-01T21:45:45Z", "message": "update Flink version from 1.12.0 to 1.12.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94dab69cb88f93fdcb5568f8460b8887c39c867f", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/94dab69cb88f93fdcb5568f8460b8887c39c867f", "committedDate": "2021-02-01T21:45:45Z", "message": "address the review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a6fef4e7b220ffaf02084ea20ca411929175a4", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/39a6fef4e7b220ffaf02084ea20ca411929175a4", "committedDate": "2021-02-01T21:45:45Z", "message": "fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "744a8273f406d6c146b6237303ae4123d5486da7", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/744a8273f406d6c146b6237303ae4123d5486da7", "committedDate": "2021-02-01T21:45:45Z", "message": "create our own MiniClusterBase class that disable classloader check, because Flink tests can still use Flink's classloader to read and validate table result after the Flink job is terminated."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "393f97037510e87c1fc46ec6c2334ae44c34181e", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/393f97037510e87c1fc46ec6c2334ae44c34181e", "committedDate": "2021-02-01T21:39:23Z", "message": "enable TestFlinkCatalogTable#testCreateTableIfNotExists now we are on Flink 1.12.\n\nHave to adjust the test in a couple of places."}, "afterCommit": {"oid": "a7c983b96bd909ae6db1320c3eab0ed770813278", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/a7c983b96bd909ae6db1320c3eab0ed770813278", "committedDate": "2021-02-01T21:45:45Z", "message": "enable TestFlinkCatalogTable#testCreateTableIfNotExists now we are on Flink 1.12.\n\nHave to adjust the test in a couple of places."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/b05c00e1a311396400e277bdb07d024e5fb0781f", "committedDate": "2021-02-01T23:06:06Z", "message": "enable TestFlinkCatalogTable#testCreateTableIfNotExists now we are on Flink 1.12.\n\nHave to adjust the test in a couple of places."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7c983b96bd909ae6db1320c3eab0ed770813278", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/a7c983b96bd909ae6db1320c3eab0ed770813278", "committedDate": "2021-02-01T21:45:45Z", "message": "enable TestFlinkCatalogTable#testCreateTableIfNotExists now we are on Flink 1.12.\n\nHave to adjust the test in a couple of places."}, "afterCommit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/b05c00e1a311396400e277bdb07d024e5fb0781f", "committedDate": "2021-02-01T23:06:06Z", "message": "enable TestFlinkCatalogTable#testCreateTableIfNotExists now we are on Flink 1.12.\n\nHave to adjust the test in a couple of places."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTMzOTIw", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-580933920", "createdAt": "2021-02-02T02:24:19Z", "commit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjoyNDoxOVrOId87Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjoyODozN1rOId9BHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI3NzgxNA==", "bodyText": "Nit: in apache iceberg, we usually use the unified Lists.newArrayLists to create a new ArrayList.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r568277814", "createdAt": "2021-02-02T02:24:19Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/FlinkCatalogTestBase.java", "diffHunk": "@@ -119,6 +123,12 @@ protected String warehouseRoot() {\n     }\n   }\n \n+  protected String getFullQualifiedTableName(String tableName) {\n+    final List<String> levels = new ArrayList<>(Arrays.asList(icebergNamespace.levels()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI3OTA4Nw==", "bodyText": "@stevenzwu ,  do you think  this issue need to fix in this PR ? I think we'd better to...", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r568279087", "createdAt": "2021-02-02T02:27:52Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestFlinkCatalogTable.java", "diffHunk": "@@ -107,7 +107,7 @@ public void testRenameTable() {\n         () -> getTableEnv().from(\"tl\")\n     );\n     Assert.assertEquals(\n-        Collections.singletonList(TableColumn.of(\"id\", DataTypes.BIGINT())),\n+        Collections.singletonList(TableColumn.physical(\"id\", DataTypes.BIGINT())),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjA0NjczNg=="}, "originalCommit": {"oid": "4b9baeb07babb634a5d717df180666ece2792edf"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI3OTMyNw==", "bodyText": "Thanks a lot for the unit tests improvement !", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r568279327", "createdAt": "2021-02-02T02:28:37Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestFlinkCatalogTable.java", "diffHunk": "@@ -136,13 +133,23 @@ public void testCreateTableIfNotExists() {\n \n     sql(\"DROP TABLE tl\");\n     AssertHelpers.assertThrows(\"Table 'tl' should be dropped\",\n-        NoSuchTableException.class, \"Table does not exist: db.tl\", () -> table(\"tl\"));\n+        NoSuchTableException.class,\n+        \"Table does not exist: \" + getFullQualifiedTableName(\"tl\"),\n+        () -> table(\"tl\"));\n \n-    sql(\"CREATE TABLE IF NO EXISTS tl(id BIGINT)\");\n+    sql(\"CREATE TABLE IF NOT EXISTS tl(id BIGINT)\");\n     Assert.assertEquals(Maps.newHashMap(), table(\"tl\").properties());\n \n-    sql(\"CREATE TABLE IF NOT EXISTS tl(id BIGINT) WITH ('location'='/tmp/location')\");\n-    Assert.assertEquals(\"Should still be the old table.\", Maps.newHashMap(), table(\"tl\").properties());\n+    final String uuid = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTQxMjg1", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-580941285", "createdAt": "2021-02-02T02:43:17Z", "commit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjo0MzoxN1rOId9TvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjo0MzoxN1rOId9TvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI4NDA5Mg==", "bodyText": "I saw the TestFlinkIcebergSinkV2 also defines the similar mini cluster resources, then how about make it into a small methods so that the TestFlinkIcebergSinkV2 could reuse it ?   For future defined mini cluster resource, we'd better also reuse this one because it will be easy to forget to disable this CHECK_LEAKED_CLASSLOADER switch for developers.\n  @ClassRule\n  public static MiniClusterWithClientResource miniClusterResource = createMiniClusterResource();\n\n  @ClassRule\n  public static final TemporaryFolder TEMPORARY_FOLDER = new TemporaryFolder();\n\n  public static MiniClusterWithClientResource createMiniClusterResource() {\n    return new MiniClusterWithClientResource(\n        new MiniClusterResourceConfiguration.Builder()\n            .setNumberTaskManagers(1)\n            .setNumberSlotsPerTaskManager(DEFAULT_PARALLELISM)\n            .setConfiguration(CONFIG)\n            .build());\n  }\nThe TestFlinkIcebergSinkV2 could just use:\n@ClassRule\npublic static MiniClusterWithClientResource miniClusterResource = MiniClusterBase.createMiniClusterResource();", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r568284092", "createdAt": "2021-02-02T02:43:17Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/MiniClusterBase.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.flink;\n+\n+import org.apache.flink.configuration.Configuration;\n+import org.apache.flink.configuration.CoreOptions;\n+import org.apache.flink.runtime.testutils.MiniClusterResourceConfiguration;\n+import org.apache.flink.test.util.MiniClusterWithClientResource;\n+import org.apache.flink.test.util.TestBaseUtils;\n+import org.junit.ClassRule;\n+import org.junit.rules.TemporaryFolder;\n+\n+/**\n+ * It will start a mini cluster with classloader.check-leaked-classloader=false, so that we won't break the unit tests\n+ * because of the class loader leak issue. In our iceberg integration tests, there're some that will assert the results\n+ * after finished the flink jobs, so actually we may access the class loader that has been closed by the flink task\n+ * managers if we enable the switch classloader.check-leaked-classloader by default.\n+ */\n+public class MiniClusterBase extends TestBaseUtils {\n+\n+  private static final int DEFAULT_PARALLELISM = 4;\n+\n+  public static final Configuration CONFIG = new Configuration()\n+      // disable classloader check as Avro may cache class/object in the serializers.\n+      .set(CoreOptions.CHECK_LEAKED_CLASSLOADER, false);\n+\n+  @ClassRule\n+  public static MiniClusterWithClientResource miniClusterResource = new MiniClusterWithClientResource(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTQxNzc0", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-580941774", "createdAt": "2021-02-02T02:44:39Z", "commit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjo0NDozOVrOId9VVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwMjo0NDozOVrOId9VVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODI4NDUwMA==", "bodyText": "Thanks a lot for this.", "url": "https://github.com/apache/iceberg/pull/1956#discussion_r568284500", "createdAt": "2021-02-02T02:44:39Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/actions/Actions.java", "diffHunk": "@@ -37,7 +43,7 @@ public static Actions forTable(StreamExecutionEnvironment env, Table table) {\n   }\n \n   public static Actions forTable(Table table) {\n-    return new Actions(StreamExecutionEnvironment.getExecutionEnvironment(), table);\n+    return new Actions(StreamExecutionEnvironment.getExecutionEnvironment(CONFIG), table);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b05c00e1a311396400e277bdb07d024e5fb0781f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5ce94825e5cea71089c667568f314ef122ca8d3", "author": {"user": null}, "url": "https://github.com/apache/iceberg/commit/b5ce94825e5cea71089c667568f314ef122ca8d3", "committedDate": "2021-02-02T04:54:24Z", "message": "Address latest review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxMDY2ODg2", "url": "https://github.com/apache/iceberg/pull/1956#pullrequestreview-581066886", "createdAt": "2021-02-02T07:57:00Z", "commit": {"oid": "b5ce94825e5cea71089c667568f314ef122ca8d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3294, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}