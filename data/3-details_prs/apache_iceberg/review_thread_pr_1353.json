{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTYxOTk3", "number": 1353, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzozMzoxNFrOEZsgow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxODoxN1rOEgCiKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mzc5MTA3OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzozMzoxNFrOHCqLKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMzo0MjozMVrOHDoYZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw==", "bodyText": "We would normally use a Precondition check here:\nPreconditions.checkState(context.selectedColumns() == null, \"Cannot ...\");\nI was also going to say that I think we should check the reverse as well, in case project is called before select, but it looks like the projection is tracked outside of the context for some reason. I don't think that's quite right. We probably want to move project to the context as well.\n@edgarRd, do you know why project doesn't use the scan context?", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r472550187", "createdAt": "2020-08-18T23:33:14Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjY2MTcxNg==", "bodyText": "Another thing is: BaseTableScan.lazyColumnProjection looks only work for DataTableScan. Because other table scan like MetadataTableScan, the file/expected scan schema is different from table.schema(). But in BaseTableScan.lazyColumnProjection, it use table.schema() to select. And for rowFilter, it looks only works for DataTableScan selection, should not affect MetadataTableScans selection.\nWe may need to implement different selections for various scans.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r472661716", "createdAt": "2020-08-19T04:03:06Z", "author": {"login": "JingsongLi"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw=="}, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIxNDUwOQ==", "bodyText": "This was the idea on not putting schema in the context: #1115 (comment) - I guess it could be part of the context, it would need to be initialized and in this case another context would need to be created with the new schema from the projection.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r473214509", "createdAt": "2020-08-19T17:47:13Z", "author": {"login": "edgarRd"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw=="}, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0OTM0MQ==", "bodyText": "Thanks @edgarRd! I think it makes sense to move that into the context and initialize it as null. If the projection is null, then use the column list. If not, then use the projection. And then both methods can validate that the other has not been called.\nI think it would be okay to do this even if it only works for DataTableScan. If the other scans don't support it, then they should throw exceptions instead of allowing the projection to be set.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r473449341", "createdAt": "2020-08-19T23:54:13Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw=="}, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUxMTkzNg==", "bodyText": "Yeah, that makes sense, @rdblue. Should we have another PR for that change?", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r473511936", "createdAt": "2020-08-20T01:30:22Z", "author": {"login": "edgarRd"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw=="}, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzU2OTM4Mg==", "bodyText": "Hi @edgarRd , If you don't mind, I think I can finish it in this PR.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r473569382", "createdAt": "2020-08-20T03:42:31Z", "author": {"login": "JingsongLi"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -159,6 +159,10 @@ public TableScan option(String property, String value) {\n \n   @Override\n   public TableScan project(Schema projectedSchema) {\n+    if (context.selectedColumns() != null) {\n+      throw new IllegalStateException(\"Cannot project schema when selected columns is specified.\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1MDE4Nw=="}, "originalCommit": {"oid": "ef53511af73cd0cf317658242fc4564e01acbbc8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzQ1NjIwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/TableScanContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyNToxNFrOHMQeMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyNToxNFrOHMQeMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNDgzNA==", "bodyText": "Nit: should be Cannot select columns when projection schema is set, and you can omit the ending .", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482614834", "createdAt": "2020-09-03T00:25:14Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/TableScanContext.java", "diffHunk": "@@ -107,16 +112,27 @@ boolean returnColumnStats() {\n \n   TableScanContext shouldReturnColumnStats(boolean returnColumnStats) {\n     return new TableScanContext(snapshotId, rowFilter, ignoreResiduals,\n-        caseSensitive, returnColumnStats, selectedColumns, options, fromSnapshotId, toSnapshotId);\n+        caseSensitive, returnColumnStats, projectedSchema, selectedColumns, options, fromSnapshotId, toSnapshotId);\n   }\n \n   Collection<String> selectedColumns() {\n     return selectedColumns;\n   }\n \n   TableScanContext selectColumns(Collection<String> columns) {\n+    Preconditions.checkState(projectedSchema == null, \"Cannot selected columns when project schema is specified.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzQ1NzYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/TableScanContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyNjowMFrOHMQe_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyNjowMFrOHMQe_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNTAzOA==", "bodyText": "How about Cannot set projection schema when columns are selected", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482615038", "createdAt": "2020-09-03T00:26:00Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/TableScanContext.java", "diffHunk": "@@ -107,16 +112,27 @@ boolean returnColumnStats() {\n \n   TableScanContext shouldReturnColumnStats(boolean returnColumnStats) {\n     return new TableScanContext(snapshotId, rowFilter, ignoreResiduals,\n-        caseSensitive, returnColumnStats, selectedColumns, options, fromSnapshotId, toSnapshotId);\n+        caseSensitive, returnColumnStats, projectedSchema, selectedColumns, options, fromSnapshotId, toSnapshotId);\n   }\n \n   Collection<String> selectedColumns() {\n     return selectedColumns;\n   }\n \n   TableScanContext selectColumns(Collection<String> columns) {\n+    Preconditions.checkState(projectedSchema == null, \"Cannot selected columns when project schema is specified.\");\n     return new TableScanContext(snapshotId, rowFilter, ignoreResiduals,\n-        caseSensitive, colStats, columns, options, fromSnapshotId, toSnapshotId);\n+        caseSensitive, colStats, null, columns, options, fromSnapshotId, toSnapshotId);\n+  }\n+\n+  Schema projectedSchema() {\n+    return projectedSchema;\n+  }\n+\n+  TableScanContext project(Schema schema) {\n+    Preconditions.checkState(selectedColumns == null, \"Cannot project schema when selected columns is specified.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzQ2NDk0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDoyOTo0M1rOHMQjHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDoxMjozM1rOHMVMxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjA5Mw==", "bodyText": "I don't understand why select only works for data table scans. I updated this method to use the schema that is passed into the constructor and all Iceberg tests pass. By updating this to use the schema passed in instead of the table schema, we can support either project or select, depending on what the caller chooses.\nThen we can remove the overrides that throw UnsupportedOperationException.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482616093", "createdAt": "2020-09-03T00:29:43Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -284,6 +284,8 @@ public String toString() {\n   private Schema lazyColumnProjection() {\n     Collection<String> selectedColumns = context.selectedColumns();\n     if (selectedColumns != null) {\n+      // select columns only works for data table scans, so it is OK to select on table.schema().\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY4MjkxNg==", "bodyText": "The problem is on rowFilter.\nIIUC, rowFilter is based on table data for every scans, so:\n\nif it is data table scan, we should add the field ids of rowFilter to requiredFieldIds.\nif it is not data table scan, we should not, because the schema not contains fields of rowFilter.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482682916", "createdAt": "2020-09-03T03:35:37Z", "author": {"login": "JingsongLi"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -284,6 +284,8 @@ public String toString() {\n   private Schema lazyColumnProjection() {\n     Collection<String> selectedColumns = context.selectedColumns();\n     if (selectedColumns != null) {\n+      // select columns only works for data table scans, so it is OK to select on table.schema().\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjA5Mw=="}, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjY5MjI5NA==", "bodyText": "I add a isDataTableScan abstract method in BaseTableScan.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482692294", "createdAt": "2020-09-03T04:12:33Z", "author": {"login": "JingsongLi"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -284,6 +284,8 @@ public String toString() {\n   private Schema lazyColumnProjection() {\n     Collection<String> selectedColumns = context.selectedColumns();\n     if (selectedColumns != null) {\n+      // select columns only works for data table scans, so it is OK to select on table.schema().\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjA5Mw=="}, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzQ2NjE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDozMDoxOFrOHMQjyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMDozMDoxOFrOHMQjyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYxNjI2NQ==", "bodyText": "Nit: I find this more readable if the blank line is before the else to distinguish between the previous block and the else case.", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r482616265", "createdAt": "2020-09-03T00:30:18Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -301,6 +303,9 @@ private Schema lazyColumnProjection() {\n       requiredFieldIds.addAll(selectedIds);\n \n       return TypeUtil.select(table.schema(), requiredFieldIds);\n+    } else if (context.projectedSchema() != null) {\n+\n+      return context.projectedSchema();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a08cb105f0f9a0d8596ad71480c17643ced5657a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMxMDYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNzo0NFrOHMrjPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxNzo0NFrOHMrjPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1ODQ5Mg==", "bodyText": "I'm not sure I understand why this is added. Shouldn't the filter (which is unbound) be bound to the scan's schema and not the underlying table's schema?", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r483058492", "createdAt": "2020-09-03T15:17:44Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -106,6 +106,14 @@ protected abstract TableScan newRefinedScan(\n       TableOperations ops, Snapshot snapshot, Expression rowFilter,\n       boolean ignoreResiduals, boolean caseSensitive, boolean colStats);\n \n+  /**\n+   * The {@link #filter(Expression)} is based on the table records. So the data table scan need select all of the\n+   * filter columns, other scans don't need to.\n+   */\n+  protected boolean isDataTableScan() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bc6137db8a1fa7db1d798b7051cf39b48ae90df"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDMxNDAwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxODoxN1rOHMrlLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNToxODoxN1rOHMrlLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzA1ODk5MA==", "bodyText": "Why not do this for all table scans?", "url": "https://github.com/apache/iceberg/pull/1353#discussion_r483058990", "createdAt": "2020-09-03T15:18:17Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/BaseTableScan.java", "diffHunk": "@@ -286,21 +294,26 @@ private Schema lazyColumnProjection() {\n     if (selectedColumns != null) {\n       Set<Integer> requiredFieldIds = Sets.newHashSet();\n \n-      // all of the filter columns are required\n-      requiredFieldIds.addAll(\n-          Binder.boundReferences(table.schema().asStruct(),\n-              Collections.singletonList(context.rowFilter()), context.caseSensitive()));\n+      if (isDataTableScan()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bc6137db8a1fa7db1d798b7051cf39b48ae90df"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3664, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}