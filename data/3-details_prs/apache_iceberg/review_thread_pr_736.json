{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTg4ODQ1", "number": 736, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyNzoxMFrODYQNow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzozMjo0OVrODYQU5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU4MDUxOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyNzoxMFrOFeAV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyNzoxMFrOFeAV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNzIyMQ==", "bodyText": "How about iceberg.hive.lock-timeout-ms instead? It isn't a Hive option, it is an Iceberg option for working with Hive; that's why I think we should use the iceberg namespace.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367007221", "createdAt": "2020-01-15T17:27:10Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -65,18 +65,26 @@\n public class HiveTableOperations extends BaseMetastoreTableOperations {\n   private static final Logger LOG = LoggerFactory.getLogger(HiveTableOperations.class);\n \n+  private static final String HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS = \"hive.lock.acquire-timeout-ms\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU4NDkxOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyODoyMVrOFeAYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyODoyMVrOFeAYjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwNzg4Ng==", "bodyText": "There's no need for this field to be in a separate group.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367007886", "createdAt": "2020-01-15T17:28:21Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -65,18 +65,26 @@\n public class HiveTableOperations extends BaseMetastoreTableOperations {\n   private static final Logger LOG = LoggerFactory.getLogger(HiveTableOperations.class);\n \n+  private static final String HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS = \"hive.lock.acquire-timeout-ms\";\n+  private static final long   HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS_DEFAULT = 3 * 60 * 1000; // 3 minutes\n+\n   private final HiveClientPool metaClients;\n   private final String database;\n   private final String tableName;\n   private final Configuration conf;\n \n+  private final long lockAcquireTimeout;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU4NTgzOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyODozM1rOFeAZCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyODozM1rOFeAZCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwODAwOQ==", "bodyText": "Nit: no need to align variable names.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367008009", "createdAt": "2020-01-15T17:28:33Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -65,18 +65,26 @@\n public class HiveTableOperations extends BaseMetastoreTableOperations {\n   private static final Logger LOG = LoggerFactory.getLogger(HiveTableOperations.class);\n \n+  private static final String HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS = \"hive.lock.acquire-timeout-ms\";\n+  private static final long   HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS_DEFAULT = 3 * 60 * 1000; // 3 minutes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU4NzE5OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyOTowM1rOFeAZ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzoyOTowM1rOFeAZ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwODIzMg==", "bodyText": "Same here, I don't think we need to separate the lock timeout setting from the other fields that are getting initialized.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367008232", "createdAt": "2020-01-15T17:29:03Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -65,18 +65,26 @@\n public class HiveTableOperations extends BaseMetastoreTableOperations {\n   private static final Logger LOG = LoggerFactory.getLogger(HiveTableOperations.class);\n \n+  private static final String HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS = \"hive.lock.acquire-timeout-ms\";\n+  private static final long   HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS_DEFAULT = 3 * 60 * 1000; // 3 minutes\n+\n   private final HiveClientPool metaClients;\n   private final String database;\n   private final String tableName;\n   private final Configuration conf;\n \n+  private final long lockAcquireTimeout;\n+\n   private FileIO fileIO;\n \n   protected HiveTableOperations(Configuration conf, HiveClientPool metaClients, String database, String table) {\n     this.conf = conf;\n     this.metaClients = metaClients;\n     this.database = database;\n     this.tableName = table;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU5NDA0OnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzozMToxMlrOFeAeMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzozMToxMlrOFeAeMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAwOTMzMA==", "bodyText": "Instead of break, can we use timeout in the while condition?\nwhile (!timeout && state.equals(LockState.WAITING)) { ... }\nAs long as we are setting timeout, I think it is nice to use it to avoid control flow breaks. We would also need to move Thread.sleep(50) into an else.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367009330", "createdAt": "2020-01-15T17:31:12Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -249,13 +257,32 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     LockResponse lockResponse = metaClients.run(client -> client.lock(lockRequest));\n     LockState state = lockResponse.getState();\n     long lockId = lockResponse.getLockid();\n-    //TODO add timeout\n+\n+    final long start = System.currentTimeMillis();\n+    long duration = 0;\n+    boolean timeout = false;\n     while (state.equals(LockState.WAITING)) {\n       lockResponse = metaClients.run(client -> client.checkLock(lockId));\n       state = lockResponse.getState();\n+\n+      // check timeout\n+      duration = System.currentTimeMillis() - start;\n+      if (duration > lockAcquireTimeout) {\n+        timeout = true;\n+        break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzU5OTEwOnYy", "diffSide": "RIGHT", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzozMjo0OVrOFeAhTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzozMjo0OVrOFeAhTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzAxMDEyNA==", "bodyText": "How about \"Timed out after %s ms waiting for lock on %s.%s\"? I don't think we need to specify the config property or the timeout threshold.", "url": "https://github.com/apache/iceberg/pull/736#discussion_r367010124", "createdAt": "2020-01-15T17:32:49Z", "author": {"login": "rdblue"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -249,13 +257,32 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n     LockResponse lockResponse = metaClients.run(client -> client.lock(lockRequest));\n     LockState state = lockResponse.getState();\n     long lockId = lockResponse.getLockid();\n-    //TODO add timeout\n+\n+    final long start = System.currentTimeMillis();\n+    long duration = 0;\n+    boolean timeout = false;\n     while (state.equals(LockState.WAITING)) {\n       lockResponse = metaClients.run(client -> client.checkLock(lockId));\n       state = lockResponse.getState();\n+\n+      // check timeout\n+      duration = System.currentTimeMillis() - start;\n+      if (duration > lockAcquireTimeout) {\n+        timeout = true;\n+        break;\n+      }\n+\n       Thread.sleep(50);\n     }\n \n+    // timeout and do not have lock acquired\n+    if (timeout && !state.equals(LockState.ACQUIRED)) {\n+      throw new CommitFailedException(String.format(\"Timeout when acquiring the lock on %s.%s, \" +\n+          \"have waited for %s ms, more than %s ms set by %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9727eb553368a395eede5fa4ccf250fe54647792"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}