{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MjIyODMx", "number": 1165, "title": "Make CharSequenceSet thread safe", "bodyText": "MergingSnapshotProducer was recently refactored to separate out manifest filtering and merging so it could be reused for delete files. That refactor also updated the filter to use a CharSequenceSet instead of a HashSet and CharSequenceWrapper. The CharSequenceSet embeds the wrapper and is easier to use, but this introduced a bug where multiple threads using the same CharSequenceSet would use the same seq wrapper in contains. This was causing deletes of specific files to miss data files if the wrapper was reused while testing a file that should be deleted was in the delete set.\nThe solution is to make CharSequenceSet thread safe by using a thread-local wrapper.\nThis only affects operations that delete specific files, which are mostly in tests. Spark deletes using an expression and using partition tuples. User-facing operations that are affected are RewriteFiles and SnapshotManager (when cherry-picking a dynamic overwrite commit). OverwriteFiles also exposes the method, but it is only used in tests.", "createdAt": "2020-07-04T01:13:15Z", "url": "https://github.com/apache/iceberg/pull/1165", "merged": true, "mergeCommit": {"oid": "d1fd2a780b2847d2cbd6f09dfdfa690716a43ba6"}, "closed": true, "closedAt": "2020-07-06T17:59:35Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxdbNIAH2gAyNDQ0MjIyODMxOjI5M2ExZDNhNTZkNGZhZTIxZmI1OTZlMDZmNjU0NGVmOGVlY2ZmNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyUC5vAH2gAyNDQ0MjIyODMxOjQ2YzExMTRhZmIzNzY3ZmUwMWE2Nzc0NjIyYjIyYTc1MTZhMWJlMjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "293a1d3a56d4fae21fb596e06f6544ef8eecff67", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/293a1d3a56d4fae21fb596e06f6544ef8eecff67", "committedDate": "2020-07-04T01:05:20Z", "message": "Make CharSequenceSet thread safe."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66", "committedDate": "2020-07-04T01:36:17Z", "message": "Work around ThreadLocal that is not Serializable."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNjQxNTkz", "url": "https://github.com/apache/iceberg/pull/1165#pullrequestreview-442641593", "createdAt": "2020-07-05T02:58:48Z", "commit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMjo1ODo0OFrOGs_IJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwMjo1ODo0OFrOGs_IJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDgwNA==", "bodyText": "Maybe you can use guava Suppliers.memoize to help lazy-init.", "url": "https://github.com/apache/iceberg/pull/1165#discussion_r449824804", "createdAt": "2020-07-05T02:58:48Z", "author": {"login": "JingsongLi"}, "path": "api/src/main/java/org/apache/iceberg/util/CharSequenceSet.java", "diffHunk": "@@ -54,10 +54,21 @@ public boolean isEmpty() {\n     return wrapperSet.isEmpty();\n   }\n \n+  public CharSequenceWrapper wrapper() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNzIzNzg1", "url": "https://github.com/apache/iceberg/pull/1165#pullrequestreview-442723785", "createdAt": "2020-07-06T00:52:26Z", "commit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDo1MjoyNlrOGtGIWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMDo1MjoyNlrOGtGIWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkzOTU0NA==", "bodyText": "Sounds good to me", "url": "https://github.com/apache/iceberg/pull/1165#discussion_r449939544", "createdAt": "2020-07-06T00:52:26Z", "author": {"login": "rdsr"}, "path": "api/src/main/java/org/apache/iceberg/util/CharSequenceSet.java", "diffHunk": "@@ -54,10 +54,21 @@ public boolean isEmpty() {\n     return wrapperSet.isEmpty();\n   }\n \n+  public CharSequenceWrapper wrapper() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgyNDgwNA=="}, "originalCommit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODEwNTE5", "url": "https://github.com/apache/iceberg/pull/1165#pullrequestreview-442810519", "createdAt": "2020-07-06T06:45:52Z", "commit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNjo0NTo1MlrOGtKsWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNjo0NzowOVrOGtKuJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxNDI5Ng==", "bodyText": "Wondering if making sense to have a static ThreadLocal object shared by all CharSequenceSet?", "url": "https://github.com/apache/iceberg/pull/1165#discussion_r450014296", "createdAt": "2020-07-06T06:45:52Z", "author": {"login": "jun-he"}, "path": "api/src/main/java/org/apache/iceberg/util/CharSequenceSet.java", "diffHunk": "@@ -54,10 +54,21 @@ public boolean isEmpty() {\n     return wrapperSet.isEmpty();\n   }\n \n+  public CharSequenceWrapper wrapper() {\n+    if (containsWrapper == null) {\n+      synchronized (this) {\n+        if (containsWrapper == null) {\n+          this.containsWrapper = ThreadLocal.withInitial(() -> CharSequenceWrapper.wrap(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAxNDc1OA==", "bodyText": "should it be set back to null after the operation?", "url": "https://github.com/apache/iceberg/pull/1165#discussion_r450014758", "createdAt": "2020-07-06T06:47:09Z", "author": {"login": "jun-he"}, "path": "api/src/main/java/org/apache/iceberg/util/CharSequenceSet.java", "diffHunk": "@@ -54,10 +54,21 @@ public boolean isEmpty() {\n     return wrapperSet.isEmpty();\n   }\n \n+  public CharSequenceWrapper wrapper() {\n+    if (containsWrapper == null) {\n+      synchronized (this) {\n+        if (containsWrapper == null) {\n+          this.containsWrapper = ThreadLocal.withInitial(() -> CharSequenceWrapper.wrap(null));\n+        }\n+      }\n+    }\n+    return containsWrapper.get();\n+  }\n+\n   @Override\n   public boolean contains(Object obj) {\n     if (obj instanceof CharSequence) {\n-      return wrapperSet.contains(containsWrapper.set((CharSequence) obj));\n+      return wrapperSet.contains(wrapper().set((CharSequence) obj));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf24e2e4e0d162cb86dcdb06ad98bf39f7ed4c66"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c1114afb3767fe01a6774622b22a7516a1be21", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/46c1114afb3767fe01a6774622b22a7516a1be21", "committedDate": "2020-07-06T16:43:34Z", "message": "Clean up CharSequenceWrapper handling in CharSequenceSet."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4598, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}