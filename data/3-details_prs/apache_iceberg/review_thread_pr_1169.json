{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzY5NDk3", "number": 1169, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwODoyNTo0OVrOELcW3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwODoyNTo0OVrOELcW3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDM0Mzk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwODoyNTo0OVrOGtAqnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNjozMToxMVrOGtKXQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDAxNQ==", "bodyText": "I think this is subtle and hard to understand on why this is needed. I prefer the the new visitor approach as you guys discussed in #1139.", "url": "https://github.com/apache/iceberg/pull/1169#discussion_r449850015", "createdAt": "2020-07-05T08:25:49Z", "author": {"login": "rdsr"}, "path": "api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java", "diffHunk": "@@ -102,7 +102,15 @@ private boolean eval(ContentFile<?> file) {\n       this.lowerBounds = file.lowerBounds();\n       this.upperBounds = file.upperBounds();\n \n-      return ExpressionVisitors.visitEvaluator(expr, this);\n+      try {\n+        return ExpressionVisitors.visitEvaluator(expr, this);\n+      } finally {\n+        // allow temporary state to be collected because this is in a thread-local\n+        this.valueCounts = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f657254b71fa90f9c5f9090c8e411067e2642fff"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTkxNzM2NA==", "bodyText": "That sounds good to me.", "url": "https://github.com/apache/iceberg/pull/1169#discussion_r449917364", "createdAt": "2020-07-05T20:50:04Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java", "diffHunk": "@@ -102,7 +102,15 @@ private boolean eval(ContentFile<?> file) {\n       this.lowerBounds = file.lowerBounds();\n       this.upperBounds = file.upperBounds();\n \n-      return ExpressionVisitors.visitEvaluator(expr, this);\n+      try {\n+        return ExpressionVisitors.visitEvaluator(expr, this);\n+      } finally {\n+        // allow temporary state to be collected because this is in a thread-local\n+        this.valueCounts = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDAxNQ=="}, "originalCommit": {"oid": "f657254b71fa90f9c5f9090c8e411067e2642fff"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAwODg5OA==", "bodyText": "Thanks @rdsr and @rdblue for the comments. Updated the PR accordingly to remove the thread local objects and use new visitors to keep the code straightforward.", "url": "https://github.com/apache/iceberg/pull/1169#discussion_r450008898", "createdAt": "2020-07-06T06:31:11Z", "author": {"login": "jun-he"}, "path": "api/src/main/java/org/apache/iceberg/expressions/InclusiveMetricsEvaluator.java", "diffHunk": "@@ -102,7 +102,15 @@ private boolean eval(ContentFile<?> file) {\n       this.lowerBounds = file.lowerBounds();\n       this.upperBounds = file.upperBounds();\n \n-      return ExpressionVisitors.visitEvaluator(expr, this);\n+      try {\n+        return ExpressionVisitors.visitEvaluator(expr, this);\n+      } finally {\n+        // allow temporary state to be collected because this is in a thread-local\n+        this.valueCounts = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTg1MDAxNQ=="}, "originalCommit": {"oid": "f657254b71fa90f9c5f9090c8e411067e2642fff"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3947, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}