{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTMyNDgy", "number": 1772, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozNjoyNFrOE5izTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozNjoyNFrOE5izTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Nzc0NDc3OnYy", "diffSide": "RIGHT", "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozNjoyNFrOH0EUNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo1NDozMVrOH0M49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1ODcwOQ==", "bodyText": "This is probably just me, but I would rather this just be an \"if { log } else { setup delete }\" than an \"if { log; return } setupDelete \"", "url": "https://github.com/apache/iceberg/pull/1772#discussion_r524358709", "createdAt": "2020-11-16T15:36:24Z", "author": {"login": "RussellSpitzer"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -159,6 +164,11 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n   public void deleteWhere(Filter[] filters) {\n     Expression deleteExpr = SparkFilters.convert(filters);\n \n+    if (deleteExpr == Expressions.alwaysFalse()) {\n+      LOG.info(\"Skipping the delete operation as the condition is always false\");\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd7306d6b97bbfa3c0175a21a71bff55d754257b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4NDQ2Mg==", "bodyText": "Just trying to touch fewer lines and avoid extra indentation for the block below.", "url": "https://github.com/apache/iceberg/pull/1772#discussion_r524484462", "createdAt": "2020-11-16T18:30:00Z", "author": {"login": "aokolnychyi"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -159,6 +164,11 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n   public void deleteWhere(Filter[] filters) {\n     Expression deleteExpr = SparkFilters.convert(filters);\n \n+    if (deleteExpr == Expressions.alwaysFalse()) {\n+      LOG.info(\"Skipping the delete operation as the condition is always false\");\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1ODcwOQ=="}, "originalCommit": {"oid": "cd7306d6b97bbfa3c0175a21a71bff55d754257b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5OTE4OA==", "bodyText": "I agree with both of you. Normally, I'd prefer if/else to an extra return. But in this case it is better to return because we don't want to touch all of the lines that actually perform the delete.", "url": "https://github.com/apache/iceberg/pull/1772#discussion_r524499188", "createdAt": "2020-11-16T18:54:31Z", "author": {"login": "rdblue"}, "path": "spark3/src/main/java/org/apache/iceberg/spark/source/SparkTable.java", "diffHunk": "@@ -159,6 +164,11 @@ public WriteBuilder newWriteBuilder(LogicalWriteInfo info) {\n   public void deleteWhere(Filter[] filters) {\n     Expression deleteExpr = SparkFilters.convert(filters);\n \n+    if (deleteExpr == Expressions.alwaysFalse()) {\n+      LOG.info(\"Skipping the delete operation as the condition is always false\");\n+      return;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1ODcwOQ=="}, "originalCommit": {"oid": "cd7306d6b97bbfa3c0175a21a71bff55d754257b"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3454, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}