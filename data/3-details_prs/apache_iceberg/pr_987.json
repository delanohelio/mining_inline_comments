{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwOTcxNjg4", "number": 987, "title": "Suppress exceptions while unlocking tables in HiveTableOperations", "bodyText": "", "createdAt": "2020-04-29T21:49:10Z", "url": "https://github.com/apache/iceberg/pull/987", "merged": true, "mergeCommit": {"oid": "189ea232bfbe0b4a01dda0419cf24a2ebff5dfe1"}, "closed": true, "closedAt": "2020-04-30T00:51:01Z", "author": {"login": "aokolnychyi"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccfBCSgH2gAyNDEwOTcxNjg4OjJmOTgxMGZhYjUxMGI0MGEwOGMzMTExNmMxN2ZlNDdiNWVlMmFhNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcch_irAFqTQwMzEzMDczNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/2f9810fab510b40a08c31116c17fe47b5ee2aa46", "committedDate": "2020-04-29T21:04:09Z", "message": "Suppress exceptions while unlocking tables in HiveTableOperations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9079f35d5714a860c8218b683ab02a72a431323f", "author": {"user": {"login": "aokolnychyi", "name": "Anton Okolnychyi"}}, "url": "https://github.com/apache/iceberg/commit/9079f35d5714a860c8218b683ab02a72a431323f", "committedDate": "2020-04-30T00:15:43Z", "message": "Fix the test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTIwODM0", "url": "https://github.com/apache/iceberg/pull/987#pullrequestreview-403120834", "createdAt": "2020-04-30T00:02:43Z", "commit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDowMjo0M1rOGOVP_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDoyMDoxMlrOGOVjvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4MTQwNA==", "bodyText": "nit: this itself gives the TableMetadataV2, no?", "url": "https://github.com/apache/iceberg/pull/987#discussion_r417681404", "createdAt": "2020-04-30T00:02:43Z", "author": {"login": "rdsr"}, "path": "hive/src/test/java/org/apache/iceberg/hive/TestHiveCommits.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.hive;\n+\n+import org.apache.iceberg.HasTableOperations;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.TableMetadata;\n+import org.apache.iceberg.types.Types;\n+import org.apache.thrift.TException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Matchers.anyLong;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.spy;\n+\n+public class TestHiveCommits extends HiveTableBaseTest {\n+\n+  @Test\n+  public void testSuppressUnlockExceptions() throws TException, InterruptedException {\n+    Table table = catalog.loadTable(TABLE_IDENTIFIER);\n+    HiveTableOperations ops = (HiveTableOperations) ((HasTableOperations) table).operations();\n+\n+    TableMetadata metadataV1 = ops.current();\n+\n+    table.updateSchema()\n+        .addColumn(\"n\", Types.IntegerType.get())\n+        .commit();\n+\n+    ops.refresh();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY4NjQ2Mg==", "bodyText": "I'm generally ok, but what's the behavior you've seen on the server side? Can new locks still be acquired by other clients or the table is left in a locked state forever?", "url": "https://github.com/apache/iceberg/pull/987#discussion_r417686462", "createdAt": "2020-04-30T00:20:12Z", "author": {"login": "rdsr"}, "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -296,13 +296,18 @@ private long acquireLock() throws UnknownHostException, TException, InterruptedE\n   private void unlock(Optional<Long> lockId) {\n     if (lockId.isPresent()) {\n       try {\n-        metaClients.run(client -> {\n-          client.unlock(lockId.get());\n-          return null;\n-        });\n+        doUnlock(lockId.get());\n       } catch (Exception e) {\n-        throw new RuntimeException(String.format(\"Failed to unlock %s.%s\", database, tableName), e);\n+        LOG.warn(\"Failed to unlock {}.{}\", database, tableName, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f9810fab510b40a08c31116c17fe47b5ee2aa46"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTMwNzM3", "url": "https://github.com/apache/iceberg/pull/987#pullrequestreview-403130737", "createdAt": "2020-04-30T00:32:14Z", "commit": {"oid": "9079f35d5714a860c8218b683ab02a72a431323f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4644, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}