{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDc5Njc0", "number": 1030, "title": "Add content types to DataFile and ManifestFile", "bodyText": "This adds FileContent and ManifestContent to encode the content type in a DataFile or ManifestFile. Readers and writers are updated to handle the new metadata fields and values from v1 metadata default to DATA.\nDataFile always uses FileContent.DATA. Although the schema is the same in a manifest, DataFile will be used in the API only for data files, and DeleteFile will be added to handle delete deltas.\nThis also adds documentation comments to fields, and introduces an IndexedDataFile for writing v2 metadata that no longer writes block size and makes content required.", "createdAt": "2020-05-08T23:59:31Z", "url": "https://github.com/apache/iceberg/pull/1030", "merged": true, "mergeCommit": {"oid": "01d1462756db20a14a9ac67166e5bf56966861b4"}, "closed": true, "closedAt": "2020-05-23T19:10:43Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfa0jUAH2gAyNDE1NDc5Njc0OjA1NTA0NzkyZDgzMWMxNjIyMTcyNDRkMzAxMDVlNmYyOGQ2NTU4YWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckLt41AFqTQxNzI5Nzk4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05504792d831c162217244d30105e6f28d6558ab", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/05504792d831c162217244d30105e6f28d6558ab", "committedDate": "2020-05-08T23:52:40Z", "message": "Add content types to DataFile and ManifestFile."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b69e63446db90ac579695ab80f54928162d846a", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/6b69e63446db90ac579695ab80f54928162d846a", "committedDate": "2020-05-11T23:55:16Z", "message": "Fix Metadata table tests.\n\nThis also updates AllEntriesTable to return the correct sequence number."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3Mjk3OTg1", "url": "https://github.com/apache/iceberg/pull/1030#pullrequestreview-417297985", "createdAt": "2020-05-23T18:17:33Z", "commit": {"oid": "6b69e63446db90ac579695ab80f54928162d846a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODoxNzozNFrOGZqsKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxODo0MTowOFrOGZqzJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NzAxNg==", "bodyText": "Will DeleteFile extend this or will it be totally separate?", "url": "https://github.com/apache/iceberg/pull/1030#discussion_r429567016", "createdAt": "2020-05-23T18:17:34Z", "author": {"login": "aokolnychyi"}, "path": "api/src/main/java/org/apache/iceberg/DataFile.java", "diffHunk": "@@ -37,31 +38,58 @@\n  * Interface for files listed in a table manifest.\n  */\n public interface DataFile {\n+  // fields for adding delete data files\n+  Types.NestedField CONTENT = optional(134, \"content\", IntegerType.get(),\n+      \"Contents of the file: 0=data, 1=position deletes, 2=equality deletes\");\n+  Types.NestedField FILE_PATH = required(100, \"file_path\", StringType.get(), \"Location URI with FS scheme\");\n+  Types.NestedField FILE_FORMAT = required(101, \"file_format\", StringType.get(),\n+      \"File format name: avro, orc, or parquet\");\n+  Types.NestedField RECORD_COUNT = required(103, \"record_count\", LongType.get(), \"Number of records in the file\");\n+  Types.NestedField FILE_SIZE = required(104, \"file_size_in_bytes\", LongType.get(), \"Total file size in bytes\");\n+  Types.NestedField COLUMN_SIZES = optional(108, \"column_sizes\", MapType.ofRequired(117, 118,\n+      IntegerType.get(), LongType.get()), \"Map of column id to total size on disk\");\n+  Types.NestedField VALUE_COUNTS = optional(109, \"value_counts\", MapType.ofRequired(119, 120,\n+      IntegerType.get(), LongType.get()), \"Map of column id to total count, including null and NaN\");\n+  Types.NestedField NULL_VALUE_COUNTS = optional(110, \"null_value_counts\", MapType.ofRequired(121, 122,\n+      IntegerType.get(), LongType.get()), \"Map of column id to null value count\");\n+  Types.NestedField LOWER_BOUNDS = optional(125, \"lower_bounds\", MapType.ofRequired(126, 127,\n+      IntegerType.get(), BinaryType.get()), \"Map of column id to lower bound\");\n+  Types.NestedField UPPER_BOUNDS = optional(128, \"upper_bounds\", MapType.ofRequired(129, 130,\n+      IntegerType.get(), BinaryType.get()), \"Map of column id to upper bound\");\n+  Types.NestedField KEY_METADATA = optional(131, \"key_metadata\", BinaryType.get(), \"Encryption key metadata blob\");\n+  Types.NestedField SPLIT_OFFSETS = optional(132, \"split_offsets\", ListType.ofRequired(133, LongType.get()),\n+      \"Splittable offsets\");\n+  int PARTITION_ID = 102;\n+  String PARTITION_NAME = \"partition\";\n+  String PARTITION_DOC = \"Partition data tuple, schema based on the partition spec\";\n+  // NEXT ID TO ASSIGN: 135\n+\n   static StructType getType(StructType partitionType) {\n     // IDs start at 100 to leave room for changes to ManifestEntry\n     return StructType.of(\n-        required(100, \"file_path\", StringType.get()),\n-        required(101, \"file_format\", StringType.get()),\n-        required(102, \"partition\", partitionType),\n-        required(103, \"record_count\", LongType.get()),\n-        required(104, \"file_size_in_bytes\", LongType.get()),\n-        required(105, \"block_size_in_bytes\", LongType.get()),\n-        optional(108, \"column_sizes\", MapType.ofRequired(117, 118,\n-            IntegerType.get(), LongType.get())),\n-        optional(109, \"value_counts\", MapType.ofRequired(119, 120,\n-            IntegerType.get(), LongType.get())),\n-        optional(110, \"null_value_counts\", MapType.ofRequired(121, 122,\n-            IntegerType.get(), LongType.get())),\n-        optional(125, \"lower_bounds\", MapType.ofRequired(126, 127,\n-            IntegerType.get(), BinaryType.get())),\n-        optional(128, \"upper_bounds\", MapType.ofRequired(129, 130,\n-            IntegerType.get(), BinaryType.get())),\n-        optional(131, \"key_metadata\", BinaryType.get()),\n-        optional(132, \"split_offsets\", ListType.ofRequired(133, LongType.get()))\n-        // NEXT ID TO ASSIGN: 134\n+        CONTENT,\n+        FILE_PATH,\n+        FILE_FORMAT,\n+        required(PARTITION_ID, PARTITION_NAME, partitionType, PARTITION_DOC),\n+        RECORD_COUNT,\n+        FILE_SIZE,\n+        COLUMN_SIZES,\n+        VALUE_COUNTS,\n+        NULL_VALUE_COUNTS,\n+        LOWER_BOUNDS,\n+        UPPER_BOUNDS,\n+        KEY_METADATA,\n+        SPLIT_OFFSETS\n     );\n   }\n \n+  /**\n+   * @return the content stored in the file; one of DATA, POSITION_DELETES, or EQUALITY_DELETES\n+   */\n+  default FileContent content() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b69e63446db90ac579695ab80f54928162d846a"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2Nzc2Mg==", "bodyText": "Ugh, this one wouldn't probably work correctly before if snapshot id inheritance was enabled.", "url": "https://github.com/apache/iceberg/pull/1030#discussion_r429567762", "createdAt": "2020-05-23T18:26:57Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/AllEntriesTable.java", "diffHunk": "@@ -100,11 +100,13 @@ protected long targetSplitSize(TableOperations ops) {\n     protected CloseableIterable<FileScanTask> planFiles(\n         TableOperations ops, Snapshot snapshot, Expression rowFilter, boolean caseSensitive, boolean colStats) {\n       CloseableIterable<ManifestFile> manifests = AllDataFilesTable.allManifestFiles(ops.current().snapshots());\n+      Schema fileSchema = new Schema(schema().findType(\"data_file\").asStructType().fields());\n       String schemaString = SchemaParser.toJson(schema());\n       String specString = PartitionSpecParser.toJson(PartitionSpec.unpartitioned());\n+      ResidualEvaluator residuals = ResidualEvaluator.unpartitioned(rowFilter);\n \n-      return CloseableIterable.transform(manifests, manifest -> new BaseFileScanTask(\n-          DataFiles.fromManifest(manifest), schemaString, specString, ResidualEvaluator.unpartitioned(rowFilter)));\n+      return CloseableIterable.transform(manifests, manifest -> new ManifestEntriesTable.ManifestReadTask(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b69e63446db90ac579695ab80f54928162d846a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2ODgwNQ==", "bodyText": "Is this change needed because we added FileContent in GenericDataFile?", "url": "https://github.com/apache/iceberg/pull/1030#discussion_r429568805", "createdAt": "2020-05-23T18:41:08Z", "author": {"login": "aokolnychyi"}, "path": "core/src/main/java/org/apache/iceberg/V1Metadata.java", "diffHunk": "@@ -226,11 +254,10 @@ public Object get(int i) {\n           return wrapped.snapshotId();\n         case 2:\n           DataFile file = wrapped.file();\n-          if (file == null || file instanceof GenericDataFile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b69e63446db90ac579695ab80f54928162d846a"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4667, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}