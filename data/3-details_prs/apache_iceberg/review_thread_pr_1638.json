{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTk5NTQy", "number": 1638, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMjowMjoyOFrOEwgmZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMjowMjo0NVrOEwgm9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzAxMjIzOnYy", "diffSide": "RIGHT", "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestCDHParquetStatistics.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMjowMjoyOFrOHmIDKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMzo0NTo1MlrOHmLluw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczOTgxNg==", "bodyText": "Should we also test -1 for num nulls? I know we don't expect it, but the behavior should still be correct, I think.", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509739816", "createdAt": "2020-10-21T22:02:28Z", "author": {"login": "rdblue"}, "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestCDHParquetStatistics.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import org.apache.parquet.column.statistics.Statistics;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests for Parquet 1.5.0-Stats which cannot be evaluated like later versions of Parquet stats. They are intercepted\n+ * by the hasNonNullButNoMinMax function which always returns ROWS_MAY_MATCH\n+ */\n+public class TestCDHParquetStatistics {\n+\n+  @Test\n+  public void testCDHParquetStatistcs() {\n+    Statistics cdhBinaryColumnStats = mock(Statistics.class);\n+    when(cdhBinaryColumnStats.getMaxBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getMinBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getNumNulls()).thenReturn(0L);\n+    Assert.assertTrue(ParquetMetricsRowGroupFilter.hasNonNullButNoMinMax(cdhBinaryColumnStats, 50L));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc3Mjg4MA==", "bodyText": "Sure I can add that, techinically since this is in the inner loop of \"notEmpty\" either nonNull >= 0 (set) or haveNonNulls is true. If hasNoNulls is true then we don't care about this pathway anyway because max/min are set", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509772880", "createdAt": "2020-10-21T22:44:11Z", "author": {"login": "RussellSpitzer"}, "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestCDHParquetStatistics.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import org.apache.parquet.column.statistics.Statistics;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests for Parquet 1.5.0-Stats which cannot be evaluated like later versions of Parquet stats. They are intercepted\n+ * by the hasNonNullButNoMinMax function which always returns ROWS_MAY_MATCH\n+ */\n+public class TestCDHParquetStatistics {\n+\n+  @Test\n+  public void testCDHParquetStatistcs() {\n+    Statistics cdhBinaryColumnStats = mock(Statistics.class);\n+    when(cdhBinaryColumnStats.getMaxBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getMinBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getNumNulls()).thenReturn(0L);\n+    Assert.assertTrue(ParquetMetricsRowGroupFilter.hasNonNullButNoMinMax(cdhBinaryColumnStats, 50L));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczOTgxNg=="}, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NTE1OQ==", "bodyText": "Yeah, I just want to avoid having a method that assumes something about the context in which it will be called. Probably best to make sure it behaves correctly in all situations. Looks like if num nulls is unknown, -1, this will return that there are non-null values, even if the value count is 0. We might want to fix that.", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509795159", "createdAt": "2020-10-21T23:37:07Z", "author": {"login": "rdblue"}, "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestCDHParquetStatistics.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import org.apache.parquet.column.statistics.Statistics;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests for Parquet 1.5.0-Stats which cannot be evaluated like later versions of Parquet stats. They are intercepted\n+ * by the hasNonNullButNoMinMax function which always returns ROWS_MAY_MATCH\n+ */\n+public class TestCDHParquetStatistics {\n+\n+  @Test\n+  public void testCDHParquetStatistcs() {\n+    Statistics cdhBinaryColumnStats = mock(Statistics.class);\n+    when(cdhBinaryColumnStats.getMaxBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getMinBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getNumNulls()).thenReturn(0L);\n+    Assert.assertTrue(ParquetMetricsRowGroupFilter.hasNonNullButNoMinMax(cdhBinaryColumnStats, 50L));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczOTgxNg=="}, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc5NzgxOQ==", "bodyText": "I can add that, but in the usage again this is past the \"valueCount ==0\" which causes no match in the first return", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509797819", "createdAt": "2020-10-21T23:45:52Z", "author": {"login": "RussellSpitzer"}, "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestCDHParquetStatistics.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.parquet;\n+\n+import org.apache.parquet.column.statistics.Statistics;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+/**\n+ * Tests for Parquet 1.5.0-Stats which cannot be evaluated like later versions of Parquet stats. They are intercepted\n+ * by the hasNonNullButNoMinMax function which always returns ROWS_MAY_MATCH\n+ */\n+public class TestCDHParquetStatistics {\n+\n+  @Test\n+  public void testCDHParquetStatistcs() {\n+    Statistics cdhBinaryColumnStats = mock(Statistics.class);\n+    when(cdhBinaryColumnStats.getMaxBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getMinBytes()).thenReturn(null);\n+    when(cdhBinaryColumnStats.getNumNulls()).thenReturn(0L);\n+    Assert.assertTrue(ParquetMetricsRowGroupFilter.hasNonNullButNoMinMax(cdhBinaryColumnStats, 50L));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTczOTgxNg=="}, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MzAxMzY1OnYy", "diffSide": "RIGHT", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMjowMjo0NVrOHmIEFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMDowNToxMFrOHmL8aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc0MDA1Mw==", "bodyText": "Why is this bug limited to binary and strings?", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509740053", "createdAt": "2020-10-21T22:02:45Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java", "diffHunk": "@@ -423,4 +451,24 @@ public Boolean or(Boolean leftResult, Boolean rightResult) {\n       return (T) conversions.get(id).apply(statistics.genericGetMax());\n     }\n   }\n+\n+  /**\n+   * Checks against older versions of Parquet statistics which may have a null count but undefined min and max\n+   * statistics. Returns true if nonNull values exist in the row group but no further statistics are available.\n+   * <p>\n+   * We can't use {@code  statistics.hasNonNullValue()} because it is inaccurate with older files and will return\n+   * false if min and max are not set.\n+   * <p>\n+   * This is specifically for 1.5.0-CDH Parquet builds and later which contain the different unusual hasNonNull\n+   * behavior. OSS Parquet builds are not effected because PARQUET-251 prohibits the reading of these statistics", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc3NDI4Nw==", "bodyText": "Other types properly report min/max and hasNonNulls works. I'd have to go into the fix that CDH did to figure out for sure why their behavior is this way but I think they just disabled min/max stats to get around the Parquet-251 bug.\nStrings are stored as a binary type.", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509774287", "createdAt": "2020-10-21T22:46:01Z", "author": {"login": "RussellSpitzer"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java", "diffHunk": "@@ -423,4 +451,24 @@ public Boolean or(Boolean leftResult, Boolean rightResult) {\n       return (T) conversions.get(id).apply(statistics.genericGetMax());\n     }\n   }\n+\n+  /**\n+   * Checks against older versions of Parquet statistics which may have a null count but undefined min and max\n+   * statistics. Returns true if nonNull values exist in the row group but no further statistics are available.\n+   * <p>\n+   * We can't use {@code  statistics.hasNonNullValue()} because it is inaccurate with older files and will return\n+   * false if min and max are not set.\n+   * <p>\n+   * This is specifically for 1.5.0-CDH Parquet builds and later which contain the different unusual hasNonNull\n+   * behavior. OSS Parquet builds are not effected because PARQUET-251 prohibits the reading of these statistics", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc0MDA1Mw=="}, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTgwMzYyNw==", "bodyText": "Oh, I think I know. This probably happens when min/max values are so large that Parquet chooses not to keep them in stats, which isn't a problem for fixed-length types. That will happen in newer versions, too, but the stats object will be different.", "url": "https://github.com/apache/iceberg/pull/1638#discussion_r509803627", "createdAt": "2020-10-22T00:05:10Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetMetricsRowGroupFilter.java", "diffHunk": "@@ -423,4 +451,24 @@ public Boolean or(Boolean leftResult, Boolean rightResult) {\n       return (T) conversions.get(id).apply(statistics.genericGetMax());\n     }\n   }\n+\n+  /**\n+   * Checks against older versions of Parquet statistics which may have a null count but undefined min and max\n+   * statistics. Returns true if nonNull values exist in the row group but no further statistics are available.\n+   * <p>\n+   * We can't use {@code  statistics.hasNonNullValue()} because it is inaccurate with older files and will return\n+   * false if min and max are not set.\n+   * <p>\n+   * This is specifically for 1.5.0-CDH Parquet builds and later which contain the different unusual hasNonNull\n+   * behavior. OSS Parquet builds are not effected because PARQUET-251 prohibits the reading of these statistics", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTc0MDA1Mw=="}, "originalCommit": {"oid": "d0547cb48b181434f77e0fcab7f53cf0acc1593a"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3621, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}