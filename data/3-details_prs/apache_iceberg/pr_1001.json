{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMjQ2OTQ5", "number": 1001, "title": "Refactor Parquet visitor", "bodyText": "This refactors the Parquet visitor to support #830.\n\nAdds before and after calls that can be overridden to avoid adding field names\nMakes fieldNames private", "createdAt": "2020-05-05T00:04:25Z", "url": "https://github.com/apache/iceberg/pull/1001", "merged": true, "mergeCommit": {"oid": "e9a9032fc686fc9082e5db2dcafde3a72f0abfa9"}, "closed": true, "closedAt": "2020-05-13T17:20:06Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceIjCJgH2gAyNDEzMjQ2OTQ5OmU4MWZiNTk1MTU0ZTA5ZTcyYTZiNDMzNDhlM2ExMTU5MmIwODdjOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg8KScAFqTQxMTEzNTQyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/e81fb595154e09e72a6b43348e3a11592b087c9f", "committedDate": "2020-05-05T00:01:19Z", "message": "Refactor Parquet visitor."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1ODY4NzI4", "url": "https://github.com/apache/iceberg/pull/1001#pullrequestreview-405868728", "createdAt": "2020-05-05T14:52:58Z", "commit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTM1MzY4", "url": "https://github.com/apache/iceberg/pull/1001#pullrequestreview-405935368", "createdAt": "2020-05-05T16:04:37Z", "commit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjowNDozOFrOGQwjgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjowNDozOFrOGQwjgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNTkyMA==", "bodyText": "This was moved into its own method. The only changes are to use the new before and after methods.", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r420225920", "createdAt": "2020-05-05T16:04:38Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java", "diffHunk": "@@ -123,19 +60,115 @@\n     }\n   }\n \n-  private static <T> T visitField(Type field, ParquetTypeVisitor<T> visitor) {\n-    visitor.fieldNames.push(field.getName());\n+  private static <T> T visitList(GroupType list, ParquetTypeVisitor<T> visitor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "originalPosition": 91}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1OTM1Njgw", "url": "https://github.com/apache/iceberg/pull/1001#pullrequestreview-405935680", "createdAt": "2020-05-05T16:04:57Z", "commit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjowNDo1N1rOGQwkcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjowNDo1N1rOGQwkcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIyNjE2MQ==", "bodyText": "This was moved to its own method. The only changes are to use the new before and after methods.", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r420226161", "createdAt": "2020-05-05T16:04:57Z", "author": {"login": "rdblue"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetTypeVisitor.java", "diffHunk": "@@ -123,19 +60,115 @@\n     }\n   }\n \n-  private static <T> T visitField(Type field, ParquetTypeVisitor<T> visitor) {\n-    visitor.fieldNames.push(field.getName());\n+  private static <T> T visitList(GroupType list, ParquetTypeVisitor<T> visitor) {\n+    Preconditions.checkArgument(!list.isRepetition(Type.Repetition.REPEATED),\n+        \"Invalid list: top-level group is repeated: %s\", list);\n+    Preconditions.checkArgument(list.getFieldCount() == 1,\n+        \"Invalid list: does not contain single repeated field: %s\", list);\n+\n+    GroupType repeatedElement = list.getFields().get(0).asGroupType();\n+    Preconditions.checkArgument(repeatedElement.isRepetition(Type.Repetition.REPEATED),\n+        \"Invalid list: inner group is not repeated\");\n+    Preconditions.checkArgument(repeatedElement.getFieldCount() <= 1,\n+        \"Invalid list: repeated group is not a single field: %s\", list);\n+\n+    visitor.beforeRepeatedElement(repeatedElement);\n     try {\n-      return visit(field, visitor);\n+      T elementResult = null;\n+      if (repeatedElement.getFieldCount() > 0) {\n+        Type elementField = repeatedElement.getType(0);\n+        visitor.beforeElementField(elementField);\n+        try {\n+          elementResult = visit(elementField, visitor);\n+        } finally {\n+          visitor.afterElementField(elementField);\n+        }\n+      }\n+\n+      return visitor.list(list, elementResult);\n+\n     } finally {\n-      visitor.fieldNames.pop();\n+      visitor.afterRepeatedElement(repeatedElement);\n+    }\n+  }\n+\n+  private static <T> T visitMap(GroupType map, ParquetTypeVisitor<T> visitor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTM1NDI0", "url": "https://github.com/apache/iceberg/pull/1001#pullrequestreview-411135424", "createdAt": "2020-05-13T17:15:32Z", "commit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxNTozMlrOGU7nZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxNTozMlrOGU7nZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMTQ0NQ==", "bodyText": "Nice!", "url": "https://github.com/apache/iceberg/pull/1001#discussion_r424601445", "createdAt": "2020-05-13T17:15:32Z", "author": {"login": "aokolnychyi"}, "path": "parquet/src/main/java/org/apache/iceberg/parquet/MessageTypeToType.java", "diffHunk": "@@ -187,11 +187,7 @@ public Type primitive(PrimitiveType primitive) {\n   }\n \n   private void addAlias(String name, int fieldId) {\n-    String fullName = name;\n-    if (!fieldNames.isEmpty()) {\n-      fullName = DOT.join(DOT.join(fieldNames.descendingIterator()), name);\n-    }\n-    aliasToId.put(fullName, fieldId);\n+    aliasToId.put(DOT.join(path(name)), fieldId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e81fb595154e09e72a6b43348e3a11592b087c9f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4659, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}