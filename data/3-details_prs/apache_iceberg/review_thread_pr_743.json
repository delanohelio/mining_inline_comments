{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjA0MzA5", "number": 743, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODowODowMVrODaQ4Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQyMjoxODoxMFrODcffaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODY2MDgyOnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODowODowMVrOFhHtJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwODowOTozOFrOFkgnWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3MzU3Mw==", "bodyText": "How about throwing Exception? Keeping a list of which checked exceptions may be thrown isn't useful for test methods.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r370273573", "createdAt": "2020-01-23T18:08:01Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java", "diffHunk": "@@ -79,7 +80,7 @@ public static void stopSpark() {\n   }\n \n   @Test\n-  public void testStreamingWriteAppendMode() throws IOException {\n+  public void testStreamingWriteAppendMode() throws IOException, TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e03fc0cb79bdd8cb4f87d6c93367dfe0853775"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgyNzQxNw==", "bodyText": "Yes, throwing \"Exception\" is better.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373827417", "createdAt": "2020-02-02T08:09:38Z", "author": {"login": "yujiantao"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestStructuredStreaming.java", "diffHunk": "@@ -79,7 +80,7 @@ public static void stopSpark() {\n   }\n \n   @Test\n-  public void testStreamingWriteAppendMode() throws IOException {\n+  public void testStreamingWriteAppendMode() throws IOException, TimeoutException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3MzU3Mw=="}, "originalCommit": {"oid": "b7e03fc0cb79bdd8cb4f87d6c93367dfe0853775"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODY2NDc4OnYy", "diffSide": "RIGHT", "path": "spark/src/main/java/org/apache/iceberg/spark/source/SparkBatchWrite.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODowOTozNFrOFhHvug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQwODowOTo1OFrOFkgnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NDIzNA==", "bodyText": "Can you add a comment to explain why this is empty? If I understand correctly, close is called after abort or commit is called. Both abort and commit will close the current data file so there is no more cleanup to do here.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r370274234", "createdAt": "2020-01-23T18:09:34Z", "author": {"login": "rdblue"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/SparkBatchWrite.java", "diffHunk": "@@ -493,6 +494,9 @@ protected void setCurrentKey(PartitionKey currentKey) {\n     public void write(InternalRow row) throws IOException {\n       writeInternal(row);\n     }\n+\n+    @Override\n+    public void close() {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7e03fc0cb79bdd8cb4f87d6c93367dfe0853775"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgyNzQyOA==", "bodyText": "I will add this comment.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373827428", "createdAt": "2020-02-02T08:09:58Z", "author": {"login": "yujiantao"}, "path": "spark/src/main/java/org/apache/iceberg/spark/source/SparkBatchWrite.java", "diffHunk": "@@ -493,6 +494,9 @@ protected void setCurrentKey(PartitionKey currentKey) {\n     public void write(InternalRow row) throws IOException {\n       writeInternal(row);\n     }\n+\n+    @Override\n+    public void close() {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI3NDIzNA=="}, "originalCommit": {"oid": "b7e03fc0cb79bdd8cb4f87d6c93367dfe0853775"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjAyNjM0OnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQyMjoxNzo1M1rOFkj0lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo1OTo1MVrOFkk6IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg3OTk1OQ==", "bodyText": "This should not be using Preconditions from Parquet. It should be the guava one. Can you update it to that one instead?", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373879959", "createdAt": "2020-02-02T22:17:53Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java", "diffHunk": "@@ -37,7 +37,7 @@\n import org.apache.iceberg.io.InputFile;\n import org.apache.iceberg.io.LocationProvider;\n import org.apache.iceberg.io.OutputFile;\n-import parquet.Preconditions;\n+import org.apache.parquet.Preconditions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b814c301b0887112fcdbb34d6274de3701f9a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5Nzc2MA==", "bodyText": "Yes.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373897760", "createdAt": "2020-02-03T01:59:51Z", "author": {"login": "yujiantao"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestTables.java", "diffHunk": "@@ -37,7 +37,7 @@\n import org.apache.iceberg.io.InputFile;\n import org.apache.iceberg.io.LocationProvider;\n import org.apache.iceberg.io.OutputFile;\n-import parquet.Preconditions;\n+import org.apache.parquet.Preconditions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg3OTk1OQ=="}, "originalCommit": {"oid": "99b814c301b0887112fcdbb34d6274de3701f9a1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjAyNjY3OnYy", "diffSide": "RIGHT", "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQyMjoxODoxMFrOFkj0wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwMTo1OToyM1rOFkk55Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDAwMg==", "bodyText": "This should also be Exception.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373880002", "createdAt": "2020-02-02T22:18:10Z", "author": {"login": "rdblue"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java", "diffHunk": "@@ -125,7 +126,7 @@ public void testSparkWriteFailsUnknownTransform() throws IOException {\n   }\n \n   @Test\n-  public void testSparkStreamingWriteFailsUnknownTransform() throws IOException {\n+  public void testSparkStreamingWriteFailsUnknownTransform() throws IOException, TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99b814c301b0887112fcdbb34d6274de3701f9a1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg5NzcwMQ==", "bodyText": "Ok.", "url": "https://github.com/apache/iceberg/pull/743#discussion_r373897701", "createdAt": "2020-02-03T01:59:23Z", "author": {"login": "yujiantao"}, "path": "spark/src/test/java/org/apache/iceberg/spark/source/TestForwardCompatibility.java", "diffHunk": "@@ -125,7 +126,7 @@ public void testSparkWriteFailsUnknownTransform() throws IOException {\n   }\n \n   @Test\n-  public void testSparkStreamingWriteFailsUnknownTransform() throws IOException {\n+  public void testSparkStreamingWriteFailsUnknownTransform() throws IOException, TimeoutException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4MDAwMg=="}, "originalCommit": {"oid": "99b814c301b0887112fcdbb34d6274de3701f9a1"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2988, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}