{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzOTM3NzYw", "number": 924, "title": "Add void transform that always produces null", "bodyText": "This adds a new transform function, void, that always produces a null value. Because void and null are Java keywords, the PartitionSpecBuilder is configured using alwaysNull.\nThe purpose of this transform is to be a stand-in for partition transforms that are removed from a spec. In the v1 table format, IDs for partition fields are not tracked by PartitionSpec. Instead, they are assigned starting at 1000 for each spec. Because tables may have more than one spec, manifest files could have incompatible partition field structs. This is not a problem for job planning because each manifest is read independently, but it can break metadata tables that show a union of all manifest data files or entries.\nThe void transform can be used to avoid a problem with ID assignment. If a table has two partition fields, 1000: categorical string, 1001: ts_day int, then removing the categorical partition will create a new partition spec with 1000: ts_day int. That would create a problem in the metadata tables. Instead of deleting the categorical partition, it should be replaced with a void partition to keep the IDs aligned: 1000: always_null string, 1001: ts_day int.", "createdAt": "2020-04-15T19:08:58Z", "url": "https://github.com/apache/iceberg/pull/924", "merged": true, "mergeCommit": {"oid": "e0a3304f265c6be4e1d5873f5931a5b54d993534"}, "closed": true, "closedAt": "2020-04-15T23:45:45Z", "author": {"login": "rdblue"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX9T-XAFqTM5NDA3Mzk2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX_fo1gH2gAyNDAzOTM3NzYwOmU1MGYyMTgwZTBhNWZlZDYxZTFlYTcxMzkyYmUxN2Q4ODA3ZGRlNjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDczOTY1", "url": "https://github.com/apache/iceberg/pull/924#pullrequestreview-394073965", "createdAt": "2020-04-15T19:32:22Z", "commit": {"oid": "659fcd43aa77f91e841e807b134d62a89ffdc437"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMjoyMlrOGGIh_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxOTozMjoyMlrOGGIh_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA4NDQxMw==", "bodyText": "Minor nit here to think about . . . we seem to be using both void and null.  Would it make more sense to just consistently use void as it seems to better indicate there there is no expected value?", "url": "https://github.com/apache/iceberg/pull/924#discussion_r409084413", "createdAt": "2020-04-15T19:32:22Z", "author": {"login": "danielcweeks"}, "path": "api/src/main/java/org/apache/iceberg/transforms/VoidTransform.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.transforms;\n+\n+import java.io.ObjectStreamException;\n+import org.apache.iceberg.expressions.BoundPredicate;\n+import org.apache.iceberg.expressions.UnboundPredicate;\n+import org.apache.iceberg.types.Type;\n+\n+class VoidTransform<S> implements Transform<S, Void> {\n+  private static final VoidTransform<Object> INSTANCE = new VoidTransform<>();\n+\n+  @SuppressWarnings(\"unchecked\")\n+  static <T> VoidTransform<T> get() {\n+    return (VoidTransform<T>) INSTANCE;\n+  }\n+\n+  private VoidTransform() {\n+  }\n+\n+  @Override\n+  public Void apply(Object value) {\n+    return null;\n+  }\n+\n+  @Override\n+  public boolean canTransform(Type type) {\n+    return true;\n+  }\n+\n+  @Override\n+  public Type getResultType(Type sourceType) {\n+    return sourceType;\n+  }\n+\n+  @Override\n+  public UnboundPredicate<Void> projectStrict(String name, BoundPredicate<S> predicate) {\n+    return null;\n+  }\n+\n+  @Override\n+  public UnboundPredicate<Void> project(String name, BoundPredicate<S> predicate) {\n+    return null;\n+  }\n+\n+  @Override\n+  public String toHumanString(Void value) {\n+    return \"null\";\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"void\";\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659fcd43aa77f91e841e807b134d62a89ffdc437"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b758a87b1a40c25987ba9d11dd8402ae90bd213e", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/b758a87b1a40c25987ba9d11dd8402ae90bd213e", "committedDate": "2020-04-15T20:16:06Z", "message": "Add void transform that always produces null."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "688a37f747c1742b146167d739a1cff54afe7e4a", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/688a37f747c1742b146167d739a1cff54afe7e4a", "committedDate": "2020-04-15T20:21:54Z", "message": "Add tests for PartitionSpecParser."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "659fcd43aa77f91e841e807b134d62a89ffdc437", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/659fcd43aa77f91e841e807b134d62a89ffdc437", "committedDate": "2020-04-15T18:56:56Z", "message": "Add tests for PartitionSpecParser."}, "afterCommit": {"oid": "688a37f747c1742b146167d739a1cff54afe7e4a", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/688a37f747c1742b146167d739a1cff54afe7e4a", "committedDate": "2020-04-15T20:21:54Z", "message": "Add tests for PartitionSpecParser."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e50f2180e0a5fed61e1ea71392be17d8807dde66", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/e50f2180e0a5fed61e1ea71392be17d8807dde66", "committedDate": "2020-04-15T22:04:55Z", "message": "Suppress false positive checkstyle error."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4802, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}