{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzI3MzQy", "number": 1565, "title": "Flink: move hadoop configuration to Loaders from Source/Sink API", "bodyText": "Discussed in: https://github.com/apache/iceberg/pull/1509/files#r496268020", "createdAt": "2020-10-09T03:53:42Z", "url": "https://github.com/apache/iceberg/pull/1565", "merged": true, "mergeCommit": {"oid": "b4ba650441674276a27f432c857fa65a6215779b"}, "closed": true, "closedAt": "2020-10-13T06:25:59Z", "author": {"login": "JingsongLi"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQt9ANgH2gAyNTAwMzI3MzQyOjY0YmUxZjk2NGFmZGJmMmZjYmI2N2Y4MjFjMWZmNDA3MGM4OTIzYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSBoLqABqjM4NjkzMzAwNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64be1f964afdbf2fcbb67f821c1ff4070c8923b6", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/64be1f964afdbf2fcbb67f821c1ff4070c8923b6", "committedDate": "2020-10-09T03:52:23Z", "message": "Flink: move hadoop configuration to Loaders from Source/Sink API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/2a7dc1f3d3fdaa7e5aad21820342c0d671032465", "committedDate": "2020-10-09T05:30:06Z", "message": "Fix ser conf"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDQ4ODcx", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-505448871", "createdAt": "2020-10-09T08:05:48Z", "commit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODowNTo0OFrOHe_Xow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODowNTo0OFrOHe_Xow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI1NzU3MQ==", "bodyText": "Nice catch, since the CatalogLoader need to be serializable, so all members need to be serializable. Do we need to add several unit tests to address the serializable issue so that we won't break it in future ?   similar to the unit test TestScanTaskSerialization ?", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r502257571", "createdAt": "2020-10-09T08:05:48Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/CatalogLoader.java", "diffHunk": "@@ -43,18 +44,18 @@ static CatalogLoader hive(String name, Configuration hadoopConf, String uri, int\n \n   class HadoopCatalogLoader implements CatalogLoader {\n     private final String catalogName;\n-    private final Configuration hadoopConf;\n+    private final SerializableConfiguration hadoopConf;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDYxMDcw", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-505461070", "createdAt": "2020-10-09T08:21:25Z", "commit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoyMToyNVrOHe_7XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoyMToyNVrOHe_7XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NjcxNw==", "bodyText": "Is this only visible for testing ?  Moving to test package ?", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r502266717", "createdAt": "2020-10-09T08:21:25Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/TableLoader.java", "diffHunk": "@@ -45,23 +46,30 @@ static TableLoader fromCatalog(CatalogLoader catalogLoader, TableIdentifier iden\n   }\n \n   static TableLoader fromHadoopTable(String location) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDY2NDk4", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-505466498", "createdAt": "2020-10-09T08:29:02Z", "commit": {"oid": "2a7dc1f3d3fdaa7e5aad21820342c0d671032465"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/04aca2eb41224441903456e79c8afa9a53edb092", "committedDate": "2020-10-09T08:36:24Z", "message": "Fix comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTI2MDA1", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506126005", "createdAt": "2020-10-10T20:58:19Z", "commit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo1ODoxOVrOHfiaAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo1ODoxOVrOHfiaAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMTYxOA==", "bodyText": "It's a little odd that the arguments here are the same as createCatalog, but that they are in a different order and use \"options\" rather than \"properties\". Should we at least use the same argument order?", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r502831618", "createdAt": "2020-10-10T20:58:19Z", "author": {"login": "rdblue"}, "path": "flink/src/main/java/org/apache/iceberg/flink/FlinkCatalogFactory.java", "diffHunk": "@@ -62,21 +62,22 @@\n   /**\n    * Create an Iceberg {@link org.apache.iceberg.catalog.Catalog} loader to be used by this Flink catalog adapter.\n    *\n-   * @param name    Flink's catalog name\n-   * @param options Flink's catalog options\n+   * @param name       Flink's catalog name\n+   * @param hadoopConf Hadoop configuration for catalog\n+   * @param options    Flink's catalog options\n    * @return an Iceberg catalog loader\n    */\n-  protected CatalogLoader createCatalogLoader(String name, Map<String, String> options) {\n+  protected CatalogLoader createCatalogLoader(String name, Configuration hadoopConf, Map<String, String> options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTI2MTk3", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506126197", "createdAt": "2020-10-10T21:01:40Z", "commit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMTowMTo0MFrOHfibRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMTowMTo0MFrOHfibRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMTk0MA==", "bodyText": "I don't think it is sufficient to test that the loader's toString representation is the same. This would still pass if the underlying Configuration were just set to null and not serialized at all. I think it would make sense to do something that will fail if the Configuration is not serialized and deserialized correctly, like load the table. In that case, you would just need to create a Hadoop table on the local FS and load it through the copied loader.", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r502831940", "createdAt": "2020-10-10T21:01:40Z", "author": {"login": "rdblue"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestTableLoader.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.flink;\n+\n+import java.io.IOException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestTableLoader {\n+\n+  @Test\n+  public void testJavaSerialization() throws IOException, ClassNotFoundException {\n+    TableLoader loader = TableLoader.fromHadoopTable(\"/my_path/my_table\");\n+    TableLoader copied = TestCatalogLoader.javaSerAndDeSer(loader);\n+    Assert.assertEquals(\"HadoopTableLoader{location=/my_path/my_table}\", copied.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTI2MjM3", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506126237", "createdAt": "2020-10-10T21:02:22Z", "commit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMTowMjoyMlrOHfibhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMTowMjoyMlrOHfibhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMjAwNQ==", "bodyText": "Same here. I think these tests should do a little more than validate the toString method.", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r502832005", "createdAt": "2020-10-10T21:02:22Z", "author": {"login": "rdblue"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestCatalogLoader.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.flink;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import org.apache.hadoop.conf.Configuration;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+public class TestCatalogLoader {\n+\n+  @Test\n+  public void testHadoopJavaSerialization() throws IOException, ClassNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04aca2eb41224441903456e79c8afa9a53edb092"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6e2bf8da9d5004be4a8340f6746440eb9b617b", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/4d6e2bf8da9d5004be4a8340f6746440eb9b617b", "committedDate": "2020-10-12T04:24:36Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDU3ODk5", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506457899", "createdAt": "2020-10-12T09:38:40Z", "commit": {"oid": "4d6e2bf8da9d5004be4a8340f6746440eb9b617b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODo0MFrOHf2_Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTozODo0MFrOHf2_Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE2ODgwMg==", "bodyText": "nit:   I see somewhere call it options and other place call it properties, is it possible to unify them ?", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r503168802", "createdAt": "2020-10-12T09:38:40Z", "author": {"login": "openinx"}, "path": "flink/src/main/java/org/apache/iceberg/flink/IcebergTableSource.java", "diffHunk": "@@ -68,13 +64,13 @@ public boolean isBounded() {\n \n   @Override\n   public TableSource<RowData> projectFields(int[] fields) {\n-    return new IcebergTableSource(loader, hadoopConf, schema, options, fields);\n+    return new IcebergTableSource(loader, schema, options, fields);\n   }\n \n   @Override\n   public DataStream<RowData> getDataStream(StreamExecutionEnvironment execEnv) {\n-    return FlinkSource.forRowData().env(execEnv).tableLoader(loader).hadoopConf(hadoopConf)\n-        .project(getProjectedSchema()).properties(options).build();\n+    return FlinkSource.forRowData().env(execEnv).tableLoader(loader).project(getProjectedSchema())\n+        .properties(options).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6e2bf8da9d5004be4a8340f6746440eb9b617b"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDYzNjM5", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506463639", "createdAt": "2020-10-12T09:45:47Z", "commit": {"oid": "4d6e2bf8da9d5004be4a8340f6746440eb9b617b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0NTo0N1rOHf3Qwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo0NTo0N1rOHf3Qwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE3MzMxNA==", "bodyText": "Missed a test for HiveTableLoader ?  I think we don't have to open the table actually,  just need to ensure the members inside the instance are the same, maybe adding an equals inside the CatalogLoader or TableLoader.", "url": "https://github.com/apache/iceberg/pull/1565#discussion_r503173314", "createdAt": "2020-10-12T09:45:47Z", "author": {"login": "openinx"}, "path": "flink/src/test/java/org/apache/iceberg/flink/TestCatalogTableLoader.java", "diffHunk": "@@ -0,0 +1,107 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iceberg.flink;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n+import java.io.ObjectOutputStream;\n+import org.apache.iceberg.Schema;\n+import org.apache.iceberg.Table;\n+import org.apache.iceberg.catalog.TableIdentifier;\n+import org.apache.iceberg.hadoop.HadoopFileIO;\n+import org.apache.iceberg.hadoop.HadoopTables;\n+import org.apache.iceberg.io.FileIO;\n+import org.apache.iceberg.types.Types;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+/**\n+ * Test for {@link CatalogLoader} and {@link TableLoader}.\n+ */\n+public class TestCatalogTableLoader extends FlinkTestBase {\n+\n+  private static File warehouse = null;\n+  private static final TableIdentifier IDENTIFIER = TableIdentifier.of(\"default\", \"my_table\");\n+  private static final Schema SCHEMA = new Schema(Types.NestedField.required(1, \"f1\", Types.StringType.get()));\n+\n+  @BeforeClass\n+  public static void createWarehouse() throws IOException {\n+    warehouse = File.createTempFile(\"warehouse\", null);\n+    Assert.assertTrue(warehouse.delete());\n+    hiveConf.set(\"my_key\", \"my_value\");\n+  }\n+\n+  @AfterClass\n+  public static void dropWarehouse() {\n+    if (warehouse != null && warehouse.exists()) {\n+      warehouse.delete();\n+    }\n+  }\n+\n+  @Test\n+  public void testHadoopCatalogLoader() throws IOException, ClassNotFoundException {\n+    CatalogLoader loader = CatalogLoader.hadoop(\"my_catalog\", hiveConf, \"file:\" + warehouse);\n+    validateHadoopConf(javaSerAndDeSer(loader).loadCatalog().createTable(IDENTIFIER, SCHEMA));\n+  }\n+\n+  @Test\n+  public void testHiveCatalogLoader() throws IOException, ClassNotFoundException {\n+    CatalogLoader loader = CatalogLoader.hive(\"my_catalog\", hiveConf, null, 2);\n+    validateHadoopConf(javaSerAndDeSer(loader).loadCatalog().createTable(IDENTIFIER, SCHEMA));\n+  }\n+\n+  @Test\n+  public void testHadoopTableLoader() throws IOException, ClassNotFoundException {\n+    String location = \"file:\" + warehouse + \"/my_table\";\n+    new HadoopTables(hiveConf).create(SCHEMA, location);\n+    TableLoader loader = TableLoader.fromHadoopTable(location, hiveConf);\n+    TableLoader copied = javaSerAndDeSer(loader);\n+    copied.open();\n+    try {\n+      validateHadoopConf(copied.loadTable());\n+    } finally {\n+      copied.close();\n+    }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d6e2bf8da9d5004be4a8340f6746440eb9b617b"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30c2cf7280d5ea07b98ab44d3928d08414500bbd", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/30c2cf7280d5ea07b98ab44d3928d08414500bbd", "committedDate": "2020-10-12T09:48:18Z", "message": "more options to properties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2Nzk0MjIw", "url": "https://github.com/apache/iceberg/pull/1565#pullrequestreview-506794220", "createdAt": "2020-10-12T17:19:50Z", "commit": {"oid": "30c2cf7280d5ea07b98ab44d3928d08414500bbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a452321f68965cfb2de96e9d9ce748f0c9612d0", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/0a452321f68965cfb2de96e9d9ce748f0c9612d0", "committedDate": "2020-10-13T05:21:25Z", "message": "Add test for TableLoader.fromCatalog"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66074ea5e3341e6c36103c39d8a567dc78d69e80", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/66074ea5e3341e6c36103c39d8a567dc78d69e80", "committedDate": "2020-10-13T03:55:12Z", "message": "Minor"}, "afterCommit": {"oid": "0a452321f68965cfb2de96e9d9ce748f0c9612d0", "author": {"user": {"login": "JingsongLi", "name": "Jingsong Lee"}}, "url": "https://github.com/apache/iceberg/commit/0a452321f68965cfb2de96e9d9ce748f0c9612d0", "committedDate": "2020-10-13T05:21:25Z", "message": "Add test for TableLoader.fromCatalog"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3913, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}