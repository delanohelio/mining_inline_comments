{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNTEzOTMw", "number": 1570, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0MTo0MFrOEsUKLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0MTo0MFrOEsUKLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTAzMDg3OnYy", "diffSide": "RIGHT", "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0MTo0MFrOHfiUhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMDozNTo0MlrOHhMxgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA==", "bodyText": "Rather than creating more test cases, we usually parameterize the test suite. TestIdentityPartitionData is an example. Could you use that approach instead? Or is there a reason why you chose to do it this way?", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502830214", "createdAt": "2020-10-10T20:41:40Z", "author": {"login": "rdblue"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -136,18 +136,50 @@ public void after() throws Exception {\n     }\n   }\n \n+  // PARQUET\n+\n+  @Test\n+  public void testScanEmptyTableParquet() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be00db17d87907054561cd993d6702f1ac618"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzODE3Mw==", "bodyText": "Hi @rdblue, thanks for taking a look! The reason I did that is because these StorageHandler tests already use a different test runner (StandaloneHiveRunner), therefore I couldn't use Parameterized.class as well. I've tried to outline this rationale in the PR description, but I'm afraid it must have gotten lost in my rather long-winded sentences... :)", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502838173", "createdAt": "2020-10-10T22:17:59Z", "author": {"login": "marton-bod"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -136,18 +136,50 @@ public void after() throws Exception {\n     }\n   }\n \n+  // PARQUET\n+\n+  @Test\n+  public void testScanEmptyTableParquet() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}, "originalCommit": {"oid": "1e5be00db17d87907054561cd993d6702f1ac618"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzODMyMA==", "bodyText": "Sorry, my mistake!", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r502838320", "createdAt": "2020-10-10T22:19:48Z", "author": {"login": "rdblue"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -136,18 +136,50 @@ public void after() throws Exception {\n     }\n   }\n \n+  // PARQUET\n+\n+  @Test\n+  public void testScanEmptyTableParquet() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}, "originalCommit": {"oid": "1e5be00db17d87907054561cd993d6702f1ac618"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU3NDMzOA==", "bodyText": "I'm afraid this isn't possible with HiveRunner using JUnit4 rules but it is possible using JUnit5 extensions as this doesn't require a different extension to be used, the @ParameterizedTest annotation can go at the method level and then the two play nicely together. So, if/when Iceberg moves to JUnit5 we could refactor all this.", "url": "https://github.com/apache/iceberg/pull/1570#discussion_r504574338", "createdAt": "2020-10-14T10:35:42Z", "author": {"login": "massdosage"}, "path": "mr/src/test/java/org/apache/iceberg/mr/hive/HiveIcebergStorageHandlerBaseTest.java", "diffHunk": "@@ -136,18 +136,50 @@ public void after() throws Exception {\n     }\n   }\n \n+  // PARQUET\n+\n+  @Test\n+  public void testScanEmptyTableParquet() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDIxNA=="}, "originalCommit": {"oid": "1e5be00db17d87907054561cd993d6702f1ac618"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3580, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}