{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzk2MTky", "number": 1569, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNDoyNVrOEsFqFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0ODozOFrOEsUMEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjY1NDk0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNDoyNVrOHfNxCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNDoyNVrOHfNxCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5MzQ0OA==", "bodyText": "nits: Missing a space after the comma\nnumber of bucket(s)", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502493448", "createdAt": "2020-10-09T15:04:25Z", "author": {"login": "RussellSpitzer"}, "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "diffHunk": "@@ -44,6 +45,9 @@\n \n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n+    Preconditions.checkArgument(numBuckets > 0,\n+        \"The number of bucket must larger than zero,but is %s\", numBuckets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjY1Njc0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNDo1NVrOHfNyLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNDo1NVrOHfNyLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5Mzc0MA==", "bodyText": "nit: Space after comma", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502493740", "createdAt": "2020-10-09T15:04:55Z", "author": {"login": "RussellSpitzer"}, "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "diffHunk": "@@ -30,12 +30,16 @@\n import org.apache.iceberg.expressions.Expressions;\n import org.apache.iceberg.expressions.UnboundPredicate;\n import org.apache.iceberg.relocated.com.google.common.base.Objects;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n import org.apache.iceberg.types.Type;\n import org.apache.iceberg.util.UnicodeUtil;\n \n abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n+    Preconditions.checkArgument(width > 0,\n+        \"The width of truncate must larger than zero,but is %s\", width);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjY1ODk5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNToyN1rOHfNzbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTowNToyN1rOHfNzbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjQ5NDA2MQ==", "bodyText": "bucket -> buckets , but here it matters less since it's just a test message", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502494061", "createdAt": "2020-10-09T15:05:27Z", "author": {"login": "RussellSpitzer"}, "path": "api/src/test/java/org/apache/iceberg/transforms/TestBucketing.java", "diffHunk": "@@ -275,6 +276,14 @@ public void testUUIDHash() {\n         hashBytes(uuidBytes), bucketFunc.hash(uuid));\n   }\n \n+  @Test\n+  public void testVerifiedIllegalNumBucket() {\n+    AssertHelpers.assertThrows(\"Should fail if numBucket is less than or equal to zero\",\n+        IllegalArgumentException.class,\n+        \"The number of bucket must larger than zero\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Njg1NjM3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1MzoyMVrOHfPpxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1MzoyMVrOHfPpxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNDM1Ng==", "bodyText": "must larger -> must be larger, here and in other places with similar message", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502524356", "createdAt": "2020-10-09T15:53:21Z", "author": {"login": "shardulm94"}, "path": "api/src/test/java/org/apache/iceberg/transforms/TestTruncate.java", "diffHunk": "@@ -86,4 +87,12 @@ public void testTruncateByteBuffer() throws Exception {\n         ByteBuffer.wrap(\"abc\".getBytes(\"UTF-8\")),\n         trunc.apply(ByteBuffer.wrap(\"abc\".getBytes(\"UTF-8\"))));\n   }\n+\n+  @Test\n+  public void testVerifiedIllegalWidth() {\n+    AssertHelpers.assertThrows(\"Should fail if width is less than or equal to zero\",\n+        IllegalArgumentException.class,\n+        \"The width of truncate must larger than zero\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "403fa63fdb373aaed52d5d1db6a3e3a8d18a344c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTAzNTM2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0ODowNFrOHfiWow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQxNTowMDo0NFrOHfoNng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc1NQ==", "bodyText": "How about \"Invalid truncate width: %s\"? We try to keep error messages a bit shorter and clearer, with the most useful information up front. In this case, the problem is that the truncate width is invalid. We can also add more clarification if you want, like \"Invalid truncate width: %s (must be > 0)\"", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502830755", "createdAt": "2020-10-10T20:48:04Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "diffHunk": "@@ -30,12 +30,16 @@\n import org.apache.iceberg.expressions.Expressions;\n import org.apache.iceberg.expressions.UnboundPredicate;\n import org.apache.iceberg.relocated.com.google.common.base.Objects;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n import org.apache.iceberg.types.Type;\n import org.apache.iceberg.util.UnicodeUtil;\n \n abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n+    Preconditions.checkArgument(width > 0,\n+        \"The width of truncate must be larger than zero, but is %s\", width);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "871cdadfce6e834ce5c2bdfd365e4928c7568d12"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjkyNjc1MA==", "bodyText": "Thank you for the succinct error message, It's great for me.", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502926750", "createdAt": "2020-10-11T15:00:44Z", "author": {"login": "zhangdove"}, "path": "api/src/main/java/org/apache/iceberg/transforms/Truncate.java", "diffHunk": "@@ -30,12 +30,16 @@\n import org.apache.iceberg.expressions.Expressions;\n import org.apache.iceberg.expressions.UnboundPredicate;\n import org.apache.iceberg.relocated.com.google.common.base.Objects;\n+import org.apache.iceberg.relocated.com.google.common.base.Preconditions;\n import org.apache.iceberg.types.Type;\n import org.apache.iceberg.util.UnicodeUtil;\n \n abstract class Truncate<T> implements Transform<T, T> {\n   @SuppressWarnings(\"unchecked\")\n   static <T> Truncate<T> get(Type type, int width) {\n+    Preconditions.checkArgument(width > 0,\n+        \"The width of truncate must be larger than zero, but is %s\", width);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc1NQ=="}, "originalCommit": {"oid": "871cdadfce6e834ce5c2bdfd365e4928c7568d12"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0OTAzNTcwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0ODozOFrOHfiWzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQyMDo0ODozOFrOHfiWzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjgzMDc5Ng==", "bodyText": "Same here. What about \"Invalid number of buckets: %s (must be > 0)\"?", "url": "https://github.com/apache/iceberg/pull/1569#discussion_r502830796", "createdAt": "2020-10-10T20:48:38Z", "author": {"login": "rdblue"}, "path": "api/src/main/java/org/apache/iceberg/transforms/Bucket.java", "diffHunk": "@@ -44,6 +45,9 @@\n \n   @SuppressWarnings(\"unchecked\")\n   static <T> Bucket<T> get(Type type, int numBuckets) {\n+    Preconditions.checkArgument(numBuckets > 0,\n+        \"The number of bucket(s) must be larger than zero, but is %s\", numBuckets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "871cdadfce6e834ce5c2bdfd365e4928c7568d12"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3579, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}