{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MDQ0OTkw", "number": 1443, "title": "Core: Fix table load error on corrupted version-hint.text file", "bodyText": "During my testing I have noticed that if the version-hint.text file content is empty then we can not read the table anymore.\nBased on @rdblue's comment on the mail list this is not the expected behavior. We should try to recover from it.\nThis patch starts to read the metadata files from version 1 if the version-hint.text content can not be parsed, or there is an error reading the file. The only remaining failure situation is if the file itself does not exists - I use this case to double-check that we have really manipulated the correct file, and not just reading the old file again and again \ud83d\ude04", "createdAt": "2020-09-11T12:56:58Z", "url": "https://github.com/apache/iceberg/pull/1443", "merged": true, "mergeCommit": {"oid": "c519d1986d61d88ea2dfb000f07621bdb3ea7e11"}, "closed": true, "closedAt": "2020-09-14T17:03:47Z", "author": {"login": "pvary"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH07jagH2gAyNDg1MDQ0OTkwOjY0YTczNmQ4Mjc1YzA0OTMwODFjMzg1YTU5NTE0YjA3MmIxMzRiMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdI2R4XAH2gAyNDg1MDQ0OTkwOjgwNTZmN2ZjZDkxZTdkYTQzOGM2MzY2YThkNWZhYTFlMzNmMTMyZGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "64a736d8275c0493081c385a59514b072b134b18", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/64a736d8275c0493081c385a59514b072b134b18", "committedDate": "2020-09-11T12:54:49Z", "message": "Core: Fix corrupted version-hint.text preventing table load"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MTAxMjUy", "url": "https://github.com/apache/iceberg/pull/1443#pullrequestreview-487101252", "createdAt": "2020-09-11T20:23:24Z", "commit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoyMzoyNFrOHQsvzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoyMzoyNFrOHQsvzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MjM5OA==", "bodyText": "Should we move Util.getFs out of this try/catch block? An IOException from not being able to load the FS should probably fail instead of returning a hint.", "url": "https://github.com/apache/iceberg/pull/1443#discussion_r487272398", "createdAt": "2020-09-11T20:23:24Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTableOperations.java", "diffHunk": "@@ -290,8 +292,10 @@ private int readVersionHint() {\n         return Integer.parseInt(in.readLine().replace(\"\\n\", \"\"));\n       }\n \n-    } catch (IOException e) {\n-      throw new RuntimeIOException(e, \"Failed to get file system for path: %s\", versionHintFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MTAyMTQ5", "url": "https://github.com/apache/iceberg/pull/1443#pullrequestreview-487102149", "createdAt": "2020-09-11T20:25:02Z", "commit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoyNTowM1rOHQsybg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDoyNTowM1rOHQsybg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3MzA3MA==", "bodyText": "I don't think this is correct. If the hint file is missing, the table should still be readable.", "url": "https://github.com/apache/iceberg/pull/1443#discussion_r487273070", "createdAt": "2020-09-11T20:25:03Z", "author": {"login": "rdblue"}, "path": "core/src/test/java/org/apache/iceberg/hadoop/TestHadoopCatalog.java", "diffHunk": "@@ -441,4 +447,70 @@ public void testDropNamespace() throws IOException {\n     FileSystem fs = Util.getFs(new Path(metaLocation), conf);\n     Assert.assertFalse(fs.isDirectory(new Path(metaLocation)));\n   }\n+\n+  @Test\n+  public void testVersionHintFile() throws Exception {\n+    Configuration conf = new Configuration();\n+    String warehousePath = temp.newFolder().getAbsolutePath();\n+    HadoopCatalog catalog = new HadoopCatalog(conf, warehousePath);\n+\n+    // Create a test table with multiple versions\n+    TableIdentifier tableId = TableIdentifier.of(\"tbl\");\n+    Table table = catalog.createTable(tableId, SCHEMA, PartitionSpec.unpartitioned());\n+\n+    DataFile dataFile1 = DataFiles.builder(SPEC)\n+        .withPath(\"/a.parquet\")\n+        .withFileSizeInBytes(10)\n+        .withRecordCount(1)\n+        .build();\n+\n+    DataFile dataFile2 = DataFiles.builder(SPEC)\n+        .withPath(\"/b.parquet\")\n+        .withFileSizeInBytes(10)\n+        .withRecordCount(1)\n+        .build();\n+\n+    table.newAppend().appendFile(dataFile1).commit();\n+    table.newAppend().appendFile(dataFile2).commit();\n+    long secondSnapshotId = table.currentSnapshot().snapshotId();\n+\n+    // Get the version-hint.text file location\n+    String versionHintLocation = ((HadoopTableOperations) catalog.newTableOps(tableId)).versionHintFile().toString();\n+\n+    // Write old data to confirm that we are writing the correct file\n+    FileIO io = new HadoopFileIO(conf);\n+    io.deleteFile(versionHintLocation);\n+    try (PositionOutputStream stream = io.newOutputFile(versionHintLocation).create()) {\n+      stream.write(\"1\".getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    // Load the table and check the current snapshotId\n+    Assert.assertEquals(secondSnapshotId, catalog.loadTable(tableId).currentSnapshot().snapshotId());\n+\n+    // Write newer data to confirm that we are writing the correct file\n+    io.deleteFile(versionHintLocation);\n+    try (PositionOutputStream stream = io.newOutputFile(versionHintLocation).create()) {\n+      stream.write(\"3\".getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    // Load the table and check the current snapshotId\n+    Assert.assertEquals(secondSnapshotId, catalog.loadTable(tableId).currentSnapshot().snapshotId());\n+\n+    // Write an empty version hint file\n+    io.deleteFile(versionHintLocation);\n+    io.newOutputFile(versionHintLocation).create().close();\n+\n+    // Load the table and check the current snapshotId\n+    Assert.assertEquals(secondSnapshotId, catalog.loadTable(tableId).currentSnapshot().snapshotId());\n+\n+    // Just delete the file - double check that we have manipulated the correct file\n+    io.deleteFile(versionHintLocation);\n+\n+    // Check that exception is thrown\n+    AssertHelpers.assertThrows(\n+        \"Should not be able to find the table\",\n+        NoSuchTableException.class,\n+        \"Table does not exist: tbl\",\n+        () -> catalog.loadTable(tableId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "originalPosition": 94}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3Mjg2ODk1", "url": "https://github.com/apache/iceberg/pull/1443#pullrequestreview-487286895", "createdAt": "2020-09-13T08:39:57Z", "commit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwODozOTo1N1rOHQ6qvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xM1QwODozOTo1N1rOHQ6qvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUwMDQ3OQ==", "bodyText": "Should this return 0 instead? Similar to when the version hint file does not exist?", "url": "https://github.com/apache/iceberg/pull/1443#discussion_r487500479", "createdAt": "2020-09-13T08:39:57Z", "author": {"login": "shardulm94"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTableOperations.java", "diffHunk": "@@ -290,8 +292,10 @@ private int readVersionHint() {\n         return Integer.parseInt(in.readLine().replace(\"\\n\", \"\"));\n       }\n \n-    } catch (IOException e) {\n-      throw new RuntimeIOException(e, \"Failed to get file system for path: %s\", versionHintFile);\n+    } catch (Exception e) {\n+      LOG.warn(\"Error reading version hint file {}\", versionHintFile, e);\n+      // We just assume corrupted metadata and start to read from the first version file\n+      return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a736d8275c0493081c385a59514b072b134b18"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a178ce70ca5ea2ac4b63e14d536b7daaf5f5c40c", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/a178ce70ca5ea2ac4b63e14d536b7daaf5f5c40c", "committedDate": "2020-09-14T08:02:05Z", "message": "Adding recovery for more cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68d5c482e1e71e9f87a3064beeb69703c50a9343", "author": {"user": {"login": "pvary", "name": null}}, "url": "https://github.com/apache/iceberg/commit/68d5c482e1e71e9f87a3064beeb69703c50a9343", "committedDate": "2020-09-14T08:48:41Z", "message": "Removed Util.getFs from the try/catch so we throw an exception if there is a problem with the path/fs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTYzMzQw", "url": "https://github.com/apache/iceberg/pull/1443#pullrequestreview-487963340", "createdAt": "2020-09-14T16:50:21Z", "commit": {"oid": "68d5c482e1e71e9f87a3064beeb69703c50a9343"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo1MDoyMVrOHReBuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo1MDoyMVrOHReBuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3OTgwMQ==", "bodyText": "Nit: unnecessary newline.", "url": "https://github.com/apache/iceberg/pull/1443#discussion_r488079801", "createdAt": "2020-09-14T16:50:21Z", "author": {"login": "rdblue"}, "path": "core/src/main/java/org/apache/iceberg/hadoop/HadoopTableOperations.java", "diffHunk": "@@ -277,21 +279,30 @@ private void writeVersionHint(int versionToWrite) {\n     }\n   }\n \n-  private int readVersionHint() {\n+  @VisibleForTesting\n+  int readVersionHint() {\n     Path versionHintFile = versionHintFile();\n-    try {\n-      FileSystem fs = Util.getFs(versionHintFile, conf);\n-      if (!fs.exists(versionHintFile)) {\n-        return 0;\n-      }\n+    FileSystem fs = Util.getFs(versionHintFile, conf);\n+\n+    try (InputStreamReader fsr = new InputStreamReader(fs.open(versionHintFile), StandardCharsets.UTF_8);\n+         BufferedReader in = new BufferedReader(fsr)) {\n+      return Integer.parseInt(in.readLine().replace(\"\\n\", \"\"));\n \n-      try (InputStreamReader fsr = new InputStreamReader(fs.open(versionHintFile), StandardCharsets.UTF_8);\n-           BufferedReader in = new BufferedReader(fsr)) {\n-        return Integer.parseInt(in.readLine().replace(\"\\n\", \"\"));\n+    } catch (Exception e) {\n+      LOG.warn(\"Error reading version hint file {}\", versionHintFile, e);\n+      try {\n+        if (getMetadataFile(1) != null) {\n+          // We just assume corrupted metadata and start to read from the first version file\n+          return 1;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68d5c482e1e71e9f87a3064beeb69703c50a9343"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8056f7fcd91e7da438c6366a8d5faa1e33f132df", "author": {"user": {"login": "rdblue", "name": "Ryan Blue"}}, "url": "https://github.com/apache/iceberg/commit/8056f7fcd91e7da438c6366a8d5faa1e33f132df", "committedDate": "2020-09-14T17:03:02Z", "message": "Update HadoopTableOperations.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4196, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}