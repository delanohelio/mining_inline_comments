{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NTI4ODU3", "number": 1740, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOToyNzo0NlrOFC0mFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOToyNzo0NlrOFC0mFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTAzMTkxOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/BaseTransaction.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOToyNzo0NlrOICKyLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzo0MDoxM1rOIFQ5CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0NDc1MQ==", "bodyText": "@mmusgrov - if we go ahead with this kind of change then I think maybe the threads would be prefixed with something like \"Narayana\" instead", "url": "https://github.com/jbosstm/narayana/pull/1740#discussion_r539144751", "createdAt": "2020-12-09T09:27:46Z", "author": {"login": "tomjenkinson"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/BaseTransaction.java", "diffHunk": "@@ -308,6 +310,21 @@ public Void call() throws InvalidTransactionException,\n \n \tprivate static final int _asyncCommitPoolSize = jtaPropertyManager.getJTAEnvironmentBean().getAsyncCommitPoolSize();\n \n-\tprivate static final ThreadPoolExecutor tpe = new ThreadPoolExecutor(1, _asyncCommitPoolSize, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(3));\n+\tstatic class NamedThreadFactory implements ThreadFactory {\n+\t\tprivate final String name;\n+\t\tprivate final AtomicInteger counter = new AtomicInteger();\n+\n+\t\tNamedThreadFactory(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\treturn new Thread(r, name + \"-Thread_\" + counter.incrementAndGet());\n+\t\t}\n+\t}\n+\n+\tprivate static final ThreadFactory transactionThreadFactory = new NamedThreadFactory(\"Arjuna-Transaction\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d32a763c0062b103b939fac843ce08ce0b907d2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM2NDgwOA==", "bodyText": "@tomjenkinson so you think the code needs to be:\nnew NamedThreadFactory(\"Narayana\");", "url": "https://github.com/jbosstm/narayana/pull/1740#discussion_r539364808", "createdAt": "2020-12-09T14:44:44Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/BaseTransaction.java", "diffHunk": "@@ -308,6 +310,21 @@ public Void call() throws InvalidTransactionException,\n \n \tprivate static final int _asyncCommitPoolSize = jtaPropertyManager.getJTAEnvironmentBean().getAsyncCommitPoolSize();\n \n-\tprivate static final ThreadPoolExecutor tpe = new ThreadPoolExecutor(1, _asyncCommitPoolSize, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(3));\n+\tstatic class NamedThreadFactory implements ThreadFactory {\n+\t\tprivate final String name;\n+\t\tprivate final AtomicInteger counter = new AtomicInteger();\n+\n+\t\tNamedThreadFactory(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\treturn new Thread(r, name + \"-Thread_\" + counter.incrementAndGet());\n+\t\t}\n+\t}\n+\n+\tprivate static final ThreadFactory transactionThreadFactory = new NamedThreadFactory(\"Arjuna-Transaction\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0NDc1MQ=="}, "originalCommit": {"oid": "3d32a763c0062b103b939fac843ce08ce0b907d2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM4MTUxNQ==", "bodyText": "I think if we want this general type of behaviour from this PR then specifically in this are then it could be more appropriate to use \"Narayana\" than \"Arjuna\" in the wording. I then guess \"Narayana\" rather than \"Narayana-Transaction\" - if the \"-Transaction\" suffix can help that could be considered.", "url": "https://github.com/jbosstm/narayana/pull/1740#discussion_r539381515", "createdAt": "2020-12-09T15:03:55Z", "author": {"login": "tomjenkinson"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/BaseTransaction.java", "diffHunk": "@@ -308,6 +310,21 @@ public Void call() throws InvalidTransactionException,\n \n \tprivate static final int _asyncCommitPoolSize = jtaPropertyManager.getJTAEnvironmentBean().getAsyncCommitPoolSize();\n \n-\tprivate static final ThreadPoolExecutor tpe = new ThreadPoolExecutor(1, _asyncCommitPoolSize, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(3));\n+\tstatic class NamedThreadFactory implements ThreadFactory {\n+\t\tprivate final String name;\n+\t\tprivate final AtomicInteger counter = new AtomicInteger();\n+\n+\t\tNamedThreadFactory(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\treturn new Thread(r, name + \"-Thread_\" + counter.incrementAndGet());\n+\t\t}\n+\t}\n+\n+\tprivate static final ThreadFactory transactionThreadFactory = new NamedThreadFactory(\"Arjuna-Transaction\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0NDc1MQ=="}, "originalCommit": {"oid": "3d32a763c0062b103b939fac843ce08ce0b907d2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM5MDUzNw==", "bodyText": "@krosenvold can you please use as the prefix just word Narayana?", "url": "https://github.com/jbosstm/narayana/pull/1740#discussion_r542390537", "createdAt": "2020-12-14T13:40:13Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/BaseTransaction.java", "diffHunk": "@@ -308,6 +310,21 @@ public Void call() throws InvalidTransactionException,\n \n \tprivate static final int _asyncCommitPoolSize = jtaPropertyManager.getJTAEnvironmentBean().getAsyncCommitPoolSize();\n \n-\tprivate static final ThreadPoolExecutor tpe = new ThreadPoolExecutor(1, _asyncCommitPoolSize, 10, TimeUnit.SECONDS, new ArrayBlockingQueue<Runnable>(3));\n+\tstatic class NamedThreadFactory implements ThreadFactory {\n+\t\tprivate final String name;\n+\t\tprivate final AtomicInteger counter = new AtomicInteger();\n+\n+\t\tNamedThreadFactory(String name) {\n+\t\t\tthis.name = name;\n+\t\t}\n+\n+\t\tpublic Thread newThread(Runnable r) {\n+\t\t\treturn new Thread(r, name + \"-Thread_\" + counter.incrementAndGet());\n+\t\t}\n+\t}\n+\n+\tprivate static final ThreadFactory transactionThreadFactory = new NamedThreadFactory(\"Arjuna-Transaction\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE0NDc1MQ=="}, "originalCommit": {"oid": "3d32a763c0062b103b939fac843ce08ce0b907d2"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1162, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}