{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NTI4Mzky", "number": 1584, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0Mjo1MVrODuA1wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMDoyNVrODuXfOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTc0ODQ4OnYy", "diffSide": "LEFT", "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0Mjo1MVrOF_xdOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0Mjo1MVrOF_xdOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxNDkwNw==", "bodyText": "Implementations of third party interfaces still need a copyright.", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402414907", "createdAt": "2020-04-02T15:42:51Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "diffHunk": "@@ -1,57 +1,27 @@\n-/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4d347bf84580bd5eb2fb9ff707337481a18efbc"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTc2MjQwOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0NjowNVrOF_xmEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0NjowNVrOF_xmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxNzE2OA==", "bodyText": "Superfluous extra line.", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402417168", "createdAt": "2020-04-02T15:46:05Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "diffHunk": "@@ -81,6 +51,7 @@ private boolean recoverLRAs(String host, int port, URI lraId) {\n             String json = response.readEntity(String.class);\n             response.close();\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4d347bf84580bd5eb2fb9ff707337481a18efbc"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTgwMzk0OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1NToxOFrOF_yAyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1NToxOFrOF_yAyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNDAxMA==", "bodyText": "I know it's not part of the PR but the reason we don't need an implementation is that callbacks are invoked synchronously (to the application logic via a JAX-RS server side filter), ie speed is not the reason. And the reason for doing it synchronously is that JAX-RS does not support asynchronous filters. Will you either update or delete the comment altogether.\nBut Resteasy does support them (https://docs.jboss.org/resteasy/docs/3.9.1.Final/userguide/html/Interceptors.html#d4e1983). I will dig out an earlier implementation that did do this to see if it can still be made to work.", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402424010", "createdAt": "2020-04-02T15:55:18Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "diffHunk": "@@ -1,57 +1,27 @@\n-/*\n- * JBoss, Home of Professional Open Source.\n- * Copyright 2020, Red Hat, Inc., and individual contributors\n- * as indicated by the @author tags. See the copyright.txt file in the\n- * distribution for a full listing of individual contributors.\n- *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU Lesser General Public License as\n- * published by the Free Software Foundation; either version 2.1 of\n- * the License, or (at your option) any later version.\n- *\n- * This software is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this software; if not, write to the Free\n- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n- */\n-\n package io.narayana.lra.arquillian.spi;\n \n import io.narayana.lra.LRAConstants;\n-import io.narayana.lra.logging.LRALogger;\n+import org.eclipse.microprofile.lra.tck.service.spi.LRARecoveryService;\n \n import javax.ws.rs.client.Client;\n import javax.ws.rs.client.ClientBuilder;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.Response;\n import java.net.URI;\n \n-public class NarayanaLRARecovery {\n+public class NarayanaLRARecovery implements LRARecoveryService {\n \n+    @Override\n     public void waitForCallbacks(URI lraId) {\n         // no action is needed, tck callbacks calls are sufficiently fast for TCK", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4d347bf84580bd5eb2fb9ff707337481a18efbc"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NTgwNTA4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1NTozNVrOF_yBjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1NTozNVrOF_yBjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyNDIwNg==", "bodyText": "typo", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402424206", "createdAt": "2020-04-02T15:55:35Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-test/lra-test-arquillian-extension/src/main/java/io/narayana/lra/arquillian/spi/NarayanaLRARecovery.java", "diffHunk": "@@ -1,57 +1,27 @@\n-/*\n- * JBoss, Home of Professional Open Source.\n- * Copyright 2020, Red Hat, Inc., and individual contributors\n- * as indicated by the @author tags. See the copyright.txt file in the\n- * distribution for a full listing of individual contributors.\n- *\n- * This is free software; you can redistribute it and/or modify it\n- * under the terms of the GNU Lesser General Public License as\n- * published by the Free Software Foundation; either version 2.1 of\n- * the License, or (at your option) any later version.\n- *\n- * This software is distributed in the hope that it will be useful,\n- * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n- * Lesser General Public License for more details.\n- *\n- * You should have received a copy of the GNU Lesser General Public\n- * License along with this software; if not, write to the Free\n- * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n- * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n- */\n-\n package io.narayana.lra.arquillian.spi;\n \n import io.narayana.lra.LRAConstants;\n-import io.narayana.lra.logging.LRALogger;\n+import org.eclipse.microprofile.lra.tck.service.spi.LRARecoveryService;\n \n import javax.ws.rs.client.Client;\n import javax.ws.rs.client.ClientBuilder;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.Response;\n import java.net.URI;\n \n-public class NarayanaLRARecovery {\n+public class NarayanaLRARecovery implements LRARecoveryService {\n \n+    @Override\n     public void waitForCallbacks(URI lraId) {\n         // no action is needed, tck callbacks calls are sufficiently fast for TCK\n     }\n \n-    // TODO remove once this class implements LRARecoveryService\n-    public void waitForRecovery(URI lraId) {\n-        int counter = 0;\n-\n-        do {\n-            LRALogger.logger.info(\"Recovery attempt #\" + ++counter);\n-        } while (!waitForEndPhaseReplay(lraId));\n-        LRALogger.logger.info(\"LRA \" + lraId + \" has finished the recovery \" + counter);\n-    }\n-\n+    @Override\n     public boolean waitForEndPhaseReplay(URI lraId) {\n         String host = lraId.getHost();\n         int port = lraId.getPort();\n         if (!recoverLRAs(host, port, lraId)) {\n-            // first recovery scan probably collided with periodic recovery which started\n+            // first recovery scan probably collided with periodic recovevery which started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4d347bf84580bd5eb2fb9ff707337481a18efbc"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTQ1OTE1OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-test/lra-test-tck/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMDoyNVrOGAUaWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzowMzozMFrOGAUhEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4NzYwOA==", "bodyText": "Will you include a comment explaining why these tests are skipped and also update the issue to explain what still needs doing.", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402987608", "createdAt": "2020-04-03T13:00:25Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-test/lra-test-tck/pom.xml", "diffHunk": "@@ -25,6 +25,31 @@\n         <lra.tck.consistency.longDelay>20000</lra.tck.consistency.longDelay>\n \n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n+        <it.test>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852a561025d48f562c8715bf9b2d37c1dbe5b193"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4OTMzMA==", "bodyText": "ok", "url": "https://github.com/jbosstm/narayana/pull/1584#discussion_r402989330", "createdAt": "2020-04-03T13:03:30Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-test/lra-test-tck/pom.xml", "diffHunk": "@@ -25,6 +25,31 @@\n         <lra.tck.consistency.longDelay>20000</lra.tck.consistency.longDelay>\n \n         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+\n+        <it.test>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjk4NzYwOA=="}, "originalCommit": {"oid": "852a561025d48f562c8715bf9b2d37c1dbe5b193"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1278, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}