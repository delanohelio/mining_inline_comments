{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MzQxOTc0", "number": 1717, "title": "JBTM-3342 Propagate the parent context header (Long-Running-Action-Pa\u2026", "bodyText": "https://issues.redhat.com/browse/JBTM-3342\nLRA\n!MAIN !CORE !QA_JTA !QA_JTS_JDKORB !QA_JTS_OPENJDKORB !QA_JTS_JACORB !BLACKTIE !XTS !PERF NO_WIN !RTS !AS_TESTS !TOMCAT !JACOCO\nWhen propagating a nested context expose the parent context header on calls to methods carrying an LRA annotation.", "createdAt": "2020-11-08T17:33:59Z", "url": "https://github.com/jbosstm/narayana/pull/1717", "merged": true, "mergeCommit": {"oid": "251d2a8ba40da1084eb403ea36dfffa949240af1"}, "closed": true, "closedAt": "2020-11-17T19:41:27Z", "author": {"login": "mmusgrov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdaw5xsgFqTUyNjAzNzQ0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddd7kWgBqjQwMDY5NDM4NzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDM3NDQx", "url": "https://github.com/jbosstm/narayana/pull/1717#pullrequestreview-526037441", "createdAt": "2020-11-09T08:53:26Z", "commit": {"oid": "36aa27618636cc291e41af5cd172720fc8b0ac63"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODo1MzoyN1rOHvkd6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODo1NzoxMFrOHvkmdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0MjYwMg==", "bodyText": "this will override user-provided header. Is it intended behavior?", "url": "https://github.com/jbosstm/narayana/pull/1717#discussion_r519642602", "createdAt": "2020-11-09T08:53:27Z", "author": {"login": "xstefank"}, "path": "rts/lra/jaxrs/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java", "diffHunk": "@@ -271,6 +271,28 @@ public void filter(ContainerRequestContext containerRequestContext) {\n                 lraId = incommingLRA;\n         }\n \n+        String query = incommingLRA == null ? null : incommingLRA.getQuery();\n+\n+        if (query != null) {\n+            for (String param : query.split(\"&\")) { // or apply a regex matching parent=...\n+                if (param.startsWith(\"parent=\")) {\n+                    String parent = param.split(\"=\", 2)[1];\n+\n+                    try {\n+                        // verify that parent corresponds to a valid URI\n+                        new URI(parent);\n+                        // the parent param was generated using URI.toASCIIString\n+                        headers.putSingle(LRA_HTTP_PARENT_CONTEXT_HEADER, parent);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36aa27618636cc291e41af5cd172720fc8b0ac63"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0MzcwOA==", "bodyText": "Remove this please and add a comment explaining that the header is populated by the filter automatically?", "url": "https://github.com/jbosstm/narayana/pull/1717#discussion_r519643708", "createdAt": "2020-11-09T08:55:17Z", "author": {"login": "xstefank"}, "path": "rts/lra/test/basic/src/test/java/io/narayana/lra/arquillian/NestedParticipantIT.java", "diffHunk": "@@ -99,34 +106,71 @@ public void nestedParticipantAfterLRACallTest() {\n                 .header(LRA.LRA_HTTP_CONTEXT_HEADER, parentLRA)\n                 .get();\n \n-            Assert.assertEquals(200, response.getStatus());\n+            assertEquals(200, response.getStatus());\n             Assert.assertTrue(response.hasEntity());\n \n             nestedLRA = URI.create(response.readEntity(String.class));\n-            Assert.assertNotEquals(parentLRA, nestedLRA);\n-            Assert.assertEquals(1, lraMetricService.getMetric(LRAMetricType.Nested, parentLRA, NestedParticipant.class));\n+            assertNotEquals(parentLRA, nestedLRA);\n+            assertEquals(1, lraMetricService.getMetric(LRAMetricType.Nested, parentLRA, NestedParticipant.class));\n         } finally {\n             if (response != null) {\n                 response.close();\n             }\n         }\n \n         // close nested LRA\n-        narayanaLRAClient.closeLRA(nestedLRA);\n+        lraClient.closeLRA(nestedLRA);\n         // the nested LRA should be in Closed state, however, we keep it in Closing state\n         // so we can't wait for the recovery of the nested LRA\n         // https://issues.redhat.com/browse/JBTM-3330\n         narayanaLRARecovery.waitForEndPhaseReplay(nestedLRA);\n \n-        Assert.assertEquals(1, lraMetricService.getMetric(LRAMetricType.Completed, nestedLRA, NestedParticipant.class));\n-        Assert.assertEquals(2, lraMetricService.getMetric(LRAMetricType.Nested, parentLRA, NestedParticipant.class));\n-        Assert.assertEquals(0, lraMetricService.getMetric(LRAMetricType.AfterLRA, nestedLRA, NestedParticipant.class));\n+        assertEquals(1, lraMetricService.getMetric(LRAMetricType.Completed, nestedLRA, NestedParticipant.class));\n+        assertEquals(2, lraMetricService.getMetric(LRAMetricType.Nested, parentLRA, NestedParticipant.class));\n+        assertEquals(0, lraMetricService.getMetric(LRAMetricType.AfterLRA, nestedLRA, NestedParticipant.class));\n \n-        narayanaLRAClient.closeLRA(parentLRA);\n+        lraClient.closeLRA(parentLRA);\n         narayanaLRARecovery.waitForEndPhaseReplay(nestedLRA);\n \n-        Assert.assertEquals(\"After LRA method for nested LRA enlist should have been called\",\n+        assertEquals(\"After LRA method for nested LRA enlist should have been called\",\n             1, lraMetricService.getMetric(LRAMetricType.AfterLRA, nestedLRA, NestedParticipant.class));\n \n     }\n+\n+    @Test\n+    public void testParentContext() {\n+        // start a top level LRA\n+        URI parent = lraClient.startLRA(\"parent\");\n+        // and nest another one under it\n+        URI child = lraClient.startLRA(\"child\");\n+\n+        Response response = null;\n+\n+        try {\n+            response = client.target(UriBuilder.fromUri(baseURL.toExternalForm())\n+                    .path(NestedParticipant.ROOT_PATH)\n+                    .path(NestedParticipant.PATH))\n+                    .request()\n+//                .header(LRA.LRA_HTTP_CONTEXT_HEADER, parentLRA)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36aa27618636cc291e41af5cd172720fc8b0ac63"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY0NDc5MA==", "bodyText": "we should add a message that says which one was null. The error message in test says it is only parentId.", "url": "https://github.com/jbosstm/narayana/pull/1717#discussion_r519644790", "createdAt": "2020-11-09T08:57:10Z", "author": {"login": "xstefank"}, "path": "rts/lra/test/basic/src/test/java/io/narayana/lra/arquillian/resource/NestedParticipant.java", "diffHunk": "@@ -48,16 +47,33 @@\n \n     public static final String ROOT_PATH = \"/nested\";\n     public static final String ENLIST_PATH = \"/enlist\";\n+    public static final String PATH = \"path\";\n \n     @Inject\n     LRAMetricService lraMetricService;\n \n+    @LRA(end = false)\n+    @GET\n+    @Path(PATH)\n+    @Produces({MediaType.TEXT_PLAIN})\n+    public Response runWithNestedContext(@HeaderParam(LRA.LRA_HTTP_CONTEXT_HEADER) URI lraId,\n+                           @HeaderParam(LRA.LRA_HTTP_PARENT_CONTEXT_HEADER) URI parentId) {\n+        if (parentId == null || lraId == null) {\n+            return Response.serverError().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36aa27618636cc291e41af5cd172720fc8b0ac63"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36aa27618636cc291e41af5cd172720fc8b0ac63", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/36aa27618636cc291e41af5cd172720fc8b0ac63", "committedDate": "2020-11-08T17:31:13Z", "message": "JBTM-3342 Propagate the parent context header (Long-Running-Action-Parent)"}, "afterCommit": {"oid": "96a00cf3e3e98f848e15d5ee9de376d91e079cd5", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/96a00cf3e3e98f848e15d5ee9de376d91e079cd5", "committedDate": "2020-11-16T15:35:18Z", "message": "JBTM-3342 Propagate the parent context header (Long-Running-Action-Parent)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96a00cf3e3e98f848e15d5ee9de376d91e079cd5", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/96a00cf3e3e98f848e15d5ee9de376d91e079cd5", "committedDate": "2020-11-16T15:35:18Z", "message": "JBTM-3342 Propagate the parent context header (Long-Running-Action-Parent)"}, "afterCommit": {"oid": "d05952f6b598b5f8ac40bdd33071c2e712f67fed", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/d05952f6b598b5f8ac40bdd33071c2e712f67fed", "committedDate": "2020-11-16T18:49:27Z", "message": "JBTM-3342 Propagate the parent context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d05952f6b598b5f8ac40bdd33071c2e712f67fed", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/d05952f6b598b5f8ac40bdd33071c2e712f67fed", "committedDate": "2020-11-16T18:49:27Z", "message": "JBTM-3342 Propagate the parent context"}, "afterCommit": {"oid": "254e4dcec8177c2668e900aff94fe16aafd390ac", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/254e4dcec8177c2668e900aff94fe16aafd390ac", "committedDate": "2020-11-16T19:10:44Z", "message": "JBTM-3342 Propagate the parent context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "254e4dcec8177c2668e900aff94fe16aafd390ac", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/254e4dcec8177c2668e900aff94fe16aafd390ac", "committedDate": "2020-11-16T19:10:44Z", "message": "JBTM-3342 Propagate the parent context"}, "afterCommit": {"oid": "05a21cf80a3c1c5487b0c43bc9780e496f066418", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/05a21cf80a3c1c5487b0c43bc9780e496f066418", "committedDate": "2020-11-16T19:30:50Z", "message": "JBTM-3342 Propagate the LRA parent context"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjE0MjE0", "url": "https://github.com/jbosstm/narayana/pull/1717#pullrequestreview-532614214", "createdAt": "2020-11-17T17:26:31Z", "commit": {"oid": "05a21cf80a3c1c5487b0c43bc9780e496f066418"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoyNjozMVrOH1AqGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzozMzozNlrOH1A8ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM0NzM1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String QUERY_PAIR_SEPARATOR = \"&\"; //\n          \n          \n            \n                public static final String QUERY_PAIR_SEPARATOR = \"&\";", "url": "https://github.com/jbosstm/narayana/pull/1717#discussion_r525347353", "createdAt": "2020-11-17T17:26:31Z", "author": {"login": "xstefank"}, "path": "rts/lra/service-base/src/main/java/io/narayana/lra/LRAConstants.java", "diffHunk": "@@ -40,6 +40,8 @@\n     public static final String CLIENT_ID_PARAM_NAME = \"ClientID\";\n     public static final String TIMELIMIT_PARAM_NAME = \"TimeLimit\";\n     public static final String PARENT_LRA_PARAM_NAME = \"ParentLRA\";\n+    public static final String QUERY_PAIR_SEPARATOR = \"&\"; //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a21cf80a3c1c5487b0c43bc9780e496f066418"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM1MjA5OQ==", "bodyText": "is it correct to return null if decode is false? In that case, this can be refactored to not contain the parameter.", "url": "https://github.com/jbosstm/narayana/pull/1717#discussion_r525352099", "createdAt": "2020-11-17T17:33:36Z", "author": {"login": "xstefank"}, "path": "rts/lra/service-base/src/main/java/io/narayana/lra/Current.java", "diffHunk": "@@ -64,6 +72,67 @@ public static Object getState(String key) {\n         return null;\n     }\n \n+    private static String getParents(URI uri) {\n+        String query = uri.getQuery();\n+\n+        if (query != null) {\n+            for (String nvpair : query.split(QUERY_PAIR_SEPARATOR)) {\n+                if (nvpair.startsWith(PARENT_LRA_PARAM_NAME + QUERY_FIELD_SEPARATOR)) {\n+                    return nvpair.split(QUERY_FIELD_SEPARATOR)[1];\n+                }\n+            }\n+        }\n+\n+        return null;\n+    }\n+\n+    // construct the LRA URI including the parent hierarchy as a query parameter\n+    public static URI buildFullLRAUrl(String baseURI, URI parentId) throws URISyntaxException {\n+        // is the parent part of a hierarchy\n+        String parents = Current.getParents(parentId); // gets the hierarchy form the query param\n+        // we have the hierarchy so remove the query parameter\n+        String gParent = new URI(parentId.getScheme(),\n+                parentId.getAuthority(),\n+                parentId.getPath(),\n+                null, // skip the query string\n+                parentId.getFragment())\n+                .toASCIIString();\n+\n+        if (parents != null) {\n+            gParent += parents + \",\"; // , separated list of the hierarchy\n+        }\n+\n+        return UriBuilder.fromUri(baseURI).queryParam(PARENT_LRA_PARAM_NAME, gParent).build();\n+    }\n+\n+    // given a URL extract the immediate parent of\n+    public static String getFirstParent(URI parent, boolean decode) throws UnsupportedEncodingException {\n+        String query = parent == null ? null : parent.getQuery();\n+\n+        if (query != null) {\n+            for (String param : query.split(QUERY_PAIR_SEPARATOR)) {\n+                if (param.startsWith(PARENT_LRA_PARAM_NAME + QUERY_FIELD_SEPARATOR)) {\n+                    String parents = param.split(QUERY_FIELD_SEPARATOR, 2)[1];\n+\n+                    // parents is a comma separated list of parents (the first one is the direct parent)\n+                    if (parents != null) {\n+                        String[] pa = parents.split(\",\");\n+\n+                        if (pa.length > 0) {\n+                            if (decode) {\n+                                return URLDecoder.decode(pa[0], \"UTF-8\");\n+                            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05a21cf80a3c1c5487b0c43bc9780e496f066418"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8b59e9ddf57d49e62f3ddab412f081254bd3e80", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/d8b59e9ddf57d49e62f3ddab412f081254bd3e80", "committedDate": "2020-11-17T18:10:29Z", "message": "JBTM-3342 Propagate the LRA parent context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05a21cf80a3c1c5487b0c43bc9780e496f066418", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/05a21cf80a3c1c5487b0c43bc9780e496f066418", "committedDate": "2020-11-16T19:30:50Z", "message": "JBTM-3342 Propagate the LRA parent context"}, "afterCommit": {"oid": "d8b59e9ddf57d49e62f3ddab412f081254bd3e80", "author": {"user": {"login": "mmusgrov", "name": "Michael Musgrove"}}, "url": "https://github.com/jbosstm/narayana/commit/d8b59e9ddf57d49e62f3ddab412f081254bd3e80", "committedDate": "2020-11-17T18:10:29Z", "message": "JBTM-3342 Propagate the LRA parent context"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4384, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}