{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0Mjg1Nzk2", "number": 1600, "title": "JBTM-3273 -> Implemented code review comments", "bodyText": "This PR is to implement missed code review comments on another PR.\nMAIN QA_JTA AS_TESTS\n!TOMCAT !RTS !JACOCO !XTS !QA_JTS_JACORB !QA_JTS_JDKORB !QA_JTS_OPENJDKORB !BLACKTIE !PERF !LRA !NO_WIN !DB_TESTS !mysql !db2 !postgres !oracle", "createdAt": "2020-04-16T11:08:18Z", "url": "https://github.com/jbosstm/narayana/pull/1600", "merged": true, "mergeCommit": {"oid": "cf8e1ab1ad4d01984a6668a90a254b4047d1f71a"}, "closed": true, "closedAt": "2020-04-17T14:57:42Z", "author": {"login": "mayankkunwar"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYNmGpgFqTM5NDY1NDYyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYijJzAFqTM5NTUyNjkxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NjU0NjI4", "url": "https://github.com/jbosstm/narayana/pull/1600#pullrequestreview-394654628", "createdAt": "2020-04-16T13:52:59Z", "commit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1Mjo1OVrOGGmZYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDozMDozMFrOGGoNaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3MzcyOA==", "bodyText": "I think an AtomicBoolean should be sufficient.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409573728", "createdAt": "2020-04-16T13:52:59Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/recovery/RecoveryRequired.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package com.arjuna.ats.jta.recovery;\n+\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+\n+public class RecoveryRequired {\n+\n+    private static ReentrantReadWriteLock lock = new ReentrantReadWriteLock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA==", "bodyText": "We can avoid the new RecoveryRequired class and just add an AtomicBoolean to this class instead.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409578044", "createdAt": "2020-04-16T13:58:35Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -59,14 +59,8 @@\n import com.arjuna.ats.internal.arjuna.common.UidHelper;\n import com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.SerializableXAResourceDeserializer;\n-import com.arjuna.ats.jta.recovery.XARecoveryResource;\n-import com.arjuna.ats.jta.recovery.XARecoveryResourceManager;\n-import com.arjuna.ats.jta.recovery.XAResourceOrphanFilter;\n-import com.arjuna.ats.jta.recovery.XAResourceRecovery;\n-import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;\n+import com.arjuna.ats.jta.recovery.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU5NjgzOQ==", "bodyText": "Where is this used?", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409596839", "createdAt": "2020-04-16T14:22:26Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -28,8 +28,8 @@\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMjE1Mw==", "bodyText": "We have a checkstyle plugin which is skipped by default because we have a lot of old files, that we don't want to change, which would fail the compilation. But on new code we do encourage/advise that it should follow our checkstyle rules.\nTo see if your code follows our style guide you have two options:\n\n\nEnable the checkstyle plugin via the pom file, or\n\n\nReference the rule file from your IDE settings (for Intelij that would be Settings -> Other Settings -> Checkstyle) and we use the wildfly rule set.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409602153", "createdAt": "2020-04-16T14:28:58Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -59,14 +59,8 @@\n import com.arjuna.ats.internal.arjuna.common.UidHelper;\n import com.arjuna.ats.internal.jta.resources.arjunacore.XAResourceRecord;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n-import com.arjuna.ats.jta.recovery.SerializableXAResourceDeserializer;\n-import com.arjuna.ats.jta.recovery.XARecoveryResource;\n-import com.arjuna.ats.jta.recovery.XARecoveryResourceManager;\n-import com.arjuna.ats.jta.recovery.XAResourceOrphanFilter;\n-import com.arjuna.ats.jta.recovery.XAResourceRecovery;\n-import com.arjuna.ats.jta.recovery.XAResourceRecoveryHelper;\n+import com.arjuna.ats.jta.recovery.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA0NA=="}, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzMwMA==", "bodyText": "Where is this used?", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409603300", "createdAt": "2020-04-16T14:30:21Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -27,8 +27,8 @@\n import com.arjuna.ats.arjuna.tools.RecoveryMonitor;\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYwMzQzNQ==", "bodyText": "Where is this used?", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409603435", "createdAt": "2020-04-16T14:30:30Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -28,8 +28,8 @@\n import com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule;\n import com.arjuna.ats.internal.jta.transaction.arjunacore.TransactionImple;\n import com.arjuna.ats.jta.common.jtaPropertyManager;\n-import com.arjuna.ats.jta.logging.RecoveryRequired;\n import com.arjuna.ats.jta.logging.jtaLogger;\n+import com.arjuna.ats.jta.recovery.RecoveryRequired;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "258c410930811626a1e973f5cc02908d327af481"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b4a44740b4f9e4987ff408e6e9278bb7cec2574", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/8b4a44740b4f9e4987ff408e6e9278bb7cec2574", "committedDate": "2020-04-16T15:09:17Z", "message": "worked on code review comments"}, "afterCommit": {"oid": "8cd324bedff4d14c2b1fe08a63ca185637c7d524", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/8cd324bedff4d14c2b1fe08a63ca185637c7d524", "committedDate": "2020-04-16T15:11:01Z", "message": "JBTM-3273 -> Implemented code review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69859306c7a43233d950667a8eccab2915635de0", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/69859306c7a43233d950667a8eccab2915635de0", "committedDate": "2020-04-16T15:22:05Z", "message": "worked on code review comments"}, "afterCommit": {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/824af4910d4d0e94a432c6dcecc5b69106567c72", "committedDate": "2020-04-16T15:22:48Z", "message": "JBTM-3273 -> Implemented code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODA5MjYy", "url": "https://github.com/jbosstm/narayana/pull/1600#pullrequestreview-394809262", "createdAt": "2020-04-16T16:36:40Z", "commit": {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjozNjo0MFrOGGt0Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjozOTo1NlrOGGt8xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTMwMw==", "bodyText": "why this needs to be static? I'm asking this question as I'm interested if there is some reasons behind this decision.\nI assume the approach should be to not use the static when it's not particularly needed. The API which the behaviour exposing to outer world - aka API that was used is the call to XARecoveryModule.isPeriodcWorkSuccesful.\nThis one is then consumed by WorkerService (https://github.com/jbosstm/narayana/blob/5.10.4.Final/ArjunaCore/arjuna/classes/com/arjuna/ats/internal/arjuna/recovery/WorkerService.java#L114) to inform about issue on recovery process when verbose output is demanded.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409695303", "createdAt": "2020-04-16T16:36:40Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -78,6 +78,16 @@\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n+\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NTU4Ng==", "bodyText": "if there is no particular reason to make anything public then it should be private (or package-private in case)", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409695586", "createdAt": "2020-04-16T16:37:08Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -78,6 +78,16 @@\n \n public class XARecoveryModule implements ExtendedRecoveryModule\n {\n+\tprivate static AtomicBoolean recoveryProblems = new AtomicBoolean(false);\n+\n+\tpublic static boolean isRecoveryProblems() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY5NzQ3OQ==", "bodyText": "We don't need this comment anymore. If you couple the functionality of the recovery problem reporting into the one place which is  the XARecoveryModule here then it's the responsibility of the person updating that class to consider it.\nFrom my perspective there is no need to expose this responsibility to somebody adding a warn log message.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r409697479", "createdAt": "2020-04-16T16:39:56Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "diffHunk": "@@ -45,6 +45,9 @@\n /**\n  * i18n log messages for the jta module.\n  *\n+ * For jtaI18NLogger, if any method, prefixed with <b>\"warn_recovery\"</b> is called then,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "824af4910d4d0e94a432c6dcecc5b69106567c72"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f127c53bce308a0bae7ea8098c96523c718b1d9d", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/f127c53bce308a0bae7ea8098c96523c718b1d9d", "committedDate": "2020-04-17T05:04:25Z", "message": "worked on code review coments"}, "afterCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/bf17d29a0690b7a65ce433ea7da32db1a49d5c86", "committedDate": "2020-04-17T05:05:18Z", "message": "JBTM-3273 -> Implemented code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDE3OTgw", "url": "https://github.com/jbosstm/narayana/pull/1600#pullrequestreview-395417980", "createdAt": "2020-04-17T12:41:17Z", "commit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDc5OTIx", "url": "https://github.com/jbosstm/narayana/pull/1600#pullrequestreview-395479921", "createdAt": "2020-04-17T14:00:43Z", "commit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowMDo0M1rOGHPOqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowNzoxN1rOGHPe0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MjcyOQ==", "bodyText": "We have a policy of only making changes that are relevant to the issue being fixed. This change seems unrelated.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410242729", "createdAt": "2020-04-17T14:00:43Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -66,8 +65,8 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n         recoveryEnvironmentBean.setRecoveryListener(true); // configure the RecoveryMonitor\n \n         RecoveryManager manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n-\n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Mjg5OQ==", "bodyText": "Same comment here (the change is unrelated to the issue)", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410242899", "createdAt": "2020-04-17T14:01:01Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -109,7 +108,8 @@ public void start(Xid xid, int i) throws XAException {\n \n         RecoveryManager manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n \n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0MzU3MQ==", "bodyText": "assertTrue(xaRecoveryModule.isPeriodicWorkSuccessful());\navoids the double negative.", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410243571", "createdAt": "2020-04-17T14:02:01Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -123,7 +123,7 @@ public void start(Xid xid, int i) throws XAException {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(RecoveryRequired.isRecoveryProblems());\n+            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDIzNA==", "bodyText": "Same comment here (the change is unrelated to the issue)", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410244234", "createdAt": "2020-04-17T14:03:08Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -66,7 +66,8 @@ public static void beforeClass() throws Exception {\n \n         manager = RecoveryManager.manager(RecoveryManager.DIRECT_MANAGEMENT);\n \n-        manager.addModule(new XARecoveryModule()); // we only need to test the XARecoveryModule", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjAwNQ==", "bodyText": "assertFalse(xaRecoveryModule.isPeriodicWorkSuccessful());\nis easier to read", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246005", "createdAt": "2020-04-17T14:05:52Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest.java", "diffHunk": "@@ -81,7 +80,7 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n             // check the output of the scan\n             assertEquals(\"ERROR\", RecoveryMonitor.getResponse());\n             assertEquals(\"ERROR\", RecoveryMonitor.getSystemOutput());\n-            assertTrue(RecoveryRequired.isRecoveryProblems());\n+            assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjIwOQ==", "bodyText": "Same comment here", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246209", "createdAt": "2020-04-17T14:06:11Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryMonitorTest2.java", "diffHunk": "@@ -123,7 +123,7 @@ public void start(Xid xid, int i) throws XAException {\n             // check the output of the scan\n             assertEquals(\"DONE\", RecoveryMonitor.getResponse());\n             assertEquals(\"DONE\", RecoveryMonitor.getSystemOutput());\n-            assertFalse(RecoveryRequired.isRecoveryProblems());\n+            assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NjY1Nw==", "bodyText": "assertFalse ... is easier to read", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246657", "createdAt": "2020-04-17T14:06:53Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -92,7 +93,7 @@ public void testRecoveryMonitorWithFailure() throws Exception {\n \n         manager.scan();\n \n-        assertTrue(RecoveryRequired.isRecoveryProblems());\n+        assertTrue(!xaRecoveryModule.isPeriodicWorkSuccessful());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0Njg2NA==", "bodyText": "assertTrue avoids the double negative", "url": "https://github.com/jbosstm/narayana/pull/1600#discussion_r410246864", "createdAt": "2020-04-17T14:07:17Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/recovery/RecoveryScanTest.java", "diffHunk": "@@ -157,7 +158,7 @@ public void start(Xid xid, int i) throws XAException {\n \n         manager.scan();\n \n-        assertFalse(RecoveryRequired.isRecoveryProblems());\n+        assertFalse(!xaRecoveryModule.isPeriodicWorkSuccessful());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf17d29a0690b7a65ce433ea7da32db1a49d5c86"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/e9d7c537997b225c169755aa3fee9c8301b4b58f", "committedDate": "2020-04-17T14:29:45Z", "message": "JBTM-3273 -> Implemented code review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d545e58dca5d2f309a5405c92d9c7b2485cbf77", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/8d545e58dca5d2f309a5405c92d9c7b2485cbf77", "committedDate": "2020-04-17T14:29:07Z", "message": "worked on code review coments"}, "afterCommit": {"oid": "e9d7c537997b225c169755aa3fee9c8301b4b58f", "author": {"user": {"login": "mayankkunwar", "name": "Mayank Kunwar"}}, "url": "https://github.com/jbosstm/narayana/commit/e9d7c537997b225c169755aa3fee9c8301b4b58f", "committedDate": "2020-04-17T14:29:45Z", "message": "JBTM-3273 -> Implemented code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NTI2OTE1", "url": "https://github.com/jbosstm/narayana/pull/1600#pullrequestreview-395526915", "createdAt": "2020-04-17T14:55:26Z", "commit": {"oid": "e9d7c537997b225c169755aa3fee9c8301b4b58f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4573, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}