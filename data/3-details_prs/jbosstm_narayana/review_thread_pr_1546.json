{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTE5NTk0", "number": 1546, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMTo1NjoxOFrODXIf3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1ODowOFrODXJUPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTgzMDcxOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMTo1NjoxOFrOFcSGlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjozMjo1MVrOFcS1oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwMTA0Nw==", "bodyText": "FYI I think the comment about LRAInfo might be slightly out of date", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365201047", "createdAt": "2020-01-10T11:56:18Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -295,7 +295,7 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n             }\n \n             // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            Object lraObject = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f537b8ce8504ebd7490329d8d9267e03563641"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIxMzA4OA==", "bodyText": "Okay, I have just pushed an update.", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365213088", "createdAt": "2020-01-10T12:32:51Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -295,7 +295,7 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n             }\n \n             // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            Object lraObject = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIwMTA0Nw=="}, "originalCommit": {"oid": "17f537b8ce8504ebd7490329d8d9267e03563641"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NTk2NDc4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxMjo1ODowOVrOFcTXUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDoxOTo0N1rOFcVXNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTcxNA==", "bodyText": "I should have mentioned, this LRAInfo comment is stale too. If you change LRAInfo to LRA, and push a commit up agai,  then merge this PR then my approval would still stand. Otherwise, please let me know if you want me to look again.", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365221714", "createdAt": "2020-01-10T12:58:09Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -286,25 +286,22 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n                     .request()\n                     .post();\n \n-            // validate the HTTP status code says an LRAInfo resource was created\n+            // validate the HTTP status code says an LRA resource was created\n             if (isUnexpectedResponseStatus(response, Response.Status.CREATED)) {\n                 LRALogger.i18NLogger.error_lraCreationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(null, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA start returned an unexpected status code: \" + response.getStatus());\n                 return null;\n             }\n \n-            // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            lra = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eabd9a0474d12a27512583b73072c5e0e23810a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMjAyMA==", "bodyText": "+1", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365222020", "createdAt": "2020-01-10T12:59:06Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -286,25 +286,22 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n                     .request()\n                     .post();\n \n-            // validate the HTTP status code says an LRAInfo resource was created\n+            // validate the HTTP status code says an LRA resource was created\n             if (isUnexpectedResponseStatus(response, Response.Status.CREATED)) {\n                 LRALogger.i18NLogger.error_lraCreationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(null, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA start returned an unexpected status code: \" + response.getStatus());\n                 return null;\n             }\n \n-            // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            lra = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTcxNA=="}, "originalCommit": {"oid": "2eabd9a0474d12a27512583b73072c5e0e23810a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyNDEwMw==", "bodyText": "Although there are no longer any references to LRAInfo", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365224103", "createdAt": "2020-01-10T13:04:48Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -286,25 +286,22 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n                     .request()\n                     .post();\n \n-            // validate the HTTP status code says an LRAInfo resource was created\n+            // validate the HTTP status code says an LRA resource was created\n             if (isUnexpectedResponseStatus(response, Response.Status.CREATED)) {\n                 LRALogger.i18NLogger.error_lraCreationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(null, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA start returned an unexpected status code: \" + response.getStatus());\n                 return null;\n             }\n \n-            // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            lra = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTcxNA=="}, "originalCommit": {"oid": "2eabd9a0474d12a27512583b73072c5e0e23810a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI1NDQ1Mg==", "bodyText": "I see you removed this comment I missed the \"-\". I will mark this as resolved", "url": "https://github.com/jbosstm/narayana/pull/1546#discussion_r365254452", "createdAt": "2020-01-10T14:19:47Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -286,25 +286,22 @@ public URI startLRA(URI parentLRA, String clientID, Long timeout, ChronoUnit uni\n                     .request()\n                     .post();\n \n-            // validate the HTTP status code says an LRAInfo resource was created\n+            // validate the HTTP status code says an LRA resource was created\n             if (isUnexpectedResponseStatus(response, Response.Status.CREATED)) {\n                 LRALogger.i18NLogger.error_lraCreationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(null, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA start returned an unexpected status code: \" + response.getStatus());\n                 return null;\n             }\n \n-            // validate that there is an LRAInfo response header holding the LRAInfo id\n-            Object lraObject = response.getLastHeader(LRA_HTTP_CONTEXT_HEADER);\n+            lra = response.getLocationHeaderAsURI();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTIyMTcxNA=="}, "originalCommit": {"oid": "2eabd9a0474d12a27512583b73072c5e0e23810a"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1241, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}