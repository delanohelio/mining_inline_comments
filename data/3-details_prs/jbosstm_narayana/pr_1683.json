{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDgwMzQx", "number": 1683, "title": "[JBTM-3368] provide error messages in the HTTP responses", "bodyText": "https://issues.redhat.com/browse/JBTM-3368\nIdea of this PR is having information on error response. This helps in debugging and test investigation and expecting for users as well.\n!MAIN !CORE !QA_JTA !QA_JTS_JDKORB !QA_JTS_OPENJDKORB !QA_JTS_JACORB !BLACKTIE !XTS !PERF NO_WIN !RTS !AS_TESTS !TOMCAT !JACOCO\nLRA", "createdAt": "2020-10-06T11:53:01Z", "url": "https://github.com/jbosstm/narayana/pull/1683", "merged": true, "mergeCommit": {"oid": "970b11d6f49957ee7374894527230499b0d77632"}, "closed": true, "closedAt": "2020-10-19T10:02:45Z", "author": {"login": "ochaloup"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP3gecgBqjM4NDUxNDA5OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUAABugBqjM4OTIwODEyODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef39e83f3a638a4d7bb8279432265759060716a7", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/ef39e83f3a638a4d7bb8279432265759060716a7", "committedDate": "2020-10-06T11:50:47Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}, "afterCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/263af1c535e7b3dd5869180a1e447bd31e66b497", "committedDate": "2020-10-06T12:26:16Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjk4NDU3", "url": "https://github.com/jbosstm/narayana/pull/1683#pullrequestreview-503698457", "createdAt": "2020-10-07T09:36:56Z", "commit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwOTozNjo1NlrOHdq8rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDo0Njo1MVrOHdtb-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NDQxNA==", "bodyText": "we should rename this \"status\" variable :)", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500874414", "createdAt": "2020-10-07T09:36:56Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -529,7 +531,7 @@ public boolean isActive(URI lraId) {\n                 .header(\"Accept\", MediaType.APPLICATION_JSON)\n                 .get();\n \n-        if (status.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (status.getStatus() == NOT_FOUND.getStatusCode()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3NTYzNQ==", "bodyText": "If we are to include the message for 404 not found, it should mention that the requested LRA id was not found. This is too general for a particular case.", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500875635", "createdAt": "2020-10-07T09:38:57Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -581,10 +583,11 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n             return null;\n         }\n \n-        if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+        if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n             String responseContent = response.readEntity();\n-            throw new NotFoundException(\"Failed to get status of LRA id \" + lraId\n-                    + (responseContent != null ? \": \" + responseContent : \"\"));\n+            String errorMsg = \"Failed to get status of LRA id \" + lraId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3Njg0OA==", "bodyText": "this can go to i18NLogger", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500876848", "createdAt": "2020-10-07T09:40:49Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -706,11 +709,14 @@ private URI enlistCompensator(URI uri, long timelimit, String linkHeader, String\n \n         if (response.getStatus() == Response.Status.PRECONDITION_FAILED.getStatusCode()) {\n                 LRALogger.i18NLogger.error_tooLateToJoin(lraId, response.toString());\n-            throw new WebApplicationException(lraId + \": Too late to join with this LRA \", PRECONDITION_FAILED);\n-        } else if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%s'\",\n-                    lraId, base, Response.Status.NOT_FOUND.getStatusCode());\n-            throw new WebApplicationException(uri.toASCIIString(), Response.Status.GONE);\n+                String errorMsg = lraId + \": Too late to join with this LRA \";\n+            throw new WebApplicationException(errorMsg,\n+                    Response.status(PRECONDITION_FAILED).entity(errorMsg).build());\n+        } else if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+            LRALogger.logger.infof(\"Failed enlisting to LRA '%s', coordinator '%s' responded with status '%d (%s)'. Returning '%d (%s)'.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg3ODIwMA==", "bodyText": "also maybe better to add this to i18NLogger?", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500878200", "createdAt": "2020-10-07T09:43:04Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -739,16 +745,18 @@ private void endLRA(URI lra, boolean confirm) throws WebApplicationException {\n         try {\n             response = getTarget().path(confirmUrl).request().put();\n \n-            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, Response.Status.NOT_FOUND)) {\n+            if (isUnexpectedResponseStatus(response, Response.Status.OK, Response.Status.ACCEPTED, NOT_FOUND)) {\n                 LRALogger.i18NLogger.error_lraTerminationUnexpectedStatus(response.getStatus(), response.toString());\n                 throwGenericLRAException(lra, INTERNAL_SERVER_ERROR.getStatusCode(),\n                         \"LRA finished with an unexpected status code: \" + response.getStatus());\n             }\n \n-            if (response.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n-                LRALogger.logger.infof(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n-                        confirm ? \"close\" : \"compensate\", lra, base, Response.Status.NOT_FOUND.getReasonPhrase());\n-                throw new NotFoundException(lra.toASCIIString());\n+            if (response.getStatus() == NOT_FOUND.getStatusCode()) {\n+                String errorMsg = String.format(\"Could not %s LRA '%s': coordinator '%s' responded with status '%s'\",\n+                        confirm ? \"close\" : \"compensate\", lra, base, NOT_FOUND.getReasonPhrase());\n+                LRALogger.logger.info(errorMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MDIxNw==", "bodyText": "missing closing '", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500880217", "createdAt": "2020-10-07T09:46:16Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -289,9 +290,10 @@ public Response getNestedLRAStatus(@PathParam(\"NestedLraId\")String nestedLraId)\n \n         if (status == null || lra.getLRAStatus() == null) {\n             LRALogger.i18NLogger.error_cannotGetStatusOfNestedLraURI(nestedLraId, lra.getId());\n-            throw new WebApplicationException(Response.status(Response.Status.PRECONDITION_FAILED)\n-                    .entity(String.format(\"LRA is in the wrong state for operation '%s': %s\",\n-                            \"getNestedLRAStatus\", \"The LRA is still  active\")).build());\n+            String errMsg = String.format(\"LRA (parent: %s, nested:%s) is in the wrong state for operation \" +\n+                    \"'getNestedLRAStatus: The LRA is still active\", nestedLraId, lra.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4MTE2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();\n          \n          \n            \n                        String errorMsg = lraId + \": Invalid format of LRA id URL format to convert to URI \" + e.getMessage();", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500881163", "createdAt": "2020-10-07T09:47:49Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -564,15 +566,19 @@ private URI toURI(String lraId, String message) {\n                 url = new URL(String.format(\"%s%s/%s\", context.getBaseUri(), COORDINATOR_PATH_NAME, lraId));\n             } catch (MalformedURLException e1) {\n                 LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e1);\n-                throw new WebApplicationException(message, e1, BAD_REQUEST);\n+                String errorMsg = lraId + \": Illegal LRA id format \" + e1.getMessage();\n+                throw new WebApplicationException(errorMsg, e1,\n+                        Response.status(BAD_REQUEST).entity(errorMsg).build());\n             }\n         }\n \n         try {\n             return url.toURI();\n         } catch (URISyntaxException e) {\n             LRALogger.i18NLogger.error_invalidStringFormatOfUrl(lraId, e);\n-            throw new WebApplicationException(message, e, BAD_REQUEST);\n+            String errorMsg = lraId + \": Ivalid format of LRA id URL format to convert to URI \" + e.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDg4NTc1OQ==", "bodyText": "I just wonder whether this is a Response design to redundantly repeat the status in the included response and it doesn't provide a simpler API to include the errorMsg. If not, then this is ok to go.", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500885759", "createdAt": "2020-10-07T09:55:12Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -252,7 +256,9 @@ public synchronized URI startLRA(String baseUri, URI parentLRA, String clientId,\n \n             lra.abort();\n \n-            throw new InternalServerErrorException(\"Could not start LRA: \" + ActionStatus.stringForm(status));\n+            String errorMsg = \"Could not start LRA: \" + ActionStatus.stringForm(status);\n+            throw new InternalServerErrorException(errorMsg,\n+                    Response.status(INTERNAL_SERVER_ERROR).entity(errorMsg).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkxNTE5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());\n          \n          \n            \n                                lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found exception with \" + e.getMessage());\n          \n      \n    \n    \n  \n\nseems a little out of context without this word", "url": "https://github.com/jbosstm/narayana/pull/1683#discussion_r500915192", "createdAt": "2020-10-07T10:46:51Z", "author": {"login": "xstefank"}, "path": "rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java", "diffHunk": "@@ -331,6 +331,7 @@ public void filter(ContainerRequestContext containerRequestContext) {\n                             toURI(terminateURIs.get(STATUS)),\n                             null);\n                 } catch (NotFoundException e) {\n+                    lraTrace(containerRequestContext, lraId, \"ServerLRAFilter before: not found with \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTkyMDA5", "url": "https://github.com/jbosstm/narayana/pull/1683#pullrequestreview-504192009", "createdAt": "2020-10-07T19:16:44Z", "commit": {"oid": "263af1c535e7b3dd5869180a1e447bd31e66b497"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "35dea3b02ab9830210f5ec31a93cdc51d4e0ee30", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/35dea3b02ab9830210f5ec31a93cdc51d4e0ee30", "committedDate": "2020-10-08T13:27:06Z", "message": "Update rts/lra/narayana-lra/src/main/java/io/narayana/lra/filter/ServerLRAFilter.java\n\nCo-authored-by: Martin Stefanko <xstefank122@gmail.com>"}, "afterCommit": {"oid": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "committedDate": "2020-10-08T14:22:25Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "committedDate": "2020-10-19T08:30:48Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/7bda45dc20ffd8e4a307b4883927084c4b1e95e1", "committedDate": "2020-10-08T14:22:25Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}, "afterCommit": {"oid": "34383c282341981ce21e033390e6aa7a4c1a9e6d", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/34383c282341981ce21e033390e6aa7a4c1a9e6d", "committedDate": "2020-10-19T08:30:48Z", "message": "[JBTM-3368] provide error messages in the HTTP responses"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4475, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}