{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NzMyMjAy", "number": 1574, "title": "[JBTM-3270] tracking persisted REST-AT participant ", "bodyText": "for removal not showing warning in the server log\nhttps://issues.redhat.com/browse/JBTM-3270\nMAIN RTS AS_TESTS\n!QA_JTA !QA_JTS_JDKORB !QA_JTS_OPENJDKORB !QA_JTS_JACORB !BLACKTIE !XTS !PERF NO_WIN !TOMCAT !JACOCO !LRA", "createdAt": "2020-03-27T12:42:50Z", "url": "https://github.com/jbosstm/narayana/pull/1574", "merged": true, "mergeCommit": {"oid": "d9bca4668173842372d5185092ab44eff82e0b44"}, "closed": true, "closedAt": "2020-04-06T10:08:25Z", "author": {"login": "ochaloup"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRzIgvgFqTM4Mjk4MjMyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTZyoDAFqTM4NTcyMjE0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTgyMzI4", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-382982328", "createdAt": "2020-03-27T15:50:23Z", "commit": {"oid": "0f53113255553c019c0461c4c0049a2ef7ab4190"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNTo1MDoyM1rOF83N-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNjowMjozMVrOF83u5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM2MzU3Nw==", "bodyText": "If the remove_committed call throws an exception then since the participantId is still in the map the code inside the if will be executed on every recovery pass and an exception will appear in the log on every pass. How about the following code instead:\n        if (committedParticipants.remove(participantId) != null) {\n            // the key was in the map and it has now been removed\n            try {\n                recoveryStore.remove_committed etc", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r399363577", "createdAt": "2020-03-27T15:50:23Z", "author": {"login": "mmusgrov"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -93,12 +101,15 @@ public void removeParticipantInformation(final ParticipantInformation participan\n         }\n \n         final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();\n-        final Uid uid = new Uid(participantInformation.getId());\n+        String participantId = participantInformation.getId();\n \n-        try {\n-            recoveryStore.remove_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE);\n-        } catch (ObjectStoreException e) {\n-            LOG.warn(\"Failure while removing participant information from the object store.\", e);\n+        if(committedParticipants.get(participantId) != null) {\n+            try {\n+                recoveryStore.remove_committed(new Uid(participantId), PARTICIPANT_INFORMATION_RECORD_TYPE);\n+                committedParticipants.remove(participantId);\n+            } catch (ObjectStoreException e) {\n+                LOG.warn(\"Failure while removing participant information from the object store.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f53113255553c019c0461c4c0049a2ef7ab4190"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTM3MjAwNw==", "bodyText": "What does <Participant Id :: Uid> mean. It also starts a new sentence making it more confusing.\nIs it suggesting that the variable is\n* A map of participant ids to Uids for the purpose of keeping track of which participants\n* have been saved to the recovery store.\nAlso if you are going to make changes to this PR I would suggest using the same term for the store throughout (it currently contains three different names: persistent store, object store and recovery store)", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r399372007", "createdAt": "2020-03-27T16:02:31Z", "author": {"login": "mmusgrov"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -44,6 +45,11 @@\n \n     private final Map<String, ParticipantDeserializer> deserializers = new ConcurrentHashMap<String, ParticipantDeserializer>();\n \n+    /**\n+     * A map of participants saved in the persistent store. &lt;Participant Id :: Uid&gt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f53113255553c019c0461c4c0049a2ef7ab4190"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f53113255553c019c0461c4c0049a2ef7ab4190", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/0f53113255553c019c0461c4c0049a2ef7ab4190", "committedDate": "2020-03-27T12:42:20Z", "message": "[JBTM-3270] tracking persisted REST-AT participant for removal not showing warning in the server log"}, "afterCommit": {"oid": "44b4a810093d76ebd974b2de5463178295890261", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/44b4a810093d76ebd974b2de5463178295890261", "committedDate": "2020-03-30T12:16:01Z", "message": "[JBTM-3270] tracking persisted REST-AT participant for removal not showing warning in the server log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjExMTk1", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-384611195", "createdAt": "2020-03-31T10:43:44Z", "commit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0Mzo0NFrOF-PyMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0Mzo0NFrOF-PyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNDY0Mw==", "bodyText": "Would persistedParticipants be clearer (though I do accept the store API is calling it committed)? Or are these really committed from a transactional perspective?", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r400814643", "createdAt": "2020-03-31T10:43:44Z", "author": {"login": "tomjenkinson"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -44,6 +44,11 @@\n \n     private final Map<String, ParticipantDeserializer> deserializers = new ConcurrentHashMap<String, ParticipantDeserializer>();\n \n+    /**\n+     * A map of participants persisted in the object store, it maps 'Participant Id' to 'Uid'\n+     */\n+    private final Map<String, Uid> committedParticipants = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjExNDA1", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-384611405", "createdAt": "2020-03-31T10:44:04Z", "commit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0NDowNFrOF-Py0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0NDowNFrOF-Py0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNDgwMA==", "bodyText": "I note this is going in the map before the store is updated", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r400814800", "createdAt": "2020-03-31T10:44:04Z", "author": {"login": "tomjenkinson"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -81,6 +86,8 @@ public void persistParticipantInformation(final ParticipantInformation participa\n             final OutputObjectState state = getParticipantInformationOutputState(participantInformation);\n             final Uid uid = new Uid(participantInformation.getId());\n \n+            // to identify the uid from the participant persisted into the object store in order to delete it later\n+            committedParticipants.put(participantInformation.getId(), uid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjEzNjEz", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-384613613", "createdAt": "2020-03-31T10:47:27Z", "commit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0NzoyN1rOF-P5pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0NzoyN1rOF-P5pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjU1MQ==", "bodyText": "A general question, how do we reach removeParticipantInformation if the participant was not property written to disk before. Do we need to differentiate on rollback vs other conditions?", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r400816551", "createdAt": "2020-03-31T10:47:27Z", "author": {"login": "tomjenkinson"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -93,12 +100,15 @@ public void removeParticipantInformation(final ParticipantInformation participan\n         }\n \n         final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();\n-        final Uid uid = new Uid(participantInformation.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b4a810093d76ebd974b2de5463178295890261"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/b2efa02bbe6e6710c5e297150b0253ad6dfda414", "committedDate": "2020-03-31T11:04:53Z", "message": "[JBTM-3270] tracking persisted REST-AT participant for removal not showing warning in the server log"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44b4a810093d76ebd974b2de5463178295890261", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/44b4a810093d76ebd974b2de5463178295890261", "committedDate": "2020-03-30T12:16:01Z", "message": "[JBTM-3270] tracking persisted REST-AT participant for removal not showing warning in the server log"}, "afterCommit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/b2efa02bbe6e6710c5e297150b0253ad6dfda414", "committedDate": "2020-03-31T11:04:53Z", "message": "[JBTM-3270] tracking persisted REST-AT participant for removal not showing warning in the server log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0ODIzNzI4", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-384823728", "createdAt": "2020-03-31T15:01:21Z", "commit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowMToyMVrOF-aLPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTowMToyMVrOF-aLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk4NDg5Mg==", "bodyText": "@mmusgrov is more handling of this case considered elsewhere or is the failure to write to disk of a participant just logged but algorithmically ignored? Is that safe?", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r400984892", "createdAt": "2020-03-31T15:01:21Z", "author": {"login": "tomjenkinson"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -82,6 +87,8 @@ public void persistParticipantInformation(final ParticipantInformation participa\n             final Uid uid = new Uid(participantInformation.getId());\n \n             recoveryStore.write_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE, state);\n+            // to identify the uid from the participant persisted into the object store in order to delete it later\n+            persistedParticipants.put(participantInformation.getId(), uid);\n         } catch (Exception e) {\n             LOG.warn(\"Failure while persisting participant information.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTI5MTcy", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-384929172", "createdAt": "2020-03-31T16:59:01Z", "commit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjo1OTowMVrOF-fXdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjo1OTowMVrOF-fXdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA2OTk0MQ==", "bodyText": "@ochaloup is there any need to synchronise in case a thread doing write_participant and persistedParticipants.put could execute concurrently with a thread checking if something is in the map? I don't know the answer but did you assess that?", "url": "https://github.com/jbosstm/narayana/pull/1574#discussion_r401069941", "createdAt": "2020-03-31T16:59:01Z", "author": {"login": "tomjenkinson"}, "path": "rts/at/integration/src/main/java/org/jboss/narayana/rest/integration/RecoveryManager.java", "diffHunk": "@@ -93,12 +100,15 @@ public void removeParticipantInformation(final ParticipantInformation participan\n         }\n \n         final RecoveryStore recoveryStore = StoreManager.getRecoveryStore();\n-        final Uid uid = new Uid(participantInformation.getId());\n+        String participantId = participantInformation.getId();\n \n-        try {\n-            recoveryStore.remove_committed(uid, PARTICIPANT_INFORMATION_RECORD_TYPE);\n-        } catch (ObjectStoreException e) {\n-            LOG.warn(\"Failure while removing participant information from the object store.\", e);\n+        if(persistedParticipants.get(participantId) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NzIyMTQx", "url": "https://github.com/jbosstm/narayana/pull/1574#pullrequestreview-385722141", "createdAt": "2020-04-01T15:53:34Z", "commit": {"oid": "b2efa02bbe6e6710c5e297150b0253ad6dfda414"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4536, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}