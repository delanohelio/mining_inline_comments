{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTcxNTI0", "number": 1730, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTowNDoxN1rOE-mi8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo0ODoyOVrOE_DYPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDc4NzA0OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTowNDoxN1rOH72GCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjo1MzoyM1rOH8EQCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNDMxMg==", "bodyText": "Is the H2 downgrade definitely required?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532514312", "createdAt": "2020-11-30T11:04:17Z", "author": {"login": "tomjenkinson"}, "path": "pom.xml", "diffHunk": "@@ -412,7 +412,7 @@\n     <version.org.slf4j>1.6.1</version.org.slf4j>\n     <version.dom4j>1.6.1</version.dom4j>\n     <version.jfree>1.0.9</version.jfree>\n-    <version.com.h2database>1.4.195</version.com.h2database>\n+    <version.com.h2database>1.4.191</version.com.h2database>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwMzgxMA==", "bodyText": "Yes, it's needed. This H2 version is last running with JDK6.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532703810", "createdAt": "2020-11-30T15:56:57Z", "author": {"login": "ochaloup"}, "path": "pom.xml", "diffHunk": "@@ -412,7 +412,7 @@\n     <version.org.slf4j>1.6.1</version.org.slf4j>\n     <version.dom4j>1.6.1</version.dom4j>\n     <version.jfree>1.0.9</version.jfree>\n-    <version.com.h2database>1.4.195</version.com.h2database>\n+    <version.com.h2database>1.4.191</version.com.h2database>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNDMxMg=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0NjI0OQ==", "bodyText": "Thanks", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532746249", "createdAt": "2020-11-30T16:53:23Z", "author": {"login": "tomjenkinson"}, "path": "pom.xml", "diffHunk": "@@ -412,7 +412,7 @@\n     <version.org.slf4j>1.6.1</version.org.slf4j>\n     <version.dom4j>1.6.1</version.dom4j>\n     <version.jfree>1.0.9</version.jfree>\n-    <version.com.h2database>1.4.195</version.com.h2database>\n+    <version.com.h2database>1.4.191</version.com.h2database>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNDMxMg=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDgwMjUwOnYy", "diffSide": "RIGHT", "path": "narayana-release-process.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTowODoxM1rOH72PMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMTowODoxM1rOH72PMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUxNjY1OQ==", "bodyText": "Noted, thanks", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532516659", "createdAt": "2020-11-30T11:08:13Z", "author": {"login": "tomjenkinson"}, "path": "narayana-release-process.sh", "diffHunk": "@@ -52,7 +52,7 @@ then\n   git clean -f -d\n   # Add -x (this will delete all files (e.g. IDE, new features) not under source control)\n   rm -rf $PWD/localm2repo\n-  ./build.sh clean deploy -Dmaven.repo.local=${PWD}/localm2repo -Prelease,all -Dmaven.javadoc.skip=true -DskipTests -pl :jbossjts-jacorb,:jbossxts,:jbossjts-integration,:byteman_support,:jbosstxbridge -am\n+  ./build.sh clean install -Dmaven.repo.local=${PWD}/localm2repo -Prelease,all -Dmaven.javadoc.skip=true -DskipTests -pl :jbossjts-jacorb,:jbossxts,:jbossjts-integration,:byteman_support,:jbosstxbridge -am", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2faefe628819d93bd6f70e21588e7d715eefd475"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjEwNjc4OnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoxNTowM1rOH8CgoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTozMTozOVrOH8hOlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ==", "bodyText": "Why do we only run the tests on JDK 1.6?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532717729", "createdAt": "2020-11-30T16:15:03Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczODEyOA==", "bodyText": "It's the test for not being run on JDK 1.6 as there is the trouble as test checks for suppressed exceptions. Skipping these few tests on 1.6 was the shortcut to proceed with testing on JDK6.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532738128", "createdAt": "2020-11-30T16:42:23Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0OTAxMA==", "bodyText": "Will we run these tests for JDK7+ still?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532749010", "createdAt": "2020-11-30T16:56:44Z", "author": {"login": "tomjenkinson"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NDE3NA==", "bodyText": "Is that because we aren't allowed to do introspection to see if suppressed exceptions are available (I think that is what the later code did)? And is there no check for 1.5 because we don't support 1.5?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532754174", "createdAt": "2020-11-30T17:03:54Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2NDY3Ng==", "bodyText": "@tomjenkinson  Yes. It will be still running on JDK7+.\n@mmusgrov It's because the tests assertion work with the suppressed exceptions. I would need to change the logic of the tests which I don't want to do.\nYes, there is not check for 1.5 as it's not possible to start Narayana on JDK1.5 (aka. we do not support it).", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532764676", "createdAt": "2020-11-30T17:18:54Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3OTE1MA==", "bodyText": "I meant why aren't we using refection to see if the method exists like we do in the main code (\nhttps://github.com/jbosstm/narayana/blob/4.17.43.Final/ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/transaction/arjunacore/TransactionImple.java#L1684) rather than checking for specific JDK versions.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532779150", "createdAt": "2020-11-30T17:40:12Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIwNjAzOA==", "bodyText": "By my opinion we can use both approaches here. The reflection targets the difference more precisely as we do use from JDK API only this method.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533206038", "createdAt": "2020-12-01T09:22:31Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIwODIyOA==", "bodyText": "And the reason why I chose to use the check for the java version is that it sounds me more reasonable for the test approach.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533208228", "createdAt": "2020-12-01T09:24:00Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIyMTAxNQ==", "bodyText": "I will use the similar approach as for TransactionImple to be done in the same way", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533221015", "createdAt": "2020-12-01T09:31:39Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/FailAfterPrepareBase.java", "diffHunk": "@@ -50,6 +52,12 @@\n     private SimpleXAResource xaResource;\n     private CommitMarkableResourceRecordRecoveryModule recoveryModule;\n \n+    @Before\n+    public void setUp() {\n+        // not running with JDK6\n+        Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.6\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxNzcyOQ=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjEzMjAxOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoyMDozNlrOH8Cwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzo0MToxNVrOH8GTfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMTc3MA==", "bodyText": "What was the problem with Utils.removeRecursive? Is it using features that aren't in 1.6?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532721770", "createdAt": "2020-11-30T16:20:36Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "diffHunk": "@@ -49,7 +50,7 @@ public final void setup() throws Exception {\n \n \t\tFile file = new File(System.getProperty(\"user.dir\") + \"/ObjectStore\");\n \t\tif (file.exists()) {\n-\t\t\tUtils.removeRecursive(file.toPath());\n+\t\t\tFileUtils.deleteRecursive(file.getAbsolutePath(), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczODMyMA==", "bodyText": "Yes. It's from 1.7 in Java.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532738320", "createdAt": "2020-11-30T16:42:42Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "diffHunk": "@@ -49,7 +50,7 @@ public final void setup() throws Exception {\n \n \t\tFile file = new File(System.getProperty(\"user.dir\") + \"/ObjectStore\");\n \t\tif (file.exists()) {\n-\t\t\tUtils.removeRecursive(file.toPath());\n+\t\t\tFileUtils.deleteRecursive(file.getAbsolutePath(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMTc3MA=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1NDkxNA==", "bodyText": "So do you mean that the code inside FileUtils.deleteRecursive() is using features that are not available 1.6", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532754914", "createdAt": "2020-11-30T17:04:55Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "diffHunk": "@@ -49,7 +50,7 @@ public final void setup() throws Exception {\n \n \t\tFile file = new File(System.getProperty(\"user.dir\") + \"/ObjectStore\");\n \t\tif (file.exists()) {\n-\t\t\tUtils.removeRecursive(file.toPath());\n+\t\t\tFileUtils.deleteRecursive(file.getAbsolutePath(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMTc3MA=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2MzM5OQ==", "bodyText": "Sorry, I probably explained wrongly.\nThe FileUtils uses the code which is available in 1.6. That's the reason why I took that class it into the changeset.\nThe Utils class uses the file nio utils methods which are not available on JDK6. That's the reason for replacing it.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532763399", "createdAt": "2020-11-30T17:16:56Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "diffHunk": "@@ -49,7 +50,7 @@ public final void setup() throws Exception {\n \n \t\tFile file = new File(System.getProperty(\"user.dir\") + \"/ObjectStore\");\n \t\tif (file.exists()) {\n-\t\t\tUtils.removeRecursive(file.toPath());\n+\t\t\tFileUtils.deleteRecursive(file.getAbsolutePath(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMTc3MA=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3OTkwMw==", "bodyText": "Ah right, got you thanks. I'll mark this conversation as resolved then.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532779903", "createdAt": "2020-11-30T17:41:15Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/TestCommitMarkableResourceBase.java", "diffHunk": "@@ -49,7 +50,7 @@ public final void setup() throws Exception {\n \n \t\tFile file = new File(System.getProperty(\"user.dir\") + \"/ObjectStore\");\n \t\tif (file.exists()) {\n-\t\t\tUtils.removeRecursive(file.toPath());\n+\t\t\tFileUtils.deleteRecursive(file.getAbsolutePath(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyMTc3MA=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjE2NTI4OnYy", "diffSide": "RIGHT", "path": "scripts/hudson/narayana.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjoyNzozOFrOH8DFBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjo0NToxNlrOH8D4hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyNzA0Ng==", "bodyText": "I cannot find any documentation that describes what this env variable does. I can see it skipping some things but shouldn't the build instructions describe what it's for?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532727046", "createdAt": "2020-11-30T16:27:38Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,38 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc0MDIyOQ==", "bodyText": "That's a good point. I will add a comment in the sh script if it's fine.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532740229", "createdAt": "2020-11-30T16:45:16Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,38 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcyNzA0Ng=="}, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjE4OTMxOnYy", "diffSide": "RIGHT", "path": "scripts/hudson/narayana.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozMjo0MFrOH8DT7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozMjo0MFrOH8DT7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczMDg2MQ==", "bodyText": "Phew, I am so pleased that this is the last change that needs reviewing.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532730861", "createdAt": "2020-11-30T16:32:40Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -385,6 +412,7 @@ export ANT_OPTS=\"$ANT_OPTS $IPV6_OPTS\"\n \n # run the job\n [ $NARAYANA_BUILD = 1 ] && build_narayana \"$@\"\n+[ $NARAYANA_TESTS = 1 ] && test_narayana \"$@\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed83025da1d7d0b07f49bb0112f35740ce3e672"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjM2NTA4OnYy", "diffSide": "RIGHT", "path": "scripts/hudson/narayana.sh", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzowOTozOVrOH8E_Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToxODo1NFrOH8gCjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA==", "bodyText": "The pom says 1.6 is used for the source and target which doesn't match this statement:\n         <artifactId>maven-compiler-plugin</artifactId>\n          <version>2.3.2</version>\n          <configuration>\n            <source>1.6</source>\n            <target>1.6</target>\n            <compilerArgument>-AtranslationFilesPath=${project.basedir}/classes/</compilerArgument>\n          </configuration>\n\nDo we need to change the 1.6 parameter?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532758290", "createdAt": "2020-11-30T17:09:39Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc2ODg3Mw==", "bodyText": "That's a good point. The code can't be build on JDK6 as the code uses methods which are not available in JDK6 (e.g. suppressed exceptions). On the other side the code does not use any JDK7 specific language syntax. That way the source is 1.6 compatible but cannot be built on JDK6. It's a question how we want to approach it. Maybe changing to 1.7 would be better for guiding the user. I'm going to change it.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532768873", "createdAt": "2020-11-30T17:25:02Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3MDM4Mg==", "bodyText": "Ok, my wrong. The maven-compiler-plugin requires the source being the same (or lower probably) than the target. As we need to build for JDK6 then the source parameter must be 1.6.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532770382", "createdAt": "2020-11-30T17:27:07Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4MjExOQ==", "bodyText": "My point is that the new comment contradicts what the pom says. The pom says source is 1.6 whereas your new comment says that \"Narayana 4.17 requires JDK7 for building\".", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532782119", "createdAt": "2020-11-30T17:44:40Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc4NzQ1MQ==", "bodyText": "So the pom says we can only use JDK 1.6 features in the source.\nDo we require JDK 1.7 for compiling because our version of maven requires it or that we have some pom dependencies that are incompatible with JDK1.6?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r532787451", "createdAt": "2020-11-30T17:52:40Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE5MDUxNQ==", "bodyText": "For clarification, the new comment in the code means:\nWe target 1.6 byte code.\nAnd the java source is limited to 1.6 language features only.\n\nBut we must build on 1.7 because we are using a JDK API that only exists in JDK 1.7.\n\nThat is what we mean by \"Narayana 4.17 requires JDK7 for building\"?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533190515", "createdAt": "2020-12-01T09:09:54Z", "author": {"login": "mmusgrov"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIwMTU0OA==", "bodyText": "+1, I'm going to adjust the comment to be more understandable.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533201548", "createdAt": "2020-12-01T09:18:54Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,41 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This is an option used for testing on JDK6. The Narayana 4.17 requires JDK7 for building but target version is JDK6.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc1ODI5MA=="}, "originalCommit": {"oid": "0e1025f69d6954b32eda676d8687dd551013a512"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTQ5OTU4OnYy", "diffSide": "RIGHT", "path": "scripts/hudson/narayana.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo0Njo0N1rOH8idvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MzozOFrOH8i_uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MTI3OQ==", "bodyText": "I wonder if we should put a commit like this on master too in case we need to do something similar in future? (ability to run tests with a different JDK)", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533241279", "createdAt": "2020-12-01T09:46:47Z", "author": {"login": "tomjenkinson"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,38 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n+    local pathOriginal=\"$PATH\"\n+    local javaHomeOriginal=\"$JAVA_HOME\"\n+    export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n+    export PATH=\"$JAVA_HOME/bin:$PATH\"\n+  fi\n+\n+  echo \"Using Java version, Maven version with JAVA_HOME='$JAVA_HOME'\"\n+  ./build.sh -version\n+\n+  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS -Dtest=NonExistentTest -DfailIfNoTests=false $IPV6_OPTS -B clean install\n   [ $? = 0 ] || fatal \"narayana build failed\"\n \n+  if [ -n \"$pathOriginal\" ]; then\n+     export PATH=\"$pathOriginal\"\n+     export JAVA_HOME=\"$javaHomeOriginal\"\n+  fi\n+\n+  return 0\n+}\n+\n+function test_narayana {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "292087d51f60db64242182b0ec9f711e95e3eb11"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0OTkxOA==", "bodyText": "I note there is a further comment in 0323f19#diff-234fb7d762fdc80a3f29e8d8f4e0669ad47101d550eb3724420e91f64ee044de that could be useful to adapt too. But I expect some of the references to specific JDK versions like JDK6, 1.7 and 1.6 in the script and commit message would be revised perhaps to be more future looking.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533249918", "createdAt": "2020-12-01T09:53:35Z", "author": {"login": "tomjenkinson"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,38 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n+    local pathOriginal=\"$PATH\"\n+    local javaHomeOriginal=\"$JAVA_HOME\"\n+    export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n+    export PATH=\"$JAVA_HOME/bin:$PATH\"\n+  fi\n+\n+  echo \"Using Java version, Maven version with JAVA_HOME='$JAVA_HOME'\"\n+  ./build.sh -version\n+\n+  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS -Dtest=NonExistentTest -DfailIfNoTests=false $IPV6_OPTS -B clean install\n   [ $? = 0 ] || fatal \"narayana build failed\"\n \n+  if [ -n \"$pathOriginal\" ]; then\n+     export PATH=\"$pathOriginal\"\n+     export JAVA_HOME=\"$javaHomeOriginal\"\n+  fi\n+\n+  return 0\n+}\n+\n+function test_narayana {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MTI3OQ=="}, "originalCommit": {"oid": "292087d51f60db64242182b0ec9f711e95e3eb11"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0OTk3OQ==", "bodyText": "Currently there is not such need (as far as I know). If it sounds useful to you I can prepare it.\nWDYT?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533249979", "createdAt": "2020-12-01T09:53:38Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -123,11 +123,38 @@ function check_if_pull_closed\n function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n-  [ $NARAYANA_TESTS = 1 ] && NARAYANA_ARGS= || NARAYANA_ARGS=\"-DskipTests\"\n \n-  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS $IPV6_OPTS -B clean install\n+  if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n+    local pathOriginal=\"$PATH\"\n+    local javaHomeOriginal=\"$JAVA_HOME\"\n+    export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n+    export PATH=\"$JAVA_HOME/bin:$PATH\"\n+  fi\n+\n+  echo \"Using Java version, Maven version with JAVA_HOME='$JAVA_HOME'\"\n+  ./build.sh -version\n+\n+  ./build.sh -Prelease,community,all$OBJECT_STORE_PROFILE -Didlj-enabled=true \"$@\" $NARAYANA_ARGS -Dtest=NonExistentTest -DfailIfNoTests=false $IPV6_OPTS -B clean install\n   [ $? = 0 ] || fatal \"narayana build failed\"\n \n+  if [ -n \"$pathOriginal\" ]; then\n+     export PATH=\"$pathOriginal\"\n+     export JAVA_HOME=\"$javaHomeOriginal\"\n+  fi\n+\n+  return 0\n+}\n+\n+function test_narayana {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MTI3OQ=="}, "originalCommit": {"oid": "292087d51f60db64242182b0ec9f711e95e3eb11"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTUxMTAwOnYy", "diffSide": "RIGHT", "path": "scripts/hudson/narayana.sh", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo0ODoyOVrOH8ilxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1NTo1M1rOH8jLOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MzMzMw==", "bodyText": "This looks wrong to me, is it expected?", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533243333", "createdAt": "2020-12-01T09:48:29Z", "author": {"login": "tomjenkinson"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -124,13 +124,17 @@ function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n \n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This env property is used e.g. to build Narayana with JDK 1.7 but run the tests with JDK 1.6.\n+  # Narayana targets 1.6 byte code. And the java source is limited to 1.6 language features only.\n+  # We must build on 1.7 because we are using a JDK API that only exists in JDK 1.7.\n   if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n     local pathOriginal=\"$PATH\"\n     local javaHomeOriginal=\"$JAVA_HOME\"\n     export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n     export PATH=\"$JAVA_HOME/bin:$PATH\"\n   fi\n-\n+FailAfterPrepareBase.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0323f19dec710bfd134f5bdd7536dca2d0b5bb33"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI1MDUxMQ==", "bodyText": "+1, thanks for spotting this. This is a dumb copy&paste error.", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533250511", "createdAt": "2020-12-01T09:54:02Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -124,13 +124,17 @@ function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n \n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This env property is used e.g. to build Narayana with JDK 1.7 but run the tests with JDK 1.6.\n+  # Narayana targets 1.6 byte code. And the java source is limited to 1.6 language features only.\n+  # We must build on 1.7 because we are using a JDK API that only exists in JDK 1.7.\n   if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n     local pathOriginal=\"$PATH\"\n     local javaHomeOriginal=\"$JAVA_HOME\"\n     export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n     export PATH=\"$JAVA_HOME/bin:$PATH\"\n   fi\n-\n+FailAfterPrepareBase.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MzMzMw=="}, "originalCommit": {"oid": "0323f19dec710bfd134f5bdd7536dca2d0b5bb33"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI1MjkyMw==", "bodyText": "#1733", "url": "https://github.com/jbosstm/narayana/pull/1730#discussion_r533252923", "createdAt": "2020-12-01T09:55:53Z", "author": {"login": "ochaloup"}, "path": "scripts/hudson/narayana.sh", "diffHunk": "@@ -124,13 +124,17 @@ function build_narayana {\n   echo \"Building Narayana\"\n   cd $WORKSPACE\n \n+  # JAVA_HOME_FOR_BUILD can be used in environment if JDK for building Narayana needs to be different from one which runs e.g. tests.\n+  # This env property is used e.g. to build Narayana with JDK 1.7 but run the tests with JDK 1.6.\n+  # Narayana targets 1.6 byte code. And the java source is limited to 1.6 language features only.\n+  # We must build on 1.7 because we are using a JDK API that only exists in JDK 1.7.\n   if [ -n \"$JAVA_HOME_FOR_BUILD\" ]; then\n     local pathOriginal=\"$PATH\"\n     local javaHomeOriginal=\"$JAVA_HOME\"\n     export JAVA_HOME=\"$JAVA_HOME_FOR_BUILD\"\n     export PATH=\"$JAVA_HOME/bin:$PATH\"\n   fi\n-\n+FailAfterPrepareBase.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0MzMzMw=="}, "originalCommit": {"oid": "0323f19dec710bfd134f5bdd7536dca2d0b5bb33"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1151, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}