{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTE5OTE5", "number": 1547, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjozOTo0MFrODXNUsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTowNTozOFrODXPp-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjYyMTI4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjozOTo0MFrOFcZo0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTowMTozNlrOFcdQCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNDQ5Nw==", "bodyText": "I guess this is separate to the core JBTM in this PR?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365324497", "createdAt": "2020-01-10T16:39:40Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -62,7 +61,7 @@\n     private Map<URI, Transaction> recoveringLRAs = new ConcurrentHashMap<>();\n     private Map<URI, ReentrantLock> locks = new ConcurrentHashMap<>();\n \n-    private static Map<String, String> participants = new ConcurrentHashMap<>();\n+    private Map<String, String> participants = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0Nzc3Mw==", "bodyText": "Well the bean is ApplicationScoped so using a static makes little difference.", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365347773", "createdAt": "2020-01-10T17:32:19Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -62,7 +61,7 @@\n     private Map<URI, Transaction> recoveringLRAs = new ConcurrentHashMap<>();\n     private Map<URI, ReentrantLock> locks = new ConcurrentHashMap<>();\n \n-    private static Map<String, String> participants = new ConcurrentHashMap<>();\n+    private Map<String, String> participants = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNDQ5Nw=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0ODQ3NA==", "bodyText": "Agreed, it looks right not to be static but is it related to https://issues.redhat.com/browse/JBTM-3243 is what I was getting at.", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365348474", "createdAt": "2020-01-10T17:34:09Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -62,7 +61,7 @@\n     private Map<URI, Transaction> recoveringLRAs = new ConcurrentHashMap<>();\n     private Map<URI, ReentrantLock> locks = new ConcurrentHashMap<>();\n \n-    private static Map<String, String> participants = new ConcurrentHashMap<>();\n+    private Map<String, String> participants = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNDQ5Nw=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4MzY4OQ==", "bodyText": "Well I think so since the PR is all about getting the semantics of an ApplicationScoped bean correct and using statics in such a bean is counter intuitive.", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365383689", "createdAt": "2020-01-10T19:01:36Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -62,7 +61,7 @@\n     private Map<URI, Transaction> recoveringLRAs = new ConcurrentHashMap<>();\n     private Map<URI, ReentrantLock> locks = new ConcurrentHashMap<>();\n \n-    private static Map<String, String> participants = new ConcurrentHashMap<>();\n+    private Map<String, String> participants = new ConcurrentHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNDQ5Nw=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjYyNjgxOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo0MTozMVrOFcZsaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1MDoyNFrOFcbecA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNTQxNg==", "bodyText": "I note that this is currently a no-op but I wonder if a separate JBTM should be removing from the RecordTypeManager to reverse the install?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365325416", "createdAt": "2020-01-10T16:41:31Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -410,18 +404,18 @@ void enableRecovery(@Observes @Initialized(ApplicationScoped.class) Object init)\n \n     /**\n      * When the deployment is unloaded unregister for recovery\n-     *\n-     * @param init a javax.servlet.ServletContext\n      */\n-    void disableRecovery(@Observes @Destroyed(ApplicationScoped.class) Object init) {\n-        assert lraRecoveryModule != null;\n+    @PreDestroy\n+    void disableRecovery() {\n+        if (lraRecoveryModule != null) {\n \n-        Implementations.uninstall();\n-        RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n-        lraRecoveryModule = null;\n+            Implementations.uninstall();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NDYwOA==", "bodyText": "I provided an implementation for Implementations.uninstall()", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365354608", "createdAt": "2020-01-10T17:50:24Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -410,18 +404,18 @@ void enableRecovery(@Observes @Initialized(ApplicationScoped.class) Object init)\n \n     /**\n      * When the deployment is unloaded unregister for recovery\n-     *\n-     * @param init a javax.servlet.ServletContext\n      */\n-    void disableRecovery(@Observes @Destroyed(ApplicationScoped.class) Object init) {\n-        assert lraRecoveryModule != null;\n+    @PreDestroy\n+    void disableRecovery() {\n+        if (lraRecoveryModule != null) {\n \n-        Implementations.uninstall();\n-        RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n-        lraRecoveryModule = null;\n+            Implementations.uninstall();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNTQxNg=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjYyOTkyOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo0MjozMVrOFcZuZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozNToxOVrOFcbIDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNTkyNQ==", "bodyText": "I am not sure what the %n refers to here. I think it would be fine to correct the typo given it is debug statement and is being edited in this PR", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365325925", "createdAt": "2020-01-10T16:42:31Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -410,18 +404,18 @@ void enableRecovery(@Observes @Initialized(ApplicationScoped.class) Object init)\n \n     /**\n      * When the deployment is unloaded unregister for recovery\n-     *\n-     * @param init a javax.servlet.ServletContext\n      */\n-    void disableRecovery(@Observes @Destroyed(ApplicationScoped.class) Object init) {\n-        assert lraRecoveryModule != null;\n+    @PreDestroy\n+    void disableRecovery() {\n+        if (lraRecoveryModule != null) {\n \n-        Implementations.uninstall();\n-        RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n-        lraRecoveryModule = null;\n+            Implementations.uninstall();\n+            RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n+            lraRecoveryModule = null;\n \n-        if (LRALogger.logger.isDebugEnabled()) {\n-            LRALogger.logger.debugf(\"LRAServicve.disableRecovery%n\");\n+            if (LRALogger.logger.isDebugEnabled()) {\n+                LRALogger.logger.debugf(\"LRAServicve.disableRecovery%n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0ODg3OA==", "bodyText": "It wasn't introduced by the PR but I agree it's a good opportunity to correct it.", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365348878", "createdAt": "2020-01-10T17:35:19Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -410,18 +404,18 @@ void enableRecovery(@Observes @Initialized(ApplicationScoped.class) Object init)\n \n     /**\n      * When the deployment is unloaded unregister for recovery\n-     *\n-     * @param init a javax.servlet.ServletContext\n      */\n-    void disableRecovery(@Observes @Destroyed(ApplicationScoped.class) Object init) {\n-        assert lraRecoveryModule != null;\n+    @PreDestroy\n+    void disableRecovery() {\n+        if (lraRecoveryModule != null) {\n \n-        Implementations.uninstall();\n-        RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n-        lraRecoveryModule = null;\n+            Implementations.uninstall();\n+            RecoveryManager.manager().removeModule(lraRecoveryModule, false);\n+            lraRecoveryModule = null;\n \n-        if (LRALogger.logger.isDebugEnabled()) {\n-            LRALogger.logger.debugf(\"LRAServicve.disableRecovery%n\");\n+            if (LRALogger.logger.isDebugEnabled()) {\n+                LRALogger.logger.debugf(\"LRAServicve.disableRecovery%n\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyNTkyNQ=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjY1MjM4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo1MDoyMlrOFcZ8xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozNjoxN1rOFcbJlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyOTYwNg==", "bodyText": "I don't think this dependency should be required now? Or at least javax/annotation is not provided directly inside it. If a dependency is required I suspect it would be on one from https://search.maven.org/artifact/jakarta.annotation/jakarta.annotation-api", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365329606", "createdAt": "2020-01-10T16:50:22Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/pom.xml", "diffHunk": "@@ -103,6 +103,12 @@\n             <version>${project.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0OTI2OQ==", "bodyText": "+1", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365349269", "createdAt": "2020-01-10T17:36:17Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/pom.xml", "diffHunk": "@@ -103,6 +103,12 @@\n             <version>${project.version}</version>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMyOTYwNg=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjY1NjQ5OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo1MTo0OVrOFcZ_WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTowODo1OFrOFcgI4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA==", "bodyText": "was this part a general tidy up or was it related to JBTM-3243? if general I think it needs a separate issue?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365330264", "createdAt": "2020-01-10T16:51:49Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0OTYxOQ==", "bodyText": "Really! Perhaps if I remember I will include it in a general tidy up sometime.", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365349619", "createdAt": "2020-01-10T17:37:10Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MDI3MA==", "bodyText": "It's not caused by https://issues.redhat.com/browse/JBTM-3243 is it? But as our LRA implementation is not complete perhaps just a separate commit would suffice?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365350270", "createdAt": "2020-01-10T17:38:50Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MDU4OQ==", "bodyText": "The problem with having to raise a JBTM against every trivial issue on a code base that is tracking an evolving pre-release spec is that is slows down progress to delivering a first cut of the s/w", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365350589", "createdAt": "2020-01-10T17:39:47Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MTEzNA==", "bodyText": "yeah, I tend to agree for the tidy up stuff. a separate commit though would be reasonable as it's not accurate to include it in a commit for a JBTM which does not apply, WDYT?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365351134", "createdAt": "2020-01-10T17:41:12Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMTAwOQ==", "bodyText": "Sure, a separate commit in the same PR would work for me (not in this one though since I reverted the change).", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365431009", "createdAt": "2020-01-10T21:08:58Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDI2NA=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjY1Njc5OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjo1MTo1NVrOFcZ_kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo0Mjo0OVrOFcbTVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDMyMQ==", "bodyText": "was this part a general tidy up or was it related to JBTM-3243? if general I think it needs a separate issue?", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365330321", "createdAt": "2020-01-10T16:51:55Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);\n \n-        if (locks.containsKey(lraId)) {\n-            locks.remove(lraId);\n-        }\n+        locks.remove(lraId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MDY0OA==", "bodyText": "ditto", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365350648", "createdAt": "2020-01-10T17:39:57Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);\n \n-        if (locks.containsKey(lraId)) {\n-            locks.remove(lraId);\n-        }\n+        locks.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDMyMQ=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1MTc2Nw==", "bodyText": "I have revised on #1547 (comment)", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365351767", "createdAt": "2020-01-10T17:42:49Z", "author": {"login": "tomjenkinson"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/service/LRAService.java", "diffHunk": "@@ -189,13 +188,9 @@ public void remove(String state, URI lraId) {\n             lras.remove(lraId);\n         }\n \n-        if (recoveringLRAs.containsKey(lraId)) {\n-            recoveringLRAs.remove(lraId);\n-        }\n+        recoveringLRAs.remove(lraId);\n \n-        if (locks.containsKey(lraId)) {\n-            locks.remove(lraId);\n-        }\n+        locks.remove(lraId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMzMDMyMQ=="}, "originalCommit": {"oid": "747b0537818d2ff43e4d15c5a16b1c6e99612f48"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzAwMzQ0OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/internal/Implementations.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTowNTozOFrOFcdWdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTowNTozOFrOFcdWdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NTMzMg==", "bodyText": "@tomjenkinson This is the implementation for Implementations.uninstall()", "url": "https://github.com/jbosstm/narayana/pull/1547#discussion_r365385332", "createdAt": "2020-01-10T19:05:38Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/internal/Implementations.java", "diffHunk": "@@ -48,17 +48,20 @@ public int getType() {\n \n public class Implementations {\n \n-    private static boolean _added = false;\n+    private static LRACompensatorMap typeMap;\n \n     public static synchronized void install() {\n-        if (!_added) {\n-            RecordTypeManager.manager().add(new LRACompensatorMap());\n-\n-            _added = true;\n+        if (typeMap == null) {\n+            typeMap = new LRACompensatorMap();\n+            RecordTypeManager.manager().add(typeMap);\n         }\n     }\n \n     public static synchronized void uninstall() {\n+        if (typeMap != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e73ab4356a22f08c54dfd381596e65571eab07d2"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1243, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}