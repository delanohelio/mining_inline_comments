{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTA0MzM3", "number": 1702, "title": "[JBTM-3376] clean CMRIntegrationTest to be more transparent and get more info when it fails", "bodyText": "https://issues.redhat.com/browse/JBTM-3376\nAS_TESTS\n!MAIN !CORE !QA_JTA !QA_JTS_JDKORB !QA_JTS_OPENJDKORB !QA_JTS_JACORB !BLACKTIE !XTS !PERF NO_WIN !RTS !TOMCAT !JACOCO !LRA", "createdAt": "2020-10-22T08:13:30Z", "url": "https://github.com/jbosstm/narayana/pull/1702", "merged": true, "mergeCommit": {"oid": "b3e22db06c01daa3177054e0907bd05389addae4"}, "closed": true, "closedAt": "2020-10-23T09:43:33Z", "author": {"login": "ochaloup"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU_Bx4gFqTUxNDU2MDQ5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVB1AlgFqTUxNDcxNDA5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NTYwNDkz", "url": "https://github.com/jbosstm/narayana/pull/1702#pullrequestreview-514560493", "createdAt": "2020-10-22T10:01:41Z", "commit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMDowMTo0MVrOHmaMXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMDowMTo0MVrOHmaMXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAzNzA4NA==", "bodyText": "Why aren't we printing the stack trace for suppressed exceptions?", "url": "https://github.com/jbosstm/narayana/pull/1702#discussion_r510037084", "createdAt": "2020-10-22T10:01:41Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/integration/CMRIntegrationTest.java", "diffHunk": "@@ -169,60 +167,40 @@ public void run() {\n \t\t\t\t\t\t\t\t\t.createStatement();\n \t\t\t\t\t\t\tcreateStatement\n \t\t\t\t\t\t\t\t\t.execute(\"INSERT INTO foo (bar) VALUES (1)\");\n-\t\t\t\t\t\t\t// System.out.printf(\"XXX txn close%n\");\n-\n-\t\t\t\t\t\t\tif (faultType == 1)\n-\t\t\t\t\t\t\t\tRuntime.getRuntime().halt(0);\n \n                             userTransaction.commit();\n \t\t\t\t\t\t\tconnection.close(); // This wouldn't work for a\n \t\t\t\t\t\t\t\t\t\t\t\t// none-JCA code as commit has\n \t\t\t\t\t\t\t\t\t\t\t\t// closed the connection - it\n \t\t\t\t\t\t\t\t\t\t\t\t// helps us though as JCA seems\n \t\t\t\t\t\t\t\t\t\t\t\t// to rely on finalize\n-\n-\t\t\t\t\t\t\t// System.out\n-\t\t\t\t\t\t\t// .printf(\"committed txn iteration %d%n\", i);\n \t\t\t\t\t\t\tsuccess++;\n \t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tSystem.err.println(\"boom\");\n-\t\t\t\t\t\t\te.printStackTrace();\n-\t\t\t\t\t\t\tif (e.getCause() != null) {\n-\t\t\t\t\t\t\t\te.getCause().printStackTrace();\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tlog.errorf(e, \"Error while invoking insertion to a database table with CMR resource\");\n \t\t\t\t\t\t\tSQLException nextException = e.getNextException();\n \t\t\t\t\t\t\twhile (nextException != null) {\n-\t\t\t\t\t\t\t\tnextException.printStackTrace();\n-\t\t\t\t\t\t\t\tnextException = nextException\n-\t\t\t\t\t\t\t\t\t\t.getNextException();\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tThrowable[] suppressed = e.getSuppressed();\n-\t\t\t\t\t\t\tfor (int j = 0; j < suppressed.length; j++) {\n-\t\t\t\t\t\t\t\tsuppressed[j].printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NTcxNDI0", "url": "https://github.com/jbosstm/narayana/pull/1702#pullrequestreview-514571424", "createdAt": "2020-10-22T10:15:47Z", "commit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMDoxNTo0N1rOHmasrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMDoxNjo1MFrOHmavFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA0NTM1OQ==", "bodyText": "I would prefer that we explicitly fail here (also there are other places where we throw instead of fail). If a test throws an exception I interpret that as meaning that the test needs fixing unless the test is marked as such, eg @test (expected = IllegalStateException.class).", "url": "https://github.com/jbosstm/narayana/pull/1702#discussion_r510045359", "createdAt": "2020-10-22T10:15:47Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/integration/CMRIntegrationTest.java", "diffHunk": "@@ -169,60 +167,40 @@ public void run() {\n \t\t\t\t\t\t\t\t\t.createStatement();\n \t\t\t\t\t\t\tcreateStatement\n \t\t\t\t\t\t\t\t\t.execute(\"INSERT INTO foo (bar) VALUES (1)\");\n-\t\t\t\t\t\t\t// System.out.printf(\"XXX txn close%n\");\n-\n-\t\t\t\t\t\t\tif (faultType == 1)\n-\t\t\t\t\t\t\t\tRuntime.getRuntime().halt(0);\n \n                             userTransaction.commit();\n \t\t\t\t\t\t\tconnection.close(); // This wouldn't work for a\n \t\t\t\t\t\t\t\t\t\t\t\t// none-JCA code as commit has\n \t\t\t\t\t\t\t\t\t\t\t\t// closed the connection - it\n \t\t\t\t\t\t\t\t\t\t\t\t// helps us though as JCA seems\n \t\t\t\t\t\t\t\t\t\t\t\t// to rely on finalize\n-\n-\t\t\t\t\t\t\t// System.out\n-\t\t\t\t\t\t\t// .printf(\"committed txn iteration %d%n\", i);\n \t\t\t\t\t\t\tsuccess++;\n \t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tSystem.err.println(\"boom\");\n-\t\t\t\t\t\t\te.printStackTrace();\n-\t\t\t\t\t\t\tif (e.getCause() != null) {\n-\t\t\t\t\t\t\t\te.getCause().printStackTrace();\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tlog.errorf(e, \"Error while invoking insertion to a database table with CMR resource\");\n \t\t\t\t\t\t\tSQLException nextException = e.getNextException();\n \t\t\t\t\t\t\twhile (nextException != null) {\n-\t\t\t\t\t\t\t\tnextException.printStackTrace();\n-\t\t\t\t\t\t\t\tnextException = nextException\n-\t\t\t\t\t\t\t\t\t\t.getNextException();\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\tThrowable[] suppressed = e.getSuppressed();\n-\t\t\t\t\t\t\tfor (int j = 0; j < suppressed.length; j++) {\n-\t\t\t\t\t\t\t\tsuppressed[j].printStackTrace();\n+\t\t\t\t\t\t\t\tlog.errorf(\"Next SQLException chained\", nextException);\n+\t\t\t\t\t\t\t\tnextException = nextException.getNextException();\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\ttry {\n \t\t\t\t\t\t\t\tuserTransaction.rollback();\n \t\t\t\t\t\t\t} catch (IllegalStateException | SecurityException\n \t\t\t\t\t\t\t\t\t| SystemException e1) {\n-\t\t\t\t\t\t\t\te1.printStackTrace();\n-\t\t\t\t\t\t\t\tfail(\"Problem with transaction\");\n+\t\t\t\t\t\t\t\tlog.error(\"Problem with transaction\", e1);\n+\t\t\t\t\t\t\t\tthrow new IllegalStateException(\"Problem with transaction\", e1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA0NTk3Mg==", "bodyText": "This is much more friendly than boom :-)", "url": "https://github.com/jbosstm/narayana/pull/1702#discussion_r510045972", "createdAt": "2020-10-22T10:16:50Z", "author": {"login": "mmusgrov"}, "path": "ArjunaJTA/jta/tests/classes/com/hp/mwtests/ts/jta/commitmarkable/integration/CMRIntegrationTest.java", "diffHunk": "@@ -169,60 +167,40 @@ public void run() {\n \t\t\t\t\t\t\t\t\t.createStatement();\n \t\t\t\t\t\t\tcreateStatement\n \t\t\t\t\t\t\t\t\t.execute(\"INSERT INTO foo (bar) VALUES (1)\");\n-\t\t\t\t\t\t\t// System.out.printf(\"XXX txn close%n\");\n-\n-\t\t\t\t\t\t\tif (faultType == 1)\n-\t\t\t\t\t\t\t\tRuntime.getRuntime().halt(0);\n \n                             userTransaction.commit();\n \t\t\t\t\t\t\tconnection.close(); // This wouldn't work for a\n \t\t\t\t\t\t\t\t\t\t\t\t// none-JCA code as commit has\n \t\t\t\t\t\t\t\t\t\t\t\t// closed the connection - it\n \t\t\t\t\t\t\t\t\t\t\t\t// helps us though as JCA seems\n \t\t\t\t\t\t\t\t\t\t\t\t// to rely on finalize\n-\n-\t\t\t\t\t\t\t// System.out\n-\t\t\t\t\t\t\t// .printf(\"committed txn iteration %d%n\", i);\n \t\t\t\t\t\t\tsuccess++;\n \t\t\t\t\t\t} catch (SQLException e) {\n-\t\t\t\t\t\t\tSystem.err.println(\"boom\");\n-\t\t\t\t\t\t\te.printStackTrace();\n-\t\t\t\t\t\t\tif (e.getCause() != null) {\n-\t\t\t\t\t\t\t\te.getCause().printStackTrace();\n-\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tlog.errorf(e, \"Error while invoking insertion to a database table with CMR resource\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89"}, "originalPosition": 97}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5fed4eb3ee7e40e351e0b55a8135add6fae7e94", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/a5fed4eb3ee7e40e351e0b55a8135add6fae7e94", "committedDate": "2020-10-22T12:23:30Z", "message": "[JBTM-3376] clean CMRIntegrationTest to be more transparent and get more when fails"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a2c7efba988708c4082dca6d67cf523c8b49c89", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/4a2c7efba988708c4082dca6d67cf523c8b49c89", "committedDate": "2020-10-22T08:01:26Z", "message": "[JBTM-3376] clean CMRIntegrationTest to be more transparent and get more when fails"}, "afterCommit": {"oid": "a5fed4eb3ee7e40e351e0b55a8135add6fae7e94", "author": {"user": {"login": "ochaloup", "name": "chalda"}}, "url": "https://github.com/jbosstm/narayana/commit/a5fed4eb3ee7e40e351e0b55a8135add6fae7e94", "committedDate": "2020-10-22T12:23:30Z", "message": "[JBTM-3376] clean CMRIntegrationTest to be more transparent and get more when fails"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NzE0MDk5", "url": "https://github.com/jbosstm/narayana/pull/1702#pullrequestreview-514714099", "createdAt": "2020-10-22T13:17:27Z", "commit": {"oid": "a5fed4eb3ee7e40e351e0b55a8135add6fae7e94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4484, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}