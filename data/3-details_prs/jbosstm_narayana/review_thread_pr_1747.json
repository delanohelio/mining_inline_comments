{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzE0MzA3", "number": 1747, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTo1MjoxNFrOFFqn6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxMzowMDozMlrOFMgn1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDg1NTQ0OnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTo1MjoxNFrOIGScRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjozMToyNlrOIILZmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDUxNw==", "bodyText": "Please, we are used to use the Logger - https://github.com/jbosstm/narayana/blob/master/ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java#L50 to report the WARN and ERROR messages. We expect that e.g. the messages could be translated and tracked by id. Could you please make the message being defined there?", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543464517", "createdAt": "2020-12-15T15:52:14Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NjI5Ng==", "bodyText": "Resolved", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446296", "createdAt": "2020-12-17T22:31:26Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NDUxNw=="}, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDg3MzgwOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNTo1NTozNlrOIGSnOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjozMTozN1rOIILZ9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw==", "bodyText": "It could be better to use zero size array for toArray (toArray(new T[0])), see https://shipilev.net/blog/2016/arrays-wisdom-ancients/#_conclusion", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543467323", "createdAt": "2020-12-15T15:55:36Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n+                                    + xares.toString() + getXidLogInfo(xid));\n+                            }   \n+                        }                                  \n+                    }\n+                    trans = transList.toArray(new Xid[transList.size()]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NjM4OQ==", "bodyText": "Resolved", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446389", "createdAt": "2020-12-17T22:31:37Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"\n+                                        + getXidLogInfo(xid));\n+                                }\n+                            } else {\n+                                it.remove();\n+                                jtaLogger.logger.warn(\"Failed to recover: Returned global transaction identifier is null. \"\n+                                    + xares.toString() + getXidLogInfo(xid));\n+                            }   \n+                        }                                  \n+                    }\n+                    trans = transList.toArray(new Xid[transList.size()]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ2NzMyMw=="}, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDkwMzUxOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjowMDo1NlrOIGS5TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjozNDo0MlrOIILfVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MTk0OA==", "bodyText": "A topic for discussion - would make sense to check for null the format and branch as well? Is there some experience that e.g. Oracle could not be filling the other parts of Xid and leaving them null?", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543471948", "createdAt": "2020-12-15T16:00:56Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0Nzc2Ng==", "bodyText": "I added check for branch == null.", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545447766", "createdAt": "2020-12-17T22:34:42Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MTk0OA=="}, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDkwODAyOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjowMTo0NlrOIGS7-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjozMjo1NFrOIILcQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ==", "bodyText": "A code style thing (not necessary to be addressed) - maybe the debug call message could be whole at single line.", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543472635", "createdAt": "2020-12-15T16:01:46Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0Njk3Nw==", "bodyText": "Resolved", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545446977", "createdAt": "2020-12-17T22:32:54Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -736,33 +738,29 @@ private final void xaRecoveryFirstPass(NameScopedXAResource xares)\n                             + ((trans != null) ? trans.length : 0)\n                             + \" xids in doubt\");\n                 }\n-\t\t\t\tif (jtaLogger.logger.isTraceEnabled()) {\n-\t\t\t\t\tfor (Xid xid : trans) {\n-\t\t\t\t\t\tbyte[] globalTransactionId = xid.getGlobalTransactionId();\n-\t\t\t\t\t\tbyte[] branchQualifier = xid.getBranchQualifier();\n-\t\n-\t\t\t\t\t\tStringBuilder stringBuilder = new StringBuilder();\n-\t\t\t\t\t\tstringBuilder.append(\"< \");\n-\t\t\t\t\t\tstringBuilder.append(xid.getFormatId());\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(globalTransactionId.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tstringBuilder.append(branchQualifier.length);\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < globalTransactionId.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(globalTransactionId[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\", \");\n-\t\t\t\t\t\tfor (int i = 0; i < branchQualifier.length; i++) {\n-\t\t\t\t\t\t\tstringBuilder.append(branchQualifier[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tstringBuilder.append(\" >\");\n-\t\n-\t\t\t\t\t\tjtaLogger.logger.debug(\"Recovered: \"\n-\t\t\t\t\t\t\t\t+ stringBuilder.toString());\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\n+                if (trans != null) {\n+                    List<Xid> transList = new ArrayList<Xid>(Arrays.asList(trans));\n+                    Iterator<Xid> it = transList.iterator();\n+                    while (it.hasNext()) {\n+                        Xid xid = it.next();\n+                        if (xid != null) {\n+                            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+                            if (globalTransactionId != null) {\n+                                if (jtaLogger.logger.isDebugEnabled()) {\n+                                    jtaLogger.logger.debug(\"Recovered: \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MjYzNQ=="}, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDkxMzUyOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjowMjo0NlrOIGS_Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjozMzoyMFrOIILdBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MzQ3NA==", "bodyText": "If there is the check for globalTransactionId and branchQualifier in this printing, it could be good to check the format for null as well here.", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r543473474", "createdAt": "2020-12-15T16:02:46Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -1223,6 +1221,40 @@ private void saveContactedJndiName(final String jndiName) {\n             contactedJndiNames.add(jndiName);\n         }\n     }\n+    \n+    private String getXidLogInfo (Xid xid) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        \n+        if (xid != null) {\n+            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+            byte[] branchQualifier = xid.getBranchQualifier();\n+            stringBuilder.append(\"< \");\n+            stringBuilder.append(xid.getFormatId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQ0NzE3Mg==", "bodyText": "xid.getFormatId() is int", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r545447172", "createdAt": "2020-12-17T22:33:20Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/internal/jta/recovery/arjunacore/XARecoveryModule.java", "diffHunk": "@@ -1223,6 +1221,40 @@ private void saveContactedJndiName(final String jndiName) {\n             contactedJndiNames.add(jndiName);\n         }\n     }\n+    \n+    private String getXidLogInfo (Xid xid) {\n+        StringBuilder stringBuilder = new StringBuilder();\n+        \n+        if (xid != null) {\n+            byte[] globalTransactionId = xid.getGlobalTransactionId();\n+            byte[] branchQualifier = xid.getBranchQualifier();\n+            stringBuilder.append(\"< \");\n+            stringBuilder.append(xid.getFormatId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ3MzQ3NA=="}, "originalCommit": {"oid": "12e18e8309d1003149ef0e6e0822abb26afd4933"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NjYxMzMxOnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxMjo1OToxMVrOIQRKQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNDo1Mjo0OFrOIQUy5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTI4MA==", "bodyText": "Would not be good to rename the arg0 to something more readable, e.g. xaResourceAsString?", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553929280", "createdAt": "2021-01-08T12:59:11Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "diffHunk": "@@ -600,6 +600,14 @@\n     @Message(id = 16148, value = \"Cannot work further as the argument Xid is null.\", format = MESSAGE_FORMAT)\n     String get_error_xid_is_null();\n \n+    @Message(id = 16149, value = \"Returned global transaction identifier and branch qualifier are null but format id is not -1. {0}\", format = MESSAGE_FORMAT)\n+    @LogMessage(level = WARN)\n+    public void warn_recovery_transaction_id_and_branch_qualifier_are_null_wrong_format_id(String arg0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99675ea90ea009911e4e6a0dc35f9fd425603ebb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzk4ODgzNw==", "bodyText": "Corrected", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553988837", "createdAt": "2021-01-08T14:52:48Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/logging/jtaI18NLogger.java", "diffHunk": "@@ -600,6 +600,14 @@\n     @Message(id = 16148, value = \"Cannot work further as the argument Xid is null.\", format = MESSAGE_FORMAT)\n     String get_error_xid_is_null();\n \n+    @Message(id = 16149, value = \"Returned global transaction identifier and branch qualifier are null but format id is not -1. {0}\", format = MESSAGE_FORMAT)\n+    @LogMessage(level = WARN)\n+    public void warn_recovery_transaction_id_and_branch_qualifier_are_null_wrong_format_id(String arg0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTI4MA=="}, "originalCommit": {"oid": "99675ea90ea009911e4e6a0dc35f9fd425603ebb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NjYxNzE2OnYy", "diffSide": "RIGHT", "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxMzowMDozMlrOIQRMmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNDo1MzowM1rOIQUzfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTg4MQ==", "bodyText": "It seems a strange indent is used here.", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553929881", "createdAt": "2021-01-08T13:00:32Z", "author": {"login": "ochaloup"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java", "diffHunk": "@@ -186,15 +187,17 @@ public final void copy(Xid xid) {\n \n \t\t\t\tbyte[] gtx = xid.getGlobalTransactionId();\n \t\t\t\tbyte[] bql = xid.getBranchQualifier();\n+\t\t\t\tfinal int gtxlength = (gtx == null ? 0 : gtx.length);\n \t\t\t\tfinal int bqlength = (bql == null ? 0 : bql.length);\n \n-\t\t\t\t_theXid.gtrid_length = gtx.length;\n+\t\t\t\t_theXid.gtrid_length = gtxlength;\n \t\t\t\t_theXid.bqual_length = bqlength;\n \n-\t\t\t\tSystem.arraycopy(gtx, 0, _theXid.data, 0, gtx.length);\n+\t\t\t\tif (gtxlength > 0) {\n+\t\t              System.arraycopy(gtx, 0, _theXid.data, 0, gtxlength);  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99675ea90ea009911e4e6a0dc35f9fd425603ebb"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mzk4ODk5MQ==", "bodyText": "Corrected", "url": "https://github.com/jbosstm/narayana/pull/1747#discussion_r553988991", "createdAt": "2021-01-08T14:53:03Z", "author": {"login": "ivassile"}, "path": "ArjunaJTA/jta/classes/com/arjuna/ats/jta/xa/XidImple.java", "diffHunk": "@@ -186,15 +187,17 @@ public final void copy(Xid xid) {\n \n \t\t\t\tbyte[] gtx = xid.getGlobalTransactionId();\n \t\t\t\tbyte[] bql = xid.getBranchQualifier();\n+\t\t\t\tfinal int gtxlength = (gtx == null ? 0 : gtx.length);\n \t\t\t\tfinal int bqlength = (bql == null ? 0 : bql.length);\n \n-\t\t\t\t_theXid.gtrid_length = gtx.length;\n+\t\t\t\t_theXid.gtrid_length = gtxlength;\n \t\t\t\t_theXid.bqual_length = bqlength;\n \n-\t\t\t\tSystem.arraycopy(gtx, 0, _theXid.data, 0, gtx.length);\n+\t\t\t\tif (gtxlength > 0) {\n+\t\t              System.arraycopy(gtx, 0, _theXid.data, 0, gtxlength);  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzkyOTg4MQ=="}, "originalCommit": {"oid": "99675ea90ea009911e4e6a0dc35f9fd425603ebb"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1169, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}