{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzgwOTgy", "number": 1677, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjozNzo1MFrOEpApgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyNzozOVrOEtgxgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDM3Njk5OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjozNzo1MFrOHabcGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwODowOToyNFrOHa_KPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NDU4NA==", "bodyText": "Do you think we can move the version definition to a maven property?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r497474584", "createdAt": "2020-09-30T12:37:50Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.eclipse.microprofile.rest.client</groupId>\n+        <artifactId>microprofile-rest-client-api</artifactId>\n+        <version>1.4.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA1OTgzOA==", "bodyText": "sure, that is an oversight on my side, thanks", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r498059838", "createdAt": "2020-10-01T08:09:24Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.eclipse.microprofile.rest.client</groupId>\n+        <artifactId>microprofile-rest-client-api</artifactId>\n+        <version>1.4.1</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NDU4NA=="}, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDM4NzUxOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjo0MDoxOVrOHabidw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjozNDo0OVrOHbIPgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NjIxNQ==", "bodyText": "For internationalization purposes we are used to use the error messages defined in i18Logger (ie. LRALogger.i18NLogger.*). Would be possible to change it that way?\n(I understand that it was not done so in the code before but as I hit this in the diff I think it could be good to be changed.)", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r497476215", "createdAt": "2020-09-30T12:40:19Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -569,9 +562,14 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n         }\n \n         try {\n-            response = getTarget().path(getLRAId(lraId.toString())).path(\"status\")\n-                    .request()\n-                    .get();\n+            response = coordinatorClient.getLRAStatus(getLRAId(lraId.toString()));\n+        } catch (WebApplicationException wae) {\n+            Response waeResponse = wae.getResponse();\n+            if (waeResponse.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+                String responseContent = waeResponse.readEntity(String.class);\n+                throw new NotFoundException(\"Failed to get status of LRA id \" + lraId", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2MDM3Nw==", "bodyText": "I would suggest a new JBTM for this as this is not affecting only this code.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r498060377", "createdAt": "2020-10-01T08:10:18Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -569,9 +562,14 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n         }\n \n         try {\n-            response = getTarget().path(getLRAId(lraId.toString())).path(\"status\")\n-                    .request()\n-                    .get();\n+            response = coordinatorClient.getLRAStatus(getLRAId(lraId.toString()));\n+        } catch (WebApplicationException wae) {\n+            Response waeResponse = wae.getResponse();\n+            if (waeResponse.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+                String responseContent = waeResponse.readEntity(String.class);\n+                throw new NotFoundException(\"Failed to get status of LRA id \" + lraId", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NjIxNQ=="}, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIwODY0MQ==", "bodyText": "+1", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r498208641", "createdAt": "2020-10-01T12:34:49Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -569,9 +562,14 @@ public LRAStatus getStatus(URI uri) throws WebApplicationException {\n         }\n \n         try {\n-            response = getTarget().path(getLRAId(lraId.toString())).path(\"status\")\n-                    .request()\n-                    .get();\n+            response = coordinatorClient.getLRAStatus(getLRAId(lraId.toString()));\n+        } catch (WebApplicationException wae) {\n+            Response waeResponse = wae.getResponse();\n+            if (waeResponse.getStatus() == Response.Status.NOT_FOUND.getStatusCode()) {\n+                String responseContent = waeResponse.readEntity(String.class);\n+                throw new NotFoundException(\"Failed to get status of LRA id \" + lraId", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3NjIxNQ=="}, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 212}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDQwNjQ3OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-service-base/src/main/java/io/narayana/lra/LRAData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMjo0NTowMFrOHabuMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMjozNTo1MlrOHbIR6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3OTIxOA==", "bodyText": "I don't understand the purpose of the change here. The LRAData was intentionally made immutable. Why is needed this to be changed?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r497479218", "createdAt": "2020-09-30T12:45:00Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-service-base/src/main/java/io/narayana/lra/LRAData.java", "diffHunk": "@@ -8,14 +8,16 @@\n  * for JSON response creation when LRA info is asked for.\n  */\n public class LRAData {\n-    private final String lraId;\n-    private final String clientId;\n-    private final LRAStatus status;\n-    private final boolean isTopLevel;\n-    private final boolean isRecovering;\n-    private final long startTime;\n-    private final long finishTime;\n-    private final int httpStatus;\n+    private String lraId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODA2MDkxMA==", "bodyText": "Used for the JSON (fasterxml) exchanges. FasterXML works with a default constructor and setters/getters still :)", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r498060910", "createdAt": "2020-10-01T08:11:14Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-service-base/src/main/java/io/narayana/lra/LRAData.java", "diffHunk": "@@ -8,14 +8,16 @@\n  * for JSON response creation when LRA info is asked for.\n  */\n public class LRAData {\n-    private final String lraId;\n-    private final String clientId;\n-    private final LRAStatus status;\n-    private final boolean isTopLevel;\n-    private final boolean isRecovering;\n-    private final long startTime;\n-    private final long finishTime;\n-    private final int httpStatus;\n+    private String lraId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3OTIxOA=="}, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODIwOTI1Nw==", "bodyText": "Ok, I see. I was thinking there will be some reason just I haven't got it from the context. Then this is fine.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r498209257", "createdAt": "2020-10-01T12:35:52Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-service-base/src/main/java/io/narayana/lra/LRAData.java", "diffHunk": "@@ -8,14 +8,16 @@\n  * for JSON response creation when LRA info is asked for.\n  */\n public class LRAData {\n-    private final String lraId;\n-    private final String clientId;\n-    private final LRAStatus status;\n-    private final boolean isTopLevel;\n-    private final boolean isRecovering;\n-    private final long startTime;\n-    private final long finishTime;\n-    private final int httpStatus;\n+    private String lraId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ3OTIxOA=="}, "originalCommit": {"oid": "a651fbf53f35bebf867b6c56a326301a966426e2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyODA2NDg0OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyMjowM1rOHccySg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyMjowM1rOHccySg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5MzgwMg==", "bodyText": "should not be this in scope provided?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r499593802", "createdAt": "2020-10-05T13:22:03Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,11 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+        <dependency>\n+          <groupId>org.jboss.resteasy</groupId>\n+          <artifactId>resteasy-client-microprofile</artifactId>\n+          <version>${version.org.jboss.resteasy}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff617f1679b39df87e8f2cd9837b7c1ee0e96bd"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTE2MDU4OnYy", "diffSide": "LEFT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToxNDozOVrOHeZo5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjo1NzowOVrOHedOmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTM5OA==", "bodyText": "You can't just ignore code.\nAre there any other places in this PR where you have removed stuff that's required?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r501639398", "createdAt": "2020-10-08T11:14:39Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +234,8 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "788e0c203989b7b7cefaa226190a06e893950277"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0MjQyNA==", "bodyText": "This was something that I actually thought was an oversight as this code calls the same method as the other if branch (L235) just through JAX-RS invocation which doesn't make sense if the parent LRA id is not found. Would you prefer I take this in a new JBTM?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r501642424", "createdAt": "2020-10-08T11:20:32Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +234,8 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTM5OA=="}, "originalCommit": {"oid": "788e0c203989b7b7cefaa226190a06e893950277"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY2NTAwMg==", "bodyText": "The if part of the statement is a local invocation.\nThe else part of the statement is a remote invocation.\nie they execute different behaviours so you can't just remove the else part (we need to interact with remote coordinators since this is not a centralised service - we're operating in distributed microservices based environment.\nI am not aware of any bug in the original code so there's no need for a JBTM, unless you have a test case that shows there is a problem with it.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r501665002", "createdAt": "2020-10-08T12:02:17Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +234,8 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTM5OA=="}, "originalCommit": {"oid": "788e0c203989b7b7cefaa226190a06e893950277"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5NTE3NA==", "bodyText": "I vaguely recall either a demo or a quickstart that relied on multiple coordinators. Check the quickstarts (in fact I think you or someone else needs to verify that the quickstarts still run with these updates before we attempt merging them).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r501695174", "createdAt": "2020-10-08T12:52:25Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +234,8 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTM5OA=="}, "originalCommit": {"oid": "788e0c203989b7b7cefaa226190a06e893950277"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY5ODIwMw==", "bodyText": "In particular the quickstarts rely on thorntail. As we discussed earlier replacing ApacheHttp client calls with JAX-RS thorntail does not work without your ForkJoinClassLoading fix. But running the quickstarts would validate that fix.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r501698203", "createdAt": "2020-10-08T12:57:09Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +234,8 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTYzOTM5OA=="}, "originalCommit": {"oid": "788e0c203989b7b7cefaa226190a06e893950277"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjk5ODI4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/resources/META-INF/services/javax.ws.rs.client.ClientBuilder", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowNjo1OFrOHgEzSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjo0MzoyMVrOHgXhyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NTE0Ng==", "bodyText": "is this still needed here? does it help the coordinator to work right?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r503395146", "createdAt": "2020-10-12T16:06:58Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-client/src/main/resources/META-INF/services/javax.ws.rs.client.ClientBuilder", "diffHunk": "@@ -0,0 +1 @@\n+org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMDU0Mg==", "bodyText": "no, thanks", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r503700542", "createdAt": "2020-10-13T06:40:04Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/resources/META-INF/services/javax.ws.rs.client.ClientBuilder", "diffHunk": "@@ -0,0 +1 @@\n+org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NTE0Ng=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMTk2MQ==", "bodyText": "actually, some other runtimes can still pick this up so I would prefer to leave it here.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r503701961", "createdAt": "2020-10-13T06:43:21Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/resources/META-INF/services/javax.ws.rs.client.ClientBuilder", "diffHunk": "@@ -0,0 +1 @@\n+org.jboss.resteasy.client.jaxrs.ResteasyClientBuilder", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NTE0Ng=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE2NTkyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzowMTowMVrOHhR0Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo1MjoyNFrOHiL12Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA==", "bodyText": "Not used (nor is the dependency on it in rts/lra/lra-client/pom.xml)", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504656918", "createdAt": "2020-10-14T13:01:01Z", "author": {"login": "mmusgrov"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNDg1Mw==", "bodyText": "This is required for the seamless inclusion in Quarkus and TT. The resteasy client doesn't bring this dependency and it fails some transformations in MessageBodyReaders and Writers. I was hesitant to include this also but take it as a short term workaround that we should try to fix in RESTEasy.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505224853", "createdAt": "2020-10-15T06:54:24Z", "author": {"login": "xstefank"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMjY2NQ==", "bodyText": "I don't follow, if a dependency is not used it does not need to be included.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505412665", "createdAt": "2020-10-15T09:52:36Z", "author": {"login": "mmusgrov"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0MDYyMA==", "bodyText": "@xstefank you have not addressed this comment yet. Also if no other module needs a property then it would need to go in the appropriate pom (this one is the top level narayana pom).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505540620", "createdAt": "2020-10-15T13:27:08Z", "author": {"login": "mmusgrov"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0MzkwNA==", "bodyText": "ok, I'll move the version. This is is both with resteasy-json-binding-provider required to make lra-client work with resteasy in Quarkus and TT because they do package jackson MessageBodyReaders and MessageBodyWriters in a separate extensions or in the case of TT in a separate fractions. I thought that this is unnecessary if we can provide the reader/writer manually. We can also remove them of course. I don't have that much of the preference. It's just about how many dependencies on top of lra-client you will need to add to Quarkus or TT app when you want just lra-client.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505543904", "createdAt": "2020-10-15T13:31:31Z", "author": {"login": "xstefank"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwMjI4NA==", "bodyText": "Wait. Is this a runtime dependency? I will try running the test suite on your PR ...", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505602284", "createdAt": "2020-10-15T14:45:42Z", "author": {"login": "mmusgrov"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwNzY0MQ==", "bodyText": "yes, that is runtime. But it won't be affecting the test suite. Only if you add lra-client dependency to the newly generated Quarkus or TT application.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505607641", "createdAt": "2020-10-15T14:52:24Z", "author": {"login": "xstefank"}, "path": "pom.xml", "diffHunk": "@@ -459,6 +459,7 @@\n     <version.javax.inject>1</version.javax.inject>\n     <version.javax.servlet>3.0.1</version.javax.servlet>\n     <version.commons-httpclient>3.1-jbossorg-1</version.commons-httpclient>\n+    <version.commons-io>2.8.0</version.commons-io>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1NjkxOA=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE3NzYxOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzowMzo0M1rOHhR7Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNjo1NDo0NVrOHh0gWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1ODcyMg==", "bodyText": "Not used (nor is dependency on it in rts/lra/lra-coordinator/pom.xml)", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504658722", "createdAt": "2020-10-14T13:03:43Z", "author": {"login": "mmusgrov"}, "path": "pom.xml", "diffHunk": "@@ -494,6 +495,7 @@\n     <version.org.wildfly.checkstyle-config>1.0.8.Final</version.org.wildfly.checkstyle-config>\n     <version.com.github.docker-java>3.0.14</version.com.github.docker-java>\n     <version.org.eclipse.microprofile.openapi>1.1.2</version.org.eclipse.microprofile.openapi>\n+    <version.org.eclipse.microprofile.rest.client>1.4.1</version.org.eclipse.microprofile.rest.client>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNTMwNw==", "bodyText": "+1", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505225307", "createdAt": "2020-10-15T06:54:45Z", "author": {"login": "xstefank"}, "path": "pom.xml", "diffHunk": "@@ -494,6 +495,7 @@\n     <version.org.wildfly.checkstyle-config>1.0.8.Final</version.org.wildfly.checkstyle-config>\n     <version.com.github.docker-java>3.0.14</version.com.github.docker-java>\n     <version.org.eclipse.microprofile.openapi>1.1.2</version.org.eclipse.microprofile.openapi>\n+    <version.org.eclipse.microprofile.rest.client>1.4.1</version.org.eclipse.microprofile.rest.client>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY1ODcyMg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE4Njc2OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzowNTo0M1rOHhSAnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODoyOToyN1rOHiuFKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDEyNw==", "bodyText": "Not used.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504660127", "createdAt": "2020-10-14T13:05:43Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIyNzQ5MA==", "bodyText": "same as commons-io", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505227490", "createdAt": "2020-10-15T06:56:28Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDEyNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU0MjgwNw==", "bodyText": "@xstefank Same comment. Including a dependency that we don't use makes no sense. Do you have an example of the error we get if it isn't included. Also if we end up needing it for working around some other problem then the dependency needs some kind of comment (otherwise it would just get removed in a later commit).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505542807", "createdAt": "2020-10-15T13:30:07Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDEyNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2ODYxNw==", "bodyText": "Maybe it's a runtime dependency so I am resolving this conversation.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506168617", "createdAt": "2020-10-16T08:29:27Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDEyNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTE4NzUyOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzowNTo1MlrOHhSBEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODoyOTo1MlrOHiuGwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDI0Mw==", "bodyText": "Not used.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504660243", "createdAt": "2020-10-14T13:05:52Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>\n+        <version>${version.org.jboss.resteasy}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>commons-io</groupId>\n+        <artifactId>commons-io</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE2OTAyNQ==", "bodyText": "Maybe it's a runtime dependency so I am resolving this conversation.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506169025", "createdAt": "2020-10-16T08:29:52Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/pom.xml", "diffHunk": "@@ -57,6 +57,16 @@\n             <version>2.5</version>\n             <scope>provided</scope>\n         </dependency>\n+      <dependency>\n+        <groupId>org.jboss.resteasy</groupId>\n+        <artifactId>resteasy-json-binding-provider</artifactId>\n+        <version>${version.org.jboss.resteasy}</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>commons-io</groupId>\n+        <artifactId>commons-io</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY2MDI0Mw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTI1OTM2OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyMToxMlrOHhSsWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozNTo0M1rOHiua5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MTMyMg==", "bodyText": "newClient is a very expensive resource. Can you move the Client construction code to a separate method so that we can cache it in the future (you don't need to cache it in this PR but we should be doing so in the future). Similarly for other calls to newClient in this PR.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504671322", "createdAt": "2020-10-14T13:21:12Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTIzMDAxNA==", "bodyText": "thanks, in NarayanaLRAClient this is possible to cache.\nI'll just note that I've found it difficult to cache the client in the LRARecords as they are persisted and recovered from ObjectStore this is kind of difficult. I would like to investigate more in the future.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505230014", "createdAt": "2020-10-15T06:58:30Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MTMyMg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM2MzI0OQ==", "bodyText": "So it's not, probably just synchronization issues and the same client is used concurrently in different enlistments for instance. Worth investigating. But I'll move it into a separate method as requested.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505363249", "createdAt": "2020-10-15T08:51:23Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MTMyMg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNjY5OA==", "bodyText": "My comment was\n\n\"Can you move the Client construction code to a separate method so that we can cache it in the future (you don't need to cache it in this PR but we should be doing so in the future)\"\n\nie I am not asking you to cache the client in this PR.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505416698", "createdAt": "2020-10-15T09:58:24Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MTMyMg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3NDE4Mg==", "bodyText": "Since my comments do not effect the functionality I am resolving this conversation.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506174182", "createdAt": "2020-10-16T08:35:43Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3MTMyMg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTI3ODUwOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyNToyNFrOHhS3_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyNToyNFrOHhS3_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NDMwMQ==", "bodyText": "I don't think failure to contact a coordinator is an error condition (at most I would log it at debug or trace and leave it up to the application/caller to report noteworthy events). Similarly for other logging at error level.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504674301", "createdAt": "2020-10-14T13:25:24Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTI4OTM4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzoyNzo1MFrOHhS-_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozMDo1N1rOHiuKkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NjA5Mg==", "bodyText": "See previous comment (close is an expensive resource).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504676092", "createdAt": "2020-10-14T13:27:50Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());\n+                throw new WebApplicationException(response);\n+            }\n+\n+            return response.readEntity(new GenericType<List<LRAData>>() {});\n+        } finally {\n+            if (client != null) {\n+                client.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MTU5Nw==", "bodyText": "@mmusgrov sorry, but I would prefer to keep this for now and really investigate the TCK hangs with Client caching in new JBTM. Would that be ok with you?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505481597", "createdAt": "2020-10-15T11:55:58Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());\n+                throw new WebApplicationException(response);\n+            }\n+\n+            return response.readEntity(new GenericType<List<LRAData>>() {});\n+        } finally {\n+            if (client != null) {\n+                client.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NjA5Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUxODUyNw==", "bodyText": "You did half of what I asked (getClient()) but not the other half. You either need both changes or neither. The reason I asked to get the client via a method is so that we can cache it in the future. The finally block needs to call a method so that any future strategy for caching the connection will be in one place.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505518527", "createdAt": "2020-10-15T12:56:29Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());\n+                throw new WebApplicationException(response);\n+            }\n+\n+            return response.readEntity(new GenericType<List<LRAData>>() {});\n+        } finally {\n+            if (client != null) {\n+                client.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NjA5Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU2ODA0MA==", "bodyText": "Which hangs? I am talking about opening and closing clients using a single method. The reason is as follows:\nThe docs (https://docs.oracle.com/javaee/7/api/javax/ws/rs/client/package-summary.html) say \"... Client instances - configurable, heavy-weight objects that manage the underlying communication infrastructure ...\".\nThat indicates to me that we need to be configuring a fixed minimal set of clients and we then share them thus avoiding the set up and tear down costs. If we put the relevant logic behind a method call then we can more easily decide how we want to do that. The original code (that this PR is reinstating) was already doing that (see pr/1515).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505568040", "createdAt": "2020-10-15T14:02:05Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());\n+                throw new WebApplicationException(response);\n+            }\n+\n+            return response.readEntity(new GenericType<List<LRAData>>() {});\n+        } finally {\n+            if (client != null) {\n+                client.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NjA5Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3MDAwMg==", "bodyText": "The change I am requesting is a structural change as opposed to a functional one so I am resolving this conversation.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506170002", "createdAt": "2020-10-16T08:30:57Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -230,6 +226,27 @@ public void setCurrentLRA(URI coordinatorUri) {\n         }\n     }\n \n+    public List<LRAData> getAllLRAs() {\n+        Client client = null;\n+        try {\n+            client = ClientBuilder.newClient();\n+            Response response = client.target(base)\n+                .request()\n+                .get();\n+\n+            if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                LRALogger.i18NLogger.error_getAllLRAs(response.getStatus());\n+                throw new WebApplicationException(response);\n+            }\n+\n+            return response.readEntity(new GenericType<List<LRAData>>() {});\n+        } finally {\n+            if (client != null) {\n+                client.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY3NjA5Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTM1Nzc2OnYy", "diffSide": "LEFT", "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMzo0Mjo0NlrOHhTpyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozNjoyNVrOHiuc7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4NzA0OQ==", "bodyText": "Who adds the header (normally it would be done by ClientLRARequestFilter but I cannot see where that gets added)?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504687049", "createdAt": "2020-10-14T13:42:46Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -358,16 +383,25 @@ public URI joinLRA(URI lraId, Long timelimit,\n     }\n \n     public void leaveLRA(URI lraId, String body) throws WebApplicationException {\n-        ResponseHolder response = null;\n+        Client client = null;\n+        Response response = null;\n \n-        response = getTarget().path(String.format(leaveFormat, getLRAId(lraId.toString())))\n+        try {\n+            client = ClientBuilder.newClient();\n+\n+            response = client.target(base)\n+                .path(String.format(LEAVE_PATH, getLRAId(lraId.toString())))\n                 .request()\n-                .header(LRA_HTTP_CONTEXT_HEADER, lraId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MjYwMw==", "bodyText": "The header is not consumed on the coordinator, the LRA id is parsed from the path directly.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505482603", "createdAt": "2020-10-15T11:57:54Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -358,16 +383,25 @@ public URI joinLRA(URI lraId, Long timelimit,\n     }\n \n     public void leaveLRA(URI lraId, String body) throws WebApplicationException {\n-        ResponseHolder response = null;\n+        Client client = null;\n+        Response response = null;\n \n-        response = getTarget().path(String.format(leaveFormat, getLRAId(lraId.toString())))\n+        try {\n+            client = ClientBuilder.newClient();\n+\n+            response = client.target(base)\n+                .path(String.format(LEAVE_PATH, getLRAId(lraId.toString())))\n                 .request()\n-                .header(LRA_HTTP_CONTEXT_HEADER, lraId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4NzA0OQ=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 234}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3NDcwMQ==", "bodyText": "Well spotted.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506174701", "createdAt": "2020-10-16T08:36:25Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-client/src/main/java/io/narayana/lra/client/NarayanaLRAClient.java", "diffHunk": "@@ -358,16 +383,25 @@ public URI joinLRA(URI lraId, Long timelimit,\n     }\n \n     public void leaveLRA(URI lraId, String body) throws WebApplicationException {\n-        ResponseHolder response = null;\n+        Client client = null;\n+        Response response = null;\n \n-        response = getTarget().path(String.format(leaveFormat, getLRAId(lraId.toString())))\n+        try {\n+            client = ClientBuilder.newClient();\n+\n+            response = client.target(base)\n+                .path(String.format(LEAVE_PATH, getLRAId(lraId.toString())))\n                 .request()\n-                .header(LRA_HTTP_CONTEXT_HEADER, lraId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDY4NzA0OQ=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 234}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTQ3NDMwOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDowNToyNFrOHhUyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTo1ODo1OFrOHiEP2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNTY1Nw==", "bodyText": "This error code seems a bit random. The method signature is already handling it (ie it throws WebApplicationException). Also we don't need to log anything here (see my previous comments about logging errors). If you really did want to log it at trace level then just re-throw the WebApplicationException.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504705657", "createdAt": "2020-10-14T14:05:24Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +239,34 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)\n+                LRALogger.i18NLogger.error_parentLRANotFound(parentLRAUrl);\n+\n+                Client client = null;\n+                Response response = null;\n+\n+                try {\n+                    client = ClientBuilder.newClient();\n+                    response = client.target(parentLRAUrl)\n                         .request()\n-                        .async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS)\n-                        .put(compensatorUrl, MediaType.TEXT_PLAIN);\n-                if (resp.getStatus() != Response.Status.OK.getStatusCode()) {\n-                    return Response.status(resp.getStatus()).build(); // TODO include reason\n+                        .async()\n+                        .put(Entity.text(compensatorUrl))\n+                        .get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n+\n+                    if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                        String errMessage = String.format(\"The coordinator at %s returned an unexpected response: %d\",\n+                            parentLRAUrl, response.getStatus());\n+                        return Response.status(response.getStatus()).entity(errMessage).build();\n+                    }\n+                } catch (Exception e) {\n+                    LRALogger.logger.errorf(\"Cannot contact the LRA Coordinator at %s\", parentLRA);\n+                    return Response.status(PRECONDITION_FAILED).entity(e.getMessage()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4MzIyNg==", "bodyText": "+1", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505483226", "createdAt": "2020-10-15T11:58:58Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +239,34 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)\n+                LRALogger.i18NLogger.error_parentLRANotFound(parentLRAUrl);\n+\n+                Client client = null;\n+                Response response = null;\n+\n+                try {\n+                    client = ClientBuilder.newClient();\n+                    response = client.target(parentLRAUrl)\n                         .request()\n-                        .async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS)\n-                        .put(compensatorUrl, MediaType.TEXT_PLAIN);\n-                if (resp.getStatus() != Response.Status.OK.getStatusCode()) {\n-                    return Response.status(resp.getStatus()).build(); // TODO include reason\n+                        .async()\n+                        .put(Entity.text(compensatorUrl))\n+                        .get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n+\n+                    if (response.getStatus() != Response.Status.OK.getStatusCode()) {\n+                        String errMessage = String.format(\"The coordinator at %s returned an unexpected response: %d\",\n+                            parentLRAUrl, response.getStatus());\n+                        return Response.status(response.getStatus()).entity(errMessage).build();\n+                    }\n+                } catch (Exception e) {\n+                    LRALogger.logger.errorf(\"Cannot contact the LRA Coordinator at %s\", parentLRA);\n+                    return Response.status(PRECONDITION_FAILED).entity(e.getMessage()).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwNTY1Nw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTQ5OTE3OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoxMDozMlrOHhVBug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozMjoyOVrOHiuPsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg==", "bodyText": "WebApplicationException is the exception of choice here - since we are using JAX-RS.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504709562", "createdAt": "2020-10-14T14:10:32Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4Mzc0OQ==", "bodyText": "The other exceptions come from the Future.get call.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505483749", "createdAt": "2020-10-15T12:00:01Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUyMjA1Ng==", "bodyText": "Yes I know but the WebApplicationException will include the jax-rs error even for the Future.get call.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505522056", "createdAt": "2020-10-15T13:01:31Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUyNDM0Mg==", "bodyText": "not sure what you are proposing. The e.getMessage() will contain all the info from WebApplicationException in case. Or do you propose to throw WebApplicationException here?", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505524342", "createdAt": "2020-10-15T13:04:56Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU3OTUwMQ==", "bodyText": "My point is that the original code was fine as it was.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505579501", "createdAt": "2020-10-15T14:17:00Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3MTMxMw==", "bodyText": "I will leave this thread unresolved since I still argue that the original code was fine.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506171313", "createdAt": "2020-10-16T08:32:29Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -419,17 +432,21 @@ private boolean afterLRARequest(URI target, String payload) {\n                 builder.header(LRA.LRA_HTTP_CONTEXT_HEADER, lra.getId().toASCIIString());\n             }\n \n-            builder.async(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n-\n-            ResponseHolder response = target.equals(forgetURI) ? builder.delete() : builder.put(payload, MediaType.TEXT_PLAIN);\n+            Future<Response> responseFuture =  target.equals(forgetURI) ? builder.async().delete()\n+                : builder.async().put(Entity.text(payload));\n+            Response response = responseFuture.get(PARTICIPANT_TIMEOUT, TimeUnit.SECONDS);\n \n             if (response.getStatus() == 200) {\n                 return true;\n             }\n-        } catch (WebApplicationException e) {\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcwOTU2Mg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTUyNzcwOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoxNjoyN1rOHhVT7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozMzoxM1rOHiuSLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNDIyMQ==", "bodyText": "Similar comment as above. We are using JAX-RS so we need to use the WebApplicationException since that will already hold the relevant status code.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504714221", "createdAt": "2020-10-14T14:16:27Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NDU2MA==", "bodyText": "here the WebApplicationException is caught in the previous catch block.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505484560", "createdAt": "2020-10-15T12:01:28Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNDIyMQ=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUzMDIwMA==", "bodyText": "The WebTarget, Invocation.Builder, AsyncInvoker and get on Future methods we are using all ultimately return a Response object to the caller so you don't need to catch checked exceptions.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505530200", "createdAt": "2020-10-15T13:13:01Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNDIyMQ=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3MTk0OQ==", "bodyText": "I will leave this thread unresolved since you don't need to catch checked exceptions.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506171949", "createdAt": "2020-10-16T08:33:13Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNDIyMQ=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 202}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTUzOTk2OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoxODo1OVrOHhVbzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowMjoxMFrOHiEWnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNjIzNw==", "bodyText": "I would use debug here (failure to contact a participant is not particularly noteworthy since it is often an expected outcome in a distributed system).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504716237", "createdAt": "2020-10-14T14:18:59Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {\n+                LRALogger.logger.infof(\"LRARecord.forget at '%s' could not reach participant: %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NDk1Ng==", "bodyText": "ok", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505484956", "createdAt": "2020-10-15T12:02:10Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/domain/model/LRARecord.java", "diffHunk": "@@ -718,8 +745,14 @@ boolean forget() {\n                     forgetURI, e.getMessage());\n                 // TODO write a test to ensure that recovery only retries the forget request\n                 return false; // force recovery to keep retrying\n+            } catch (Exception e) {\n+                LRALogger.logger.infof(\"LRARecord.forget at '%s' could not reach participant: %s\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxNjIzNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTU1NDEwOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-thorntail/src/main/java/ForkJoinClassLoading.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyMTo1OFrOHhVkqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyMTo1OFrOHhVkqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODUwNA==", "bodyText": "I like it, good find :-)", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504718504", "createdAt": "2020-10-14T14:21:58Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-thorntail/src/main/java/ForkJoinClassLoading.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+import org.jboss.logging.Logger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Initialized;\n+import javax.enterprise.event.Observes;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ForkJoinPool;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Originally copied from https://github.com/quarkusio/quarkus/blob/1.8.1.Final/core/deployment/src/main/java/io/quarkus/runner/bootstrap/ForkJoinClassLoading.java\n+ */\n+@ApplicationScoped\n+public class ForkJoinClassLoading {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTU1NTMyOnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyMjoxM1rOHhVlcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwODozMzo1OFrOHiuUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODcwNw==", "bodyText": "Not used", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504718707", "createdAt": "2020-10-14T14:22:13Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator/pom.xml", "diffHunk": "@@ -61,6 +61,10 @@\n     </build>\n \n     <dependencies>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NTIzNg==", "bodyText": "no, this is used for getting JAX-RS client in the coordinator.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r505485236", "createdAt": "2020-10-15T12:02:45Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-coordinator/pom.xml", "diffHunk": "@@ -61,6 +61,10 @@\n     </build>\n \n     <dependencies>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODcwNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjE3MjYwNg==", "bodyText": "Maybe this is a runtime dependency (although not marked as such) so I will resolve this conversation.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r506172606", "createdAt": "2020-10-16T08:33:58Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator/pom.xml", "diffHunk": "@@ -61,6 +61,10 @@\n     </build>\n \n     <dependencies>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcxODcwNw=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MTU4MzM4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDoyNzo0MFrOHhV2tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzozNjowMVrOHhd5Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMzEyNg==", "bodyText": "Failure to find a resource in a distributed system is not an error (in fact it is a common occurrence).", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504723126", "createdAt": "2020-10-14T14:27:40Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +239,34 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)\n+                LRALogger.i18NLogger.error_parentLRANotFound(parentLRAUrl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg1NDg2Ng==", "bodyText": "But I do notice that if the LRA cannot be registered with the parent then we should be closing the one that was just started on the previous line. I will raise an issue to get that fixed.", "url": "https://github.com/jbosstm/narayana/pull/1677#discussion_r504854866", "createdAt": "2020-10-14T17:36:01Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-coordinator-jar/src/main/java/io/narayana/lra/coordinator/api/Coordinator.java", "diffHunk": "@@ -238,13 +239,34 @@ public Response startLRA(\n                     return Response.status(response.getStatus()).build();\n                 }\n             } else {\n-                ResponseHolder resp = new RequestBuilder(parentLRAUrl)\n+                LRALogger.i18NLogger.error_parentLRANotFound(parentLRAUrl);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyMzEyNg=="}, "originalCommit": {"oid": "f16dde974e7dda093485c55721af40b4a7b8688d"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1204, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}