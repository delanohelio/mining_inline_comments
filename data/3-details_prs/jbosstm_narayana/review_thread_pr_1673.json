{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMjExMDc5", "number": 1673, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowMjo1MVrOElmr3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowMjo1MVrOElmr3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODY2NTg4OnYy", "diffSide": "RIGHT", "path": "rts/lra/lra-proxy/api/src/main/java/io/narayana/lra/client/internal/proxy/nonjaxrs/LRACDIExtension.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMTowMjo1MVrOHVKnmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODozOTozNVrOHVv2og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1NjEyMQ==", "bodyText": "There is a risk that Class.getClassLoader() will be null if the class was loaded by bootstrap class loader. Are we sure that this never happens? I understand that this code snippet was already involved in the code base - this PR does not add it. But just wondering.", "url": "https://github.com/jbosstm/narayana/pull/1673#discussion_r491956121", "createdAt": "2020-09-21T11:02:51Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-proxy/api/src/main/java/io/narayana/lra/client/internal/proxy/nonjaxrs/LRACDIExtension.java", "diffHunk": "@@ -101,12 +102,12 @@ public void observe(@Observes AfterBeanDiscovery event, BeanManager beanManager)\n      * @return Collected methods wrapped in {@link LRAParticipant} class or null if no non-JAX-RS methods have been found\n      */\n     private LRAParticipant getAsParticipant(ClassInfo classInfo) throws ClassNotFoundException {\n-        if (!isLRAParticipant(classInfo)) {\n+        Class<?> javaClass = getClass().getClassLoader().loadClass(classInfo.name().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f875fa614c398daca96fa1b8165ad7a761ac6cc1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk4MTk5Nw==", "bodyText": "@ochaloup not sure TBH. Maybe worth exploring in the new JBTM?", "url": "https://github.com/jbosstm/narayana/pull/1673#discussion_r491981997", "createdAt": "2020-09-21T11:51:24Z", "author": {"login": "xstefank"}, "path": "rts/lra/lra-proxy/api/src/main/java/io/narayana/lra/client/internal/proxy/nonjaxrs/LRACDIExtension.java", "diffHunk": "@@ -101,12 +102,12 @@ public void observe(@Observes AfterBeanDiscovery event, BeanManager beanManager)\n      * @return Collected methods wrapped in {@link LRAParticipant} class or null if no non-JAX-RS methods have been found\n      */\n     private LRAParticipant getAsParticipant(ClassInfo classInfo) throws ClassNotFoundException {\n-        if (!isLRAParticipant(classInfo)) {\n+        Class<?> javaClass = getClass().getClassLoader().loadClass(classInfo.name().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1NjEyMQ=="}, "originalCommit": {"oid": "f875fa614c398daca96fa1b8165ad7a761ac6cc1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk4NDEzNQ==", "bodyText": "+1, I will create a jira for it", "url": "https://github.com/jbosstm/narayana/pull/1673#discussion_r491984135", "createdAt": "2020-09-21T11:53:41Z", "author": {"login": "ochaloup"}, "path": "rts/lra/lra-proxy/api/src/main/java/io/narayana/lra/client/internal/proxy/nonjaxrs/LRACDIExtension.java", "diffHunk": "@@ -101,12 +102,12 @@ public void observe(@Observes AfterBeanDiscovery event, BeanManager beanManager)\n      * @return Collected methods wrapped in {@link LRAParticipant} class or null if no non-JAX-RS methods have been found\n      */\n     private LRAParticipant getAsParticipant(ClassInfo classInfo) throws ClassNotFoundException {\n-        if (!isLRAParticipant(classInfo)) {\n+        Class<?> javaClass = getClass().getClassLoader().loadClass(classInfo.name().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1NjEyMQ=="}, "originalCommit": {"oid": "f875fa614c398daca96fa1b8165ad7a761ac6cc1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NjE3OA==", "bodyText": "The bootstrap class loader loads system classes but the CDI extension is not a system class so a null check is not necessary.\nEven if this were not the case, then why create a JIRA rather than updating the PR by checking for null, the code already handles null values on the next line (but this is really not necessary).", "url": "https://github.com/jbosstm/narayana/pull/1673#discussion_r492566178", "createdAt": "2020-09-22T08:39:35Z", "author": {"login": "mmusgrov"}, "path": "rts/lra/lra-proxy/api/src/main/java/io/narayana/lra/client/internal/proxy/nonjaxrs/LRACDIExtension.java", "diffHunk": "@@ -101,12 +102,12 @@ public void observe(@Observes AfterBeanDiscovery event, BeanManager beanManager)\n      * @return Collected methods wrapped in {@link LRAParticipant} class or null if no non-JAX-RS methods have been found\n      */\n     private LRAParticipant getAsParticipant(ClassInfo classInfo) throws ClassNotFoundException {\n-        if (!isLRAParticipant(classInfo)) {\n+        Class<?> javaClass = getClass().getClassLoader().loadClass(classInfo.name().toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTk1NjEyMQ=="}, "originalCommit": {"oid": "f875fa614c398daca96fa1b8165ad7a761ac6cc1"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1201, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}