{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDg5MTkx", "number": 1619, "title": "Support inferSelection when extract to field", "bodyText": "Relates to redhat-developer/vscode-java#1721\nAdd support to extractField In inferSelectionSupport capability, making it possible to infer selections if there is no selection range when extract to field.\nAlso add a field params in SelectionInfo to support send scope information from the server to the client.\nTo keep the consistency, also rename isExtractMethodInferSelectionSupport to isExtractMethodInferSelectionSupported and change some invocation about extracting method.\nSigned-off-by: Shi Chen chenshi@microsoft.com", "createdAt": "2020-11-27T09:13:31Z", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619", "merged": true, "mergeCommit": {"oid": "560198912164a75a00c44b1c9d7bfca6d1794422"}, "closed": true, "closedAt": "2020-12-02T04:47:33Z", "author": {"login": "CsCherrYY"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdglH81gFqTUzOTg3NTcxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiHGKyAFqTU0MjQ5NTc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODc1NzE0", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#pullrequestreview-539875714", "createdAt": "2020-11-27T10:37:58Z", "commit": {"oid": "702e437c919e578acd2332bd9c9e9783c9ee359a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDozNzo1OFrOH65amQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDozNzo1OFrOH65amQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMDE1Mw==", "bodyText": "isExtractFieldInferSelectionSupported", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r531520153", "createdAt": "2020-11-27T10:37:58Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "diffHunk": "@@ -219,6 +219,14 @@ public boolean isExtractMethodInferSelectionSupport() {\n \t\treturn false;\n \t}\n \n+\tpublic boolean isExtractFieldInferSelectionSupport() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "702e437c919e578acd2332bd9c9e9783c9ee359a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNTM3MjQw", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#pullrequestreview-541537240", "createdAt": "2020-12-01T07:06:36Z", "commit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzowNjozN1rOH8aqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxMzozN1rOH8a0kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExMzM5MA==", "bodyText": "extractMethodInfos -> selectionCandidates", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533113390", "createdAt": "2020-12-01T07:06:37Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/InferSelectionHandler.java", "diffHunk": "@@ -54,6 +55,19 @@\n \t\t\t\t\t}\n \t\t\t\t\tparent = parent.getParent();\n \t\t\t\t}\n+\t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n+\t\t\t\twhile (parent != null && parent instanceof Expression) {\n+\t\t\t\t\tif (parent instanceof ParenthesizedExpression) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tExtractFieldRefactoring refactoring = new ExtractFieldRefactoring(context.getASTRoot(), parent.getStartPosition(), parent.getLength());\n+\t\t\t\t\tif (refactoring.checkInitialConditions(new NullProgressMonitor()).isOK()) {\n+\t\t\t\t\t\tList<String> scopes = RefactorProposalUtility.getInitializeScopes(refactoring);\n+\t\t\t\t\t\textractMethodInfos.add(new SelectionInfo(parent.toString(), parent.getStartPosition(), parent.getLength(), scopes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjA0OQ==", "bodyText": "(params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1)", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533116049", "createdAt": "2020-12-01T07:13:37Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -84,7 +84,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getConvertVariableToFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n \t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n \t\t\t\tString initializeIn = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), String.class) : null;\n-\t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getExtractFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n+\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1) ? JSONUtility.toModel(params.commandArguments.get(1), SelectionInfo.class) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b72db8298c720b179401783e97347f92954ef95", "author": {"user": {"login": "CsCherrYY", "name": "Shi Chen"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/1b72db8298c720b179401783e97347f92954ef95", "committedDate": "2020-12-02T03:00:38Z", "message": "Support inferSelection when extract to field\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "313d473b1d19d41cc227b813ca806dd821c1dee8", "author": {"user": {"login": "CsCherrYY", "name": "Shi Chen"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/313d473b1d19d41cc227b813ca806dd821c1dee8", "committedDate": "2020-12-02T02:49:29Z", "message": "Merge remote-tracking branch 'upstream/master' into extractField"}, "afterCommit": {"oid": "1b72db8298c720b179401783e97347f92954ef95", "author": {"user": {"login": "CsCherrYY", "name": "Shi Chen"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/1b72db8298c720b179401783e97347f92954ef95", "committedDate": "2020-12-02T03:00:38Z", "message": "Support inferSelection when extract to field\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4d362dbdb015e3fd24c99b95208ef3a5a61a2cb", "author": {"user": {"login": "CsCherrYY", "name": "Shi Chen"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d4d362dbdb015e3fd24c99b95208ef3a5a61a2cb", "committedDate": "2020-12-02T04:08:12Z", "message": "Scopes must be not empty\n\nSigned-off-by: Shi Chen <chenshi@microsoft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNDk1NzQ4", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#pullrequestreview-542495748", "createdAt": "2020-12-02T04:46:44Z", "commit": {"oid": "d4d362dbdb015e3fd24c99b95208ef3a5a61a2cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1055, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}