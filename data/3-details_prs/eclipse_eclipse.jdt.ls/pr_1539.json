{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNTA4MTc0", "number": 1539, "title": "Improve semantic token modifiers", "bodyText": "This PR improves the semantic token modifiers in the following ways:\nNew token modifiers\n\ntransient\nvolatile\ndefault\nsynchronized\nnative\nstrictfp\ngeneric\ntypeArgument (Example: String and Integer in Map<String, Integer>)\nimportDeclaration (Every simple name inside of an import declaration)\n\nNew token types\n\nmodifier\n\nEdit: some of the new modifiers were scrapped, see discussion with Eskibear\nSee this screenshot for an example using some of the new modifiers:\n\nPerformance improvements\n\nA bitmask is now used for the token modifiers, even before encoding.\n\nSeems like an improvement over streaming them into an array, only to convert them back into a bitmask during encoding.\nMakes it easier to combine token modifiers in steps, instead of doing it all at once.\n\n\nThe old implementation sometimes called SimpleName#resolveBinding() twice for the same node, this is now avoided.\nAn int[] is now used instead of List<Integer> for the encoded tokens, since the length of the array is known.\n\nI do not have access to any fancy profiling tools, but from my testing the new implementation seems to be significantly faster than the old one, even with my additions to the token modifiers.\nNote\nThe only thing this PR is missing right now is some new tests for the new modifiers, which I will write when I have time. In the meantime, please verify this PR and let me know if there's anything that needs to change.\nOne thing that I would like your input on is what to call the importDeclaration token modifier. Is this a good name? Some other ideas that I had were: imported, importTarget or importDeclarationTarget. There is no standard token modifier for this.", "createdAt": "2020-09-05T11:59:55Z", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539", "merged": true, "mergeCommit": {"oid": "0939bd1b659210b67eead3f7dddaa459d958870f"}, "closed": true, "closedAt": "2020-10-14T14:00:47Z", "author": {"login": "0dinD"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHt0v_gFqTQ4NjQ1MTY1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSTYWgAFqTUwNzk0MzE0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NDUxNjU2", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539#pullrequestreview-486451656", "createdAt": "2020-09-11T03:38:14Z", "commit": {"oid": "964cba6e58027764cba709b1476e8998eadd28f2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzozODoxNFrOHQNICQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDoyMjozMlrOHQNxrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NDMxMw==", "bodyText": "I'm ok to simplify it by removing SemanticTokenManager. But here it's no longer lazy-loaded. Suggest to keep the original Initialization-on-demand_holder_idiom", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539#discussion_r486754313", "createdAt": "2020-09-11T03:38:14Z", "author": {"login": "Eskibear"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/semantictokens/SemanticTokensLegend.java", "diffHunk": "@@ -13,22 +13,28 @@\n  *******************************************************************************/\n package org.eclipse.jdt.ls.core.internal.semantictokens;\n \n-import java.util.List;\n+import java.util.Arrays;\n \n public class SemanticTokensLegend {\n-\tprivate final List<String> tokenTypes;\n-\tprivate final List<String> tokenModifiers;\n+\tpublic static final SemanticTokensLegend INSTANCE = new SemanticTokensLegend();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964cba6e58027764cba709b1476e8998eadd28f2"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2NDk3NQ==", "bodyText": "I'm wondering whether we have to add all \"standard Java modifiers\", because ultimately we'll align modifiers with LSP3.16 as much as possible, via LSP4J.\nAnd massive modifiers would be potentially anonying (we did receive such feedback). I'm thinking, do people actually want to know below information from highlighting?\ntransient, volatile, default, synchronized, native, strictfp\n\nMy suggestion is to only keep important modifiers you are actually consuming now, also to avoid future breaking changes (when aligning to LSP) as best as we can.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539#discussion_r486764975", "createdAt": "2020-09-11T04:22:32Z", "author": {"login": "Eskibear"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/semantictokens/TokenModifier.java", "diffHunk": "@@ -31,54 +31,26 @@\n import org.eclipse.jdt.core.dom.VariableDeclarationFragment;\n \n public enum TokenModifier {\n-\tSTATIC(\"static\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isStatic(binding.getModifiers());\n-\t\t}\n-\t},\n-\tFINAL(\"readonly\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isFinal(binding.getModifiers());\n-\t\t}\n-\t},\n-\tDEPRECATED(\"deprecated\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn binding.isDeprecated();\n-\t\t}\n-\t},\n-\tPUBLIC(\"public\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isPublic(binding.getModifiers());\n-\t\t}\n-\t},\n-\tPRIVATE(\"private\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isPrivate(binding.getModifiers());\n-\t\t}\n-\t},\n-\tPROTECTED(\"protected\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isProtected(binding.getModifiers());\n-\t\t}\n-\t},\n-\tABSTRACT(\"abstract\") {\n-\t\t@Override\n-\t\tprotected boolean applies(IBinding binding) {\n-\t\t\treturn Modifier.isAbstract(binding.getModifiers());\n-\t\t}\n-\t},\n-\tDECLARATION(\"declaration\") {\n-\t\t@Override\n-\t\tprotected boolean applies(SimpleName simpleName) {\n-\t\t\treturn isDeclaration(simpleName);\n-\t\t}\n-\t};\n+\t// Standard Java modifiers\n+\tPUBLIC(\"public\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "964cba6e58027764cba709b1476e8998eadd28f2"}, "originalPosition": 70}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "964cba6e58027764cba709b1476e8998eadd28f2", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/964cba6e58027764cba709b1476e8998eadd28f2", "committedDate": "2020-09-05T10:23:23Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "d4c4fd3425057e96a1dec9493d87e55aa5f58805", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d4c4fd3425057e96a1dec9493d87e55aa5f58805", "committedDate": "2020-09-15T17:37:04Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjIwNzY4", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539#pullrequestreview-489220768", "createdAt": "2020-09-16T01:58:09Z", "commit": {"oid": "d4c4fd3425057e96a1dec9493d87e55aa5f58805"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4c4fd3425057e96a1dec9493d87e55aa5f58805", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d4c4fd3425057e96a1dec9493d87e55aa5f58805", "committedDate": "2020-09-15T17:37:04Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "daf610c58237619a34371cf59b7a710f05293bda", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/daf610c58237619a34371cf59b7a710f05293bda", "committedDate": "2020-09-28T17:47:13Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daf610c58237619a34371cf59b7a710f05293bda", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/daf610c58237619a34371cf59b7a710f05293bda", "committedDate": "2020-09-28T17:47:13Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "444dad83c7cb072ae399a7780f2f64d968ace257", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/444dad83c7cb072ae399a7780f2f64d968ace257", "committedDate": "2020-09-28T18:06:00Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "444dad83c7cb072ae399a7780f2f64d968ace257", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/444dad83c7cb072ae399a7780f2f64d968ace257", "committedDate": "2020-09-28T18:06:00Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "879e6ed09a84d6e4d891dd127238ed9ec8560af6", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/879e6ed09a84d6e4d891dd127238ed9ec8560af6", "committedDate": "2020-09-28T18:34:24Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "879e6ed09a84d6e4d891dd127238ed9ec8560af6", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/879e6ed09a84d6e4d891dd127238ed9ec8560af6", "committedDate": "2020-09-28T18:34:24Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "64965f3101b95ae5197260883530dca484e33b8c", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/64965f3101b95ae5197260883530dca484e33b8c", "committedDate": "2020-09-30T08:27:41Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e83fc3479136c0b2ed6357d2be1b167a074150", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/f0e83fc3479136c0b2ed6357d2be1b167a074150", "committedDate": "2020-09-30T08:34:22Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64965f3101b95ae5197260883530dca484e33b8c", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/64965f3101b95ae5197260883530dca484e33b8c", "committedDate": "2020-09-30T08:27:41Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}, "afterCommit": {"oid": "f0e83fc3479136c0b2ed6357d2be1b167a074150", "author": {"user": {"login": "0dinD", "name": null}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/f0e83fc3479136c0b2ed6357d2be1b167a074150", "committedDate": "2020-09-30T08:34:22Z", "message": "Improve semantic token modifiers\n\nSigned-off-by: 0dinD <zerodind@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3OTQzMTQ4", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1539#pullrequestreview-507943148", "createdAt": "2020-10-14T02:02:40Z", "commit": {"oid": "f0e83fc3479136c0b2ed6357d2be1b167a074150"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}