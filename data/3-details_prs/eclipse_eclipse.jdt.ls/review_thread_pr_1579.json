{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3NjUyNjYz", "number": 1579, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQyMToxMDo0NVrOFrHNpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wN1QyMzowNDoxNFrOFvWOPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgwNzUxMjY5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQyMToxMDo0NVrOI-rCow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yN1QwMToxMDoxNlrOI-uthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjU4NzgxMQ==", "bodyText": "I  noticed here that the uri coming from the client had the form file:///.... while the settingsUri was file:/.... I wasn't able to delete the global settings file because of another issue but I would check if this equals gets satisfied when needed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r602587811", "createdAt": "2021-03-26T21:10:45Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -215,6 +220,16 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\tif (resource == null) {\n \t\t\treturn;\n \t\t}\n+\t\tURI settingsUri = preferenceManager.getPreferences().getSettingsAsURI();\n+\t\tif (settingsUri != null) {\n+\t\t\tURI uri = JDTUtils.toURI(uriString);\n+\t\t\tif (uri != null && uri.equals(settingsUri) && JavaLanguageServerPlugin.getInstance().getProtocol() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d983694b4e5fb36915805d0e8704482cfac890de"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjYyNTU0Ng==", "bodyText": "You can try the following test:\n@Test\npublic void testUri() throws URISyntaxException {\n  URI uri1 = new URI(\"file:/test\");\n  URI uri2 = new URI(\"file:///test\");\n  assertTrue(uri1.equals(uri2));\n}", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r602625546", "createdAt": "2021-03-26T23:06:55Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -215,6 +220,16 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\tif (resource == null) {\n \t\t\treturn;\n \t\t}\n+\t\tURI settingsUri = preferenceManager.getPreferences().getSettingsAsURI();\n+\t\tif (settingsUri != null) {\n+\t\t\tURI uri = JDTUtils.toURI(uriString);\n+\t\t\tif (uri != null && uri.equals(settingsUri) && JavaLanguageServerPlugin.getInstance().getProtocol() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjU4NzgxMQ=="}, "originalCommit": {"oid": "d983694b4e5fb36915805d0e8704482cfac890de"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjY0Nzk0Mg==", "bodyText": "You're right. It works :)", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r602647942", "createdAt": "2021-03-27T01:10:16Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -215,6 +220,16 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\tif (resource == null) {\n \t\t\treturn;\n \t\t}\n+\t\tURI settingsUri = preferenceManager.getPreferences().getSettingsAsURI();\n+\t\tif (settingsUri != null) {\n+\t\t\tURI uri = JDTUtils.toURI(uriString);\n+\t\t\tif (uri != null && uri.equals(settingsUri) && JavaLanguageServerPlugin.getInstance().getProtocol() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjU4NzgxMQ=="}, "originalCommit": {"oid": "d983694b4e5fb36915805d0e8704482cfac890de"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgwNzU2Mzg5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQyMToyOTo1NVrOI-rhDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQyMzowNzoxNlrOI-tWcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjU5NTU5Nw==", "bodyText": "If sources from above has something like /home/rgrunber/Scripts/org.eclipse.jdt.core.prefs in the list then toGlobPattern seems to produce /home/rgrunber/Scripts/org.eclipse.jdt.core.prefs/** which I'm guessing means the file doesn't get watched.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r602595597", "createdAt": "2021-03-26T21:29:55Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -358,15 +409,9 @@ public void registerWatchers(boolean runInJob) {\n \t\t\t}\n \t\t\tList<FileSystemWatcher> fileWatchers = new ArrayList<>();\n \t\t\tURI formatter = preferenceManager.getPreferences().getFormatterAsURI();\n-\t\t\tif (formatter != null && \"file\".equals(formatter.getScheme())) {\n-\t\t\t\tFile file = new File(formatter);\n-\t\t\t\tif (file != null && file.isFile()) {\n-\t\t\t\t\tIPath formatterPath = new Path(file.getAbsolutePath());\n-\t\t\t\t\tif (!isContainedIn(formatterPath, sources)) {\n-\t\t\t\t\t\tsources.add(formatterPath);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\taddWatcher(formatter, sources);\n+\t\t\tURI settings = preferenceManager.getPreferences().getSettingsAsURI();\n+\t\t\taddWatcher(settings, sources);\n \t\t\tpatterns.addAll(sources.stream().map(ResourceUtils::toGlobPattern).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d983694b4e5fb36915805d0e8704482cfac890de"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjYyNTY0OA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r602625648", "createdAt": "2021-03-26T23:07:16Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -358,15 +409,9 @@ public void registerWatchers(boolean runInJob) {\n \t\t\t}\n \t\t\tList<FileSystemWatcher> fileWatchers = new ArrayList<>();\n \t\t\tURI formatter = preferenceManager.getPreferences().getFormatterAsURI();\n-\t\t\tif (formatter != null && \"file\".equals(formatter.getScheme())) {\n-\t\t\t\tFile file = new File(formatter);\n-\t\t\t\tif (file != null && file.isFile()) {\n-\t\t\t\t\tIPath formatterPath = new Path(file.getAbsolutePath());\n-\t\t\t\t\tif (!isContainedIn(formatterPath, sources)) {\n-\t\t\t\t\t\tsources.add(formatterPath);\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n+\t\t\taddWatcher(formatter, sources);\n+\t\t\tURI settings = preferenceManager.getPreferences().getSettingsAsURI();\n+\t\t\taddWatcher(settings, sources);\n \t\t\tpatterns.addAll(sources.stream().map(ResourceUtils::toGlobPattern).collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjU5NTU5Nw=="}, "originalCommit": {"oid": "d983694b4e5fb36915805d0e8704482cfac890de"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg1MTg2MDAwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wN1QyMjo0OToxNFrOJE5rsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wOFQyMDozOTo1MFrOJF0naA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTExOTE1Mg==", "bodyText": "Do you have an example where this is needed ? The closest I could find in a properties file was instance/org.eclipse.core.net/org.eclipse.core.net.hasMigrated=true .", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r609119152", "createdAt": "2021-04-07T22:49:14Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -257,6 +293,57 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\t}\n \t}\n \n+\tpublic static void configureSettings(Preferences preferences) {\n+\t\tURI settingsUri = preferences.getSettingsAsURI();\n+\t\tProperties properties = null;\n+\t\tif (settingsUri != null) {\n+\t\t\ttry (InputStream inputStream = settingsUri.toURL().openStream()) {\n+\t\t\t\tproperties = new Properties();\n+\t\t\t\tproperties.load(inputStream);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t\tinitializeDefaultOptions(preferences);\n+\t\tHashtable<String, String> javaOptions = JavaCore.getOptions();\n+\t\tif (properties != null && !properties.isEmpty()) {\n+\t\t\tproperties.forEach((k, v) -> {\n+\t\t\t\tif (k instanceof String && v instanceof String) {\n+\t\t\t\t\tk = ((String) k).replace(\"/instance/\", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTEzODYxNQ==", "bodyText": "You can try File>Export>General>Preference in eclipse.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r609138615", "createdAt": "2021-04-07T23:29:42Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -257,6 +293,57 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\t}\n \t}\n \n+\tpublic static void configureSettings(Preferences preferences) {\n+\t\tURI settingsUri = preferences.getSettingsAsURI();\n+\t\tProperties properties = null;\n+\t\tif (settingsUri != null) {\n+\t\t\ttry (InputStream inputStream = settingsUri.toURL().openStream()) {\n+\t\t\t\tproperties = new Properties();\n+\t\t\t\tproperties.load(inputStream);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t\tinitializeDefaultOptions(preferences);\n+\t\tHashtable<String, String> javaOptions = JavaCore.getOptions();\n+\t\tif (properties != null && !properties.isEmpty()) {\n+\t\t\tproperties.forEach((k, v) -> {\n+\t\t\t\tif (k instanceof String && v instanceof String) {\n+\t\t\t\t\tk = ((String) k).replace(\"/instance/\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTExOTE1Mg=="}, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDA4NDcxMg==", "bodyText": "Right. I guess we can partially support .epf files. This is fine then.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r610084712", "createdAt": "2021-04-08T20:39:50Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/StandardProjectsManager.java", "diffHunk": "@@ -257,6 +293,57 @@ public void fileChanged(String uriString, CHANGE_TYPE changeType) {\n \t\t}\n \t}\n \n+\tpublic static void configureSettings(Preferences preferences) {\n+\t\tURI settingsUri = preferences.getSettingsAsURI();\n+\t\tProperties properties = null;\n+\t\tif (settingsUri != null) {\n+\t\t\ttry (InputStream inputStream = settingsUri.toURL().openStream()) {\n+\t\t\t\tproperties = new Properties();\n+\t\t\t\tproperties.load(inputStream);\n+\t\t\t} catch (Exception e) {\n+\t\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t\tinitializeDefaultOptions(preferences);\n+\t\tHashtable<String, String> javaOptions = JavaCore.getOptions();\n+\t\tif (properties != null && !properties.isEmpty()) {\n+\t\t\tproperties.forEach((k, v) -> {\n+\t\t\t\tif (k instanceof String && v instanceof String) {\n+\t\t\t\t\tk = ((String) k).replace(\"/instance/\", \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTExOTE1Mg=="}, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzg1MTkxNDg3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/PreferenceManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wN1QyMzowNDoxNFrOJE6LLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wOFQyMjoxMzoxN1rOJF4vbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTEyNzIxMw==", "bodyText": "Just curious if you know why we also set them in https://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java#L254", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r609127213", "createdAt": "2021-04-07T23:04:14Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/PreferenceManager.java", "diffHunk": "@@ -88,6 +89,7 @@ public static void initialize() {\n \t\tdefEclipsePrefs.put(\"org.eclipse.jdt.ui.typefilter.enabled\", \"\");\n \t\tdefEclipsePrefs.put(CodeStyleConfiguration.ORGIMPORTS_IMPORTORDER, String.join(\";\", Preferences.JAVA_IMPORT_ORDER_DEFAULT));\n \t\tdefEclipsePrefs.put(MembersOrderPreferenceCacheCommon.APPEARANCE_MEMBER_SORT_ORDER, \"T,SF,SI,SM,F,I,C,M\"); //$NON-NLS-1$\n+\t\tdefEclipsePrefs.put(CodeGenerationSettingsConstants.CODEGEN_USE_OVERRIDE_ANNOTATION, Boolean.TRUE.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTEzOTc1MQ==", "bodyText": "I'm not sure. The tests fail without it.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r609139751", "createdAt": "2021-04-07T23:33:28Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/PreferenceManager.java", "diffHunk": "@@ -88,6 +89,7 @@ public static void initialize() {\n \t\tdefEclipsePrefs.put(\"org.eclipse.jdt.ui.typefilter.enabled\", \"\");\n \t\tdefEclipsePrefs.put(CodeStyleConfiguration.ORGIMPORTS_IMPORTORDER, String.join(\";\", Preferences.JAVA_IMPORT_ORDER_DEFAULT));\n \t\tdefEclipsePrefs.put(MembersOrderPreferenceCacheCommon.APPEARANCE_MEMBER_SORT_ORDER, \"T,SF,SI,SM,F,I,C,M\"); //$NON-NLS-1$\n+\t\tdefEclipsePrefs.put(CodeGenerationSettingsConstants.CODEGEN_USE_OVERRIDE_ANNOTATION, Boolean.TRUE.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTEyNzIxMw=="}, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxMDE1MjMwMA==", "bodyText": "I'm noticing some test failures but never in the same one, and occasionally the full suite succeeds. Either way, I guess we can look into it a later time as this change itself makes sense.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1579#discussion_r610152300", "createdAt": "2021-04-08T22:13:17Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/PreferenceManager.java", "diffHunk": "@@ -88,6 +89,7 @@ public static void initialize() {\n \t\tdefEclipsePrefs.put(\"org.eclipse.jdt.ui.typefilter.enabled\", \"\");\n \t\tdefEclipsePrefs.put(CodeStyleConfiguration.ORGIMPORTS_IMPORTORDER, String.join(\";\", Preferences.JAVA_IMPORT_ORDER_DEFAULT));\n \t\tdefEclipsePrefs.put(MembersOrderPreferenceCacheCommon.APPEARANCE_MEMBER_SORT_ORDER, \"T,SF,SI,SM,F,I,C,M\"); //$NON-NLS-1$\n+\t\tdefEclipsePrefs.put(CodeGenerationSettingsConstants.CODEGEN_USE_OVERRIDE_ANNOTATION, Boolean.TRUE.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTEyNzIxMw=="}, "originalCommit": {"oid": "733e4e1946f211306ed1c5eba8bcf1a2ce048aa7"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3483, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}