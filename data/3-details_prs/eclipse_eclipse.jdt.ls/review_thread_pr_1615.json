{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3Nzg3OTgy", "number": 1615, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzozMDoxM1rOE--4fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTowMjo0OFrOE_BJ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDc3NDM2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzozMDoxM1rOH8bO-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODoyMjo0OFrOH8czWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMjgxMA==", "bodyText": "Since this method is a public static method, it's kind of API, i prefer not to change its signature frequently, but add a new overriding method with your new extra parameter there.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533122810", "createdAt": "2020-12-01T07:30:13Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java", "diffHunk": "@@ -315,20 +315,34 @@ private static boolean supportsExtractVariable(IInvocationContext context) {\n \t\treturn true;\n \t}\n \n-\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand) throws CoreException {\n+\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand, boolean inferSelectionSupport) throws CoreException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "872c9af58af4eb9fd5b3189a243de3af86be9df6"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE0ODUwNA==", "bodyText": "Make sense. Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533148504", "createdAt": "2020-12-01T08:22:48Z", "author": {"login": "CsCherrYY"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/text/correction/RefactorProposalUtility.java", "diffHunk": "@@ -315,20 +315,34 @@ private static boolean supportsExtractVariable(IInvocationContext context) {\n \t\treturn true;\n \t}\n \n-\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand) throws CoreException {\n+\tpublic static CUCorrectionProposal getExtractVariableAllOccurrenceProposal(CodeActionParams params, IInvocationContext context, boolean problemsAtLocation, Map formatterOptions, boolean returnAsCommand, boolean inferSelectionSupport) throws CoreException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzEyMjgxMA=="}, "originalCommit": {"oid": "872c9af58af4eb9fd5b3189a243de3af86be9df6"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTE0NjU1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTowMjo0OVrOH8e2AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTowMjo0OVrOH8e2AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE4MTk1Mg==", "bodyText": "Indentation is wrong for the new block.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1615#discussion_r533181952", "createdAt": "2020-12-01T09:02:49Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -68,7 +68,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\tLinkedCorrectionProposal proposal = null;\n \t\t\tif (RefactorProposalUtility.EXTRACT_VARIABLE_COMMAND.equals(params.command) || RefactorProposalUtility.EXTRACT_VARIABLE_ALL_OCCURRENCE_COMMAND.equals(params.command)\n \t\t\t\t\t|| RefactorProposalUtility.EXTRACT_CONSTANT_COMMAND.equals(params.command)) {\n-\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);\n+\t\t\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), SelectionInfo.class) : null;\n+\t\t\t\t\t\tif (info != null) {\n+\t\t\t\t\t\t\tcontext = new InnovationContext(unit, info.offset, info.length);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tproposal = (LinkedCorrectionProposal) getExtractVariableProposal(params.context, context, problemsAtLocation, params.command, formatterOptions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b098da3385a07a5074efdd9848b2da9f7ea2b3f"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3500, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}