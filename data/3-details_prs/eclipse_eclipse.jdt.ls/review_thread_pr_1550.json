{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDk2MDEy", "number": 1550, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowMTozMFrOEniOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowNDo1M1rOEniTaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODkwNzQzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JVMConfigurator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowMTozMVrOHYLnQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowMjowOFrOHYLolQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExODE0Nw==", "bodyText": "from the path (\"", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1550#discussion_r495118147", "createdAt": "2020-09-25T17:01:31Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JVMConfigurator.java", "diffHunk": "@@ -116,10 +124,16 @@ public static boolean configureJVMs(Preferences preferences) throws CoreExceptio\n \n \t\t\t\t\tIStatus status = installType.validateInstallLocation(file);\n \t\t\t\t\tif (!status.isOK()) {\n+\t\t\t\t\t\tif (Objects.equals(file.getName(), \"bin\")) {\n+\t\t\t\t\t\t\tsendNotification(connection, \"Invalid runtime for \" + runtime.getName() + \": 'bin' should be removed from the path(\" + runtime.getPath() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ef65ed1b07a7c51f3ae311ef2715bb7b37fbbc"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExODQ4NQ==", "bodyText": "+\").\"", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1550#discussion_r495118485", "createdAt": "2020-09-25T17:02:08Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JVMConfigurator.java", "diffHunk": "@@ -116,10 +124,16 @@ public static boolean configureJVMs(Preferences preferences) throws CoreExceptio\n \n \t\t\t\t\tIStatus status = installType.validateInstallLocation(file);\n \t\t\t\t\tif (!status.isOK()) {\n+\t\t\t\t\t\tif (Objects.equals(file.getName(), \"bin\")) {\n+\t\t\t\t\t\t\tsendNotification(connection, \"Invalid runtime for \" + runtime.getName() + \": 'bin' should be removed from the path(\" + runtime.getPath() + \")\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExODE0Nw=="}, "originalCommit": {"oid": "f9ef65ed1b07a7c51f3ae311ef2715bb7b37fbbc"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODkxMjEyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JVMConfigurator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowMjo1MVrOHYLqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowMjo1MVrOHYLqLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExODg5NA==", "bodyText": "+\").\"", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1550#discussion_r495118894", "createdAt": "2020-09-25T17:02:51Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JVMConfigurator.java", "diffHunk": "@@ -158,9 +172,11 @@ public static boolean configureJVMs(Preferences preferences) throws CoreExceptio\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tif (!setDefaultEnvironmentVM(vm, runtime.getName())) {\n+\t\t\t\t\t\tsendNotification(connection, \"Invalid runtime for \" + runtime.getName() + \": Runtime at '\" + runtime.getPath() + \"' is not compatible with the '\" + runtime.getName() + \"' environment.\");\n \t\t\t\t\t\tJavaLanguageServerPlugin.logError(\"Runtime at '\" + runtime.getPath() + \"' is not compatible with the '\" + runtime.getName() + \"' environment\");\n \t\t\t\t\t}\n \t\t\t\t} else {\n+\t\t\t\t\tsendNotification(connection, \"Invalid runtime for \" + runtime.getName() + \": The path points to a missing or inaccessible folder (\" + runtime.getPath() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ef65ed1b07a7c51f3ae311ef2715bb7b37fbbc"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODkxOTQ0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/JVMConfiguratorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowNDo1M1rOHYLumg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzowNDo1M1rOHYLumg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyMDAyNg==", "bodyText": "need a test checking what happens if isActionableRuntimeNotificationSupport()==false", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1550#discussion_r495120026", "createdAt": "2020-09-25T17:04:53Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/JVMConfiguratorTest.java", "diffHunk": "@@ -160,14 +172,43 @@ public void testPreviewFeatureSettings() throws Exception {\n \t\t\tassertComplianceAndPreviewSupport(defaultProject, \"1.8\", false);\n \t\t\tassertComplianceAndPreviewSupport(randomProject, \"1.8\", false);\n \n-\n \t\t} finally {\n \t\t\tJavaRuntime.removeVMInstallChangedListener(jvmConfigurator);\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testInvalidRuntime() throws Exception {\n+\t\twhen(this.preferenceManager.getClientPreferences()).thenReturn(clientPreferences);\n+\t\twhen(clientPreferences.isActionableRuntimeNotificationSupport()).thenReturn(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ef65ed1b07a7c51f3ae311ef2715bb7b37fbbc"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3458, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}