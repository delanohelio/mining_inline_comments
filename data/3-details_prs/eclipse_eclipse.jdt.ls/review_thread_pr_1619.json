{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDg5MTkx", "number": 1619, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDozNzo1OFrOE98iYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxMzozN1rOE--nAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzkwNDM1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDozNzo1OFrOH65amQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzozNDo0NVrOH7utxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMDE1Mw==", "bodyText": "isExtractFieldInferSelectionSupported", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r531520153", "createdAt": "2020-11-27T10:37:58Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "diffHunk": "@@ -219,6 +219,14 @@ public boolean isExtractMethodInferSelectionSupport() {\n \t\treturn false;\n \t}\n \n+\tpublic boolean isExtractFieldInferSelectionSupport() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "702e437c919e578acd2332bd9c9e9783c9ee359a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM5MzQxMw==", "bodyText": "Fixed. Will change isExtractMethodInferSelectionSupport to isExtractMethodInferSelectionSupported as well.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r532393413", "createdAt": "2020-11-30T07:34:45Z", "author": {"login": "CsCherrYY"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/ClientPreferences.java", "diffHunk": "@@ -219,6 +219,14 @@ public boolean isExtractMethodInferSelectionSupport() {\n \t\treturn false;\n \t}\n \n+\tpublic boolean isExtractFieldInferSelectionSupport() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMDE1Mw=="}, "originalCommit": {"oid": "702e437c919e578acd2332bd9c9e9783c9ee359a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDcxMTU4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/InferSelectionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzowNjozN1rOH8aqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo1Mzo1MVrOH8eLLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExMzM5MA==", "bodyText": "extractMethodInfos -> selectionCandidates", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533113390", "createdAt": "2020-12-01T07:06:37Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/InferSelectionHandler.java", "diffHunk": "@@ -54,6 +55,19 @@\n \t\t\t\t\t}\n \t\t\t\t\tparent = parent.getParent();\n \t\t\t\t}\n+\t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n+\t\t\t\twhile (parent != null && parent instanceof Expression) {\n+\t\t\t\t\tif (parent instanceof ParenthesizedExpression) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tExtractFieldRefactoring refactoring = new ExtractFieldRefactoring(context.getASTRoot(), parent.getStartPosition(), parent.getLength());\n+\t\t\t\t\tif (refactoring.checkInitialConditions(new NullProgressMonitor()).isOK()) {\n+\t\t\t\t\t\tList<String> scopes = RefactorProposalUtility.getInitializeScopes(refactoring);\n+\t\t\t\t\t\textractMethodInfos.add(new SelectionInfo(parent.toString(), parent.getStartPosition(), parent.getLength(), scopes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3MDk5MA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533170990", "createdAt": "2020-12-01T08:53:51Z", "author": {"login": "CsCherrYY"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/InferSelectionHandler.java", "diffHunk": "@@ -54,6 +55,19 @@\n \t\t\t\t\t}\n \t\t\t\t\tparent = parent.getParent();\n \t\t\t\t}\n+\t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n+\t\t\t\twhile (parent != null && parent instanceof Expression) {\n+\t\t\t\t\tif (parent instanceof ParenthesizedExpression) {\n+\t\t\t\t\t\tparent = parent.getParent();\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t}\n+\t\t\t\t\tExtractFieldRefactoring refactoring = new ExtractFieldRefactoring(context.getASTRoot(), parent.getStartPosition(), parent.getLength());\n+\t\t\t\t\tif (refactoring.checkInitialConditions(new NullProgressMonitor()).isOK()) {\n+\t\t\t\t\t\tList<String> scopes = RefactorProposalUtility.getInitializeScopes(refactoring);\n+\t\t\t\t\t\textractMethodInfos.add(new SelectionInfo(parent.toString(), parent.getStartPosition(), parent.getLength(), scopes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExMzM5MA=="}, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NDcyOTYxOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwNzoxMzozN1rOH8a0kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwODo1MzoxOFrOH8eISg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjA0OQ==", "bodyText": "(params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1)", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533116049", "createdAt": "2020-12-01T07:13:37Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -84,7 +84,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getConvertVariableToFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n \t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n \t\t\t\tString initializeIn = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), String.class) : null;\n-\t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getExtractFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n+\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1) ? JSONUtility.toModel(params.commandArguments.get(1), SelectionInfo.class) : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzE3MDI1MA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1619#discussion_r533170250", "createdAt": "2020-12-01T08:53:18Z", "author": {"login": "CsCherrYY"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/GetRefactorEditHandler.java", "diffHunk": "@@ -84,7 +84,11 @@ public static RefactorWorkspaceEdit getEditsForRefactor(GetRefactorEditParams pa\n \t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getConvertVariableToFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n \t\t\t} else if (RefactorProposalUtility.EXTRACT_FIELD_COMMAND.equals(params.command)) {\n \t\t\t\tString initializeIn = (params.commandArguments != null && !params.commandArguments.isEmpty()) ? JSONUtility.toModel(params.commandArguments.get(0), String.class) : null;\n-\t\t\t\tproposal = (LinkedCorrectionProposal) RefactorProposalUtility.getExtractFieldProposal(params.context, context, problemsAtLocation, formatterOptions, initializeIn, false);\n+\t\t\t\tSelectionInfo info = (params.commandArguments != null && !params.commandArguments.isEmpty() && params.commandArguments.size() > 1) ? JSONUtility.toModel(params.commandArguments.get(1), SelectionInfo.class) : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzExNjA0OQ=="}, "originalCommit": {"oid": "1bfb575ea3006d91b5fd791541926596fe9481b5"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3503, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}