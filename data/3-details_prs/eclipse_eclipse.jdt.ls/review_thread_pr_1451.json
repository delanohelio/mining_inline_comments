{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzQ3MjIz", "number": 1451, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1MDoxNlrOD997ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1OTo0OVrOD-VIuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA0MzYyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1MDoxNlrOGXyHFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMTowODozNFrOGXysWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MTQ0Nw==", "bodyText": "I'd rather prefer we kept those temporary files under the target/ dir", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427591447", "createdAt": "2020-05-19T20:50:16Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -43,12 +45,13 @@\n \n \t@Before\n \tpublic void setProperty() throws Exception {\n-\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"target/gradle/checksums\");\n+\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"gradle/checksums\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMDk4Nw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427600987", "createdAt": "2020-05-19T21:08:34Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -43,12 +45,13 @@\n \n \t@Before\n \tpublic void setProperty() throws Exception {\n-\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"target/gradle/checksums\");\n+\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"gradle/checksums\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MTQ0Nw=="}, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzA1NzExOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDo1NDoxMVrOGXyPmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODoxMDozMFrOGYX4xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MzYyNA==", "bodyText": "I'd like to know why exactly this is happening. Is it expected we get multiple calls?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427593624", "createdAt": "2020-05-19T20:54:11Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -73,7 +74,7 @@ public void testClasspathUpdateForMaven() throws Exception {\n \t\twaitForBackgroundJobs();\n \n \t\tArgumentCaptor<ActionableNotification> argument = ArgumentCaptor.forClass(ActionableNotification.class);\n-\t\tverify(connection, times(1)).sendActionableNotification(argument.capture());\n+\t\tverify(connection, atLeastOnce()).sendActionableNotification(argument.capture());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwMTEyNw==", "bodyText": "checking...", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427601127", "createdAt": "2020-05-19T21:08:50Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -73,7 +74,7 @@ public void testClasspathUpdateForMaven() throws Exception {\n \t\twaitForBackgroundJobs();\n \n \t\tArgumentCaptor<ActionableNotification> argument = ArgumentCaptor.forClass(ActionableNotification.class);\n-\t\tverify(connection, times(1)).sendActionableNotification(argument.capture());\n+\t\tverify(connection, atLeastOnce()).sendActionableNotification(argument.capture());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MzYyNA=="}, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcwMDM3NQ==", "bodyText": "I tried to run org.eclipse.jdt.ls.core.internal.handlers.ClasspathUpdateHandlerTest.testClasspathUpdateForMaven locally(on Mac and Windows) and the invocation times is always one. wired... \ud83e\udd14", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427700375", "createdAt": "2020-05-20T02:04:14Z", "author": {"login": "jdneo"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -73,7 +74,7 @@ public void testClasspathUpdateForMaven() throws Exception {\n \t\twaitForBackgroundJobs();\n \n \t\tArgumentCaptor<ActionableNotification> argument = ArgumentCaptor.forClass(ActionableNotification.class);\n-\t\tverify(connection, times(1)).sendActionableNotification(argument.capture());\n+\t\tverify(connection, atLeastOnce()).sendActionableNotification(argument.capture());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MzYyNA=="}, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMDM3Mw==", "bodyText": "You can try the following:\n$ rm -rf ~/.m2/repository/org/apache/commons/commons-lang3\n$ mvn clean verify", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r428210373", "createdAt": "2020-05-20T18:10:30Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -73,7 +74,7 @@ public void testClasspathUpdateForMaven() throws Exception {\n \t\twaitForBackgroundJobs();\n \n \t\tArgumentCaptor<ActionableNotification> argument = ArgumentCaptor.forClass(ActionableNotification.class);\n-\t\tverify(connection, times(1)).sendActionableNotification(argument.capture());\n+\t\tverify(connection, atLeastOnce()).sendActionableNotification(argument.capture());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU5MzYyNA=="}, "originalCommit": {"oid": "07f4be2d9593ce9c693f7b8a31784b614d449f70"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzI2NDE0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMjowNDoxMFrOGX0SHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMjoxNzowMFrOGX0mWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNzAzNw==", "bodyText": "WrapperValidator.clear() might help", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427627037", "createdAt": "2020-05-19T22:04:10Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.File;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public class WrapperValidatorTest extends AbstractGradleBasedTest{\n+\n+\t@Before\n+\tpublic void setProperty() throws Exception {\n+\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"target/gradle/checksums\");\n+\t}\n+\n+\t@After\n+\tpublic void clearProperty() {\n+\t\tSystem.clearProperty(\"gradle.checksum.cacheDir\");\n+\t}\n+\n+\t@Test\n+\tpublic void testGradleWrapper() throws Exception {\n+\t\tFile file = new File(getSourceProjectDirectory(), \"gradle/simple-gradle\");\n+\t\tassertTrue(file.isDirectory());\n+\t\tValidationResult result = new WrapperValidator().checkWrapper(file.getAbsolutePath());\n+\t\tassertTrue(result.isValid());\n+\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n+\t\t// test cache\n+\t\tfile = new File(sha256Directory, \"gradle-6.4-wrapper.jar.sha256\");\n+\t\tString sha256 = Files.lines(Paths.get(file.getAbsolutePath()), StandardCharsets.UTF_8).findFirst().get();\n+\t\tassertEquals(\"70239e6ca1f0d5e3b2808ef6d82390cf9ad58d3a3a0d271677a51d1b89475857\", sha256);\n+\t}\n+\n+\t@Test\n+\tpublic void testMissingSha256() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d89de8c6afdb17ccc671030bdb31c84dced2336"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYzMjIxNg==", "bodyText": "I have tried it - 72261c5", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427632216", "createdAt": "2020-05-19T22:17:00Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 Red Hat Inc. and others.\n+ * All rights reserved. This program and the accompanying materials\n+ * are made available under the terms of the Eclipse Public License 2.0\n+ * which accompanies this distribution, and is available at\n+ * https://www.eclipse.org/legal/epl-2.0/\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *\n+ * Contributors:\n+ *     Red Hat Inc. - initial API and implementation\n+ *******************************************************************************/\n+package org.eclipse.jdt.ls.core.internal.managers;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.File;\n+import java.nio.charset.StandardCharsets;\n+import java.nio.file.Files;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.eclipse.jdt.ls.core.internal.JavaLanguageServerPlugin;\n+import org.eclipse.jdt.ls.core.internal.preferences.Preferences;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.ValidationResult;\n+import org.eclipse.jdt.ls.internal.gradle.checksums.WrapperValidator;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.runners.MockitoJUnitRunner;\n+\n+/**\n+ * @author snjeza\n+ *\n+ */\n+@RunWith(MockitoJUnitRunner.class)\n+public class WrapperValidatorTest extends AbstractGradleBasedTest{\n+\n+\t@Before\n+\tpublic void setProperty() throws Exception {\n+\t\tSystem.setProperty(\"gradle.checksum.cacheDir\", \"target/gradle/checksums\");\n+\t}\n+\n+\t@After\n+\tpublic void clearProperty() {\n+\t\tSystem.clearProperty(\"gradle.checksum.cacheDir\");\n+\t}\n+\n+\t@Test\n+\tpublic void testGradleWrapper() throws Exception {\n+\t\tFile file = new File(getSourceProjectDirectory(), \"gradle/simple-gradle\");\n+\t\tassertTrue(file.isDirectory());\n+\t\tValidationResult result = new WrapperValidator().checkWrapper(file.getAbsolutePath());\n+\t\tassertTrue(result.isValid());\n+\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n+\t\t// test cache\n+\t\tfile = new File(sha256Directory, \"gradle-6.4-wrapper.jar.sha256\");\n+\t\tString sha256 = Files.lines(Paths.get(file.getAbsolutePath()), StandardCharsets.UTF_8).findFirst().get();\n+\t\tassertEquals(\"70239e6ca1f0d5e3b2808ef6d82390cf9ad58d3a3a0d271677a51d1b89475857\", sha256);\n+\t}\n+\n+\t@Test\n+\tpublic void testMissingSha256() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYyNzAzNw=="}, "originalCommit": {"oid": "3d89de8c6afdb17ccc671030bdb31c84dced2336"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg0Njg4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0NDo0NlrOGYDtrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0NDo0NlrOGYDtrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3OTg1Mg==", "bodyText": "need to also call WrapperValidator.clear() in setProperty(), as previous Gradle tests might have mutated  WrapperValidator's state", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427879852", "createdAt": "2020-05-20T09:44:46Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -47,21 +49,26 @@ public void setProperty() throws Exception {\n \t}\n \n \t@After\n-\tpublic void clearProperty() {\n+\tpublic void clearProperty() throws IOException {\n \t\tSystem.clearProperty(\"gradle.checksum.cacheDir\");\n+\t\tWrapperValidator.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd279e1690d5a94d07b0460deed84914cda06565"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg1MDUwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0NTo0N1rOGYDv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMTo0ODozNlrOGYHwLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MDQ0NA==", "bodyText": "I saw this fail if WrapperValidator.clear() is not set in setProperty()", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427880444", "createdAt": "2020-05-20T09:45:47Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -47,21 +49,26 @@ public void setProperty() throws Exception {\n \t}\n \n \t@After\n-\tpublic void clearProperty() {\n+\tpublic void clearProperty() throws IOException {\n \t\tSystem.clearProperty(\"gradle.checksum.cacheDir\");\n+\t\tWrapperValidator.clear();\n \t}\n \n \t@Test\n \tpublic void testGradleWrapper() throws Exception {\n \t\tFile file = new File(getSourceProjectDirectory(), \"gradle/simple-gradle\");\n \t\tassertTrue(file.isDirectory());\n+\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n+\t\tassertTrue(sha256Directory.isDirectory());\n \t\tValidationResult result = new WrapperValidator().checkWrapper(file.getAbsolutePath());\n \t\tassertTrue(result.isValid());\n-\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n \t\t// test cache\n-\t\tfile = new File(sha256Directory, \"gradle-6.4-wrapper.jar.sha256\");\n+\t\tassertTrue(sha256Directory.isDirectory());\n+\t\tString message = Files.list(Paths.get(sha256Directory.getAbsolutePath())).collect(Collectors.toList()).toString();\n+\t\tfile = new File(sha256Directory, \"gradle-6.3-wrapper.jar.sha256\");\n+\t\tassertTrue(message, file.isFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd279e1690d5a94d07b0460deed84914cda06565"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk0NjAzMA==", "bodyText": "checking...", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r427946030", "createdAt": "2020-05-20T11:48:36Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/managers/WrapperValidatorTest.java", "diffHunk": "@@ -47,21 +49,26 @@ public void setProperty() throws Exception {\n \t}\n \n \t@After\n-\tpublic void clearProperty() {\n+\tpublic void clearProperty() throws IOException {\n \t\tSystem.clearProperty(\"gradle.checksum.cacheDir\");\n+\t\tWrapperValidator.clear();\n \t}\n \n \t@Test\n \tpublic void testGradleWrapper() throws Exception {\n \t\tFile file = new File(getSourceProjectDirectory(), \"gradle/simple-gradle\");\n \t\tassertTrue(file.isDirectory());\n+\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n+\t\tassertTrue(sha256Directory.isDirectory());\n \t\tValidationResult result = new WrapperValidator().checkWrapper(file.getAbsolutePath());\n \t\tassertTrue(result.isValid());\n-\t\tFile sha256Directory = WrapperValidator.getSha256CacheFile();\n \t\t// test cache\n-\t\tfile = new File(sha256Directory, \"gradle-6.4-wrapper.jar.sha256\");\n+\t\tassertTrue(sha256Directory.isDirectory());\n+\t\tString message = Files.list(Paths.get(sha256Directory.getAbsolutePath())).collect(Collectors.toList()).toString();\n+\t\tfile = new File(sha256Directory, \"gradle-6.3-wrapper.jar.sha256\");\n+\t\tassertTrue(message, file.isFile());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MDQ0NA=="}, "originalCommit": {"oid": "fd279e1690d5a94d07b0460deed84914cda06565"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Njg0NjAzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1OTo0OVrOGYXgZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODo1MDowMFrOGYZdWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNDEzMw==", "bodyText": "needs some comments to explain why this is necessary", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r428204133", "createdAt": "2020-05-20T17:59:49Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -47,6 +54,14 @@\n \n \tprivate ClasspathUpdateHandler handler;\n \n+\t@BeforeClass\n+\tpublic static void download() throws FileNotFoundException, CoreException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a6c6ddc84f5ad40ad43257173a3e6c2604b3455"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIxMTE1Nw==", "bodyText": "m2e updates a classpath when downloading a source artifact. Jenkins starts with an empty maven repository.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r428211157", "createdAt": "2020-05-20T18:11:55Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -47,6 +54,14 @@\n \n \tprivate ClasspathUpdateHandler handler;\n \n+\t@BeforeClass\n+\tpublic static void download() throws FileNotFoundException, CoreException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNDEzMw=="}, "originalCommit": {"oid": "0a6c6ddc84f5ad40ad43257173a3e6c2604b3455"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIzNjEyMQ==", "bodyText": "the comments should be added to the code", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1451#discussion_r428236121", "createdAt": "2020-05-20T18:50:00Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/ClasspathUpdateHandlerTest.java", "diffHunk": "@@ -47,6 +54,14 @@\n \n \tprivate ClasspathUpdateHandler handler;\n \n+\t@BeforeClass\n+\tpublic static void download() throws FileNotFoundException, CoreException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNDEzMw=="}, "originalCommit": {"oid": "0a6c6ddc84f5ad40ad43257173a3e6c2604b3455"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3557, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}