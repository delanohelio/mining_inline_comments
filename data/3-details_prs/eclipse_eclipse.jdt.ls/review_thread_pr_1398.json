{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODI3ODU0", "number": 1398, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTowMzozN1rODsz_lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTowMzozN1rODsz_lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzE1Nzk2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/JavadocCompletionProposal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTowMzozN1rOF94BFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMDoyMDowOVrOF96rMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyNTIzNw==", "bodyText": "new ArrayList(components.size())", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1398#discussion_r400425237", "createdAt": "2020-03-30T19:03:37Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/JavadocCompletionProposal.java", "diffHunk": "@@ -213,9 +221,42 @@ private String createTypeTags(IDocument document, int offset, String indentation\n \t\tif (!accept(offset, type)) {\n \t\t\treturn null;\n \t\t}\n-\t\tString[] typeParamNames = StubUtility.getTypeParameterNames(type.getTypeParameters());\n+\t\tCompilationUnit unit = SharedASTProviderCore.getAST(type.getTypeRoot(), SharedASTProviderCore.WAIT_ACTIVE_ONLY, null);\n+\t\tif (unit == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tString version = type.getJavaProject().getOption(JavaCore.COMPILER_COMPLIANCE, true);\n+\t\tString[] typeParamNames = null;\n+\t\tboolean isRecord = false;\n+\t\tif (!JavaModelUtil.isVersionLessThan(version, JavaCore.VERSION_14)) {\n+\t\t\tISourceRange range = type.getNameRange();\n+\t\t\tASTNode node = NodeFinder.perform(unit, range.getOffset(), range.getLength()).getParent();\n+\t\t\tif (node instanceof RecordDeclaration) {\n+\t\t\t\tList components = ((RecordDeclaration) node).recordComponents();\n+\t\t\t\tList<String> paramList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54dd59fa0bf02609e5a1541853cc7c3888c10b75"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ2ODc4Nw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1398#discussion_r400468787", "createdAt": "2020-03-30T20:20:09Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/JavadocCompletionProposal.java", "diffHunk": "@@ -213,9 +221,42 @@ private String createTypeTags(IDocument document, int offset, String indentation\n \t\tif (!accept(offset, type)) {\n \t\t\treturn null;\n \t\t}\n-\t\tString[] typeParamNames = StubUtility.getTypeParameterNames(type.getTypeParameters());\n+\t\tCompilationUnit unit = SharedASTProviderCore.getAST(type.getTypeRoot(), SharedASTProviderCore.WAIT_ACTIVE_ONLY, null);\n+\t\tif (unit == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tString version = type.getJavaProject().getOption(JavaCore.COMPILER_COMPLIANCE, true);\n+\t\tString[] typeParamNames = null;\n+\t\tboolean isRecord = false;\n+\t\tif (!JavaModelUtil.isVersionLessThan(version, JavaCore.VERSION_14)) {\n+\t\t\tISourceRange range = type.getNameRange();\n+\t\t\tASTNode node = NodeFinder.perform(unit, range.getOffset(), range.getLength()).getParent();\n+\t\t\tif (node instanceof RecordDeclaration) {\n+\t\t\t\tList components = ((RecordDeclaration) node).recordComponents();\n+\t\t\t\tList<String> paramList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQyNTIzNw=="}, "originalCommit": {"oid": "54dd59fa0bf02609e5a1541853cc7c3888c10b75"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3530, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}