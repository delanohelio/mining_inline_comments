{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjM1Nzgz", "number": 1525, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMzowODo1MFrOEWD-yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTozNzo1NVrOEZ5eeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTY5MzU1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMzowODo1MFrOG9K90w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMToyNjowMlrOHAklew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw==", "bodyText": "Regarding that the completionHandler will pass the favorite prefs to the collector at each completion request, what's benefit to persist it to the preference store?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r466795987", "createdAt": "2020-08-07T03:08:50Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNTUyMQ==", "bodyText": "See https://github.com/eclipse/eclipse.jdt.ui/blob/master/org.eclipse.jdt.core.manipulation/common/org/eclipse/jdt/core/manipulation/OrganizeImportsOperation.java#L677", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469415521", "createdAt": "2020-08-12T17:15:12Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc4NTY2OA==", "bodyText": "I see. Here are new comments:\n\nLooks like you also need update the store when the preferences changed.\nSince the link you pasted is used to fix the bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=283287, not sure whether the previous workaround in JLS OrganizeImportsHandler is still needed.\nhttps://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/OrganizeImportsHandler.java#L101-L106", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469785668", "createdAt": "2020-08-13T08:31:26Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTc5MjMzMw==", "bodyText": "those changes belong to the preference manager", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469792333", "createdAt": "2020-08-13T08:41:46Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTgzNjgzMA==", "bodyText": "When you update the preferenceStore in the plugin start function, the preferences from the client side is not passed to the JLS yet, that means you will always save the default JAVA_COMPLETION_FAVORITE_MEMBERS_DEFAULT to the preferenceStore. If this is not on purpose, then you should do it in Preferences#setJavaCompletionFavoriteMembers\n\tpublic Preferences setJavaCompletionFavoriteMembers(List<String> javaCompletionFavoriteMembers) {\n\t\tthis.javaCompletionFavoriteMembers = (javaCompletionFavoriteMembers == null || javaCompletionFavoriteMembers.isEmpty()) ? JAVA_COMPLETION_FAVORITE_MEMBERS_DEFAULT : javaCompletionFavoriteMembers;\n        IEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS,String.join(\":\", this.javaCompletionFavoriteMembers));\n\t\treturn this;\n\t}\nAlso i see the upstream code uses \";\" to restore the favorite members, but here you use \":\" to join the array, is that right?\nString[] favourites= pref.split(\";\");", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469836830", "createdAt": "2020-08-13T09:55:57Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg0ODU1Mw==", "bodyText": "Besides, JAVA_COMPLETION_FAVORITE_MEMBERS_DEFAULT in Preferences.java looks a little curious to me. It contains a tailing \":\" for each array item. But the default user settings in vscode-java doesn't contain \":\". Maybe it works, just curious.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469848553", "createdAt": "2020-08-13T10:17:06Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM1OTUyNw==", "bodyText": "Since the link you pasted is used to fix the bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=283287, not sure whether the previous workaround in JLS OrganizeImportsHandler is still needed.\n\nWe have to use the JLs workaround because of redhat-developer/vscode-java#1472", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r470359527", "createdAt": "2020-08-14T01:17:39Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2MDI1MQ==", "bodyText": "When you update the preferenceStore in the plugin start function, the preferences from the client side is not passed to the JLS yet, that means you will always save the default\n\nWe don't use JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC, but have to set it to the blank string.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r470360251", "createdAt": "2020-08-14T01:21:00Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2MDM5NQ==", "bodyText": "Besides, JAVA_COMPLETION_FAVORITE_MEMBERS_DEFAULT in Preferences.java looks a little curious to me. It contains a tailing \":\" for each array item. But the default user settings in vscode-java doesn't contain \":\".\n\nFixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r470360395", "createdAt": "2020-08-14T01:21:28Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM2MTQ2Nw==", "bodyText": "Regarding that the completionHandler will pass the favorite prefs to the collector at each completion request, what's benefit to persist it to the preference store?\n\nIf the JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC preference is null, some tests throw NPE at OrganizeImportsOperation.java, line 678.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r470361467", "createdAt": "2020-08-14T01:26:02Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/JavaLanguageServerPlugin.java", "diffHunk": "@@ -173,6 +173,9 @@ public void start(BundleContext bundleContext) throws Exception {\n \t\t\tpreferenceManager = new StandardPreferenceManager();\n \t\t\tprojectsManager = new StandardProjectsManager(preferenceManager);\n \t\t}\n+\t\tIEclipsePreferences fDefaultPreferenceStore = DefaultScope.INSTANCE.getNode(JavaManipulation.getPreferenceNodeId());\n+\t\tString javaCompletionFavoriteMembers = String.join(\":\", preferenceManager.getPreferences().getJavaCompletionFavoriteMembers());\n+\t\tfDefaultPreferenceStore.put(JavaManipulationPlugin.CODEASSIST_FAVORITE_STATIC_MEMBERS, javaCompletionFavoriteMembers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NTk4Nw=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTcwNDc4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMzoxNTo0NVrOG9LEFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoyNzowMlrOG_rSqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NzU4OQ==", "bodyText": "=> assertTrue(list.getItems().stream().anyMatch(i -> \"java.util.List\".equals(i.getDetail())));", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r466797589", "createdAt": "2020-08-07T03:15:45Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2849,7 +2849,8 @@ public void testCompletion_FilterTypes() throws JavaModelException {\n \n \t\tCompletionList list = server.completion(JsonMessageHelper.getParams(createCompletionRequest(unit, loc[0], loc[1]))).join().getRight();\n \t\tassertNotNull(list);\n-\t\tassertEquals(3, list.getItems().size());\n+\t\tList<CompletionItem> items = list.getItems().stream().filter(i -> \"java.util.List\".equals(i.getDetail())).collect(Collectors.toList());\n+\t\tassertFalse(items.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQyMjc2MQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469422761", "createdAt": "2020-08-12T17:27:02Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2849,7 +2849,8 @@ public void testCompletion_FilterTypes() throws JavaModelException {\n \n \t\tCompletionList list = server.completion(JsonMessageHelper.getParams(createCompletionRequest(unit, loc[0], loc[1]))).join().getRight();\n \t\tassertNotNull(list);\n-\t\tassertEquals(3, list.getItems().size());\n+\t\tList<CompletionItem> items = list.getItems().stream().filter(i -> \"java.util.List\".equals(i.getDetail())).collect(Collectors.toList());\n+\t\tassertFalse(items.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NzU4OQ=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTcwNTIxOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMzoxNjowM1rOG9LEUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoyNzoxNlrOG_rTJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NzY0OQ==", "bodyText": "See above comment.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r466797649", "createdAt": "2020-08-07T03:16:03Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2864,7 +2865,8 @@ public void testCompletion_FilterTypes() throws JavaModelException {\n \t\t\tPreferenceManager.getPrefs(null).setFilteredTypes(filteredTypes);\n \t\t\tlist = server.completion(JsonMessageHelper.getParams(createCompletionRequest(unit, loc[0], loc[1]))).join().getRight();\n \t\t\tassertNotNull(list);\n-\t\t\tassertEquals(0, list.getItems().size());\n+\t\t\titems = list.getItems().stream().filter(i -> \"java.util.List\".equals(i.getDetail())).collect(Collectors.toList());\n+\t\t\tassertTrue(items.isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQyMjg4Nw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469422887", "createdAt": "2020-08-12T17:27:16Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2864,7 +2865,8 @@ public void testCompletion_FilterTypes() throws JavaModelException {\n \t\t\tPreferenceManager.getPrefs(null).setFilteredTypes(filteredTypes);\n \t\t\tlist = server.completion(JsonMessageHelper.getParams(createCompletionRequest(unit, loc[0], loc[1]))).join().getRight();\n \t\t\tassertNotNull(list);\n-\t\t\tassertEquals(0, list.getItems().size());\n+\t\t\titems = list.getItems().stream().filter(i -> \"java.util.List\".equals(i.getDetail())).collect(Collectors.toList());\n+\t\t\tassertTrue(items.isEmpty());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5NzY0OQ=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTcxMTE3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMzoxOTo0NlrOG9LHkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoyMjo0MVrOG_rIWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5ODQ4MQ==", "bodyText": "Is there any new factor that contributes more completion items?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r466798481", "createdAt": "2020-08-07T03:19:46Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -1459,7 +1459,7 @@ public void testSnippet_record() throws Exception {\n \t\tassertFalse(items.isEmpty());\n \t\titems.sort((i1, i2) -> (i1.getSortText().compareTo(i2.getSortText())));\n \n-\t\tCompletionItem item = items.get(10);\n+\t\tCompletionItem item = items.get(11);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQyMDEyMw==", "bodyText": "See https://www.eclipse.org/eclipse/news/4.17/jdt.php#content-assist-substring-types", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r469420123", "createdAt": "2020-08-12T17:22:41Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -1459,7 +1459,7 @@ public void testSnippet_record() throws Exception {\n \t\tassertFalse(items.isEmpty());\n \t\titems.sort((i1, i2) -> (i1.getSortText().compareTo(i2.getSortText())));\n \n-\t\tCompletionItem item = items.get(10);\n+\t\tCompletionItem item = items.get(11);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc5ODQ4MQ=="}, "originalCommit": {"oid": "36783e09628b59858617722cdd41c623c590f3e9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjY2ODIzOnYy", "diffSide": "RIGHT", "path": "launch/jdt.ls.remote.server.launch", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjowMDowMlrOHBl1Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0MzoxN1rOHBweUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMDQ1OQ==", "bodyText": "deselect org.eclipse.jdt.ls.tests.syntaxserver too.\nSame for other *.launch files.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471430459", "createdAt": "2020-08-17T12:00:02Z", "author": {"login": "testforstephen"}, "path": "launch/jdt.ls.remote.server.launch", "diffHunk": "@@ -13,7 +13,9 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.remote.server\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NjcwNA==", "bodyText": "and what about org.eclipse.jdt.ui?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471596704", "createdAt": "2020-08-17T16:29:06Z", "author": {"login": "fbricon"}, "path": "launch/jdt.ls.remote.server.launch", "diffHunk": "@@ -13,7 +13,9 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.remote.server\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMDQ1OQ=="}, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNDgxNw==", "bodyText": "Fixed. org.eclipse.jdt.ui is not in the workspace.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471604817", "createdAt": "2020-08-17T16:43:17Z", "author": {"login": "snjeza"}, "path": "launch/jdt.ls.remote.server.launch", "diffHunk": "@@ -13,7 +13,9 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.remote.server\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMDQ1OQ=="}, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjY3NTMyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.product/languageServer.product", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjowMjowMFrOHBl5LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1OTowMlrOHCf4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMTQ2OA==", "bodyText": "which plugin introduces the dependencies for org.apache.felix.scr and org.eclipse.equinox.ds?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471431468", "createdAt": "2020-08-17T12:02:00Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.product/languageServer.product", "diffHunk": "@@ -40,12 +41,14 @@\n       <plugin id=\"org.eclipse.debug.core\"/>\n       <plugin id=\"org.eclipse.equinox.app\"/>\n       <plugin id=\"org.eclipse.equinox.common\"/>\n+      <plugin id=\"org.eclipse.equinox.ds\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNDIwMw==", "bodyText": "`There aren't any dependencies, but Java LS will not start without them. See also https://bugs.eclipse.org/bugs/show_bug.cgi?id=538737\norg.eclipse.equinox.ds is deprecated. I have replaced it with org.eclipse.e4.core.services and dependencies.\nSee https://help.eclipse.org/2020-06/index.jsp?topic=%2Forg.eclipse.platform.doc.isv%2Fporting%2F4.10%2Frecommended.html&cp%3D2_3_1_3&anchor=EquinoxDS_to_FelixSCR", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471604203", "createdAt": "2020-08-17T16:42:13Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.product/languageServer.product", "diffHunk": "@@ -40,12 +41,14 @@\n       <plugin id=\"org.eclipse.debug.core\"/>\n       <plugin id=\"org.eclipse.equinox.app\"/>\n       <plugin id=\"org.eclipse.equinox.common\"/>\n+      <plugin id=\"org.eclipse.equinox.ds\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMTQ2OA=="}, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkzMjc0OA==", "bodyText": "so if org.eclipse.equinox.ds is deprecated, would you still want to keep it in languageServer.product?\nAlso we need verify whether to update syntaxServer.product file either. In theory, if the new dependencies are introduced by the fundamental platform, they need to be updated for syntaxServer.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471932748", "createdAt": "2020-08-18T06:00:00Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.product/languageServer.product", "diffHunk": "@@ -40,12 +41,14 @@\n       <plugin id=\"org.eclipse.debug.core\"/>\n       <plugin id=\"org.eclipse.equinox.app\"/>\n       <plugin id=\"org.eclipse.equinox.common\"/>\n+      <plugin id=\"org.eclipse.equinox.ds\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMTQ2OA=="}, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM4MTQ5Mw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472381493", "createdAt": "2020-08-18T17:59:02Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.product/languageServer.product", "diffHunk": "@@ -40,12 +41,14 @@\n       <plugin id=\"org.eclipse.debug.core\"/>\n       <plugin id=\"org.eclipse.equinox.app\"/>\n       <plugin id=\"org.eclipse.equinox.common\"/>\n+      <plugin id=\"org.eclipse.equinox.ds\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMTQ2OA=="}, "originalCommit": {"oid": "c0b54dc253542ab24ff2645652fe54238ef7ff2f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzczNjg2OnYy", "diffSide": "RIGHT", "path": "launch/jdt.ls.socket-stream.launch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyOTozOVrOHBv_xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo1NjozOFrOHBw8Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5Njk5OQ==", "bodyText": "org.eclipse.jdt.ui?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471596999", "createdAt": "2020-08-17T16:29:39Z", "author": {"login": "fbricon"}, "path": "launch/jdt.ls.socket-stream.launch", "diffHunk": "@@ -13,7 +13,10 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.socket-stream\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>\n+<setEntry value=\"org.eclipse.jdt.ls.tests.syntaxserver\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMjQ5MA==", "bodyText": "We deselect only the workspace plugins.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471612490", "createdAt": "2020-08-17T16:56:38Z", "author": {"login": "snjeza"}, "path": "launch/jdt.ls.socket-stream.launch", "diffHunk": "@@ -13,7 +13,10 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.socket-stream\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>\n+<setEntry value=\"org.eclipse.jdt.ls.tests.syntaxserver\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5Njk5OQ=="}, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzczODE2OnYy", "diffSide": "RIGHT", "path": "launch/jdt.ls.socket-stream.syntaxserver.launch", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjoyOTo1M1rOHBwAcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo1NzoxMVrOHBw9fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NzE3MQ==", "bodyText": "org.eclipse.jdt.ui?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471597171", "createdAt": "2020-08-17T16:29:53Z", "author": {"login": "fbricon"}, "path": "launch/jdt.ls.socket-stream.syntaxserver.launch", "diffHunk": "@@ -13,7 +13,10 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.socket-stream.syntaxserver\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>\n+<setEntry value=\"org.eclipse.jdt.ls.tests.syntaxserver\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYxMjc5OA==", "bodyText": "See previous comment.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471612798", "createdAt": "2020-08-17T16:57:11Z", "author": {"login": "snjeza"}, "path": "launch/jdt.ls.socket-stream.syntaxserver.launch", "diffHunk": "@@ -13,7 +13,10 @@\n <booleanAttribute key=\"clearwslog\" value=\"false\"/>\n <stringAttribute key=\"configLocation\" value=\"${workspace_loc}/.metadata/.plugins/org.eclipse.pde.core/jdt.ls.socket-stream.syntaxserver\"/>\n <booleanAttribute key=\"default\" value=\"false\"/>\n-<stringAttribute key=\"deselected_workspace_plugins\" value=\"org.eclipse.jdt.ls.tests,org.eclipse.jdt.ls.tests.syntaxserver,org.eclipse.jdt.ui\"/>\n+<setAttribute key=\"deselected_workspace_bundles\">\n+<setEntry value=\"org.eclipse.jdt.ls.tests\"/>\n+<setEntry value=\"org.eclipse.jdt.ls.tests.syntaxserver\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5NzE3MQ=="}, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Nzc0MzY5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozMToyNVrOHBwD3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzoxNjozNFrOHByJQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5ODA0NA==", "bodyText": "no, keep 50. Clients which don't support additional computation on completion/resolve will see a bad performance degradation", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471598044", "createdAt": "2020-08-17T16:31:25Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -236,7 +236,7 @@\n \t * Defaults to 50.\n \t */\n \tpublic static final String JAVA_COMPLETION_MAX_RESULTS_KEY = \"java.completion.maxResults\";\n-\tpublic static final int JAVA_COMPLETION_MAX_RESULTS_DEFAULT = 50;\n+\tpublic static final int JAVA_COMPLETION_MAX_RESULTS_DEFAULT = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzMjE5Mw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471632193", "createdAt": "2020-08-17T17:16:34Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/preferences/Preferences.java", "diffHunk": "@@ -236,7 +236,7 @@\n \t * Defaults to 50.\n \t */\n \tpublic static final String JAVA_COMPLETION_MAX_RESULTS_KEY = \"java.completion.maxResults\";\n-\tpublic static final int JAVA_COMPLETION_MAX_RESULTS_DEFAULT = 50;\n+\tpublic static final int JAVA_COMPLETION_MAX_RESULTS_DEFAULT = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5ODA0NA=="}, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Nzc0NTg3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/syntaxserver/ModelBasedSearchableEnvironment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozMjowNVrOHBwFLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNzoxNjo0N1rOHByKPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5ODM4Mw==", "bodyText": "you can use a foreach loop here", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471598383", "createdAt": "2020-08-17T16:32:05Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/syntaxserver/ModelBasedSearchableEnvironment.java", "diffHunk": "@@ -77,9 +77,11 @@ public void findTypes(String prefix, ISearchRequestor storage, int type) {\n \t\t\tIPackageFragment[] fragments = elementRequestor.getPackageFragments();\n \t\t\tif (fragments != null) {\n \t\t\t\tString className = prefix.substring(index + 1);\n-\t\t\t\tfor (int i = 0, length = fragments.length; i < length; i++)\n-\t\t\t\t\tif (fragments[i] != null)\n+\t\t\t\tfor (int i = 0, length = fragments.length; i < length; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYzMjQ0Nw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r471632447", "createdAt": "2020-08-17T17:16:47Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/syntaxserver/ModelBasedSearchableEnvironment.java", "diffHunk": "@@ -77,9 +77,11 @@ public void findTypes(String prefix, ISearchRequestor storage, int type) {\n \t\t\tIPackageFragment[] fragments = elementRequestor.getPackageFragments();\n \t\t\tif (fragments != null) {\n \t\t\t\tString className = prefix.substring(index + 1);\n-\t\t\t\tfor (int i = 0, length = fragments.length; i < length; i++)\n-\t\t\t\t\tif (fragments[i] != null)\n+\t\t\t\tfor (int i = 0, length = fragments.length; i < length; i++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5ODM4Mw=="}, "originalCommit": {"oid": "2b19d9c2dcce50fd66019b32de3ba85600d575ce"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTc5NjQ0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.product/syntaxServer.product", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTowOTowNlrOHC-Vag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTo1ODowOFrOHDOCFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MDQ5MA==", "bodyText": "Have a test on lightweight and standard mode. Without \"javax.annotation, \"org.eclipse.e4.core.contexts, org.eclipse.e4.core.di, org.eclipse.e4.core.di.annotations, org.eclipse.e4.core.services\", both modes can start successfully. Looks like these 5 plugins are not required.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472880490", "createdAt": "2020-08-19T09:09:06Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.product/syntaxServer.product", "diffHunk": "@@ -37,6 +39,10 @@\n       <plugin id=\"org.eclipse.core.runtime\"/>\n       <plugin id=\"org.eclipse.core.variables\"/>\n       <plugin id=\"org.eclipse.debug.core\"/>\n+      <plugin id=\"org.eclipse.e4.core.contexts\"/>\n+      <plugin id=\"org.eclipse.e4.core.di\"/>\n+      <plugin id=\"org.eclipse.e4.core.di.annotations\"/>\n+      <plugin id=\"org.eclipse.e4.core.services\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEzNzY4Nw==", "bodyText": "You are right. Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473137687", "createdAt": "2020-08-19T15:58:08Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.product/syntaxServer.product", "diffHunk": "@@ -37,6 +39,10 @@\n       <plugin id=\"org.eclipse.core.runtime\"/>\n       <plugin id=\"org.eclipse.core.variables\"/>\n       <plugin id=\"org.eclipse.debug.core\"/>\n+      <plugin id=\"org.eclipse.e4.core.contexts\"/>\n+      <plugin id=\"org.eclipse.e4.core.di\"/>\n+      <plugin id=\"org.eclipse.e4.core.di.annotations\"/>\n+      <plugin id=\"org.eclipse.e4.core.services\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg4MDQ5MA=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NTkxNTQ1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "isResolved": false, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwOTozNzo1NVrOHC_cww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMjowODo0NVrOITF0Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ==", "bodyText": "With the new PR, i also observed the completion performance on type degraded.\nEnvironment:\n\nHardware\n\nMacBook Pro (13-inch, 2016, Four Thunderbolt 3 Ports)\nProcesor: 2.9 GHz Dual-Core Intel Core i5\nMemory: 8 GB 2133 MHz LPDDR3\n\n\nProject: https://github.com/spring-projects/spring-petclinic\nVS Code 1.48, only with Language Support for Java enabled.\n\nOld:\n\nNew:\nIt takes more than 3s to get the completion of String. If you only type S, it's slower.\n\nThis issue should be related with the new Substring/Subword matches for types https://www.eclipse.org/eclipse/news/4.17/jdt.php#content-assist-substring-types.\nIt seems it only provides switch to control subwords match, we need evaluate more on the new change.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472898755", "createdAt": "2020-08-19T09:37:55Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkwMDM0NA==", "bodyText": "@testforstephen can you try disabling subwords match in the JDT preferences, see if it restores the performance?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472900344", "createdAt": "2020-08-19T09:40:40Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NTg0NA==", "bodyText": "Sure. I tried to turn off both substring and subwords, the performance go back to normal. And the major perf factor is the substring match.\n\nTurn off substring match with vmArgs -Djdt.codeCompleteSubstringMatch=false or System.setProperty(AssistOptions.PROPERTY_SubstringMatch, \"false\")\nTurn off subwords match with JavaCore.setOptions().\n\n// JavaLanguageServerPlugin.java\n\npublic void start(BundleContext bundleContext) throws Exception {\n    ...\n    Hashtable<String, String> options = new Hashtable<>();\n    options.put(AssistOptions.OPTION_SubwordMatch, AssistOptions.DISABLED);\n    JavaCore.setOptions(options);\n}", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472985844", "createdAt": "2020-08-19T12:20:33Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjk4NjY3NA==", "bodyText": "i suggest we keep the max completion timeout to 5s in the test case. This will guard the possible performance issue.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r472986674", "createdAt": "2020-08-19T12:21:59Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzAwNzgwOA==", "bodyText": "options.put(AssistOptions.OPTION_SubwordMatch, AssistOptions.DISABLED) \n\nshould be added in the preferencemanager", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473007808", "createdAt": "2020-08-19T12:57:15Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0Njc5Mg==", "bodyText": "i suggest we keep the max completion timeout to 5s in the test case. This will guard the possible performance issue.\n\nSome tests fail randomly without this option. See #1411 (review)\nThe option is used only in tests", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473146792", "createdAt": "2020-08-19T16:12:30Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE3NjY1MA==", "bodyText": "options.put(AssistOptions.OPTION_SubwordMatch, AssistOptions.DISABLED)\nshould be added in the preferencemanager\n\nDone", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473176650", "createdAt": "2020-08-19T16:49:07Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ5OTk3NQ==", "bodyText": "Please turn off substring match too. It's the main factor to slow down the completion performance. Find the switch in my comment above.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473499975", "createdAt": "2020-08-20T01:11:52Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUwNDc0OQ==", "bodyText": "It is done. See 59f3ea0#diff-ce44e5aecff47a5dd96a42b0a961f48cR86", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473504749", "createdAt": "2020-08-20T01:19:32Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUwOTE4OA==", "bodyText": "No, that line only turns off subword match. The switch for substring match is System.setProperty(AssistOptions.PROPERTY_SubstringMatch, \"false\")", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473509188", "createdAt": "2020-08-20T01:26:08Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUzMjg5Mg==", "bodyText": "Done. See f520966#diff-55f26b9037b6c92ad4701f61028ae2cdR190", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r473532892", "createdAt": "2020-08-20T02:02:27Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MzkyMg==", "bodyText": "Just a heads-up regarding this feature. It might be worth revisiting once we adopt 2021-03 M1.\nhttps://www.eclipse.org/lists/platform-dev/msg02635.html", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r551983922", "createdAt": "2021-01-05T14:57:50Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMzNTg1Nw==", "bodyText": "The parallel index search looks promising.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r552335857", "createdAt": "2021-01-06T02:53:07Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njg4OTE3MQ==", "bodyText": "I tried to test this and while I think there might be a bit of an improvement using JDT Core 2021-03 M1, it still was much slower than with subword feature completely disabled so will have to look on the upstream bug.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1525#discussion_r556889171", "createdAt": "2021-01-13T22:08:45Z", "author": {"login": "rgrunber"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/CompletionHandlerTest.java", "diffHunk": "@@ -2622,8 +2625,11 @@ public void testLimitCompletionResults() throws Exception {\n \t@Test\n \tpublic void testStaticImports2() throws Exception {\n \t\tPreferenceManager.getPrefs(null).setJavaCompletionFavoriteMembers(Collections.emptyList());\n-\t\tICompilationUnit unit = getWorkingCopy(\"src/test1/B.java\",\n-\t\t//@formatter:off\n+\t\tlong timeout = Long.getLong(\"completion.timeout\", 5000);\n+\t\ttry {\n+\t\t\tSystem.setProperty(\"completion.timeout\", String.valueOf(60000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mjg5ODc1NQ=="}, "originalCommit": {"oid": "26e88fa18cff42f81eb6fa8f670a5fbaebcd0894"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3614, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}