{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzODE0ODE5", "number": 1479, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoxNzowNlrOEGAyYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo1MDoyNFrOEGBnNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzM5ODEwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoxNzowNlrOGkjFrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoyOToxMFrOGkjj5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3NjgxMg==", "bodyText": "delete unused code directly", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440976812", "createdAt": "2020-06-16T16:17:06Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -105,7 +109,7 @@ public boolean belongsTo(Object family) {\n \t\t\t\t\treturn PUBLISH_DIAGNOSTICS_JOBS.equals(family);\n \t\t\t\t}\n \t\t\t};\n-\t\t\tthis.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());\n+\t\t\t// this.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4NDU1MQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440984551", "createdAt": "2020-06-16T16:29:10Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -105,7 +109,7 @@ public boolean belongsTo(Object family) {\n \t\t\t\t\treturn PUBLISH_DIAGNOSTICS_JOBS.equals(family);\n \t\t\t\t}\n \t\t\t};\n-\t\t\tthis.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());\n+\t\t\t// this.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3NjgxMg=="}, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzM5ODQ2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoxNzoxMlrOGkjF6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoyOToyMlrOGkjklQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3Njg3NA==", "bodyText": "delete unused code directly", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440976874", "createdAt": "2020-06-16T16:17:12Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -90,7 +94,7 @@ public boolean belongsTo(Object family) {\n \t\t\t\t\treturn DOCUMENT_LIFE_CYCLE_JOBS.equals(family);\n \t\t\t\t}\n \t\t\t};\n-\t\t\tthis.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());\n+\t\t\t// this.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4NDcyNQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440984725", "createdAt": "2020-06-16T16:29:22Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -90,7 +94,7 @@ public boolean belongsTo(Object family) {\n \t\t\t\t\treturn DOCUMENT_LIFE_CYCLE_JOBS.equals(family);\n \t\t\t\t}\n \t\t\t};\n-\t\t\tthis.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());\n+\t\t\t// this.validationTimer.setRule(ResourcesPlugin.getWorkspace().getRoot());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3Njg3NA=="}, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzM5ODg3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/HoverInfoProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoxNzoxN1rOGkjGLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjoyOTozN1rOGkjlPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3Njk0MQ==", "bodyText": "cancelled", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440976941", "createdAt": "2020-06-16T16:17:17Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/HoverInfoProvider.java", "diffHunk": "@@ -140,6 +150,15 @@ public HoverInfoProvider(ITypeRoot aUnit, PreferenceManager preferenceManager) {\n \t\t} catch (Exception e) {\n \t\t\tJavaLanguageServerPlugin.logException(\"Error computing hover\", e);\n \t\t}\n+\t\tif (monitor.isCanceled()) {\n+\t\t\treturn canceled(res);\n+\t\t}\n+\t\treturn res;\n+\t}\n+\n+\tprivate List<Either<String, MarkedString>> canceled(List<Either<String, MarkedString>> res) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk4NDg5NA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440984894", "createdAt": "2020-06-16T16:29:37Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/HoverInfoProvider.java", "diffHunk": "@@ -140,6 +150,15 @@ public HoverInfoProvider(ITypeRoot aUnit, PreferenceManager preferenceManager) {\n \t\t} catch (Exception e) {\n \t\t\tJavaLanguageServerPlugin.logException(\"Error computing hover\", e);\n \t\t}\n+\t\tif (monitor.isCanceled()) {\n+\t\t\treturn canceled(res);\n+\t\t}\n+\t\treturn res;\n+\t}\n+\n+\tprivate List<Either<String, MarkedString>> canceled(List<Either<String, MarkedString>> res) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk3Njk0MQ=="}, "originalCommit": {"oid": "2da94de8b20a5404c9aae2e871307958e37667db"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzUzMzM1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo1MDoyNFrOGkkbQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzowNDoyNVrOGkk8gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5ODcyMQ==", "bodyText": "new ArrayList<>(toReconcile.size())", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r440998721", "createdAt": "2020-06-16T16:50:24Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -129,30 +131,53 @@ protected void triggerValidation(ICompilationUnit cu, long delay) throws JavaMod\n \t\t}\n \t\tif (validationTimer != null) {\n \t\t\tvalidationTimer.cancel();\n+\t\t\tISchedulingRule rule = getRule(toReconcile);\n \t\t\tif (publishDiagnosticsJob != null) {\n \t\t\t\tpublishDiagnosticsJob.cancel();\n+\t\t\t\tpublishDiagnosticsJob.setRule(rule);\n \t\t\t}\n+\t\t\tvalidationTimer.setRule(rule);\n \t\t\tvalidationTimer.schedule(delay);\n \t\t} else {\n \t\t\tperformValidation(new NullProgressMonitor());\n \t\t}\n \t}\n \n+\tprivate ISchedulingRule getRule(Set<ICompilationUnit> units) {\n+\t\tISchedulingRule result = null;\n+\t\tIResourceRuleFactory ruleFactory = ResourcesPlugin.getWorkspace().getRuleFactory();\n+\t\tfor (ICompilationUnit unit : units) {\n+\t\t\tif (unit.getResource() != null) {\n+\t\t\t\tISchedulingRule rule = ruleFactory.createRule(unit.getResource());\n+\t\t\t\tresult = MultiRule.combine(rule, result);\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n \tprivate IStatus performValidation(IProgressMonitor monitor) throws JavaModelException {\n \t\tlong start = System.currentTimeMillis();\n \n-\t\tList<ICompilationUnit> cusToReconcile = new ArrayList<>();\n+\t\tList<ICompilationUnit> cusToReconcile;\n \t\tsynchronized (toReconcile) {\n+\t\t\tif (toReconcile.isEmpty()) {\n+\t\t\t\treturn Status.OK_STATUS;\n+\t\t\t}\n+\t\t\tcusToReconcile = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2cf718558a7948b29db1b8898225b27306681a0"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAwNzIzNQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1479#discussion_r441007235", "createdAt": "2020-06-16T17:04:25Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseDocumentLifeCycleHandler.java", "diffHunk": "@@ -129,30 +131,53 @@ protected void triggerValidation(ICompilationUnit cu, long delay) throws JavaMod\n \t\t}\n \t\tif (validationTimer != null) {\n \t\t\tvalidationTimer.cancel();\n+\t\t\tISchedulingRule rule = getRule(toReconcile);\n \t\t\tif (publishDiagnosticsJob != null) {\n \t\t\t\tpublishDiagnosticsJob.cancel();\n+\t\t\t\tpublishDiagnosticsJob.setRule(rule);\n \t\t\t}\n+\t\t\tvalidationTimer.setRule(rule);\n \t\t\tvalidationTimer.schedule(delay);\n \t\t} else {\n \t\t\tperformValidation(new NullProgressMonitor());\n \t\t}\n \t}\n \n+\tprivate ISchedulingRule getRule(Set<ICompilationUnit> units) {\n+\t\tISchedulingRule result = null;\n+\t\tIResourceRuleFactory ruleFactory = ResourcesPlugin.getWorkspace().getRuleFactory();\n+\t\tfor (ICompilationUnit unit : units) {\n+\t\t\tif (unit.getResource() != null) {\n+\t\t\t\tISchedulingRule rule = ruleFactory.createRule(unit.getResource());\n+\t\t\t\tresult = MultiRule.combine(rule, result);\n+\t\t\t}\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n \tprivate IStatus performValidation(IProgressMonitor monitor) throws JavaModelException {\n \t\tlong start = System.currentTimeMillis();\n \n-\t\tList<ICompilationUnit> cusToReconcile = new ArrayList<>();\n+\t\tList<ICompilationUnit> cusToReconcile;\n \t\tsynchronized (toReconcile) {\n+\t\t\tif (toReconcile.isEmpty()) {\n+\t\t\t\treturn Status.OK_STATUS;\n+\t\t\t}\n+\t\t\tcusToReconcile = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5ODcyMQ=="}, "originalCommit": {"oid": "b2cf718558a7948b29db1b8898225b27306681a0"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3589, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}