{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTkyOTgz", "number": 1475, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOToyODozM1rOEEBiOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNDoxNToyN1rOEFYlJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjU0OTA1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOToyODozM1rOGhZFAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDozOToxOVrOGhbVNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzA3Mw==", "bodyText": "nope. We need the very 1st time the \"Workspace\" is opened/initialized, i.e. when .metadata is created", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r437667073", "createdAt": "2020-06-09T19:28:33Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -103,6 +111,15 @@ public InitializeResult initialize(InitializeParams param) {\n \t\t\tPreferences prefs = Preferences.createFrom((Map<String, Object>) settings);\n \t\t\tprefs.setRootPaths(rootPaths);\n \t\t\tpreferenceManager.update(prefs);\n+\t\t\tif (!firstTimeWorkspaceIsOpened) {\n+\t\t\t\t// We don't care about triggering a full build here, like in onDidChangeConfiguration\n+\t\t\t\ttry {\n+\t\t\t\t\tJVMConfigurator.configureJVMs(prefs);\n+\t\t\t\t\tfirstTimeWorkspaceIsOpened = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "954fcc1be07eba8068f817980190e4eabde7941a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzcwMzk5MA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r437703990", "createdAt": "2020-06-09T20:39:19Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -103,6 +111,15 @@ public InitializeResult initialize(InitializeParams param) {\n \t\t\tPreferences prefs = Preferences.createFrom((Map<String, Object>) settings);\n \t\t\tprefs.setRootPaths(rootPaths);\n \t\t\tpreferenceManager.update(prefs);\n+\t\t\tif (!firstTimeWorkspaceIsOpened) {\n+\t\t\t\t// We don't care about triggering a full build here, like in onDidChangeConfiguration\n+\t\t\t\ttry {\n+\t\t\t\t\tJVMConfigurator.configureJVMs(prefs);\n+\t\t\t\t\tfirstTimeWorkspaceIsOpened = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzA3Mw=="}, "originalCommit": {"oid": "954fcc1be07eba8068f817980190e4eabde7941a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjUwNDEzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozMzo1OVrOGiTv2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowODoxNFrOGipFdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODMxNA==", "bodyText": "WORKSPACE_INITIALIZED=\"workspaceInitialized\"", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438628314", "createdAt": "2020-06-11T08:33:59Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "diffHunk": "@@ -24,6 +24,13 @@\n \t */\n \tpublic static final String PLUGIN_ID = \"org.eclipse.jdt.ls.core\";\n \n+\t/**\n+\t * Is workspace created for the first time\n+\t */\n+\tpublic static final String FIRST_TIME_WORKSPACE_IS_CREATED = \"firstTimeWorkspaceIsCreated\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NzkxMA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438977910", "createdAt": "2020-06-11T18:08:14Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "diffHunk": "@@ -24,6 +24,13 @@\n \t */\n \tpublic static final String PLUGIN_ID = \"org.eclipse.jdt.ls.core\";\n \n+\t/**\n+\t * Is workspace created for the first time\n+\t */\n+\tpublic static final String FIRST_TIME_WORKSPACE_IS_CREATED = \"firstTimeWorkspaceIsCreated\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODMxNA=="}, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjUwNzA4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNDo1N1rOGiTxog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowODoyOVrOGipF6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODc3MA==", "bodyText": "registerWorkspaceInitialized", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438628770", "createdAt": "2020-06-11T08:34:57Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3ODAyNQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438978025", "createdAt": "2020-06-11T18:08:29Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyODc3MA=="}, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjUwOTA3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNToyOVrOGiTy2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowODo1MVrOGipGjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyOTA4MA==", "bodyText": "prefs.putBoolean(IConstants.WORKSPACE_INITIALIZED, true);", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438629080", "createdAt": "2020-06-11T08:35:29Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tprefs.putBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3ODE4OQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438978189", "createdAt": "2020-06-11T18:08:51Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tprefs.putBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyOTA4MA=="}, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjUxMzkyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODozNjo0NFrOGiT1qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowOToyNlrOGipHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyOTgwMA==", "bodyText": "not necessary", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438629800", "createdAt": "2020-06-11T08:36:44Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "diffHunk": "@@ -24,6 +24,13 @@\n \t */\n \tpublic static final String PLUGIN_ID = \"org.eclipse.jdt.ls.core\";\n \n+\t/**\n+\t * Is workspace created for the first time\n+\t */\n+\tpublic static final String FIRST_TIME_WORKSPACE_IS_CREATED = \"firstTimeWorkspaceIsCreated\";\n+\n+\tpublic static final boolean FIRST_TIME_WORKSPACE_IS_CREATED_DEFAULT = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3ODQ3Mw==", "bodyText": "Fixed", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438978473", "createdAt": "2020-06-11T18:09:26Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/IConstants.java", "diffHunk": "@@ -24,6 +24,13 @@\n \t */\n \tpublic static final String PLUGIN_ID = \"org.eclipse.jdt.ls.core\";\n \n+\t/**\n+\t * Is workspace created for the first time\n+\t */\n+\tpublic static final String FIRST_TIME_WORKSPACE_IS_CREATED = \"firstTimeWorkspaceIsCreated\";\n+\n+\tpublic static final boolean FIRST_TIME_WORKSPACE_IS_CREATED_DEFAULT = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyOTgwMA=="}, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzgzNTQyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDo1MzowNVrOGihAZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowOToxMFrOGipHFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NTU0Mw==", "bodyText": "prefs.getBoolean(IConstants.WORKSPACE_INITIALIZED, false);", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438845543", "createdAt": "2020-06-11T14:53:05Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tprefs.putBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, false);\n+\t\ttry {\n+\t\t\tprefs.flush();\n+\t\t} catch (BackingStoreException e) {\n+\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\tprivate boolean firstTimeWorkspaceIsCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\treturn prefs.getBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, IConstants.FIRST_TIME_WORKSPACE_IS_CREATED_DEFAULT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3ODMyNw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r438978327", "createdAt": "2020-06-11T18:09:10Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -126,6 +146,21 @@ public InitializeResult initialize(InitializeParams param) {\n \t\treturn initializationOptions;\n \t}\n \n+\tprivate void registerWorkspaceCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tprefs.putBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, false);\n+\t\ttry {\n+\t\t\tprefs.flush();\n+\t\t} catch (BackingStoreException e) {\n+\t\t\tJavaLanguageServerPlugin.logException(e.getMessage(), e);\n+\t\t}\n+\t}\n+\n+\tprivate boolean firstTimeWorkspaceIsCreated() {\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\treturn prefs.getBoolean(IConstants.FIRST_TIME_WORKSPACE_IS_CREATED, IConstants.FIRST_TIME_WORKSPACE_IS_CREATED_DEFAULT);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NTU0Mw=="}, "originalCommit": {"oid": "c72ed666c52ee4890c724f243778aac3a462b04f"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDE2MDg4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMzo0MjoyMFrOGjdLCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxODoyOVrOGjfcOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMTMwNQ==", "bodyText": "extra ; here.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439831305", "createdAt": "2020-06-14T13:42:20Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -103,6 +114,16 @@ public InitializeResult initialize(InitializeParams param) {\n \t\t\tPreferences prefs = Preferences.createFrom((Map<String, Object>) settings);\n \t\t\tprefs.setRootPaths(rootPaths);\n \t\t\tpreferenceManager.update(prefs);\n+\t\t\tif (!isWorkspaceInitialized()) {\n+\t\t\t\t// We don't care about triggering a full build here, like in onDidChangeConfiguration\n+\t\t\t\ttry {\n+\t\t\t\t\tJVMConfigurator.configureJVMs(prefs);\n+\t\t\t\t\tregisterWorkspaceInitialized();\n+\t\t\t\t\t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2ODQ3NA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439868474", "createdAt": "2020-06-14T21:18:29Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/handlers/BaseInitHandler.java", "diffHunk": "@@ -103,6 +114,16 @@ public InitializeResult initialize(InitializeParams param) {\n \t\t\tPreferences prefs = Preferences.createFrom((Map<String, Object>) settings);\n \t\t\tprefs.setRootPaths(rootPaths);\n \t\t\tpreferenceManager.update(prefs);\n+\t\t\tif (!isWorkspaceInitialized()) {\n+\t\t\t\t// We don't care about triggering a full build here, like in onDidChangeConfiguration\n+\t\t\t\ttry {\n+\t\t\t\t\tJVMConfigurator.configureJVMs(prefs);\n+\t\t\t\t\tregisterWorkspaceInitialized();\n+\t\t\t\t\t;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMTMwNQ=="}, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDE2NjY3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxMzo1MTowNVrOGjdOAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxODo0MFrOGjfcRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMjA2NQ==", "bodyText": "variable name is same as method name, not good. Rename to oldInitializedStatus?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439832065", "createdAt": "2020-06-14T13:51:05Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +213,29 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2ODQ4NQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439868485", "createdAt": "2020-06-14T21:18:40Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +213,29 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgzMjA2NQ=="}, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDM3NTU1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxOToyMTowOVrOGje6Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQyMToxODo1N1rOGjfcVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTc5MQ==", "bodyText": "This test actually does not check the JVMs have been configured, as it's supposed to", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439859791", "createdAt": "2020-06-14T19:21:09Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +213,29 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);\n+\t\ttry {\n+\t\t\tprefs.putBoolean(IConstants.WORKSPACE_INITIALIZED, false);\n+\t\t\tInitializeParams params = new InitializeParams();\n+\t\t\tMap<String, Object> initializationOptions = new HashMap<>();\n+\t\t\tinitializationOptions.put(InitHandler.SETTINGS_KEY, new HashMap<>());\n+\t\t\tparams.setInitializationOptions(initializationOptions);\n+\t\t\tassertFalse(isWorkspaceInitialized(prefs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2ODUwMw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439868503", "createdAt": "2020-06-14T21:18:57Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +213,29 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);\n+\t\ttry {\n+\t\t\tprefs.putBoolean(IConstants.WORKSPACE_INITIALIZED, false);\n+\t\t\tInitializeParams params = new InitializeParams();\n+\t\t\tMap<String, Object> initializationOptions = new HashMap<>();\n+\t\t\tinitializationOptions.put(InitHandler.SETTINGS_KEY, new HashMap<>());\n+\t\t\tparams.setInitializationOptions(initializationOptions);\n+\t\t\tassertFalse(isWorkspaceInitialized(prefs));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1OTc5MQ=="}, "originalCommit": {"oid": "6b78503403d35c12ae6541a3cac1773c9d810f32"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDgxMDYxOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNDoxNToyN1rOGjit4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo0MDoyM1rOGj31sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMjE0Nw==", "bodyText": "Call handler.handleInitializationOptions(params) twice and verify JVM not changed at the second time.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r439922147", "createdAt": "2020-06-15T04:15:27Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +219,58 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);\n+\t\tboolean[] changed = new boolean[] { false };\n+\t\tIVMInstall defaultVM = JavaRuntime.getDefaultVMInstall();\n+\t\tIVMInstallChangedListener listener = new IVMInstallChangedListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void defaultVMInstallChanged(IVMInstall previous, IVMInstall current) {\n+\t\t\t\tchanged[0] = true;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmChanged(PropertyChangeEvent event) {\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmAdded(IVMInstall vm) {\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmRemoved(IVMInstall vm) {\n+\t\t\t}\n+\n+\t\t};\n+\t\ttry {\n+\t\t\tprefs.putBoolean(IConstants.WORKSPACE_INITIALIZED, false);\n+\t\t\tInitializeParams params = new InitializeParams();\n+\t\t\tMap<String, Object> initializationOptions = new HashMap<>();\n+\t\t\tString javaHome = new File(TestVMType.getFakeJDKsLocation(), \"9\").getAbsolutePath();\n+\t\t\tHashMap<String, Object> homeMap = getMap(\"home\", javaHome);\n+\t\t\tMap<String, Object> javaMap = getMap(\"java\", homeMap);\n+\t\t\tinitializationOptions.put(InitHandler.SETTINGS_KEY, javaMap);\n+\t\t\tparams.setInitializationOptions(initializationOptions);\n+\t\t\tassertFalse(isWorkspaceInitialized(prefs));\n+\t\t\tJavaRuntime.addVMInstallChangedListener(listener);\n+\t\t\thandler.handleInitializationOptions(params);\n+\t\t\tassertTrue(isWorkspaceInitialized(prefs));\n+\t\t\tassertTrue(changed[0]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cb5e0d7f0fef5b829c8f06d2c06fe7b3b0f5e52"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI2ODIwOQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1475#discussion_r440268209", "createdAt": "2020-06-15T15:40:23Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/src/org/eclipse/jdt/ls/core/internal/handlers/InitHandlerTest.java", "diffHunk": "@@ -210,6 +219,58 @@ public void testRegisterDelayedCapability() throws Exception {\n \t\tverify(client, times(9)).registerCapability(any());\n \t}\n \n+\t@Test\n+\tpublic void testConfigureJVMs() throws Exception {\n+\t\tInitHandler handler = new InitHandler(projectsManager, preferenceManager, server.getClientConnection(), commandHandler);\n+\t\tIEclipsePreferences prefs = InstanceScope.INSTANCE.getNode(IConstants.PLUGIN_ID);\n+\t\tboolean isWorkspaceInitialized = isWorkspaceInitialized(prefs);\n+\t\tboolean[] changed = new boolean[] { false };\n+\t\tIVMInstall defaultVM = JavaRuntime.getDefaultVMInstall();\n+\t\tIVMInstallChangedListener listener = new IVMInstallChangedListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void defaultVMInstallChanged(IVMInstall previous, IVMInstall current) {\n+\t\t\t\tchanged[0] = true;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmChanged(PropertyChangeEvent event) {\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmAdded(IVMInstall vm) {\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tpublic void vmRemoved(IVMInstall vm) {\n+\t\t\t}\n+\n+\t\t};\n+\t\ttry {\n+\t\t\tprefs.putBoolean(IConstants.WORKSPACE_INITIALIZED, false);\n+\t\t\tInitializeParams params = new InitializeParams();\n+\t\t\tMap<String, Object> initializationOptions = new HashMap<>();\n+\t\t\tString javaHome = new File(TestVMType.getFakeJDKsLocation(), \"9\").getAbsolutePath();\n+\t\t\tHashMap<String, Object> homeMap = getMap(\"home\", javaHome);\n+\t\t\tMap<String, Object> javaMap = getMap(\"java\", homeMap);\n+\t\t\tinitializationOptions.put(InitHandler.SETTINGS_KEY, javaMap);\n+\t\t\tparams.setInitializationOptions(initializationOptions);\n+\t\t\tassertFalse(isWorkspaceInitialized(prefs));\n+\t\t\tJavaRuntime.addVMInstallChangedListener(listener);\n+\t\t\thandler.handleInitializationOptions(params);\n+\t\t\tassertTrue(isWorkspaceInitialized(prefs));\n+\t\t\tassertTrue(changed[0]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTkyMjE0Nw=="}, "originalCommit": {"oid": "6cb5e0d7f0fef5b829c8f06d2c06fe7b3b0f5e52"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3572, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}