{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjY3NzAz", "number": 1617, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODo1NTo0N1rOE96N6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMToyNVrOFGD1oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzUyNDI2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/app/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwODo1NTo0N1rOH614Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODowODo1MlrOH8HYmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ2MjIxNQ==", "bodyText": "More dependencies will take more time to run the test cases. Can we remove the unnecessary dependencies? Since what we need is just a minimum project to reproduce the problem.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r531462215", "createdAt": "2020-11-27T08:55:47Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/app/build.gradle", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\r\n+ * This file was generated by the Gradle 'init' task.\r\n+ *\r\n+ * This generated file contains a sample Java application project to get you started.\r\n+ * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle\r\n+ * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html\r\n+ */\r\n+\r\n+plugins {\r\n+    // Apply the application plugin to add support for building a CLI application in Java.\r\n+    id 'application'\r\n+}\r\n+\r\n+repositories {\r\n+    // Use JCenter for resolving dependencies.\r\n+    jcenter()\r\n+}\r\n+\r\n+dependencies {\r\n+    // Use JUnit Jupiter API for testing.\r\n+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'\r\n+\r\n+    // Use JUnit Jupiter Engine for testing.\r\n+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'\r\n+\r\n+    // This dependency is used by the application.\r\n+    implementation 'com.google.guava:guava:29.0-jre'\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NzU5Mw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r532797593", "createdAt": "2020-11-30T18:08:52Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/app/build.gradle", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\r\n+ * This file was generated by the Gradle 'init' task.\r\n+ *\r\n+ * This generated file contains a sample Java application project to get you started.\r\n+ * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle\r\n+ * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html\r\n+ */\r\n+\r\n+plugins {\r\n+    // Apply the application plugin to add support for building a CLI application in Java.\r\n+    id 'application'\r\n+}\r\n+\r\n+repositories {\r\n+    // Use JCenter for resolving dependencies.\r\n+    jcenter()\r\n+}\r\n+\r\n+dependencies {\r\n+    // Use JUnit Jupiter API for testing.\r\n+    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'\r\n+\r\n+    // Use JUnit Jupiter Engine for testing.\r\n+    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'\r\n+\r\n+    // This dependency is used by the application.\r\n+    implementation 'com.google.guava:guava:29.0-jre'\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ2MjIxNQ=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzkxNTQyOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/.gitattributes", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDo0MTowOFrOH65hRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODowOTowNVrOH8HZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMTg2Mg==", "bodyText": "no need of this file.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r531521862", "createdAt": "2020-11-27T10:41:08Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/.gitattributes", "diffHunk": "@@ -0,0 +1,6 @@\n+#\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5NzczMw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r532797733", "createdAt": "2020-11-30T18:09:05Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.tests/projects/gradle/sample/.gitattributes", "diffHunk": "@@ -0,0 +1,6 @@\n+#\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUyMTg2Mg=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDMyMTU2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOToxMjowOVrOH7xxTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzowMjoxNVrOH9IgFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA==", "bodyText": "When vmInstall or gradle home changed, the force flag will be true. Is it necessary to update all projects?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r532443470", "createdAt": "2020-11-30T09:12:09Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc5ODY3Mw==", "bodyText": "Yes, it is. See https://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/MavenBuildSupport.java#L89", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r532798673", "createdAt": "2020-11-30T18:10:33Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzA3NzAwOA==", "bodyText": "I'm not worried about this commit can fix the outdated dependencies issue. But this fix looks like in conflict with your previous PR #1467.\nWhen i tried this commit in springboot, and changed the user setting \"java.import.gradle.java.home\", i see lots of synchronization jobs are triggered.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r533077008", "createdAt": "2020-12-01T05:11:29Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzUzNjczNw==", "bodyText": "When i tried this commit in springboot, and changed the user setting \"java.import.gradle.java.home\", i see lots of synchronization jobs are triggered.\n\nThey have to be synchronized.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r533536737", "createdAt": "2020-12-01T16:12:32Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzgyOTczMA==", "bodyText": "Could you please explain the reason? I assume when you're synchronizing the gradle root project, all projects under it will be updated and no need to synchronize each subproject again. Please correct me if it's not right.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r533829730", "createdAt": "2020-12-02T01:13:52Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg2NDQ2OA==", "bodyText": "You are right. I have updated the PR.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r533864468", "createdAt": "2020-12-02T03:02:15Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (force || isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ0MzQ3MA=="}, "originalCommit": {"oid": "227e1e36bbe8ad648da8bbc228323436d1475e42"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODYwNzczOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/BasicFileDetector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNjo0Mjo0NlrOIG1QjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyNToxMFrOIHQpuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzNDk1Nw==", "bodyText": "this.fileNames = fileNames == null ? new ArrayList<>() : Arrays.asList(fileNames);", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r544034957", "createdAt": "2020-12-16T06:42:46Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/BasicFileDetector.java", "diffHunk": "@@ -55,21 +55,30 @@\n \tprivate static final Set<FileVisitOption> FOLLOW_LINKS_OPTION = EnumSet.of(FileVisitOption.FOLLOW_LINKS);\n \tprivate List<Path> directories;\n \tprivate Path rootDir;\n-\tprivate String fileName;\n+\tprivate List<String> fileNames;\n \tprivate int maxDepth = 5;\n \tprivate boolean includeNested = true;\n \tprivate Set<String> exclusions = new LinkedHashSet<>(1);\n \n \t/**\n-\t * Constructs a new BasicFileDetector for the given root directory, searching for a fileName.\n-\t * By default, the search depth is limited to 5. Sub-directories of a found directory will be walked through.\n-\t * The \".metadata\" folder is excluded.\n-\t * @param rootDir the root directory to search for files\n-\t * @param fileName the name of the file to search\n+\t * Constructs a new BasicFileDetector for the given root directory, searching\n+\t * for fileNames. By default, the search depth is limited to 5. Sub-directories\n+\t * of a found directory will be walked through. The \".metadata\" folder is\n+\t * excluded.\n+\t *\n+\t * @param rootDir\n+\t *            the root directory to search for files\n+\t * @param fileNames\n+\t *            the names of the file to search\n \t */\n-\tpublic BasicFileDetector(Path rootDir, String fileName) {\n+\tpublic BasicFileDetector(Path rootDir, String... fileNames) {\n \t\tthis.rootDir = rootDir;\n-\t\tthis.fileName = fileName;\n+\t\tthis.fileNames = new ArrayList<>();\n+\t\tif (fileNames != null) {\n+\t\t\tfor (String fileName : fileNames) {\n+\t\t\t\tthis.fileNames.add(fileName);\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f3fcc66fac7d8d240edf1cc1f1a57a6df53287"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4Mzc2OA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r544483768", "createdAt": "2020-12-16T17:25:10Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/BasicFileDetector.java", "diffHunk": "@@ -55,21 +55,30 @@\n \tprivate static final Set<FileVisitOption> FOLLOW_LINKS_OPTION = EnumSet.of(FileVisitOption.FOLLOW_LINKS);\n \tprivate List<Path> directories;\n \tprivate Path rootDir;\n-\tprivate String fileName;\n+\tprivate List<String> fileNames;\n \tprivate int maxDepth = 5;\n \tprivate boolean includeNested = true;\n \tprivate Set<String> exclusions = new LinkedHashSet<>(1);\n \n \t/**\n-\t * Constructs a new BasicFileDetector for the given root directory, searching for a fileName.\n-\t * By default, the search depth is limited to 5. Sub-directories of a found directory will be walked through.\n-\t * The \".metadata\" folder is excluded.\n-\t * @param rootDir the root directory to search for files\n-\t * @param fileName the name of the file to search\n+\t * Constructs a new BasicFileDetector for the given root directory, searching\n+\t * for fileNames. By default, the search depth is limited to 5. Sub-directories\n+\t * of a found directory will be walked through. The \".metadata\" folder is\n+\t * excluded.\n+\t *\n+\t * @param rootDir\n+\t *            the root directory to search for files\n+\t * @param fileNames\n+\t *            the names of the file to search\n \t */\n-\tpublic BasicFileDetector(Path rootDir, String fileName) {\n+\tpublic BasicFileDetector(Path rootDir, String... fileNames) {\n \t\tthis.rootDir = rootDir;\n-\t\tthis.fileName = fileName;\n+\t\tthis.fileNames = new ArrayList<>();\n+\t\tif (fileNames != null) {\n+\t\t\tfor (String fileName : fileNames) {\n+\t\t\t\tthis.fileNames.add(fileName);\n+\t\t\t}\n+\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDAzNDk1Nw=="}, "originalCommit": {"oid": "71f3fcc66fac7d8d240edf1cc1f1a57a6df53287"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxODk4NjU2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxMToyNVrOIG4y6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxNzoyNTozNVrOIHQq6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MjkwNQ==", "bodyText": "For gradle projects, it currently only updates the digest in this place (GradleBuildSupport#update).  It's supposed to store the digest as well when GradleProjectImporter finishes importing the gradle project into the workspace for the first time.\nSee the code snippet.\nhttps://github.com/eclipse/eclipse.jdt.ls/blob/master/org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleProjectImporter.java#L122\n\tpublic void importToWorkspace(IProgressMonitor monitor) throws CoreException {\n\t\tif (!applies(monitor)) {\n\t\t\treturn;\n\t\t}\n\t\tint projectSize = directories.size();\n\t\tSubMonitor subMonitor = SubMonitor.convert(monitor, projectSize + 1);\n\t\tsubMonitor.setTaskName(IMPORTING_GRADLE_PROJECTS);\n\t\tJavaLanguageServerPlugin.logInfo(IMPORTING_GRADLE_PROJECTS);\n\t\tsubMonitor.worked(1);\n\t\tdirectories.forEach(d -> importDir(d, subMonitor.newChild(1)));\n\n\t\t// ===>Insert the logic to store the digest for the imported gradle projects.\n\t\tProjectUtils.getGradleProjects().forEach(project -> {\n\t\t\tFile buildFile = project.getFile(BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n\t\t\tFile settingsFile = project.getFile(SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n\t\t\ttry {\n\t\t\t\tif (buildFile.exists()) {\n\t\t\t\t\tJavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath());\n\t\t\t\t}\n\t\t\t\tif (settingsFile.exists()) {\n\t\t\t\t\tJavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath());\n\t\t\t\t}\n\t\t\t} catch (CoreException e) {\n\t\t\t\tJavaLanguageServerPlugin.logException(\"Failed to update digest for gradle build file\", e);\n\t\t\t}\n\t\t});\n\n\t\tsubMonitor.done();\n\t}", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r544092905", "createdAt": "2020-12-16T08:11:25Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71f3fcc66fac7d8d240edf1cc1f1a57a6df53287"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDQ4NDA3NQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1617#discussion_r544484075", "createdAt": "2020-12-16T17:25:35Z", "author": {"login": "snjeza"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/managers/GradleBuildSupport.java", "diffHunk": "@@ -79,7 +79,11 @@ public void update(IProject project, boolean force, IProgressMonitor monitor) th\n \t\t\t\tBuildConfiguration buildConfiguration = GradleProjectImporter.getBuildConfiguration(Paths.get(projectPath));\n \t\t\t\tgradleBuild = GradleCore.getWorkspace().createBuild(buildConfiguration);\n \t\t\t}\n-\t\t\tif (isRoot) {\n+\t\t\tFile buildFile = project.getFile(GradleProjectImporter.BUILD_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tFile settingsFile = project.getFile(GradleProjectImporter.SETTINGS_GRADLE_DESCRIPTOR).getLocation().toFile();\n+\t\t\tboolean shouldUpdate = (buildFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(buildFile.toPath()))\n+\t\t\t\t\t|| (settingsFile.exists() && JavaLanguageServerPlugin.getDigestStore().updateDigest(settingsFile.toPath()));\n+\t\t\tif (isRoot || shouldUpdate) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5MjkwNQ=="}, "originalCommit": {"oid": "71f3fcc66fac7d8d240edf1cc1f1a57a6df53287"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3502, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}