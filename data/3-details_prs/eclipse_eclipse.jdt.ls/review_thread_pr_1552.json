{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTAyMjg4", "number": 1552, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNDo0MjowMlrOEl65mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNDo0MjowMlrOEl65mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTk3Nzg1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/SemanticTokensCommand.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNDo0MjowMlrOHVqB9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowMDowNlrOHV0vaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3MDc3Mg==", "bodyText": "Looks good. But not sure whether it can fix the problem completely.\nAs my understanding, both document and CompilationUnit are a snapshot of the document at some point. The difference is CompilationUnit is the AST tree parsed from the document at some point. I'm curious how the fix can guarantee it's not out-of-sync.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1552#discussion_r492470772", "createdAt": "2020-09-22T04:42:02Z", "author": {"login": "testforstephen"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/SemanticTokensCommand.java", "diffHunk": "@@ -38,22 +34,17 @@ public static SemanticTokens provide(String uri) {\n \t}\n \n \tprivate static SemanticTokens doProvide(String uri) {\n-\t\tIDocument document = null;\n-\n \t\tITypeRoot typeRoot = JDTUtils.resolveTypeRoot(uri);\n-\t\tif (typeRoot != null) {\n-\t\t\ttry {\n-\t\t\t\tdocument = JsonRpcHelpers.toDocument(typeRoot.getBuffer());\n-\t\t\t} catch (JavaModelException e) {\n-\t\t\t\tJavaLanguageServerPlugin.logException(\"Failed to provide semantic tokens for \" + uri, e);\n-\t\t\t}\n-\t\t}\n-\t\tif (document == null) {\n+\t\tif (typeRoot == null) {\n \t\t\treturn new SemanticTokens(Collections.emptyList());\n \t\t}\n \n-\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(document, SemanticTokenManager.getInstance());\n \t\tCompilationUnit root = CoreASTProvider.getInstance().getAST(typeRoot, CoreASTProvider.WAIT_YES, new NullProgressMonitor());\n+\t\tif (root == null) {\n+\t\t\treturn new SemanticTokens(Collections.emptyList());\n+\t\t}\n+\n+\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(root, SemanticTokenManager.getInstance());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8e75339ac1d9343926b6bdb75efc971b05bd9e1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3NTYwMw==", "bodyText": "Yes, the compilation unit might get out-of-sync with the real document at some points. But the problem before this change was that the semantic token visitor used both a document and AST nodes from the compilation unit, and the document was not in sync with the compilation unit.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1552#discussion_r492475603", "createdAt": "2020-09-22T05:04:35Z", "author": {"login": "0dinD"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/SemanticTokensCommand.java", "diffHunk": "@@ -38,22 +34,17 @@ public static SemanticTokens provide(String uri) {\n \t}\n \n \tprivate static SemanticTokens doProvide(String uri) {\n-\t\tIDocument document = null;\n-\n \t\tITypeRoot typeRoot = JDTUtils.resolveTypeRoot(uri);\n-\t\tif (typeRoot != null) {\n-\t\t\ttry {\n-\t\t\t\tdocument = JsonRpcHelpers.toDocument(typeRoot.getBuffer());\n-\t\t\t} catch (JavaModelException e) {\n-\t\t\t\tJavaLanguageServerPlugin.logException(\"Failed to provide semantic tokens for \" + uri, e);\n-\t\t\t}\n-\t\t}\n-\t\tif (document == null) {\n+\t\tif (typeRoot == null) {\n \t\t\treturn new SemanticTokens(Collections.emptyList());\n \t\t}\n \n-\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(document, SemanticTokenManager.getInstance());\n \t\tCompilationUnit root = CoreASTProvider.getInstance().getAST(typeRoot, CoreASTProvider.WAIT_YES, new NullProgressMonitor());\n+\t\tif (root == null) {\n+\t\t\treturn new SemanticTokens(Collections.emptyList());\n+\t\t}\n+\n+\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(root, SemanticTokenManager.getInstance());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3MDc3Mg=="}, "originalCommit": {"oid": "d8e75339ac1d9343926b6bdb75efc971b05bd9e1"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0NjI0OQ==", "bodyText": "Actually I just submitted redhat-developer/vscode-java#1632, which should fix the problem that you've pointed out. It turns out that there were two separate issues causing the offset, see my comment.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1552#discussion_r492646249", "createdAt": "2020-09-22T11:00:06Z", "author": {"login": "0dinD"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/SemanticTokensCommand.java", "diffHunk": "@@ -38,22 +34,17 @@ public static SemanticTokens provide(String uri) {\n \t}\n \n \tprivate static SemanticTokens doProvide(String uri) {\n-\t\tIDocument document = null;\n-\n \t\tITypeRoot typeRoot = JDTUtils.resolveTypeRoot(uri);\n-\t\tif (typeRoot != null) {\n-\t\t\ttry {\n-\t\t\t\tdocument = JsonRpcHelpers.toDocument(typeRoot.getBuffer());\n-\t\t\t} catch (JavaModelException e) {\n-\t\t\t\tJavaLanguageServerPlugin.logException(\"Failed to provide semantic tokens for \" + uri, e);\n-\t\t\t}\n-\t\t}\n-\t\tif (document == null) {\n+\t\tif (typeRoot == null) {\n \t\t\treturn new SemanticTokens(Collections.emptyList());\n \t\t}\n \n-\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(document, SemanticTokenManager.getInstance());\n \t\tCompilationUnit root = CoreASTProvider.getInstance().getAST(typeRoot, CoreASTProvider.WAIT_YES, new NullProgressMonitor());\n+\t\tif (root == null) {\n+\t\t\treturn new SemanticTokens(Collections.emptyList());\n+\t\t}\n+\n+\t\tSemanticTokensVisitor collector = new SemanticTokensVisitor(root, SemanticTokenManager.getInstance());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ3MDc3Mg=="}, "originalCommit": {"oid": "d8e75339ac1d9343926b6bdb75efc971b05bd9e1"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3465, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}