{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5OTE2NTEz", "number": 1447, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozMDoyOVrOD9tz1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDoxNDozOFrOD9u1Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDQwMjc4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozMDoyOVrOGXX7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozMDoyOVrOGXX7bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MjQ3Ng==", "bodyText": "javaProjects", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427162476", "createdAt": "2020-05-19T09:30:29Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProject() {\n+\t\tList<URI> javaProejcts = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ff755b47cd448c6676f40450581a5d533943ed1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDU2OTEzOnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDoxNDoyMVrOGXZjPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzoxMjoxNlrOGXfuYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ==", "bodyText": "Why don't you return the default project? Might be valuable information to get for standalone Java files", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427189055", "createdAt": "2020-05-19T10:14:21Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI1ODk0OQ==", "bodyText": "Because I'm thinking that the project path of the default project is totally different from that of the standalone Java files. The client side needs to have a way to resolve such mapping...", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427258949", "createdAt": "2020-05-19T12:22:44Z", "author": {"login": "jdneo"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI2NTE3MA==", "bodyText": "well, no mapping = default project, no?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427265170", "createdAt": "2020-05-19T12:33:14Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI4ODkzOA==", "bodyText": "Yes, I also thinks of that actually. What I'm afraid is, it might be in some situation that the client side cache is out of sync?\nHmm, Can I say that, if a java file does not belongs to any workspace folder, then it belongs to the default project?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427288938", "createdAt": "2020-05-19T13:10:26Z", "author": {"login": "jdneo"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzI5MDIxMQ==", "bodyText": "I think that's probably an accurate assumption.", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427290211", "createdAt": "2020-05-19T13:12:16Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {\n+\t\t\tif (ResourcesPlugin.getWorkspace().getRoot().getProject(ProjectsManager.DEFAULT_PROJECT_NAME).equals(javaProejct.getProject())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTA1NQ=="}, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDU3MDI3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMDoxNDozOFrOGXZj6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMToxODo0MFrOGXbqnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTIyNg==", "bodyText": "javaProject", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427189226", "createdAt": "2020-05-19T10:14:38Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIyMzcwOQ==", "bodyText": "Hmm, I think I need to install a spelling checking extension. \ud83d\ude04", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1447#discussion_r427223709", "createdAt": "2020-05-19T11:18:40Z", "author": {"login": "jdneo"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/commands/ProjectCommand.java", "diffHunk": "@@ -128,6 +130,17 @@ public static boolean isTestFile(String uri) throws CoreException {\n \t\treturn false;\n \t}\n \n+\tpublic static List<URI> getAllJavaProjects() {\n+\t\tList<URI> javaProjects = new LinkedList<>();\n+\t\tfor (IJavaProject javaProejct : ProjectUtils.getJavaProjects()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE4OTIyNg=="}, "originalCommit": {"oid": "726cb071338a74a5ee3710cd7c346707db6f5854"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3555, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}