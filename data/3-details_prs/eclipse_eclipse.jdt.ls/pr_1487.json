{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NjY2ODQ5", "number": 1487, "title": "fill additionalTextEdits during completionItem/resolve ", "bodyText": "The goal is to improve performance of completion. Previously all text edits (including addtional ones which cost much time for imports) are caclulated in CompletionProposalReplacementProvider#updateReplacement. Now we decouple them,\nTextEdits is calculated in \"completion\" stage, and AdditionalTextEdits in \"resolve\" stage\nCurrenly it's not ready for review, just to show you how far it would improve.\nPerformance Preview\nIn the initial commit, I defer the calculation of imports (only for TYPE_REF candidates) to resolving stage. In spring-petclinic project, when I type \"S\" to complete, it takes:\n\n~110ms for 50 items\n~330ms for all 3000+ items\n\n(macOS, 2.9 GHz Dual-Core Intel Core i5, 8G RAM)\nReferences\nVS Code has already supported the so-called Relaxed resolveCompletionItem in v1.46.\nProposed spec in LSP microsoft/language-server-protocol#1003", "createdAt": "2020-06-18T17:37:07Z", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487", "merged": true, "mergeCommit": {"oid": "b963827ecf074c16cbf7cacd4c1e692a281b313a"}, "closed": true, "closedAt": "2020-06-30T08:54:43Z", "author": {"login": "Eskibear"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsuebSgBqjM0NjE0MjU3NDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwCnosgH2gAyNDM2NjY2ODQ5OjE1N2NhNjEyZjUxOWY5YTI2YWRiODg0NWVlYjc2NzliN2VmNGFjZTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e8d6920e8f4869da7d92d688c7f37afa27898ee", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/9e8d6920e8f4869da7d92d688c7f37afa27898ee", "committedDate": "2020-06-18T17:01:39Z", "message": "calculate additionalTextEdits in resolve stage\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>\n\nlazy calc addtional text edits\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>\n\nmark failed tests\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}, "afterCommit": {"oid": "25f24396a149d5c12fcb3534e730577c7891e4e1", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/25f24396a149d5c12fcb3534e730577c7891e4e1", "committedDate": "2020-06-19T08:07:27Z", "message": "call addImports only in resolve stage\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTk0OTk0", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487#pullrequestreview-434194994", "createdAt": "2020-06-19T16:10:55Z", "commit": {"oid": "25f24396a149d5c12fcb3534e730577c7891e4e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxMDo1NVrOGmaLxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjoxMDo1NVrOGmaLxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjkyODA2OQ==", "bodyText": "Not sure if we should do something like:\nif (proposal.getKind() == CompletionProposal.CONSTRUCTOR_INVOCATION || proposal.getKind() == CompletionProposal.ANONYMOUS_CLASS_CONSTRUCTOR_INVOCATION\n\t\t|| proposal.getKind() == CompletionProposal.ANONYMOUS_CLASS_DECLARATION) {\n\torg.eclipse.lsp4j.TextEdit edit = toRequiredTypeEdit(requiredProposal, trigger, proposal.canUseDiamond(context));\n\tcompletionBuffer.append(edit.getNewText());\n\trange = edit.getRange();\n} else if (addImports) {\n\torg.eclipse.lsp4j.TextEdit edit = toRequiredTypeEdit(requiredProposal, trigger, proposal.canUseDiamond(context));\n\tadditionalTextEdits.add(edit);\n}\nare all additional edits imports?", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487#discussion_r442928069", "createdAt": "2020-06-19T16:10:55Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/CompletionProposalReplacementProvider.java", "diffHunk": "@@ -111,31 +127,31 @@ public void updateReplacement(CompletionProposal proposal, CompletionItem item,\n \t\tStringBuilder completionBuffer = new StringBuilder();\n \t\tRange range = null;\n \t\tif (isSupportingRequiredProposals(proposal)) {\n-\t\t\tCompletionProposal[] requiredProposals= proposal.getRequiredProposals();\n+\t\t\tCompletionProposal[] requiredProposals = proposal.getRequiredProposals();\n \t\t\tif (requiredProposals != null) {\n \t\t\t\tfor (CompletionProposal requiredProposal : requiredProposals) {\n-\t\t\t\t\tswitch(requiredProposal.getKind()) {\n-\t\t\t\t\tcase CompletionProposal.TYPE_IMPORT:\n-\t\t\t\t\tcase CompletionProposal.METHOD_IMPORT:\n-\t\t\t\t\tcase CompletionProposal.FIELD_IMPORT:\n-\t\t\t\t\t\tappendImportProposal(completionBuffer, requiredProposal, proposal.getKind());\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tcase CompletionProposal.TYPE_REF:\n-\t\t\t\t\t\torg.eclipse.lsp4j.TextEdit edit = toRequiredTypeEdit(requiredProposal, trigger, proposal.canUseDiamond(context));\n+\t\t\t\t\tswitch (requiredProposal.getKind()) {\n+\t\t\t\t\t\tcase CompletionProposal.TYPE_IMPORT:\n+\t\t\t\t\t\tcase CompletionProposal.METHOD_IMPORT:\n+\t\t\t\t\t\tcase CompletionProposal.FIELD_IMPORT:\n+\t\t\t\t\t\t\tappendImportProposal(completionBuffer, requiredProposal, proposal.getKind());\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\tcase CompletionProposal.TYPE_REF:\n+\t\t\t\t\t\t\torg.eclipse.lsp4j.TextEdit edit = toRequiredTypeEdit(requiredProposal, trigger, proposal.canUseDiamond(context));\n \t\t\t\t\t\t\tif (proposal.getKind() == CompletionProposal.CONSTRUCTOR_INVOCATION || proposal.getKind() == CompletionProposal.ANONYMOUS_CLASS_CONSTRUCTOR_INVOCATION\n \t\t\t\t\t\t\t\t\t|| proposal.getKind() == CompletionProposal.ANONYMOUS_CLASS_DECLARATION) {\n-\t\t\t\t\t\t\tcompletionBuffer.append(edit.getNewText());\n-\t\t\t\t\t\t\trange = edit.getRange();\n-\t\t\t\t\t\t} else {\n-\t\t\t\t\t\t\tadditionalTextEdits.add(edit);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t\tdefault:\n-\t\t\t\t\t\t/*\n-\t\t\t\t\t\t * In 3.3 we only support the above required proposals, see\n-\t\t\t\t\t\t * CompletionProposal#getRequiredProposals()\n-\t\t\t\t\t\t */\n-\t\t\t\t\t\tAssert.isTrue(false);\n+\t\t\t\t\t\t\t\tcompletionBuffer.append(edit.getNewText());\n+\t\t\t\t\t\t\t\trange = edit.getRange();\n+\t\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\t\tadditionalTextEdits.add(edit);\n+\t\t\t\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25f24396a149d5c12fcb3534e730577c7891e4e1"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b10d60b804aeb67532470de6ba29c056e38fc3", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d1b10d60b804aeb67532470de6ba29c056e38fc3", "committedDate": "2020-06-24T08:22:09Z", "message": "support resolve additionalTextEdits\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25f24396a149d5c12fcb3534e730577c7891e4e1", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/25f24396a149d5c12fcb3534e730577c7891e4e1", "committedDate": "2020-06-19T08:07:27Z", "message": "call addImports only in resolve stage\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}, "afterCommit": {"oid": "d1b10d60b804aeb67532470de6ba29c056e38fc3", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/d1b10d60b804aeb67532470de6ba29c056e38fc3", "committedDate": "2020-06-24T08:22:09Z", "message": "support resolve additionalTextEdits\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a901a9fc7b918a5c1da0bc162cf7cf2c4b632d7", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/8a901a9fc7b918a5c1da0bc162cf7cf2c4b632d7", "committedDate": "2020-06-26T15:35:46Z", "message": "don't fill unimplemented methods in new type constructor\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MTI2Nzkx", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487#pullrequestreview-439126791", "createdAt": "2020-06-29T13:11:25Z", "commit": {"oid": "8a901a9fc7b918a5c1da0bc162cf7cf2c4b632d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMToyNVrOGqQN2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoxMTozNlrOGqQOTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1OTA2Ng==", "bodyText": "only use ${0} if snippets are supported by the client", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487#discussion_r446959066", "createdAt": "2020-06-29T13:11:25Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/AnonymousTypeCompletionProposal.java", "diffHunk": "@@ -91,10 +91,10 @@ public AnonymousTypeCompletionProposal(ICompilationUnit cu, int replacementOffse\n \t * @see JavaTypeCompletionProposal#updateReplacementString(IDocument,char,int,ImportRewrite)\n \t */\n \tpublic String updateReplacementString(IDocument document, int offset, ImportRewrite impRewrite) throws CoreException, BadLocationException {\n-\t\tString newBody = createNewBody(impRewrite);\n-\t\tif (newBody == null) {\n-\t\t\treturn null;\n-\t\t}\n+\t\t// Construct empty body for performance concern\n+\t\t// See https://github.com/microsoft/language-server-protocol/issues/1032#issuecomment-648748013\n+\t\tString newBody = \"{\\n\\t${0}\\n}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a901a9fc7b918a5c1da0bc162cf7cf2c4b632d7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk1OTE4MA==", "bodyText": "StringBuilder", "url": "https://github.com/eclipse/eclipse.jdt.ls/pull/1487#discussion_r446959180", "createdAt": "2020-06-29T13:11:36Z", "author": {"login": "fbricon"}, "path": "org.eclipse.jdt.ls.core/src/org/eclipse/jdt/ls/core/internal/contentassist/AnonymousTypeCompletionProposal.java", "diffHunk": "@@ -91,10 +91,10 @@ public AnonymousTypeCompletionProposal(ICompilationUnit cu, int replacementOffse\n \t * @see JavaTypeCompletionProposal#updateReplacementString(IDocument,char,int,ImportRewrite)\n \t */\n \tpublic String updateReplacementString(IDocument document, int offset, ImportRewrite impRewrite) throws CoreException, BadLocationException {\n-\t\tString newBody = createNewBody(impRewrite);\n-\t\tif (newBody == null) {\n-\t\t\treturn null;\n-\t\t}\n+\t\t// Construct empty body for performance concern\n+\t\t// See https://github.com/microsoft/language-server-protocol/issues/1032#issuecomment-648748013\n+\t\tString newBody = \"{\\n\\t${0}\\n}\";\n+\n \t\tStringBuffer buf = new StringBuffer(\"new A()\"); //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a901a9fc7b918a5c1da0bc162cf7cf2c4b632d7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "157ca612f519f9a26adb8845eeb7679b7ef4ace9", "author": {"user": {"login": "Eskibear", "name": "Yan Zhang"}}, "url": "https://github.com/eclipse/eclipse.jdt.ls/commit/157ca612f519f9a26adb8845eeb7679b7ef4ace9", "committedDate": "2020-06-29T15:17:33Z", "message": "use placeholder only when client supports snippet\n\nSigned-off-by: Yan Zhang <yanzh@microsoft.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1156, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}