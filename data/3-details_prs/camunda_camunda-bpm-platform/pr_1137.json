{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjczNDA4", "number": 1137, "title": "CAM-12763: feat(qa): add daily pipeline scaffold", "bodyText": "Add trigger for pipeline - once a day on SCM change;\nAdd check-sql-scripts stage;\nAdd shell script for check-sql-scripts stage;\nAdd H2 QA stages;\nDefine matrix stages;\nDefine structure of DB matrix stages;\nDefine JDK matrix stages;\n[TMP] Disable when block, so that stages are always executed;\n[TMP] Disable non-H2 DB stages, so we get a successfull view of the pipeline;\n[TMP] Disable stashing/unstashing of artifacts, we want to obtain a successful execution first.\n\nRelated to CAM-12712, CAM-12763", "createdAt": "2020-11-20T12:27:20Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137", "merged": true, "mergeCommit": {"oid": "ef5614565a6ad3cc5a1984b4b44404072e0d2d05"}, "closed": true, "closedAt": "2020-11-23T13:00:54Z", "author": {"login": "koevskinikola"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeZexWAFqTUzNTUzODE5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfUwvzAH2gAyNTI0NjczNDA4OjBmNDIyZWQ2YWIxYWI3YmViNDljZDY5OTA2Y2E1YzhmMmI2OWI2NWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1NTM4MTk4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#pullrequestreview-535538198", "createdAt": "2020-11-20T15:40:57Z", "commit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MDo1OFrOH3U6Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo1MjozOFrOH3VaWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NjI3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527776271", "createdAt": "2020-11-20T15:40:58Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3Njg5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n          \n          \n            \n                          runMaven(true, false, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527776897", "createdAt": "2020-11-20T15:41:54Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3Nzk0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/', 'verify -Pold-engine,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527777947", "createdAt": "2020-11-20T15:43:21Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3ODc5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527778798", "createdAt": "2020-11-20T15:44:25Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-rolling-update-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc4NDUzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527784539", "createdAt": "2020-11-20T15:52:38Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-rolling-update-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')\n+            }\n+          }\n+        }\n+        stage('PERFORMANCE-large-data-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 197}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MjI2OTg5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#pullrequestreview-536226989", "createdAt": "2020-11-23T07:43:22Z", "commit": {"oid": "066679761a901eaa3abcae27939a1ccd11a0c299"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82975289503e056429a2e3c3a1d8b62d142ca0ae", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/82975289503e056429a2e3c3a1d8b62d142ca0ae", "committedDate": "2020-11-23T12:54:49Z", "message": "feat(qa): add daily pipeline scaffold\n\n* Add trigger for pipeline - once a day on SCM change;\n* Add check-sql-scripts stage;\n* Add shell script for check-sql-scripts stage;\n* Add H2 QA stages;\n* Define matrix stages;\n* Define structure of DB matrix stages;\n* Define JDK matrix stages;\n* [TMP] Disable `when` block, so that stages are always executed;\n* [TMP] Disable `post` blocks for non-maven stages;\n* [TMP] Disable non-H2 DB stages, so we get a successfull view of the pipeline;\n* [TMP] Disable stashing/unstashing of artifacts, we want to obtain a successful execution first.\n\nRelated to CAM-12712, CAM-12763"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "066679761a901eaa3abcae27939a1ccd11a0c299", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/066679761a901eaa3abcae27939a1ccd11a0c299", "committedDate": "2020-11-20T16:33:52Z", "message": "SQUASH ME: add post junit action"}, "afterCommit": {"oid": "82975289503e056429a2e3c3a1d8b62d142ca0ae", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/82975289503e056429a2e3c3a1d8b62d142ca0ae", "committedDate": "2020-11-23T12:54:49Z", "message": "feat(qa): add daily pipeline scaffold\n\n* Add trigger for pipeline - once a day on SCM change;\n* Add check-sql-scripts stage;\n* Add shell script for check-sql-scripts stage;\n* Add H2 QA stages;\n* Define matrix stages;\n* Define structure of DB matrix stages;\n* Define JDK matrix stages;\n* [TMP] Disable `when` block, so that stages are always executed;\n* [TMP] Disable `post` blocks for non-maven stages;\n* [TMP] Disable non-H2 DB stages, so we get a successfull view of the pipeline;\n* [TMP] Disable stashing/unstashing of artifacts, we want to obtain a successful execution first.\n\nRelated to CAM-12712, CAM-12763"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c48dfc845a82adfbe7625c03729d19351b27b6f5", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c48dfc845a82adfbe7625c03729d19351b27b6f5", "committedDate": "2020-11-23T12:59:21Z", "message": "Update .ci/daily/Jenkinsfile\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46a35490e1a2071189624b2c95a48fc4fa132d8b", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/46a35490e1a2071189624b2c95a48fc4fa132d8b", "committedDate": "2020-11-23T12:59:55Z", "message": "Update .ci/daily/Jenkinsfile\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a8b561c076bf62adc0e8027340aec082433ec1a", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4a8b561c076bf62adc0e8027340aec082433ec1a", "committedDate": "2020-11-23T13:00:02Z", "message": "Update .ci/daily/Jenkinsfile\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa90ac2278d1f98f2371c88a54a000b27c9d0b7d", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/aa90ac2278d1f98f2371c88a54a000b27c9d0b7d", "committedDate": "2020-11-23T13:00:08Z", "message": "Update .ci/daily/Jenkinsfile\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f422ed6ab1ab7beb49cd69906ca5c8f2b69b65a", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0f422ed6ab1ab7beb49cd69906ca5c8f2b69b65a", "committedDate": "2020-11-23T13:00:14Z", "message": "Update .ci/daily/Jenkinsfile\n\nCo-authored-by: yanavasileva <yanavasileva@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2045, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}