{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MzUzMDI2", "number": 1193, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToxOToxNlrOFGWzUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozODoyMlrOFLNahg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjA5MzYxOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOToxOToxNlrOIHVPaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyMjowM1rOIIa54A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1ODk1Mg==", "bodyText": "It took quite a while for me to understand which elements we are trying to get to here specifically.\nWhat do you think about adding a little one-line explanation here to state which executions this is meant for?\nAlso, how confident are we that we do not include any unwanted executions with this as well? I have to admit that getting a good grip on which executions this might unwantedly include is quite tough. From a gut feeling, I would say this could also include other activity types, e.g. user tasks with boundary events?\nDo you think it makes sense to add some test cases for other activity types to ensure they are not affected by this? Or, if we already know there will be others affected by this, add test cases for them as well of course?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r544558952", "createdAt": "2020-12-16T19:19:16Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "diffHunk": "@@ -71,6 +72,9 @@ protected void eventNotificationsCompleted(PvmExecutionImpl execution) {\n \n     } else {\n       if (execution.isScope()) {\n+        if(execution instanceof ExecutionEntity && !execution.isProcessInstanceExecution() && execution.isCanceled()) {\n+          execution.setSkipIoMappings(execution.isSkipIoMappings() || execution.getProcessEngine().getProcessEngineConfiguration().isSkipOutputMappingOnCanceledTasks());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38339a41aa03e53faffeea84b036057afbb2e21a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwMDMyMA==", "bodyText": "As discussed I simplified the condition and made sure only external tasks are included. Will discuss this decision next year. Let's put this on hold for now.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r545700320", "createdAt": "2020-12-18T09:22:03Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "diffHunk": "@@ -71,6 +72,9 @@ protected void eventNotificationsCompleted(PvmExecutionImpl execution) {\n \n     } else {\n       if (execution.isScope()) {\n+        if(execution instanceof ExecutionEntity && !execution.isProcessInstanceExecution() && execution.isCanceled()) {\n+          execution.setSkipIoMappings(execution.isSkipIoMappings() || execution.getProcessEngine().getProcessEngineConfiguration().isSkipOutputMappingOnCanceledTasks());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU1ODk1Mg=="}, "originalCommit": {"oid": "38339a41aa03e53faffeea84b036057afbb2e21a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTkzNjM5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyODowMFrOIIbQ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToyOToyMVrOIIbWug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNjIyMA==", "bodyText": "I know it's a micro-optimization \ud83d\ude01, but the execution.isCanceled() is quite cheap and probably very selective (doesn't occur that often) - putting it first, we don't have to check the activity type in most cases I would imagine?\nFeel free to ignore it, it just caught my eye \ud83d\ude03", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r545706220", "createdAt": "2020-12-18T09:28:00Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "diffHunk": "@@ -72,7 +72,8 @@ protected void eventNotificationsCompleted(PvmExecutionImpl execution) {\n \n     } else {\n       if (execution.isScope()) {\n-        if(execution instanceof ExecutionEntity && !execution.isProcessInstanceExecution() && execution.isCanceled()) {\n+        if(isOutputMappingSkippableForActivity(activity) && execution.isCanceled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c1b5b462170fc0379ed33d49d8271527ccd63bf"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNzcwNg==", "bodyText": "Sure let's do it :)", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r545707706", "createdAt": "2020-12-18T09:29:21Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/operation/PvmAtomicOperationDeleteCascadeFireActivityEnd.java", "diffHunk": "@@ -72,7 +72,8 @@ protected void eventNotificationsCompleted(PvmExecutionImpl execution) {\n \n     } else {\n       if (execution.isScope()) {\n-        if(execution instanceof ExecutionEntity && !execution.isProcessInstanceExecution() && execution.isCanceled()) {\n+        if(isOutputMappingSkippableForActivity(activity) && execution.isCanceled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTcwNjIyMA=="}, "originalCommit": {"oid": "5c1b5b462170fc0379ed33d49d8271527ccd63bf"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk2NDYyOnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozMzowNFrOIOQIUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTo0NTozOFrOIOQiqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTI0OQ==", "bodyText": "I think this will not be necessary anymore as the tests have been moved. \ud83d\ude03", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r551815249", "createdAt": "2021-01-05T09:33:04Z", "author": {"login": "tmetzke"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "diffHunk": "@@ -103,6 +103,7 @@ public void setUp() throws Exception {\n   @After\n   public void tearDown() throws Exception {\n     ClockUtil.reset();\n+    processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c4f7964b3d3e31ddb2da1dfebafe76aab7d73e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNzQ0Mg==", "bodyText": "damn it! :D", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r551817442", "createdAt": "2021-01-05T09:36:54Z", "author": {"login": "mboskamp"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "diffHunk": "@@ -103,6 +103,7 @@ public void setUp() throws Exception {\n   @After\n   public void tearDown() throws Exception {\n     ClockUtil.reset();\n+    processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTI0OQ=="}, "originalCommit": {"oid": "e2c4f7964b3d3e31ddb2da1dfebafe76aab7d73e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyMDA5Ng==", "bodyText": "I left the other changes to the test class although they are not related to the ticket.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r551820096", "createdAt": "2021-01-05T09:42:09Z", "author": {"login": "mboskamp"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "diffHunk": "@@ -103,6 +103,7 @@ public void setUp() throws Exception {\n   @After\n   public void tearDown() throws Exception {\n     ClockUtil.reset();\n+    processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTI0OQ=="}, "originalCommit": {"oid": "e2c4f7964b3d3e31ddb2da1dfebafe76aab7d73e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgyMTk5Mg==", "bodyText": "Yeah, that is absolutely fine, improving test classes is always nice \ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r551821992", "createdAt": "2021-01-05T09:45:38Z", "author": {"login": "tmetzke"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "diffHunk": "@@ -103,6 +103,7 @@ public void setUp() throws Exception {\n   @After\n   public void tearDown() throws Exception {\n     ClockUtil.reset();\n+    processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxNTI0OQ=="}, "originalCommit": {"oid": "e2c4f7964b3d3e31ddb2da1dfebafe76aab7d73e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3Mjk4NDM4OnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozODoyMlrOIOQTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwOTozODoyMlrOIOQTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTgxODE4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1193#discussion_r551818188", "createdAt": "2021-01-05T09:38:22Z", "author": {"login": "mboskamp"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/externaltask/ExternalTaskServiceTest.java", "diffHunk": "@@ -103,6 +103,7 @@ public void setUp() throws Exception {\n   @After\n   public void tearDown() throws Exception {\n     ClockUtil.reset();\n+    processEngineConfiguration.setSkipOutputMappingOnCanceledActivities(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c4f7964b3d3e31ddb2da1dfebafe76aab7d73e"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4390, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}