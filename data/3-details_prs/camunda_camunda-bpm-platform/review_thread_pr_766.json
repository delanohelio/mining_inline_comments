{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Mzk5NTYy", "number": 766, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowNlrODtgZkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1NzoxMlrODthQNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQzMzQ3OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowNlrOF-9-Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoxNzowMFrOF_CyKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM4Ng==", "bodyText": "awesome!", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401571386", "createdAt": "2020-04-01T12:20:06Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "diffHunk": "@@ -21,8 +22,15 @@\n       </#if>\n \n       \"type\": \"${type}\"\n-      <#if format?has_content>\n-      ,\"format\": \"${format}\"\n+\n+      <#if type == \"array\">,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MzYxMw==", "bodyText": "let's mention this in the openapi readme", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401573613", "createdAt": "2020-04-01T12:23:58Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "diffHunk": "@@ -21,8 +22,15 @@\n       </#if>\n \n       \"type\": \"${type}\"\n-      <#if format?has_content>\n-      ,\"format\": \"${format}\"\n+\n+      <#if type == \"array\">,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM4Ng=="}, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1MDIxNw==", "bodyText": "I will document this in a separate commit in the main ticket (CAM-11485)", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401650217", "createdAt": "2020-04-01T14:17:00Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "diffHunk": "@@ -21,8 +22,15 @@\n       </#if>\n \n       \"type\": \"${type}\"\n-      <#if format?has_content>\n-      ,\"format\": \"${format}\"\n+\n+      <#if type == \"array\">,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM4Ng=="}, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ0MDQ3OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskDto.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTo1NFrOF--Cgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMTo1NFrOF--Cgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjQ4Mw==", "bodyText": "processDefinitionVersionTag is missing in the docs-manual:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n               <@lib.property\n          \n          \n            \n                  name = \"processDefinitionVersionTag\"\n          \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  desc = \"The version tag of the process definition the external task is defined in.\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401572483", "createdAt": "2020-04-01T12:21:54Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskDto.ftl", "diffHunk": "@@ -0,0 +1,97 @@\n+<@lib.dto\n+    title = \"ExternalTaskDto\"\n+    desc = \"An External Task object with the following properties\" >\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"The id of the activity that this external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"activityInstanceId\"\n+      type = \"string\"\n+      desc = \"The id of the activity instance that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"errorMessage\"\n+      type = \"string\"\n+      desc = \"The full error message submitted with the latest reported failure executing this task; `null` if no\n+              failure was reported previously or if no error message was submitted\" />\n+\n+  <@lib.property\n+      name = \"errorDetails\"\n+      type = \"string\"\n+      desc = \"The error details submitted with the latest reported failure executing this task. `null` if no failure\n+              was reported previously or if no error details was submitted\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"The id of the execution that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"id\"\n+      type = \"string\"\n+      desc = \"The id of the external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationTime\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"The date that the task's most recent lock expires or has expired.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"The id of the process definition the external task is defined in.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionKey\"\n+      type = \"string\"\n+      desc = \"The key of the process definition the external task is defined in.\" />\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDQ3NTU2OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/count/post.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo1NVrOF--YOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo1NVrOF--YOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3ODA0MA==", "bodyText": "could we discuss briefly the sorting description for POST /count", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401578040", "createdAt": "2020-04-01T12:31:55Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/count/post.ftl", "diffHunk": "@@ -0,0 +1,42 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"queryExternalTasksCount\"\n+      tag = \"External Task\"\n+      desc = \"Queries for the number of external tasks that fulfill given parameters. This method takes the same message\n+              body as the [Get External Tasks (POST)](${docsUrl}/reference/rest/external-task/post-query/) method.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"ExternalTaskQueryDto\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDU3MzMyOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskQueryDto.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1NzoxMlrOF-_VBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1NzoxMlrOF-_VBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MzYwNA==", "bodyText": "update desc that this doesn't apply for count query.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401593604", "createdAt": "2020-04-01T12:57:12Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskQueryDto.ftl", "diffHunk": "@@ -0,0 +1,136 @@\n+<@lib.dto\n+    title = \"ExternalTaskQueryDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+  <@lib.property\n+      name = \"externalTaskId\"\n+      type = \"string\"\n+      desc = \"Filter by an external task's id.\" />\n+\n+  <@lib.property\n+      name = \"topicName\"\n+      type = \"string\"\n+      desc = \"Filter by an external task topic.\" />\n+\n+  <@lib.property\n+      name = \"workerId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the worker that the task was most recently locked by.\" />\n+\n+  <@lib.property\n+      name = \"locked\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\n+              Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"notLocked\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\n+              Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"withRetriesLeft\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n+              `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"noRetriesLeft\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\n+              external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationAfter\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"Restrict to external tasks that have a lock that expires after a given date. By\n+              [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+              `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationBefore\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"Restrict to external tasks that have a lock that expires before a given date. By\n+              [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+              `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\" />\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the activity that an external task is created for.\" />\n+\n+  <@lib.property\n+      name = \"activityIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by the comma-separated list of ids of the activities that an external task is created for.\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the execution that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"processInstanceId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the process instance that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"processInstanceIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by a comma-separated list of process instance ids that an external task may belong to.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the process definition that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"tenantIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by a comma-separated list of tenant ids.\n+              An external task must have one of the given tenant ids.\" />\n+\n+  <@lib.property\n+      name = \"active\"\n+      type = \"boolean\"\n+      desc = \"Only include active tasks. Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"suspended\"\n+      type = \"boolean\"\n+      desc = \"Only include suspended tasks. Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"priorityHigherThanOrEquals\"\n+      type = \"integer\"\n+      format = \"int64\"\n+      desc = \"Only include jobs with a priority higher than or equal to the given value.\n+              Value must be a valid `long` value.\" />\n+\n+  <@lib.property\n+      name = \"priorityLowerThanOrEquals\"\n+      type = \"integer\"\n+      format = \"int64\"\n+      desc = \"Only include jobs with a priority lower than or equal to the given value.\n+              Value must be a valid `long` value.\" />\n+\n+  \"sorting\": {\n+    \"type\": \"array\",\n+    \"description\": \"A JSON array of criteria to sort the result by. Each element of the array is a JSON object that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 125}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4580, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}