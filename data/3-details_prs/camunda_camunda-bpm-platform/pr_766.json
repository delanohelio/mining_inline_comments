{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2Mzk5NTYy", "number": 766, "title": "CAM-11697: feat(rest): add external task query & count openapi endpoints", "bodyText": "Related to CAM-11540, CAM-11697", "createdAt": "2020-03-31T15:07:12Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766", "merged": true, "mergeCommit": {"oid": "8f6bca945886698273c4618709717dde2213ba5b"}, "closed": true, "closedAt": "2020-04-01T15:11:55Z", "author": {"login": "koevskinikola"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTXAT8AFqTM4NTUyOTA0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTZJJwABqjMxODgzNjc0MDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTI5MDQy", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#pullrequestreview-385529042", "createdAt": "2020-04-01T12:20:06Z", "commit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjoyMDowNlrOF-9-Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjozMTo1NVrOF--YOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM4Ng==", "bodyText": "awesome!", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401571386", "createdAt": "2020-04-01T12:20:06Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "diffHunk": "@@ -21,8 +22,15 @@\n       </#if>\n \n       \"type\": \"${type}\"\n-      <#if format?has_content>\n-      ,\"format\": \"${format}\"\n+\n+      <#if type == \"array\">,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MjQ4Mw==", "bodyText": "processDefinitionVersionTag is missing in the docs-manual:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n               <@lib.property\n          \n          \n            \n                  name = \"processDefinitionVersionTag\"\n          \n          \n            \n                  type = \"string\"\n          \n          \n            \n                  desc = \"The version tag of the process definition the external task is defined in.\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401572483", "createdAt": "2020-04-01T12:21:54Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskDto.ftl", "diffHunk": "@@ -0,0 +1,97 @@\n+<@lib.dto\n+    title = \"ExternalTaskDto\"\n+    desc = \"An External Task object with the following properties\" >\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"The id of the activity that this external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"activityInstanceId\"\n+      type = \"string\"\n+      desc = \"The id of the activity instance that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"errorMessage\"\n+      type = \"string\"\n+      desc = \"The full error message submitted with the latest reported failure executing this task; `null` if no\n+              failure was reported previously or if no error message was submitted\" />\n+\n+  <@lib.property\n+      name = \"errorDetails\"\n+      type = \"string\"\n+      desc = \"The error details submitted with the latest reported failure executing this task. `null` if no failure\n+              was reported previously or if no error details was submitted\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"The id of the execution that the external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"id\"\n+      type = \"string\"\n+      desc = \"The id of the external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationTime\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"The date that the task's most recent lock expires or has expired.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"The id of the process definition the external task is defined in.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionKey\"\n+      type = \"string\"\n+      desc = \"The key of the process definition the external task is defined in.\" />\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MzYxMw==", "bodyText": "let's mention this in the openapi readme", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401573613", "createdAt": "2020-04-01T12:23:58Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/lib/utils.ftl", "diffHunk": "@@ -21,8 +22,15 @@\n       </#if>\n \n       \"type\": \"${type}\"\n-      <#if format?has_content>\n-      ,\"format\": \"${format}\"\n+\n+      <#if type == \"array\">,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MTM4Ng=="}, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3ODA0MA==", "bodyText": "could we discuss briefly the sorting description for POST /count", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401578040", "createdAt": "2020-04-01T12:31:55Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/count/post.ftl", "diffHunk": "@@ -0,0 +1,42 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"queryExternalTasksCount\"\n+      tag = \"External Task\"\n+      desc = \"Queries for the number of external tasks that fulfill given parameters. This method takes the same message\n+              body as the [Get External Tasks (POST)](${docsUrl}/reference/rest/external-task/post-query/) method.\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"ExternalTaskQueryDto\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NTU2OTcw", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#pullrequestreview-385556970", "createdAt": "2020-04-01T12:57:12Z", "commit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1NzoxMlrOF-_VBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1NzoxMlrOF-_VBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU5MzYwNA==", "bodyText": "update desc that this doesn't apply for count query.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#discussion_r401593604", "createdAt": "2020-04-01T12:57:12Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/external-task/ExternalTaskQueryDto.ftl", "diffHunk": "@@ -0,0 +1,136 @@\n+<@lib.dto\n+    title = \"ExternalTaskQueryDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+  <@lib.property\n+      name = \"externalTaskId\"\n+      type = \"string\"\n+      desc = \"Filter by an external task's id.\" />\n+\n+  <@lib.property\n+      name = \"topicName\"\n+      type = \"string\"\n+      desc = \"Filter by an external task topic.\" />\n+\n+  <@lib.property\n+      name = \"workerId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the worker that the task was most recently locked by.\" />\n+\n+  <@lib.property\n+      name = \"locked\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that are currently locked (i.e., they have a lock time and it has not expired).\n+              Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"notLocked\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that are currently not locked (i.e., they have no lock or it has expired).\n+              Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"withRetriesLeft\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that have a positive (&gt; 0) number of retries (or `null`). Value may only be\n+              `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"noRetriesLeft\"\n+      type = \"boolean\"\n+      desc = \"Only include external tasks that have 0 retries. Value may only be `true`, as `false` matches any\n+              external task.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationAfter\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"Restrict to external tasks that have a lock that expires after a given date. By\n+              [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+              `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\" />\n+\n+  <@lib.property\n+      name = \"lockExpirationBefore\"\n+      type = \"string\"\n+      format = \"date-time\"\n+      desc = \"Restrict to external tasks that have a lock that expires before a given date. By\n+              [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+              `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\" />\n+\n+  <@lib.property\n+      name = \"activityId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the activity that an external task is created for.\" />\n+\n+  <@lib.property\n+      name = \"activityIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by the comma-separated list of ids of the activities that an external task is created for.\" />\n+\n+  <@lib.property\n+      name = \"executionId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the execution that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"processInstanceId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the process instance that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"processInstanceIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by a comma-separated list of process instance ids that an external task may belong to.\" />\n+\n+  <@lib.property\n+      name = \"processDefinitionId\"\n+      type = \"string\"\n+      desc = \"Filter by the id of the process definition that an external task belongs to.\" />\n+\n+  <@lib.property\n+      name = \"tenantIdIn\"\n+      type = \"array\"\n+      itemType = \"string\"\n+      desc = \"Filter by a comma-separated list of tenant ids.\n+              An external task must have one of the given tenant ids.\" />\n+\n+  <@lib.property\n+      name = \"active\"\n+      type = \"boolean\"\n+      desc = \"Only include active tasks. Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"suspended\"\n+      type = \"boolean\"\n+      desc = \"Only include suspended tasks. Value may only be `true`, as `false` matches any external task.\" />\n+\n+  <@lib.property\n+      name = \"priorityHigherThanOrEquals\"\n+      type = \"integer\"\n+      format = \"int64\"\n+      desc = \"Only include jobs with a priority higher than or equal to the given value.\n+              Value must be a valid `long` value.\" />\n+\n+  <@lib.property\n+      name = \"priorityLowerThanOrEquals\"\n+      type = \"integer\"\n+      format = \"int64\"\n+      desc = \"Only include jobs with a priority lower than or equal to the given value.\n+              Value must be a valid `long` value.\" />\n+\n+  \"sorting\": {\n+    \"type\": \"array\",\n+    \"description\": \"A JSON array of criteria to sort the result by. Each element of the array is a JSON object that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c71854cd61419eac6b3ac665d935607868fcfe1e"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjU1ODAx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/766#pullrequestreview-385655801", "createdAt": "2020-04-01T14:43:59Z", "commit": {"oid": "3fba2a91f8401ce4f6b07672744134adc1e0d209"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f03e0ed2fc2d6aa964e6f21153e3c509f8efe184", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f03e0ed2fc2d6aa964e6f21153e3c509f8efe184", "committedDate": "2020-04-01T15:06:56Z", "message": "feat(rest): add external task query & count openapi endpoints\n\nRelated to CAM-11540, CAM-11697"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c29dfa65a904270c2af2570e86189b02c25d3cd", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1c29dfa65a904270c2af2570e86189b02c25d3cd", "committedDate": "2020-04-01T15:06:56Z", "message": "fix(open-api): fix quotes in task variables endpoint\n\n* causing build failure on Windows OS"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fba2a91f8401ce4f6b07672744134adc1e0d209", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/3fba2a91f8401ce4f6b07672744134adc1e0d209", "committedDate": "2020-04-01T14:20:33Z", "message": "SQUASH ME: implement review hints"}, "afterCommit": {"oid": "1c29dfa65a904270c2af2570e86189b02c25d3cd", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1c29dfa65a904270c2af2570e86189b02c25d3cd", "committedDate": "2020-04-01T15:06:56Z", "message": "fix(open-api): fix quotes in task variables endpoint\n\n* causing build failure on Windows OS"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1824, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}