{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxOTc3ODQ0", "number": 618, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNjozNVrODXx7nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNjozNVrODXx7nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjYxOTE5OnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwOToyNjozNVrOFdQ1pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNTo0MDowN1rOFdb7lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyODkwMw==", "bodyText": "I think that we need a second test like this one, but with a third (existing) Process Instance. The purpose would be to assert that the new query parameter successfully filters Process Instances by their IDs.\nThe current tests show that a non-existent ID will not provide any additional Process Instances, however, there aren't any additional Process Instances in the database, to detect if the filter is failing.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/618#discussion_r366228903", "createdAt": "2020-01-14T09:26:35Z", "author": {"login": "koevskinikola"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryTest.java", "diffHunk": "@@ -4812,6 +4813,35 @@ public void testQueryByNameNotLike() {\n     assertEquals(11, query.count());\n   }\n \n+  @Deployment(resources = \"org/camunda/bpm/engine/test/api/task/TaskQueryTest.testProcessDefinition.bpmn20.xml\")\n+  public void testQueryByProcessInstanceIdIn() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "195b556da85ae00ad11fe0de87394093e7f154e4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQxMDY0NA==", "bodyText": "Please check https://github.com/camunda/camunda-bpm-platform/pull/618/files#diff-c41cc0cd1332900de7fca008a11cc53cR4818-R4821", "url": "https://github.com/camunda/camunda-bpm-platform/pull/618#discussion_r366410644", "createdAt": "2020-01-14T15:40:07Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/task/TaskQueryTest.java", "diffHunk": "@@ -4812,6 +4813,35 @@ public void testQueryByNameNotLike() {\n     assertEquals(11, query.count());\n   }\n \n+  @Deployment(resources = \"org/camunda/bpm/engine/test/api/task/TaskQueryTest.testProcessDefinition.bpmn20.xml\")\n+  public void testQueryByProcessInstanceIdIn() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjIyODkwMw=="}, "originalCommit": {"oid": "195b556da85ae00ad11fe0de87394093e7f154e4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4728, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}