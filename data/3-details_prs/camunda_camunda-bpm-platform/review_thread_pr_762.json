{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NjQ2NjM3", "number": 762, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo0MTowOVrODtFvOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo0ODowN1rODtHhoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjA2NTIxOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo0MTowOVrOF-TzjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo0MTowOVrOF-TzjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4MDUyNQ==", "bodyText": "should be array", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400880525", "createdAt": "2020-03-31T12:41:09Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "diffHunk": "@@ -0,0 +1,21 @@\n+<@lib.dto\n+    title = \"RedeploymentDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+    <@lib.property\n+        name = \"resourceIds\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjA2NjA3OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo0MToyMlrOF-T0Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo0MToyMlrOF-T0Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg4MDY2Ng==", "bodyText": "should be array", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400880666", "createdAt": "2020-03-31T12:41:22Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/repository/RedeploymentDto.ftl", "diffHunk": "@@ -0,0 +1,21 @@\n+<@lib.dto\n+    title = \"RedeploymentDto\"\n+    desc = \"A JSON object with the following properties:\" >\n+\n+    <@lib.property\n+        name = \"resourceIds\"\n+        type = \"string\"\n+        desc = \"A list of deployment resource ids to re-deploy.\" />\n+\n+    <@lib.property\n+        name = \"resourceNames\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjEyNzEzOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NTo1NVrOF-UZfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NTo1NVrOF-UZfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDIzOQ==", "bodyText": "boolean?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890239", "createdAt": "2020-03-31T12:55:55Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjEyODY1OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NjoxNVrOF-UaaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NjoxNVrOF-UaaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDQ3Mw==", "bodyText": "boolean?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890473", "createdAt": "2020-03-31T12:56:15Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjEyOTYyOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NjoyOVrOF-Ua_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NjoyOVrOF-Ua_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDYyMg==", "bodyText": "missing date format", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890622", "createdAt": "2020-03-31T12:56:29Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjEzMDc0OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1Njo0MlrOF-UboA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1Njo0MlrOF-UboA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MDc4NA==", "bodyText": "missing date format", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400890784", "createdAt": "2020-03-31T12:56:42Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Restricts to all deployments after the given date.\n+                By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+                `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\"/>\n+\n+    <@lib.parameter\n+        name = \"before\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjEzMjI3OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NzowNlrOF-UcrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMjo1NzowNlrOF-UcrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDg5MTA1Mw==", "bodyText": "boolean?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400891053", "createdAt": "2020-03-31T12:57:06Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/count/get.ftl", "diffHunk": "@@ -0,0 +1,104 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentsCount\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for the number of deployments that fulfill given parameters. Takes the same parameters as the\n+              [Get Deployments](${docsUrl}/reference/rest/deployment/get-query/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjE5NjIwOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzoxMTo1N1rOF-VD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0NzoxM1rOF_EMYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw==", "bodyText": "do you mind to add this example in this PR\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"Request successful.\"/>\n          \n          \n            \n                    desc = \"Request successful.\"\n          \n          \n            \n                    examples = ['\"example-1\": {\n          \n          \n            \n                                   \"summary\": \"POST `/deployment/create`\",\n          \n          \n            \n                                   \"value\": [\n          \n          \n            \n                                     {\n          \n          \n            \n                                         \"links\": [\n          \n          \n            \n                                             {\n          \n          \n            \n                                                 \"method\": \"GET\",\n          \n          \n            \n                                                 \"href\": \"http://localhost:38080/rest-test/deployment/aDeploymentId\",\n          \n          \n            \n                                                 \"rel\": \"self\"\n          \n          \n            \n                                             }\n          \n          \n            \n                                         ],\n          \n          \n            \n                                         \"id\": \"aDeploymentId\",\n          \n          \n            \n                                         \"name\": \"aName\",\n          \n          \n            \n                                         \"source\": \"process application\",\n          \n          \n            \n                                         \"deploymentTime\": \"2013-01-23T13:59:43.000+0200\",\n          \n          \n            \n                                         \"tenantId\": null,\n          \n          \n            \n                                         \"deployedProcessDefinitions\": {\n          \n          \n            \n                                             \"aProcDefId\": {\n          \n          \n            \n                                                 \"id\": \"aProcDefId\",\n          \n          \n            \n                                                 \"key\": \"aKey\",\n          \n          \n            \n                                                 \"category\": \"aCategory\",\n          \n          \n            \n                                                 \"description\": \"aDescription\",\n          \n          \n            \n                                                 \"name\": \"aName\",\n          \n          \n            \n                                                 \"version\": 42,\n          \n          \n            \n                                                 \"resource\": \"aResourceName\",\n          \n          \n            \n                                                 \"deploymentId\": \"aDeploymentId\",\n          \n          \n            \n                                                 \"diagram\": \"aResourceName.png\",\n          \n          \n            \n                                                 \"suspended\": true,\n          \n          \n            \n                                                 \"tenantId\": null,\n          \n          \n            \n                                                 \"versionTag\": null\n          \n          \n            \n                                             }\n          \n          \n            \n                                         },\n          \n          \n            \n                                         \"deployedCaseDefinitions\": null,\n          \n          \n            \n                                         \"deployedDecisionDefinitions\": null,\n          \n          \n            \n                                         \"deployedDecisionRequirementsDefinitions\": null\n          \n          \n            \n                                     }\n          \n          \n            \n                                   ]\n          \n          \n            \n                                 }']/>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400901077", "createdAt": "2020-03-31T13:11:57Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTAxOQ==", "bodyText": "do you mind to add this example in this PR for 400 response:\n        examples = ['\"example-1\": {\n                       \"summary\": \"GET `/deployment?name=deploymentName`\",\n                       \"value\": [\n                         {\n                             \"type\": \"ParseException\",\n                             \"message\": \"ENGINE-09005 Could not parse BPMN process. Errors: Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.\",\n                             \"details\": {\n                                 \"invoice.bpmn\": {\n                                     \"errors\": [\n                                         {\n                                             \"message\": \"Exclusive Gateway 'ExclusiveGateway_1' has outgoing sequence flow 'SequenceFlow_0' without condition which is not the default flow.\",\n                                             \"line\": 77,\n                                             \"column\": 15,\n                                             \"mainBpmnElementId\": \"ExclusiveGateway_1\",\n                                             \"bpmnElementIds\": [\n                                                 \"ExclusiveGateway_1\",\n                                                 \"SequenceFlow_0\"\n                                             ]\n                                         }\n                                     ],\n                                     \"warnings\": [\n                                         {\n                                             \"message\": \"It is not recommended to use a cancelling boundary timer event with a time cycle.\",\n                                             \"line\": 87,\n                                             \"column\": 20,\n                                             \"mainBpmnElementId\": \"BoundaryEvent_1\",\n                                             \"bpmnElementIds\": [\n                                                 \"BoundaryEvent_1\"\n                                             ]\n                                         }\n                                     ]\n                                 }\n                             }\n                         }\n                       ]\n                     }']", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915019", "createdAt": "2020-03-31T13:31:06Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkzODM1MQ==", "bodyText": "\ud83d\ude4f and add the following in the description of 400 response:\nSee the [Introduction](/reference/rest/overview/#parse-exceptions) for the error response format.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400938351", "createdAt": "2020-03-31T14:02:22Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwOTYxNQ==", "bodyText": "I'll add the examples together with the rest of the review hints.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401609615", "createdAt": "2020-04-01T13:21:36Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3MzMxMg==", "bodyText": "thank you", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401673312", "createdAt": "2020-04-01T14:47:13Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/create/post.ftl", "diffHunk": "@@ -16,7 +16,7 @@\n   \"responses\": {\n     <@lib.response\n         code = \"200\"\n-        dto = \"DeploymentDto\"\n+        dto = \"DeploymentWithDefinitionsDto\"\n         desc = \"Request successful.\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkwMTA3Nw=="}, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjI4Nzg5OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMjowNlrOF-V9GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMjowNlrOF-V9GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTczNw==", "bodyText": "boolean", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915737", "createdAt": "2020-03-31T13:32:06Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjI4ODgyOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMjoyMFrOF-V9tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMjoyMFrOF-V9tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNTg5NQ==", "bodyText": "boolean", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400915895", "createdAt": "2020-03-31T13:32:20Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjI5Mjk4OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzoxNlrOF-WAYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzoxNlrOF-WAYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNjU3OQ==", "bodyText": "boolean", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400916579", "createdAt": "2020-03-31T13:33:16Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjI5MzkxOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzoyOVrOF-WBAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzoyOVrOF-WBAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNjczNg==", "bodyText": "format should be date", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400916736", "createdAt": "2020-03-31T13:33:29Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Restricts to all deployments after the given date.\n+                By [default](${docsUrl}/reference/rest/overview/date-format/), the date must have the format\n+                `yyyy-MM-dd'T'HH:mm:ss.SSSZ`, e.g., `2013-01-23T14:42:45.000+0200`.\"/>\n+\n+    <@lib.parameter\n+        name = \"before\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjI5NTk1OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzo1NFrOF-WCMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzozMzo1NFrOF-WCMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkxNzA0Mw==", "bodyText": "format should be date", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400917043", "createdAt": "2020-03-31T13:33:54Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/get.ftl", "diffHunk": "@@ -0,0 +1,119 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeployments\"\n+      tag = \"Deployment\"\n+      desc = \"Queries for deployments that fulfill given parameters. Parameters may be the properties of deployments,\n+              such as the id or name or a range of the deployment time. The size of the result set can be retrieved by\n+              using the [Get Deployment count](${docsUrl}/reference/rest/deployment/get-query-count/) method.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by deployment id\"/>\n+\n+    <@lib.parameter\n+        name = \"name\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name. Exact match.\"/>\n+\n+    <@lib.parameter\n+        name = \"nameLike\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment name that the parameter is a substring of. The parameter can include the\n+                wildcard `%` to express like-strategy such as: starts with (`%`name), ends with (name`%`) or contains\n+                (`%`name`%`).\" />\n+\n+    <@lib.parameter\n+        name = \"source\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutSource\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by the deployment source whereby source is equal to `null`.\"/>\n+\n+    <@lib.parameter\n+        name = \"tenantIdIn\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Filter by a comma-separated list of tenant ids. A deployment must have one of the given tenant ids.\"/>\n+\n+    <@lib.parameter\n+        name = \"withoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Only include deployments which belong to no tenant. Value may only be `true`, as `false` is the default\n+                behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"includeDeploymentsWithoutTenantId\"\n+        location = \"query\"\n+        type = \"string\"\n+        desc = \"Include deployments which belong to no tenant. Can be used in combination with `tenantIdIn`. Value may\n+                only be `true`, as `false` is the default behavior.\"/>\n+\n+    <@lib.parameter\n+        name = \"after\"\n+        location = \"query\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjM1NzU3OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo0Nzo1OVrOF-Wp3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo0Nzo1OVrOF-Wp3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzE5Nw==", "bodyText": "\"type\": \"string\",\n\"format\": \"binary\",\nare missing?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400927197", "createdAt": "2020-03-31T13:47:59Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "diffHunk": "@@ -0,0 +1,55 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentResourceData\"\n+      tag = \"Deployment\"\n+      desc = \"Retrieves the binary content of a deployment resource for the given deployment by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the deployment.\" />\n+\n+    <@lib.parameter\n+        name = \"resourceId\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the deployment resource.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful. The media type of the response depends on the filename.\",\n+      \"content\": {\n+        \"application/octet-stream\": {\n+          \"schema\": {\n+            \"description\": \"For files without any MIME type information, a byte stream is returned.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjM1ODA5OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMzo0ODowN1rOF-WqMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzozMDoxN1rOF_Ar0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzI4Mw==", "bodyText": "\"type\": \"string\",\n\"format\": \"binary\",\nare missing?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r400927283", "createdAt": "2020-03-31T13:48:07Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "diffHunk": "@@ -0,0 +1,55 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentResourceData\"\n+      tag = \"Deployment\"\n+      desc = \"Retrieves the binary content of a deployment resource for the given deployment by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the deployment.\" />\n+\n+    <@lib.parameter\n+        name = \"resourceId\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the deployment resource.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful. The media type of the response depends on the filename.\",\n+      \"content\": {\n+        \"application/octet-stream\": {\n+          \"schema\": {\n+            \"description\": \"For files without any MIME type information, a byte stream is returned.\"\n+          }\n+        },\n+        \"application/xml\": {\n+          \"schema\": {\n+            \"description\": \"Files with MIME type information are returned as the saved type. For example, a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxNTgyNQ==", "bodyText": "Here, the media type should be a wildcard since it depends on the MIME type. Wildcard media types are possible in the OpenAPI spec (documented here: https://swagger.io/docs/specification/media-types/)", "url": "https://github.com/camunda/camunda-bpm-platform/pull/762#discussion_r401615825", "createdAt": "2020-04-01T13:30:17Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/deployment/{id}/resources/{resourceId}/data/get.ftl", "diffHunk": "@@ -0,0 +1,55 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getDeploymentResourceData\"\n+      tag = \"Deployment\"\n+      desc = \"Retrieves the binary content of a deployment resource for the given deployment by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the deployment.\" />\n+\n+    <@lib.parameter\n+        name = \"resourceId\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The id of the deployment resource.\" />\n+\n+  ],\n+\n+  \"responses\" : {\n+\n+    \"200\": {\n+      \"description\": \"Request successful. The media type of the response depends on the filename.\",\n+      \"content\": {\n+        \"application/octet-stream\": {\n+          \"schema\": {\n+            \"description\": \"For files without any MIME type information, a byte stream is returned.\"\n+          }\n+        },\n+        \"application/xml\": {\n+          \"schema\": {\n+            \"description\": \"Files with MIME type information are returned as the saved type. For example, a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDkyNzI4Mw=="}, "originalCommit": {"oid": "3485c59c92dadd9c3126bb2e0e471d7630394736"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4573, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}