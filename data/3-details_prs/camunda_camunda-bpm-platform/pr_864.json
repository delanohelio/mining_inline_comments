{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODM5ODU0", "number": 864, "title": "feat(engine): add installation id on engine start", "bodyText": "Related to CAM-12031", "createdAt": "2020-06-17T13:07:30Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/864", "merged": true, "mergeCommit": {"oid": "9eeff3414f97314024ce480ce1cf1330e8353fcd"}, "closed": true, "closedAt": "2020-06-26T11:26:43Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs0C20ABqjM0NjI3MzI2ODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcu-ilIgFqTQzODAzNDI1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25eb3fda903a687b9db1e0fde212a581bdc0d687", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/25eb3fda903a687b9db1e0fde212a581bdc0d687", "committedDate": "2020-06-17T13:06:07Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}, "afterCommit": {"oid": "280f4e19f8ef9b3dab052fdc245dc0adf7632f5b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/280f4e19f8ef9b3dab052fdc245dc0adf7632f5b", "committedDate": "2020-06-19T14:36:25Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "280f4e19f8ef9b3dab052fdc245dc0adf7632f5b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/280f4e19f8ef9b3dab052fdc245dc0adf7632f5b", "committedDate": "2020-06-19T14:36:25Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}, "afterCommit": {"oid": "504fd31ebeae8c55ec5e71a77b1a6771433f686d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/504fd31ebeae8c55ec5e71a77b1a6771433f686d", "committedDate": "2020-06-22T07:13:12Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "504fd31ebeae8c55ec5e71a77b1a6771433f686d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/504fd31ebeae8c55ec5e71a77b1a6771433f686d", "committedDate": "2020-06-22T07:13:12Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}, "afterCommit": {"oid": "17043ee88d29dfdab241f661556d822142b6df14", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/17043ee88d29dfdab241f661556d822142b6df14", "committedDate": "2020-06-22T09:06:48Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ee17647d1de6d5a3cba06174b3e9d6a705f38f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f9ee17647d1de6d5a3cba06174b3e9d6a705f38f", "committedDate": "2020-06-25T08:18:13Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "39e884269bebd74cf115e3d98c889c6c3f559065", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/39e884269bebd74cf115e3d98c889c6c3f559065", "committedDate": "2020-06-24T13:47:18Z", "message": "improve(test): cleanup before test only if necessary"}, "afterCommit": {"oid": "f9ee17647d1de6d5a3cba06174b3e9d6a705f38f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f9ee17647d1de6d5a3cba06174b3e9d6a705f38f", "committedDate": "2020-06-25T08:18:13Z", "message": "feat(engine): add installation id on engine start\n\nRelated to CAM-12031"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MDM0MjU4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/864#pullrequestreview-438034258", "createdAt": "2020-06-26T06:05:31Z", "commit": {"oid": "f9ee17647d1de6d5a3cba06174b3e9d6a705f38f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjowNTozMVrOGpUwBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwNjowNTozMVrOGpUwBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk4NDc3Mw==", "bodyText": "I would suggest to have a constant for \"installationId.lock\" as well.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/864#discussion_r445984773", "createdAt": "2020-06-26T06:05:31Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/BootstrapEngineCommand.java", "diffHunk": "@@ -129,4 +133,50 @@ protected void createTelemetryProperty(CommandContext commandContext) {\n     commandContext.getPropertyManager().insert(property);\n     LOG.creatingTelemetryPropertyInDatabase(telemetryEnabled);\n   }\n+\n+  public void initializeInstallationId(CommandContext commandContext) {\n+    checkInstallationIdLockExists(commandContext);\n+\n+    String databaseInstallationId = databaseInstallationId(commandContext);\n+\n+    if (databaseInstallationId == null || databaseInstallationId.isEmpty()) {\n+\n+      commandContext.getPropertyManager().acquireExclusiveLockForInstallationId();\n+      databaseInstallationId = databaseInstallationId(commandContext);\n+\n+      if (databaseInstallationId == null || databaseInstallationId.isEmpty()) {\n+        LOG.noInstallationIdPropertyFound();\n+        createInstallationProperty(commandContext);\n+      }\n+    } else {\n+      LOG.installationIdPropertyFound(databaseInstallationId);\n+      commandContext.getProcessEngineConfiguration().setInstallationId(databaseInstallationId);\n+    }\n+  }\n+\n+  protected void createInstallationProperty(CommandContext commandContext) {\n+    String installationId = UUID.randomUUID().toString();\n+    PropertyEntity property = new PropertyEntity(INSTALLATION_PROPERTY_NAME, installationId);\n+    commandContext.getPropertyManager().insert(property);\n+    LOG.creatingInstallationPropertyInDatabase(property.getValue());\n+    commandContext.getProcessEngineConfiguration().setInstallationId(installationId);\n+  }\n+\n+  protected String databaseInstallationId(CommandContext commandContext) {\n+    try {\n+      PropertyEntity installationIdProperty = commandContext.getPropertyManager().findPropertyById(INSTALLATION_PROPERTY_NAME);\n+      return installationIdProperty != null ? installationIdProperty.getValue() : null;\n+    } catch (Exception e) {\n+      LOG.couldNotSelectInstallationId(e.getMessage());\n+      return null;\n+    }\n+  }\n+\n+  protected void checkInstallationIdLockExists(CommandContext commandContext) {\n+    PropertyEntity installationIdProperty = commandContext.getPropertyManager().findPropertyById(\"installationId.lock\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ee17647d1de6d5a3cba06174b3e9d6a705f38f"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2561, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}