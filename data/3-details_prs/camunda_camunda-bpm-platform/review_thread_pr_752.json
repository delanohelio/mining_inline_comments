{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDE2MTc3", "number": 752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MDo0OVrODsmIAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MToxNVrODsmIhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDg4NTc4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MDo0OVrOF9h9TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MDo0OVrOF9h9TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2MzgyMA==", "bodyText": "to unify with the rest of the mentions\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n          \n          \n            \n               *       ({@code enforceSpecificVariablePermission} in {@link ProcessEngineConfigurationImpl} must be set to", "url": "https://github.com/camunda/camunda-bpm-platform/pull/752#discussion_r400063820", "createdAt": "2020-03-30T09:50:49Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "diffHunk": "@@ -107,21 +109,58 @@\n    */\n   HistoricCaseActivityStatisticsQuery createHistoricCaseActivityStatisticsQuery(String caseDefinitionId);\n \n-  /** Creates a new programmatic query to search for {@link HistoricTaskInstance}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricTaskInstanceQuery createHistoricTaskInstanceQuery();\n \n-  /** Creates a new programmatic query to search for {@link HistoricDetail}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricDetail}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "080545d0e915b70419e4716b9ed5f0c7f52322b6"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDg4NzEwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MToxNVrOF9h-NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwOTo1MToxNVrOF9h-NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA2NDA1Mg==", "bodyText": "to unify with the rest of the mentions\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n          \n          \n            \n               *       ({@code enforceSpecificVariablePermission} in {@link ProcessEngineConfigurationImpl} must be set to", "url": "https://github.com/camunda/camunda-bpm-platform/pull/752#discussion_r400064052", "createdAt": "2020-03-30T09:51:15Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/HistoryService.java", "diffHunk": "@@ -107,21 +109,58 @@\n    */\n   HistoricCaseActivityStatisticsQuery createHistoricCaseActivityStatisticsQuery(String caseDefinitionId);\n \n-  /** Creates a new programmatic query to search for {@link HistoricTaskInstance}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricTaskInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricTaskInstanceQuery createHistoricTaskInstanceQuery();\n \n-  /** Creates a new programmatic query to search for {@link HistoricDetail}s. */\n+  /**\n+   * <p>Creates a new programmatic query to search for {@link HistoricDetail}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to\n+   *       {@code true}) OR\n+   *   <li>{@link HistoricTaskPermissions#READ_VARIABLE} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enforceSpecificVariablePermission} and\n+   *       {@code enableHistoricInstancePermissions}\n+   *       in {@link ProcessEngineConfigurationImpl} must be set to {@code true})\n+   * */\n   HistoricDetailQuery createHistoricDetailQuery();\n \n   /**\n-   * Creates a new programmatic query to search for {@link HistoricVariableInstance}s.\n-   * <p>\n-   * The result of the query is empty:\n-   * <li>if the user has no {@link Permissions#READ_HISTORY} permission on {@link Resources#PROCESS_DEFINITION} or</li>\n-   * <li>the user has no {@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on {@link Resources#PROCESS_DEFINITION}\n-   * in case {@link ProcessEngineConfiguration#enforceSpecificVariablePermission} is enabled.</li>\n-   * </p>\n-   */\n+   * <p>Creates a new programmatic query to search for {@link HistoricVariableInstance}s.\n+   *\n+   * <p>The result of the query is empty when the user has no...\n+   * <ul>\n+   *   <li>{@link Permissions#READ_HISTORY} permission on\n+   *       {@link Resources#PROCESS_DEFINITION} OR\n+   *   <li>{@link HistoricTaskPermissions#READ} permission on\n+   *       {@link Resources#HISTORIC_TASK} ({@code enableHistoricInstancePermissions} in\n+   *       {@link ProcessEngineConfigurationImpl} must be set to {@code true}) OR\n+   *   <li>{@link ProcessDefinitionPermissions#READ_HISTORY_VARIABLE} permission on\n+   *       {@link Resources#PROCESS_DEFINITION}\n+   *       ({@link ProcessEngineConfiguration#enforceSpecificVariablePermission} must be set to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "080545d0e915b70419e4716b9ed5f0c7f52322b6"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4553, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}