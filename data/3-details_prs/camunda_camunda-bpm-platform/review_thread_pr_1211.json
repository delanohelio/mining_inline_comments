{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNTM5MjY2", "number": 1211, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODo1MzozN1rOFGmDdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzoyMzoyN1rOFNjSnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDU5MjU1OnYy", "diffSide": "RIGHT", "path": "engine-dmn/engine/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODo1MzozN1rOIHq9DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODo1MzozN1rOIHq9DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxNDcwMA==", "bodyText": "When I create the artifact in its current state (without the change made here) I cannot see any scala.* entry in the Import-Package directive of the manifest file. I can only see camundajar.impl.scala.* entries in the Export-Package directive related to uses attributes. Would you mind explaining why this is necessary here?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r544914700", "createdAt": "2020-12-17T08:53:37Z", "author": {"login": "tmetzke"}, "path": "engine-dmn/engine/pom.xml", "diffHunk": "@@ -110,6 +112,7 @@\n           <instructions>\n             <Import-Package>\n               org.junit*;resolution:=optional,\n+              scala.*;resolution:=optional,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDYyMjcwOnYy", "diffSide": "RIGHT", "path": "engine-dmn/feel-juel/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwOTowMDoyMFrOIHrO6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMToyNjoxMVrOIIPd-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxOTI3NQ==", "bodyText": "Since this property is not referenced anywhere yet, I am not entirely sure what you are intending to do with it. However, please make sure this property is not colliding with the current definition of the bundle plugin further down in this file as we do specifically exclude some *.impl.* packages from the export directive.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r544919275", "createdAt": "2020-12-17T09:00:20Z", "author": {"login": "tmetzke"}, "path": "engine-dmn/feel-juel/pom.xml", "diffHunk": "@@ -15,6 +15,7 @@\n     <!-- We shade artifacts into the jar, so we need to generate \n     a dependency BOM for the license book -->\n     <skip-third-party-bom>false</skip-third-party-bom>\n+    <camunda.artifact>org.camunda.bpm.dmn.feel.impl.juel</camunda.artifact>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUxMjk1NQ==", "bodyText": "Hello @tmetzke ,\nIf you refer to this code https://github.com/camunda/camunda-bpm-platform/blob/master/parent/pom.xml#L81, the code is commented, and all packages are exported.\n<camunda.osgi.export.pkg>${camunda.artifact}*</camunda.osgi.export.pkg>\nRelated issue CAM-12444", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r545512955", "createdAt": "2020-12-18T01:26:11Z", "author": {"login": "agustino-lim"}, "path": "engine-dmn/feel-juel/pom.xml", "diffHunk": "@@ -15,6 +15,7 @@\n     <!-- We shade artifacts into the jar, so we need to generate \n     a dependency BOM for the license book -->\n     <skip-third-party-bom>false</skip-third-party-bom>\n+    <camunda.artifact>org.camunda.bpm.dmn.feel.impl.juel</camunda.artifact>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxOTI3NQ=="}, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDYzNTI2OnYy", "diffSide": "RIGHT", "path": "engine-dmn/feel-scala/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwOTowMzoxNFrOIHrWUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwOToxMTowNlrOIIaQDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMTE2OQ==", "bodyText": "As mentioned in engine-dmn/engine/pom.xml, I am not entirely sure yet if this is necessary as I cannot see any entries of scala.* in the import directive but rather only camundajar.impl.scala.* entries in uses attributes in the export directive.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r544921169", "createdAt": "2020-12-17T09:03:14Z", "author": {"login": "tmetzke"}, "path": "engine-dmn/feel-scala/pom.xml", "diffHunk": "@@ -64,4 +68,30 @@\n \n   </dependencies>\n \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>\n+        <artifactId>maven-bundle-plugin</artifactId>\n+        <configuration>\n+          <instructions>\n+            <Import-Package>\n+              !scala.*,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTIzNjA4MQ==", "bodyText": "Yes, you're right, excluding scala package is not correct. Unfortunately package camundajar.impl.scala.* from feel-engine-.jar is not an OSGi bundle. So we should convert feel-engine.jar to OSGi bundle as well.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r545236081", "createdAt": "2020-12-17T16:42:55Z", "author": {"login": "agustino-lim"}, "path": "engine-dmn/feel-scala/pom.xml", "diffHunk": "@@ -64,4 +68,30 @@\n \n   </dependencies>\n \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>\n+        <artifactId>maven-bundle-plugin</artifactId>\n+        <configuration>\n+          <instructions>\n+            <Import-Package>\n+              !scala.*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMTE2OQ=="}, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY4OTYxMg==", "bodyText": "If you like, you can open another ticket in our tracker and provide a PR to add such a capability in the respective project. I would consider this out of scope of this ticket here.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r545689612", "createdAt": "2020-12-18T09:11:06Z", "author": {"login": "tmetzke"}, "path": "engine-dmn/feel-scala/pom.xml", "diffHunk": "@@ -64,4 +68,30 @@\n \n   </dependencies>\n \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>\n+        <artifactId>maven-bundle-plugin</artifactId>\n+        <configuration>\n+          <instructions>\n+            <Import-Package>\n+              !scala.*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMTE2OQ=="}, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDY0MjQyOnYy", "diffSide": "RIGHT", "path": "engine-dmn/feel-scala/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwOTowNDo0OFrOIHraYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwOTowNDo0OFrOIHraYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkyMjIwOA==", "bodyText": "Would you mind explaining why you would want to exclude org.camunda.feel.* from import? It is a required dependency of this module as far as I know, therefore I do not yet understand why it should be excluded here.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r544922208", "createdAt": "2020-12-17T09:04:48Z", "author": {"login": "tmetzke"}, "path": "engine-dmn/feel-scala/pom.xml", "diffHunk": "@@ -64,4 +68,30 @@\n \n   </dependencies>\n \n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.apache.felix</groupId>\n+        <artifactId>maven-bundle-plugin</artifactId>\n+        <configuration>\n+          <instructions>\n+            <Import-Package>\n+              !scala.*,\n+              !org.camunda.feel.*,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50e60bcaf59b1833141bea293490cc37af968c44"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjU3ODEzOnYy", "diffSide": "RIGHT", "path": "typed-values/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNTozMVrOIOMl3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNTozMVrOIOMl3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzI3OA==", "bodyText": "I am wondering if we can use the camunda.osgi.import.additional element here as well to define !javax.activation?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <camunda.osgi.import.pkg>\n          \n          \n            \n                  !javax.activation,\n          \n          \n            \n                  *\n          \n          \n            \n                </camunda.osgi.import.pkg>\n          \n          \n            \n                <camunda.osgi.import.additional>\n          \n          \n            \n                  !javax.activation\n          \n          \n            \n                </camunda.osgi.import.additional>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r551757278", "createdAt": "2021-01-05T07:25:31Z", "author": {"login": "tmetzke"}, "path": "typed-values/pom.xml", "diffHunk": "@@ -24,7 +24,13 @@\n       </dependency>\n     </dependencies>\n   </dependencyManagement>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.engine.variable</camunda.artifact>\n+    <camunda.osgi.import.pkg>\n+      !javax.activation,\n+      *\n+    </camunda.osgi.import.pkg>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjU4MDAwOnYy", "diffSide": "LEFT", "path": "parent/pom.xml", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyNjoyMFrOIOMm9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMzozMTo0NlrOIRVagQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA==", "bodyText": "Could you shortly detail why you would want to remove that part?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r551757558", "createdAt": "2021-01-05T07:26:20Z", "author": {"login": "tmetzke"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM4NzkxMw==", "bodyText": "This is unnecessary import package because it has been handled by * in this property\n\ncamunda.osgi.import.pkg\n\nWhen you have that import in camunda.osgi.import.pkg, it will cause an OutOfMemoryError\n[ERROR] Java heap space -> [Help 1]\njava.lang.OutOfMemoryError: Java heap space\n    at java.util.Arrays.copyOf (Arrays.java:3332)\n    at java.lang.AbstractStringBuilder.ensureCapacityInternal (AbstractStringBuilder.java:124)\n    at java.lang.AbstractStringBuilder.append (AbstractStringBuilder.java:448)\n    at java.lang.StringBuilder.append (StringBuilder.java:136)\n    at java.lang.StringBuilder.append (StringBuilder.java:76)\n    at java.lang.AbstractStringBuilder.append (AbstractStringBuilder.java:484)\n    at java.lang.StringBuilder.append (StringBuilder.java:166)\n    at java.lang.StringBuilder.append (StringBuilder.java:76)\n    at aQute.bnd.osgi.Processor.report (Processor.java:1678)\n    at aQute.bnd.osgi.Processor.toString (Processor.java:2114)\n    at java.util.Formatter$FormatSpecifier.printString (Formatter.java:2886)\n    at java.util.Formatter$FormatSpecifier.print (Formatter.java:2763)\n    at java.util.Formatter.format (Formatter.java:2520)\n    at java.util.Formatter.format (Formatter.java:2455)\n    at java.lang.String.format (String.java:2940)\n    at aQute.bnd.osgi.Processor.formatArrays (Processor.java:1784)\n    at aQute.bnd.osgi.Processor.warning (Processor.java:169)\n    at aQute.bnd.osgi.Macro.replace (Macro.java:217)\n    at aQute.bnd.osgi.Macro.process (Macro.java:62)\n    at aQute.bnd.osgi.Macro.process (Macro.java:78)\n    at aQute.bnd.osgi.Macro.process (Macro.java:48)\n    at aQute.bnd.osgi.Macro.process (Macro.java:43)\n    at aQute.bnd.osgi.Macro.process (Macro.java:1139)\n    at aQute.bnd.osgi.Analyzer.applyVersionPolicy (Analyzer.java:1644)\n    at aQute.bnd.osgi.Analyzer.augmentImports (Analyzer.java:1602)\n    at aQute.bnd.osgi.Analyzer.analyze (Analyzer.java:268)\n    at aQute.bnd.osgi.Builder.analyze (Builder.java:343)\n    at aQute.bnd.osgi.Analyzer.calcManifest (Analyzer.java:616)\n    at aQute.bnd.osgi.Builder.build (Builder.java:80)\n    at org.apache.felix.bundleplugin.ManifestPlugin.getAnalyzer (ManifestPlugin.java:208)\n    at org.apache.felix.bundleplugin.ManifestPlugin.getManifest (ManifestPlugin.java:114)\n    at org.apache.felix.bundleplugin.ManifestPlugin.execute (ManifestPlugin.java:69)", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r552387913", "createdAt": "2021-01-06T06:08:39Z", "author": {"login": "agustino-lim"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE1MDYxNQ==", "bodyText": "As far as I understand, this line explicitly make sure that all camunda-related dependencies (if not defined otherwise explicitly) are consumed in the defined version. If we remove it, the versions of those dependencies are not fixed, are they?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r553150615", "createdAt": "2021-01-07T07:24:05Z", "author": {"login": "tmetzke"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MDEyNA==", "bodyText": "@tmetzke ,\nYes you're right. By default maven bundle plugin will calculate the range of import package. Please refer to this link https://bnd.bndtools.org/heads/import_package.html.\nLet's say the version project is 7.15, the plugin will generate import package with version [7.15, 8). Unless you want to support lower version than 7.15, I don't see a need to explicitly specify the range version.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r554890124", "createdAt": "2021-01-11T08:40:35Z", "author": {"login": "agustino-lim"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5Nzg2Ng==", "bodyText": "So, a Camunda artifact will then use the newest version of other Camunda artifacts it can find that are greater than the minimum but not yet 8.x. This would imply that a 7.15 artifact could use a 7.16 or 7.17 artifact if it can find one, right? As far as I understand or current description, we ensure the artifacts use tested and compatible versions of other artifacts. This would be removed with the proposed change, wouldn't it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r554897866", "createdAt": "2021-01-11T08:56:24Z", "author": {"login": "tmetzke"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDkxMDM2Ng==", "bodyText": "The OSGi default is importing with range that agree to semantic versioning. Previously it force the exact minor version of camunda that does not allow to get update from one bundle with the desiderate feature/fix. Keep in mind that the restriction you force in the manifest is valid only in OSGi but in any other J2EE enviroment you can mix the bundle you want.\nThe properties system you used if very very complicated to read and also to handle (maybe the reason before was embedded), the resolution of that specific property causes the OOM in this maven plugin version and different error (property is never resolved to their final value) with most recent plugin version 5.1.1.\nWhat could we do in this case?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r554910366", "createdAt": "2021-01-11T09:20:49Z", "author": {"login": "nfalco79"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA0NzU1Mw==", "bodyText": "Hey Nikolas, thanks for that input. If you are fine with taking care of the versions yourself, removing this will work for us. You are right with that option being present in other environments like in J2EE use cases. Plus, if this poses an issue currently, we are also happy to resolve it with this move.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555047553", "createdAt": "2021-01-11T13:31:46Z", "author": {"login": "tmetzke"}, "path": "parent/pom.xml", "diffHunk": "@@ -71,7 +71,6 @@\n       ${camunda.osgi.import.before.defaults},\n       ${camunda.osgi.import.defaults},\n       ${camunda.osgi.import.additional},\n-      org.camunda.*;${camunda.osgi.import.camunda.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1NzU1OA=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjU4NTQwOnYy", "diffSide": "RIGHT", "path": "model-api/bpmn-model/pom.xml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNzoyODozMVrOIOMp2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwODo1ODoxOVrOIRMVgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1ODI5OQ==", "bodyText": "This module is the only one where this is defined as an exclusion although all model-related modules contain such a package. Could you go into more detail why this is needed here?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r551758299", "createdAt": "2021-01-05T07:28:31Z", "author": {"login": "tmetzke"}, "path": "model-api/bpmn-model/pom.xml", "diffHunk": "@@ -13,7 +13,13 @@\n \n   <name>camunda BPM - BPMN Model API</name>\n   <inceptionYear>2014</inceptionYear>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.model.bpmn</camunda.artifact>\n+    <camunda.osgi.export>\n+      !org.camunda.bpm.model.bpmn.schema,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM3MTk4OA==", "bodyText": "This package only consists XSD files, and there is no Java classes. I don't think it's necessary to export this package.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r552371988", "createdAt": "2021-01-06T05:08:43Z", "author": {"login": "agustino-lim"}, "path": "model-api/bpmn-model/pom.xml", "diffHunk": "@@ -13,7 +13,13 @@\n \n   <name>camunda BPM - BPMN Model API</name>\n   <inceptionYear>2014</inceptionYear>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.model.bpmn</camunda.artifact>\n+    <camunda.osgi.export>\n+      !org.camunda.bpm.model.bpmn.schema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1ODI5OQ=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzE2MDY2OQ==", "bodyText": "Thanks for that input! I think you are correct and we don't need to export this. As all other model-related modules contain the same package, do you think we should exclude them there as well?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r553160669", "createdAt": "2021-01-07T07:52:01Z", "author": {"login": "tmetzke"}, "path": "model-api/bpmn-model/pom.xml", "diffHunk": "@@ -13,7 +13,13 @@\n \n   <name>camunda BPM - BPMN Model API</name>\n   <inceptionYear>2014</inceptionYear>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.model.bpmn</camunda.artifact>\n+    <camunda.osgi.export>\n+      !org.camunda.bpm.model.bpmn.schema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1ODI5OQ=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5MDQ4MQ==", "bodyText": "Would you mind to point which package that you refer to?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r554890481", "createdAt": "2021-01-11T08:41:20Z", "author": {"login": "agustino-lim"}, "path": "model-api/bpmn-model/pom.xml", "diffHunk": "@@ -13,7 +13,13 @@\n \n   <name>camunda BPM - BPMN Model API</name>\n   <inceptionYear>2014</inceptionYear>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.model.bpmn</camunda.artifact>\n+    <camunda.osgi.export>\n+      !org.camunda.bpm.model.bpmn.schema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1ODI5OQ=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg5ODgxNg==", "bodyText": "If I am not mistaken, the other model modules (CMMN and DMN) also contain such schema files at org.camunda.bpm.model.cmmn.schema and org.camunda.bpm.model.dmn.schema respectively.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r554898816", "createdAt": "2021-01-11T08:58:19Z", "author": {"login": "tmetzke"}, "path": "model-api/bpmn-model/pom.xml", "diffHunk": "@@ -13,7 +13,13 @@\n \n   <name>camunda BPM - BPMN Model API</name>\n   <inceptionYear>2014</inceptionYear>\n-\n+  <properties>\n+    <camunda.artifact>org.camunda.bpm.model.bpmn</camunda.artifact>\n+    <camunda.osgi.export>\n+      !org.camunda.bpm.model.bpmn.schema,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc1ODI5OQ=="}, "originalCommit": {"oid": "59a8265451e31d4c963e0f73c647e01af1da2b6a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDIyNDEzOnYy", "diffSide": "RIGHT", "path": "engine/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMzozNDo0NlrOIRVh1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwMDo1MDoyM1rOIRtHwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA0OTQzMQ==", "bodyText": "One thing that strikes me here: is it still necessary to include this import explicitly at all? It will be covered by the general * import, won't it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555049431", "createdAt": "2021-01-11T13:34:46Z", "author": {"login": "tmetzke"}, "path": "engine/pom.xml", "diffHunk": "@@ -313,10 +313,11 @@\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n     <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*;${camunda.osgi.import.camunda.commons.version},\n+      org.camunda.bpm.engine.variable.*,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff2c7c942b5fc310058312bd4e99c6a990c5f6e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQzNTk2OQ==", "bodyText": "Yes, you're right. I will remove it", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555435969", "createdAt": "2021-01-12T00:50:23Z", "author": {"login": "agustino-lim"}, "path": "engine/pom.xml", "diffHunk": "@@ -313,10 +313,11 @@\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n     <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*;${camunda.osgi.import.camunda.commons.version},\n+      org.camunda.bpm.engine.variable.*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA0OTQzMQ=="}, "originalCommit": {"oid": "bff2c7c942b5fc310058312bd4e99c6a990c5f6e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDI0MTc1OnYy", "diffSide": "RIGHT", "path": "engine/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxMzozOToxNFrOIRVsPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzoxNDoxOVrOIR0cPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA1MjA5NA==", "bodyText": "Could you quickly comment on why GSON should be excluded here? Did you mean to make it optional? If so, why?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555052094", "createdAt": "2021-01-11T13:39:14Z", "author": {"login": "tmetzke"}, "path": "engine/pom.xml", "diffHunk": "@@ -313,10 +313,11 @@\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n     <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*;${camunda.osgi.import.camunda.commons.version},\n+      org.camunda.bpm.engine.variable.*,\n       org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},\n     </camunda.osgi.import.defaults>\n     <camunda.osgi.import.additional>\n+      !com.google.gson.*,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff2c7c942b5fc310058312bd4e99c6a990c5f6e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQzMDA2NQ==", "bodyText": "GSON has been shaded in this bundle\nhttps://github.com/camunda/camunda-bpm-platform/blob/master/engine/pom.xml#L432", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555430065", "createdAt": "2021-01-12T00:32:16Z", "author": {"login": "agustino-lim"}, "path": "engine/pom.xml", "diffHunk": "@@ -313,10 +313,11 @@\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n     <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*;${camunda.osgi.import.camunda.commons.version},\n+      org.camunda.bpm.engine.variable.*,\n       org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},\n     </camunda.osgi.import.defaults>\n     <camunda.osgi.import.additional>\n+      !com.google.gson.*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA1MjA5NA=="}, "originalCommit": {"oid": "bff2c7c942b5fc310058312bd4e99c6a990c5f6e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU1NTkwMQ==", "bodyText": "Oh, yeah, you're right. Thanks for pointing me to it. \ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555555901", "createdAt": "2021-01-12T07:14:19Z", "author": {"login": "tmetzke"}, "path": "engine/pom.xml", "diffHunk": "@@ -313,10 +313,11 @@\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n     <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*;${camunda.osgi.import.camunda.commons.version},\n+      org.camunda.bpm.engine.variable.*,\n       org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},\n     </camunda.osgi.import.defaults>\n     <camunda.osgi.import.additional>\n+      !com.google.gson.*,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA1MjA5NA=="}, "originalCommit": {"oid": "bff2c7c942b5fc310058312bd4e99c6a990c5f6e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NzU0MDE1OnYy", "diffSide": "LEFT", "path": "engine/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzoyMzoyN1rOIR0p-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzozMzo1MFrOIR06oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU1OTQxOA==", "bodyText": "If this is removed, what version will packages with org.camunda.commons.* receive? I guess we need to keep this line in the defaults and only remove the org.camunda.bpm.engine.variable.*, don't we?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555559418", "createdAt": "2021-01-12T07:23:27Z", "author": {"login": "tmetzke"}, "path": "engine/pom.xml", "diffHunk": "@@ -312,10 +312,6 @@\n       ${camunda.artifact}.container.*;${camunda.osgi.version};-noimport:=true,\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n-    <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*,\n-      org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e19ed094f13a62c5de5001d9af10aa23f4241c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU2MzA2NQ==", "bodyText": "You will get this version\norg.camunda.commons.logging;version=\"[1.10,2)\"\norg.camunda.commons.utils.cache;version=\"[1.10,2)\"\norg.camunda.commons.utils;version=\"[1.10,2)\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555563065", "createdAt": "2021-01-12T07:32:16Z", "author": {"login": "agustino-lim"}, "path": "engine/pom.xml", "diffHunk": "@@ -312,10 +312,6 @@\n       ${camunda.artifact}.container.*;${camunda.osgi.version};-noimport:=true,\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n-    <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*,\n-      org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU1OTQxOA=="}, "originalCommit": {"oid": "1e19ed094f13a62c5de5001d9af10aa23f4241c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU2MzY4MA==", "bodyText": "Thanks for that quick input! OK, that would be fine with me then. \ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1211#discussion_r555563680", "createdAt": "2021-01-12T07:33:50Z", "author": {"login": "tmetzke"}, "path": "engine/pom.xml", "diffHunk": "@@ -312,10 +312,6 @@\n       ${camunda.artifact}.container.*;${camunda.osgi.version};-noimport:=true,\n       ${camunda.artifact}.engine.*;${camunda.osgi.version};-noimport:=true\n     </camunda.osgi.export.pkg>\n-    <camunda.osgi.import.defaults>\n-      org.camunda.bpm.engine.variable.*,\n-      org.camunda.commons.*;${camunda.osgi.import.camunda.commons.version},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU1OTQxOA=="}, "originalCommit": {"oid": "1e19ed094f13a62c5de5001d9af10aa23f4241c7"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4408, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}