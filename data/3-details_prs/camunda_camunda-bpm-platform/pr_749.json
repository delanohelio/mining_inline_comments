{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDU0MTE1", "number": 749, "title": "feat(engine): introduce READ_VARIABLE permission for historic tasks", "bodyText": "related to CAM-11626", "createdAt": "2020-03-23T15:25:09Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749", "merged": true, "mergeCommit": {"oid": "cf0e0d08733c0a7216d2c552b430371e0745fb66"}, "closed": true, "closedAt": "2020-03-31T05:50:56Z", "author": {"login": "tasso94"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQy55pABqjMxNTk2NDkxMDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSwcjagH2gAyMzkyNDU0MTE1OjcyOWMwODNiY2UwNjg2YTM0YzhlMDUzZmUyYmNhYTE1MWUwMzJjODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06ee9718f72512772faa6dd64b17d0365d32e643", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/06ee9718f72512772faa6dd64b17d0365d32e643", "committedDate": "2020-03-23T14:34:04Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}, "afterCommit": {"oid": "257d64886de8ecbc9a7909a4fd71fce49a38b16b", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/257d64886de8ecbc9a7909a4fd71fce49a38b16b", "committedDate": "2020-03-24T13:24:19Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "257d64886de8ecbc9a7909a4fd71fce49a38b16b", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/257d64886de8ecbc9a7909a4fd71fce49a38b16b", "committedDate": "2020-03-24T13:24:19Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}, "afterCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "committedDate": "2020-03-24T14:18:54Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODU3OTA2", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#pullrequestreview-382857906", "createdAt": "2020-03-27T13:31:40Z", "commit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzozMTo0MVrOF8xOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzozMTo0MVrOF8xOmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA==", "bodyText": "note to myself, double check the value", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r399265434", "createdAt": "2020-03-27T13:31:41Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzYyNzgz", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#pullrequestreview-383762783", "createdAt": "2020-03-30T11:29:35Z", "commit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToyOTozNVrOF9lVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNToxMzo1NVrOF9urJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExOTEzNg==", "bodyText": "could we fix this typo (wasn't me)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * will be required to fetch variables when the autorizations are enabled.\n          \n          \n            \n               * will be required to fetch variables when the authorizations are enabled.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400119136", "createdAt": "2020-03-30T11:29:35Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java", "diffHunk": "@@ -372,6 +372,7 @@\n    * READ_HISTORY_VARIABLE, or\n    * READ_TASK_VARIABLE on Process Definition resource, and\n    * READ_VARIABLE on Task resource\n+   * READ_VARIABLE on Historic Task Instance resource\n    * will be required to fetch variables when the autorizations are enabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTMwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);\n          \n          \n            \n                enableHistoricInstancePermissions= processEngineConfiguration.isEnableHistoricInstancePermissions();\n          \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400141301", "createdAt": "2020-03-30T12:11:15Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -78,6 +100,7 @@ public void init() {\n \r\n     enforceSpecificVariablePermission = processEngineConfiguration.isEnforceSpecificVariablePermission();\r\n     processEngineConfiguration.setEnforceSpecificVariablePermission(true);\r\n+    processEngineConfiguration.setEnableHistoricInstancePermissions(true);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA==", "bodyText": "Is it only for debugging purposes, shall we remove it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142258", "createdAt": "2020-03-30T12:12:58Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ==", "bodyText": "Is it only for debugging purposes, shall we remove it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142409", "createdAt": "2020-03-30T12:13:14Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r\n+      Authorization runtimeUserAuthorization = authorizationService.createAuthorizationQuery()\r\n+          .resourceType(TASK)\r\n+          .userIdIn(userId)\r\n+          .singleResult();\r\n+\r\n+      assertNotNull(runtimeUserAuthorization);\r\n+      verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\r\n+\r\n+    } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\r\n+      System.out.println(\"HISTORY!\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MDQyNQ==", "bodyText": "we agreed to put 64 as value for READ_VARIABLE permission to be consistent with TaskPermissions#READ_VARIABLE", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400270425", "createdAt": "2020-03-30T15:11:48Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTY5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 4);\n          \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 64);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271698", "createdAt": "2020-03-30T15:13:21Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTk2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"RUNTIME!\");", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271960", "createdAt": "2020-03-30T15:13:40Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MjE2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"HISTORY!\");", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400272165", "createdAt": "2020-03-30T15:13:55Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r\n+      Authorization runtimeUserAuthorization = authorizationService.createAuthorizationQuery()\r\n+          .resourceType(TASK)\r\n+          .userIdIn(userId)\r\n+          .singleResult();\r\n+\r\n+      assertNotNull(runtimeUserAuthorization);\r\n+      verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\r\n+\r\n+    } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\r\n+      System.out.println(\"HISTORY!\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 92}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "committedDate": "2020-03-30T15:40:36Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776", "committedDate": "2020-03-24T14:18:54Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}, "afterCommit": {"oid": "5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5dc7f2b57ec5563136bce5c2c36e140ab5ca2930", "committedDate": "2020-03-30T15:40:36Z", "message": "feat(engine): introduce READ_VARIABLE permission for historic tasks\n\nrelated to CAM-11626"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b73fd6888affb451d7d93ab879bd488f51c2db5", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8b73fd6888affb451d7d93ab879bd488f51c2db5", "committedDate": "2020-03-30T15:42:12Z", "message": "SQUASH ME typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa258ce1d1483d099474815d77db3a176234f61", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/cfa258ce1d1483d099474815d77db3a176234f61", "committedDate": "2020-03-30T15:42:32Z", "message": "SQUASH ME remove syso"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "365fdedd644f87752d1ad4e7b1d42a6b0997093c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/365fdedd644f87752d1ad4e7b1d42a6b0997093c", "committedDate": "2020-03-30T15:42:53Z", "message": "SQUASH ME remove syso"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729c083bce0686a34c8e053fe2bcaa151e032c86", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/729c083bce0686a34c8e053fe2bcaa151e032c86", "committedDate": "2020-03-30T15:43:21Z", "message": "SQUASH ME 4->64"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1790, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}