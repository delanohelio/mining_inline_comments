{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTY2OTE4", "number": 714, "title": "CAM-10978: historic variable without delay", "bodyText": "feat(engine): history creation on asyncBefore start event\n\nremove delay of historic variables creation on asyncBefore start event\nset processInstanceId as activityInstanceId for such variables\nset initial flag to historic variables updates that contain the initial\nvalue of the variables on process instance start\nquery for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\nkeep the legacy details query in process instance restart for instance\ncreated prior 7.13\nintroduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\ndelay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\nmodification test cases\nrestart process instance test cases\n\nRelated to CAM-10978", "createdAt": "2020-03-12T10:41:27Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714", "merged": true, "mergeCommit": {"oid": "d57d6acf0cab2a9ba131a0b1f2d2a295d7faba2e"}, "closed": true, "closedAt": "2020-04-03T15:19:10Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOzVm_gBqjMxNDA0OTIwMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUAGh7AFqTM4NzIxMjA0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "923ee2175afdaf6d55cfe8e2538dcddacaad3c8d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/923ee2175afdaf6d55cfe8e2538dcddacaad3c8d", "committedDate": "2020-03-17T17:15:34Z", "message": "add test"}, "afterCommit": {"oid": "59382711f6d7c741021e4fd8ac7652ae1fe313b3", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/59382711f6d7c741021e4fd8ac7652ae1fe313b3", "committedDate": "2020-03-18T08:46:56Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e58594f6ec3dc27401aeb943b03f5fc78a491bce", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e58594f6ec3dc27401aeb943b03f5fc78a491bce", "committedDate": "2020-03-18T13:13:14Z", "message": "TODO process instance migration of subprocess"}, "afterCommit": {"oid": "5baebb1f9330c95daf2b27242f2a1ad4ae828363", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5baebb1f9330c95daf2b27242f2a1ad4ae828363", "committedDate": "2020-03-18T13:12:55Z", "message": "remove comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79e228833172b7665d4656649a943d88f748fe28", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/79e228833172b7665d4656649a943d88f748fe28", "committedDate": "2020-03-18T17:27:53Z", "message": "tests"}, "afterCommit": {"oid": "84b9e51ac3bb27e489063e5d6f76d9d058a3618e", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/84b9e51ac3bb27e489063e5d6f76d9d058a3618e", "committedDate": "2020-03-19T16:21:21Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b27b925da7726ad7fe80ac015593a404eaf752f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6b27b925da7726ad7fe80ac015593a404eaf752f", "committedDate": "2020-03-19T16:24:23Z", "message": "SQUASH ME"}, "afterCommit": {"oid": "dd5e91212fcb6fe62e66276c8dcc20356a6fae75", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dd5e91212fcb6fe62e66276c8dcc20356a6fae75", "committedDate": "2020-03-20T07:38:22Z", "message": "adjust mig tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6332df2132711ece08f968dd63b793048a63cbb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c6332df2132711ece08f968dd63b793048a63cbb", "committedDate": "2020-03-20T14:42:31Z", "message": "add legacy behavior method for 7.12 case without history"}, "afterCommit": {"oid": "9d3e0cdd3f6d4217d0a41356f6674b5f7349048a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9d3e0cdd3f6d4217d0a41356f6674b5f7349048a", "committedDate": "2020-03-20T15:06:28Z", "message": "add legacy behavior method for 7.12 case without history"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49e5d6ace359e21ad81d70d70597ce272526d1c5", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/49e5d6ace359e21ad81d70d70597ce272526d1c5", "committedDate": "2020-03-21T07:27:28Z", "message": "history level check"}, "afterCommit": {"oid": "4bb74627738c0da2666fa9c58cc6020c31507b59", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4bb74627738c0da2666fa9c58cc6020c31507b59", "committedDate": "2020-03-24T06:57:43Z", "message": "migration tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01aa8701a40cb337010a2f1eb832f6f03f7e1fbc", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/01aa8701a40cb337010a2f1eb832f6f03f7e1fbc", "committedDate": "2020-03-25T16:49:18Z", "message": "move disposal"}, "afterCommit": {"oid": "34bee1481b2cab5e69ccfd9daaba7cfac7f81a4f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/34bee1481b2cab5e69ccfd9daaba7cfac7f81a4f", "committedDate": "2020-03-26T06:54:51Z", "message": "move disposal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c6419a94179d04776138b0245098e0c0b01fb32", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1c6419a94179d04776138b0245098e0c0b01fb32", "committedDate": "2020-03-26T07:59:54Z", "message": "comment"}, "afterCommit": {"oid": "0f39b83ab0901c08ab6590cdee7d0fc6ffae8498", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0f39b83ab0901c08ab6590cdee7d0fc6ffae8498", "committedDate": "2020-03-26T17:32:47Z", "message": "feat(engine): history creation on asyncBefore start event\n\n* remove delay of historic variables creation on asyncBefore start event\n* set processInstanceId as activityInstanceId for such variables\n* set initial flag to historic variables updates that contain the inital\nvalue of the variables on process instance start\n* query for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\n* keep the legacy details query in process instance restart for instance\ncreated prior 7.13\n* introduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\n* delay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\n* modification test cases\n* restart process instance test cases\n\nRelated to CAM-10978"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f39b83ab0901c08ab6590cdee7d0fc6ffae8498", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0f39b83ab0901c08ab6590cdee7d0fc6ffae8498", "committedDate": "2020-03-26T17:32:47Z", "message": "feat(engine): history creation on asyncBefore start event\n\n* remove delay of historic variables creation on asyncBefore start event\n* set processInstanceId as activityInstanceId for such variables\n* set initial flag to historic variables updates that contain the inital\nvalue of the variables on process instance start\n* query for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\n* keep the legacy details query in process instance restart for instance\ncreated prior 7.13\n* introduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\n* delay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\n* modification test cases\n* restart process instance test cases\n\nRelated to CAM-10978"}, "afterCommit": {"oid": "4f1c718a3c194a54b67d32df2b9ca2df5b4eddca", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4f1c718a3c194a54b67d32df2b9ca2df5b4eddca", "committedDate": "2020-03-27T07:31:28Z", "message": "feat(engine): history creation on asyncBefore start event\n\n* remove delay of historic variables creation on asyncBefore start event\n* set processInstanceId as activityInstanceId for such variables\n* set initial flag to historic variables updates that contain the inital\nvalue of the variables on process instance start\n* query for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\n* keep the legacy details query in process instance restart for instance\ncreated prior 7.13\n* introduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\n* delay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\n* modification test cases\n* restart process instance test cases\n\nRelated to CAM-10978"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyOTA3MTE0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#pullrequestreview-382907114", "createdAt": "2020-03-27T14:27:43Z", "commit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDoyNzo0M1rOF8zknw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxNDo0NDoyMVrOF80Ulw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwMzgzOQ==", "bodyText": "Maybe we can clarify a bit what that means.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#discussion_r399303839", "createdAt": "2020-03-27T14:27:43Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricDetailQuery.java", "diffHunk": "@@ -127,6 +127,9 @@\n   /** Only select historic details that have occurred after the given date (inclusive). */\n   HistoricDetailQuery occurredAfter(Date date);\n \n+  /** Only select historic details that were set during the process start. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMwOTA4OQ==", "bodyText": "I think this should be the wrapper Boolean class to handle cases with null properly? Same for the field declaration in the entity. Or are the database fields in all cases declared to not allow null and have a proper default value (e.g. INITIAL_ smallint check(INITIAL_ in (1,0)); sounds like it)? In that case we must make sure that rolling-update scenarios still work, i.e. a 7.12 engine creates a history detail in the 7.13 schema.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#discussion_r399309089", "createdAt": "2020-03-27T14:34:45Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/history/HistoricVariableUpdate.java", "diffHunk": "@@ -60,4 +60,9 @@\n    * @return an error message indicating why the variable value could not be loaded.\n    */\n   String getErrorMessage();\n+\n+  /**\n+   * @return true if the detail historic variable update is created during the process instance start\n+   */\n+  boolean isInitial();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNTU1Nw==", "bodyText": "This comment is a bit misleading. You could even consider creating a method #wasCreatedBefore713 in VariableInstanceEntity and have a description there why we can use the definition id to make the distinction.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#discussion_r399315557", "createdAt": "2020-03-27T14:43:34Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/LegacyBehavior.java", "diffHunk": "@@ -635,4 +639,34 @@ public boolean isFulfilled(PvmExecutionImpl element) {\n     return walker.getCurrentElement();\n   }\n \n+  /**\n+   * See #CAM-10978\n+   * Use case process instance with <code>asyncBefore</code> startEvent\n+   * After unifying the history variable's creation<br>\n+   * The following changed:<br>\n+   *   * variables will receive the <code>processInstanceId</code> as <code>activityInstanceId</code> in such cases (previously was the startEvent id)<br>\n+   *   * historic details have new <code>initial</code> property to track initial variables that process is started with<br>\n+   * The jobs created prior <code>7.13</code> and not executed before do not have historic information of variables.\n+   * This method takes care of that.\n+   */\n+  public static void createMissingHistoricVariables(PvmExecutionImpl execution) {\n+    Collection<VariableInstanceEntity> variables = ((ExecutionEntity) execution).getVariablesInternal();\n+\n+    if (variables != null && variables.size() > 0) {\n+      // trigger historic creation if the history is not presented already\n+      for (VariableInstanceEntity variable : variables) {\n+\n+        // processDefinitionId is introduced in 7.13 and for such variable we need to create history", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTMxNjExOQ==", "bodyText": "We can remove this second part, because that is also checked in the listener's #onCreate method.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#discussion_r399316119", "createdAt": "2020-03-27T14:44:21Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/pvm/runtime/LegacyBehavior.java", "diffHunk": "@@ -635,4 +639,34 @@ public boolean isFulfilled(PvmExecutionImpl element) {\n     return walker.getCurrentElement();\n   }\n \n+  /**\n+   * See #CAM-10978\n+   * Use case process instance with <code>asyncBefore</code> startEvent\n+   * After unifying the history variable's creation<br>\n+   * The following changed:<br>\n+   *   * variables will receive the <code>processInstanceId</code> as <code>activityInstanceId</code> in such cases (previously was the startEvent id)<br>\n+   *   * historic details have new <code>initial</code> property to track initial variables that process is started with<br>\n+   * The jobs created prior <code>7.13</code> and not executed before do not have historic information of variables.\n+   * This method takes care of that.\n+   */\n+  public static void createMissingHistoricVariables(PvmExecutionImpl execution) {\n+    Collection<VariableInstanceEntity> variables = ((ExecutionEntity) execution).getVariablesInternal();\n+\n+    if (variables != null && variables.size() > 0) {\n+      // trigger historic creation if the history is not presented already\n+      for (VariableInstanceEntity variable : variables) {\n+\n+        // processDefinitionId is introduced in 7.13 and for such variable we need to create history\n+        if (variable.getProcessDefinitionId() == null &&\n+            getHistoryLevel().isHistoryEventProduced(HistoryEventTypes.VARIABLE_INSTANCE_CREATE, variable)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e27ad6de50269d3cb5c7b25f1104d346acda2b37", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e27ad6de50269d3cb5c7b25f1104d346acda2b37", "committedDate": "2020-03-27T07:55:09Z", "message": "SQUASH ME with 262f094264"}, "afterCommit": {"oid": "ed9049ddec70edae86e7621bd9a9aea756aae180", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ed9049ddec70edae86e7621bd9a9aea756aae180", "committedDate": "2020-03-30T05:59:26Z", "message": "squash me with c1b77f8e0a\n\nimprove legacy behavior check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNzYwNjY0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#pullrequestreview-383760664", "createdAt": "2020-03-30T11:26:11Z", "commit": {"oid": "628513c7eb15f6bce10e152e6a12df4c834c2217"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNzoyNFrOF9nRyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoyNzoyNFrOF9nRyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE1MDk4NA==", "bodyText": "Should we set the default value here since the value is used in a condition in the MyBatis query?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected boolean initial;\n          \n          \n            \n              protected boolean initial = false;", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#discussion_r400150984", "createdAt": "2020-03-30T12:27:24Z", "author": {"login": "koevskinikola"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricDetailQueryImpl.java", "diffHunk": "@@ -56,6 +56,7 @@\n   protected Long sequenceCounter;\n   protected Date occurredBefore;\n   protected Date occurredAfter;\n+  protected boolean initial;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "628513c7eb15f6bce10e152e6a12df4c834c2217"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1862d21ca37bccec93c920faae4c90f11dd9b7f8", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1862d21ca37bccec93c920faae4c90f11dd9b7f8", "committedDate": "2020-04-03T11:24:51Z", "message": "feat(engine): add processDefinitionId to variable instance\n\n* and remove h2 unique constrain suffix check\nas the suffix changes on alter variable table\n\nRelated to CAM-10978"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "346befaed3a47ab51fb21becc30310e553ed70bb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/346befaed3a47ab51fb21becc30310e553ed70bb", "committedDate": "2020-04-03T11:27:39Z", "message": "feat(engine): set initial flag of historic variable details\n\nRelated to CAM-10978"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55a82595c6e2cc9bcbafc62bf93dbe5a2b5f78b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e55a82595c6e2cc9bcbafc62bf93dbe5a2b5f78b", "committedDate": "2020-04-03T11:29:13Z", "message": "feat(engine): history creation on asyncBefore start event\n\n* remove delay of historic variables creation on asyncBefore start event\n* set processInstanceId as activityInstanceId for such variables\n* set initial flag to historic variables updates that contain the inital\nvalue of the variables on process instance start\n* query for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\n* keep the legacy details query in process instance restart for instance\ncreated prior 7.13\n* introduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\n* delay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\n* modification test cases\n* restart process instance test cases\n\nRelated to CAM-10978"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "611d253a91ca80ff635615f5ecd90cad6322da5a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/611d253a91ca80ff635615f5ecd90cad6322da5a", "committedDate": "2020-04-01T06:48:47Z", "message": "fix(engine): remove h2 unique constrain suffix check\n\nas the suffix changes on alter variable table\n\nRelated to CAM-10978"}, "afterCommit": {"oid": "e55a82595c6e2cc9bcbafc62bf93dbe5a2b5f78b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e55a82595c6e2cc9bcbafc62bf93dbe5a2b5f78b", "committedDate": "2020-04-03T11:29:13Z", "message": "feat(engine): history creation on asyncBefore start event\n\n* remove delay of historic variables creation on asyncBefore start event\n* set processInstanceId as activityInstanceId for such variables\n* set initial flag to historic variables updates that contain the inital\nvalue of the variables on process instance start\n* query for initial variable updates during process instance restart if\ninitalSetVariables flag is raised\n* keep the legacy details query in process instance restart for instance\ncreated prior 7.13\n* introduce legacy behavior for instance created prior 7.13 that do not\nhave historic data created; migration test cases\n* delay disposal of executionStartContext to guarantee correct initial\nflag set for variable in execution listeners\n* modification test cases\n* restart process instance test cases\n\nRelated to CAM-10978"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MjEyMDQ4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/714#pullrequestreview-387212048", "createdAt": "2020-04-03T12:31:42Z", "commit": {"oid": "e55a82595c6e2cc9bcbafc62bf93dbe5a2b5f78b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1948, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}