{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDQ0OTc4", "number": 743, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDowNDowOFrODr_4JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxMDozOFrODsAA8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDYxOTI1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDowNDowOFrOF8qenw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMToxNzowOFrOF8s2TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NDg0Nw==", "bodyText": "Why does this use a supplier as the method parameter? The first thing the method does is call #get.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399154847", "createdAt": "2020-03-27T10:04:08Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -50,6 +56,10 @@ public Authorization execute(CommandContext commandContext) {\n \n     authorizationManager.validateResourceCompatibility(authorization);\n \n+    if (isHistoricTaskInstanceResource()) {\n+      provideRemovalTime(() -> getHistoricTaskInstance(commandContext));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2NTIxOA==", "bodyText": "This is to resuse the provideRemovalTime method when tackling the Historic Process Instance feature.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399165218", "createdAt": "2020-03-27T10:22:43Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -50,6 +56,10 @@ public Authorization execute(CommandContext commandContext) {\n \n     authorizationManager.validateResourceCompatibility(authorization);\n \n+    if (isHistoricTaskInstanceResource()) {\n+      provideRemovalTime(() -> getHistoricTaskInstance(commandContext));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NDg0Nw=="}, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE4NzM4OQ==", "bodyText": "Not sure I can follow. Couldn't the historic process instance feature also just pass a HistoryEvent to the method?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399187389", "createdAt": "2020-03-27T11:04:30Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -50,6 +56,10 @@ public Authorization execute(CommandContext commandContext) {\n \n     authorizationManager.validateResourceCompatibility(authorization);\n \n+    if (isHistoricTaskInstanceResource()) {\n+      provideRemovalTime(() -> getHistoricTaskInstance(commandContext));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NDg0Nw=="}, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE5MzY3Ng==", "bodyText": "You are right! Might be a left over from an intermediate implementation state.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399193676", "createdAt": "2020-03-27T11:17:08Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -50,6 +56,10 @@ public Authorization execute(CommandContext commandContext) {\n \n     authorizationManager.validateResourceCompatibility(authorization);\n \n+    if (isHistoricTaskInstanceResource()) {\n+      provideRemovalTime(() -> getHistoricTaskInstance(commandContext));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NDg0Nw=="}, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDYyMzE1OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDowNToxOFrOF8qhHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoyMzowOVrOF8rH6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NTQ4Nw==", "bodyText": "We can also skip the query if the resourceId is *", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399155487", "createdAt": "2020-03-27T10:05:18Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -65,4 +75,36 @@ public Authorization execute(CommandContext commandContext) {\n     return authorization;\n   }\n \n+  protected void provideRemovalTime(Supplier<HistoryEvent> supplier) {\n+    HistoryEvent historicInstance = supplier.get();\n+\n+    if (historicInstance != null) {\n+      String rootProcessInstanceId = historicInstance.getRootProcessInstanceId();\n+      authorization.setRootProcessInstanceId(rootProcessInstanceId);\n+\n+      Date removalTime = historicInstance.getRemovalTime();\n+      authorization.setRemovalTime(removalTime);\n+\n+    } else { // reset\n+      authorization.setRootProcessInstanceId(null);\n+      authorization.setRemovalTime(null);\n+\n+    }\n+  }\n+\n+  protected HistoryEvent getHistoricTaskInstance(CommandContext commandContext) {\n+    String historicTaskInstanceId = authorization.getResourceId();\n+\n+    if (historicTaskInstanceId == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2NTQxOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399165419", "createdAt": "2020-03-27T10:23:09Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/SaveAuthorizationCmd.java", "diffHunk": "@@ -65,4 +75,36 @@ public Authorization execute(CommandContext commandContext) {\n     return authorization;\n   }\n \n+  protected void provideRemovalTime(Supplier<HistoryEvent> supplier) {\n+    HistoryEvent historicInstance = supplier.get();\n+\n+    if (historicInstance != null) {\n+      String rootProcessInstanceId = historicInstance.getRootProcessInstanceId();\n+      authorization.setRootProcessInstanceId(rootProcessInstanceId);\n+\n+      Date removalTime = historicInstance.getRemovalTime();\n+      authorization.setRemovalTime(removalTime);\n+\n+    } else { // reset\n+      authorization.setRootProcessInstanceId(null);\n+      authorization.setRemovalTime(null);\n+\n+    }\n+  }\n+\n+  protected HistoryEvent getHistoricTaskInstance(CommandContext commandContext) {\n+    String historicTaskInstanceId = authorization.getResourceId();\n+\n+    if (historicTaskInstanceId == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NTQ4Nw=="}, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDY0MTc4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/resources/org/camunda/bpm/engine/impl/mapping/entity/Authorization.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoxMDozOFrOF8qsog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDoyMzozNFrOF8rJGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1ODQzNA==", "bodyText": "Maybe here as well it makes sense to add the root instance id to the persistent state then.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399158434", "createdAt": "2020-03-27T10:10:38Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/resources/org/camunda/bpm/engine/impl/mapping/entity/Authorization.xml", "diffHunk": "@@ -60,7 +60,8 @@\n       RESOURCE_TYPE_ = #{resourceType, jdbcType=INTEGER},\n       RESOURCE_ID_ = #{resourceId, jdbcType=VARCHAR},\n       PERMS_ = #{permissions, jdbcType=INTEGER},\n-      REMOVAL_TIME_ = #{removalTime, jdbcType=TIMESTAMP}\n+      REMOVAL_TIME_ = #{removalTime, jdbcType=TIMESTAMP},\n+      ROOT_PROC_INST_ID_ = #{rootProcessInstanceId, jdbcType=TIMESTAMP}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE2NTcyMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/743#discussion_r399165721", "createdAt": "2020-03-27T10:23:34Z", "author": {"login": "tasso94"}, "path": "engine/src/main/resources/org/camunda/bpm/engine/impl/mapping/entity/Authorization.xml", "diffHunk": "@@ -60,7 +60,8 @@\n       RESOURCE_TYPE_ = #{resourceType, jdbcType=INTEGER},\n       RESOURCE_ID_ = #{resourceId, jdbcType=VARCHAR},\n       PERMS_ = #{permissions, jdbcType=INTEGER},\n-      REMOVAL_TIME_ = #{removalTime, jdbcType=TIMESTAMP}\n+      REMOVAL_TIME_ = #{removalTime, jdbcType=TIMESTAMP},\n+      ROOT_PROC_INST_ID_ = #{rootProcessInstanceId, jdbcType=TIMESTAMP}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1ODQzNA=="}, "originalCommit": {"oid": "f0d39dbd7a896c5b3c5a57a13a7bcab067745164"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4710, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}