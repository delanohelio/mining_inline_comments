{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1OTYwNDc2", "number": 1184, "title": "CAM-12863: Pipeline extract artifact logic", "bodyText": "CAM-12863", "createdAt": "2020-12-10T14:04:43Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1184", "merged": true, "mergeCommit": {"oid": "bcbe42a104eafd36d3cb69b76d39f1f480b8aef5"}, "closed": true, "closedAt": "2020-12-14T11:36:07Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlGbj3AFqTU1MDAyNjM3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmEIrBgBqjQxMDg3NDg4MjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDI2Mzc5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1184#pullrequestreview-550026379", "createdAt": "2020-12-11T11:41:58Z", "commit": {"oid": "303bf7a1a0d5aadf91b6f3ef83b851d2dbd884bd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0MTo1OFrOID1MuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMTo0MTo1OFrOID1MuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDg4ODI0OA==", "bodyText": "Since we're generally not using exclusion patterns when archiving artifacts, can we provide refactor the existing cambpmArchiveArtifacts method, or create a new one that will accept a varargs argument where we can provide all of the patterns as an array?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1184#discussion_r540888248", "createdAt": "2020-12-11T11:41:58Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -78,15 +78,15 @@ pipeline {\n \n           // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n           // add a new line for each group of artifacts\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war')\n+          cambpmArchiveArtifacts('.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "303bf7a1a0d5aadf91b6f3ef83b851d2dbd884bd"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMDI2ODky", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1184#pullrequestreview-550026892", "createdAt": "2020-12-11T11:42:50Z", "commit": {"oid": "303bf7a1a0d5aadf91b6f3ef83b851d2dbd884bd"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTMxNzg5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1184#pullrequestreview-551131789", "createdAt": "2020-12-14T08:22:23Z", "commit": {"oid": "e993526b8f939839e183144a4d9b5b8269f64ed3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdf833443437640de9d9059f93ca80e7bd8a769c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/cdf833443437640de9d9059f93ca80e7bd8a769c", "committedDate": "2020-12-14T11:34:56Z", "message": "chore(ci): extract artifact logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4909c2e4b4ff9d25ed4a6735a3f4e507d397a01b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4909c2e4b4ff9d25ed4a6735a3f4e507d397a01b", "committedDate": "2020-12-14T11:34:59Z", "message": "review hints"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e993526b8f939839e183144a4d9b5b8269f64ed3", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e993526b8f939839e183144a4d9b5b8269f64ed3", "committedDate": "2020-12-11T13:55:06Z", "message": "review hints"}, "afterCommit": {"oid": "4909c2e4b4ff9d25ed4a6735a3f4e507d397a01b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4909c2e4b4ff9d25ed4a6735a3f4e507d397a01b", "committedDate": "2020-12-14T11:34:59Z", "message": "review hints"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2097, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}