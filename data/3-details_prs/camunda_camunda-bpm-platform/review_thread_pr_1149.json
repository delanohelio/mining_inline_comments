{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTA4NzE3", "number": 1149, "reviewThreads": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNTowN1rOE9qBSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyOToxMVrOFAL6Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDg3MDQ4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNTowN1rOH6dhcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNzowMFrOH6dmaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2MzE1Mw==", "bodyText": "I think now this env.EE_BRANCH_NAME should be pram.EE_BRANCH_NAME to use the default value.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r531063153", "createdAt": "2020-11-26T14:25:07Z", "author": {"login": "aabouzaid"}, "path": "Jenkinsfile", "diffHunk": "@@ -49,50 +49,77 @@ pipeline {\n       string defaultValue: 'pipeline-master', description: 'The name of the EE branch to run the EE pipeline on', name: 'EE_BRANCH_NAME'\n   }\n   stages {\n-    stage('ASSEMBLY') {\n+    stage('Test 0') {\n       agent {\n         kubernetes {\n           yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n         }\n       }\n-      steps {\n-        withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-          nodejs('nodejs-14.6.0'){\n-             configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-               sh \"\"\"\n-                 mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n-               \"\"\"\n-             }\n-          }\n+      stages('Test 1') {\n+        stage('ASSEMBLY') {\n+          agent none\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+              nodejs('nodejs-14.6.0'){\n+                 configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n+                   sh \"\"\"\n+                     mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n+                   \"\"\"\n+                 }\n+              }\n+            \n+              // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n+              // add a new line for each group of artifacts\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            \n+              stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n+              stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n+              stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+            }\n \n-          // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n-          // add a new line for each group of artifacts\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5e6899fb9c354f743ef4fc3433305428d742325"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2NDQyNw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r531064427", "createdAt": "2020-11-26T14:27:00Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -49,50 +49,77 @@ pipeline {\n       string defaultValue: 'pipeline-master', description: 'The name of the EE branch to run the EE pipeline on', name: 'EE_BRANCH_NAME'\n   }\n   stages {\n-    stage('ASSEMBLY') {\n+    stage('Test 0') {\n       agent {\n         kubernetes {\n           yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n         }\n       }\n-      steps {\n-        withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-          nodejs('nodejs-14.6.0'){\n-             configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-               sh \"\"\"\n-                 mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n-               \"\"\"\n-             }\n-          }\n+      stages('Test 1') {\n+        stage('ASSEMBLY') {\n+          agent none\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+              nodejs('nodejs-14.6.0'){\n+                 configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n+                   sh \"\"\"\n+                     mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n+                   \"\"\"\n+                 }\n+              }\n+            \n+              // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n+              // add a new line for each group of artifacts\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            \n+              stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n+              stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n+              stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+            }\n \n-          // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n-          // add a new line for each group of artifacts\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2MzE1Mw=="}, "originalCommit": {"oid": "a5e6899fb9c354f743ef4fc3433305428d742325"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjQ5NjcxOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMToxN1rOH8sPdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMToxN1rOH8sPdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMTQ2MQ==", "bodyText": "The return type should be boolean here.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533401461", "createdAt": "2020-12-01T13:21:17Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -355,18 +320,31 @@ void runMaven(boolean runtimeStash, boolean archivesStash, boolean qaStash, Stri\n   if (qaStash) unstash \"platform-stash-qa\"\n   String forkCount = singleThreaded? \"-DforkCount=1\" : '';\n   configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-    sh(\"cd ${directory} && mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B\")\n+    sh(\"mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B -f ${directory}/pom.xml\")\n   }\n }\n \n void withLabels(String... labels) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 272}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxMDk1OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNDo1MFrOH8sYAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNDo1MFrOH8sYAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzY0OA==", "bodyText": "Same here, the return type should be boolean.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533403648", "createdAt": "2020-12-01T13:24:50Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -355,18 +320,31 @@ void runMaven(boolean runtimeStash, boolean archivesStash, boolean qaStash, Stri\n   if (qaStash) unstash \"platform-stash-qa\"\n   String forkCount = singleThreaded? \"-DforkCount=1\" : '';\n   configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-    sh(\"cd ${directory} && mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B\")\n+    sh(\"mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B -f ${directory}/pom.xml\")\n   }\n }\n \n void withLabels(String... labels) {\n-  for ( l in labels) {\n-    pullRequest.labels.contains(labelName)\n+  if (env.BRANCH == 'pipeline-master') {\n+    return true;\n+  } else if (!params.STANDALONE) {\n+    for (l in labels) {\n+      if (new JsonSlurper().parseText(params.PR_LABELS).contains(l)) {\n+        return true;\n+      }\n+    }\n+  } else {\n+    for (l in labels) {\n+      if (pullRequest.labels.contains(l)) {\n+        return true;  \n+      }\n+    }\n   }\n+  return false;\n }\n \n void withDbLabels(String dbLabel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 293}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxNjY0OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNjoxNlrOH8sbjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNjoxNlrOH8sbjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDU1OA==", "bodyText": "Shouldn't this be an array?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n          \n          \n            \n                      labels: ['all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533404558", "createdAt": "2020-12-01T13:26:16Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 305}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxNzg4OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNjozNFrOH8scRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNjozNFrOH8scRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDc0Mw==", "bodyText": "Shouldn't this be an array?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n          \n          \n            \n                      labels: ['all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533404743", "createdAt": "2020-12-01T13:26:34Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 311}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxOTY1OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzowNFrOH8sdWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzowNFrOH8sdWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTAxNw==", "bodyText": "Same as above\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: ''],\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405017", "createdAt": "2020-12-01T13:27:04Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 317}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUyMDE0OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzoxMVrOH8sdnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzoxMVrOH8sdnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTA4NA==", "bodyText": "Same as above\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: ''],\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405084", "createdAt": "2020-12-01T13:27:11Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'old-engine': [\n           directory: 'qa/',\n           command: 'verify -Pold-engine,',\n           qaStash: false],\n       'rolling-update': [\n           directory: 'qa/test-db-rolling-update/',\n           command: 'verify -Prolling-update,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 327}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUyMDc0OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzoxOFrOH8sd_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzoxOFrOH8sd_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTE4MA==", "bodyText": "Same as above\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: '']\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405180", "createdAt": "2020-12-01T13:27:18Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'old-engine': [\n           directory: 'qa/',\n           command: 'verify -Pold-engine,',\n           qaStash: false],\n       'rolling-update': [\n           directory: 'qa/test-db-rolling-update/',\n           command: 'verify -Prolling-update,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'large-data-tests': [\n           directory: 'qa/large-data-tests/',\n           command: 'verify -Plarge-data-tests,',\n-          qaStash: false]\n+          qaStash: false,\n+          labels: '']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 333}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUyNTk3OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyODozOFrOH8shYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyODozOFrOH8shYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjA1MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return withLabels('default-build')\n          \n          \n            \n                        withLabels('default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406050", "createdAt": "2020-12-01T13:28:38Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 240}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUyOTc1OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOToyN1rOH8sjrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOToyN1rOH8sjrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjYzOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels(getLabels(env.PROFILE))\n          \n          \n            \n                          withLabels(getLabels(env.PROFILE))", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406639", "createdAt": "2020-12-01T13:29:27Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -260,20 +232,18 @@ pipeline {\n             values 'check-sql', 'upgrade-db', 'instance-migration', 'old-engine', 'rolling-update', 'large-data-tests'\n           }\n         }\n-        agent {\n-          kubernetes {\n-            yaml getDbAgent(env.DB)\n-          }\n-        }\n         when {\n           anyOf {\n             branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels('all-db') || withDbLabel(env.DB)\n-//              }\n+            expression {\n+              return withLabels(getLabels(env.PROFILE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUzMDkzOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOTo0MVrOH8skWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOTo0MVrOH8skWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjgwOA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406808", "createdAt": "2020-12-01T13:29:41Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -84,45 +88,35 @@ pipeline {\n     stage('H2 QA tests') {\n       parallel {\n         stage('sql-scripts-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUzMTcwOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOTo1MVrOH8sk0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyOTo1MVrOH8sk0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjkyOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406929", "createdAt": "2020-12-01T13:29:51Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -84,45 +88,35 @@ pipeline {\n     stage('H2 QA tests') {\n       parallel {\n         stage('sql-scripts-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')\n+            }\n+            beforeAgent true\n+          }\n           agent {\n             kubernetes {\n               yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n             }\n           }\n-          when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('qa')\n-                }\n-              }\n-            }\n-          }\n           steps {\n             withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n               runMaven(true, false, false, 'distro/sql-script/', 'install -Pcheck-sql,h2')\n             }\n           }\n         }\n         stage('UPGRADE-databases-from-714-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUzMjI5OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDowMFrOH8slNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDowMFrOH8slNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzAzMA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('default-build', 'migration')\n          \n          \n            \n                          withLabels('default-build', 'migration')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407030", "createdAt": "2020-12-01T13:30:00Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -135,22 +129,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-instance-migration-h2') {\n+          when {\n+            expression {\n+              return withLabels('default-build', 'migration')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUzMzY0OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDoxNFrOH8smAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDoxNFrOH8smAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzIzNA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407234", "createdAt": "2020-12-01T13:30:14Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -163,22 +152,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-old-engine-from-714-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUzNDI1OnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDoyNVrOH8smZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMDoyNVrOH8smZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzMzNA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rolling-update', 'default-build')\n          \n          \n            \n                          withLabels('rolling-update', 'default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407334", "createdAt": "2020-12-01T13:30:25Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -191,22 +175,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-rolling-update-h2') {\n+          when {\n+            expression {\n+              return withLabels('rolling-update', 'default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjU0NTAyOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMjo1NFrOH8sszQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzozMjo1NFrOH8sszQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwODk3Mw==", "bodyText": "We can put these labels into a list, but since it's not used anywhere else, this is okay.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533408973", "createdAt": "2020-12-01T13:32:54Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -76,36 +84,47 @@ pipeline {\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n-\n+        \n           stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n           stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n           stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+        \n         }\n-\n-        build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false),\n-            string(name: 'CE_BRANCH_NAME', value: \"${BRANCH_NAME}\")\n-        ], quietPeriod: 10, wait: false\n-        build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false)\n+        \n+        build job: \"cambpm-jenkins-pipelines-ee/${params.EE_BRANCH_NAME}\", parameters: [\n+                string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+                booleanParam(name: 'STANDALONE', value: false),\n+                string(name: 'CE_BRANCH_NAME', value: \"${env.BRANCH_NAME}\"),\n+                string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n         ], quietPeriod: 10, wait: false\n+\n+        script {\n+          if (withLabels('default-build','rolling-update','migration','all-db','h2','db2','mysql','oracle','mariadb','sqlserver','postgresql','cockroachdb')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjU3Nzc1OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo0MDo0OVrOH8tAtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo0MDo0OVrOH8tAtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxNDA3MQ==", "bodyText": "These changes should be reverted, since they remove the webapps-* and engine-unit-authorizations tests.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533414071", "createdAt": "2020-12-01T13:40:49Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,33 +336,23 @@ pipeline {\n             name 'DB'\n             values 'postgresql_96', 'mariadb_103'\n           }\n-          axis {\n-            name 'PROFILE'\n-            values 'engine-unit', 'engine-unit-authorizations', 'webapps-unit', 'webapps-unit-authorizations'\n-          }\n         }\n         when {\n-          anyOf {\n-            branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels(\"all-db\") || withDbLabel(env.DB)\n-//              }\n-            }\n+          expression {\n+            return withLabels(\"all-db\") || withDbLabel(env.DB)\n           }\n+          beforeAgent true\n         }\n         agent {\n           kubernetes {\n             yaml getDbAgent(env.DB)\n           }\n         }\n         stages {\n-          stage('UNIT test') {\n+          stage(\"engine-UNIT\") {\n             steps {\n-              echo(\"UNIT DB Test Stage: ${env.PROFILE}-${env.DB}\")\n               withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-                runMaven(true, false, false, getMavenProfileDir(env.PROFILE), getMavenProfileCmd(env.PROFILE) + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)\n+                runMaven(true, false, false, 'engine/', 'clean test -P' + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 299}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjU4NDg0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzo0MjoyOFrOH8tE9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToxOToyM1rOH-VV9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxNTE1OQ==", "bodyText": "I think we should define a global variable called DEFAULT_BRANCH and use this variable in the when block. It would be easier to update when we need to change it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533415159", "createdAt": "2020-12-01T13:42:28Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -272,15 +261,8 @@ pipeline {\n         }\n         stage('webapp-IT-standalone-wildfly') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('webapps', 'IT')\n-                }\n-              }\n-            }\n+            branch 'pipeline-master';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyMzQ0NA==", "bodyText": "A method called defaultBranch() is also good. I guess we will tackle this further when we create the Shared Library.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r535123444", "createdAt": "2020-12-03T11:19:23Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -272,15 +261,8 @@ pipeline {\n         }\n         stage('webapp-IT-standalone-wildfly') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('webapps', 'IT')\n-                }\n-              }\n-            }\n+            branch 'pipeline-master';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxNTE1OQ=="}, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 221}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDM2OTE3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMDozMlrOH9Qpkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMDozMlrOH9Qpkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5Nzk3MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'rolling-update', 'migration')\n          \n          \n            \n                          withLabels('h2', 'rolling-update', 'migration')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533997970", "createdAt": "2020-12-02T09:00:32Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -76,36 +85,47 @@ pipeline {\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n-\n+        \n           stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n           stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n           stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+        \n         }\n-\n-        build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false),\n-            string(name: 'CE_BRANCH_NAME', value: \"${BRANCH_NAME}\")\n-        ], quietPeriod: 10, wait: false\n-        build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false)\n+        \n+        build job: \"cambpm-jenkins-pipelines-ee/${params.EE_BRANCH_NAME}\", parameters: [\n+                string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+                booleanParam(name: 'STANDALONE', value: false),\n+                string(name: 'CE_BRANCH_NAME', value: \"${env.BRANCH_NAME}\"),\n+                string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n         ], quietPeriod: 10, wait: false\n+\n+        script {\n+          if (withLabels('default-build','rolling-update','migration','all-db','h2','db2','mysql','oracle','mariadb','sqlserver','postgresql','cockroachdb')) {\n+           build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n+               string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+               booleanParam(name: 'STANDALONE', value: false),\n+               string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n+           ], quietPeriod: 10, wait: false\n+          }\n+\n+          if (env.BRANCH_NAME == 'master') {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+              configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n+               sh 'mvn -s \\$MAVEN_SETTINGS_XML org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged -DaltStagingDirectory=${WORKSPACE}/staging -Dmaven.repo.local=${WORKSPACE}/.m2 -DskipStaging=true -B'\n+              }\n+            }\n+          }\n+        }\n       }\n     }\n     stage('h2 tests') {\n       parallel {\n         stage('engine-UNIT-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('h2')\n-                }\n-              }\n+            expression {\n+              return withLabels('h2', 'rolling-update', 'migration')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDM3MDUxOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMDo1MVrOH9QqWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMDo1MVrOH9QqWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODE3MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2')\n          \n          \n            \n                          withLabels('h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998170", "createdAt": "2020-12-02T09:00:51Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -120,15 +140,10 @@ pipeline {\n         }\n         stage('engine-UNIT-authorizations-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('h2')\n-                }\n-              }\n+            expression {\n+              return withLabels('h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDM3MTgzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMToxM1rOH9QrHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMToxM1rOH9QrHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODM2NA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rest-api')\n          \n          \n            \n                          withLabels('rest-api')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998364", "createdAt": "2020-12-02T09:01:13Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -143,15 +158,10 @@ pipeline {\n         }\n         stage('engine-rest-UNIT-jersey-2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('rest')\n-                }\n-              }\n+            expression {\n+              return withLabels('rest-api')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDM3MzUxOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMTozOVrOH9QsJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMTozOVrOH9QsJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODYyOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rest-api')\n          \n          \n            \n                          withLabels('rest-api')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998629", "createdAt": "2020-12-02T09:01:39Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -166,15 +176,10 @@ pipeline {\n         }\n         stage('engine-rest-UNIT-resteasy3') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('rest')\n-                }\n-              }\n+            expression {\n+              return withLabels('rest-api')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDM3NDY0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMTo1NFrOH9Qs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTowMTo1NFrOH9Qs1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODgwNg==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('default-build')\n          \n          \n            \n                          withLabels('default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998806", "createdAt": "2020-12-02T09:01:54Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -189,15 +194,10 @@ pipeline {\n         }\n         stage('webapp-UNIT-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('webapps')\n-                }\n-              }\n+            expression {\n+              return withLabels('default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDYxMDI3OnYy", "diffSide": "LEFT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NTozOVrOH9S98Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToxNzowOVrOH-VM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTk1Mw==", "bodyText": "Should we add the default-build label here? I think JDK jobs were included in it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r534035953", "createdAt": "2020-12-02T09:55:39Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')\n+          }\n+          beforeAgent true\n+        }\n         agent {\n           kubernetes {\n             yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n           }\n         }\n-        when {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a"}, "originalPosition": 250}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA2NDExOQ==", "bodyText": "Yep, 5 rows above. I moved every when block before agent blocks.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r534064119", "createdAt": "2020-12-02T10:37:02Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')\n+          }\n+          beforeAgent true\n+        }\n         agent {\n           kubernetes {\n             yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n           }\n         }\n-        when {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTk1Mw=="}, "originalCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a"}, "originalPosition": 250}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEyMTEyOQ==", "bodyText": "You're right, somehow I managed to miss it, sorry.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r535121129", "createdAt": "2020-12-03T11:17:09Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')\n+          }\n+          beforeAgent true\n+        }\n         agent {\n           kubernetes {\n             yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n           }\n         }\n-        when {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTk1Mw=="}, "originalCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a"}, "originalPosition": 250}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NzM5NDcxOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyOToxMVrOH-V-3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyOToxMVrOH-V-3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMzkxNg==", "bodyText": "These changes should be reverted, since they remove the webapps-* and engine-unit-authorizations tests.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r535133916", "createdAt": "2020-12-03T11:29:11Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,33 +337,23 @@ pipeline {\n             name 'DB'\n             values 'postgresql_96', 'mariadb_103'\n           }\n-          axis {\n-            name 'PROFILE'\n-            values 'engine-unit', 'engine-unit-authorizations', 'webapps-unit', 'webapps-unit-authorizations'\n-          }\n         }\n         when {\n-          anyOf {\n-            branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels(\"all-db\") || withDbLabel(env.DB)\n-//              }\n-            }\n+          expression {\n+            withLabels(\"all-db\") || withDbLabel(env.DB)\n           }\n+          beforeAgent true\n         }\n         agent {\n           kubernetes {\n             yaml getDbAgent(env.DB)\n           }\n         }\n         stages {\n-          stage('UNIT test') {\n+          stage(\"engine-UNIT\") {\n             steps {\n-              echo(\"UNIT DB Test Stage: ${env.PROFILE}-${env.DB}\")\n               withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-                runMaven(true, false, false, getMavenProfileDir(env.PROFILE), getMavenProfileCmd(env.PROFILE) + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)\n+                runMaven(true, false, false, 'engine/', 'clean test -P' + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4"}, "originalPosition": 305}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4350, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}