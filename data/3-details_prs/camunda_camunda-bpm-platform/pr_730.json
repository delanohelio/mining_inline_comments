{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MzIyMDY3", "number": 730, "title": "CAM-11530: add documentation for signal endpoint ", "bodyText": "", "createdAt": "2020-03-16T15:39:23Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730", "merged": true, "mergeCommit": {"oid": "a1a74074824b48b195c5e57b4d954957982ef718"}, "closed": true, "closedAt": "2020-03-19T06:56:32Z", "author": {"login": "mboskamp"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOd1grgBqjMxMzYxNzgzMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPGS9SgFqTM3NzQ2MTAxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13da44d08fa0a563e6cf79f1b79acd910066a58b", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/13da44d08fa0a563e6cf79f1b79acd910066a58b", "committedDate": "2020-03-16T15:35:41Z", "message": "chore(rest-openapi): Add documentation for signal REST endpoint\n\nRelated to CAM-11530"}, "afterCommit": {"oid": "8d96cf1a4dd1b5dbf0c4b1e8e1bab3772edefa47", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8d96cf1a4dd1b5dbf0c4b1e8e1bab3772edefa47", "committedDate": "2020-03-17T07:45:26Z", "message": "chore(rest-openapi): Add documentation for signal REST endpoint\n\nRelated to CAM-11530"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8edc9651abb2657fc13a3ffdccbfd907eb06ae2", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f8edc9651abb2657fc13a3ffdccbfd907eb06ae2", "committedDate": "2020-03-17T07:49:51Z", "message": "chore(rest-openapi): Add documentation for signal REST endpoint\n\nRelated to CAM-11530"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d96cf1a4dd1b5dbf0c4b1e8e1bab3772edefa47", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8d96cf1a4dd1b5dbf0c4b1e8e1bab3772edefa47", "committedDate": "2020-03-17T07:45:26Z", "message": "chore(rest-openapi): Add documentation for signal REST endpoint\n\nRelated to CAM-11530"}, "afterCommit": {"oid": "f8edc9651abb2657fc13a3ffdccbfd907eb06ae2", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f8edc9651abb2657fc13a3ffdccbfd907eb06ae2", "committedDate": "2020-03-17T07:49:51Z", "message": "chore(rest-openapi): Add documentation for signal REST endpoint\n\nRelated to CAM-11530"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c950b3909fbf2de1b3696dc8889d307f3290e707", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c950b3909fbf2de1b3696dc8889d307f3290e707", "committedDate": "2020-03-17T08:05:06Z", "message": "chore(rest-openapi): improve readability\n\nRelated to CAM-11530"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODI4ODIy", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#pullrequestreview-375828822", "createdAt": "2020-03-17T08:36:49Z", "commit": {"oid": "c950b3909fbf2de1b3696dc8889d307f3290e707"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODozNjo1MFrOF3STuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODozNjo1MFrOF3STuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNTk2Mw==", "bodyText": "Example:\n\n  \n    \n      camunda-bpm-platform/engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/runtime/modification/ProcessInstanceModificationInstructionDto.ftl\n    \n    \n        Lines 9 to 14\n      in\n      46484a1\n    \n    \n    \n    \n\n        \n          \n           desc = \"**Mandatory**. One of the following values: `cancel`, `startBeforeActivity`, `startAfterActivity`, `startTransition`. \n        \n\n        \n          \n            \n        \n\n        \n          \n                   * A cancel instruction requests cancellation of a single activity instance or all instances of one activity. \n        \n\n        \n          \n                   * A startBeforeActivity instruction requests to enter a given activity. \n        \n\n        \n          \n                   * A startAfterActivity instruction requests to execute the single outgoing sequence flow of a given activity. \n        \n\n        \n          \n                   * A startTransition instruction requests to execute a specific sequence flow.\" /> \n        \n    \n  \n\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    desc = \"Returned if: \n          \n          \n            \n            \n          \n          \n            \n                            no name was given\n          \n          \n            \n            \n          \n          \n            \n                            or if the variable value or type is invalid, for example if the value could not be parsed to an integer value or the passed variable type is not supported\n          \n          \n            \n            \n          \n          \n            \n                            or if a tenant id and an execution id is specified.\"/>\n          \n          \n            \n                    desc = \"Returned if: \n          \n          \n            \n            \n          \n          \n            \n                            * no name was given\n          \n          \n            \n                            * or if the variable value or type is invalid, for example if the value could not be parsed to an integer value or the passed variable type is not supported\n          \n          \n            \n                            * or if a tenant id and an execution id is specified.\"/>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#discussion_r393515963", "createdAt": "2020-03-17T08:36:50Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/signal/post.ftl", "diffHunk": "@@ -0,0 +1,54 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"throwSignal\"\n+      tag = \"Signal\"\n+      desc = \"A signal is an event of global scope (broadcast semantics) and is delivered to all active handlers. \n+              Internally this maps to the engine's signal event received builder method RuntimeService#createSignalEvent().\n+              For more information about the signal behavior, see the [Signal Events](${docsUrl}/reference/bpmn20/events/signal-events/)\n+              section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n+\n+  \"parameters\" : [],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"SignalDto\"\n+      examples = ['\"examle-1\": {\n+                     \"summary\": \"POST /signal\",\n+                     \"description\": \"The content of the Request Body\",\n+                     \"value\": {\n+                         \"name\": \"policy_conditions_changed\",\n+                          \"variables\": {\n+                            \"newTimePeriodInMonth\": {\n+                              \"value\": 24\n+                           }\n+                         }\n+                       }\n+                     }']/>\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"204\"\n+        desc = \"Request successful.\"/>\n+\n+    <@lib.response\n+        code = \"400\"\n+        desc = \"Returned if: \n+\n+                no name was given\n+\n+                or if the variable value or type is invalid, for example if the value could not be parsed to an integer value or the passed variable type is not supported\n+\n+                or if a tenant id and an execution id is specified.\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c950b3909fbf2de1b3696dc8889d307f3290e707"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13b38d2502659cf76a3d2e4388622ecb96b95698", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/13b38d2502659cf76a3d2e4388622ecb96b95698", "committedDate": "2020-03-17T08:52:03Z", "message": "chore(rest-openapi): use bullet points instead of newlines\n\nRelated to CAM-11530"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb7f4379507ff9981ee68bc6ff50463781100ff", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9eb7f4379507ff9981ee68bc6ff50463781100ff", "committedDate": "2020-03-17T09:39:19Z", "message": "SQUAH ME: add code and description formatting, and exception format notes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODU3MTkz", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#pullrequestreview-375857193", "createdAt": "2020-03-17T09:18:08Z", "commit": {"oid": "13b38d2502659cf76a3d2e4388622ecb96b95698"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToxODowOVrOF3TsFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOToxODowOVrOF3TsFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzODU4MQ==", "bodyText": "We should specify that the defaultValue is false.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"boolean\"\n          \n          \n            \n                    type = \"boolean\"\n          \n          \n            \n                    defaultValue = false", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#discussion_r393538581", "createdAt": "2020-03-17T09:18:09Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/SignalDto.ftl", "diffHunk": "@@ -0,0 +1,42 @@\n+{\n+  \"type\" : \"object\",\n+  \"properties\" : {\n+\n+    <@lib.property\n+        name = \"name\"\n+        type = \"string\"\n+        desc = \"The name of the signal to deliver.\n+                Note: This property is mandatory.\"/>\n+\n+    <@lib.property\n+        name = \"executionId\"\n+        type = \"string\"\n+        desc = \"Optionally specifies a single execution which is notified by the signal.\n+                Note: If no execution id is defined the signal is broadcasted to all subscribed handlers.\"/>\n+\n+    <@lib.property\n+        name = \"variables\"\n+        type = \"object\"\n+        additionalProperties = true\n+        dto = \"VariableValueDto\"\n+        desc = \"A JSON object containing variable key-value pairs. Each key is a variable name and each\n+                value a JSON variable value object.\"/>\n+\n+    <@lib.property\n+        name = \"tenantId\"\n+        type = \"string\"\n+        desc = \"Specifies a tenant to deliver the signal. The signal can only be received on executions\n+                or process definitions which belongs to the given tenant.\n+\n+                Note: Cannot be used in combination with executionId.\"/>\n+\n+    <@lib.property\n+        name = \"withoutTenantId\"\n+        type = \"boolean\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13b38d2502659cf76a3d2e4388622ecb96b95698"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTU1Mzc0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#pullrequestreview-375955374", "createdAt": "2020-03-17T11:38:57Z", "commit": {"oid": "9eb7f4379507ff9981ee68bc6ff50463781100ff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTozODo1OFrOF3YdHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMTozODo1OFrOF3YdHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYxNjY3MA==", "bodyText": "We can wrap this in a code format.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            **Note**: Cannot be used in combination with executionId.\"/>\n          \n          \n            \n                            **Note**: Cannot be used in combination with `executionId`.\"/>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#discussion_r393616670", "createdAt": "2020-03-17T11:38:58Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/SignalDto.ftl", "diffHunk": "@@ -0,0 +1,45 @@\n+{\n+  \"type\" : \"object\",\n+  \"properties\" : {\n+\n+    <@lib.property\n+        name = \"name\"\n+        type = \"string\"\n+        desc = \"The name of the signal to deliver.\n+\n+                **Note**: This property is mandatory.\" />\n+\n+    <@lib.property\n+        name = \"executionId\"\n+        type = \"string\"\n+        desc = \"Optionally specifies a single execution which is notified by the signal.\n+\n+                **Note**: If no execution id is defined the signal is broadcasted to all subscribed\n+                handlers. \"/>\n+\n+    <@lib.property\n+        name = \"variables\"\n+        type = \"object\"\n+        additionalProperties = true\n+        dto = \"VariableValueDto\"\n+        desc = \"A JSON object containing variable key-value pairs. Each key is a variable name and\n+                each value a JSON variable value object.\"/>\n+\n+    <@lib.property\n+        name = \"tenantId\"\n+        type = \"string\"\n+        desc = \"Specifies a tenant to deliver the signal. The signal can only be received on\n+                executions or process definitions which belongs to the given tenant.\n+\n+                **Note**: Cannot be used in combination with executionId.\"/>\n+\n+    <@lib.property\n+        name = \"withoutTenantId\"\n+        type = \"boolean\"\n+        last = true\n+        desc = \"If true the signal can only be received on executions or process definitions which\n+                belongs to no tenant. Value may not be false as this is the default behavior.\n+\n+                **Note**: Cannot be used in combination with executionId.\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7f4379507ff9981ee68bc6ff50463781100ff"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5fcf85cf5e131b4e94719d65d0302f105c3717f", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b5fcf85cf5e131b4e94719d65d0302f105c3717f", "committedDate": "2020-03-18T14:14:20Z", "message": "SQUASH ME: use monospace font for executionId\n\nCo-Authored-By: Nikola Koevski <nikola.koevski@camunda.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NDYxMDE2", "url": "https://github.com/camunda/camunda-bpm-platform/pull/730#pullrequestreview-377461016", "createdAt": "2020-03-19T06:55:05Z", "commit": {"oid": "b5fcf85cf5e131b4e94719d65d0302f105c3717f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1976, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}