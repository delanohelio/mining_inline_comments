{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTkwNTQ5", "number": 876, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNTo0MjoyNFrOEKwKpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTowNTowNlrOEKz7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzEwMzc1OnYy", "diffSide": "LEFT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateGroupCmd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNTo0MjoyNFrOGr-KAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowODo0N1rOGsv5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDMyMQ==", "bodyText": "The static import of this method is not used anymore, we should remove it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r448760321", "createdAt": "2020-07-02T05:42:24Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateGroupCmd.java", "diffHunk": "@@ -39,8 +39,6 @@ public CreateGroupCmd(String groupId) {\n   }\n   \n   protected Group executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"Group\", groupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NTE3OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r449575179", "createdAt": "2020-07-03T13:08:47Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateGroupCmd.java", "diffHunk": "@@ -39,8 +39,6 @@ public CreateGroupCmd(String groupId) {\n   }\n   \n   protected Group executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"Group\", groupId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDMyMQ=="}, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzEwNDI0OnYy", "diffSide": "LEFT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateTenantCmd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNTo0Mjo0MlrOGr-KSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowODo1MlrOGsv5KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDM5Mw==", "bodyText": "The static import of this method is not used anymore, we should remove it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r448760393", "createdAt": "2020-07-02T05:42:42Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateTenantCmd.java", "diffHunk": "@@ -38,8 +38,6 @@ public CreateTenantCmd(String tenantId) {\n \n   @Override\n   protected Tenant executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"Tenant\", tenantId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NTIwOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r449575208", "createdAt": "2020-07-03T13:08:52Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateTenantCmd.java", "diffHunk": "@@ -38,8 +38,6 @@ public CreateTenantCmd(String tenantId) {\n \n   @Override\n   protected Tenant executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"Tenant\", tenantId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDM5Mw=="}, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzEwNDY0OnYy", "diffSide": "LEFT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateUserCmd.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNTo0Mjo1NlrOGr-KhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowODo1OVrOGsv5Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDQ1Mw==", "bodyText": "The static import of this method is not used anymore, we should remove it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r448760453", "createdAt": "2020-07-02T05:42:56Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateUserCmd.java", "diffHunk": "@@ -39,8 +39,6 @@ public CreateUserCmd(String userId) {\n   }\n   \n   protected User executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"User\", userId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3NTI1MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r449575251", "createdAt": "2020-07-03T13:08:59Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cmd/CreateUserCmd.java", "diffHunk": "@@ -39,8 +39,6 @@ public CreateUserCmd(String userId) {\n   }\n   \n   protected User executeCmd(CommandContext commandContext) {\n-    ensureWhitelistedResourceId(commandContext, \"User\", userId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc2MDQ1Mw=="}, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzcyMDY5OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/identity/PasswordPolicyRule.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTowNTowNlrOGsEIew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzo0MjoxNVrOGswzSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg1ODIzNQ==", "bodyText": "I understand that the design decision was to not mark the method as deprecated via the @Deprecated annotation, as we are forced to support it nevertheless. I would challenge that by arguing that it does add the value of discouraging the use of the method while not forcing a user to switch necessarily. I think it would be good to use the annotation and explain in the javadocs, why it is discouraged to use it.\nOn another note, mentioning in the javadocs that it is deprecated does not add any additional value compared to using the annotation and might be even more confusing (It says the method is deprecated, but it is not).\nEither way, I think we should explain in which cases the it is fine to stick with the old (deprecated) method and when a user should not use it anymore (e.g. when using user data in a PasswordPolicyRule implementation).\nWe can discuss this if you like.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r448858235", "createdAt": "2020-07-02T09:05:06Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/identity/PasswordPolicyRule.java", "diffHunk": "@@ -43,13 +45,38 @@\n   Map<String, String> getParameters();\n \n   /**\n+   * <p>\n+   *   <strong>\n+   *     DEPRECATED: Use {@link PasswordPolicyRule#execute(String, User)} instead!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU5MDA5MQ==", "bodyText": "I agree that a Javadocs comment brings no value. However, I would still argue against the @Deprecated annotation since public API is never removed from Camunda BPM 7.x, and we guarantee that it continues to work in future minor and patch releases as initially designed. Under these given circumstances, deprecating the API method would just bother our users and brings no extra value.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/876#discussion_r449590091", "createdAt": "2020-07-03T13:42:15Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/identity/PasswordPolicyRule.java", "diffHunk": "@@ -43,13 +45,38 @@\n   Map<String, String> getParameters();\n \n   /**\n+   * <p>\n+   *   <strong>\n+   *     DEPRECATED: Use {@link PasswordPolicyRule#execute(String, User)} instead!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg1ODIzNQ=="}, "originalCommit": {"oid": "32718dbb09dac8118d603304e62d737af3ee8bc6"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4509, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}