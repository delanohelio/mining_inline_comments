{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDU0MTE1", "number": 749, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzozMTo0MVrODsEMqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMzoxNFrODspKTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTMyNzE0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMzozMTo0MVrOF8xOmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNToxMzoyMVrOF9upUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA==", "bodyText": "note to myself, double check the value", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r399265434", "createdAt": "2020-03-27T13:31:41Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MDQyNQ==", "bodyText": "we agreed to put 64 as value for READ_VARIABLE permission to be consistent with TaskPermissions#READ_VARIABLE", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400270425", "createdAt": "2020-03-30T15:11:48Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 4);\n          \n          \n            \n              READ_VARIABLE(\"READ_VARIABLE\", 64);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271698", "createdAt": "2020-03-30T15:13:21Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/authorization/HistoricTaskPermissions.java", "diffHunk": "@@ -40,7 +40,10 @@\n   ALL(\"ALL\", Integer.MAX_VALUE),\n \n   /** Indicates that READ interactions are permitted. */\n-  READ(\"READ\", 2);\n+  READ(\"READ\", 2),\n+\n+  /** Indicates that READ_VARIABLE interactions are permitted. */\n+  READ_VARIABLE(\"READ_VARIABLE\", 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI2NTQzNA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTIzNTkzOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToyOTozNVrOF9lVYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMToyOTozNVrOF9lVYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDExOTEzNg==", "bodyText": "could we fix this typo (wasn't me)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * will be required to fetch variables when the autorizations are enabled.\n          \n          \n            \n               * will be required to fetch variables when the authorizations are enabled.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400119136", "createdAt": "2020-03-30T11:29:35Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/ProcessEngineConfiguration.java", "diffHunk": "@@ -372,6 +372,7 @@\n    * READ_HISTORY_VARIABLE, or\n    * READ_TASK_VARIABLE on Process Definition resource, and\n    * READ_VARIABLE on Task resource\n+   * READ_VARIABLE on Historic Task Instance resource\n    * will be required to fetch variables when the autorizations are enabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM3NjIyOnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMToxNVrOF9mr9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMToxNVrOF9mr9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MTMwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);\n          \n          \n            \n                enableHistoricInstancePermissions= processEngineConfiguration.isEnableHistoricInstancePermissions();\n          \n          \n            \n                processEngineConfiguration.setEnableHistoricInstancePermissions(true);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400141301", "createdAt": "2020-03-30T12:11:15Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -78,6 +100,7 @@ public void init() {\n \r\n     enforceSpecificVariablePermission = processEngineConfiguration.isEnforceSpecificVariablePermission();\r\n     processEngineConfiguration.setEnforceSpecificVariablePermission(true);\r\n+    processEngineConfiguration.setEnableHistoricInstancePermissions(true);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM4MjE4OnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMjo1OFrOF9mvsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNToxMzo0MFrOF9uqWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA==", "bodyText": "Is it only for debugging purposes, shall we remove it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142258", "createdAt": "2020-03-30T12:12:58Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MTk2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"RUNTIME!\");", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400271960", "createdAt": "2020-03-30T15:13:40Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjI1OA=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTM4MzE5OnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjoxMzoxNFrOF9mwSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNToxMzo1NVrOF9urJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ==", "bodyText": "Is it only for debugging purposes, shall we remove it?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400142409", "createdAt": "2020-03-30T12:13:14Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r\n+      Authorization runtimeUserAuthorization = authorizationService.createAuthorizationQuery()\r\n+          .resourceType(TASK)\r\n+          .userIdIn(userId)\r\n+          .singleResult();\r\n+\r\n+      assertNotNull(runtimeUserAuthorization);\r\n+      verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\r\n+\r\n+    } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\r\n+      System.out.println(\"HISTORY!\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI3MjE2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  System.out.println(\"HISTORY!\");", "url": "https://github.com/camunda/camunda-bpm-platform/pull/749#discussion_r400272165", "createdAt": "2020-03-30T15:13:55Z", "author": {"login": "yanavasileva"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/TaskReadVariablePermissionAuthorizationTest.java", "diffHunk": "@@ -326,22 +350,64 @@ protected void startProcessInstanceByKey(String processKey) {\n \r\n   protected void verifyUserAuthorization(String userId) {\r\n     authRule.disableAuthorization();\r\n-    Authorization userAuthorization = authorizationService.createAuthorizationQuery().userIdIn(userId).singleResult();\r\n-    assertNotNull(userAuthorization);\r\n-    verifyReadVariablePermission(userAuthorization);\r\n+\r\n+    if (AUTHORIZATION_TYP_RUNTIME.equals(authorizationType)) {\r\n+      System.out.println(\"RUNTIME!\");\r\n+      Authorization runtimeUserAuthorization = authorizationService.createAuthorizationQuery()\r\n+          .resourceType(TASK)\r\n+          .userIdIn(userId)\r\n+          .singleResult();\r\n+\r\n+      assertNotNull(runtimeUserAuthorization);\r\n+      verifyReadVariablePermission(runtimeUserAuthorization, TaskPermissions.READ_VARIABLE);\r\n+\r\n+    } else if (AUTHORIZATION_TYP_HISTORIC.equals(authorizationType)) {\r\n+      System.out.println(\"HISTORY!\");\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE0MjQwOQ=="}, "originalCommit": {"oid": "e1f0b9cc7bb3ed0251c7568e3dd33cb48f965776"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4548, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}