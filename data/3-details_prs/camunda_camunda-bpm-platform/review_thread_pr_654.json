{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0ODM4NTc0", "number": 654, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo0MTo0OFrODgc9Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo0MzoyM1rODgc-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzU1NDM4OnYy", "diffSide": "RIGHT", "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo0MTo0OFrOFqqpCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNToyODoxMlrOFrG1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzE0NA==", "bodyText": "Typo fix:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Controls the whether the FEEL legacy behavior is enabled or not\n          \n          \n            \n               * Controls whether the FEEL legacy behavior is enabled or not", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380283144", "createdAt": "2020-02-17T16:41:48Z", "author": {"login": "koevskinikola"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NTAxMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380745013", "createdAt": "2020-02-18T15:28:12Z", "author": {"login": "tasso94"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzE0NA=="}, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzU1NTQwOnYy", "diffSide": "RIGHT", "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo0MjowOVrOFqqpqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNToyODoyOVrOFrG1_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzMwNw==", "bodyText": "Typo fix:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Controls the whether the FEEL legacy behavior is enabled or not\n          \n          \n            \n               * Controls whether the FEEL legacy behavior is enabled or not", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380283307", "createdAt": "2020-02-17T16:42:09Z", "author": {"login": "koevskinikola"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   */\n+  public void setEnableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NTIxNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380745214", "createdAt": "2020-02-18T15:28:29Z", "author": {"login": "tasso94"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   */\n+  public void setEnableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzMwNw=="}, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzU1ODg1OnYy", "diffSide": "RIGHT", "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNjo0MzoyM1rOFqqrvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNToyODoyMFrOFrG1lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzgzNg==", "bodyText": "I think we should use the setEnableFeelLegacyBehavior here so that we have a single point where the flag is changed. This might lead to inconsistent behaviour if a user isn't carefull.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380283836", "createdAt": "2020-02-17T16:43:23Z", "author": {"login": "koevskinikola"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   */\n+  public void setEnableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   * @return this\n+   */\n+  public DefaultDmnEngineConfiguration enableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc0NTExMQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/camunda/camunda-bpm-platform/pull/654#discussion_r380745111", "createdAt": "2020-02-18T15:28:20Z", "author": {"login": "tasso94"}, "path": "engine-dmn/engine/src/main/java/org/camunda/bpm/dmn/engine/impl/DefaultDmnEngineConfiguration.java", "diffHunk": "@@ -521,4 +566,31 @@ public DefaultDmnEngineConfiguration setFeelCustomFunctionProviders(List<FeelCus\n     return this;\n   }\n \n+  /**\n+   * @return whether FEEL legacy behavior is enabled or not\n+   */\n+  public boolean isEnableFeelLegacyBehavior() {\n+    return enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   */\n+  public void setEnableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;\n+  }\n+\n+  /**\n+   * Controls the whether the FEEL legacy behavior is enabled or not\n+   *\n+   * @param enableFeelLegacyBehavior the FEEL legacy behavior\n+   * @return this\n+   */\n+  public DefaultDmnEngineConfiguration enableFeelLegacyBehavior(boolean enableFeelLegacyBehavior) {\n+    this.enableFeelLegacyBehavior = enableFeelLegacyBehavior;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI4MzgzNg=="}, "originalCommit": {"oid": "ed1b5233b4b5bb35a24b5d910167f1ea52ad616b"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4642, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}