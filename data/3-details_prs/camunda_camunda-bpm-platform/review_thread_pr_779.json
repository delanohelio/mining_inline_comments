{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjAzNzM2", "number": 779, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjowMToxMlrODzsQMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo0NToyNFrODztVLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTI5MDEwOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/topic-names/get.ftl", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjowMToxMlrOGIRBLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjowMToxMlrOGIRBLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyMDYyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Providing no parameters will return a list of all distinct topic names with external tasks.\n          \n          \n            \n                  Providing no parameters will return a list of all distinct topic names with external tasks.\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/779#discussion_r411320620", "createdAt": "2020-04-20T12:01:12Z", "author": {"login": "tasso94"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/external-task/topic-names/get.ftl", "diffHunk": "@@ -0,0 +1,50 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTopicNames\"\n+      tag = \"External Task\"\n+      desc = \"Queries for distinct topic names of external tasks that fulfill given parameters.\n+      Query can be restricted to only tasks with retries left, tasks that are locked, or tasks\n+      that are unlocked. The parameters withLockedTasks and withUnlockedTasks are\n+      exclusive. Setting them both to true will return an empty list.\n+      Providing no parameters will return a list of all distinct topic names with external tasks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2fce28d24d5259553926af8b774c7ae7b9a43ff"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTQ2NjY4OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/ExternalTaskRestService.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo0NToyNFrOGISpYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToxMTo0NFrOGIZb_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0NzI5Ng==", "bodyText": "Let's use a dedicated DTO instead of List<String> to remain consistent with all other existing REST API endpoints:\n\nIntroduce a new DTO class (e. g. ExternalTaskTopicNameDto) located under org.camunda.bpm.engine.rest.dto.externaltask\n\nThe class should have the attribute topicName of type String\nIntroduce a getter & setter for the attribute\n\n\nConvert the list of strings to a list of ExternalTaskTopicNameDtos\nChange the method signature to return List<ExternalTaskTopicNameDto>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/779#discussion_r411347296", "createdAt": "2020-04-20T12:45:24Z", "author": {"login": "tasso94"}, "path": "engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/ExternalTaskRestService.java", "diffHunk": "@@ -91,4 +91,11 @@\n   @Produces(MediaType.APPLICATION_JSON)\n   BatchDto setRetriesAsync(SetRetriesForExternalTasksDto retriesDto);\n \n+  @GET\n+  @Path(\"/topic-names\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  List<String> getTopicNames(@QueryParam(\"withLockedTasks\") boolean withLockedTasks,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2fce28d24d5259553926af8b774c7ae7b9a43ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1Njk1Mw==", "bodyText": "@tasso94, do we really want that indirection in the response?\nRight now the response would look like this: [ \"foo\", \"bar\", ...] (basically, a flat list of topic names)\nWith the requested change, we would introduce another indirection which results in such a response:\n[\n { \"topicName\": \"foo\" },\n { \"topicName\": \"bar\" },\n { \"topicName\": ... }\n]\n\nAs a user, I need to resolve that indirection in my code.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/779#discussion_r411356953", "createdAt": "2020-04-20T13:00:07Z", "author": {"login": "romansmirnov"}, "path": "engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/ExternalTaskRestService.java", "diffHunk": "@@ -91,4 +91,11 @@\n   @Produces(MediaType.APPLICATION_JSON)\n   BatchDto setRetriesAsync(SetRetriesForExternalTasksDto retriesDto);\n \n+  @GET\n+  @Path(\"/topic-names\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  List<String> getTopicNames(@QueryParam(\"withLockedTasks\") boolean withLockedTasks,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0NzI5Ng=="}, "originalCommit": {"oid": "d2fce28d24d5259553926af8b774c7ae7b9a43ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2MjQyNw==", "bodyText": "I agree with you: a flat list is nicer to handle. However, this would be the very first endpoint where we introduce such a flat list. For instance, the process engine endpoint has this indirection as well: https://docs.camunda.org/manual/7.12/reference/rest/engine/get-names/", "url": "https://github.com/camunda/camunda-bpm-platform/pull/779#discussion_r411362427", "createdAt": "2020-04-20T13:08:31Z", "author": {"login": "tasso94"}, "path": "engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/ExternalTaskRestService.java", "diffHunk": "@@ -91,4 +91,11 @@\n   @Produces(MediaType.APPLICATION_JSON)\n   BatchDto setRetriesAsync(SetRetriesForExternalTasksDto retriesDto);\n \n+  @GET\n+  @Path(\"/topic-names\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  List<String> getTopicNames(@QueryParam(\"withLockedTasks\") boolean withLockedTasks,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0NzI5Ng=="}, "originalCommit": {"oid": "d2fce28d24d5259553926af8b774c7ae7b9a43ff"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ1ODU1OA==", "bodyText": "Let's keep it as is since it's easier for users.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/779#discussion_r411458558", "createdAt": "2020-04-20T15:11:44Z", "author": {"login": "tasso94"}, "path": "engine-rest/engine-rest/src/main/java/org/camunda/bpm/engine/rest/ExternalTaskRestService.java", "diffHunk": "@@ -91,4 +91,11 @@\n   @Produces(MediaType.APPLICATION_JSON)\n   BatchDto setRetriesAsync(SetRetriesForExternalTasksDto retriesDto);\n \n+  @GET\n+  @Path(\"/topic-names\")\n+  @Produces(MediaType.APPLICATION_JSON)\n+  List<String> getTopicNames(@QueryParam(\"withLockedTasks\") boolean withLockedTasks,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM0NzI5Ng=="}, "originalCommit": {"oid": "d2fce28d24d5259553926af8b774c7ae7b9a43ff"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}