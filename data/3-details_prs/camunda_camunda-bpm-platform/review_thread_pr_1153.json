{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDUwMDcw", "number": 1153, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMzo1M1rOE_JdOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzozNFrOE_JjFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUwNjgxOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMzo1M1rOH8sVjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxNjowNFrOH9c6Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzAyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('webapps')\n          \n          \n            \n                              withLabels('default-build','h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533403023", "createdAt": "2020-12-01T13:23:53Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -204,20 +240,30 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              runMaven(true, false, false, 'webapps/', 'clean test -Pdatabase,h2 -Dskip.frontend.build=true')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit'), getMavenProfileCmd('webapps-unit') + getDbProfiles('h2'))\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit')\n             }\n           }\n         }\n-        stage('engine-IT-tomcat-9-h2') {// TODO change it to `postgresql-96`\n+        stage('webapp-UNIT-authorizations-h2') {\n           when {\n             anyOf {\n               branch 'pipeline-master';\n               allOf {\n                 changeRequest();\n                 expression {\n-                  withLabels('IT')\n+                  withLabels('webapps')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODgxMA==", "bodyText": "Fixed it with the new commits.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534198810", "createdAt": "2020-12-02T14:16:04Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -204,20 +240,30 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              runMaven(true, false, false, 'webapps/', 'clean test -Pdatabase,h2 -Dskip.frontend.build=true')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit'), getMavenProfileCmd('webapps-unit') + getDbProfiles('h2'))\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit')\n             }\n           }\n         }\n-        stage('engine-IT-tomcat-9-h2') {// TODO change it to `postgresql-96`\n+        stage('webapp-UNIT-authorizations-h2') {\n           when {\n             anyOf {\n               branch 'pipeline-master';\n               allOf {\n                 changeRequest();\n                 expression {\n-                  withLabels('IT')\n+                  withLabels('webapps')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzAyMw=="}, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 127}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxMzI2OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNToyNVrOH8sZcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxNjoxM1rOH9c6hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDAxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','tomcat')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404018", "createdAt": "2020-12-01T13:25:25Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5ODkxOA==", "bodyText": "Fixed it with the new commits.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534198918", "createdAt": "2020-12-02T14:16:13Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDAxOA=="}, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 162}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUxNDc0OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNTo0NlrOH8saYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxNjozMVrOH9c7TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDI1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','wildfly')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404258", "createdAt": "2020-12-01T13:25:46Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')\n+                }\n+              }\n+            }\n+          }\n+          agent {\n+            kubernetes {\n+              yaml getDbAgent('postgresql_96')\n+            }\n+          }\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,postgresql,engine-integration')\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'engine-IT')\n+            }\n+          }\n+        }\n+        stage('engine-IT-wildfly-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTExNw==", "bodyText": "Fixed it with the new commits.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534199117", "createdAt": "2020-12-02T14:16:31Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')\n+                }\n+              }\n+            }\n+          }\n+          agent {\n+            kubernetes {\n+              yaml getDbAgent('postgresql_96')\n+            }\n+          }\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,postgresql,engine-integration')\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'engine-IT')\n+            }\n+          }\n+        }\n+        stage('engine-IT-wildfly-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDI1OA=="}, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 195}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NjUyMTgwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzozNFrOH8serQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDoxNzoxMFrOH9c9NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTM1Nw==", "bodyText": "Tomcat IT doesn't have downstream stages\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        failure {\n          \n          \n            \n                          addFailedStageType(failedStageTypes, 'webapp-IT')\n          \n          \n            \n                        }", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533405357", "createdAt": "2020-12-01T13:27:34Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -268,6 +383,9 @@ pipeline {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapp-IT')\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 241}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDE5OTYwNA==", "bodyText": "Removed this block in two places engine-IT-tomcat-postgresql-96 and webapp-IT-tomcat-h2.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r534199604", "createdAt": "2020-12-02T14:17:10Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -268,6 +383,9 @@ pipeline {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapp-IT')\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTM1Nw=="}, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 241}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4353, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}