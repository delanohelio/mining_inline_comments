{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDU0ODY0", "number": 608, "title": "[CAM-10748] feat(engine-cdi): add JobExecutor using managed threads", "bodyText": "related to CAM-10748", "createdAt": "2020-01-06T09:08:46Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/608", "merged": true, "mergeCommit": {"oid": "02a4d34fa567babf6c2b3fe799020cf0ead71ebd"}, "closed": true, "closedAt": "2020-02-19T12:34:45Z", "author": {"login": "tmetzke"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3qq9bABqjI5MjM5NDk2ODY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcF1wmCgBqjMwNTE1NTM3MTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9f5a0527e4147fca854b22a27d078822ccad6a2", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b9f5a0527e4147fca854b22a27d078822ccad6a2", "committedDate": "2019-12-18T07:46:43Z", "message": "feat(engine-cdi): add JobExecutor using managed threads\n\nrelated to CAM-10748"}, "afterCommit": {"oid": "47233e25723d79177ffd8b3023dfd2101a8fe26c", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/47233e25723d79177ffd8b3023dfd2101a8fe26c", "committedDate": "2020-01-06T11:43:27Z", "message": "feat(engine-cdi): add JobExecutor using managed threads"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93d8dc1fd7dbaf33a67f91dd5a18d627b626bdd8", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/93d8dc1fd7dbaf33a67f91dd5a18d627b626bdd8", "committedDate": "2020-01-17T10:41:11Z", "message": "chore(engine-cdi): use scheduledExecutorService for acquireJobsRunnable"}, "afterCommit": {"oid": "2ee862babcfa05ea6a84ed325322c40e9639f7f7", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2ee862babcfa05ea6a84ed325322c40e9639f7f7", "committedDate": "2020-01-06T13:18:37Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ee862babcfa05ea6a84ed325322c40e9639f7f7", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2ee862babcfa05ea6a84ed325322c40e9639f7f7", "committedDate": "2020-01-06T13:18:37Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}, "afterCommit": {"oid": "6c5f8d03048efb7051a10ff0e0dc0894535cda9a", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6c5f8d03048efb7051a10ff0e0dc0894535cda9a", "committedDate": "2020-01-17T10:48:23Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MTc0Mjcx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/608#pullrequestreview-358174271", "createdAt": "2020-02-13T12:23:28Z", "commit": {"oid": "6c5f8d03048efb7051a10ff0e0dc0894535cda9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjoyMzoyOFrOFpRz4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjoyMzoyOFrOFpRz4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzc0Nw==", "bodyText": "As pointed out in #533 , I think there should be some handling here.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/608#discussion_r378827747", "createdAt": "2020-02-13T12:23:28Z", "author": {"login": "tiesebarrell"}, "path": "engine-cdi/src/main/java/org/camunda/bpm/engine/cdi/impl/ManagedJobExecutor.java", "diffHunk": "@@ -18,43 +18,49 @@\n \n import java.util.List;\n import java.util.concurrent.RejectedExecutionException;\n+\n import javax.enterprise.concurrent.ManagedExecutorService;\n-import javax.enterprise.concurrent.ManagedThreadFactory;\n+import org.camunda.bpm.engine.ProcessEngineException;\n import org.camunda.bpm.engine.impl.ProcessEngineImpl;\n import org.camunda.bpm.engine.impl.jobexecutor.JobExecutor;\n-import org.camunda.bpm.engine.impl.jobexecutor.ThreadPoolJobExecutor;\n \n /**\n- * {@link JobExecutor} implementation that utilises an application server's managed thread pool to acquire and execute jobs.\n+ * {@link JobExecutor} implementation that utilises an application server's\n+ * managed thread pool to acquire and execute jobs.\n  */\n-public class ManagedJobExecutor extends ThreadPoolJobExecutor {\n+public class ManagedJobExecutor extends JobExecutor {\n \n-    private ManagedExecutorService managedExecutorService;\n-    private ManagedThreadFactory managedThreadFactory;\n+  private ManagedExecutorService managedExecutorService;\n \n-    /**\n-     * Constructs a new ManagedJobExecutor with the provided {@link ManagedExecutorService} and {@link ManagedThreadFactory}.\n-     */\n-    public ManagedJobExecutor(final ManagedExecutorService managedExecutorService, final ManagedThreadFactory managedThreadFactory) {\n-        this.managedExecutorService = managedExecutorService;\n-        this.managedThreadFactory = managedThreadFactory;\n-    }\n+  /**\n+   * Constructs a new ManagedJobExecutor with the provided\n+   * {@link ManagedExecutorService}\n+   */\n+  public ManagedJobExecutor(final ManagedExecutorService managedExecutorService) {\n+    this.managedExecutorService = managedExecutorService;\n+  }\n \n-    @Override\n-    public void executeJobs(List<String> jobIds, ProcessEngineImpl processEngine) {\n-        try {\n-            managedExecutorService.execute(getExecuteJobsRunnable(jobIds, processEngine));\n-        } catch (RejectedExecutionException e) {\n-            logRejectedExecution(processEngine, jobIds.size());\n-            rejectedJobsHandler.jobsRejected(jobIds, processEngine, this);\n-        }\n+  @Override\n+  public void executeJobs(List<String> jobIds, ProcessEngineImpl processEngine) {\n+    try {\n+      managedExecutorService.execute(getExecuteJobsRunnable(jobIds, processEngine));\n+    } catch (RejectedExecutionException e) {\n+      logRejectedExecution(processEngine, jobIds.size());\n+      rejectedJobsHandler.jobsRejected(jobIds, processEngine, this);\n     }\n+  }\n \n-    @Override\n-    protected void startJobAcquisitionThread() {\n-        if (jobAcquisitionThread == null) {\n-            jobAcquisitionThread = managedThreadFactory.newThread(acquireJobsRunnable);\n-            jobAcquisitionThread.start();\n-        }\n+  @Override\n+  protected void startExecutingJobs() {\n+    try {\n+      managedExecutorService.execute(acquireJobsRunnable);\n+    } catch (Exception e) {\n+      throw new ProcessEngineException(\"Could not schedule AcquireJobsRunnable for execution.\", e);\n     }\n+  }\n+\n+  @Override\n+  protected void stopExecutingJobs() {\n+    // nothing to do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c5f8d03048efb7051a10ff0e0dc0894535cda9a"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c5f8d03048efb7051a10ff0e0dc0894535cda9a", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6c5f8d03048efb7051a10ff0e0dc0894535cda9a", "committedDate": "2020-01-17T10:48:23Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}, "afterCommit": {"oid": "d54a54c32b6e3c9f4d2f915b15b56bc6c86339ae", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/d54a54c32b6e3c9f4d2f915b15b56bc6c86339ae", "committedDate": "2020-02-19T08:23:22Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b4ba7cc477332382d631953b93db5ce0664e3e3", "author": {"user": {"login": "tiesebarrell", "name": "Tiese Barrell"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9b4ba7cc477332382d631953b93db5ce0664e3e3", "committedDate": "2020-02-19T12:33:23Z", "message": "feat(engine-cdi): add JobExecutor using managed threads\n\nrelated to CAM-10748"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d54a54c32b6e3c9f4d2f915b15b56bc6c86339ae", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/d54a54c32b6e3c9f4d2f915b15b56bc6c86339ae", "committedDate": "2020-02-19T08:23:22Z", "message": "chore(engine-cdi): simplify ManagedJobExecutor\n\n* only use the managed executor service"}, "afterCommit": {"oid": "9b4ba7cc477332382d631953b93db5ce0664e3e3", "author": {"user": {"login": "tiesebarrell", "name": "Tiese Barrell"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9b4ba7cc477332382d631953b93db5ce0664e3e3", "committedDate": "2020-02-19T12:33:23Z", "message": "feat(engine-cdi): add JobExecutor using managed threads\n\nrelated to CAM-10748"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2002, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}