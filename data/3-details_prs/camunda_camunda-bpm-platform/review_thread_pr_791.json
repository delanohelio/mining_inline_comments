{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTI0NDE3", "number": 791, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzozMjowMVrOD2r0mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzozMjowMVrOD2r0mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NjY3Njc0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/metrics/parser/MetricsBpmnParseListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzozMjowMVrOGMjViw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMzozMjowMVrOGMjViw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTgxNTA1MQ==", "bodyText": "It's more robust to flip the operands of the comparison. An execution always has an ID, but an execution may not have a root process instance id (consider a migration case where a process instance was started in an old Camuna version without a root process instance id, and it executes a call activity in 7.13).", "url": "https://github.com/camunda/camunda-bpm-platform/pull/791#discussion_r415815051", "createdAt": "2020-04-27T13:32:01Z", "author": {"login": "ThorbenLindhauer"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/metrics/parser/MetricsBpmnParseListener.java", "diffHunk": "@@ -18,25 +18,41 @@\n \n import org.camunda.bpm.engine.delegate.ExecutionListener;\n import org.camunda.bpm.engine.impl.bpmn.parser.AbstractBpmnParseListener;\n+import org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity;\n+import org.camunda.bpm.engine.impl.persistence.entity.ProcessDefinitionEntity;\n import org.camunda.bpm.engine.impl.pvm.process.ActivityImpl;\n import org.camunda.bpm.engine.impl.pvm.process.ScopeImpl;\n import org.camunda.bpm.engine.impl.util.xml.Element;\n import org.camunda.bpm.engine.management.Metrics;\n+import org.camunda.bpm.engine.runtime.Execution;\n \n /**\n  * @author Daniel Meyer\n  *\n  */\n public class MetricsBpmnParseListener extends AbstractBpmnParseListener {\n \n-  public static MetricsExecutionListener ACTIVITY_INSTANCE_START_COUNTER = new MetricsExecutionListener(Metrics.ACTIVTY_INSTANCE_START);\n-  public static MetricsExecutionListener ACTIVITY_INSTANCE_END_COUNTER = new MetricsExecutionListener(Metrics.ACTIVTY_INSTANCE_END);\n+  public static MetricsExecutionListener ROOT_PROCESS_INSTANCE_START_COUNTER =\n+      new MetricsExecutionListener(Metrics.ROOT_PROCESS_INSTANCE_START,\n+                                   delegateExecution -> ((ExecutionEntity) delegateExecution)\n+                                       .getRootProcessInstanceId()\n+                                       .equals(delegateExecution.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f80316ad47c495f6c5d49260df5ad223b8dcaa"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4603, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}