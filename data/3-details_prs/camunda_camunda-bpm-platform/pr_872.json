{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNTY3OTc1", "number": 872, "title": "CAM-12025: integrate telemetry reporter with engine", "bodyText": "Related to CAM-12025", "createdAt": "2020-06-26T12:51:12Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872", "merged": true, "mergeCommit": {"oid": "17af8f7a16101b1dad890ffd4e3cb0d8f5e0cb35"}, "closed": true, "closedAt": "2020-07-01T07:38:48Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwAJIKgBqjM0OTI0Mjk5MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwk8z1gFqTQ0MDYwNTc0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c339a4899946465c91c9ed114136ccc384c80422", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c339a4899946465c91c9ed114136ccc384c80422", "committedDate": "2020-06-26T12:49:59Z", "message": "wip"}, "afterCommit": {"oid": "4d4f7db894c162d2963eec2a33c1e4af08b545db", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4d4f7db894c162d2963eec2a33c1e4af08b545db", "committedDate": "2020-06-29T12:23:53Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d4f7db894c162d2963eec2a33c1e4af08b545db", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4d4f7db894c162d2963eec2a33c1e4af08b545db", "committedDate": "2020-06-29T12:23:53Z", "message": "wip"}, "afterCommit": {"oid": "1634d28393fe91797ebbf7b61cae56abea429626", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1634d28393fe91797ebbf7b61cae56abea429626", "committedDate": "2020-06-29T15:20:18Z", "message": "feat(engine): schedule telemetry reporter in the engine\n\n* a telemetry reporter is created on each engine start\n* the reporter is scheduled on engine start if telemetry is enabled\n* the reporter is scheduled whenever the telemetry is enabled via API\n* the reporter is stopped whenever the telemetry is disbled via API\n* a sending task is recreated if the reporter has been stopped before\nso the timer task can be executed again\n* telemetry reporter is scheduled to run every 24 hours and on engine\nstop\n* telemetry data that is sent:\n-- engine version and edition\n-- engine installation id\n-- database vendor and version\n* the telemetry data is considered as static and its collected on engine\nstart\n\nRelated to CAM-12025"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35e9bacf016ef863c921708f10d5664e8007d2b7", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/35e9bacf016ef863c921708f10d5664e8007d2b7", "committedDate": "2020-06-29T15:26:06Z", "message": "feat(engine): schedule telemetry reporter in the engine\n\n* a telemetry reporter is created on each engine start\n* the reporter is scheduled on engine start if telemetry is enabled\n* the reporter is scheduled whenever the telemetry is enabled via API\n* the reporter is stopped whenever the telemetry is disbled via API\n* a sending task is recreated if the reporter has been stopped before\nso the timer task can be executed again\n* telemetry reporter is scheduled to run every 24 hours and on engine\nstop\n* telemetry data that is sent:\n-- engine version and edition\n-- engine installation id\n-- database vendor and version\n* the telemetry data is considered as static and its collected on engine\nstart\n\nRelated to CAM-12025"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1634d28393fe91797ebbf7b61cae56abea429626", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1634d28393fe91797ebbf7b61cae56abea429626", "committedDate": "2020-06-29T15:20:18Z", "message": "feat(engine): schedule telemetry reporter in the engine\n\n* a telemetry reporter is created on each engine start\n* the reporter is scheduled on engine start if telemetry is enabled\n* the reporter is scheduled whenever the telemetry is enabled via API\n* the reporter is stopped whenever the telemetry is disbled via API\n* a sending task is recreated if the reporter has been stopped before\nso the timer task can be executed again\n* telemetry reporter is scheduled to run every 24 hours and on engine\nstop\n* telemetry data that is sent:\n-- engine version and edition\n-- engine installation id\n-- database vendor and version\n* the telemetry data is considered as static and its collected on engine\nstart\n\nRelated to CAM-12025"}, "afterCommit": {"oid": "35e9bacf016ef863c921708f10d5664e8007d2b7", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/35e9bacf016ef863c921708f10d5664e8007d2b7", "committedDate": "2020-06-29T15:26:06Z", "message": "feat(engine): schedule telemetry reporter in the engine\n\n* a telemetry reporter is created on each engine start\n* the reporter is scheduled on engine start if telemetry is enabled\n* the reporter is scheduled whenever the telemetry is enabled via API\n* the reporter is stopped whenever the telemetry is disbled via API\n* a sending task is recreated if the reporter has been stopped before\nso the timer task can be executed again\n* telemetry reporter is scheduled to run every 24 hours and on engine\nstop\n* telemetry data that is sent:\n-- engine version and edition\n-- engine installation id\n-- database vendor and version\n* the telemetry data is considered as static and its collected on engine\nstart\n\nRelated to CAM-12025"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccd9e603e70a0366fb71107e9fc6d07f55f6f50", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0ccd9e603e70a0366fb71107e9fc6d07f55f6f50", "committedDate": "2020-06-30T05:38:45Z", "message": "remove test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/82309b0ae2f8d51ff469bb01b4632690c0b56196", "committedDate": "2020-06-30T08:14:52Z", "message": "SQUASH ME!"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Nzc2NDQ1", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#pullrequestreview-439776445", "createdAt": "2020-06-30T08:15:26Z", "commit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODoxNToyN1rOGqxEZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODoyODo0NVrOGqxmnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5NzMxNg==", "bodyText": "Anonymous new Command() can be replaced with lambda.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447497316", "createdAt": "2020-06-30T08:15:27Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/reporter/TelemetrySendingTask.java", "diffHunk": "@@ -68,21 +68,26 @@ protected void sendData() {\n     commandExecutor.execute(new Command<Void>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5ODE4OA==", "bodyText": "Gson is an expensive object. Can we extend the JsonUtil and use it from there?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447498188", "createdAt": "2020-06-30T08:16:49Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/reporter/TelemetrySendingTask.java", "diffHunk": "@@ -68,21 +68,26 @@ protected void sendData() {\n     commandExecutor.execute(new Command<Void>() {\n       @Override\n       public Void execute(CommandContext commandContext) {\n-        try {\n-          HttpPost request = new HttpPost(telemetryEndpoint);\n-          String telemetryData = new Gson().toJson(data);\n-          StringEntity requestBody = new StringEntity(telemetryData, StandardCharsets.UTF_8);\n-          request.setHeader(\"content-type\", MediaType.APPLICATION_JSON);\n-          request.setEntity(requestBody);\n-          HttpResponse response = httpClient.execute(request);\n+        // send data only if telemetry is enabled\n+        if (commandContext.getProcessEngineConfiguration().getManagementService().isTelemetryEnabled()) {\n+          try {\n+            HttpPost request = new HttpPost(telemetryEndpoint);\n+            String telemetryData = new Gson().toJson(data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5ODc1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                timer = new Timer(\"Camunda Telemetry Reporter\", true);\n          \n          \n            \n                timer = new Timer(\"Camunda BPM Runtime Telemetry Reporter\", true);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447498751", "createdAt": "2020-06-30T08:17:42Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/reporter/TelemetryReporter.java", "diffHunk": "@@ -54,22 +56,25 @@ protected void initTelemetrySendingTask() {\n   }\n \n   public void start() {\n+    if (stopped) {\n+      // if the reporter was already stopped another task should be scheduled\n+      initTelemetrySendingTask();\n+    }\n     timer = new Timer(\"Camunda Telemetry Reporter\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwMjg1OA==", "bodyText": "Right now, this method can be called multiple times via ManagementService#toggleTelemetry(true). This leads to multiple timers running in parallel. The timers which are not referenced anymore are still active in the background and continue to execute the telemetry sending task. They cannot be canceled and will eventually be force killed when the JVM is shutdown.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447502858", "createdAt": "2020-06-30T08:24:02Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/reporter/TelemetryReporter.java", "diffHunk": "@@ -54,22 +56,25 @@ protected void initTelemetrySendingTask() {\n   }\n \n   public void start() {\n+    if (stopped) {\n+      // if the reporter was already stopped another task should be scheduled\n+      initTelemetrySendingTask();\n+    }\n     timer = new Timer(\"Camunda Telemetry Reporter\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ5ODc1MQ=="}, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNDQwMA==", "bodyText": "System properties are not taken into account. When a user wants to proxy the telemetry endpoint, an HTTP client needs to be instantiated manually, which is tricky (engine plugin needed). Let's #useSystemProperties by default.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447504400", "createdAt": "2020-06-30T08:26:18Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/ProcessEngineConfigurationImpl.java", "diffHunk": "@@ -2557,6 +2575,37 @@ protected void initAdminGroups() {\n     }\n   }\n \n+  protected void initTelemetry() {\n+    if (telemetryData == null) {\n+      initTelemetryData();\n+    }\n+    if (telemetryHttpClient == null) {\n+      telemetryHttpClient = HttpClientBuilder.create().build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNTgxMw==", "bodyText": "Throws IllegalStateException if the task...\n\n... was already scheduled or canceled\n... the timer was canceled\n... the timer thread terminated", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447505813", "createdAt": "2020-06-30T08:28:22Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/reporter/TelemetryReporter.java", "diffHunk": "@@ -54,22 +56,25 @@ protected void initTelemetrySendingTask() {\n   }\n \n   public void start() {\n+    if (stopped) {\n+      // if the reporter was already stopped another task should be scheduled\n+      initTelemetrySendingTask();\n+    }\n     timer = new Timer(\"Camunda Telemetry Reporter\", true);\n     long reportingIntervalInMillis =  reportingIntervalInSeconds * 1000;\n \n     timer.scheduleAtFixedRate(telemetrySendingTask, reportingIntervalInMillis, reportingIntervalInMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUwNjA3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              protected static final String PRODUCT_NAME = \"Camunda BPM\";\n          \n          \n            \n              protected static final String PRODUCT_NAME = \"Camunda BPM Runtime\";", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#discussion_r447506076", "createdAt": "2020-06-30T08:28:45Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/ProcessEngineConfigurationImpl.java", "diffHunk": "@@ -387,6 +395,10 @@\n \n   public static final int DEFAULT_INVOCATIONS_PER_BATCH_JOB = 1;\n \n+  protected static final String EDITION_ENTERPRISE = \"enterprise\";\n+  protected static final String EDITION_COMMUNITY = \"community\";\n+  protected static final String PRODUCT_NAME = \"Camunda BPM\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82309b0ae2f8d51ff469bb01b4632690c0b56196"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30161c208263d512bfda205f20bb68c5d3a5b71", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/d30161c208263d512bfda205f20bb68c5d3a5b71", "committedDate": "2020-06-30T12:26:08Z", "message": "override telemetryEndpoint config in camunda.cfg.xml for tests to\nprevent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63550f6336ce91b7d6100dc45ca6d8f9c3e095de", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/63550f6336ce91b7d6100dc45ca6d8f9c3e095de", "committedDate": "2020-06-30T12:27:00Z", "message": "chore(engine): adjust telemetry\n\n* set installation id in bootstrap engine command\n* start reporter in engine command\n* rename product name to Camunda BPM Runtime, the reporter name as well\n* use lambda instead of anonymous new command\n* extend JsonUtil and gsonMapper for converting object to json\n* use useSystemProperties for http client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cf188aeeb80ce49d6f7e08a92a7e1e5034c42bd", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9cf188aeeb80ce49d6f7e08a92a7e1e5034c42bd", "committedDate": "2020-06-30T12:46:58Z", "message": "chore(engine): use HttpHeaders content type constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed4b0dec19e1e7fa3506c4f8c62615d4162d65eb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ed4b0dec19e1e7fa3506c4f8c62615d4162d65eb", "committedDate": "2020-06-30T15:39:29Z", "message": "revert(engine): override telemetryEndpoint config in camunda.cfg.xml for tests to\n\nThis reverts commit d30161c208263d512bfda205f20bb68c5d3a5b71."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8316bb5087209b2a98a5a90bf2a4873fd2dbc71", "author": {"user": {"login": "tasso94", "name": "Tassilo Weidner"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b8316bb5087209b2a98a5a90bf2a4873fd2dbc71", "committedDate": "2020-07-01T07:15:09Z", "message": "Avoid race conditions when telemetry reporter is started/stopped"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjA1NzQw", "url": "https://github.com/camunda/camunda-bpm-platform/pull/872#pullrequestreview-440605740", "createdAt": "2020-07-01T07:17:27Z", "commit": {"oid": "b8316bb5087209b2a98a5a90bf2a4873fd2dbc71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2572, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}