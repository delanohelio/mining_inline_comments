{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4NDUwMDcw", "number": 1153, "title": "CAM-12751: handle pipeline stage errors", "bodyText": "Related to CAM-12712, CAM-12751", "createdAt": "2020-11-27T07:45:26Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153", "merged": true, "mergeCommit": {"oid": "41cd4399e47741d2eb681a1898c7d7dd5b1e0c0a"}, "closed": true, "closedAt": "2020-12-04T09:26:39Z", "author": {"login": "koevskinikola"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgo2-sABqjQwNDY0NjUxMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi0KRygBqjQwNzE3NDc4ODc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "871055f4285511bd46fc4eb64a199d220e87bdba", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/871055f4285511bd46fc4eb64a199d220e87bdba", "committedDate": "2020-11-27T14:17:55Z", "message": "WIP: create helper methods 3"}, "afterCommit": {"oid": "6be8869f7522554ccf1eef2f62de52a51d4f813d", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6be8869f7522554ccf1eef2f62de52a51d4f813d", "committedDate": "2020-11-27T14:58:36Z", "message": "feat(ci): add Daily pipeline error handling\n\nRelated to CAM-12712, CAM-12751"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4b54602a47004908769eda7c1261122c919368b", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c4b54602a47004908769eda7c1261122c919368b", "committedDate": "2020-11-30T13:57:49Z", "message": "SQUASH ME:\n\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;"}, "afterCommit": {"oid": "167ff0c5afa13ac5c61b4b0e884de8348aa92515", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/167ff0c5afa13ac5c61b4b0e884de8348aa92515", "committedDate": "2020-11-30T16:11:44Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fdf1b83925e350e14b30daaf1e380cff61f3e87d", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/fdf1b83925e350e14b30daaf1e380cff61f3e87d", "committedDate": "2020-11-30T16:13:28Z", "message": "REVERT ME: introduce a failing unit test"}, "afterCommit": {"oid": "e4b25b2b0533ffffebd41e7cae34dc2720cbe27e", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e4b25b2b0533ffffebd41e7cae34dc2720cbe27e", "committedDate": "2020-11-30T16:30:46Z", "message": "REVERT ME: introduce a failing unit test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27578d5fc496943e9744827173ef322fd54204dd", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/27578d5fc496943e9744827173ef322fd54204dd", "committedDate": "2020-12-01T09:12:19Z", "message": "REVERT ME"}, "afterCommit": {"oid": "10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "committedDate": "2020-12-01T11:46:34Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/10ba928fdc1ea3a2d7e53e468639d235eb4c5719", "committedDate": "2020-12-01T11:46:34Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;"}, "afterCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b8d2757f67d837f4e162c95fd757643f694557d3", "committedDate": "2020-12-01T11:49:33Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODg4NDI5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#pullrequestreview-541888429", "createdAt": "2020-12-01T13:23:53Z", "commit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMzo1M1rOH8sVjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyNzozNFrOH8serQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzAyMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('webapps')\n          \n          \n            \n                              withLabels('default-build','h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533403023", "createdAt": "2020-12-01T13:23:53Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -204,20 +240,30 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              runMaven(true, false, false, 'webapps/', 'clean test -Pdatabase,h2 -Dskip.frontend.build=true')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit'), getMavenProfileCmd('webapps-unit') + getDbProfiles('h2'))\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit')\n             }\n           }\n         }\n-        stage('engine-IT-tomcat-9-h2') {// TODO change it to `postgresql-96`\n+        stage('webapp-UNIT-authorizations-h2') {\n           when {\n             anyOf {\n               branch 'pipeline-master';\n               allOf {\n                 changeRequest();\n                 expression {\n-                  withLabels('IT')\n+                  withLabels('webapps')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDAxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','tomcat')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404018", "createdAt": "2020-12-01T13:25:25Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDI1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              withLabels('IT')\n          \n          \n            \n                              withLabels('all-as','wildfly')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533404258", "createdAt": "2020-12-01T13:25:46Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -227,17 +273,86 @@ pipeline {\n               yaml getAgent()\n             }\n           }\n-          steps{\n-            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-              catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {\n-                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,h2,engine-integration')\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, false, false, getMavenProfileDir('webapps-unit-authorizations'), getMavenProfileCmd('webapps-unit-authorizations') + getDbProfiles('h2'))\n               }\n             }\n           }\n           post {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapps-unit-authorizations')\n+            }\n+          }\n+        }\n+        stage('engine-IT-tomcat-9-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')\n+                }\n+              }\n+            }\n+          }\n+          agent {\n+            kubernetes {\n+              yaml getDbAgent('postgresql_96')\n+            }\n+          }\n+          steps {\n+            catchError(stageResult: 'FAILURE') {\n+              withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+                runMaven(true, true, false, 'qa/', 'clean install -Ptomcat,postgresql,engine-integration')\n+              }\n+            }\n+          }\n+          post {\n+            always {\n+              junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n+            }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'engine-IT')\n+            }\n+          }\n+        }\n+        stage('engine-IT-wildfly-postgresql-96') {\n+          when {\n+            anyOf {\n+              branch 'pipeline-master';\n+              allOf {\n+                changeRequest();\n+                expression {\n+                  withLabels('IT')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTM1Nw==", "bodyText": "Tomcat IT doesn't have downstream stages\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        failure {\n          \n          \n            \n                          addFailedStageType(failedStageTypes, 'webapp-IT')\n          \n          \n            \n                        }", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#discussion_r533405357", "createdAt": "2020-12-01T13:27:34Z", "author": {"login": "yanavasileva"}, "path": "Jenkinsfile", "diffHunk": "@@ -268,6 +383,9 @@ pipeline {\n             always {\n               junit testResults: '**/target/*-reports/TEST-*.xml', keepLongStdio: true\n             }\n+            failure {\n+              addFailedStageType(failedStageTypes, 'webapp-IT')\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b8d2757f67d837f4e162c95fd757643f694557d3"}, "originalPosition": 241}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "912ea4174ddef4a4886be7ae4f9ec6693ee67734", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/912ea4174ddef4a4886be7ae4f9ec6693ee67734", "committedDate": "2020-12-02T14:19:26Z", "message": "SQUASH ME: fix JDK agent"}, "afterCommit": {"oid": "79ce3d2a935277784ad08333844968d5496154df", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/79ce3d2a935277784ad08333844968d5496154df", "committedDate": "2020-12-03T10:24:08Z", "message": "SQUASH ME: implement review hints 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTAyNTk4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1153#pullrequestreview-543902598", "createdAt": "2020-12-03T12:26:47Z", "commit": {"oid": "79ce3d2a935277784ad08333844968d5496154df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79ce3d2a935277784ad08333844968d5496154df", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/79ce3d2a935277784ad08333844968d5496154df", "committedDate": "2020-12-03T10:24:08Z", "message": "SQUASH ME: implement review hints 2"}, "afterCommit": {"oid": "b864bfe01cb8759ac8810f08803603f514d10a87", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b864bfe01cb8759ac8810f08803603f514d10a87", "committedDate": "2020-12-04T08:53:55Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77708c70d787cec4a2a2016973b509f295d9d949", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/77708c70d787cec4a2a2016973b509f295d9d949", "committedDate": "2020-12-04T09:16:35Z", "message": "feat(ci): add pipeline error handling\n\nRelated to CAM-12712, CAM-12751"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eea6173aa3b00a2743e634d2e7cba3ef3f9e4c85", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/eea6173aa3b00a2743e634d2e7cba3ef3f9e4c85", "committedDate": "2020-12-04T09:16:38Z", "message": "feat(ci): add Daily pipeline error handling\n\nRelated to CAM-12712, CAM-12751"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b2c94be298b76d27e092f1d1d8e1732b64893ae", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b2c94be298b76d27e092f1d1d8e1732b64893ae", "committedDate": "2020-12-04T09:16:38Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b864bfe01cb8759ac8810f08803603f514d10a87", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b864bfe01cb8759ac8810f08803603f514d10a87", "committedDate": "2020-12-04T08:53:55Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751"}, "afterCommit": {"oid": "2b2c94be298b76d27e092f1d1d8e1732b64893ae", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2b2c94be298b76d27e092f1d1d8e1732b64893ae", "committedDate": "2020-12-04T09:16:38Z", "message": "feat(ci): add stage dependencies\n\n* Don't use stash on standalone Daily pipeline runs;\n* Adjust JDK agent.\n* Add dependencies between CE stages;\n* Add dependencies between Daily stages;\n\nRelated to CAM-12712, CAM-12751"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2070, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}