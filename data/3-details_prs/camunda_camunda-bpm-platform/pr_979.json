{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzNzQ1MjM2", "number": 979, "title": "chore(engine): extend telemetry data with integration flag", "bodyText": "Related to CAM-12227", "createdAt": "2020-09-10T11:55:28Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979", "merged": true, "mergeCommit": {"oid": "1507ac94a1c2f34303a24e1423801755244f7144"}, "closed": true, "closedAt": "2020-09-17T05:28:06Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHf6x_ABqjM3NTA3Mzg1ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJqHIEgH2gAyNDgzNzQ1MjM2OjBjYThmY2ExOTQ1NTU1OTE5OTI0ZGU0Mjg1Njc3NTVjZTFmNjc5MjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "533c6493f676fd56bee74807adc3a9f7c1dcd677", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/533c6493f676fd56bee74807adc3a9f7c1dcd677", "committedDate": "2020-09-10T11:53:56Z", "message": "wip"}, "afterCommit": {"oid": "833d670a5cec053398bab6655c9bd2f7415fe1f0", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/833d670a5cec053398bab6655c9bd2f7415fe1f0", "committedDate": "2020-09-10T12:25:39Z", "message": "wip"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dfb0050531f28821300d6c3f5e8b5b5ed5b9580", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8dfb0050531f28821300d6c3f5e8b5b5ed5b9580", "committedDate": "2020-09-10T13:43:26Z", "message": "fix run test"}, "afterCommit": {"oid": "e416b58fa59c900c7f3d5ae477dc87c49fb24963", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e416b58fa59c900c7f3d5ae477dc87c49fb24963", "committedDate": "2020-09-10T15:02:33Z", "message": "chore(telemetry): extend telemetry data with integration flags\n\n* spring boot starter\n* camunda bpm run\n* wildfly/jboss subsystem\n* ejb-service\n\nRelated to CAM-12227"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e416b58fa59c900c7f3d5ae477dc87c49fb24963", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e416b58fa59c900c7f3d5ae477dc87c49fb24963", "committedDate": "2020-09-10T15:02:33Z", "message": "chore(telemetry): extend telemetry data with integration flags\n\n* spring boot starter\n* camunda bpm run\n* wildfly/jboss subsystem\n* ejb-service\n\nRelated to CAM-12227"}, "afterCommit": {"oid": "1cd2feb61d27da72a5f71a05d46a841ec4d9672c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1cd2feb61d27da72a5f71a05d46a841ec4d9672c", "committedDate": "2020-09-11T14:46:33Z", "message": "chore(telemetry): extend telemetry data with integration flags\n\n* spring boot starter\n* camunda bpm run\n* wildfly/jboss subsystem\n* ejb-service\n\nRelated to CAM-12227"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0eed457b7c02a4207bb1ea89c3c6c1d7c444e2e", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/a0eed457b7c02a4207bb1ea89c3c6c1d7c444e2e", "committedDate": "2020-09-11T16:01:55Z", "message": "squash me"}, "afterCommit": {"oid": "6884cd00b22d1cb10c12510230fade818dc2aa98", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6884cd00b22d1cb10c12510230fade818dc2aa98", "committedDate": "2020-09-11T16:04:42Z", "message": "squash me"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6884cd00b22d1cb10c12510230fade818dc2aa98", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6884cd00b22d1cb10c12510230fade818dc2aa98", "committedDate": "2020-09-11T16:04:42Z", "message": "squash me"}, "afterCommit": {"oid": "f91ab9cdbdfeacbac618528daa1a327b99d5a2ee", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f91ab9cdbdfeacbac618528daa1a327b99d5a2ee", "committedDate": "2020-09-14T06:53:29Z", "message": "chore(telemetry): extend telemetry data with integration flags\n\n* spring boot starter\n* camunda bpm run\n* wildfly/jboss subsystem\n* ejb-service\n\nRelated to CAM-12227"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDE5NDk4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#pullrequestreview-488419498", "createdAt": "2020-09-15T07:55:10Z", "commit": {"oid": "225def8dd0367e503cd244c75ca755f91ba012bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDI5NDc3", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#pullrequestreview-488429477", "createdAt": "2020-09-15T08:07:36Z", "commit": {"oid": "225def8dd0367e503cd244c75ca755f91ba012bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowNzozNlrOHR11kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODowNzozNlrOHR11kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2OTkwNw==", "bodyText": "Just an understanding question: do we need a map here, would a list/set of Strings be sufficient? we are not adding entries with false here, are we? Being in the list already means it's used, right?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#discussion_r488469907", "createdAt": "2020-09-15T08:07:36Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/telemetry/dto/Internals.java", "diffHunk": "@@ -24,11 +24,14 @@\n public class Internals {\n \n   public static final String SERIALIZED_APPLICATION_SERVER = \"application-server\";\n+  public static final String SERIALIZED_CAMUNDA_INTEGRATION = \"camunda-integration\";\n \n   protected Database database;\n   @SerializedName(value = SERIALIZED_APPLICATION_SERVER)\n   protected ApplicationServer applicationServer;\n   protected Map<String, Command> commands;\n+  @SerializedName(value = SERIALIZED_CAMUNDA_INTEGRATION)\n+  protected Map<String, Object> camundaIntegration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "225def8dd0367e503cd244c75ca755f91ba012bc"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83fc2d6949dc864c4557c5048421045c540a188f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/83fc2d6949dc864c4557c5048421045c540a188f", "committedDate": "2020-09-15T13:35:17Z", "message": "chore(telemetry): extend telemetry data with integration flags\n\n* spring boot starter\n* camunda bpm run\n* wildfly/jboss subsystem\n* ejb-service\n\nRelated to CAM-12227"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fee62bad5d79f22c3aad535c6f922607238c91f1", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/fee62bad5d79f22c3aad535c6f922607238c91f1", "committedDate": "2020-09-15T13:35:20Z", "message": "adjust adding ejb-service integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c56fc8cbcd01db5e1ca45c1cd194f47142e843b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2c56fc8cbcd01db5e1ca45c1cd194f47142e843b", "committedDate": "2020-09-15T13:44:51Z", "message": "replace map with list\n\n+ improve test structure in starter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "225def8dd0367e503cd244c75ca755f91ba012bc", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/225def8dd0367e503cd244c75ca755f91ba012bc", "committedDate": "2020-09-14T08:51:29Z", "message": "adjust adding ejb-service integration"}, "afterCommit": {"oid": "2c56fc8cbcd01db5e1ca45c1cd194f47142e843b", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2c56fc8cbcd01db5e1ca45c1cd194f47142e843b", "committedDate": "2020-09-15T13:44:51Z", "message": "replace map with list\n\n+ improve test structure in starter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NzAyODM2", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#pullrequestreview-488702836", "createdAt": "2020-09-15T13:48:37Z", "commit": {"oid": "2c56fc8cbcd01db5e1ca45c1cd194f47142e843b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo0ODozN1rOHSCzjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo0ODozN1rOHSCzjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4MjM4MA==", "bodyText": "this might be redundant considering the bellow assertion", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#discussion_r488682380", "createdAt": "2020-09-15T13:48:37Z", "author": {"login": "yanavasileva"}, "path": "distro/run/core/src/test/java/org/camunda/bpm/run/test/TelemetryDataTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.run.test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.Set;\n+\n+import org.camunda.bpm.engine.ProcessEngine;\n+import org.camunda.bpm.engine.impl.cfg.ProcessEngineConfigurationImpl;\n+import org.camunda.bpm.engine.impl.telemetry.CamundaIntegration;\n+import org.camunda.bpm.engine.impl.telemetry.dto.Data;\n+import org.camunda.bpm.run.CamundaBpmRun;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.context.SpringBootTest.WebEnvironment;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+@RunWith(SpringRunner.class)\n+@SpringBootTest(classes = { CamundaBpmRun.class }, webEnvironment = WebEnvironment.DEFINED_PORT)\n+public class TelemetryDataTest {\n+\n+  @Autowired\n+  ProcessEngine engine;\n+\n+  @Test\n+  public void shouldAddCamundaIntegration() {\n+    // given\n+    ProcessEngineConfigurationImpl processEngineConfiguration = (ProcessEngineConfigurationImpl) engine.getProcessEngineConfiguration();\n+\n+    // then\n+    Data telemetryData = processEngineConfiguration.getTelemetryData();\n+    Set<String> camundaIntegration = telemetryData.getProduct().getInternals().getCamundaIntegration();\n+    assertThat(camundaIntegration.size()).isEqualTo(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c56fc8cbcd01db5e1ca45c1cd194f47142e843b"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b85a49261f317bb804b0cbdb943ed69328878fe", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7b85a49261f317bb804b0cbdb943ed69328878fe", "committedDate": "2020-09-16T06:36:06Z", "message": "improve test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05551c1a027933677c4b9dfb377ae960fc059b88", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/05551c1a027933677c4b9dfb377ae960fc059b88", "committedDate": "2020-09-16T06:58:45Z", "message": "remove unnecessary web config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NTQ0MDI1", "url": "https://github.com/camunda/camunda-bpm-platform/pull/979#pullrequestreview-489544025", "createdAt": "2020-09-16T11:50:32Z", "commit": {"oid": "05551c1a027933677c4b9dfb377ae960fc059b88"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ca8fca1945555919924de428567755ce1f67923", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0ca8fca1945555919924de428567755ce1f67923", "committedDate": "2020-09-17T05:26:21Z", "message": "adjust spacing and javadoc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2200, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}