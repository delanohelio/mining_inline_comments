{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjczNDA4", "number": 1137, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MDo1OFrOE7l_LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo1MjozOFrOE7mTQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTIzODIxOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MDo1OFrOH3U6Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MDo1OFrOH3U6Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NjI3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527776271", "createdAt": "2020-11-20T15:40:58Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTI0MjIxOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MTo1NFrOH3U8gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MTo1NFrOH3U8gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3Njg5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n          \n          \n            \n                          runMaven(true, false, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527776897", "createdAt": "2020-11-20T15:41:54Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTI0ODgwOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MzoyMVrOH3VAmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0MzoyMVrOH3VAmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3Nzk0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/', 'verify -Pold-engine,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527777947", "createdAt": "2020-11-20T15:43:21Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTI1NDExOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0NDoyNVrOH3VD7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo0NDoyNVrOH3VD7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3ODc5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527778798", "createdAt": "2020-11-20T15:44:25Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-rolling-update-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTI4OTYzOnYy", "diffSide": "RIGHT", "path": ".ci/daily/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo1MjozOFrOH3VaWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNTo1MjozOFrOH3VaWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc4NDUzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          runMaven(true, true, true, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')\n          \n          \n            \n                          runMaven(true, false, false, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1137#discussion_r527784539", "createdAt": "2020-11-20T15:52:38Z", "author": {"login": "yanavasileva"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -0,0 +1,562 @@\n+// https://github.com/camunda/jenkins-global-shared-library\n+@Library('camunda-ci') _\n+\n+String getAgent(String dockerImage = 'gcr.io/ci-30-162810/centos:v0.4.6', Integer cpuLimit = 4){\n+  String mavenForkCount = cpuLimit;\n+  String mavenMemoryLimit = cpuLimit * 2;\n+  \"\"\"\n+metadata:\n+  labels:\n+    agent: ci-cambpm-camunda-cloud-build\n+spec:\n+  nodeSelector:\n+    cloud.google.com/gke-nodepool: agents-n1-standard-32-netssd-preempt\n+  tolerations:\n+  - key: \"agents-n1-standard-32-netssd-preempt\"\n+    operator: \"Exists\"\n+    effect: \"NoSchedule\"\n+  containers:\n+  - name: \"jnlp\"\n+    image: \"${dockerImage}\"\n+    args: ['\\$(JENKINS_SECRET)', '\\$(JENKINS_NAME)']\n+    tty: true\n+    env:\n+    - name: LIMITS_CPU\n+      value: ${mavenForkCount}\n+    - name: TZ\n+      value: Europe/Berlin\n+    resources:\n+      limits:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+      requests:\n+        cpu: ${cpuLimit}\n+        memory: ${mavenMemoryLimit}Gi\n+    workingDir: \"/home/work\"\n+    volumeMounts:\n+      - mountPath: /home/work\n+        name: workspace-volume\n+  \"\"\"\n+}\n+\n+pipeline {\n+  agent none\n+  options {\n+    buildDiscarder(logRotator(numToKeepStr: '5')) //, artifactNumToKeepStr: '30'\n+  }\n+  triggers {\n+    pollSCM('H H(0-7) * * *')\n+  }\n+  stages {\n+    stage('check-sql-scripts') {\n+      agent {\n+        kubernetes {\n+          yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+        }\n+      }\n+      steps {\n+        sh '.ci/scripts/check-sql-scripts.sh'\n+      }\n+    }\n+    stage('H2 QA tests') {\n+      parallel {\n+        stage('sql-scripts-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true,'distro/sql-script/', 'install -Pcheck-sql,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-databases-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-upgrade/', 'verify -Pupgrade-db,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-instance-migration-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-instance-migration/', 'verify -Pinstance-migration,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-old-engine-from-714-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/', 'verify -Pold-engine,h2')\n+            }\n+          }\n+        }\n+        stage('UPGRADE-rolling-update-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/test-db-rolling-update/', 'verify -Prolling-update,h2')\n+            }\n+          }\n+        }\n+        stage('PERFORMANCE-large-data-h2') {\n+          agent {\n+            kubernetes {\n+              yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n+            }\n+          }\n+//          when {\n+//            anyOf {\n+//              branch 'pipeline-qa-master';\n+//              allOf {\n+//                changeRequest();\n+//                expression {\n+//                  withLabels('h2')\n+//                }\n+//              }\n+//            }\n+//          }\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'maven-nexus-settings') {\n+              runMaven(true, true, true, 'qa/large-data-tests/', 'verify -Plarge-data-tests,h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4f475871ad128a3c155c71c58a891e92a8ebc4"}, "originalPosition": 197}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4326, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}