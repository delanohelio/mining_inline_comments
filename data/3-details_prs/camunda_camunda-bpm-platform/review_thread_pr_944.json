{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NTc0Mjg4", "number": 944, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTowMTowMlrOEe8gbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjo0MjozNFrOEfSnlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODg0MDc2OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/DefaultHistoryRemovalTimeProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTowMTowMlrOHK6gqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMToyMDozNFrOHLqhSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIwNjQ0Mw==", "bodyText": "Let's only change a file if it is really necessary. Such a change does not bring much value and makes it harder to find the original commit in which the method was introduced.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481206443", "createdAt": "2020-09-01T15:01:02Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/DefaultHistoryRemovalTimeProvider.java", "diffHunk": "@@ -31,6 +31,14 @@\n  */\n public class DefaultHistoryRemovalTimeProvider implements HistoryRemovalTimeProvider {\n \n+  public static Date determineRemovalTime(Date initTime, Integer timeToLive) {\n+    Calendar removalTime = Calendar.getInstance();\n+    removalTime.setTime(initTime);\n+    removalTime.add(Calendar.DATE, timeToLive);\n+    \n+    return removalTime.getTime();\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTk5MzAzMg==", "bodyText": "I agree, it was automatically put at the top by my IDE when I made it public static. I moved it back down and switched off that option in the IDE (should have already been off...).", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481993032", "createdAt": "2020-09-02T11:20:34Z", "author": {"login": "mboskamp"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/DefaultHistoryRemovalTimeProvider.java", "diffHunk": "@@ -31,6 +31,14 @@\n  */\n public class DefaultHistoryRemovalTimeProvider implements HistoryRemovalTimeProvider {\n \n+  public static Date determineRemovalTime(Date initTime, Integer timeToLive) {\n+    Calendar removalTime = Calendar.getInstance();\n+    removalTime.setTime(initTime);\n+    removalTime.add(Calendar.DATE, timeToLive);\n+    \n+    return removalTime.getTime();\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIwNjQ0Mw=="}, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODk1NjAwOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNToxOTozN1rOHK7pMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNToxOTozN1rOHK7pMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTIyNTAwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (jobEntity.getJobHandlerType() != null && jobEntity.getJobHandlerType().equals(HistoryCleanupJobHandler.TYPE)) {\n          \n          \n            \n                if (HistoryCleanupJobHandler.TYPE.equals(jobEntity.getJobHandlerType())) {", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481225008", "createdAt": "2020-09-01T15:19:37Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "diffHunk": "@@ -1098,6 +1101,15 @@ protected void initHistoricJobLogEvent(HistoricJobLogEventEntity evt, Job job, H\n     String hostName = Context.getCommandContext().getProcessEngineConfiguration().getHostname();\n     evt.setHostname(hostName);\n \n+    if (jobEntity.getJobHandlerType() != null && jobEntity.getJobHandlerType().equals(HistoryCleanupJobHandler.TYPE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTA3MDI3OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0Njo0M1rOHK8x8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0Njo0M1rOHK8x8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0MzYzMw==", "bodyText": "We should handle (probably log) the potential exceptions and write no removal time in case the TTL cannot be parsed. Even though the property was parsed on engine start, it can be changed to an invalid value via plugin on post init.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481243633", "createdAt": "2020-09-01T15:46:43Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "diffHunk": "@@ -1098,6 +1101,15 @@ protected void initHistoricJobLogEvent(HistoricJobLogEventEntity evt, Job job, H\n     String hostName = Context.getCommandContext().getProcessEngineConfiguration().getHostname();\n     evt.setHostname(hostName);\n \n+    if (jobEntity.getJobHandlerType() != null && jobEntity.getJobHandlerType().equals(HistoryCleanupJobHandler.TYPE)) {\n+      String timeToLive = Context.getProcessEngineConfiguration().getHistoryCleanupJobLogTimeToLive();\n+      if(timeToLive != null) {\n+        Integer timeToLiveDays = ParseUtil.parseHistoryTimeToLive(timeToLive);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjQ0MzYxOnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjozODowOVrOHLeLgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjozODowOVrOHLeLgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5MDg1MQ==", "bodyText": "At the beginning of the method, we already call ClockUtil#getCurrentTime to set the timestamp. Let's reuse the value and not have a difference of some milliseconds between log creation and removal time.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481790851", "createdAt": "2020-09-02T06:38:09Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/history/producer/DefaultHistoryEventProducer.java", "diffHunk": "@@ -1098,6 +1101,15 @@ protected void initHistoricJobLogEvent(HistoricJobLogEventEntity evt, Job job, H\n     String hostName = Context.getCommandContext().getProcessEngineConfiguration().getHostname();\n     evt.setHostname(hostName);\n \n+    if (jobEntity.getJobHandlerType() != null && jobEntity.getJobHandlerType().equals(HistoryCleanupJobHandler.TYPE)) {\n+      String timeToLive = Context.getProcessEngineConfiguration().getHistoryCleanupJobLogTimeToLive();\n+      if(timeToLive != null) {\n+        Integer timeToLiveDays = ParseUtil.parseHistoryTimeToLive(timeToLive);\n+        Date removalTime = DefaultHistoryRemovalTimeProvider.determineRemovalTime(ClockUtil.getCurrentTime(), timeToLiveDays);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjQ1NDU2OnYy", "diffSide": "RIGHT", "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupRemovalTimeTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjo0MDozMFrOHLeSZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjo0MDozMFrOHLeSZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5MjYxNQ==", "bodyText": "We should reset the config in the tearDownAfterAll method.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481792615", "createdAt": "2020-09-02T06:40:30Z", "author": {"login": "tasso94"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/history/removaltime/cleanup/HistoryCleanupRemovalTimeTest.java", "diffHunk": "@@ -878,6 +881,43 @@ public void shouldCleanupJobLog() {\n     assertThat(jobLogs.size(), is(0));\n   }\n \n+  @Test\n+  public void shouldCleanupHistoryCleanupJobsFromHistoricJobLog() {\n+    // given\n+    engineConfiguration.setHistoryCleanupJobLogTimeToLive(\"P5D\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjQ2MzU4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/ProcessEngineConfigurationImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjo0MjozNFrOHLeYWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNjo0MjozNFrOHLeYWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTc5NDEzNg==", "bodyText": "According to our code style guide:\n\nAdd Javadoc comments to new ProcessEngineConfigurationImpl and ProcessEngineConfiguration properties to make the purpose of the property visible to users and developers without the need of diving into code.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/944#discussion_r481794136", "createdAt": "2020-09-02T06:42:34Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/ProcessEngineConfigurationImpl.java", "diffHunk": "@@ -832,6 +832,8 @@\n   protected Map<String, String> batchOperationsForHistoryCleanup;\n   protected Map<String, Integer> parsedBatchOperationsForHistoryCleanup;\n \n+  protected String historyCleanupJobLogTimeToLive;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f302d21faa9e9e5e8e8d205c0a567cb8acdeda19"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4539, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}