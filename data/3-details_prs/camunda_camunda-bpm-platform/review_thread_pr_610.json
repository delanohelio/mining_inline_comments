{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjA4ODM2", "number": 610, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0MDozNlrODWh49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo1NjoxNVrODWkUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTUwNTE3OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0MDozNlrOFbVrnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo0Mjo1N1rOFba8Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMTEwMw==", "bodyText": "I guess we can use the following instead of both lines?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ensureNotNull(\"hostName\", hostname);\n          \n          \n            \n                ensureNotContainsEmptyString(\"hostName\", Collections.singletonList(hostname));\n          \n          \n            \n                ensureNotEmpty(\"hostName\", hostname);", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364211103", "createdAt": "2020-01-08T12:40:36Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "diffHunk": "@@ -166,6 +168,14 @@ public HistoricJobLogQuery withoutTenantId() {\n     return this;\n   }\n \n+  @Override\n+  public HistoricJobLogQuery hostname(String hostname) {\n+    ensureNotNull(\"hostName\", hostname);\n+    ensureNotContainsEmptyString(\"hostName\", Collections.singletonList(hostname));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad3624293842e26904010633a0bdc755f61f23dd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI5NzI3NQ==", "bodyText": "You're right, completely missed that method. Thanks!", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364297275", "createdAt": "2020-01-08T15:42:57Z", "author": {"login": "koevskinikola"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "diffHunk": "@@ -166,6 +168,14 @@ public HistoricJobLogQuery withoutTenantId() {\n     return this;\n   }\n \n+  @Override\n+  public HistoricJobLogQuery hostname(String hostname) {\n+    ensureNotNull(\"hostName\", hostname);\n+    ensureNotContainsEmptyString(\"hostName\", Collections.singletonList(hostname));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMTEwMw=="}, "originalCommit": {"oid": "ad3624293842e26904010633a0bdc755f61f23dd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTUxOTk0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0NzoyMFrOFbV0sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMjo0NzoyMFrOFbV0sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxMzQyNg==", "bodyText": "This import can be removed if the other comment in this class below is accepted.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Collections;", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364213426", "createdAt": "2020-01-08T12:47:20Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/HistoricJobLogQueryImpl.java", "diffHunk": "@@ -20,6 +20,7 @@\n import static org.camunda.bpm.engine.impl.util.EnsureUtil.ensureNotContainsNull;\n import static org.camunda.bpm.engine.impl.util.EnsureUtil.ensureNotNull;\n \n+import java.util.Collections;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad3624293842e26904010633a0bdc755f61f23dd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTkwMjQ4OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/ProcessEngineImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo1NjoxNVrOFbZaTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNDo1NjoxNVrOFbZaTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI3MjIwNg==", "bodyText": "Let's move this to the ProcessEngineConfiguration#initHostname method", "url": "https://github.com/camunda/camunda-bpm-platform/pull/610#discussion_r364272206", "createdAt": "2020-01-08T14:56:15Z", "author": {"login": "tmetzke"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/ProcessEngineImpl.java", "diffHunk": "@@ -90,6 +91,13 @@ public ProcessEngineImpl(ProcessEngineConfigurationImpl processEngineConfigurati\n     this.historyLevel = processEngineConfiguration.getHistoryLevel();\n     this.transactionContextFactory = processEngineConfiguration.getTransactionContextFactory();\n \n+    // provide hostname before history cleanup job is created in `executeSchemaOperations()`\n+    String hostname = processEngineConfiguration.getHostname();\n+    if (hostname == null) {\n+      hostname = processEngineConfiguration.getHostnameProvider().getHostname(this);\n+      processEngineConfiguration.setHostname(hostname);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad3624293842e26904010633a0bdc755f61f23dd"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4717, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}