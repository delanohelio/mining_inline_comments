{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTA2NTk5", "number": 1081, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDoxN1rOExHZIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDo1NFrOExHaCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTM2ODAyOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/dto/converter/DateConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDoxN1rOHnE3iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDoxN1rOHnE3iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDczNjI2NQ==", "bodyText": "You can declare a static imports of Mockito to reduce the length of this call, e.g.:\nimport static org.mockito.Matchers.anyString;\nimport static org.mockito.Mockito.anyString;\nimport static org.mockito.Mockito.eq;\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.when;\n\nThat's cosmetic improvement, it's ok to leave it as it is as well.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1081#discussion_r510736265", "createdAt": "2020-10-23T08:54:17Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/dto/converter/DateConverterTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.rest.dto.converter;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.camunda.bpm.engine.impl.calendar.DateTimeUtil;\n+import org.camunda.bpm.engine.rest.exception.InvalidRequestException;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.Date;\n+\n+public class DateConverterTest {\n+  private DateConverter converter;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    converter = new DateConverter();\n+\n+  }\n+\n+  @Test(expected = InvalidRequestException.class)\n+  public void shouldFailForDoubleQuotedValue() {\n+    //when\n+    converter.convertQueryParameterToType(\"\\\"pizza\\\"\");\n+  }\n+\n+  @Test(expected = InvalidRequestException.class)\n+  public void shouldFailForSingleDoubleQuotedValue() {\n+    //when\n+    converter.convertQueryParameterToType(\"2014-01-01T00:00:00+0200\\\"\");\n+  }\n+\n+  @Test\n+  public void shouldConvertDate() throws JsonProcessingException {\n+    //given\n+    String value = \"2014-01-01T00:00:00+0200\";\n+    ObjectMapper mock = Mockito.mock(ObjectMapper.class);\n+    converter.setObjectMapper(mock);\n+    Mockito.when(mock.readValue(Mockito.anyString(), Mockito.eq(Date.class))).thenReturn(DateTimeUtil.parseDate(value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c246769c386c88a9cbddfbce0efbab08d690e783"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5OTM3MDM1OnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/dto/converter/DateConverterTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDo1NFrOHnE49A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwODo1NDo1NFrOHnE49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDczNjYyOA==", "bodyText": "Could consider removing the empty line here.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1081#discussion_r510736628", "createdAt": "2020-10-23T08:54:54Z", "author": {"login": "yanavasileva"}, "path": "engine-rest/engine-rest/src/test/java/org/camunda/bpm/engine/rest/dto/converter/DateConverterTest.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.rest.dto.converter;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.camunda.bpm.engine.impl.calendar.DateTimeUtil;\n+import org.camunda.bpm.engine.rest.exception.InvalidRequestException;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mockito;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.util.Date;\n+\n+public class DateConverterTest {\n+  private DateConverter converter;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    converter = new DateConverter();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c246769c386c88a9cbddfbce0efbab08d690e783"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4425, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}