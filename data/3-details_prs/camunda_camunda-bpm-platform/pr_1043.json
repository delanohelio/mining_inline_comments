{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDA5MjQ0", "number": 1043, "title": "[CAM-12091] fix(engine): add error when parsing process without start event", "bodyText": "related to CAM-12091", "createdAt": "2020-10-04T10:19:30Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1043", "merged": true, "mergeCommit": {"oid": "5b854c3829e651f657e86f9dba88e4b5ca78f1d0"}, "closed": true, "closedAt": "2020-10-19T09:59:11Z", "author": {"login": "daveychu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPMihYAH2gAyNDk3NDA5MjQ0OjM5MDIyYzlhNjRkYzc4M2ViNjE0YzM5Zjc3N2FjNmRhMzRiZWI2MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTW3YeAH2gAyNDk3NDA5MjQ0OjgxMTUzMjQwNmM3MzIwZWQ2ZjMwYjg2MjliYzU5YmNjOTdmN2I4NGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613", "author": {"user": {"login": "daveychu", "name": "Davey Chu"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/39022c9a64dc783eb614c39f777ac6da34beb613", "committedDate": "2020-10-04T10:22:40Z", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9fa67de0c23576a29680a95e15f1719eb0c578e", "author": {"user": {"login": "daveychu", "name": "Davey Chu"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f9fa67de0c23576a29680a95e15f1719eb0c578e", "committedDate": "2020-10-04T10:17:30Z", "message": "feat(engine): add error when parsing process without start event\n\nrelated to CAM-12091"}, "afterCommit": {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613", "author": {"user": {"login": "daveychu", "name": "Davey Chu"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/39022c9a64dc783eb614c39f777ac6da34beb613", "committedDate": "2020-10-04T10:22:40Z", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjExNTU5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1043#pullrequestreview-509211559", "createdAt": "2020-10-15T09:56:40Z", "commit": {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo0MFrOHiAHlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo0NVrOHiAH0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTU3Mg==", "bodyText": "Consider using a method name, that includes where the startEvent is missing (process).\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void testParseWithoutStartEvent() {\n          \n          \n            \n              public void testInvalidProcessWithoutStartEvent() {", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1043#discussion_r505415572", "createdAt": "2020-10-15T09:56:40Z", "author": {"login": "mboskamp"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/bpmn/parse/BpmnParseTest.java", "diffHunk": "@@ -370,6 +370,18 @@ public void testInvalidSequenceFlowInAndOutEventSubProcess() {\n     }\n   }\n \n+  @Test\n+  public void testParseWithoutStartEvent() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTYzMg==", "bodyText": "Let's stick with the file pattern that is used for the other tests (i.e. TestClass.TestMethod.bpmn20.xml, your file has the ending .bpmn). Also, we do not need to include positioning information here. Let's use a basic example which is more human-friendly :)\nThe file can look like this:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<definitions id=\"taskAssigneeExample\" \n             xmlns=\"http://www.omg.org/spec/BPMN/20100524/MODEL\"\n             xmlns:camunda=\"http://camunda.org/schema/1.0/bpmn\"\n             targetNamespace=\"Examples\">\n  <process id=\"Process_1\" isExecutable=\"true\">\n    <userTask id=\"userTask\" />\n    <endEvent id=\"endEvent\" />\n    <sequenceFlow id=\"flow_1\" sourceRef=\"userTask\" targetRef=\"endEvent\" />\n  </process>\n</definitions>", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1043#discussion_r505415632", "createdAt": "2020-10-15T09:56:45Z", "author": {"login": "mboskamp"}, "path": "engine/src/test/resources/org/camunda/bpm/engine/test/bpmn/parse/BpmnParseTest.testParseWithoutStartEvent.bpmn", "diffHunk": "@@ -0,0 +1,26 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39022c9a64dc783eb614c39f777ac6da34beb613"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "811532406c7320ed6f30b8629bc59bcc97f7b84f", "author": {"user": {"login": "daveychu", "name": "Davey Chu"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/811532406c7320ed6f30b8629bc59bcc97f7b84f", "committedDate": "2020-10-17T08:40:12Z", "message": "fix(engine): add error when parsing process without start event\n\nrelated to CAM-12091"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2131, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}