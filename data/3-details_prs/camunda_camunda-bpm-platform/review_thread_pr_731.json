{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NDM4MDYz", "number": 731, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozMjowOFrODskNLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozMjowOFrODskNLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDU3MTM0OnYy", "diffSide": "RIGHT", "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/auth/DefaultAuthorizationProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozMjowOVrOF9e8xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozMjowOVrOF9e8xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNDUzMg==", "bodyText": "\ud83d\udc4d looks great", "url": "https://github.com/camunda/camunda-bpm-platform/pull/731#discussion_r400014532", "createdAt": "2020-03-30T08:32:09Z", "author": {"login": "yanavasileva"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/cfg/auth/DefaultAuthorizationProvider.java", "diffHunk": "@@ -288,11 +250,72 @@\n \n   // helper //////////////////////////////////////////////////////////////\n \n+  protected AuthorizationEntity[] createOrUpdateAuthorizationByGroupId(String taskId,\n+                                                                       String groupId) {\n+    return createOrUpdateAuthorization(taskId, groupId, null);\n+  }\n+\n+  protected AuthorizationEntity[] createOrUpdateAuthorizationByUserId(String taskId,\n+                                                                      String userId) {\n+    return createOrUpdateAuthorization(taskId, null, userId);\n+  }\n+\n+  /**\n+   * (1) Fetch existing runtime & history authorizations\n+   * (2) Update authorizations:\n+   *     (2a) fetched authorization == null\n+   *         ->  create a new runtime authorization (with READ, (UPDATE/TASK_WORK) permission,\n+   *             and READ_VARIABLE if enabled)\n+   *         ->  create a new history authorization (with READ on HISTORIC_TASK)\n+   *     (2b) fetched authorization != null\n+   *         ->  Add READ, (UPDATE/TASK_WORK) permission, and READ_VARIABLE if enabled\n+   *             UPDATE or TASK_WORK permission is configurable in camunda.cfg.xml and by default,\n+   *             UPDATE permission is provided\n+   *         ->  Add READ on HISTORIC_TASK\n+   */\n+  protected AuthorizationEntity[] createOrUpdateAuthorization(String taskId, String groupId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffcbe8e40c348972e24cab7db209f369ee0570d5"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4692, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}