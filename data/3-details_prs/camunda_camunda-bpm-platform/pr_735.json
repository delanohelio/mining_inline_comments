{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODY2MTEz", "number": 735, "title": "CAM-11531: add OpenAPI documentation for message endpoint", "bodyText": "", "createdAt": "2020-03-17T14:20:35Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735", "merged": true, "mergeCommit": {"oid": "5aef9f228170dcc5a3e26cea20d1f6de45d85442"}, "closed": true, "closedAt": "2020-03-23T15:17:51Z", "author": {"login": "mboskamp"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPLfM9gH2gAyMzg5ODY2MTEzOjRiODVlOWZkNzdmNzNjNDliNzY3NzBiZWYzOTM1ZDY1MWY0OTY3OWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQf3n6gFqTM3OTUyOTQ1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4b85e9fd77f73c49b76770bef3935d651f49679c", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4b85e9fd77f73c49b76770bef3935d651f49679c", "committedDate": "2020-03-19T12:57:59Z", "message": "fix(rest-openapi): add OpenAPI documentation for message endpoint\n\nRelated to CAM-11531"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeba0918fae318d1a7e57855e8ef78db27e08b70", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/aeba0918fae318d1a7e57855e8ef78db27e08b70", "committedDate": "2020-03-19T12:57:59Z", "message": "chore(rest-openapi): document optional response property\n\nRelated to CAM-11531"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "257543f0c737b0f36927f4264af28b38c236a96b", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/257543f0c737b0f36927f4264af28b38c236a96b", "committedDate": "2020-03-19T12:57:59Z", "message": "chore(rest-openapi): fix JSON formatting\n\nRelated to CAM-11531"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2d5e59c44a21ad96aa5b221de41eea81be0391f4", "committedDate": "2020-03-19T13:01:43Z", "message": "chore(rest-openapi): use new dto macro\n\nRelated to CAM-11531"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2801156a0febc2cb18b38a9feadb5d9febcfd54c", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2801156a0febc2cb18b38a9feadb5d9febcfd54c", "committedDate": "2020-03-19T12:56:30Z", "message": "chore(rest-openapi): fix JSON formatting\n\nRelated to CAM-11531"}, "afterCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2d5e59c44a21ad96aa5b221de41eea81be0391f4", "committedDate": "2020-03-19T13:01:43Z", "message": "chore(rest-openapi): use new dto macro\n\nRelated to CAM-11531"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NzQwNDUx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#pullrequestreview-377740451", "createdAt": "2020-03-19T13:54:26Z", "commit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMzo1NDoyNlrOF4vdKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNDoyMTo1M1rOF4wrZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0MjA5MA==", "bodyText": "I think the documentation is wrong here. The implementation makes no validation for this statement. On the other hand, there is a validation that the tenantId and withoutTenantId parameters are mutually exclusive. I think that we need to move this statement to those two properties, as well as fix the docs.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395042090", "createdAt": "2020-03-19T13:54:26Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/message/CorrelationMessageDto.ftl", "diffHunk": "@@ -0,0 +1,100 @@\n+<@lib.dto>\n+\n+    <@lib.property\n+        name = \"messageName\"\n+        type = \"string\"\n+        desc = \"The name of the message to deliver.\"/>\n+\n+    <@lib.property\n+        name = \"businessKey\"\n+        type = \"string\"\n+        desc = \"Used for correlation of process instances that wait for incoming messages.\n+                Will only correlate to executions that belong to a process instance with the provided business key.\"/>\n+\n+    <@lib.property\n+        name = \"tenantId\"\n+        type = \"string\"\n+        desc = \"Used to correlate the message for a tenant with the given id.\n+                Will only correlate to executions and process definitions which belong to the tenant.\"/>\n+\n+    <@lib.property\n+        name = \"withoutTenantId\"\n+        type = \"boolean\"\n+        defaultValue = 'false'\n+        desc = \"A Boolean value that indicates whether the message should only be correlated to executions\n+                and process definitions which belong to no tenant or not. Value may only be `true`, as `false`\n+                is the default behavior.\"/>\n+\n+    <@lib.property\n+        name = \"processInstanceId\"\n+        type = \"string\"\n+        desc = \"Used to correlate the message to the process instance with the given id.\n+                Must not be supplied in conjunction with a `tenantId`.\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA0MzE0MQ==", "bodyText": "To keep the id as close as possible to the Java method, this should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  id = \"correlateMessage\"\n          \n          \n            \n                  id = \"deliverMessage\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395043141", "createdAt": "2020-03-19T13:55:55Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl", "diffHunk": "@@ -0,0 +1,135 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"correlateMessage\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MDUxMA==", "bodyText": "I think that this part: The property variablesInResultEnabled in the request body was false (Default). should go in the description property. summary should be short since it's put in a dropdown element in the UI.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                   \"summary\": \"Status 200 Response. The property `variablesInResultEnabled` in the request body was `false` (Default).\",\n          \n          \n            \n                                   \"description\": \"The Response content of a status 200\",\n          \n          \n            \n                                   \"summary\": \"Status 200 Response.\",\n          \n          \n            \n                                   \"description\": \"The Response content of a status 200. The property `variablesInResultEnabled` in the request body was `false` (Default).\",", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395050510", "createdAt": "2020-03-19T14:06:13Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl", "diffHunk": "@@ -0,0 +1,135 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"correlateMessage\"\n+      tag = \"Message\"\n+      desc = \"Correlates a message to the process engine to either trigger a message start event or an intermediate message \n+              catching event. Internally this maps to the engine's message correlation builder methods\n+              `MessageCorrelationBuilder#correlateWithResult()` and `MessageCorrelationBuilder#correlateAllWithResult()`.\n+              For more information about the correlation behavior, see the [Message Events](${docsUrl}/bpmn20/events/message-events/)\n+              section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"CorrelationMessageDto\"\n+      examples = ['\"example-1\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate without result\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\", \n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        }\n+                      }\n+                     },\n+                   \"example-2\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate with result\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\",\n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        },\n+                        \"resultEnabled\" : true\n+                      }\n+                     },\n+                   \"example-3\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate with result and variables\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\",\n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        },\n+                        \"resultEnabled\" : true,\n+                        \"variablesInResultEnabled\" : true\n+                      }\n+                     }']\n+                     />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"MessageCorrelationResultWithVariableDto\"\n+        array = true\n+        desc = \"Request successful. The property `resultEnabled` in the request body was `true`.\n+                The `variables` property is only returned, if the property variablesInResultEnable`\n+                was set to `true` in the request.\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 Response. The property `variablesInResultEnabled` in the request body was `false` (Default).\",\n+                       \"description\": \"The Response content of a status 200\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1MTAzMw==", "bodyText": "Same as above comment:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                 \"summary\": \"Status 200 Response. The property `variablesInResultEnabled` in the request body was `true`.\",\n          \n          \n            \n                                 \"description\": \"The Response content of a status 200\",\n          \n          \n            \n                                 \"summary\": \"Status 200 Response.\",\n          \n          \n            \n                                 \"description\": \"The Response content of a status 200. The property `variablesInResultEnabled` in the request body was `true`.\",", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395051033", "createdAt": "2020-03-19T14:06:57Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/message/post.ftl", "diffHunk": "@@ -0,0 +1,135 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"correlateMessage\"\n+      tag = \"Message\"\n+      desc = \"Correlates a message to the process engine to either trigger a message start event or an intermediate message \n+              catching event. Internally this maps to the engine's message correlation builder methods\n+              `MessageCorrelationBuilder#correlateWithResult()` and `MessageCorrelationBuilder#correlateAllWithResult()`.\n+              For more information about the correlation behavior, see the [Message Events](${docsUrl}/bpmn20/events/message-events/)\n+              section of the [BPMN 2.0 Implementation Reference](${docsUrl}/reference/bpmn20/).\" />\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"CorrelationMessageDto\"\n+      examples = ['\"example-1\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate without result\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\", \n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        }\n+                      }\n+                     },\n+                   \"example-2\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate with result\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\",\n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        },\n+                        \"resultEnabled\" : true\n+                      }\n+                     },\n+                   \"example-3\": {\n+                      \"summary\": \"POST /condition\",\n+                      \"description\": \"Correlate with result and variables\",\n+                      \"value\": {\n+                        \"messageName\" : \"aMessage\",\n+                        \"businessKey\" : \"aBusinessKey\",\n+                        \"correlationKeys\" : {\n+                          \"aVariable\" : {\"value\" : \"aValue\", \"type\": \"String\"}\n+                        },\n+                        \"processVariables\" : {\n+                          \"aVariable\" : {\"value\" : \"aNewValue\", \"type\": \"String\",\n+                                          \"valueInfo\" : { \"transient\" : true }\n+                                        },\n+                          \"anotherVariable\" : {\"value\" : true, \"type\": \"Boolean\"}\n+                        },\n+                        \"resultEnabled\" : true,\n+                        \"variablesInResultEnabled\" : true\n+                      }\n+                     }']\n+                     />\n+\n+  \"responses\" : {\n+\n+    <@lib.response\n+        code = \"200\"\n+        dto = \"MessageCorrelationResultWithVariableDto\"\n+        array = true\n+        desc = \"Request successful. The property `resultEnabled` in the request body was `true`.\n+                The `variables` property is only returned, if the property variablesInResultEnable`\n+                was set to `true` in the request.\"\n+      examples = ['\"example-1\": {\n+                       \"summary\": \"Status 200 Response. The property `variablesInResultEnabled` in the request body was `false` (Default).\",\n+                       \"description\": \"The Response content of a status 200\",\n+                       \"value\": [{\n+                         \"resultType\": \"ProcessDefinition\",\n+                         \"execution\": null,\n+                         \"processInstance\": {\n+                           \"links\": [],\n+                             \"id\": \"aProcInstId\",\n+                             \"definitionId\": \"aProcDefId\",\n+                             \"businessKey\": \"aKey\",\n+                             \"caseInstanceId\": \"aCaseInstId\",\n+                             \"ended\": false,\n+                             \"suspended\": false,\n+                             \"tenantId\": \"aTenantId\"\n+                         }\n+                    }]\n+                   },\n+                   \"example-2\": {\n+                     \"summary\": \"Status 200 Response. The property `variablesInResultEnabled` in the request body was `true`.\",\n+                     \"description\": \"The Response content of a status 200\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA1ODA1MA==", "bodyText": "We should also define the enum values here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"string\"\n          \n          \n            \n                    type = \"string\"\n          \n          \n            \n                    enumValues = [ '\"Execution\"', '\"ProcessDefinition\"' ]", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395058050", "createdAt": "2020-03-19T14:16:37Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/message/MessageCorrelationResultWithVariableDto.ftl", "diffHunk": "@@ -0,0 +1,35 @@\n+<@lib.dto>\n+\n+    <@lib.property\n+        name = \"resultType\"\n+        type = \"string\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA2MTc0MQ==", "bodyText": "Shouldn't this be of type ref?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"object\"\n          \n          \n            \n                    type = \"ref\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395061741", "createdAt": "2020-03-19T14:21:25Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/message/MessageCorrelationResultWithVariableDto.ftl", "diffHunk": "@@ -0,0 +1,35 @@\n+<@lib.dto>\n+\n+    <@lib.property\n+        name = \"resultType\"\n+        type = \"string\"\n+        desc = \"Indicates if the message was correlated to a message start event or an \n+                intermediate message catching event. In the first case, the resultType is \n+                `ProcessDefinition` and otherwise `Execution`.\"/>\n+\n+    <@lib.property\n+        name = \"processInstance\"\n+        type = \"object\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTA2MjExOA==", "bodyText": "Same as above:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    type = \"object\"\n          \n          \n            \n                    type = \"ref\"", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#discussion_r395062118", "createdAt": "2020-03-19T14:21:53Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/models/org/camunda/bpm/engine/rest/dto/message/MessageCorrelationResultWithVariableDto.ftl", "diffHunk": "@@ -0,0 +1,35 @@\n+<@lib.dto>\n+\n+    <@lib.property\n+        name = \"resultType\"\n+        type = \"string\"\n+        desc = \"Indicates if the message was correlated to a message start event or an \n+                intermediate message catching event. In the first case, the resultType is \n+                `ProcessDefinition` and otherwise `Execution`.\"/>\n+\n+    <@lib.property\n+        name = \"processInstance\"\n+        type = \"object\"\n+        dto = \"ProcessInstanceDto\"\n+        desc = \"This property only has a value if the resultType is set to `ProcessDefinition`. \n+                The processInstance with the properties as described in the\n+                [get single instance](${docsUrl}/reference/rest/process-instance/get/) method.\"/>\n+\n+    <@lib.property\n+        name = \"execution\"\n+        type = \"object\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5e59c44a21ad96aa5b221de41eea81be0391f4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cbb4dcb9e4abf482037181915765888f454262c", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9cbb4dcb9e4abf482037181915765888f454262c", "committedDate": "2020-03-23T09:19:27Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Nikola Koevski <nikola.koevski@camunda.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "924f15512552e9f9816e577b126fe2c5c93fcb5c", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/924f15512552e9f9816e577b126fe2c5c93fcb5c", "committedDate": "2020-03-23T09:30:00Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Nikola Koevski <nikola.koevski@camunda.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78f98c69c14fa25704985c02c8efccf636b38977", "author": {"user": {"login": "mboskamp", "name": "Miklas Boskamp"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/78f98c69c14fa25704985c02c8efccf636b38977", "committedDate": "2020-03-23T09:49:31Z", "message": "chore(rest-openapi): Correct documentation\n\nRelated to CAM-11531"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTI5NDUy", "url": "https://github.com/camunda/camunda-bpm-platform/pull/735#pullrequestreview-379529452", "createdAt": "2020-03-23T15:16:41Z", "commit": {"oid": "78f98c69c14fa25704985c02c8efccf636b38977"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1986, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}