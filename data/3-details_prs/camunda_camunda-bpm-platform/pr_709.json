{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODE1NTcy", "number": 709, "title": "[CAM-11188] feat(engine): make batch jobs deployment-aware", "bodyText": "generalize deployment-awareness in batch jobs creation\nrun one seed job per deployment id (sequentially)\nmake seed jobs deployment-aware\nremove coupling to job handlers from batch monitor handler\nensure backwards compatibility\nmake more types deployment-aware\n\n@reviewer:\nCommits kept for incremental review purpose, please squash together in the end", "createdAt": "2020-03-06T13:16:17Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709", "merged": true, "mergeCommit": {"oid": "a556b76dce1ee4ed0e18072048d8d735031a2d94"}, "closed": true, "closedAt": "2020-03-31T08:25:30Z", "author": {"login": "tmetzke"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcL7hFTgBqjMxMTAwNTkzOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS-xXMgFqTM4NDUwNjQ1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23b1e8ff1ef094de631c191a50dd3cc2b5d9a28b", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/23b1e8ff1ef094de631c191a50dd3cc2b5d9a28b", "committedDate": "2020-03-09T10:10:17Z", "message": "* make DeleteHistoricProcessInstances deployment-aware"}, "afterCommit": {"oid": "f2bda65795860a02f3950fc470a42dce9d285e85", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f2bda65795860a02f3950fc470a42dce9d285e85", "committedDate": "2020-03-09T10:39:38Z", "message": "* make DeleteHistoricProcessInstances deployment-aware"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b70e1c5584e6552d6d9966d4a7dbf6b3378a5a25", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b70e1c5584e6552d6d9966d4a7dbf6b3378a5a25", "committedDate": "2020-03-11T12:23:05Z", "message": "* make SetExternalTaskRetries deployment-aware"}, "afterCommit": {"oid": "24b2a16c6ff795236fef9d14af999959471aa836", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/24b2a16c6ff795236fef9d14af999959471aa836", "committedDate": "2020-03-12T06:38:31Z", "message": "* make SetExternalTaskRetries deployment-aware"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e78f366471f5a816010cf6047cc454a82409d055", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e78f366471f5a816010cf6047cc454a82409d055", "committedDate": "2020-03-13T11:14:51Z", "message": "* sort ids by deployment id\n* create deployment id index on ids to hand over to batch entity\n* batch handlers do not need to acquire deployment information anymore"}, "afterCommit": {"oid": "c76724276cacf5a72cf9999490ab62e7740fa34f", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c76724276cacf5a72cf9999490ab62e7740fa34f", "committedDate": "2020-03-13T11:42:35Z", "message": "* sort ids by deployment id\n* create deployment id index on ids to hand over to batch entity\n* batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c76724276cacf5a72cf9999490ab62e7740fa34f", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c76724276cacf5a72cf9999490ab62e7740fa34f", "committedDate": "2020-03-13T11:42:35Z", "message": "* sort ids by deployment id\n* create deployment id index on ids to hand over to batch entity\n* batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id"}, "afterCommit": {"oid": "f5839fec41c445f1551049e685b2f67bbe209563", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f5839fec41c445f1551049e685b2f67bbe209563", "committedDate": "2020-03-13T12:01:48Z", "message": "* sort ids by deployment id\n* create deployment id index on ids to hand over to batch entity\n* batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9da20e473dc98c125e579f8df2f325cee3fb9379", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/9da20e473dc98c125e579f8df2f325cee3fb9379", "committedDate": "2020-03-13T12:26:55Z", "message": "*ensure backwards compatibility for restart, modify, migrate"}, "afterCommit": {"oid": "487dd69e93502e135d1b5a511044da0e2487d99d", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/487dd69e93502e135d1b5a511044da0e2487d99d", "committedDate": "2020-03-13T13:12:26Z", "message": "*ensure backwards compatibility for restart, modify, migrate, delete instances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6feb70c168799f4cec2f1bfd44c2f9d917d3533", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e6feb70c168799f4cec2f1bfd44c2f9d917d3533", "committedDate": "2020-03-16T09:19:03Z", "message": "* establish direct deployment id mapping queries"}, "afterCommit": {"oid": "5fd52e68ad6d04f2fa3e9a6f5058ba2fbe7b4a23", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5fd52e68ad6d04f2fa3e9a6f5058ba2fbe7b4a23", "committedDate": "2020-03-16T09:38:36Z", "message": "* establish direct deployment id mapping queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "239a79843a3f8be22a88fa58439c6b395ce3c251", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/239a79843a3f8be22a88fa58439c6b395ce3c251", "committedDate": "2020-03-17T06:00:07Z", "message": "stash: fix tests that used an async instance deletion loophole"}, "afterCommit": {"oid": "4a09a64c4e0f68c72b382929ebc44e794d7f2aa5", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4a09a64c4e0f68c72b382929ebc44e794d7f2aa5", "committedDate": "2020-03-17T06:39:09Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id\n* ensure backwards compatibility for restart, modify, migrate, delete instances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66e8363ec2adac9a42f7668dcb663bf3c9935116", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/66e8363ec2adac9a42f7668dcb663bf3c9935116", "committedDate": "2020-03-17T14:19:14Z", "message": "squash: make jobs query unauthorized as it was previously"}, "afterCommit": {"oid": "684d456451989a064baba080308f2b3eab75fee3", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/684d456451989a064baba080308f2b3eab75fee3", "committedDate": "2020-03-17T14:41:39Z", "message": "squash: make jobs query unauthorized as it was previously"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "684d456451989a064baba080308f2b3eab75fee3", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/684d456451989a064baba080308f2b3eab75fee3", "committedDate": "2020-03-17T14:41:39Z", "message": "squash: make jobs query unauthorized as it was previously"}, "afterCommit": {"oid": "1228fe34979860abfa4252eab62448da927b9749", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1228fe34979860abfa4252eab62448da927b9749", "committedDate": "2020-03-17T15:11:22Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id\n* ensure backwards compatibility for restart, modify, migrate, delete instances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c3051807ce7e85dc8cfe097fa9a1c31b2b3a4b26", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c3051807ce7e85dc8cfe097fa9a1c31b2b3a4b26", "committedDate": "2020-03-18T08:19:09Z", "message": "squash: reuse batch helpers"}, "afterCommit": {"oid": "6a3bb9ec4d43b4998928ea01d2dabd9c5742bd41", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6a3bb9ec4d43b4998928ea01d2dabd9c5742bd41", "committedDate": "2020-03-18T08:53:08Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed execution with older and newer engine versions\n* run one seed job per deployment id\n* make seed creation backwards compatible for restart, modify, migrate, delete instances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de309aa36e795c42a3d37be6bf9ddb94a2a92d38", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/de309aa36e795c42a3d37be6bf9ddb94a2a92d38", "committedDate": "2020-03-18T13:07:21Z", "message": "squash: documentation and refactorings"}, "afterCommit": {"oid": "dec6a8d534802d2c4d86075e3465f97b9ab08f02", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dec6a8d534802d2c4d86075e3465f97b9ab08f02", "committedDate": "2020-03-18T14:25:07Z", "message": "squash: documentation and refactorings"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dec6a8d534802d2c4d86075e3465f97b9ab08f02", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dec6a8d534802d2c4d86075e3465f97b9ab08f02", "committedDate": "2020-03-18T14:25:07Z", "message": "squash: documentation and refactorings"}, "afterCommit": {"oid": "60d482d00f29b6f87afb794b5884b365e0529138", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/60d482d00f29b6f87afb794b5884b365e0529138", "committedDate": "2020-03-19T13:16:23Z", "message": "* ensure backwards compatibility for DeleteProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60d482d00f29b6f87afb794b5884b365e0529138", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/60d482d00f29b6f87afb794b5884b365e0529138", "committedDate": "2020-03-19T13:16:23Z", "message": "* ensure backwards compatibility for DeleteProcessInstances"}, "afterCommit": {"oid": "646786ae3dc50944acd704ee2e86b5ebdb8ee9d2", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/646786ae3dc50944acd704ee2e86b5ebdb8ee9d2", "committedDate": "2020-03-19T16:32:59Z", "message": "* ensure backwards compatibility for DeleteProcessInstances, RestartProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "646786ae3dc50944acd704ee2e86b5ebdb8ee9d2", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/646786ae3dc50944acd704ee2e86b5ebdb8ee9d2", "committedDate": "2020-03-19T16:32:59Z", "message": "* ensure backwards compatibility for DeleteProcessInstances, RestartProcessInstances"}, "afterCommit": {"oid": "f6a4212facc762da9cd871a3f57c7919edc02916", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f6a4212facc762da9cd871a3f57c7919edc02916", "committedDate": "2020-03-19T16:34:04Z", "message": "* ensure backwards compatibility for DeleteProcessInstances, RestartProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6a4212facc762da9cd871a3f57c7919edc02916", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f6a4212facc762da9cd871a3f57c7919edc02916", "committedDate": "2020-03-19T16:34:04Z", "message": "* ensure backwards compatibility for DeleteProcessInstances, RestartProcessInstances"}, "afterCommit": {"oid": "d529e756d436515eef9cda0ce19c7c8ec37fa8ad", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/d529e756d436515eef9cda0ce19c7c8ec37fa8ad", "committedDate": "2020-03-19T16:39:29Z", "message": "* ensure backwards compatibility\n  for DeleteProcessInstances, RestartProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d529e756d436515eef9cda0ce19c7c8ec37fa8ad", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/d529e756d436515eef9cda0ce19c7c8ec37fa8ad", "committedDate": "2020-03-19T16:39:29Z", "message": "* ensure backwards compatibility\n  for DeleteProcessInstances, RestartProcessInstances"}, "afterCommit": {"oid": "151c62d65439bde59f2bbd6d1d45288171bb8a92", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/151c62d65439bde59f2bbd6d1d45288171bb8a92", "committedDate": "2020-03-20T11:05:16Z", "message": "* ensure backwards compatibility\n  for DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "151c62d65439bde59f2bbd6d1d45288171bb8a92", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/151c62d65439bde59f2bbd6d1d45288171bb8a92", "committedDate": "2020-03-20T11:05:16Z", "message": "* ensure backwards compatibility\n  for DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances"}, "afterCommit": {"oid": "946d3f2dddde910346059973fcb73ec768f7dedc", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/946d3f2dddde910346059973fcb73ec768f7dedc", "committedDate": "2020-03-20T11:09:28Z", "message": "* ensure backwards compatibility\n  for DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93f27ccbe2d183bd54b3b3d766f036b6a1f1811e", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/93f27ccbe2d183bd54b3b3d766f036b6a1f1811e", "committedDate": "2020-03-23T09:47:55Z", "message": "squash: create basic tests for new deployment mapping query"}, "afterCommit": {"oid": "92d6856fef7dd5b0b06cc452dcc485428085882a", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/92d6856fef7dd5b0b06cc452dcc485428085882a", "committedDate": "2020-03-23T10:36:25Z", "message": "squash: create basic tests for new deployment mapping query"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbf7289a38dbe28acffdc11dbfc477bca00584e1", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/fbf7289a38dbe28acffdc11dbfc477bca00584e1", "committedDate": "2020-03-23T13:21:31Z", "message": "squash: tests for batch elements and deployment mapping classes"}, "afterCommit": {"oid": "311a7c9d52aeec3e64a96a13c5de27a82c7fec64", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/311a7c9d52aeec3e64a96a13c5de27a82c7fec64", "committedDate": "2020-03-23T13:28:21Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* run one seed job per deployment id\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "382f1ec4bc8feb92c7a70e436761538894c39f25", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/382f1ec4bc8feb92c7a70e436761538894c39f25", "committedDate": "2020-03-24T12:16:45Z", "message": "squash: ensure mixed version seed execution by sanitizing mappings"}, "afterCommit": {"oid": "15c905eb8f1555bc55a4230180239ad82b22a426", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/15c905eb8f1555bc55a4230180239ad82b22a426", "committedDate": "2020-03-24T14:36:42Z", "message": "squash: ensure mixed version seed execution by sanitizing mappings"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac19e8f8d366116ad7f724cf3c8287a54dd1dcd2", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ac19e8f8d366116ad7f724cf3c8287a54dd1dcd2", "committedDate": "2020-03-24T15:31:40Z", "message": "squash: make deployment mapping overall count more accessible"}, "afterCommit": {"oid": "224280d4fc60b4db37d4184c8698b38fbbddec2e", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/224280d4fc60b4db37d4184c8698b38fbbddec2e", "committedDate": "2020-03-24T15:34:32Z", "message": "squash: make deployment mapping overall count more accessible"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "224280d4fc60b4db37d4184c8698b38fbbddec2e", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/224280d4fc60b4db37d4184c8698b38fbbddec2e", "committedDate": "2020-03-24T15:34:32Z", "message": "squash: make deployment mapping overall count more accessible"}, "afterCommit": {"oid": "74fe4603f5fb399c32f82a134abee60560890df8", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/74fe4603f5fb399c32f82a134abee60560890df8", "committedDate": "2020-03-25T07:40:26Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* run one seed job per deployment id\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd5659581f4c550a54dffc5246779c4e42b25338", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dd5659581f4c550a54dffc5246779c4e42b25338", "committedDate": "2020-03-25T13:43:51Z", "message": "* make SetRemovalTimeToHistoricDecisionInstances deployment-aware"}, "afterCommit": {"oid": "232f8ad66adbc2deee92ad40c90f6b84b5ae5ddc", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/232f8ad66adbc2deee92ad40c90f6b84b5ae5ddc", "committedDate": "2020-03-25T14:50:48Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* run one seed job per deployment id\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* make DeleteHistoricDecisionInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* remove coupling to job handlers from batch monitor handler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "232f8ad66adbc2deee92ad40c90f6b84b5ae5ddc", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/232f8ad66adbc2deee92ad40c90f6b84b5ae5ddc", "committedDate": "2020-03-25T14:50:48Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* run one seed job per deployment id\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* make DeleteHistoricDecisionInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* remove coupling to job handlers from batch monitor handler"}, "afterCommit": {"oid": "e02452f15ccbf2e5f37507c061bf3bffc70043a9", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e02452f15ccbf2e5f37507c061bf3bffc70043a9", "committedDate": "2020-03-25T15:48:53Z", "message": "* make DeleteHistoricDecisionInstances deployment-aware"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eab778c4dc389ca80d8dff40a5de6a4612eceed0", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/eab778c4dc389ca80d8dff40a5de6a4612eceed0", "committedDate": "2020-03-27T08:48:55Z", "message": "squash: use JSON converter for DeploymentMapping in configurations"}, "afterCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/139ded1e3c1ef981dd5aa1b8a34346461e3f0476", "committedDate": "2020-03-27T08:55:57Z", "message": "squash: use JSON converter for DeploymentMapping in configurations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTY3ODQz", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383567843", "createdAt": "2020-03-30T06:45:28Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0NToyOFrOF9bltQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0NToyOFrOF9bltQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1OTQ3Nw==", "bodyText": "This newly introduced API method is not covered by dedicated test cases.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399959477", "createdAt": "2020-03-30T06:45:28Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/externaltask/ExternalTaskQuery.java", "diffHunk": "@@ -31,6 +32,11 @@\n    */\n   ExternalTaskQuery externalTaskId(String externalTaskId);\n \n+  /**\n+   * Only select external tasks with any of the given ids\n+   */\n+  ExternalTaskQuery externalTaskIdIn(Set<String> externalTaskIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTY4MzA3", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383568307", "createdAt": "2020-03-30T06:46:29Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0NjoyOVrOF9bnJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0NjoyOVrOF9bnJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1OTg0Ng==", "bodyText": "Can we try to avoid reorganising imports?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399959846", "createdAt": "2020-03-30T06:46:29Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/batch/deletion/DeleteHistoricProcessInstanceBatchConfigurationJsonConverter.java", "diffHunk": "@@ -16,12 +16,15 @@\n  */\n package org.camunda.bpm.engine.impl.batch.deletion;\n \n+import java.util.List;\n+\n import org.camunda.bpm.engine.impl.batch.BatchConfiguration;\n+import org.camunda.bpm.engine.impl.batch.DeploymentMappingJsonConverter;\n+import org.camunda.bpm.engine.impl.batch.DeploymentMappings;\n import org.camunda.bpm.engine.impl.json.JsonObjectConverter;\n import org.camunda.bpm.engine.impl.util.JsonUtil;\n-import com.google.gson.JsonObject;\n \n-import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTY5MDAx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383569001", "createdAt": "2020-03-30T06:48:01Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0ODowMlrOF9bpcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo0ODowMlrOF9bpcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2MDQzNA==", "bodyText": "?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399960434", "createdAt": "2020-03-30T06:48:02Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/batch/deletion/DeleteProcessInstanceBatchConfigurationJsonConverter.java", "diffHunk": "@@ -49,9 +54,13 @@ public JsonObject toJsonObject(DeleteProcessInstanceBatchConfiguration configura\n \n   public DeleteProcessInstanceBatchConfiguration toObject(JsonObject json) {\n     DeleteProcessInstanceBatchConfiguration configuration =\n-      new DeleteProcessInstanceBatchConfiguration(readProcessInstanceIds(json), null, JsonUtil.getBoolean(json, SKIP_CUSTOM_LISTENERS), JsonUtil.getBoolean(json, SKIP_SUBPROCESSES), JsonUtil.getBoolean(json, FAIL_IF_NOT_EXISTS));\n+      new DeleteProcessInstanceBatchConfiguration(readProcessInstanceIds(json), readIdMappings(json), null,\n+          JsonUtil.getBoolean(json, SKIP_CUSTOM_LISTENERS), JsonUtil.getBoolean(json, SKIP_SUBPROCESSES),\n+          JsonUtil.getBoolean(json, FAIL_IF_NOT_EXISTS));\n \n     String deleteReason = JsonUtil.getString(json, DELETE_REASON);\n+    deleteReason = JsonUtil.getString(json, DELETE_REASON);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTcwMzgy", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383570382", "createdAt": "2020-03-30T06:50:59Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo1MDo1OVrOF9buAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo1MDo1OVrOF9buAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2MTYwMg==", "bodyText": "What is the purpose of having this method separated?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399961602", "createdAt": "2020-03-30T06:50:59Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/batch/AbstractBatchJobHandler.java", "diffHunk": "@@ -41,19 +42,80 @@\n \n   @Override\n   public boolean createJobs(BatchEntity batch) {\n-    CommandContext commandContext = Context.getCommandContext();\n-    ByteArrayManager byteArrayManager = commandContext.getByteArrayManager();\n-    JobManager jobManager = commandContext.getJobManager();\n-\n     T configuration = readConfiguration(batch.getConfigurationBytes());\n+    return doCreateJobs(batch, configuration);\n+  }\n+\n+  protected boolean doCreateJobs(BatchEntity batch, T configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTcwOTU2", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383570956", "createdAt": "2020-03-30T06:52:10Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo1MjoxMFrOF9bvyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjo1MjoxMFrOF9bvyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk2MjA1Ng==", "bodyText": "Method is never called.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399962056", "createdAt": "2020-03-30T06:52:10Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/batch/AbstractBatchJobHandler.java", "diffHunk": "@@ -137,5 +194,14 @@ public T readConfiguration(byte[] serializedConfiguration) {\n     return getJsonConverterInstance().toObject(JsonUtil.asObject(serializedConfiguration));\n   }\n \n+  protected void createSingleDeploymentIdMappingForDefinition(T configuration, String processDefinitionId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 126}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTkwMjE4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383590218", "createdAt": "2020-03-30T07:26:11Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzoyNjoxMVrOF9ctHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzoyNjoxMVrOF9ctHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk3Nzc1Nw==", "bodyText": "Sounds like the documentation of Job#getDeploymentId and not of JobDefinition.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399977757", "createdAt": "2020-03-30T07:26:11Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/management/JobDefinition.java", "diffHunk": "@@ -97,4 +97,10 @@\n    */\n   String getTenantId();\n \n+  /**\n+   * The id of the deployment this job is related to. In a deployment-aware setup, this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjA1Njk2", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383605696", "createdAt": "2020-03-30T07:50:25Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1MDoyNVrOF9de8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1MDoyNVrOF9de8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5MDUxMw==", "bodyText": "The parameter name is not very self-explanatory\nAlso check linke 43 & 49", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399990513", "createdAt": "2020-03-30T07:50:25Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/batch/DeploymentMappings.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.impl.batch;\n+\n+import java.util.ArrayList;\n+\n+/**\n+ * List of aggregated information on deployment ids and the number of related resources\n+ */\n+public class DeploymentMappings extends ArrayList<DeploymentMapping> {\n+\n+  private static final long serialVersionUID = -868922966819588407L;\n+\n+  protected int overallIdCount;\n+\n+  public static DeploymentMappings of(DeploymentMapping mapping) {\n+    DeploymentMappings mappings = new DeploymentMappings();\n+    mappings.add(mapping);\n+    return mappings;\n+  }\n+\n+  @Override\n+  public boolean add(DeploymentMapping var1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjA5OTcx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383609971", "createdAt": "2020-03-30T07:57:00Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1NzowMFrOF9dtCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNzo1NzowMFrOF9dtCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk5NDEyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  query.decisionInstanceIdIn(historicDecisionInstanceIds.toArray(new String[historicDecisionInstanceIds.size()]));\n          \n          \n            \n                  query.decisionInstanceIdIn(historicDecisionInstanceIds.toArray(new String[0]));", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r399994121", "createdAt": "2020-03-30T07:57:00Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/dmn/cmd/DeleteHistoricDecisionInstancesBatchCmd.java", "diffHunk": "@@ -53,44 +50,39 @@ public DeleteHistoricDecisionInstancesBatchCmd(List<String> ids,\n \n   @Override\n   public Batch execute(CommandContext commandContext) {\n-    Collection<String> collectedInstanceIds = collectHistoricDecisionInstanceIds();\n-    ensureNotEmpty(BadUserRequestException.class,\n-        \"historicDecisionInstanceIds\", collectedInstanceIds);\n+    BatchElementConfiguration elementConfiguration = collectHistoricDecisionInstanceIds(commandContext);\n+    ensureNotEmpty(BadUserRequestException.class, \"historicDecisionInstanceIds\", elementConfiguration.getIds());\n \n     return new BatchBuilder(commandContext)\n         .type(Batch.TYPE_HISTORIC_DECISION_INSTANCE_DELETION)\n-        .config(getConfiguration(collectedInstanceIds))\n+        .config(getConfiguration(elementConfiguration))\n         .permission(BatchPermissions.CREATE_BATCH_DELETE_DECISION_INSTANCES)\n         .operationLogHandler(this::writeUserOperationLog)\n         .build();\n   }\n \n-  protected List<String> collectHistoricDecisionInstanceIds() {\n+  protected BatchElementConfiguration collectHistoricDecisionInstanceIds(CommandContext commandContext) {\n \n-    Set<String> collectedDecisionInstanceIds = new HashSet<String>();\n+    BatchElementConfiguration elementConfiguration = new BatchElementConfiguration();\n \n-    List<String> decisionInstanceIds = getHistoricDecisionInstanceIds();\n-    if (decisionInstanceIds != null) {\n-      collectedDecisionInstanceIds.addAll(decisionInstanceIds);\n+    if (!CollectionUtil.isEmpty(historicDecisionInstanceIds)) {\n+      HistoricDecisionInstanceQueryImpl query = new HistoricDecisionInstanceQueryImpl();\n+      query.decisionInstanceIdIn(historicDecisionInstanceIds.toArray(new String[historicDecisionInstanceIds.size()]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjIwMDc1", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383620075", "createdAt": "2020-03-30T08:11:35Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxMTozNVrOF9eNvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxMTozNVrOF9eNvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwMjQ5Mg==", "bodyText": "Modifier private is not allowed for fields and methods. Please also see line 44 & 117", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r400002492", "createdAt": "2020-03-30T08:11:35Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/impl/util/ImmutablePair.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.impl.util;\n+\n+import java.io.Serializable;\n+import java.util.Map.Entry;\n+\n+import java.util.Objects;\n+\n+/**\n+ * Immutable representation of a 2-tuple of elements.\n+ *\n+ * Although the implementation is immutable, there is no restriction on the\n+ * objects that may be stored. If mutable objects are stored in the pair, then\n+ * the pair itself effectively becomes mutable.\n+ *\n+ * ThreadSafe if both paired objects are thread-safe\n+ *\n+ * @param <L>\n+ *          the type of the left element\n+ * @param <R>\n+ *          the type of the right element\n+ */\n+public class ImmutablePair<L, R> implements Entry<L, R>, Serializable, Comparable<ImmutablePair<L, R>> {\n+\n+  /** Serialization version */\n+  private static final long serialVersionUID = -7043970803192830955L;\n+\n+  private L left;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjIzOTk3", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383623997", "createdAt": "2020-03-30T08:16:56Z", "commit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxNjo1NlrOF9eaMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoxNjo1NlrOF9eaMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwNTY4MQ==", "bodyText": "Let's cover this public API by a dedicated test case. Please also do for line 46.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r400005681", "createdAt": "2020-03-30T08:16:56Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/runtime/JobQuery.java", "diffHunk": "@@ -32,12 +33,18 @@\n   /** Only select jobs with the given id */\n   JobQuery jobId(String jobId);\n \n+  /** Only select jobs whose id is in the given set of ids */\n+  JobQuery jobIds(Set<String> ids);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "139ded1e3c1ef981dd5aa1b8a34346461e3f0476"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjI5Njk4", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383629698", "createdAt": "2020-03-30T08:24:48Z", "commit": {"oid": "dbfad7efba47fff3c24276b98660c37434fc2fcd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoyNDo0OVrOF9er1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoyNDo0OVrOF9er1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMDE5OA==", "bodyText": "Why did this change?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r400010198", "createdAt": "2020-03-30T08:24:49Z", "author": {"login": "tasso94"}, "path": "engine/src/test/java/org/camunda/bpm/engine/test/api/authorization/batch/DeleteHistoricProcessInstancesBatchAuthorizationTest.java", "diffHunk": "@@ -84,7 +84,7 @@ public void cleanBatch() {\n   public static Collection<AuthorizationScenario[]> scenarios() {\n     return AuthorizationTestRule.asParameters(\n         AuthorizationScenarioWithCount.scenario()\n-            .withCount(2L)\n+            .withCount(1L)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbfad7efba47fff3c24276b98660c37434fc2fcd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjUwNTM3", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383650537", "createdAt": "2020-03-30T08:52:37Z", "commit": {"oid": "dbfad7efba47fff3c24276b98660c37434fc2fcd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODo1MjozN1rOF9fuSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODo1MjozN1rOF9fuSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAyNzIwOA==", "bodyText": "Another request I would like to raise is to always expose newly added API getters to the REST API and cover it with REST API reference docs. I think this should be raised in the team meeting as well to discuss whether we would like to make it a general rule.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#discussion_r400027208", "createdAt": "2020-03-30T08:52:37Z", "author": {"login": "tasso94"}, "path": "engine/src/main/java/org/camunda/bpm/engine/management/JobDefinition.java", "diffHunk": "@@ -97,4 +97,10 @@\n    */\n   String getTenantId();\n \n+  /**\n+   * The id of the deployment this job definition is related to. In a deployment-aware setup,\n+   * this leads to all jobs of the same definition being executed on the same node.\n+   */\n+  String getDeploymentId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbfad7efba47fff3c24276b98660c37434fc2fcd"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjUzMDg5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-383653089", "createdAt": "2020-03-30T08:55:51Z", "commit": {"oid": "dbfad7efba47fff3c24276b98660c37434fc2fcd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5684d416fdec627455792264064308659ec87a9e", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5684d416fdec627455792264064308659ec87a9e", "committedDate": "2020-03-30T11:27:46Z", "message": "squash: add tests for deploymentId in JobDefinitionDto"}, "afterCommit": {"oid": "1c20c1157d3dd647e64fc4d04aaf299fdcfd7826", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1c20c1157d3dd647e64fc4d04aaf299fdcfd7826", "committedDate": "2020-03-30T12:48:57Z", "message": "squash: add tests for deploymentId in JobDefinitionDto"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "596b67719f344f5dd8f0286b024a9ec6411f8296", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/596b67719f344f5dd8f0286b024a9ec6411f8296", "committedDate": "2020-03-31T08:12:18Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* remove coupling to job handlers from batch monitor handler\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* make DeleteHistoricDecisionInstances deployment-aware\n\nrelated to CAM-11188"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c20c1157d3dd647e64fc4d04aaf299fdcfd7826", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1c20c1157d3dd647e64fc4d04aaf299fdcfd7826", "committedDate": "2020-03-30T12:48:57Z", "message": "squash: add tests for deploymentId in JobDefinitionDto"}, "afterCommit": {"oid": "596b67719f344f5dd8f0286b024a9ec6411f8296", "author": {"user": {"login": "tmetzke", "name": "Tobias Metzke-Bernstein"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/596b67719f344f5dd8f0286b024a9ec6411f8296", "committedDate": "2020-03-31T08:12:18Z", "message": "feat(engine): make batch jobs deployment-aware\n\n* generalize deployment-awareness in batch jobs creation\n  * establish direct deployment id mapping queries in commands\n  * sort ids by deployment id\n  * create deployment id index on ids to hand over to batch entity\n  * batch handlers do not need to acquire deployment information anymore\n* run one seed job per deployment id\n* make seed jobs deployment-aware\n  * pick the first deployment id from the mappings\n  * all seed jobs receive the same deployment id to prevent\n    mixed seed job execution with older and newer engine versions\n    in a clustered rolling update scenario\n* remove coupling to job handlers from batch monitor handler\n* ensure backwards compatibility for\n  DeleteProcessInstances, RestartProcessInstances,\n  ModifyProcessInstances, MigrateProcessInstances\n* make DeleteHistoricProcessInstances deployment-aware\n* make SetJobRetries deployment-aware\n* make SetExternalTaskRetries deployment-aware\n* make UpdateProcessInstancesSuspendState deployment-aware\n* make SetRemovalTimeToHistoricProcessInstances deployment-aware\n* make SetRemovalTimeToHistoricDecisionInstances deployment-aware\n* make DeleteHistoricDecisionInstances deployment-aware\n\nrelated to CAM-11188"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NTA2NDU0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/709#pullrequestreview-384506454", "createdAt": "2020-03-31T08:24:45Z", "commit": {"oid": "596b67719f344f5dd8f0286b024a9ec6411f8296"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1939, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}