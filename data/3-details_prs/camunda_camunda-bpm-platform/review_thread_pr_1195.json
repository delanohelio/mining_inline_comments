{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NTI4MTEz", "number": 1195, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1MToyN1rOFFciww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1NToyN1rOFFcpRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjU0ODUxOnYy", "diffSide": "RIGHT", "path": "engine-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/dmn/DmnJuelTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1MToyN1rOIF9YQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1MToyN1rOIF9YQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExOTQyNw==", "bodyText": "What do you think about providing a more \"production-grade\" decision key here? \ud83d\ude03\nAnother minor thing that come to my mind with regards to what we learned over the last days:\nThe decision table methods are more of a left-over and deprecated (according to Philipp). Should we rather use the evaluateDecisionByKey method here instead? What do you think?", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1195#discussion_r543119427", "createdAt": "2020-12-15T07:51:27Z", "author": {"login": "tmetzke"}, "path": "engine-cdi/src/test/java/org/camunda/bpm/engine/cdi/test/dmn/DmnJuelTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.cdi.test.dmn;\n+\n+import org.camunda.bpm.dmn.engine.DmnDecisionTableResult;\n+import org.camunda.bpm.engine.cdi.test.CdiProcessEngineTestCase;\n+import org.camunda.bpm.engine.test.Deployment;\n+import org.junit.Test;\n+\n+import javax.inject.Named;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class DmnJuelTest extends CdiProcessEngineTestCase {\n+\n+  @Named\n+  public static class BeanFoo {\n+\n+    protected String bar = \"baz\";\n+\n+    public String getBar() {\n+      return bar;\n+    }\n+\n+  }\n+\n+  @Test\n+  @Deployment(resources = {\"org/camunda/bpm/engine/cdi/test/dmn/JuelTest.dmn\"})\n+  public void shouldResolveBean() {\n+    // given\n+\n+    // when\n+    DmnDecisionTableResult result = decisionService.evaluateDecisionTableByKey(\"Decision_00khy2n\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799b8acdfe6d65fd511faebddd239a0224948084"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjU2NTE3OnYy", "diffSide": "RIGHT", "path": "engine-spring/core/src/test/java/org/camunda/bpm/engine/spring/test/dmn/DmnJuelTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1NToyN1rOIF9hbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo1NToyN1rOIF9hbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEyMTc3Mw==", "bodyText": "Same remark as above with regards to the evaluation method used and the decision key. \ud83d\ude03", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1195#discussion_r543121773", "createdAt": "2020-12-15T07:55:27Z", "author": {"login": "tmetzke"}, "path": "engine-spring/core/src/test/java/org/camunda/bpm/engine/spring/test/dmn/DmnJuelTest.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n+ * under one or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information regarding copyright\n+ * ownership. Camunda licenses this file to you under the Apache License,\n+ * Version 2.0; you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.camunda.bpm.engine.spring.test.dmn;\n+\n+import org.camunda.bpm.dmn.engine.DmnDecisionTableResult;\n+import org.camunda.bpm.engine.DecisionService;\n+import org.camunda.bpm.engine.RepositoryService;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(locations = {\n+    \"classpath:org/camunda/bpm/engine/spring/test/dmn/DmnJuelTest-applicationContext.xml\" })\n+public class DmnJuelTest {\n+\n+  @Autowired\n+  protected RepositoryService repositoryService;\n+\n+  @Autowired\n+  protected DecisionService decisionService;\n+\n+  protected String deploymentId;\n+\n+  @Before\n+  public void deploy() {\n+    deploymentId = repositoryService.createDeployment()\n+        .addClasspathResource(\"org/camunda/bpm/engine/spring/test/dmn/JuelTest.dmn\")\n+        .deploy()\n+        .getId();\n+  }\n+\n+  @After\n+  public void clean() {\n+    repositoryService.deleteDeployment(deploymentId, true);\n+  }\n+\n+  @Test\n+  public void shouldResolveBean() {\n+    // given\n+\n+    // when\n+    DmnDecisionTableResult result = decisionService.evaluateDecisionTableByKey(\"Decision_00khy2n\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "799b8acdfe6d65fd511faebddd239a0224948084"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4393, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}