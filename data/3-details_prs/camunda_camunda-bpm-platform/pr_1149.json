{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3OTA4NzE3", "number": 1149, "title": "CAM-12793: chore(pipelines): resolve pr labels", "bodyText": "execute when condition before agent\nadd 'no-build' label logic\npass PR_LABELS param to dowstream builds as json string\ntrigger daily only when specific pr labels are applied\nadd publish step for master\n\nRelated to CAM-12793", "createdAt": "2020-11-26T08:22:30Z", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149", "merged": true, "mergeCommit": {"oid": "21f3126446d84fd20891c3737309fac1b7ccc487"}, "closed": true, "closedAt": "2020-12-03T16:32:07Z", "author": {"login": "yanavasileva"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgPDI6gBqjQwNDE0NDgyODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdilwilAH2gAyNTI3OTA4NzE3OjU1NTU2ODgyNzVlZjQ0OTE0Y2Q4ZTkxMzA4ZjkyNTMyMzAwN2EyODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb0f72f82c644a4bd155aebe08456bac15ae687c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/eb0f72f82c644a4bd155aebe08456bac15ae687c", "committedDate": "2020-11-26T08:26:52Z", "message": "test rest api jobs"}, "afterCommit": {"oid": "7868dd5714e7c4d17603196dfb19a8f9e79694e1", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7868dd5714e7c4d17603196dfb19a8f9e79694e1", "committedDate": "2020-11-26T08:54:34Z", "message": "test rest api jobs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7868dd5714e7c4d17603196dfb19a8f9e79694e1", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7868dd5714e7c4d17603196dfb19a8f9e79694e1", "committedDate": "2020-11-26T08:54:34Z", "message": "test rest api jobs"}, "afterCommit": {"oid": "717aba1653492bb46eb354ef261fdf5dd3049e9d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/717aba1653492bb46eb354ef261fdf5dd3049e9d", "committedDate": "2020-11-26T09:12:01Z", "message": "test rest api jobs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "717aba1653492bb46eb354ef261fdf5dd3049e9d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/717aba1653492bb46eb354ef261fdf5dd3049e9d", "committedDate": "2020-11-26T09:12:01Z", "message": "test rest api jobs"}, "afterCommit": {"oid": "75290a638e59527ff902672e93fa1358df3615aa", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/75290a638e59527ff902672e93fa1358df3615aa", "committedDate": "2020-11-26T10:08:41Z", "message": "test rest api jobs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "886cc90651094ca67b3255e2aaad2d2c0f4cfcca", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/886cc90651094ca67b3255e2aaad2d2c0f4cfcca", "committedDate": "2020-11-26T10:26:38Z", "message": "test separate trigger of QA pipeline"}, "afterCommit": {"oid": "7c9bbca878622226dd408a5cb06295738fd8a4b4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7c9bbca878622226dd408a5cb06295738fd8a4b4", "committedDate": "2020-11-26T10:31:01Z", "message": "test separate trigger of QA pipeline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c9bbca878622226dd408a5cb06295738fd8a4b4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7c9bbca878622226dd408a5cb06295738fd8a4b4", "committedDate": "2020-11-26T10:31:01Z", "message": "test separate trigger of QA pipeline"}, "afterCommit": {"oid": "3153f3e01919673578144d00d46089d6cc5b13bd", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/3153f3e01919673578144d00d46089d6cc5b13bd", "committedDate": "2020-11-26T10:31:47Z", "message": "test separate trigger of QA pipeline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3153f3e01919673578144d00d46089d6cc5b13bd", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/3153f3e01919673578144d00d46089d6cc5b13bd", "committedDate": "2020-11-26T10:31:47Z", "message": "test separate trigger of QA pipeline"}, "afterCommit": {"oid": "a5e6899fb9c354f743ef4fc3433305428d742325", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/a5e6899fb9c354f743ef4fc3433305428d742325", "committedDate": "2020-11-26T10:37:33Z", "message": "test separate trigger of QA pipeline"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MzU4MDE5", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#pullrequestreview-539358019", "createdAt": "2020-11-26T14:25:07Z", "commit": {"oid": "a5e6899fb9c354f743ef4fc3433305428d742325"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNTowN1rOH6dhcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNDoyNTowN1rOH6dhcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTA2MzE1Mw==", "bodyText": "I think now this env.EE_BRANCH_NAME should be pram.EE_BRANCH_NAME to use the default value.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r531063153", "createdAt": "2020-11-26T14:25:07Z", "author": {"login": "aabouzaid"}, "path": "Jenkinsfile", "diffHunk": "@@ -49,50 +49,77 @@ pipeline {\n       string defaultValue: 'pipeline-master', description: 'The name of the EE branch to run the EE pipeline on', name: 'EE_BRANCH_NAME'\n   }\n   stages {\n-    stage('ASSEMBLY') {\n+    stage('Test 0') {\n       agent {\n         kubernetes {\n           yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n         }\n       }\n-      steps {\n-        withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-          nodejs('nodejs-14.6.0'){\n-             configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-               sh \"\"\"\n-                 mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n-               \"\"\"\n-             }\n-          }\n+      stages('Test 1') {\n+        stage('ASSEMBLY') {\n+          agent none\n+          steps {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+              nodejs('nodejs-14.6.0'){\n+                 configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n+                   sh \"\"\"\n+                     mvn -s \\$MAVEN_SETTINGS_XML clean install source:jar -Pdistro,distro-ce,distro-wildfly,distro-webjar -DskipTests -Dmaven.repo.local=\\${WORKSPACE}/.m2 com.mycila:license-maven-plugin:check -B\n+                   \"\"\"\n+                 }\n+              }\n+            \n+              // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n+              // add a new line for each group of artifacts\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n+              archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            \n+              stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n+              stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n+              stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+            }\n \n-          // archive all .jar, .pom, .xml, .txt runtime artifacts + required .war/.zip/.tar.gz for EE pipeline\n-          // add a new line for each group of artifacts\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/*.jar,.m2/org/camunda/**/*-SNAPSHOT/**/*.pom,.m2/org/camunda/**/*-SNAPSHOT/**/*.xml,.m2/org/camunda/**/*-SNAPSHOT/**/*.txt', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*frontend-sources.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/license-book*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-jboss-modules*.zip', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-*-assembly*.tar.gz', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-webapp*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n-          archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n+            build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5e6899fb9c354f743ef4fc3433305428d742325"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9ce3e822b0903a1e929e1b00c972ef5cf8eeed0", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f9ce3e822b0903a1e929e1b00c972ef5cf8eeed0", "committedDate": "2020-11-26T14:25:15Z", "message": "split downstream"}, "afterCommit": {"oid": "784b6614e56334968ec06b20e5e3065000ce93f7", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/784b6614e56334968ec06b20e5e3065000ce93f7", "committedDate": "2020-11-26T14:31:06Z", "message": "split downstream"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2bbc20eaafe7b1e3761ead9003ed9f357bf1b7cb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2bbc20eaafe7b1e3761ead9003ed9f357bf1b7cb", "committedDate": "2020-11-26T16:32:36Z", "message": "test"}, "afterCommit": {"oid": "127b68d3a7b1a4086b7f149ef7dd8b3143fa236a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/127b68d3a7b1a4086b7f149ef7dd8b3143fa236a", "committedDate": "2020-11-26T16:37:06Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "127b68d3a7b1a4086b7f149ef7dd8b3143fa236a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/127b68d3a7b1a4086b7f149ef7dd8b3143fa236a", "committedDate": "2020-11-26T16:37:06Z", "message": "test"}, "afterCommit": {"oid": "7a1fb179dfa28ab39e0bf8f921f072c2dfb3fc2c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/7a1fb179dfa28ab39e0bf8f921f072c2dfb3fc2c", "committedDate": "2020-11-26T16:42:30Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdc899cabe1eda70820716651f193cb7b9f3e95d", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/cdc899cabe1eda70820716651f193cb7b9f3e95d", "committedDate": "2020-11-27T15:44:19Z", "message": "test"}, "afterCommit": {"oid": "2e6fe8e8257886b33d2e325b9b766c95c1748bd5", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/2e6fe8e8257886b33d2e325b9b766c95c1748bd5", "committedDate": "2020-11-27T15:54:41Z", "message": "test pr"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3d3d6e8b8ccbe50f814c472e0705c90018579f4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/f3d3d6e8b8ccbe50f814c472e0705c90018579f4", "committedDate": "2020-11-30T07:35:00Z", "message": "no-build"}, "afterCommit": {"oid": "6316c183ee05197b12c881d5777f4a00b1ca8481", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6316c183ee05197b12c881d5777f4a00b1ca8481", "committedDate": "2020-11-30T07:50:42Z", "message": "no-build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6316c183ee05197b12c881d5777f4a00b1ca8481", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6316c183ee05197b12c881d5777f4a00b1ca8481", "committedDate": "2020-11-30T07:50:42Z", "message": "no-build"}, "afterCommit": {"oid": "8b63038da7b893d2bf622f159de46415e85f11cf", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8b63038da7b893d2bf622f159de46415e85f11cf", "committedDate": "2020-11-30T07:58:28Z", "message": "no-build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b63038da7b893d2bf622f159de46415e85f11cf", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8b63038da7b893d2bf622f159de46415e85f11cf", "committedDate": "2020-11-30T07:58:28Z", "message": "no-build"}, "afterCommit": {"oid": "1a88946cedacb60aac9f0bafee5343216ab4db39", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1a88946cedacb60aac9f0bafee5343216ab4db39", "committedDate": "2020-11-30T08:05:52Z", "message": "no-build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a88946cedacb60aac9f0bafee5343216ab4db39", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/1a88946cedacb60aac9f0bafee5343216ab4db39", "committedDate": "2020-11-30T08:05:52Z", "message": "no-build"}, "afterCommit": {"oid": "ce7cbf8ceb22b528086931ff14845bc6d4a5f2ee", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ce7cbf8ceb22b528086931ff14845bc6d4a5f2ee", "committedDate": "2020-11-30T08:17:21Z", "message": "no-build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aadda80677e33c8ed927e76a4c1932f5fd57e516", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/aadda80677e33c8ed927e76a4c1932f5fd57e516", "committedDate": "2020-11-30T09:27:48Z", "message": "fix EE trigger"}, "afterCommit": {"oid": "5d541364217138bd08b20308a96af10cc99d874f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5d541364217138bd08b20308a96af10cc99d874f", "committedDate": "2020-11-30T09:33:59Z", "message": "fix EE trigger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d541364217138bd08b20308a96af10cc99d874f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5d541364217138bd08b20308a96af10cc99d874f", "committedDate": "2020-11-30T09:33:59Z", "message": "fix EE trigger"}, "afterCommit": {"oid": "8af81ce42c6005e20893fb7d747c5155bb7815f4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8af81ce42c6005e20893fb7d747c5155bb7815f4", "committedDate": "2020-11-30T09:38:54Z", "message": "fix EE trigger"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10ace5b58411b067d97f506ab58da84de2b1e64c", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/10ace5b58411b067d97f506ab58da84de2b1e64c", "committedDate": "2020-12-01T07:41:36Z", "message": "test"}, "afterCommit": {"oid": "ac97d45173244d7f3a65c00160847815ee5c1ff4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ac97d45173244d7f3a65c00160847815ee5c1ff4", "committedDate": "2020-12-01T07:46:59Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac97d45173244d7f3a65c00160847815ee5c1ff4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ac97d45173244d7f3a65c00160847815ee5c1ff4", "committedDate": "2020-12-01T07:46:59Z", "message": "test"}, "afterCommit": {"oid": "b35274eb6a2291f3a6f57c796ac26c2133072626", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b35274eb6a2291f3a6f57c796ac26c2133072626", "committedDate": "2020-12-01T07:49:30Z", "message": "fix withLabels"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "431f995ab804554702fd90dbd5451c71a4b86b9f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/431f995ab804554702fd90dbd5451c71a4b86b9f", "committedDate": "2020-12-01T08:54:10Z", "message": "test"}, "afterCommit": {"oid": "ccc5ad3f1f354747da291bbc3c80c41bac6eead6", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ccc5ad3f1f354747da291bbc3c80c41bac6eead6", "committedDate": "2020-12-01T08:54:53Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ccc5ad3f1f354747da291bbc3c80c41bac6eead6", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ccc5ad3f1f354747da291bbc3c80c41bac6eead6", "committedDate": "2020-12-01T08:54:53Z", "message": "test"}, "afterCommit": {"oid": "96b5f131c8e90f9338dd06059f9fb0898fcdbc67", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/96b5f131c8e90f9338dd06059f9fb0898fcdbc67", "committedDate": "2020-12-01T09:19:12Z", "message": "chore(pipelines): resolve pr labels"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb", "committedDate": "2020-12-01T13:02:56Z", "message": "fix matrix label resolving"}, "afterCommit": {"oid": "4b19bd3a92b7295bc4a34c6c60f728a7fe57aff8", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4b19bd3a92b7295bc4a34c6c60f728a7fe57aff8", "committedDate": "2020-12-02T07:47:53Z", "message": "fix matrix label resolving"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b19bd3a92b7295bc4a34c6c60f728a7fe57aff8", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4b19bd3a92b7295bc4a34c6c60f728a7fe57aff8", "committedDate": "2020-12-02T07:47:53Z", "message": "fix matrix label resolving"}, "afterCommit": {"oid": "b279699dc0660720385c015e744d31921851e5eb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b279699dc0660720385c015e744d31921851e5eb", "committedDate": "2020-12-02T07:58:00Z", "message": "fix matrix label resolving"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b279699dc0660720385c015e744d31921851e5eb", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b279699dc0660720385c015e744d31921851e5eb", "committedDate": "2020-12-02T07:58:00Z", "message": "fix matrix label resolving"}, "afterCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74", "committedDate": "2020-12-02T08:05:13Z", "message": "fix matrix label resolving"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74", "committedDate": "2020-12-02T08:05:13Z", "message": "fix matrix label resolving"}, "afterCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/fe8fb79345161037fe841734569a11cc9ed9999a", "committedDate": "2020-12-02T09:52:07Z", "message": "fix matrix label resolving"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxODg2MzM0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#pullrequestreview-541886334", "createdAt": "2020-12-01T13:21:17Z", "commit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMzoyMToxN1rOH8sPdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NTozOVrOH9S98Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMTQ2MQ==", "bodyText": "The return type should be boolean here.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533401461", "createdAt": "2020-12-01T13:21:17Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -355,18 +320,31 @@ void runMaven(boolean runtimeStash, boolean archivesStash, boolean qaStash, Stri\n   if (qaStash) unstash \"platform-stash-qa\"\n   String forkCount = singleThreaded? \"-DforkCount=1\" : '';\n   configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-    sh(\"cd ${directory} && mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B\")\n+    sh(\"mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B -f ${directory}/pom.xml\")\n   }\n }\n \n void withLabels(String... labels) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwMzY0OA==", "bodyText": "Same here, the return type should be boolean.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533403648", "createdAt": "2020-12-01T13:24:50Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -355,18 +320,31 @@ void runMaven(boolean runtimeStash, boolean archivesStash, boolean qaStash, Stri\n   if (qaStash) unstash \"platform-stash-qa\"\n   String forkCount = singleThreaded? \"-DforkCount=1\" : '';\n   configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n-    sh(\"cd ${directory} && mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B\")\n+    sh(\"mvn -s \\$MAVEN_SETTINGS_XML ${forkCount} ${cmd} -nsu -Dmaven.repo.local=\\${WORKSPACE}/.m2 -B -f ${directory}/pom.xml\")\n   }\n }\n \n void withLabels(String... labels) {\n-  for ( l in labels) {\n-    pullRequest.labels.contains(labelName)\n+  if (env.BRANCH == 'pipeline-master') {\n+    return true;\n+  } else if (!params.STANDALONE) {\n+    for (l in labels) {\n+      if (new JsonSlurper().parseText(params.PR_LABELS).contains(l)) {\n+        return true;\n+      }\n+    }\n+  } else {\n+    for (l in labels) {\n+      if (pullRequest.labels.contains(l)) {\n+        return true;  \n+      }\n+    }\n   }\n+  return false;\n }\n \n void withDbLabels(String dbLabel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDU1OA==", "bodyText": "Shouldn't this be an array?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n          \n          \n            \n                      labels: ['all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533404558", "createdAt": "2020-12-01T13:26:16Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 305}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNDc0Mw==", "bodyText": "Shouldn't this be an array?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n          \n          \n            \n                      labels: ['all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533404743", "createdAt": "2020-12-01T13:26:34Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 311}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTAxNw==", "bodyText": "Same as above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: ''],\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405017", "createdAt": "2020-12-01T13:27:04Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 317}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTA4NA==", "bodyText": "Same as above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: ''],\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405084", "createdAt": "2020-12-01T13:27:11Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'old-engine': [\n           directory: 'qa/',\n           command: 'verify -Pold-engine,',\n           qaStash: false],\n       'rolling-update': [\n           directory: 'qa/test-db-rolling-update/',\n           command: 'verify -Prolling-update,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 327}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNTE4MA==", "bodyText": "Same as above\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      labels: '']\n          \n          \n            \n                      labels: [] ],", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533405180", "createdAt": "2020-12-01T13:27:18Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -452,27 +430,32 @@ String resolveMavenProfileInfo(String profile) {\n       'check-sql': [\n           directory: 'distro/sql-script/',\n           command: 'install -Pcheck-sql,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n      'upgrade-db': [\n           directory: 'qa/test-db-upgrade/',\n           command: 'verify -Pupgrade-db,',\n-          qaStash: false],\n+          qaStash: false,\n+          labels: 'all-db','db2','mysql','oracle','mariadb','sqlserver','postgresql'],\n       'instance-migration': [\n           directory: 'qa/test-db-instance-migration/',\n           command: 'verify -Pinstance-migration,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'old-engine': [\n           directory: 'qa/',\n           command: 'verify -Pold-engine,',\n           qaStash: false],\n       'rolling-update': [\n           directory: 'qa/test-db-rolling-update/',\n           command: 'verify -Prolling-update,',\n-          qaStash: true],\n+          qaStash: true,\n+          labels: ''],\n       'large-data-tests': [\n           directory: 'qa/large-data-tests/',\n           command: 'verify -Plarge-data-tests,',\n-          qaStash: false]\n+          qaStash: false,\n+          labels: '']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 333}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjA1MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return withLabels('default-build')\n          \n          \n            \n                        withLabels('default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406050", "createdAt": "2020-12-01T13:28:38Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 240}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjYzOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels(getLabels(env.PROFILE))\n          \n          \n            \n                          withLabels(getLabels(env.PROFILE))", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406639", "createdAt": "2020-12-01T13:29:27Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -260,20 +232,18 @@ pipeline {\n             values 'check-sql', 'upgrade-db', 'instance-migration', 'old-engine', 'rolling-update', 'large-data-tests'\n           }\n         }\n-        agent {\n-          kubernetes {\n-            yaml getDbAgent(env.DB)\n-          }\n-        }\n         when {\n           anyOf {\n             branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels('all-db') || withDbLabel(env.DB)\n-//              }\n+            expression {\n+              return withLabels(getLabels(env.PROFILE))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjgwOA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406808", "createdAt": "2020-12-01T13:29:41Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -84,45 +88,35 @@ pipeline {\n     stage('H2 QA tests') {\n       parallel {\n         stage('sql-scripts-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNjkyOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533406929", "createdAt": "2020-12-01T13:29:51Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -84,45 +88,35 @@ pipeline {\n     stage('H2 QA tests') {\n       parallel {\n         stage('sql-scripts-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')\n+            }\n+            beforeAgent true\n+          }\n           agent {\n             kubernetes {\n               yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n             }\n           }\n-          when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('qa')\n-                }\n-              }\n-            }\n-          }\n           steps {\n             withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n               runMaven(true, false, false, 'distro/sql-script/', 'install -Pcheck-sql,h2')\n             }\n           }\n         }\n         stage('UPGRADE-databases-from-714-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzAzMA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('default-build', 'migration')\n          \n          \n            \n                          withLabels('default-build', 'migration')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407030", "createdAt": "2020-12-01T13:30:00Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -135,22 +129,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-instance-migration-h2') {\n+          when {\n+            expression {\n+              return withLabels('default-build', 'migration')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzIzNA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'all-db')\n          \n          \n            \n                          withLabels('h2', 'all-db')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407234", "createdAt": "2020-12-01T13:30:14Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -163,22 +152,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-old-engine-from-714-h2') {\n+          when {\n+            expression {\n+              return withLabels('h2', 'all-db')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwNzMzNA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rolling-update', 'default-build')\n          \n          \n            \n                          withLabels('rolling-update', 'default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533407334", "createdAt": "2020-12-01T13:30:25Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -191,22 +175,17 @@ pipeline {\n           }\n         }\n         stage('UPGRADE-rolling-update-h2') {\n+          when {\n+            expression {\n+              return withLabels('rolling-update', 'default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQwODk3Mw==", "bodyText": "We can put these labels into a list, but since it's not used anywhere else, this is okay.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533408973", "createdAt": "2020-12-01T13:32:54Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -76,36 +84,47 @@ pipeline {\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n-\n+        \n           stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n           stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n           stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+        \n         }\n-\n-        build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false),\n-            string(name: 'CE_BRANCH_NAME', value: \"${BRANCH_NAME}\")\n-        ], quietPeriod: 10, wait: false\n-        build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false)\n+        \n+        build job: \"cambpm-jenkins-pipelines-ee/${params.EE_BRANCH_NAME}\", parameters: [\n+                string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+                booleanParam(name: 'STANDALONE', value: false),\n+                string(name: 'CE_BRANCH_NAME', value: \"${env.BRANCH_NAME}\"),\n+                string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n         ], quietPeriod: 10, wait: false\n+\n+        script {\n+          if (withLabels('default-build','rolling-update','migration','all-db','h2','db2','mysql','oracle','mariadb','sqlserver','postgresql','cockroachdb')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxNDA3MQ==", "bodyText": "These changes should be reverted, since they remove the webapps-* and engine-unit-authorizations tests.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533414071", "createdAt": "2020-12-01T13:40:49Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,33 +336,23 @@ pipeline {\n             name 'DB'\n             values 'postgresql_96', 'mariadb_103'\n           }\n-          axis {\n-            name 'PROFILE'\n-            values 'engine-unit', 'engine-unit-authorizations', 'webapps-unit', 'webapps-unit-authorizations'\n-          }\n         }\n         when {\n-          anyOf {\n-            branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels(\"all-db\") || withDbLabel(env.DB)\n-//              }\n-            }\n+          expression {\n+            return withLabels(\"all-db\") || withDbLabel(env.DB)\n           }\n+          beforeAgent true\n         }\n         agent {\n           kubernetes {\n             yaml getDbAgent(env.DB)\n           }\n         }\n         stages {\n-          stage('UNIT test') {\n+          stage(\"engine-UNIT\") {\n             steps {\n-              echo(\"UNIT DB Test Stage: ${env.PROFILE}-${env.DB}\")\n               withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-                runMaven(true, false, false, getMavenProfileDir(env.PROFILE), getMavenProfileCmd(env.PROFILE) + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)\n+                runMaven(true, false, false, 'engine/', 'clean test -P' + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 299}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzQxNTE1OQ==", "bodyText": "I think we should define a global variable called DEFAULT_BRANCH and use this variable in the when block. It would be easier to update when we need to change it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533415159", "createdAt": "2020-12-01T13:42:28Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -272,15 +261,8 @@ pipeline {\n         }\n         stage('webapp-IT-standalone-wildfly') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('webapps', 'IT')\n-                }\n-              }\n-            }\n+            branch 'pipeline-master';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fe851c757c6c9d20d4f55959c5638b2ba5ef3cb"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5Nzk3MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2', 'rolling-update', 'migration')\n          \n          \n            \n                          withLabels('h2', 'rolling-update', 'migration')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533997970", "createdAt": "2020-12-02T09:00:32Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -76,36 +85,47 @@ pipeline {\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-engine-rest*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-example-invoice*.war', followSymlinks: false\n           archiveArtifacts artifacts: '.m2/org/camunda/**/*-SNAPSHOT/**/camunda-h2-webapp*.war', followSymlinks: false\n-\n+        \n           stash name: \"platform-stash-runtime\", includes: \".m2/org/camunda/**/*-SNAPSHOT/**\", excludes: \"**/qa/**,**/*qa*/**,**/*.zip,**/*.tar.gz\"\n           stash name: \"platform-stash-archives\", includes: \".m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.zip,.m2/org/camunda/bpm/**/*-SNAPSHOT/**/*.tar.gz\"\n           stash name: \"platform-stash-qa\", includes: \".m2/org/camunda/bpm/**/qa/**/*-SNAPSHOT/**,.m2/org/camunda/bpm/**/*qa*/**/*-SNAPSHOT/**\", excludes: \"**/*.zip,**/*.tar.gz\"\n+        \n         }\n-\n-        build job: \"cambpm-jenkins-pipelines-ee/${env.EE_BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false),\n-            string(name: 'CE_BRANCH_NAME', value: \"${BRANCH_NAME}\")\n-        ], quietPeriod: 10, wait: false\n-        build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n-            string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n-            booleanParam(name: 'STANDALONE', value: false)\n+        \n+        build job: \"cambpm-jenkins-pipelines-ee/${params.EE_BRANCH_NAME}\", parameters: [\n+                string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+                booleanParam(name: 'STANDALONE', value: false),\n+                string(name: 'CE_BRANCH_NAME', value: \"${env.BRANCH_NAME}\"),\n+                string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n         ], quietPeriod: 10, wait: false\n+\n+        script {\n+          if (withLabels('default-build','rolling-update','migration','all-db','h2','db2','mysql','oracle','mariadb','sqlserver','postgresql','cockroachdb')) {\n+           build job: \"cambpm-jenkins-pipelines-daily/${env.BRANCH_NAME}\", parameters: [\n+               string(name: 'copyArtifactSelector', value: '<TriggeredBuildSelector plugin=\"copyartifact@1.45.1\">  <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>  <allowUpstreamDependencies>false</allowUpstreamDependencies></TriggeredBuildSelector>'),\n+               booleanParam(name: 'STANDALONE', value: false),\n+               string(name: 'PR_LABELS', value: JsonOutput.toJson(pullRequest.labels))\n+           ], quietPeriod: 10, wait: false\n+          }\n+\n+          if (env.BRANCH_NAME == 'master') {\n+            withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n+              configFileProvider([configFile(fileId: 'maven-nexus-settings', variable: 'MAVEN_SETTINGS_XML')]) {\n+               sh 'mvn -s \\$MAVEN_SETTINGS_XML org.sonatype.plugins:nexus-staging-maven-plugin:deploy-staged -DaltStagingDirectory=${WORKSPACE}/staging -Dmaven.repo.local=${WORKSPACE}/.m2 -DskipStaging=true -B'\n+              }\n+            }\n+          }\n+        }\n       }\n     }\n     stage('h2 tests') {\n       parallel {\n         stage('engine-UNIT-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('h2')\n-                }\n-              }\n+            expression {\n+              return withLabels('h2', 'rolling-update', 'migration')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODE3MA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('h2')\n          \n          \n            \n                          withLabels('h2')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998170", "createdAt": "2020-12-02T09:00:51Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -120,15 +140,10 @@ pipeline {\n         }\n         stage('engine-UNIT-authorizations-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('h2')\n-                }\n-              }\n+            expression {\n+              return withLabels('h2')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODM2NA==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rest-api')\n          \n          \n            \n                          withLabels('rest-api')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998364", "createdAt": "2020-12-02T09:01:13Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -143,15 +158,10 @@ pipeline {\n         }\n         stage('engine-rest-UNIT-jersey-2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('rest')\n-                }\n-              }\n+            expression {\n+              return withLabels('rest-api')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODYyOQ==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('rest-api')\n          \n          \n            \n                          withLabels('rest-api')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998629", "createdAt": "2020-12-02T09:01:39Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -166,15 +176,10 @@ pipeline {\n         }\n         stage('engine-rest-UNIT-resteasy3') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('rest')\n-                }\n-              }\n+            expression {\n+              return withLabels('rest-api')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk5ODgwNg==", "bodyText": "I don't think the return statement is needed here, if you set the return type to boolean for the withLabels method.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          return withLabels('default-build')\n          \n          \n            \n                          withLabels('default-build')", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r533998806", "createdAt": "2020-12-02T09:01:54Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -189,15 +194,10 @@ pipeline {\n         }\n         stage('webapp-UNIT-h2') {\n           when {\n-            anyOf {\n-              branch 'pipeline-master';\n-              allOf {\n-                changeRequest();\n-                expression {\n-                  withLabels('webapps')\n-                }\n-              }\n+            expression {\n+              return withLabels('default-build')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc42cac202bb9d1735177d8e7c6aa4bc5cd4cc74"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNTk1Mw==", "bodyText": "Should we add the default-build label here? I think JDK jobs were included in it.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r534035953", "createdAt": "2020-12-02T09:55:39Z", "author": {"login": "koevskinikola"}, "path": ".ci/daily/Jenkinsfile", "diffHunk": "@@ -296,22 +266,17 @@ pipeline {\n             values 'openjdk-jdk-8-latest', 'openjdk-jdk-14-latest'\n           }\n         }\n+        when {\n+          expression {\n+            return withLabels('default-build')\n+          }\n+          beforeAgent true\n+        }\n         agent {\n           kubernetes {\n             yaml getAgent('gcr.io/ci-30-162810/centos:v0.4.6', 16)\n           }\n         }\n-        when {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a"}, "originalPosition": 250}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe8fb79345161037fe841734569a11cc9ed9999a", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/fe8fb79345161037fe841734569a11cc9ed9999a", "committedDate": "2020-12-02T09:52:07Z", "message": "fix matrix label resolving"}, "afterCommit": {"oid": "488c7eaaf1f7d61a711d3db89030e72cafd6cbae", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/488c7eaaf1f7d61a711d3db89030e72cafd6cbae", "committedDate": "2020-12-02T10:05:01Z", "message": "fix matrix label resolving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e17eda43218cdb9e219b5126beef06ba94cd5854", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/e17eda43218cdb9e219b5126beef06ba94cd5854", "committedDate": "2020-12-03T07:57:23Z", "message": "chore(pipelines): resolve pr labels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b662997bed66e09cd5353398628f77624fd7efe0", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b662997bed66e09cd5353398628f77624fd7efe0", "committedDate": "2020-12-03T07:57:23Z", "message": "fix matrix label resolving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80009bffa9821ec5ac859b10d91725fe382cb22f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/80009bffa9821ec5ac859b10d91725fe382cb22f", "committedDate": "2020-12-03T07:57:23Z", "message": "return boolean for withLabels"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d22647c53be2c09d80e0b56a407ea846c1335c4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/6d22647c53be2c09d80e0b56a407ea846c1335c4", "committedDate": "2020-12-03T07:57:23Z", "message": "defaultBranch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4851897f7aae44ad5f1d343bb9f5a93643897768", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4851897f7aae44ad5f1d343bb9f5a93643897768", "committedDate": "2020-12-02T15:20:57Z", "message": "test"}, "afterCommit": {"oid": "4604b8f1d70dee8bb22de384acbe92cc97d8ba0f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4604b8f1d70dee8bb22de384acbe92cc97d8ba0f", "committedDate": "2020-12-03T07:57:24Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4604b8f1d70dee8bb22de384acbe92cc97d8ba0f", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4604b8f1d70dee8bb22de384acbe92cc97d8ba0f", "committedDate": "2020-12-03T07:57:24Z", "message": "test"}, "afterCommit": {"oid": "4fe2d568ca14126a51e39e2778e83dd1f56093c7", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4fe2d568ca14126a51e39e2778e83dd1f56093c7", "committedDate": "2020-12-03T08:29:56Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fe2d568ca14126a51e39e2778e83dd1f56093c7", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/4fe2d568ca14126a51e39e2778e83dd1f56093c7", "committedDate": "2020-12-03T08:29:56Z", "message": "test"}, "afterCommit": {"oid": "ca955ccac6f4344ccd49473b6ae9adf8b89b8455", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ca955ccac6f4344ccd49473b6ae9adf8b89b8455", "committedDate": "2020-12-03T09:56:18Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4", "committedDate": "2020-12-03T10:50:40Z", "message": "test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca955ccac6f4344ccd49473b6ae9adf8b89b8455", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/ca955ccac6f4344ccd49473b6ae9adf8b89b8455", "committedDate": "2020-12-03T09:56:18Z", "message": "test"}, "afterCommit": {"oid": "b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4", "committedDate": "2020-12-03T10:50:40Z", "message": "test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODU5Njg0", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#pullrequestreview-543859684", "createdAt": "2020-12-03T11:29:11Z", "commit": {"oid": "b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyOToxMVrOH-V-3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMToyOToxMVrOH-V-3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTEzMzkxNg==", "bodyText": "These changes should be reverted, since they remove the webapps-* and engine-unit-authorizations tests.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#discussion_r535133916", "createdAt": "2020-12-03T11:29:11Z", "author": {"login": "koevskinikola"}, "path": "Jenkinsfile", "diffHunk": "@@ -364,33 +337,23 @@ pipeline {\n             name 'DB'\n             values 'postgresql_96', 'mariadb_103'\n           }\n-          axis {\n-            name 'PROFILE'\n-            values 'engine-unit', 'engine-unit-authorizations', 'webapps-unit', 'webapps-unit-authorizations'\n-          }\n         }\n         when {\n-          anyOf {\n-            branch 'pipeline-master';\n-            allOf {\n-              changeRequest();\n-//              expression {\n-//                withLabels(\"all-db\") || withDbLabel(env.DB)\n-//              }\n-            }\n+          expression {\n+            withLabels(\"all-db\") || withDbLabel(env.DB)\n           }\n+          beforeAgent true\n         }\n         agent {\n           kubernetes {\n             yaml getDbAgent(env.DB)\n           }\n         }\n         stages {\n-          stage('UNIT test') {\n+          stage(\"engine-UNIT\") {\n             steps {\n-              echo(\"UNIT DB Test Stage: ${env.PROFILE}-${env.DB}\")\n               withMaven(jdk: 'jdk-8-latest', maven: 'maven-3.2-latest', mavenSettingsConfig: 'camunda-maven-settings', options: [artifactsPublisher(disabled: true), junitPublisher(disabled: true)]) {\n-                runMaven(true, false, false, getMavenProfileDir(env.PROFILE), getMavenProfileCmd(env.PROFILE) + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)\n+                runMaven(true, false, false, 'engine/', 'clean test -P' + getDbProfiles(env.DB) + \" \" + getDbExtras(env.DB), true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5626c51f962bc0c1ee0f1c6eece7b457d8d76e4"}, "originalPosition": 305}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdacc33dcb1929d302f1c61f1172d793f5399133", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/cdacc33dcb1929d302f1c61f1172d793f5399133", "committedDate": "2020-12-03T12:36:27Z", "message": "revert engine-UNIT changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "287b58071d77f5e3569e8596ff701748ada6c63d", "author": {"user": {"login": "koevskinikola", "name": "Nikola Koevski"}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/287b58071d77f5e3569e8596ff701748ada6c63d", "committedDate": "2020-12-03T13:03:07Z", "message": "SQUASH ME: revert removed PROFILE axis in DB matrix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzOTMxNDIx", "url": "https://github.com/camunda/camunda-bpm-platform/pull/1149#pullrequestreview-543931421", "createdAt": "2020-12-03T13:04:42Z", "commit": {"oid": "287b58071d77f5e3569e8596ff701748ada6c63d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e6bd6b6a839d66c378e431364e7f5dc6ed9215", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c3e6bd6b6a839d66c378e431364e7f5dc6ed9215", "committedDate": "2020-12-03T14:20:49Z", "message": "fix when expression for `QA DB tests`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c52b72cdf220426a3c0b0d9f725dd3df25ee284", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/3c52b72cdf220426a3c0b0d9f725dd3df25ee284", "committedDate": "2020-12-03T13:51:32Z", "message": "fix when expression for `QA DB tests`"}, "afterCommit": {"oid": "c3e6bd6b6a839d66c378e431364e7f5dc6ed9215", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/c3e6bd6b6a839d66c378e431364e7f5dc6ed9215", "committedDate": "2020-12-03T14:20:49Z", "message": "fix when expression for `QA DB tests`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d2cebbf9710b4d5a1486f8c57325cfff47b7fc3", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/0d2cebbf9710b4d5a1486f8c57325cfff47b7fc3", "committedDate": "2020-12-03T15:18:59Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5555688275ef44914cd8e91308f925323007a288", "author": {"user": {"login": "yanavasileva", "name": null}}, "url": "https://github.com/camunda/camunda-bpm-platform/commit/5555688275ef44914cd8e91308f925323007a288", "committedDate": "2020-12-03T16:30:10Z", "message": "squash"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2067, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}