{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjA3ODA2", "number": 760, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MjozMVrODsngHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowOToxN1rODsn3AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTExMTMzOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MjozMVrOF9kIcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMDo1MjozMVrOF9kIcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDA5OTQ0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            should be deserialized on the server side (default `true`).\n          \n          \n            \n                            should be deserialized on the server side (default `true`).", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400099442", "createdAt": "2020-03-30T10:52:31Z", "author": {"login": "mboskamp"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "diffHunk": "@@ -0,0 +1,85 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariables\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves all variables of a given task by id.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variables from.\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValues\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752694d85e9092008d1cf2389eae7eb5b1bc580"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTE0NzcxOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowMjoyOVrOF9kefQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowMjoyOVrOF9kefQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNTA4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            should be deserialized on the server side (default `true`).\n          \n          \n            \n                            should be deserialized on the server side (default `true`).", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400105085", "createdAt": "2020-03-30T11:02:29Z", "author": {"login": "mboskamp"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/get.ftl", "diffHunk": "@@ -0,0 +1,93 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariable\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves a variable from the context of a given task by id.\" />\n+\n+  \"parameters\" : [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variable from.\"/>\n+\n+    <@lib.parameter\n+        name = \"varName\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The name of the variable to get\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValue\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752694d85e9092008d1cf2389eae7eb5b1bc580"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTE1NDcxOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowNDozNVrOF9ki4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowNDozNVrOF9ki4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwNjIxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this\n          \n          \n            \n                            **Note:** While `true` is the default value for reasons of backward compatibility, we recommend setting this", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400106210", "createdAt": "2020-03-30T11:04:35Z", "author": {"login": "mboskamp"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/get.ftl", "diffHunk": "@@ -0,0 +1,85 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"getTaskLocalVariables\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Retrieves all variables of a given task by id.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to retrieve the variables from.\"/>\n+\n+    <@lib.parameter\n+        name = \"deserializeValues\"\n+        location = \"query\"\n+        type = \"boolean\"\n+        defaultValue = \"true\"\n+        last = true\n+        desc = \"Determines whether serializable variable values (typically variables that store custom Java objects)\n+                should be deserialized on the server side (default `true`).\n+                If set to `true`, a serializable variable will be deserialized on server side and\n+                transformed to JSON using Jackson's POJO/bean property introspection feature.\n+                Note that this requires the Java classes of the variable value to be on the REST API's classpath.\n+\n+                If set to `false`, a serializable variable will be returned in its serialized format.\n+                For example, a variable that is serialized as XML will be returned as a JSON string containing XML.\n+\n+                Note: While `true` is the default value for reasons of backward compatibility, we recommend setting this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752694d85e9092008d1cf2389eae7eb5b1bc580"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTE2OTkzOnYy", "diffSide": "RIGHT", "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/put.ftl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMTowOToxN1rOF9ksgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODozNzozMFrOF-LGGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwODY3Mg==", "bodyText": "The second example is missing. I think we should include it or adjust the docs as both examples are pretty similar. I would choose example 2 over the one used here, because it shows more parameters.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400108672", "createdAt": "2020-03-30T11:09:17Z", "author": {"login": "mboskamp"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/put.ftl", "diffHunk": "@@ -0,0 +1,63 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"putTaskLocalVariable\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Sets a variable in the context of a given task.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to set the variable for.\" />\n+\n+    <@lib.parameter\n+        name = \"varName\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The name of the variable to set.\" />\n+\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"VariableValueDto\"\n+      examples = [ '\"example-1\": {\n+                       \"summary\": \"PUT /task/aTaskId/variables/aVarName\",\n+                       \"description\": \"Status 204. No content.\",\n+                       \"value\": {\n+                         \"value\": \"someValue\",\n+                         \"type\": \"String\"\n+                       }\n+                     }'\n+      ] />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8752694d85e9092008d1cf2389eae7eb5b1bc580"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczNzgxOA==", "bodyText": "I would add both since the first shows a primitive type variable, and the second, a more complex Object var. It's good to show the differences in the request.", "url": "https://github.com/camunda/camunda-bpm-platform/pull/760#discussion_r400737818", "createdAt": "2020-03-31T08:37:30Z", "author": {"login": "koevskinikola"}, "path": "engine-rest/engine-rest-openapi/src/main/templates/paths/task/{id}/localVariables/{varName}/put.ftl", "diffHunk": "@@ -0,0 +1,63 @@\n+{\n+\n+  <@lib.endpointInfo\n+      id = \"putTaskLocalVariable\"\n+      tag = \"Task Local Variable\"\n+      desc = \"Sets a variable in the context of a given task.\" />\n+\n+  \"parameters\": [\n+\n+    <@lib.parameter\n+        name = \"id\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        desc = \"The id of the task to set the variable for.\" />\n+\n+    <@lib.parameter\n+        name = \"varName\"\n+        location = \"path\"\n+        type = \"string\"\n+        required = true\n+        last = true\n+        desc = \"The name of the variable to set.\" />\n+\n+  ],\n+\n+  <@lib.requestBody\n+      mediaType = \"application/json\"\n+      dto = \"VariableValueDto\"\n+      examples = [ '\"example-1\": {\n+                       \"summary\": \"PUT /task/aTaskId/variables/aVarName\",\n+                       \"description\": \"Status 204. No content.\",\n+                       \"value\": {\n+                         \"value\": \"someValue\",\n+                         \"type\": \"String\"\n+                       }\n+                     }'\n+      ] />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDEwODY3Mg=="}, "originalCommit": {"oid": "8752694d85e9092008d1cf2389eae7eb5b1bc580"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4567, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}