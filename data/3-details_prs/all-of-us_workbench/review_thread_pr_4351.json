{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMDY3NjI5", "number": 4351, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDowMToyNVrOFAcNtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo1MDowOFrOFA6OBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDA2NTgwOnYy", "diffSide": "RIGHT", "path": "api/libproject/devstart.rb", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDowMToyNVrOH-vJlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDowMjo0NVrOH-vNIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NjI2Mw==", "bodyText": "Previously: opened a web browser requiring google login.  This was annoyingly disruptive when I had to run this more than once.", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535546263", "createdAt": "2020-12-03T20:01:25Z", "author": {"login": "jmthibault79"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",\n+    ->(opts, v) { opts.user = v},\n+    \"A Workbench user you control with DEVELOPER Authority in the environment\"\n+  )\n+  op.add_validator ->(opts) { raise ArgumentError unless opts.project and opts.user}\n   op.parse.validate\n \n   common = Common.new\n-  common.run_inline %W{gcloud auth login}\n+  common.run_inline %W{gcloud auth login #{op.opts.user}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NzE3MA==", "bodyText": "It will still do this if it's the first time this user has logged into gcloud on your machine.  The next time, it won't.", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535547170", "createdAt": "2020-12-03T20:02:45Z", "author": {"login": "jmthibault79"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",\n+    ->(opts, v) { opts.user = v},\n+    \"A Workbench user you control with DEVELOPER Authority in the environment\"\n+  )\n+  op.add_validator ->(opts) { raise ArgumentError unless opts.project and opts.user}\n   op.parse.validate\n \n   common = Common.new\n-  common.run_inline %W{gcloud auth login}\n+  common.run_inline %W{gcloud auth login #{op.opts.user}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU0NjI2Mw=="}, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDA5MTE0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDowODowMVrOH-vYlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMDowODowMVrOH-vYlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTU1MDEwMA==", "bodyText": "Step 45 of the New Application Environment creation doc is running the Create Auth Domain command.\nStep 46 involves determining the Auth Domain's Terra Group Email via a multi-step process.  Terra already returns this information to us during creation!  Let's return it to the script caller.", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r535550100", "createdAt": "2020-12-03T20:08:01Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "diffHunk": "@@ -36,9 +37,13 @@\n \n   @AuthorityRequired({Authority.DEVELOPER})\n   @Override\n-  public ResponseEntity<EmptyResponse> createAuthDomain(String groupName) {\n-    fireCloudService.createGroup(groupName);\n-    return ResponseEntity.ok(new EmptyResponse());\n+  public ResponseEntity<AuthDomainCreatedResponse> createAuthDomain(String authDomainName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDk0Mzk2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo0MDo0M1rOH_bH5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo0MDo0M1rOH_bH5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2NjcyNQ==", "bodyText": "optional nit: variable not really necessary, could inline below", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r536266725", "createdAt": "2020-12-04T17:40:43Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/api/AuthDomainController.java", "diffHunk": "@@ -36,9 +37,13 @@\n \n   @AuthorityRequired({Authority.DEVELOPER})\n   @Override\n-  public ResponseEntity<EmptyResponse> createAuthDomain(String groupName) {\n-    fireCloudService.createGroup(groupName);\n-    return ResponseEntity.ok(new EmptyResponse());\n+  public ResponseEntity<AuthDomainCreatedResponse> createAuthDomain(String authDomainName) {\n+    final FirecloudManagedGroupWithMembers group = fireCloudService.createGroup(authDomainName);\n+    final AuthDomainCreatedResponse response =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDk4MTgwOnYy", "diffSide": "RIGHT", "path": "api/libproject/devstart.rb", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo1MDowOFrOH_beDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTowMTo1MFrOIAq__g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MjM5Nw==", "bodyText": "nit: the other similar usage we have in project.rb calls this flag \"account\" \n  \n    \n      workbench/api/libproject/devstart.rb\n    \n    \n         Line 1398\n      in\n      ee18c9c\n    \n    \n    \n    \n\n        \n          \n           common.run_inline %W{gcloud auth login #{op.opts.account}}", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r536272397", "createdAt": "2020-12-04T17:50:08Z", "author": {"login": "calbach"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NTQyMg==", "bodyText": "In this case we actually do want a RW user, not a Service Account.", "url": "https://github.com/all-of-us/workbench/pull/4351#discussion_r537575422", "createdAt": "2020-12-07T15:01:50Z", "author": {"login": "jmthibault79"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1286,12 +1286,18 @@ def create_auth_domain(cmd_name, args)\n   op.add_option(\n     \"--project [project]\",\n     ->(opts, v) { opts.project = v},\n-    \"Project to create the authorization domain\"\n+    \"Workbench Project (environment) for creating the authorization domain\"\n   )\n+  op.add_option(\n+    \"--user [user]\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MjM5Nw=="}, "originalCommit": {"oid": "ee18c9c28ae92fb1e11a6d746731d4361cfe9b5c"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3610, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}