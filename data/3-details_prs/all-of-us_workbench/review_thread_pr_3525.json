{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjQ0Nzcw", "number": 3525, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMTowOVrOD4cotA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyMToyNlrOD4dczg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE2MDIwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMTowOVrOGPR5ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMTowOVrOGPR5ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NTA2Nw==", "bodyText": "I would really like to move listBillingAccounts() and these 2 dependencies to a new BillingAccountService, but I found that doing so obscured the intent of these changes.  I'll probably file a followup PR for that.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418675067", "createdAt": "2020-05-01T18:31:09Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "diffHunk": "@@ -60,11 +62,13 @@ public UserController(\n       Provider<WorkbenchConfig> configProvider,\n       FireCloudService fireCloudService,\n       UserService userService,\n-      @Qualifier(END_USER_CLOUD_BILLING) Provider<Cloudbilling> cloudBillingProvider) {\n+      @Qualifier(END_USER_CLOUD_BILLING) Provider<Cloudbilling> cloudBillingProvider,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7084d104449aaf1a16aea82933250604f91b64"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE2NDEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMjozNFrOGPR8Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozMjozNFrOGPR8Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NTcyMw==", "bodyText": "This logic is unchanged.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418675723", "createdAt": "2020-05-01T18:32:34Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "diffHunk": "@@ -157,24 +188,15 @@ private BillingAccount freeTierBillingAccount() {\n       throw new ServerErrorException(\"Could not retrieve billing accounts list from Google Cloud\");\n     }\n \n-    List<BillingAccount> billingAccounts =\n-        Stream.concat(\n-                Stream.of(freeTierBillingAccount()),\n-                Optional.ofNullable(response.getBillingAccounts()).orElse(Collections.emptyList())\n-                    .stream()\n-                    .map(\n-                        googleBillingAccount ->\n-                            new BillingAccount()\n-                                .isFreeTier(false)\n-                                .displayName(googleBillingAccount.getDisplayName())\n-                                .name(googleBillingAccount.getName())\n-                                .isOpen(\n-                                    Optional.ofNullable(googleBillingAccount.getOpen())\n-                                        .orElse(false))))\n-            .collect(Collectors.toList());\n-\n-    return ResponseEntity.ok(\n-        new WorkbenchListBillingAccountsResponse().billingAccounts(billingAccounts));\n+    return Optional.ofNullable(response.getBillingAccounts()).orElse(Collections.emptyList())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7084d104449aaf1a16aea82933250604f91b64"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE3MDYzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozNTowOFrOGPSAUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTowNDo0NVrOGPSz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NjgxOA==", "bodyText": "Yeah, yeah, I know.  However:\n\nthe logic is obtuse enough that we should be explicit here\nhalf of these will go away after enableBillingUpgrade is permanently set to true\n\nIf I follow up on the BillingAccountService idea, these would move to a new BillingAccountServiceTest", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418676818", "createdAt": "2020-05-01T18:35:08Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -252,93 +262,214 @@ public void testUserSort() {\n     assertThat(robinsonsAsc.getUsers()).containsAllIn(newAscending).inOrder();\n   }\n \n+  // Combinatorial tests for listBillingAccounts:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7084d104449aaf1a16aea82933250604f91b64"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5MDAxMw==", "bodyText": "Note: This is an ideal scenario for a @Parameterized test case. We don't have the pattern established in the codebase though and the first usage will probably be a substantial undertaking, so not for this PR.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418690013", "createdAt": "2020-05-01T19:04:45Z", "author": {"login": "calbach"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -252,93 +262,214 @@ public void testUserSort() {\n     assertThat(robinsonsAsc.getUsers()).containsAllIn(newAscending).inOrder();\n   }\n \n+  // Combinatorial tests for listBillingAccounts:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3NjgxOA=="}, "originalCommit": {"oid": "0a7084d104449aaf1a16aea82933250604f91b64"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTIxNDMxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MTowNVrOGPScJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MTowNVrOGPScJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4Mzk0MA==", "bodyText": "This logic is now handled on the backend", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418683940", "createdAt": "2020-05-01T18:51:05Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -294,14 +297,7 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n     }\n \n     async componentDidMount() {\n-      if (serverConfigStore.getValue().enableBillingUpgrade) {\n-        this.fetchBillingAccounts();\n-      } else {\n-        // This is a temporary hack to set the billing account name property to anything\n-        // so that it passes validation. The server ignores the value if the feature flag\n-        // is turned off so any value is fine.\n-        this.setState(fp.set(['workspace', 'billingAccountName'], 'free-tier'));\n-      }\n+      await this.fetchBillingAccounts();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTIxNjY5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MTo1NFrOGPSdmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MTo1NFrOGPSdmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NDMxNQ==", "bodyText": "The dropdown populated by these options was previously only shown for Billing Upgrade.  Now it's always shown, so we need to check here.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418684315", "createdAt": "2020-05-01T18:51:54Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -826,22 +822,25 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n     }\n \n     buildBillingAccountOptions() {\n+      const {enableBillingUpgrade} = serverConfigStore.getValue();\n       const options = this.state.billingAccounts.map(a => ({\n         label: a.displayName,\n         value: a.name,\n         disabled: !a.isOpen\n       }));\n-\n-      options.push({\n-        label: 'Create a new billing account',\n-        value: CREATE_BILLING_ACCOUNT_OPTION_VALUE,\n-        disabled: false\n-      });\n+      if (enableBillingUpgrade) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTIxNzU4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MjoxN1rOGPSeMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MjoxN1rOGPSeMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NDQ2NQ==", "bodyText": "This section is now always shown", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418684465", "createdAt": "2020-05-01T18:52:17Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -939,8 +938,7 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n             onChange={v => this.setState({cloneUserRole: v})}/>\n         </WorkspaceEditSection>\n         }\n-        {serverConfigStore.getValue().enableBillingUpgrade &&\n-          (!this.isMode(WorkspaceEditMode.Edit) || this.props.workspace.accessLevel === WorkspaceAccessLevel.OWNER) &&\n+        {(!this.isMode(WorkspaceEditMode.Edit) || this.props.workspace.accessLevel === WorkspaceAccessLevel.OWNER) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTIyMTA5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MzozOVrOGPSgZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1MzozOVrOGPSgZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NTAyOQ==", "bodyText": "The user can do nothing if Billing Upgrade is disabled and they have no free credits.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418685029", "createdAt": "2020-05-01T18:53:39Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -955,6 +953,7 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n               <Dropdown style={{width: '14rem'}}\n                         value={this.state.workspace.billingAccountName}\n                         options={this.buildBillingAccountOptions()}\n+                        disabled={freeTierCreditsBalance < 0.0 && !enableBillingUpgrade}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTIyMjY5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1NDoxMFrOGPShbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo1NDoxMFrOGPShbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY4NTI5NA==", "bodyText": "This is now clickable when credits have expired, as requested.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418685294", "createdAt": "2020-05-01T18:54:10Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -965,9 +964,9 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n                           }\n                         }}\n               />\n-              {freeTierCreditsBalance > 0.0 && <div style={styles.freeCreditsBalanceClickable}>\n+              <div style={styles.freeCreditsBalanceClickable}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI3ODEzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxNToxNFrOGPTEhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxNToxNFrOGPTEhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NDI3Nw==", "bodyText": "nit: I'd probably go for ImmutableList.copyOf(Iterables.concat(...)) since there's precedence: https://github.com/all-of-us/workbench/search?q=iterables.concat&unscoped_q=iterables.concat\nor new ARrayList(freeTier).addAll(cloudBillingAccounts)\nWe don't currently use collections4 anywhere else (were collections1-3 already taken?)", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418694277", "createdAt": "2020-05-01T19:15:14Z", "author": {"login": "calbach"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -252,91 +262,212 @@ public void testUserSort() {\n     assertThat(robinsonsAsc.getUsers()).containsAllIn(newAscending).inOrder();\n   }\n \n+  // Combinatorial tests for listBillingAccounts:\n+  // enableBillingUpgrade feature flag on/off\n+  // free tier available vs. expired\n+  // cloud accounts available vs. none\n+\n+  final BillingAccount freeTierBillingAccount =\n+      new BillingAccount()\n+          .isFreeTier(true)\n+          .displayName(\"Use All of Us free credits\")\n+          .name(\"billingAccounts/free-tier\")\n+          .isOpen(true);\n+\n+  final List<com.google.api.services.cloudbilling.model.BillingAccount> cloudbillingAccounts =\n+      Lists.newArrayList(\n+          new com.google.api.services.cloudbilling.model.BillingAccount()\n+              .setName(\"googlebucks\")\n+              .setDisplayName(\"Paid using your credit card\"),\n+          new com.google.api.services.cloudbilling.model.BillingAccount()\n+              .setName(\"a2\")\n+              .setDisplayName(\"Account 2 - Open\")\n+              .setOpen(true));\n+\n+  final List<BillingAccount> cloudbillingAccountsInWorkbench =\n+      Lists.newArrayList(\n+          new BillingAccount()\n+              .name(\"googlebucks\")\n+              .displayName(\"Paid using your credit card\")\n+              .isFreeTier(false)\n+              .isOpen(false),\n+          new BillingAccount()\n+              .name(\"a2\")\n+              .displayName(\"Account 2 - Open\")\n+              .isFreeTier(false)\n+              .isOpen(true));\n+\n+  // billing upgrade is true, free tier is available, cloud accounts exist\n+\n   @Test\n-  public void listBillingAccounts() throws IOException {\n+  public void listBillingAccounts_upgradeYES_freeYES_cloudYES() throws IOException {\n     config.billing = new BillingConfig();\n     config.billing.accountId = \"free-tier\";\n     config.featureFlags.enableBillingUpgrade = true;\n \n-    final com.google.api.services.cloudbilling.model.BillingAccount cloudbillingAccount1 =\n-        new com.google.api.services.cloudbilling.model.BillingAccount()\n-            .setName(\"googlebucks\")\n-            .setDisplayName(\"Paid using your credit card\");\n+    when(testFreeTierBillingService.userHasRemainingFreeTierCredits(any())).thenReturn(true);\n \n-    final com.google.api.services.cloudbilling.model.BillingAccount cloudbillingAccount2 =\n-        new com.google.api.services.cloudbilling.model.BillingAccount()\n-            .setName(\"a2\")\n-            .setDisplayName(\"Account 2 - Open\")\n-            .setOpen(true);\n+    when(testCloudbilling.billingAccounts().list().execute())\n+        .thenReturn(new ListBillingAccountsResponse().setBillingAccounts(cloudbillingAccounts));\n \n-    final List<com.google.api.services.cloudbilling.model.BillingAccount> cloudbillingAccounts =\n-        Lists.newArrayList(cloudbillingAccount1, cloudbillingAccount2);\n+    final List<BillingAccount> expectedWorkbenchBillingAccounts =\n+        ListUtils.union(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI4NTE3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxODowNlrOGPTI-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDoyODo1N1rOGPU4aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NTQxNg==", "bodyText": "nit: existing pattern in this file would be to add this in @MockBean, then @autowire it in below. Ideally this is named mockFreeTierBillingService.\nALl good candidates for a style document. Happy to write this one", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418695416", "createdAt": "2020-05-01T19:18:06Z", "author": {"login": "calbach"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -64,6 +67,8 @@\n   private static long incrementedUserId = 1;\n   private static final Cloudbilling testCloudbilling = TestMockFactory.createMockedCloudbilling();\n \n+  @Mock private static FreeTierBillingService testFreeTierBillingService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcyMzk0NA==", "bodyText": "Thanks - I would appreciate that.  I get lost in the many ways we can mock things.", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418723944", "createdAt": "2020-05-01T20:28:57Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -64,6 +67,8 @@\n   private static long incrementedUserId = 1;\n   private static final Cloudbilling testCloudbilling = TestMockFactory.createMockedCloudbilling();\n \n+  @Mock private static FreeTierBillingService testFreeTierBillingService;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NTQxNg=="}, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI4NzAxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxODo1MlrOGPTKHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToxODo1MlrOGPTKHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5NTcxMQ==", "bodyText": "nit: should these not be static?", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418695711", "createdAt": "2020-05-01T19:18:52Z", "author": {"login": "calbach"}, "path": "api/src/test/java/org/pmiops/workbench/api/UserControllerTest.java", "diffHunk": "@@ -252,91 +262,212 @@ public void testUserSort() {\n     assertThat(robinsonsAsc.getUsers()).containsAllIn(newAscending).inOrder();\n   }\n \n+  // Combinatorial tests for listBillingAccounts:\n+  // enableBillingUpgrade feature flag on/off\n+  // free tier available vs. expired\n+  // cloud accounts available vs. none\n+\n+  final BillingAccount freeTierBillingAccount =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTI5MzU4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyMToyNlrOGPTOPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOToyMToyNlrOGPTOPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY5Njc2Ng==", "bodyText": "Note: This is for another day, but there's an argument to always return it, but just have the option be disabled in the dropdown if credits are expired. Driving business logic here based on the caller's free credits is dubious per prior discussions (even if we're disallowing certain interactions client-side or with validation in other methods).", "url": "https://github.com/all-of-us/workbench/pull/3525#discussion_r418696766", "createdAt": "2020-05-01T19:21:26Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "diffHunk": "@@ -135,19 +139,46 @@ public UserController(\n     return ResponseEntity.ok(response);\n   }\n \n-  private BillingAccount freeTierBillingAccount() {\n-    return new BillingAccount()\n-        .isFreeTier(true)\n-        .displayName(\"Use All of Us free credits\")\n-        .name(configProvider.get().billing.freeTierBillingAccountName())\n-        .isOpen(true);\n-  }\n-\n   @Override\n   public ResponseEntity<WorkbenchListBillingAccountsResponse> listBillingAccounts() {\n-    // this check should be redundant: the UI only calls this endpoint when the flag is active\n+    List<BillingAccount> billingAccounts =\n+        Stream.concat(maybeFreeTierBillingAccount(), maybeCloudBillingAccounts())\n+            .collect(Collectors.toList());\n+\n+    return ResponseEntity.ok(\n+        new WorkbenchListBillingAccountsResponse().billingAccounts(billingAccounts));\n+  }\n+\n+  /**\n+   * The logic here is a little weird. See RW-4857.\n+   *\n+   * <p>When Billing Upgrade is true: return the Free Tier account only when the user has remaining", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a5d1f851925539b27c24a194b4115b6d73a8e1"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2853, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}