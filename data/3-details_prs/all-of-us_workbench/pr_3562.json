{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTAwODc4", "number": 3562, "title": "[RW-4904][risk=no] cron job schedule updates", "bodyText": "Based on conversation on the spreadsheet I've made a few schedule adjustments. I've also tried to elaborate on the descriptions where I felt those weren't obvious at a glance.\nI'll have to check on Monday if there's a good way to test this locally. I suspect I'll need to deploy to test and keep an eye on it.\nTIL\n\nthe AppEngine section in the Cloud Console has a nifty page describing the cron jobs, which displays the description from the cron.\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-05-09T02:28:59Z", "url": "https://github.com/all-of-us/workbench/pull/3562", "merged": true, "mergeCommit": {"oid": "5c364ce3398c413bcc5641fdb057666ef5a157d6"}, "closed": true, "closedAt": "2020-05-18T19:30:05Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfdAtCgH2gAyNDE1NTAwODc4OjBlM2IxOWJkODk3NTJjNGJhMDA3ZWM2NDJhZWFlMmVkOGYyZGFkMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg5pxAAH2gAyNDE1NTAwODc4OjY3ZjNkMTE2ZGFlNzIxZmVkMjNkMzc3NjA3Nzk3NDc1YmE2OWYzZjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/0e3b19bd89752c4ba007ec642aeae2ed8f2dad15", "committedDate": "2020-05-09T02:25:45Z", "message": "cron schedule and description updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NTg1NTE4", "url": "https://github.com/all-of-us/workbench/pull/3562#pullrequestreview-409585518", "createdAt": "2020-05-11T22:52:04Z", "commit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjo1MjowNFrOGTwHoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowNzoyMFrOGTwboQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2NDUxMw==", "bodyText": "Please switch these comments to be third person", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423364513", "createdAt": "2020-05-11T22:52:04Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2NDU0MA==", "bodyText": "spelling", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423364540", "createdAt": "2020-05-11T22:52:10Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ==", "bodyText": "My commentary here is way too ambiguous to be checked in. @gjuggler may be able to provide a better description. But before I wrote this I'd need to refresh on exactly what the intended behavior is. In particular, I believe the current registration system as designed, only cares that a linkage was established at one point, for verification - this is purely a stand-in for ID verification. If so, this background sync would actually behave incorrectly if a user unlinked their account, or let their linkage expire.\nHowever, for controlled tier, there might be new policies which require an active eRA commons linkage, in case this stricter behavior would be required, including a linkage refresh.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423368235", "createdAt": "2020-05-11T23:03:20Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2OTA1MA==", "bodyText": "nit: would probably say \"database cache\" to avoid ambiguity here. If I read this as-is I would probably assume this meant memcache or other ephemeral storage.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423369050", "createdAt": "2020-05-11T23:05:40Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even\n+    know whether it's possible to \"unlink\", and if a user did this, whether that even matters for\n+    our registration policy. Certainly it's good to check, but none of this is time sensitive.\n+    The current 24h interval is fine.\n   url: /v1/cron/bulkSyncEraCommonsStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of 2FA set up status (via Google Directory Service)'\n+- description: >\n+    Update our cache of users' two-factor authentication settings on their GSuite accounts via", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2OTYzMw==", "bodyText": "That would have been true when this API was created. However, this API now exists and we have a ticket to eliminate this cron and move to the new method: https://precisionmedicineinitiative.atlassian.net/browse/RW-3627. I would update this to reflect that and probably link the ticket here", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423369633", "createdAt": "2020-05-11T23:07:20Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -41,24 +61,31 @@ cron:\n   target: api\n - description: 'Find and alert users that have exceeded their free tier billing usage'\n   url: /v1/cron/checkFreeTierBillingUsage\n-  schedule: every 3 hours\n+  schedule: every 30 minutes\n   timezone: UTC\n   target: api\n-- description: 'Find billing projects associated with deleted workspaces and transfer ownership to Garbage Collection Service Accounts'\n+- description: >\n+    Find billing projects associated with deleted workspaces and transfer ownership to\n+    designated \"Garbage Collection\" Service Accounts. This process works around the lack of API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjI0ODc4", "url": "https://github.com/all-of-us/workbench/pull/3562#pullrequestreview-409624878", "createdAt": "2020-05-12T00:42:44Z", "commit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo0Mjo0NFrOGTyNnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo0Njo1OVrOGTyR6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5ODgxMg==", "bodyText": "[opt / nit] This description will probably be overwhelming when shown in the App Engine cron UI. Most examples in Google's documentation are pretty short, and I assume the table UI isn't well-optimized for paragraph-length description strings.\nThis content is helpful context though\u2014it could just as easily go in the method comments on bulkSyncComplianceTrainingStatus. In fact, having this level of detail closer to the code may be a better place, since that's where someone who is maintaining or updating the business logic will end up first.\n(This conciseness consideration applies equally to all descriptions, but this one is the only multi-paragraph one where I'd be concerned.)", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423398812", "createdAt": "2020-05-12T00:42:44Z", "author": {"login": "gjuggler"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5OTkxMg==", "bodyText": "See the original Access Modules design \u2013\u00a0as phrased in the main table, \"The initial public launch of the Workbench will require researchers to maintain an actively-linked eRA Commons account. This linkage is mediated via FireCloud and its Shibboleth service.\"\nI don't think there was ever a really strong product definition of this requirement \u2014\u00a0e.g., I don't think this distinction is really apparent or critical to stakeholders' understanding of onboarding requirements. But it would be a change to say we don't want to reflect potential changes in Terra's linkage state.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423399912", "createdAt": "2020-05-12T00:46:59Z", "author": {"login": "gjuggler"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f25a8bf0afdfc38890678fd8a38d0e2be36244e0", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/f25a8bf0afdfc38890678fd8a38d0e2be36244e0", "committedDate": "2020-05-13T14:05:52Z", "message": "Merge branch 'master' into jaycarlton/RW-4904"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67f3d116dae721fed23d377607797475ba69f3f7", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/67f3d116dae721fed23d377607797475ba69f3f7", "committedDate": "2020-05-13T14:21:52Z", "message": "update descriptions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}