{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNDE3MTc1", "number": 3091, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyMzoyMFrODdXxwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoyMjo0NFrODdZRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI0ODY2OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/rdr.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyMzoyMFrOFl70Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyMzoyMFrOFl70Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMTYwNw==", "bodyText": "Yeah, I like this better. It'll be cleaner definitely.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375321607", "createdAt": "2020-02-05T15:23:20Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/resources/rdr.yaml", "diffHunk": "@@ -234,12 +234,11 @@ definitions:\n   Gender:\n     type: string\n     enum:\n-      - MALE\n-      - FEMALE\n+      - MAN\n+      - WOMAN\n       - NON_BINARY\n       - TRANSGENDER\n-      - INTERSEX\n-      - NONE\n+      - NONE_DESCRIBE_ME", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a572bd9cffb17c8decb73930c61c095f502f5e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTI2MjUyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNToyNjoxNlrOFl78gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjowNTozM1rOFl9jEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMzc3OA==", "bodyText": "nit: It takes a bit of getting used to, but I think it's cleaner to do\nOptional.ofNullable(dbDemographicSurvey.getGenderIdentityEnumList())\n    .map(g -> g.stream().map(RdrExportEnums::genderToRdrGender).collect(Collectors.toList()))\n    .ifPresent(researcher::setGender);\n\nif, null, and != should generally be minimized IMO.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375323778", "createdAt": "2020-02-05T15:26:16Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -200,6 +200,12 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                 .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n                 .collect(Collectors.toList()));\n       }\n+      if (null != dbDemographicSurvey.getGenderIdentityEnumList()) {\n+        researcher.setGender(\n+            dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                .map(RdrExportEnums::genderToRdrGender)\n+                .collect(Collectors.toList()));\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a572bd9cffb17c8decb73930c61c095f502f5e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDAzMw==", "bodyText": "@jaycarlton : Do you mind taking another look?", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375350033", "createdAt": "2020-02-05T16:05:33Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -200,6 +200,12 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                 .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n                 .collect(Collectors.toList()));\n       }\n+      if (null != dbDemographicSurvey.getGenderIdentityEnumList()) {\n+        researcher.setGender(\n+            dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                .map(RdrExportEnums::genderToRdrGender)\n+                .collect(Collectors.toList()));\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTMyMzc3OA=="}, "originalCommit": {"oid": "e3a572bd9cffb17c8decb73930c61c095f502f5e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTQzMTcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/rdr.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjowNjo1N1rOFl9mcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjo1Mzo1NlrOFl_Y7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDg5OQ==", "bodyText": "There is a bug in Swagger that converts ENUM YES and NO to true and false unless its Explicitly used as string \"YES\"", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375350899", "createdAt": "2020-02-05T16:06:57Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/resources/rdr.yaml", "diffHunk": "@@ -281,10 +279,10 @@ definitions:\n       - UNDERGRADUATE\n       - MASTER\n       - DOCTORATE\n-      -\n+\n   Disability:\n     type: string\n     enum:\n-      - YES\n-      - NO\n+      - \"YES\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1ODA2OQ==", "bodyText": "\ud83d\ude20\nCan you please double-check that when this goes through our script to create merged.yaml that the quotes are still present? I'm worried they won't be.\nIn fact, I'm confused Swagger can distinguish the difference; by the time the YAML is loaded all bets are off w/r/t quotes.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375358069", "createdAt": "2020-02-05T16:18:12Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/resources/rdr.yaml", "diffHunk": "@@ -281,10 +279,10 @@ definitions:\n       - UNDERGRADUATE\n       - MASTER\n       - DOCTORATE\n-      -\n+\n   Disability:\n     type: string\n     enum:\n-      - YES\n-      - NO\n+      - \"YES\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDg5OQ=="}, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM4MDIwNw==", "bodyText": "Since this is in RDR.yaml, merged.yaml doesnt have these changes", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375380207", "createdAt": "2020-02-05T16:53:56Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/resources/rdr.yaml", "diffHunk": "@@ -281,10 +279,10 @@ definitions:\n       - UNDERGRADUATE\n       - MASTER\n       - DOCTORATE\n-      -\n+\n   Disability:\n     type: string\n     enum:\n-      - YES\n-      - NO\n+      - \"YES\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1MDg5OQ=="}, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTQ2MTEyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportEnums.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoxNDoyMVrOFl95GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoxNjozNlrOFl9-lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NTY3Mg==", "bodyText": "This confuses me. Either we have a boolean, in which case we don't need an enum, or we have an enum that describes  the situation like Disability.NOT_DISABLED, Disability.SOME, etc. But if you want to start an enum, it's hard to imagine what you'd add to yes and no.\nEnums are definitely preferred over booleans for public APIs, but if the enum itself has true & false in it, I don't know that you're winning as much.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375355672", "createdAt": "2020-02-05T16:14:21Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportEnums.java", "diffHunk": "@@ -70,8 +72,8 @@\n   private static final BiMap<Disability, org.pmiops.workbench.rdr.model.Disability>\n       CLIENT_TO_RDR_DISABILITY =\n           ImmutableBiMap.<Disability, org.pmiops.workbench.rdr.model.Disability>builder()\n-              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.TRUE)\n-              .put(Disability.FALSE, org.pmiops.workbench.rdr.model.Disability.FALSE)\n+              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.YES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzA3OA==", "bodyText": "RDR basically have three options not just TRUE and FALSE for DISABILITY: YES, NO ,PREFER_NOT_TO_ANSWER (L110)", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375357078", "createdAt": "2020-02-05T16:16:36Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportEnums.java", "diffHunk": "@@ -70,8 +72,8 @@\n   private static final BiMap<Disability, org.pmiops.workbench.rdr.model.Disability>\n       CLIENT_TO_RDR_DISABILITY =\n           ImmutableBiMap.<Disability, org.pmiops.workbench.rdr.model.Disability>builder()\n-              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.TRUE)\n-              .put(Disability.FALSE, org.pmiops.workbench.rdr.model.Disability.FALSE)\n+              .put(Disability.TRUE, org.pmiops.workbench.rdr.model.Disability.YES)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NTY3Mg=="}, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTQ3MjczOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoxNzoxMVrOFl-ANg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjo1MjozNlrOFl_V7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzQ5NA==", "bodyText": "Do you want the race field to be written to, or should the set of entries be fixed?\nClients might do researcher.getRace().add(Race.DAYTONA_500);, which works, but is counterintuitive.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375357494", "createdAt": "2020-02-05T16:17:11Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -194,26 +195,31 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));\n+      researcher.setGender(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                      .map(RdrExportEnums::genderToRdrGender)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Gender>()));\n       researcher.setDisability(\n           RdrExportEnums.disabilityToRdrDisability(dbDemographicSurvey.getDisabilityEnum()));\n-    }\n \n-    if (null != dbDemographicSurvey && dbDemographicSurvey.getRaceEnum() != null) {\n       researcher.setRace(\n-          dbDemographicSurvey.getRaceEnum().stream()\n-              .map(RdrExportEnums::raceToRdrRace)\n-              .collect(Collectors.toList()));\n-    } else {\n-      researcher.setRace(new ArrayList<>());\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getRaceEnum().stream()\n+                      .map(RdrExportEnums::raceToRdrRace)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Race>()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM3OTQzNg==", "bodyText": "no RDR needs to simple take whatever value we give to them and not manipulate them", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375379436", "createdAt": "2020-02-05T16:52:36Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -194,26 +195,31 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));\n+      researcher.setGender(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getGenderIdentityEnumList().stream()\n+                      .map(RdrExportEnums::genderToRdrGender)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Gender>()));\n       researcher.setDisability(\n           RdrExportEnums.disabilityToRdrDisability(dbDemographicSurvey.getDisabilityEnum()));\n-    }\n \n-    if (null != dbDemographicSurvey && dbDemographicSurvey.getRaceEnum() != null) {\n       researcher.setRace(\n-          dbDemographicSurvey.getRaceEnum().stream()\n-              .map(RdrExportEnums::raceToRdrRace)\n-              .collect(Collectors.toList()));\n-    } else {\n-      researcher.setRace(new ArrayList<>());\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getRaceEnum().stream()\n+                      .map(RdrExportEnums::raceToRdrRace)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<Race>()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM1NzQ5NA=="}, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMTQ5MzM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoyMjo0NFrOFl-Nvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNjoyMjo0NFrOFl-Nvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM2MDk1OA==", "bodyText": "Looks good. Passing in .ifPresent(researcher::setSexAtBirth) is more a matter of taste.", "url": "https://github.com/all-of-us/workbench/pull/3091#discussion_r375360958", "createdAt": "2020-02-05T16:22:44Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -194,26 +195,31 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n                     RdrExportEnums.ethnicityToRdrEthnicity(\n                         dbDemographicSurvey.getEthnicityEnum()))));\n       }\n-      if (dbDemographicSurvey.getSexAtBirthEnum() != null) {\n-        researcher.setSexAtBirth(\n-            dbDemographicSurvey.getSexAtBirthEnum().stream()\n-                .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n-                .collect(Collectors.toList()));\n-      }\n+      researcher.setSexAtBirth(\n+          Optional.ofNullable(\n+                  dbDemographicSurvey.getSexAtBirthEnum().stream()\n+                      .map(RdrExportEnums::sexAtBirthToRdrSexAtBirth)\n+                      .collect(Collectors.toList()))\n+              .orElse(new ArrayList<SexAtBirth>()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36490a2a186097f5df26c7f4b42c76932df1e086"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3274, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}