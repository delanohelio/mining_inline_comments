{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDQ2MDgx", "number": 3076, "title": "[No ticket][RISK=NO]Account creation - Add gender Identity to demographic survey", "bodyText": "This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n[ X] I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-02-03T17:57:51Z", "url": "https://github.com/all-of-us/workbench/pull/3076", "merged": true, "mergeCommit": {"oid": "ae2bb4ae93fd8eac69b3926354eef5d7bf1306d0"}, "closed": true, "closedAt": "2020-02-04T18:09:16Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAwvVxAH2gAyMzcwNDQ2MDgxOjlmODNlNGIwOGRhZTZhZmY3OWY2YTE5NTk2MzVkZGI3NjcxNGE3YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBFZCogH2gAyMzcwNDQ2MDgxOjI5ZGNhMDc5ZTBkMDU3YmEwOGE1ZWUzNzdiYzUzYmZhNGZiNGIyMjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f83e4b08dae6aff79f6a1959635ddb76714a7be", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9f83e4b08dae6aff79f6a1959635ddb76714a7be", "committedDate": "2020-02-03T17:53:14Z", "message": "Add gender Identity to demographic survey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21bf85417fe689ec06b0f5bf615eb1772932fca2", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/21bf85417fe689ec06b0f5bf615eb1772932fca2", "committedDate": "2020-02-03T17:59:15Z", "message": "Fix lint error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56daf588cef7880a9839b5eeef998df3e160221", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/b56daf588cef7880a9839b5eeef998df3e160221", "committedDate": "2020-02-03T18:22:22Z", "message": "Update enum values to match UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81d9600bdf642541b23902bd95ebb3d87c624c31", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/81d9600bdf642541b23902bd95ebb3d87c624c31", "committedDate": "2020-02-03T18:24:36Z", "message": "UI change enum to match UI field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/388d1231d1fdd5ef6447221acee2acd534103be2", "committedDate": "2020-02-03T18:55:42Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTAwMDAw", "url": "https://github.com/all-of-us/workbench/pull/3076#pullrequestreview-352500000", "createdAt": "2020-02-03T19:22:22Z", "commit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyMjoyMlrOFk89pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOTozODo1OVrOFk9dWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MTg3OA==", "bodyText": "For safety, could we run this Liquibase changeset first and then merge the code changes?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374291878", "createdAt": "2020-02-03T19:22:22Z", "author": {"login": "jaycarlton"}, "path": "api/db/changelog/db.changelog-124-add-demographic-gender-identity.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MjM4Ng==", "bodyText": "In the UI it looked like Gender was a checkbox. Should it be a radio button if they're mutually exclusive?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374292386", "createdAt": "2020-02-03T19:23:22Z", "author": {"login": "jaycarlton"}, "path": "api/db/changelog/db.changelog-124-add-demographic-gender-identity.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"nsaxena\" id=\"changelog-124-add-demographic-gender-identity\">\n+    <createTable tableName=\"demographic_survey_gender\">\n+  \t  <column name=\"demographic_survey_id\" type=\"bigint\">\n+  \t \t\t <constraints nullable=\"false\"/>\n+  \t  </column>\n+  \t  <column name=\"gender\" type=\"tinyint\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MzMwOA==", "bodyText": "Please don't return a null list if you can avoid it. Can you use Collections.emptyList()?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293308", "createdAt": "2020-02-03T19:25:19Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5Mzc4MA==", "bodyText": "Maybe getGenderEnumList() would be clearer.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374293780", "createdAt": "2020-02-03T19:26:12Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDI1MQ==", "bodyText": "Should we be using List, or would Set be better? I.e. does order matter? I don't think we want duplicate entries.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294251", "createdAt": "2020-02-03T19:27:10Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +176,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender\")\n+  public List<Short> getGender() {\n+    return gender;\n+  }\n+\n+  public void setGender(List<Short> gender) {\n+    this.gender = gender;\n+  }\n+\n+  @Transient\n+  public List<Gender> getGenderEnum() {\n+    if (gender == null) return null;\n+    return this.gender.stream()\n+        .map(DemographicSurveyEnum::genderFromStorage)\n+        .collect(Collectors.toList());\n+  }\n+\n+  public void setGenderEnum(List<Gender> genderlist) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NDgxMg==", "bodyText": "Should we burn the old 1 & 2 values and make new ones for MAN and WOMAN? Or are they really exact replacements?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374294812", "createdAt": "2020-02-03T19:28:16Z", "author": {"login": "jaycarlton"}, "path": "common-api/src/main/java/org/pmiops/workbench/db/model/DemographicSurveyEnum.java", "diffHunk": "@@ -54,8 +54,8 @@\n \n   private static final BiMap<Gender, Short> CLIENT_TO_STORAGE_GENDER =\n       ImmutableBiMap.<Gender, Short>builder()\n-          .put(Gender.MALE, (short) 1)\n-          .put(Gender.FEMALE, (short) 2)\n+          .put(Gender.MAN, (short) 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTM0Ng==", "bodyText": "If we receive PREFER_NO_ANSWER, should we disallow any other choices in the list?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374295346", "createdAt": "2020-02-03T19:29:19Z", "author": {"login": "jaycarlton"}, "path": "common-api/src/main/resources/common_api.yaml", "diffHunk": "@@ -77,7 +77,7 @@ definitions:\n \n   Gender:\n     type: string\n-    enum: &Gender [MALE, FEMALE, NON_BINARY, TRANSGENDER, INTERSEX, NONE, PREFER_NO_ANSWER]\n+    enum: &Gender [MAN, WOMAN, NON_BINARY, TRANSGENDER, INTERSEX, NONE, PREFER_NO_ANSWER]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTkwNg==", "bodyText": "I wouldn't name this option NONE, because when I read it I assumed it meant \"I have no gender (agender)\". Which isn't 100% the same as this statement I don't think.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374295906", "createdAt": "2020-02-03T19:30:30Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -75,6 +76,14 @@ export const AccountCreationOptions = {\n     {label: `Not Hispanic or Latino`, value: Ethnicity.NOTHISPANIC},\n     {label: ` Prefer not to answer`, value: Ethnicity.PREFERNOANSWER}\n   ],\n+  gender: [\n+    {label: 'Man', value: Gender.MAN},\n+    {label: 'Non-Binary', value: Gender.NONBINARY},\n+    {label: 'Transgender', value: Gender.TRANSGENDER},\n+    {label: 'Woman', value: Gender.WOMAN},\n+    {label: 'None of these describe me', value: Gender.NONE},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NjQwNw==", "bodyText": "nit: this value should be moved to a higher level since it can be used for non-gender-related things. Also I'd use UPPER_SNAKE_CASE.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374296407", "createdAt": "2020-02-03T19:31:33Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -75,6 +76,14 @@ export const AccountCreationOptions = {\n     {label: `Not Hispanic or Latino`, value: Ethnicity.NOTHISPANIC},\n     {label: ` Prefer not to answer`, value: Ethnicity.PREFERNOANSWER}\n   ],\n+  gender: [\n+    {label: 'Man', value: Gender.MAN},\n+    {label: 'Non-Binary', value: Gender.NONBINARY},\n+    {label: 'Transgender', value: Gender.TRANSGENDER},\n+    {label: 'Woman', value: Gender.WOMAN},\n+    {label: 'None of these describe me', value: Gender.NONE},\n+    {label: 'Prefer not to answer', value: SexAtBirth.PREFERNOANSWER}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NzMxOA==", "bodyText": "This confused me because gender is singular: I'd probably name this selfReportedGenders or something. Here and in other code.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374297318", "createdAt": "2020-02-03T19:33:25Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -3750,6 +3750,10 @@ definitions:\n         type: boolean\n       lgbtqIdentity:\n         type: string\n+      gender:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTQ3Mg==", "bodyText": "I think we should consider making it a bad request if NONE or PREFER_NO_ANSWER aren't by themselves. The UI should probably enforce that as well.\nWe should definitely allow combining the others though.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374299472", "createdAt": "2020-02-03T19:37:54Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -155,6 +155,9 @@ public DbDemographicSurvey apply(DemographicSurvey demographicSurvey) {\n               if (demographicSurvey.getDisability() != null)\n                 result.setDisabilityEnum(\n                     demographicSurvey.getDisability() ? Disability.TRUE : Disability.FALSE);\n+              if (demographicSurvey.getGender() != null) {\n+                result.setGenderEnum(demographicSurvey.getGender());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5OTk5NQ==", "bodyText": "Yeah, I think only some of these are checkboxes (combinable) and some (at least \"none of these...\" should be by themselves.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374299995", "createdAt": "2020-02-03T19:38:59Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -186,6 +186,17 @@ or another sexual and/or gender minority?'>\n                             onChange={(value) => this.updateDemographicAttribute('lgbtqIdentity', value)}\n                             disabled={!demographicSurvey.identifiesAsLgbtq}/>\n       </Section>\n+\n+      {/*Gender Identity section*/}\n+      <Section header='Gender Identity'>\n+        <FlexColumn style={{...styles.checkboxAreaContainer, height: '5rem'}}>\n+          {AccountCreationOptions.gender.map((gender) => {\n+            return this.createOptionCheckbox(gender.label, 'gender',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/3baa491ba8a9c14e1c360ad7a566e8e11b899ad6", "committedDate": "2020-02-04T04:05:25Z", "message": "Change gender to genderIdentity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3", "committedDate": "2020-02-04T04:11:37Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTcwNDA4", "url": "https://github.com/all-of-us/workbench/pull/3076#pullrequestreview-353170408", "createdAt": "2020-02-04T17:38:39Z", "commit": {"oid": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzozODozOVrOFldMSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzo0MToyOVrOFldRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxOTkxMg==", "bodyText": "This is in your other PR right? So you don't need it here anymore after rebasing that one I guess.", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374819912", "createdAt": "2020-02-04T17:38:39Z", "author": {"login": "jaycarlton"}, "path": "api/db/changelog/db.changelog-124-add-demographic-gender-identity.xml", "diffHunk": "@@ -0,0 +1,24 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5MTg3OA=="}, "originalCommit": {"oid": "388d1231d1fdd5ef6447221acee2acd534103be2"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgyMTI3Ng==", "bodyText": "nit: can this be a set instead of a list?", "url": "https://github.com/all-of-us/workbench/pull/3076#discussion_r374821276", "createdAt": "2020-02-04T17:41:29Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDemographicSurvey.java", "diffHunk": "@@ -174,6 +181,34 @@ public void setRaceEnum(List<Race> raceList) {\n         raceList.stream().map(DemographicSurveyEnum::raceToStorage).collect(Collectors.toList());\n   }\n \n+  @ElementCollection(fetch = FetchType.LAZY)\n+  @CollectionTable(\n+      name = \"demographic_survey_gender_identity\",\n+      joinColumns = @JoinColumn(name = \"demographic_survey_id\"))\n+  @Column(name = \"gender_identity\")\n+  public List<Short> getGenderIdentityList() {\n+    return genderIdentityList;\n+  }\n+\n+  public void setGenderIdentityList(List<Short> genderIdentityList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f0bf15c365d2b652a9d6faaf98ad760fcd1c0c3"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/29dca079e0d057ba08a5ee377bc53bfa4fb4b228", "committedDate": "2020-02-04T17:56:53Z", "message": "rebase"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3794, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}