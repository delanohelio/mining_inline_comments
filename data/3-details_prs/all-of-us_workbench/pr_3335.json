{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NzQzMzIz", "number": 3335, "title": "[RW-4561][risk=no] update DUA", "bodyText": "PR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to\n\n turn on the feature flag (RW-4697)\n remove it later (RW-4698)", "createdAt": "2020-04-02T18:22:36Z", "url": "https://github.com/all-of-us/workbench/pull/3335", "merged": true, "mergeCommit": {"oid": "2056a80e660255212d92664d4777356cd161bf28"}, "closed": true, "closedAt": "2020-04-03T15:50:43Z", "author": {"login": "als364"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS094BAH2gAyMzk3NzQzMzIzOjM1NGQyZjFlZTFiZmMzZmFmNzFkNDk0ZWFmN2ViNTE0MTNmZDc1M2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUCrxHgH2gAyMzk3NzQzMzIzOjdiNzc3NWExY2ZkOGU0MDgxYTNiZDMzM2NjNTE0ODI5YjI2MDIwMGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "354d2f1ee1bfc3faf71d494eaf7eb51413fd753a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/354d2f1ee1bfc3faf71d494eaf7eb51413fd753a", "committedDate": "2020-03-30T20:59:22Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a30121ec13cabd9145dbd09677f737a43bd9eb00", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/a30121ec13cabd9145dbd09677f737a43bd9eb00", "committedDate": "2020-04-02T16:12:42Z", "message": "styling, version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03dfe89fdb4d3ffc55fbab3d7b6bf5b9a752cd70", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/03dfe89fdb4d3ffc55fbab3d7b6bf5b9a752cd70", "committedDate": "2020-04-02T18:15:27Z", "message": "fixed test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Njg3OTAz", "url": "https://github.com/all-of-us/workbench/pull/3335#pullrequestreview-386687903", "createdAt": "2020-04-02T18:26:50Z", "commit": {"oid": "03dfe89fdb4d3ffc55fbab3d7b6bf5b9a752cd70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODoyNjo1MFrOF_4FNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxODoyNjo1MFrOF_4FNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyMzQ0Ng==", "bodyText": "This is wrapped in Angular, so I can either 1) condition what content is shown within the file on the feature flag, or 2) branch what route we go to based on the feature flag in a few different places. I started out working on 1), but it would be relatively easy to switch to 2) if you, esteemed reviewer, think it would be cleaner.", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402523446", "createdAt": "2020-04-02T18:26:50Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -1,15 +1,53 @@\n import {Component} from '@angular/core';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03dfe89fdb4d3ffc55fbab3d7b6bf5b9a752cd70"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7edef2319f20c89887fa44480dc443c7a4b7246d", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/7edef2319f20c89887fa44480dc443c7a4b7246d", "committedDate": "2020-04-02T18:32:50Z", "message": "linting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/9ecfcb542197c4664b96f33ce5a25e1bc5803be5", "committedDate": "2020-04-02T18:36:27Z", "message": "lint, some name changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzgzNzQ3", "url": "https://github.com/all-of-us/workbench/pull/3335#pullrequestreview-386783747", "createdAt": "2020-04-02T21:18:34Z", "commit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxODozNFrOF_83ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDo0NzoxN1rOGABaMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMTkxNA==", "bodyText": "nit: line continuation indent here and throughout. I'm surprised tslint doesn't care about this.", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402601914", "createdAt": "2020-04-02T21:18:34Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.spec.tsx", "diffHunk": "@@ -0,0 +1,167 @@\n+import {mount} from 'enzyme';\n+import * as React from 'react';\n+\n+import {DataUserCodeOfConduct} from 'app/pages/profile/data-user-code-of-conduct';\n+import {profileApi, registerApiClient} from 'app/services/swagger-fetch-clients';\n+import {serverConfigStore, userProfileStore} from 'app/utils/navigation';\n+import {Profile, ProfileApi} from 'generated/fetch';\n+import {ProfileApiStub, ProfileStubVariables} from 'testing/stubs/profile-api-stub';\n+import {waitOneTickAndUpdate} from \"../../../testing/react-test-helpers\";\n+import {DataUserCodeOfConductPage} from \"./data-user-code-of-conduct\";\n+\n+const defaultConfig = {\n+  gsuiteDomain: 'researchallofus.org',\n+  requireInstitutionalVerification: false,\n+};\n+\n+describe('DataUseAgreement', () => {\n+  const reload = jest.fn();\n+  const updateCache = jest.fn();\n+  const profile = ProfileStubVariables.PROFILE_STUB as unknown as Profile;\n+\n+  const component = () => mount(<DataUserCodeOfConduct/>);\n+\n+  beforeEach(() => {\n+    registerApiClient(ProfileApi, new ProfileApiStub());\n+    reload.mockImplementation(async () => {\n+      const newProfile = await profileApi().getMe();\n+      userProfileStore.next({profile: newProfile, reload, updateCache});\n+    });\n+\n+    userProfileStore.next({profile, reload, updateCache});\n+  });\n+\n+  it('should render - v1', () => {\n+    serverConfigStore.next({...defaultConfig, enableV2DataUserCodeOfConduct: false});\n+    const wrapper = component();\n+    expect(wrapper).toBeTruthy();\n+  });\n+\n+  it('should not allow DataUserCodeOfConduct without identical initials - v1', () => {\n+    serverConfigStore.next({...defaultConfig, enableV2DataUserCodeOfConduct: false});\n+    const wrapper = component();\n+    expect(wrapper.find('[data-test-id=\"submit-dua-button\"]').prop('disabled')).toBeTruthy();\n+\n+    // fill required fields\n+    wrapper.find('[data-test-id=\"dua-initials-input\"]').forEach((node, index) => {\n+      node.simulate('change', {target: {value: 'X' + index.toString()}});\n+    });\n+    expect(wrapper.find('[data-test-id=\"submit-dua-button\"]').prop('disabled')).toBeTruthy();\n+  });\n+\n+  it('should not allow DataUserCodeOfConduct with only one field populated - v1', () => {\n+    serverConfigStore.next({...defaultConfig, enableV2DataUserCodeOfConduct: false});\n+    const wrapper = component();\n+    expect(wrapper.find('[data-test-id=\"submit-dua-button\"]').prop('disabled')).toBeTruthy();\n+\n+    // fill required fields\n+    wrapper.find('[data-test-id=\"dua-name-input\"]')\n+    .simulate('change', {target: {value: 'Fake Name'}});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MjM1MQ==", "bodyText": "user -> User", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402672351", "createdAt": "2020-04-03T00:33:04Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -21,70 +59,209 @@ interface Props {\n \n interface State {\n   name: string;\n-  initialName: string;\n-  initialWork: string;\n-  initialSanctions: string;\n+  initialNameV1: string;\n+  initialWorkV1: string;\n+  initialSanctionsV1: string;\n+  initialMonitoring: string;\n+  initialPublic: string;\n+  page: DataUserCodeOfConductPage;\n   submitting: boolean;\n }\n \n-export const DataUseAgreement = withUserProfile()(\n+export const DataUserCodeOfConduct = withUserProfile()(\n   class extends React.Component<Props, State> {\n     constructor(props) {\n       super(props);\n       this.state = {\n         name: '',\n-        initialName: '',\n-        initialWork: '',\n-        initialSanctions: '',\n+        initialNameV1: '',\n+        initialWorkV1: '',\n+        initialSanctionsV1: '',\n+        initialMonitoring: '',\n+        initialPublic: '',\n+        page: DataUserCodeOfConductPage.CONTENT,\n         submitting: false\n       };\n     }\n \n-    submitDataUseAgreement(initials) {\n+    submitDataUserCodeOfConduct(initials) {\n       this.setState({submitting: true});\n+      const dataUseAgreementVersion = serverConfigStore.getValue().enableV2DataUserCodeOfConduct ? 3 : 2;\n       profileApi().submitDataUseAgreement(dataUseAgreementVersion, initials).then((profile) => {\n         this.props.profileState.updateCache(profile);\n         window.history.back();\n       });\n     }\n \n     render() {\n-      const {initialName, initialWork, initialSanctions, submitting} = this.state;\n-      const errors = validate({initialName, initialWork, initialSanctions}, {\n-        initialName: {\n+      const {profileState: {profile}} = this.props;\n+      const {initialNameV1, initialWorkV1, initialSanctionsV1, initialMonitoring, initialPublic, page, submitting} = this.state;\n+      const errorsV1 = validate({initialNameV1, initialWorkV1, initialSanctionsV1}, {\n+        initialNameV1: {\n           presence: {allowEmpty: false},\n           length: {maximum: 6}\n         },\n-        initialWork: {\n+        initialWorkV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         },\n-        initialSanctions: {\n+        initialSanctionsV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         }\n       });\n-      return <div style={dataUseAgreementStyles.dataUseAgreementPage}>\n-        <DataUseAgreementContent/>\n-        <div style={{height: '1rem'}}/>\n-        {getDataUseAgreementWidget.call(this,\n-          submitting,\n-          initialWork,\n-          initialName,\n-          initialSanctions,\n-          errors,\n-          this.props.profileState.profile)\n+      const errors = validate({initialMonitoring, initialPublic}, {\n+        initialMonitoring: {\n+          presence: {allowEmpty: false},\n+          length: {maxiumum: 6}\n+        },\n+        initialPublic: {\n+          presence: {allowEmpty: false},\n+          equality: {attribute: 'initialMonitoring'}\n         }\n-      </div>; }\n+      });\n+      if (serverConfigStore.getValue().enableV2DataUserCodeOfConduct) {\n+        return <FlexColumn style={styles.dataUserCodeOfConductPage}>\n+          {\n+            page === DataUserCodeOfConductPage.CONTENT && <React.Fragment>\n+              <div style={{marginTop: '2rem', marginBottom: '1rem'}}>\n+                <PdfViewer\n+                    pdfPath={'assets/documents/data-user-code-of-conduct-v3.pdf'}\n+                />\n+              </div>\n+              <FlexRow style={styles.dataUserCodeOfConductFooter}>\n+                Please read the above document in its entirety before proceeding to sign the Data User Code of Conduct.\n+                <Button\n+                    type={'link'}\n+                    style={{marginLeft: 'auto'}}\n+                    onClick={() => history.back()}\n+                >\n+                  Back\n+                </Button>\n+                <Button\n+                    data-test-id={'ducc-next-button'}\n+                    onClick={() => this.setState({page: DataUserCodeOfConductPage.SIGNATURE})}\n+                >\n+                  Accept\n+                </Button>\n+              </FlexRow>\n+            </React.Fragment>\n+          }\n+          {\n+            page === DataUserCodeOfConductPage.SIGNATURE && <React.Fragment>\n+              <FlexColumn>\n+                {submitting && <SpinnerOverlay/>}\n+                <h1>Accept Data User Code of Conduct</h1>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I\n+                  <DuaTextInput style={{margin: '0 1ex'}}\n+                     disabled\n+                     value={profile.givenName + ' ' + profile.familyName}\n+                     data-test-id='ducc-name-input'/>\n+                   (\"Authorized Data User\") have personally reviewed this Data User Code of Conduct.\n+                   I agree to follow each of the policies and prodedures it describes.\n+                </div>\n+                <div style={styles.smallTopMargin}>\n+                  By entering my initials next to each statement below, I acknowledge that:\n+                </div>\n+                <InitialsAgreement onChange={(v) => this.setState({initialMonitoring: v})}>\n+                  My work, including any external data, files, or software I upload into the\n+                   Researcher Workbench, may be logged and monitored by the\n+                   <i>All of Us</i> Research Program to ensure compliance with policies and\n+                   procedures.\n+                </InitialsAgreement>\n+                <InitialsAgreement onChange={(v) => this.setState({initialPublic: v})}>\n+                  My name, affiliation, profile information, and research description will be made\n+                   public. My research description will be used by the <i>All of Us</i> Research\n+                   Program to provide participants with meaningful information about the research\n+                   being conducted.\n+                </InitialsAgreement>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I acknowledge that failure to comply with the requirements outlined in this Data\n+                   User Code of Conduct may result in termination of my <i>All of Us</i> Research\n+                   Program account and/or other sanctions, including, but not limited to:\n+                </div>\n+                <ul style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  <li>\n+                    the posting of my name and affiliation on a publicly accessible list of\n+                     violators, and\n+                  </li>\n+                  <li>\n+                    notification of the National Institute of Health or other federal agencies as\n+                     to my actions.\n+                  </li>\n+                </ul>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I understand that failure to comply with these requirements may also carry\n+                   financial or legal repercussions. Any misuse of the <i>All of Us</i> Research\n+                   Hub, Researcher Workbench, or the <i>All of Us</i> Research Program data is\n+                   taken very seriously and other sanctions may be sought.\n+                </div>\n+                <label style={{...styles.bold, ...styles.largeTopMargin}}>Authorized Data user Name</label>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3Mjk1MQ==", "bodyText": "Why invoke this via call rather than just invoking the function normally? If this is necessary, please add a comment to explain why.", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402672951", "createdAt": "2020-04-03T00:35:09Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -21,70 +59,209 @@ interface Props {\n \n interface State {\n   name: string;\n-  initialName: string;\n-  initialWork: string;\n-  initialSanctions: string;\n+  initialNameV1: string;\n+  initialWorkV1: string;\n+  initialSanctionsV1: string;\n+  initialMonitoring: string;\n+  initialPublic: string;\n+  page: DataUserCodeOfConductPage;\n   submitting: boolean;\n }\n \n-export const DataUseAgreement = withUserProfile()(\n+export const DataUserCodeOfConduct = withUserProfile()(\n   class extends React.Component<Props, State> {\n     constructor(props) {\n       super(props);\n       this.state = {\n         name: '',\n-        initialName: '',\n-        initialWork: '',\n-        initialSanctions: '',\n+        initialNameV1: '',\n+        initialWorkV1: '',\n+        initialSanctionsV1: '',\n+        initialMonitoring: '',\n+        initialPublic: '',\n+        page: DataUserCodeOfConductPage.CONTENT,\n         submitting: false\n       };\n     }\n \n-    submitDataUseAgreement(initials) {\n+    submitDataUserCodeOfConduct(initials) {\n       this.setState({submitting: true});\n+      const dataUseAgreementVersion = serverConfigStore.getValue().enableV2DataUserCodeOfConduct ? 3 : 2;\n       profileApi().submitDataUseAgreement(dataUseAgreementVersion, initials).then((profile) => {\n         this.props.profileState.updateCache(profile);\n         window.history.back();\n       });\n     }\n \n     render() {\n-      const {initialName, initialWork, initialSanctions, submitting} = this.state;\n-      const errors = validate({initialName, initialWork, initialSanctions}, {\n-        initialName: {\n+      const {profileState: {profile}} = this.props;\n+      const {initialNameV1, initialWorkV1, initialSanctionsV1, initialMonitoring, initialPublic, page, submitting} = this.state;\n+      const errorsV1 = validate({initialNameV1, initialWorkV1, initialSanctionsV1}, {\n+        initialNameV1: {\n           presence: {allowEmpty: false},\n           length: {maximum: 6}\n         },\n-        initialWork: {\n+        initialWorkV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         },\n-        initialSanctions: {\n+        initialSanctionsV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         }\n       });\n-      return <div style={dataUseAgreementStyles.dataUseAgreementPage}>\n-        <DataUseAgreementContent/>\n-        <div style={{height: '1rem'}}/>\n-        {getDataUseAgreementWidget.call(this,\n-          submitting,\n-          initialWork,\n-          initialName,\n-          initialSanctions,\n-          errors,\n-          this.props.profileState.profile)\n+      const errors = validate({initialMonitoring, initialPublic}, {\n+        initialMonitoring: {\n+          presence: {allowEmpty: false},\n+          length: {maxiumum: 6}\n+        },\n+        initialPublic: {\n+          presence: {allowEmpty: false},\n+          equality: {attribute: 'initialMonitoring'}\n         }\n-      </div>; }\n+      });\n+      if (serverConfigStore.getValue().enableV2DataUserCodeOfConduct) {\n+        return <FlexColumn style={styles.dataUserCodeOfConductPage}>\n+          {\n+            page === DataUserCodeOfConductPage.CONTENT && <React.Fragment>\n+              <div style={{marginTop: '2rem', marginBottom: '1rem'}}>\n+                <PdfViewer\n+                    pdfPath={'assets/documents/data-user-code-of-conduct-v3.pdf'}\n+                />\n+              </div>\n+              <FlexRow style={styles.dataUserCodeOfConductFooter}>\n+                Please read the above document in its entirety before proceeding to sign the Data User Code of Conduct.\n+                <Button\n+                    type={'link'}\n+                    style={{marginLeft: 'auto'}}\n+                    onClick={() => history.back()}\n+                >\n+                  Back\n+                </Button>\n+                <Button\n+                    data-test-id={'ducc-next-button'}\n+                    onClick={() => this.setState({page: DataUserCodeOfConductPage.SIGNATURE})}\n+                >\n+                  Accept\n+                </Button>\n+              </FlexRow>\n+            </React.Fragment>\n+          }\n+          {\n+            page === DataUserCodeOfConductPage.SIGNATURE && <React.Fragment>\n+              <FlexColumn>\n+                {submitting && <SpinnerOverlay/>}\n+                <h1>Accept Data User Code of Conduct</h1>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I\n+                  <DuaTextInput style={{margin: '0 1ex'}}\n+                     disabled\n+                     value={profile.givenName + ' ' + profile.familyName}\n+                     data-test-id='ducc-name-input'/>\n+                   (\"Authorized Data User\") have personally reviewed this Data User Code of Conduct.\n+                   I agree to follow each of the policies and prodedures it describes.\n+                </div>\n+                <div style={styles.smallTopMargin}>\n+                  By entering my initials next to each statement below, I acknowledge that:\n+                </div>\n+                <InitialsAgreement onChange={(v) => this.setState({initialMonitoring: v})}>\n+                  My work, including any external data, files, or software I upload into the\n+                   Researcher Workbench, may be logged and monitored by the\n+                   <i>All of Us</i> Research Program to ensure compliance with policies and\n+                   procedures.\n+                </InitialsAgreement>\n+                <InitialsAgreement onChange={(v) => this.setState({initialPublic: v})}>\n+                  My name, affiliation, profile information, and research description will be made\n+                   public. My research description will be used by the <i>All of Us</i> Research\n+                   Program to provide participants with meaningful information about the research\n+                   being conducted.\n+                </InitialsAgreement>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I acknowledge that failure to comply with the requirements outlined in this Data\n+                   User Code of Conduct may result in termination of my <i>All of Us</i> Research\n+                   Program account and/or other sanctions, including, but not limited to:\n+                </div>\n+                <ul style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  <li>\n+                    the posting of my name and affiliation on a publicly accessible list of\n+                     violators, and\n+                  </li>\n+                  <li>\n+                    notification of the National Institute of Health or other federal agencies as\n+                     to my actions.\n+                  </li>\n+                </ul>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I understand that failure to comply with these requirements may also carry\n+                   financial or legal repercussions. Any misuse of the <i>All of Us</i> Research\n+                   Hub, Researcher Workbench, or the <i>All of Us</i> Research Program data is\n+                   taken very seriously and other sanctions may be sought.\n+                </div>\n+                <label style={{...styles.bold, ...styles.largeTopMargin}}>Authorized Data user Name</label>\n+                <DuaTextInput\n+                    disabled\n+                    data-test-id='ducc-username-input'\n+                    value={profile.givenName + ' ' + profile.familyName}\n+                />\n+                <label style={{...styles.bold, ...styles.largeTopMargin}}>User ID</label>\n+                <DuaTextInput\n+                    disabled\n+                    data-test-id='ducc-user-id-input'\n+                    value={profile.username}\n+                />\n+                <label style={{...styles.bold, ...styles.largeTopMargin}}>Date</label>\n+                <DuaTextInput type='text' disabled value={new Date().toLocaleDateString()}/>\n+              </FlexColumn>\n+              <FlexRow style={styles.dataUserCodeOfConductFooter}>\n+                <Button\n+                    type={'link'}\n+                    style={{marginLeft: 'auto'}}\n+                    onClick={() => this.setState({page: DataUserCodeOfConductPage.CONTENT})}\n+                >\n+                  Back\n+                </Button>\n+                <TooltipTrigger content={errors && <div>\n+                  <div>All fields must be initialed</div>\n+                  <div>All initials must match</div>\n+                  <div>Initials must be six letters or fewer</div>\n+                </div>}>\n+                  <Button\n+                      data-test-id={'submit-ducc-button'}\n+                      disabled={errors || submitting}\n+                      onClick={() => {\n+                        this.submitDataUserCodeOfConduct(initialMonitoring);\n+                      }}\n+                  >\n+                    Accept\n+                  </Button>\n+                </TooltipTrigger>\n+              </FlexRow>\n+            </React.Fragment>\n+          }\n+        </FlexColumn>;\n+      } else {\n+        return <div style={dataUserCodeOfConductStyles.dataUserCodeOfConductPage}>\n+          <DataUseAgreementContentV1/>\n+          <div style={{height: '1rem'}}/>\n+          {getDataUseAgreementWidgetV1.call(this,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 275}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MzI2Mw==", "bodyText": "I like this approach, unless we think there is some need to display the v2 DUA for some reason after launching the v3 DUA.", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402673263", "createdAt": "2020-04-03T00:36:25Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -1,15 +1,53 @@\n import {Component} from '@angular/core';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjUyMzQ0Ng=="}, "originalCommit": {"oid": "03dfe89fdb4d3ffc55fbab3d7b6bf5b9a752cd70"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3NDgxNA==", "bodyText": "I'd probably use V3 in the flag name instead of V2. Should hopefully be an easy search/replace. This line illustrates why the current naming could be confusing.\nAlternatively: If the intent was to convey \"v2\" of the DUA implementation, perhaps something like enablePdfDataUser.... would be appropriate.", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402674814", "createdAt": "2020-04-03T00:42:12Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -21,70 +59,209 @@ interface Props {\n \n interface State {\n   name: string;\n-  initialName: string;\n-  initialWork: string;\n-  initialSanctions: string;\n+  initialNameV1: string;\n+  initialWorkV1: string;\n+  initialSanctionsV1: string;\n+  initialMonitoring: string;\n+  initialPublic: string;\n+  page: DataUserCodeOfConductPage;\n   submitting: boolean;\n }\n \n-export const DataUseAgreement = withUserProfile()(\n+export const DataUserCodeOfConduct = withUserProfile()(\n   class extends React.Component<Props, State> {\n     constructor(props) {\n       super(props);\n       this.state = {\n         name: '',\n-        initialName: '',\n-        initialWork: '',\n-        initialSanctions: '',\n+        initialNameV1: '',\n+        initialWorkV1: '',\n+        initialSanctionsV1: '',\n+        initialMonitoring: '',\n+        initialPublic: '',\n+        page: DataUserCodeOfConductPage.CONTENT,\n         submitting: false\n       };\n     }\n \n-    submitDataUseAgreement(initials) {\n+    submitDataUserCodeOfConduct(initials) {\n       this.setState({submitting: true});\n+      const dataUseAgreementVersion = serverConfigStore.getValue().enableV2DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3NTUxOA==", "bodyText": "spelling: procedures", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402675518", "createdAt": "2020-04-03T00:44:24Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -21,70 +59,209 @@ interface Props {\n \n interface State {\n   name: string;\n-  initialName: string;\n-  initialWork: string;\n-  initialSanctions: string;\n+  initialNameV1: string;\n+  initialWorkV1: string;\n+  initialSanctionsV1: string;\n+  initialMonitoring: string;\n+  initialPublic: string;\n+  page: DataUserCodeOfConductPage;\n   submitting: boolean;\n }\n \n-export const DataUseAgreement = withUserProfile()(\n+export const DataUserCodeOfConduct = withUserProfile()(\n   class extends React.Component<Props, State> {\n     constructor(props) {\n       super(props);\n       this.state = {\n         name: '',\n-        initialName: '',\n-        initialWork: '',\n-        initialSanctions: '',\n+        initialNameV1: '',\n+        initialWorkV1: '',\n+        initialSanctionsV1: '',\n+        initialMonitoring: '',\n+        initialPublic: '',\n+        page: DataUserCodeOfConductPage.CONTENT,\n         submitting: false\n       };\n     }\n \n-    submitDataUseAgreement(initials) {\n+    submitDataUserCodeOfConduct(initials) {\n       this.setState({submitting: true});\n+      const dataUseAgreementVersion = serverConfigStore.getValue().enableV2DataUserCodeOfConduct ? 3 : 2;\n       profileApi().submitDataUseAgreement(dataUseAgreementVersion, initials).then((profile) => {\n         this.props.profileState.updateCache(profile);\n         window.history.back();\n       });\n     }\n \n     render() {\n-      const {initialName, initialWork, initialSanctions, submitting} = this.state;\n-      const errors = validate({initialName, initialWork, initialSanctions}, {\n-        initialName: {\n+      const {profileState: {profile}} = this.props;\n+      const {initialNameV1, initialWorkV1, initialSanctionsV1, initialMonitoring, initialPublic, page, submitting} = this.state;\n+      const errorsV1 = validate({initialNameV1, initialWorkV1, initialSanctionsV1}, {\n+        initialNameV1: {\n           presence: {allowEmpty: false},\n           length: {maximum: 6}\n         },\n-        initialWork: {\n+        initialWorkV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         },\n-        initialSanctions: {\n+        initialSanctionsV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         }\n       });\n-      return <div style={dataUseAgreementStyles.dataUseAgreementPage}>\n-        <DataUseAgreementContent/>\n-        <div style={{height: '1rem'}}/>\n-        {getDataUseAgreementWidget.call(this,\n-          submitting,\n-          initialWork,\n-          initialName,\n-          initialSanctions,\n-          errors,\n-          this.props.profileState.profile)\n+      const errors = validate({initialMonitoring, initialPublic}, {\n+        initialMonitoring: {\n+          presence: {allowEmpty: false},\n+          length: {maxiumum: 6}\n+        },\n+        initialPublic: {\n+          presence: {allowEmpty: false},\n+          equality: {attribute: 'initialMonitoring'}\n         }\n-      </div>; }\n+      });\n+      if (serverConfigStore.getValue().enableV2DataUserCodeOfConduct) {\n+        return <FlexColumn style={styles.dataUserCodeOfConductPage}>\n+          {\n+            page === DataUserCodeOfConductPage.CONTENT && <React.Fragment>\n+              <div style={{marginTop: '2rem', marginBottom: '1rem'}}>\n+                <PdfViewer\n+                    pdfPath={'assets/documents/data-user-code-of-conduct-v3.pdf'}\n+                />\n+              </div>\n+              <FlexRow style={styles.dataUserCodeOfConductFooter}>\n+                Please read the above document in its entirety before proceeding to sign the Data User Code of Conduct.\n+                <Button\n+                    type={'link'}\n+                    style={{marginLeft: 'auto'}}\n+                    onClick={() => history.back()}\n+                >\n+                  Back\n+                </Button>\n+                <Button\n+                    data-test-id={'ducc-next-button'}\n+                    onClick={() => this.setState({page: DataUserCodeOfConductPage.SIGNATURE})}\n+                >\n+                  Accept\n+                </Button>\n+              </FlexRow>\n+            </React.Fragment>\n+          }\n+          {\n+            page === DataUserCodeOfConductPage.SIGNATURE && <React.Fragment>\n+              <FlexColumn>\n+                {submitting && <SpinnerOverlay/>}\n+                <h1>Accept Data User Code of Conduct</h1>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I\n+                  <DuaTextInput style={{margin: '0 1ex'}}\n+                     disabled\n+                     value={profile.givenName + ' ' + profile.familyName}\n+                     data-test-id='ducc-name-input'/>\n+                   (\"Authorized Data User\") have personally reviewed this Data User Code of Conduct.\n+                   I agree to follow each of the policies and prodedures it describes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3NjI3Mg==", "bodyText": "Institutes", "url": "https://github.com/all-of-us/workbench/pull/3335#discussion_r402676272", "createdAt": "2020-04-03T00:47:17Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.tsx", "diffHunk": "@@ -21,70 +59,209 @@ interface Props {\n \n interface State {\n   name: string;\n-  initialName: string;\n-  initialWork: string;\n-  initialSanctions: string;\n+  initialNameV1: string;\n+  initialWorkV1: string;\n+  initialSanctionsV1: string;\n+  initialMonitoring: string;\n+  initialPublic: string;\n+  page: DataUserCodeOfConductPage;\n   submitting: boolean;\n }\n \n-export const DataUseAgreement = withUserProfile()(\n+export const DataUserCodeOfConduct = withUserProfile()(\n   class extends React.Component<Props, State> {\n     constructor(props) {\n       super(props);\n       this.state = {\n         name: '',\n-        initialName: '',\n-        initialWork: '',\n-        initialSanctions: '',\n+        initialNameV1: '',\n+        initialWorkV1: '',\n+        initialSanctionsV1: '',\n+        initialMonitoring: '',\n+        initialPublic: '',\n+        page: DataUserCodeOfConductPage.CONTENT,\n         submitting: false\n       };\n     }\n \n-    submitDataUseAgreement(initials) {\n+    submitDataUserCodeOfConduct(initials) {\n       this.setState({submitting: true});\n+      const dataUseAgreementVersion = serverConfigStore.getValue().enableV2DataUserCodeOfConduct ? 3 : 2;\n       profileApi().submitDataUseAgreement(dataUseAgreementVersion, initials).then((profile) => {\n         this.props.profileState.updateCache(profile);\n         window.history.back();\n       });\n     }\n \n     render() {\n-      const {initialName, initialWork, initialSanctions, submitting} = this.state;\n-      const errors = validate({initialName, initialWork, initialSanctions}, {\n-        initialName: {\n+      const {profileState: {profile}} = this.props;\n+      const {initialNameV1, initialWorkV1, initialSanctionsV1, initialMonitoring, initialPublic, page, submitting} = this.state;\n+      const errorsV1 = validate({initialNameV1, initialWorkV1, initialSanctionsV1}, {\n+        initialNameV1: {\n           presence: {allowEmpty: false},\n           length: {maximum: 6}\n         },\n-        initialWork: {\n+        initialWorkV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         },\n-        initialSanctions: {\n+        initialSanctionsV1: {\n           presence: {allowEmpty: false},\n-          equality: {attribute: 'initialName'},\n+          equality: {attribute: 'initialNameV1'},\n           length: {maximum: 6}\n         }\n       });\n-      return <div style={dataUseAgreementStyles.dataUseAgreementPage}>\n-        <DataUseAgreementContent/>\n-        <div style={{height: '1rem'}}/>\n-        {getDataUseAgreementWidget.call(this,\n-          submitting,\n-          initialWork,\n-          initialName,\n-          initialSanctions,\n-          errors,\n-          this.props.profileState.profile)\n+      const errors = validate({initialMonitoring, initialPublic}, {\n+        initialMonitoring: {\n+          presence: {allowEmpty: false},\n+          length: {maxiumum: 6}\n+        },\n+        initialPublic: {\n+          presence: {allowEmpty: false},\n+          equality: {attribute: 'initialMonitoring'}\n         }\n-      </div>; }\n+      });\n+      if (serverConfigStore.getValue().enableV2DataUserCodeOfConduct) {\n+        return <FlexColumn style={styles.dataUserCodeOfConductPage}>\n+          {\n+            page === DataUserCodeOfConductPage.CONTENT && <React.Fragment>\n+              <div style={{marginTop: '2rem', marginBottom: '1rem'}}>\n+                <PdfViewer\n+                    pdfPath={'assets/documents/data-user-code-of-conduct-v3.pdf'}\n+                />\n+              </div>\n+              <FlexRow style={styles.dataUserCodeOfConductFooter}>\n+                Please read the above document in its entirety before proceeding to sign the Data User Code of Conduct.\n+                <Button\n+                    type={'link'}\n+                    style={{marginLeft: 'auto'}}\n+                    onClick={() => history.back()}\n+                >\n+                  Back\n+                </Button>\n+                <Button\n+                    data-test-id={'ducc-next-button'}\n+                    onClick={() => this.setState({page: DataUserCodeOfConductPage.SIGNATURE})}\n+                >\n+                  Accept\n+                </Button>\n+              </FlexRow>\n+            </React.Fragment>\n+          }\n+          {\n+            page === DataUserCodeOfConductPage.SIGNATURE && <React.Fragment>\n+              <FlexColumn>\n+                {submitting && <SpinnerOverlay/>}\n+                <h1>Accept Data User Code of Conduct</h1>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I\n+                  <DuaTextInput style={{margin: '0 1ex'}}\n+                     disabled\n+                     value={profile.givenName + ' ' + profile.familyName}\n+                     data-test-id='ducc-name-input'/>\n+                   (\"Authorized Data User\") have personally reviewed this Data User Code of Conduct.\n+                   I agree to follow each of the policies and prodedures it describes.\n+                </div>\n+                <div style={styles.smallTopMargin}>\n+                  By entering my initials next to each statement below, I acknowledge that:\n+                </div>\n+                <InitialsAgreement onChange={(v) => this.setState({initialMonitoring: v})}>\n+                  My work, including any external data, files, or software I upload into the\n+                   Researcher Workbench, may be logged and monitored by the\n+                   <i>All of Us</i> Research Program to ensure compliance with policies and\n+                   procedures.\n+                </InitialsAgreement>\n+                <InitialsAgreement onChange={(v) => this.setState({initialPublic: v})}>\n+                  My name, affiliation, profile information, and research description will be made\n+                   public. My research description will be used by the <i>All of Us</i> Research\n+                   Program to provide participants with meaningful information about the research\n+                   being conducted.\n+                </InitialsAgreement>\n+                <div style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  I acknowledge that failure to comply with the requirements outlined in this Data\n+                   User Code of Conduct may result in termination of my <i>All of Us</i> Research\n+                   Program account and/or other sanctions, including, but not limited to:\n+                </div>\n+                <ul style={{...styles.bold, ...styles.smallTopMargin}}>\n+                  <li>\n+                    the posting of my name and affiliation on a publicly accessible list of\n+                     violators, and\n+                  </li>\n+                  <li>\n+                    notification of the National Institute of Health or other federal agencies as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecfcb542197c4664b96f33ce5a25e1bc5803be5"}, "originalPosition": 219}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd1513b5602aa37d0cb998d46ac57c6b1a8ffe82", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/bd1513b5602aa37d0cb998d46ac57c6b1a8ffe82", "committedDate": "2020-04-03T15:14:18Z", "message": "review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22a024fe90570d720638212b9c78cc3f2cfcda0c", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/22a024fe90570d720638212b9c78cc3f2cfcda0c", "committedDate": "2020-04-03T15:26:21Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b7775a1cfd8e4081a3bd333cc514829b260200a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/7b7775a1cfd8e4081a3bd333cc514829b260200a", "committedDate": "2020-04-03T15:32:11Z", "message": "are you serious why doesn't this make intellij throw a fit"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3338, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}