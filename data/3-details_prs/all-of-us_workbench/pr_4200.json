{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTA4Nzgz", "number": 4200, "title": "[RW-5640][risk=low] Adding UI to add microarray codegen", "bodyText": "Description:\nAdding UI flow to add microarray code gen\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-10-22T19:24:28Z", "url": "https://github.com/all-of-us/workbench/pull/4200", "merged": true, "mergeCommit": {"oid": "39ca9fc85dbb8d250ba5a3e93323aeedd2cfe82e"}, "closed": true, "closedAt": "2020-10-23T16:08:09Z", "author": {"login": "ericsong"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVFrXMAH2gAyNTA4NTA4NzgzOjA0MjI3NDkxM2FlNjlkODAzYzU1MmM5MWUzYzA2YjgyYmM4MDU5OGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVYep7gH2gAyNTA4NTA4NzgzOjRmYzUwODg2MTYxMWRhY2IxZTY0MjFlNzUwODljNTI2MWZjYjc5OGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "042274913ae69d803c552c91e3c06b82bc80598c", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/042274913ae69d803c552c91e3c06b82bc80598c", "committedDate": "2020-10-22T17:46:32Z", "message": "UI basics in place - styling needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7218b6ea845413749a6e9c45dcbb9455c3568f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/2a7218b6ea845413749a6e9c45dcbb9455c3568f", "committedDate": "2020-10-22T17:46:51Z", "message": "WIP - adding tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "875dfa5b908cb3bfb75102ff3d51b8130f58f49b", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/875dfa5b908cb3bfb75102ff3d51b8130f58f49b", "committedDate": "2020-10-22T19:17:50Z", "message": "add tests. manually tested as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/4963aaf0f5d2a9911bb4128fca62590494ef50d1", "committedDate": "2020-10-22T19:19:55Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTQ0NDQw", "url": "https://github.com/all-of-us/workbench/pull/4200#pullrequestreview-515144440", "createdAt": "2020-10-22T21:48:13Z", "commit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo0ODoxM1rOHm1FgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo1NDowMFrOHm1PBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NzY5Ng==", "bodyText": "please make relative to application, not the current file (next line also violates this, but is less offensive and existing issue)", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510477696", "createdAt": "2020-10-22T21:48:13Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -11,7 +11,10 @@ import {\n import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {DataSetApiStub} from 'testing/stubs/data-set-api-stub';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n+import {DataSetExportRequest} from '../../../../generated/fetch';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3ODIyMA==", "bodyText": "interesting - I actually haven't seen this pattern before but it seems pretty nice", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510478220", "createdAt": "2020-10-22T21:49:31Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -11,7 +11,10 @@ import {\n import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {DataSetApiStub} from 'testing/stubs/data-set-api-stub';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n+import {DataSetExportRequest} from '../../../../generated/fetch';\n import {NewDataSetModal} from './new-dataset-modal';\n+import GenomicsAnalysisToolEnum = DataSetExportRequest.GenomicsAnalysisToolEnum;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3ODc5MQ==", "bodyText": "nit: would revert these newlines", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510478791", "createdAt": "2020-10-22T21:50:44Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/data/data-set/new-dataset-modal.tsx", "diffHunk": "@@ -1,30 +1,36 @@\n-import * as React from 'react';\n-\n-import {validate} from 'validate.js';\n-\n-import {dataSetApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n-\n import {AlertDanger} from 'app/components/alert';\n import {Button, TabButton} from 'app/components/buttons';\n import {SmallHeader, styles as headerStyles} from 'app/components/headers';\n import {CheckBox, RadioButton, Select, TextArea, TextInput} from 'app/components/inputs';\n import {Modal, ModalBody, ModalFooter, ModalTitle} from 'app/components/modals';\n import {TooltipTrigger} from 'app/components/popups';\n import {SpinnerOverlay} from 'app/components/spinners';\n+import {TextColumn} from 'app/components/text-column';\n import {appendNotebookFileSuffix} from 'app/pages/analysis/util';\n+\n+import {dataSetApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n import colors from 'app/styles/colors';\n-import {summarizeErrors} from 'app/utils';\n+import {\n+  summarizeErrors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MDEzMw==", "bodyText": "nit: indent, here and below", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510480133", "createdAt": "2020-10-22T21:54:00Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/data/data-set/new-dataset-modal.spec.tsx", "diffHunk": "@@ -139,17 +148,103 @@ describe('NewDataSetModal', () => {\n       dataSetRequest: dataSetRequestStub,\n       newNotebook: true,\n       notebookName: notebookNameStub,\n-      kernelType: KernelTypeEnum.Python\n+      kernelType: KernelTypeEnum.Python,\n+      genomicsDataType: GenomicsDataTypeEnum.NONE,\n+      genomicsAnalysisTool: GenomicsAnalysisToolEnum.NONE\n     });\n   });\n+\n   it ('should have default dataSet name if dataset is passed as props', () => {\n     const name = 'Update Dataset';\n     dataSet = {...dataSet, name: name, description: 'dataset'};\n     const wrapper = mount(createNewDataSetModal());\n     const dataSetName  =\n-        wrapper.find('[data-test-id=\"data-set-name-input\"]').first().prop('value');\n+      wrapper.find('[data-test-id=\"data-set-name-input\"]').first().prop('value');\n     expect(dataSetName).toBe(name);\n+  });\n+\n+  it ('should show microarray options if the display flag is true and the kernel is Python', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeTruthy();\n+  });\n+\n+  it ('should not show microarray options if the cdrVersion does not have microarray data', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: false});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeFalsy();\n+  });\n+\n+  it ('should not show microarray options if the kernel is not Python', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.R});\n+    await waitOneTickAndUpdate(wrapper);\n \n+    expect(wrapper.find('[data-test-id=\"include-raw-microarray-data\"]').exists()).toBeFalsy();\n+  });\n \n+  it ('should show genomics analysis tools if include raw microarray data is checked', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python, includeRawMicroarrayData: true});\n+    await waitOneTickAndUpdate(wrapper);\n+\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-none\"]').exists()).toBeTruthy();\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-hail\"]').exists()).toBeTruthy();\n+    expect(wrapper.find('[data-test-id=\"genomics-analysis-tool-plink\"]').exists()).toBeTruthy();\n   });\n+\n+  it ('should export to notebook with the correct microarray parameters', async() => {\n+    const wrapper = mount(createNewDataSetModal());\n+    wrapper.setProps({displayMicroarrayOptions: true});\n+    wrapper.setState({kernelType: KernelTypeEnum.Python});\n+\n+    const exportSpy = jest.spyOn(dataSetApi(), 'exportToNotebook');\n+    const nameStub = 'Dataset Name';\n+    const notebookNameStub = 'Notebook Name';\n+    const dataSetRequestStub: DataSetRequest = {\n+      name: nameStub,\n+      includesAllParticipants: false,\n+      description: '',\n+      conceptSetIds: [],\n+      cohortIds: [],\n+      domainValuePairs: [],\n+      prePackagedConceptSet: PrePackagedConceptSetEnum.NONE\n+    };\n+\n+    wrapper.find('[data-test-id=\"data-set-name-input\"]')\n+    .first().simulate('change', {target: {value: nameStub}});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTQ5NDg4", "url": "https://github.com/all-of-us/workbench/pull/4200#pullrequestreview-515149488", "createdAt": "2020-10-22T21:57:59Z", "commit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo1ODowMFrOHm1V0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo1ODowMFrOHm1V0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ4MTg3NQ==", "bodyText": "OK, forgot to flag one issue that I believe exists here: should ensure that the following doesn't 400 (leave it up to you the best method for doing so):\n\ncheck microarray\nswitch to R\nexport", "url": "https://github.com/all-of-us/workbench/pull/4200#discussion_r510481875", "createdAt": "2020-10-22T21:58:00Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/data/data-set/new-dataset-modal.tsx", "diffHunk": "@@ -339,6 +351,42 @@ class NewDataSetModal extends React.Component<Props, State> {\n                 </label>\n               )}\n           </React.Fragment>}\n+          {this.props.displayMicroarrayOptions && this.state.kernelType === KernelTypeEnum.Python &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4963aaf0f5d2a9911bb4128fca62590494ef50d1"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a28075504f57757f1c77c4da07e4959fb2ebc5", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/65a28075504f57757f1c77c4da07e4959fb2ebc5", "committedDate": "2020-10-23T15:00:53Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b9e754a34c61f27a67422b2724ee313d7fcdc91", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/6b9e754a34c61f27a67422b2724ee313d7fcdc91", "committedDate": "2020-10-23T15:22:54Z", "message": "fix bug when switching to R"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fc508861611dacb1e6421e75089c5261fcb798c", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/4fc508861611dacb1e6421e75089c5261fcb798c", "committedDate": "2020-10-23T15:40:51Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-5640"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4012, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}