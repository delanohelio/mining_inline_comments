{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTAwODc4", "number": 3562, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjo1MjowNFrOD7blpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo0Mjo0NFrOD7c5ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjQ0NTgyOnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjo1MjowNFrOGTwHoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxMzozNlrOGUzpiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2NDUxMw==", "bodyText": "Please switch these comments to be third person", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423364513", "createdAt": "2020-05-11T22:52:04Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MDkyMw==", "bodyText": "Is the Queen going to be inspecting the cron dashboard? \ud83d\ude09", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r424470923", "createdAt": "2020-05-13T14:13:36Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2NDUxMw=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjQ0NjA1OnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjo1MjoxMFrOGTwHvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMjo1MjoxMFrOGTwHvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2NDU0MA==", "bodyText": "spelling", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423364540", "createdAt": "2020-05-11T22:52:10Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjQ2ODY4OnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowMzoyMFrOGTwWKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoyNzo0NFrOGU0UPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ==", "bodyText": "My commentary here is way too ambiguous to be checked in. @gjuggler may be able to provide a better description. But before I wrote this I'd need to refresh on exactly what the intended behavior is. In particular, I believe the current registration system as designed, only cares that a linkage was established at one point, for verification - this is purely a stand-in for ID verification. If so, this background sync would actually behave incorrectly if a user unlinked their account, or let their linkage expire.\nHowever, for controlled tier, there might be new policies which require an active eRA commons linkage, in case this stricter behavior would be required, including a linkage refresh.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423368235", "createdAt": "2020-05-11T23:03:20Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5OTkxMg==", "bodyText": "See the original Access Modules design \u2013\u00a0as phrased in the main table, \"The initial public launch of the Workbench will require researchers to maintain an actively-linked eRA Commons account. This linkage is mediated via FireCloud and its Shibboleth service.\"\nI don't think there was ever a really strong product definition of this requirement \u2014\u00a0e.g., I don't think this distinction is really apparent or critical to stakeholders' understanding of onboarding requirements. But it would be a change to say we don't want to reflect potential changes in Terra's linkage state.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423399912", "createdAt": "2020-05-12T00:46:59Z", "author": {"login": "gjuggler"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3MjE4OQ==", "bodyText": "I don't want to go too far down a rabbit hole, but it sounds like we're collecting this information but never acting on it. It just logs things to INFO but doesn't ring any bells elsewhere as far as I can see.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r424472189", "createdAt": "2020-05-13T14:15:16Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MTg1Mw==", "bodyText": "No, it's not wrong to be digging into the details here. This line should be updating user status (including registered-tier membership) based on the updated eRA Commons linkage state synced from Terra.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r424481853", "createdAt": "2020-05-13T14:27:44Z", "author": {"login": "gjuggler"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2ODIzNQ=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjQ3MzYyOnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowNTo0MFrOGTwZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowNTo0MFrOGTwZWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2OTA1MA==", "bodyText": "nit: would probably say \"database cache\" to avoid ambiguity here. If I read this as-is I would probably assume this meant memcache or other ephemeral storage.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423369050", "createdAt": "2020-05-11T23:05:40Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary\n+    flow. This would only ever catch the following scenarios:\n+    1. The user's compliance training expires. The time scale on this expiration is O(years),\n+    so syncing nightly is entirely acceptable.\n+\n+    2. The user completes compliance and doesn't return to the dashboard. We'd progress them in the\n+    background. This won't make much of a difference and would have the same effect as if they had\n+    navigated back to the dashboard.\n+\n+    3. Somehow the user manages to \"uncomplete\" training in Moodle. I'm not sure this is possible,\n+    but if so, it's certainly an edge case where nightly would be acceptale latency\n   url: /v1/cron/bulkSyncComplianceTrainingStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of eRA Commons linkage status (via FireCloud API)'\n+- description: >\n+    Daily sync of eRA Commons linkage status (via FireCloud API).  I expect this cron to never\n+    detect anything. This is effectively checking for whether any changes happened in the\n+    background between the Terra account and its linkage to eRA commons. During onboarding,\n+    this won't matter since it's checked live from the dashboard. After onboarding, I don't even\n+    know whether it's possible to \"unlink\", and if a user did this, whether that even matters for\n+    our registration policy. Certainly it's good to check, but none of this is time sensitive.\n+    The current 24h interval is fine.\n   url: /v1/cron/bulkSyncEraCommonsStatus\n   schedule: every 24 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of 2FA set up status (via Google Directory Service)'\n+- description: >\n+    Update our cache of users' two-factor authentication settings on their GSuite accounts via", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjQ3Njg2OnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowNzoyMFrOGTwboQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMzowNzoyMFrOGTwboQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM2OTYzMw==", "bodyText": "That would have been true when this API was created. However, this API now exists and we have a ticket to eliminate this cron and move to the new method: https://precisionmedicineinitiative.atlassian.net/browse/RW-3627. I would update this to reflect that and probably link the ticket here", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423369633", "createdAt": "2020-05-11T23:07:20Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -41,24 +61,31 @@ cron:\n   target: api\n - description: 'Find and alert users that have exceeded their free tier billing usage'\n   url: /v1/cron/checkFreeTierBillingUsage\n-  schedule: every 3 hours\n+  schedule: every 30 minutes\n   timezone: UTC\n   target: api\n-- description: 'Find billing projects associated with deleted workspaces and transfer ownership to Garbage Collection Service Accounts'\n+- description: >\n+    Find billing projects associated with deleted workspaces and transfer ownership to\n+    designated \"Garbage Collection\" Service Accounts. This process works around the lack of API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjY2MDU4OnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwMDo0Mjo0NFrOGTyNnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowNDowMFrOGUzNjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5ODgxMg==", "bodyText": "[opt / nit] This description will probably be overwhelming when shown in the App Engine cron UI. Most examples in Google's documentation are pretty short, and I assume the table UI isn't well-optimized for paragraph-length description strings.\nThis content is helpful context though\u2014it could just as easily go in the method comments on bulkSyncComplianceTrainingStatus. In fact, having this level of detail closer to the code may be a better place, since that's where someone who is maintaining or updating the business logic will end up first.\n(This conciseness consideration applies equally to all descriptions, but this one is the only multi-paragraph one where I'd be concerned.)", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r423398812", "createdAt": "2020-05-12T00:42:44Z", "author": {"login": "gjuggler"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2Mzc1OA==", "bodyText": "Sounds good. FWIW the UI is pretty responsive and reflows the text well.", "url": "https://github.com/all-of-us/workbench/pull/3562#discussion_r424463758", "createdAt": "2020-05-13T14:04:00Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/webapp/WEB-INF/cron_default.yaml", "diffHunk": "@@ -4,24 +4,44 @@ cron:\n   schedule: every 3 hours\n   timezone: UTC\n   target: api\n-- description: 'Daily sync of compliance training status (via Moodle API)'\n+- description: |\n+    Daily sync of compliance training status (via Moodle API). This is just a backup to the primary", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzM5ODgxMg=="}, "originalCommit": {"oid": "0e3b19bd89752c4ba007ec642aeae2ed8f2dad15"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2903, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}