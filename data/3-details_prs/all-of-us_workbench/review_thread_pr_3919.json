{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTU0NTI5", "number": 3919, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxOToyN1rOEcTl1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNzoyNlrOEcwdRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MTE2NTY1OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/swagger3codegen/aouTracedMethodCall.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxOToyN1rOHGwZtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoxOToyN1rOHGwZtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg0NjUxOQ==", "bodyText": "@gjuggler FYI, I have spawned an additional set of templates here to support swagger 3. The patch was relatively straightforward to apply against the swagger3 codegen - these templates didn't change much.", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r476846519", "createdAt": "2020-08-25T23:19:27Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/swagger3codegen/aouTracedMethodCall.mustache", "diffHunk": "@@ -0,0 +1,34 @@\n+        // Generate an OpenCensus tracing span for this API method call.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab948c3f02090c96935bfbe399205fc56663d812"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTY3MzY2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/notebooks/NotebooksConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMDoyNzo1OVrOHHchjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMToyNjowN1rOHHeUpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTQyMA==", "bodyText": "so... are we using one API for the Jupyter/Welder proxy calls and a different one for the non-proxy Leonardo endpoints?", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477569420", "createdAt": "2020-08-26T20:27:59Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/notebooks/NotebooksConfig.java", "diffHunk": "@@ -20,8 +20,13 @@\n public class NotebooksConfig {\n   public static final String USER_CLUSTER_API = \"userClusterApi\";\n   public static final String SERVICE_CLUSTER_API = \"svcClusterApi\";\n+\n+  // Identifiers for the older Swagger2 APIs for Jupyter and Welder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e640e94d639ff85aa2ba588834839e9f53a2943"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU5ODg4NA==", "bodyText": "Yep, clarified comment.", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477598884", "createdAt": "2020-08-26T21:26:07Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/notebooks/NotebooksConfig.java", "diffHunk": "@@ -20,8 +20,13 @@\n public class NotebooksConfig {\n   public static final String USER_CLUSTER_API = \"userClusterApi\";\n   public static final String SERVICE_CLUSTER_API = \"svcClusterApi\";\n+\n+  // Identifiers for the older Swagger2 APIs for Jupyter and Welder.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzU2OTQyMA=="}, "originalCommit": {"oid": "1e640e94d639ff85aa2ba588834839e9f53a2943"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTg4OTA2OnYy", "diffSide": "RIGHT", "path": "api/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNToxM1rOHHekzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNToxM1rOHHekzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzAyMQ==", "bodyText": "RE generateSwaggerCode: see new comment here", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603021", "createdAt": "2020-08-26T21:35:13Z", "author": {"login": "calbach"}, "path": "api/build.gradle", "diffHunk": "@@ -299,15 +339,18 @@ classes.dependsOn 'generatedClasses'\n project.tasks.ideaModule.dependsOn(generateSwaggerCode)\n \n // Java plugin's Generated Source Set gives us the compileGeneratedJava task.\n-// We need to provide it with the swagger-codegen tasks that output Java.\n+// We need to provide it with the swagger-codegen tasks that output Java; this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67bdffe847333720aae7317e1d51c1cef3e6b832"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTg5MzI2OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/notebooks.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNjo0OFrOHHenYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNjo0OFrOHHenYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzY4Mg==", "bodyText": "RE notebooks.yaml: good catch, fixed.", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603682", "createdAt": "2020-08-26T21:36:48Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/notebooks.yaml", "diffHunk": "@@ -1,7 +1,11 @@\n # This file is a hand-crafted combination of Leo and its proxy APIs.\n-#  - All of Leo: https://github.com/broadinstitute/leonardo/blob/develop/src/main/resources/swagger/api-docs.yaml\n #  - A subset of Welder (modified for cluster/path prefix): https://github.com/DataBiosphere/welder/blob/master/server/src/main/resources/api-docs.yaml\n #  - A subset of Jupyter (modified for cluster/path prefix): https://github.com/jupyter/notebook/blob/master/notebook/services/api/api.yaml\n+#\n+# TODO(calbach): Remove the following once the client-side codegen can support", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67bdffe847333720aae7317e1d51c1cef3e6b832"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTg5NTEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClientImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNzoyNlrOHHeojw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQyMTozNzoyNlrOHHeojw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzYwMzk4Mw==", "bodyText": "APparently this status API was exclusively checking prod... nice... Fixed that, which should resolve the integration test issues.", "url": "https://github.com/all-of-us/workbench/pull/3919#discussion_r477603983", "createdAt": "2020-08-26T21:37:26Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClientImpl.java", "diffHunk": "@@ -214,15 +222,15 @@ public void localize(String googleProject, String clusterName, Map<String, Strin\n   public StorageLink createStorageLink(\n       String googleProject, String clusterName, StorageLink storageLink) {\n     NotebooksApi notebooksApi = notebooksApiProvider.get();\n-    return retryHandler.run(\n+    return notebooksRetryHandler.run(\n         (context) -> notebooksApi.welderCreateStorageLink(googleProject, clusterName, storageLink));\n   }\n \n   @Override\n   public boolean getNotebooksStatus() {\n     try {\n-      new StatusApi().getSystemStatus();\n-    } catch (ApiException e) {\n+      serviceInfoApiProvider.get().getSystemStatus();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67bdffe847333720aae7317e1d51c1cef3e6b832"}, "originalPosition": 150}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2340, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}