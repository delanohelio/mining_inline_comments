{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDg4NDU1", "number": 4176, "title": "[noTicket][risk=low] Task to delete workspace from Rdr export", "bodyText": "Workbench send recently created/modified workspace information to RDR daily. The workspaces picked for export are as follows:\n\nworkspace id does not exist in rdr_export <- this usually means that the workspace has been\ncreated since the last time cron job is run\nworkspace's lastModifiedTime > export_date_time in rdr_export table <- this means that the workspace has been modified since the last time cron job is run\n\nThere are sometimes (maybe in case of bugs), where already exported workspace data are not in sync between workbench and RDR . In such cases, we need to make the workspace eligible for re-export. The best way to do that without manipulating real workspace data is to remove the entry from rdr_export table.\nThe project.rb command delete-workspace-rdr-expor does that. It takes in list of workspace ids to be delete from rdr_export making it eligible to be picked up by next rdr export cron job\n\nThis task will have the following arguments\n\n\nDRY_RUN\n\n\nPROJECT\n\n\nworkspace-list-filename : Txt file with comma separated list of workspace Ids\n\n\nThis could be the starting point on how to solve the issue of re-exporting workspaces to RDR.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-10-16T01:35:18Z", "url": "https://github.com/all-of-us/workbench/pull/4176", "merged": true, "mergeCommit": {"oid": "7af626e89382cfdf5af31a8e8fd00af18e8b900b"}, "closed": true, "closedAt": "2020-10-26T18:46:16Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS8He8gH2gAyNTA0NDg4NDU1OjBkNzUyODI4ZDQxOTdlNDgyYTc3YmIxZTNiZjMyMTg3NGI4ODBkNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUGVQTAH2gAyNTA0NDg4NDU1OjM5MGUwODYyMmQ1YjMwNDZlZWY4ZTNjZTk0MmY4MWU4ZmY4NTM1OTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0d752828d4197e482a77bb1e3bf321874b880d76", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/0d752828d4197e482a77bb1e3bf321874b880d76", "committedDate": "2020-10-16T01:30:21Z", "message": "Task to delete workspace fromrdr export"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5OTU1MTE0", "url": "https://github.com/all-of-us/workbench/pull/4176#pullrequestreview-509955114", "createdAt": "2020-10-16T01:35:40Z", "commit": {"oid": "0d752828d4197e482a77bb1e3bf321874b880d76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMTozNTo0MFrOHih5hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwMTozNTo0MFrOHih5hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk2OTAzMQ==", "bodyText": "Open for a different name. Can be reExportWorkspace", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r505969031", "createdAt": "2020-10-16T01:35:40Z", "author": {"login": "NehaBroad"}, "path": "api/build.gradle", "diffHunk": "@@ -690,6 +690,16 @@ task deleteWorkspaces(type: JavaExec) {\n   }\n }\n \n+// See project.rb command: export-rdr-workspaces\n+task deleteWorkspaceFromRdrExport(type: JavaExec) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d752828d4197e482a77bb1e3bf321874b880d76"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7961c96edc7dc4e6041124e70d49b0f18c1ed36", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d7961c96edc7dc4e6041124e70d49b0f18c1ed36", "committedDate": "2020-10-16T01:36:19Z", "message": "Spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/798bfe3d28d9c6d12593af6542cf2258f2abf801", "committedDate": "2020-10-16T01:42:48Z", "message": "Use Test env if not specified"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTcxMDU3", "url": "https://github.com/all-of-us/workbench/pull/4176#pullrequestreview-510571057", "createdAt": "2020-10-16T15:20:39Z", "commit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNToyMDozOVrOHjEn4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNjozNzowMVrOHjH7vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjUzNzk1NQ==", "bodyText": "Could you add \"entry\" here?  I suspect that some day in the future the words \"deleting workspace X\" may be scary.", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r506537955", "createdAt": "2020-10-16T15:20:39Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -341,6 +341,25 @@ public void updateDbRdrExport(RdrEntity entity, List<Long> idList) {\n     rdrExportDao.save(exportList);\n   }\n \n+  /**\n+   * Delete the workspace entries from rdr_export Table to make them eligible for next export cron\n+   * job\n+   *\n+   * @param workspaceIds\n+   */\n+  @Override\n+  public void deleteWorkspaceExportEntries(List<Long> workspaceIds) {\n+    workspaceIds.forEach(\n+        workspaceId -> {\n+          try {\n+            rdrExportDao.deleteDbRdrExportsByEntityTypeAndEntityId(\n+                RdrEntityEnums.entityToStorage(RdrEntity.WORKSPACE), workspaceId);\n+          } catch (Exception ex) {\n+            log.severe(String.format(\"Error while trying to delete workspace %s\", workspaceId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0MTMzNw==", "bodyText": "If you have a file like\nid1\nid2\nid3\nid4\n\nThis will delete each workspace entry individually.  Is that desirable?  We may want to collect all the workspace IDs in the file first.", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r506541337", "createdAt": "2020-10-16T15:24:06Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/DeleteFromRdrExport.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.time.Clock;\n+import java.util.List;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import javax.inject.Provider;\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.DefaultParser;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+import org.pmiops.workbench.db.dao.RdrExportDao;\n+import org.pmiops.workbench.db.dao.UserDao;\n+import org.pmiops.workbench.db.dao.VerifiedInstitutionalAffiliationDao;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.rdr.RdrExportService;\n+import org.pmiops.workbench.rdr.RdrExportServiceImpl;\n+import org.pmiops.workbench.rdr.api.RdrApi;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.context.annotation.Bean;\n+\n+public class DeleteFromRdrExport {\n+  private static final Logger log = Logger.getLogger(DeleteWorkspaces.class.getName());\n+\n+  private static Option workspaceListFilename =\n+      Option.builder()\n+          .longOpt(\"workspace-list-filename\")\n+          .desc(\"File containing list of workspaces Ids\")\n+          .required()\n+          .hasArg()\n+          .build();\n+  private static Option dryRunOpt =\n+      Option.builder()\n+          .longOpt(\"dry-run\")\n+          .desc(\"If specified, the tool runs in dry run mode; no modifications are made\")\n+          .build();\n+\n+  private static Options options =\n+      new Options().addOption(workspaceListFilename).addOption(dryRunOpt);\n+\n+  public static void main(String[] args) {\n+    CommandLineToolConfig.runCommandLine(DeleteFromRdrExport.class, args);\n+  }\n+\n+  @Bean\n+  public RdrExportService rdrExportService(\n+      Clock clock,\n+      Provider<RdrApi> rdrApiProvider,\n+      RdrExportDao rdrExportDao,\n+      WorkspaceDao workspaceDao,\n+      UserDao userDao,\n+      VerifiedInstitutionalAffiliationDao verifiedInstitutionalAffiliationDao) {\n+    return new RdrExportServiceImpl(\n+        clock,\n+        rdrApiProvider,\n+        rdrExportDao,\n+        null,\n+        workspaceDao,\n+        null,\n+        null,\n+        userDao,\n+        verifiedInstitutionalAffiliationDao);\n+  }\n+\n+  @Bean\n+  public CommandLineRunner run(RdrExportService rdrExportService) {\n+    return (args) -> {\n+      CommandLine opts = new DefaultParser().parse(options, args);\n+      boolean dryRun = opts.hasOption(dryRunOpt.getLongOpt());\n+      try (BufferedReader reader =\n+          new BufferedReader(\n+              new FileReader(opts.getOptionValue(workspaceListFilename.getLongOpt())))) {\n+        reader\n+            .lines()\n+            .forEach(\n+                line -> {\n+                  List<Long> workspaceIds =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0NzI0NQ==", "bodyText": "The actual command to run is delete-workspace-rdr-export", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r506547245", "createdAt": "2020-10-16T15:30:40Z", "author": {"login": "jmthibault79"}, "path": "api/build.gradle", "diffHunk": "@@ -690,6 +690,16 @@ task deleteWorkspaces(type: JavaExec) {\n   }\n }\n \n+// See project.rb command: delete_workspace_rdr_export", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU0OTgzMg==", "bodyText": "This name works for me", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r506549832", "createdAt": "2020-10-16T15:33:28Z", "author": {"login": "jmthibault79"}, "path": "api/build.gradle", "diffHunk": "@@ -690,6 +690,16 @@ task deleteWorkspaces(type: JavaExec) {\n   }\n }\n \n+// See project.rb command: export-rdr-workspaces\n+task deleteWorkspaceFromRdrExport(type: JavaExec) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTk2OTAzMQ=="}, "originalCommit": {"oid": "0d752828d4197e482a77bb1e3bf321874b880d76"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU5MjE4OQ==", "bodyText": "Please add a log line after this one similar to the dry run", "url": "https://github.com/all-of-us/workbench/pull/4176#discussion_r506592189", "createdAt": "2020-10-16T16:37:01Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/DeleteFromRdrExport.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.tools;\n+\n+import java.io.BufferedReader;\n+import java.io.FileReader;\n+import java.time.Clock;\n+import java.util.List;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+import javax.inject.Provider;\n+import org.apache.commons.cli.CommandLine;\n+import org.apache.commons.cli.DefaultParser;\n+import org.apache.commons.cli.Option;\n+import org.apache.commons.cli.Options;\n+import org.pmiops.workbench.db.dao.RdrExportDao;\n+import org.pmiops.workbench.db.dao.UserDao;\n+import org.pmiops.workbench.db.dao.VerifiedInstitutionalAffiliationDao;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.rdr.RdrExportService;\n+import org.pmiops.workbench.rdr.RdrExportServiceImpl;\n+import org.pmiops.workbench.rdr.api.RdrApi;\n+import org.springframework.boot.CommandLineRunner;\n+import org.springframework.context.annotation.Bean;\n+\n+public class DeleteFromRdrExport {\n+  private static final Logger log = Logger.getLogger(DeleteWorkspaces.class.getName());\n+\n+  private static Option workspaceListFilename =\n+      Option.builder()\n+          .longOpt(\"workspace-list-filename\")\n+          .desc(\"File containing list of workspaces Ids\")\n+          .required()\n+          .hasArg()\n+          .build();\n+  private static Option dryRunOpt =\n+      Option.builder()\n+          .longOpt(\"dry-run\")\n+          .desc(\"If specified, the tool runs in dry run mode; no modifications are made\")\n+          .build();\n+\n+  private static Options options =\n+      new Options().addOption(workspaceListFilename).addOption(dryRunOpt);\n+\n+  public static void main(String[] args) {\n+    CommandLineToolConfig.runCommandLine(DeleteFromRdrExport.class, args);\n+  }\n+\n+  @Bean\n+  public RdrExportService rdrExportService(\n+      Clock clock,\n+      Provider<RdrApi> rdrApiProvider,\n+      RdrExportDao rdrExportDao,\n+      WorkspaceDao workspaceDao,\n+      UserDao userDao,\n+      VerifiedInstitutionalAffiliationDao verifiedInstitutionalAffiliationDao) {\n+    return new RdrExportServiceImpl(\n+        clock,\n+        rdrApiProvider,\n+        rdrExportDao,\n+        null,\n+        workspaceDao,\n+        null,\n+        null,\n+        userDao,\n+        verifiedInstitutionalAffiliationDao);\n+  }\n+\n+  @Bean\n+  public CommandLineRunner run(RdrExportService rdrExportService) {\n+    return (args) -> {\n+      CommandLine opts = new DefaultParser().parse(options, args);\n+      boolean dryRun = opts.hasOption(dryRunOpt.getLongOpt());\n+      try (BufferedReader reader =\n+          new BufferedReader(\n+              new FileReader(opts.getOptionValue(workspaceListFilename.getLongOpt())))) {\n+        reader\n+            .lines()\n+            .forEach(\n+                line -> {\n+                  List<Long> workspaceIds =\n+                      Stream.of(line.split(\",\")).map(Long::parseLong).collect(Collectors.toList());\n+                  if (!dryRun) {\n+                    rdrExportService.deleteWorkspaceExportEntries(workspaceIds);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "798bfe3d28d9c6d12593af6542cf2258f2abf801"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bbf6ba8833d73e9a1bacee1569fc40769befb51", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/0bbf6ba8833d73e9a1bacee1569fc40769befb51", "committedDate": "2020-10-19T15:19:58Z", "message": "PR Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "390e08622d5b3046eef8e3ce942f81e8ff853590", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/390e08622d5b3046eef8e3ce942f81e8ff853590", "committedDate": "2020-10-19T15:58:22Z", "message": "Add comment DeleteFromRdrExport class"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3975, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}