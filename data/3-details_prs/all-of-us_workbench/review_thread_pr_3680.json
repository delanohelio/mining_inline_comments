{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTU2OTIz", "number": 3680, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjoyNDoxM1rOEGK7zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjozOVrOEGgEQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTA2MDYxOnYy", "diffSide": "RIGHT", "path": "e2e/app/page/cohort-criteria-modal.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjoyNDoxM1rOGkzYuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjoyNDoxM1rOGkzYuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0MzgzMw==", "bodyText": "The modal class value was changed without knowing who changed. It's quick and easy update to make test pass again.", "url": "https://github.com/all-of-us/workbench/pull/3680#discussion_r441243833", "createdAt": "2020-06-17T02:24:13Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/cohort-criteria-modal.ts", "diffHunk": "@@ -9,7 +9,7 @@ import Dialog, {ButtonLabel} from 'app/component/dialog';\n import SelectMenu from 'app/component/select-menu';\n import Table from 'app/component/table';\n \n-const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class)), \" crit-modal-container\")]';\n+const defaultXpath = '//*[@class=\"modal-container\"]';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f6e9b4c6f77da69fe2b4794c9c89862899b566"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjUyMjg4OnYy", "diffSide": "RIGHT", "path": "e2e/app/component/concept-domain-card.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjozOVrOGlVsKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMToyMzoxN1rOGlcdvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTg2NQ==", "bodyText": "these 2 functions are nearly identical, so we can use common code", "url": "https://github.com/all-of-us/workbench/pull/3680#discussion_r441805865", "createdAt": "2020-06-17T20:12:39Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/component/concept-domain-card.ts", "diffHunk": "@@ -0,0 +1,68 @@\n+import {Page} from 'puppeteer';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import Button from 'app/element/button';\n+import Container from 'app/container';\n+\n+export enum Domain {\n+   Conditions = 'Conditions',\n+   DrugExposures = 'Drug Exposures',\n+   Measurements = 'Measurements',\n+   Observations =  'Observations',\n+   Procedures = 'Procedures',\n+}\n+\n+const domainCardSelector = {\n+  cardXpath: '//*[@data-test-id=\"domain-box\"]',\n+}\n+\n+export default class ConceptDomainCard extends Container {\n+\n+  static findDomainCard(page: Page, domain: Domain): ConceptDomainCard {\n+    const selector = `${domainCardSelector.cardXpath}[child::*[@tabindex=\"0\" and @role=\"button\" and text()=\"${domain}\"]]`;\n+    return new ConceptDomainCard(page, selector);\n+  }\n+\n+  private constructor(page: Page, xpath: string) {\n+    super(page, xpath);\n+  }\n+\n+  async clickSelectConceptButton(): Promise<void> {\n+    const selectConceptButton = await this.getSelectConceptButton();\n+    await selectConceptButton.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"conceptTable\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+   /**\n+    * Find displayed number of Participants in this domain.\n+    */\n+  async getParticipantsCount(): Promise<string> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d574f6171198144affbdb59bc4f69c7a6b35b3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkxNjg2Mg==", "bodyText": "yes. made a common function\nprivate async extractConceptsCount(selector: string): Promise<string> {\n    const elemt = await this.page.waitForXPath(selector, {visible: true});\n    const textContent = await elemt.getProperty('textContent');\n    const value = (await textContent.jsonValue()).toString();\n    const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n    return (regex.exec(value))[0];\n  }\n\nnew function is called in getConceptsCount() and getParticipantsCount().", "url": "https://github.com/all-of-us/workbench/pull/3680#discussion_r441916862", "createdAt": "2020-06-18T01:23:17Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/concept-domain-card.ts", "diffHunk": "@@ -0,0 +1,68 @@\n+import {Page} from 'puppeteer';\n+import {waitWhileLoading} from 'utils/test-utils';\n+import Button from 'app/element/button';\n+import Container from 'app/container';\n+\n+export enum Domain {\n+   Conditions = 'Conditions',\n+   DrugExposures = 'Drug Exposures',\n+   Measurements = 'Measurements',\n+   Observations =  'Observations',\n+   Procedures = 'Procedures',\n+}\n+\n+const domainCardSelector = {\n+  cardXpath: '//*[@data-test-id=\"domain-box\"]',\n+}\n+\n+export default class ConceptDomainCard extends Container {\n+\n+  static findDomainCard(page: Page, domain: Domain): ConceptDomainCard {\n+    const selector = `${domainCardSelector.cardXpath}[child::*[@tabindex=\"0\" and @role=\"button\" and text()=\"${domain}\"]]`;\n+    return new ConceptDomainCard(page, selector);\n+  }\n+\n+  private constructor(page: Page, xpath: string) {\n+    super(page, xpath);\n+  }\n+\n+  async clickSelectConceptButton(): Promise<void> {\n+    const selectConceptButton = await this.getSelectConceptButton();\n+    await selectConceptButton.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"conceptTable\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+   /**\n+    * Find displayed number of Participants in this domain.\n+    */\n+  async getParticipantsCount(): Promise<string> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTg2NQ=="}, "originalCommit": {"oid": "10d574f6171198144affbdb59bc4f69c7a6b35b3"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2531, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}