{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1Mzk3MTMw", "number": 3678, "title": "[RW-4957][risk=no] UI to update verified institutional affiliation", "bodyText": "A UI for the API developed in #3627. Plus a small change on the API side to make that API actually work \ud83d\ude43\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-06-16T18:31:45Z", "url": "https://github.com/all-of-us/workbench/pull/3678", "merged": true, "mergeCommit": {"oid": "90a47282b5e895296f7bdb66905e88199faeb984"}, "closed": true, "closedAt": "2020-06-19T17:45:41Z", "author": {"login": "als364"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqmyIXgH2gAyNDM1Mzk3MTMwOjUzOGFjOTVmN2FlZWU5NTgwYzlmYWYzZTcyYWExZTkyMjE5MDNhZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs1UQxgH2gAyNDM1Mzk3MTMwOjFjODE5NWRlZGI2NmIzM2Q1NzhiYjU4MDIxNmQxOTcyODFmOTkzMzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "538ac95f7aeee9580c9faf3e72aa1e9221903ad5", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/538ac95f7aeee9580c9faf3e72aa1e9221903ad5", "committedDate": "2020-06-12T18:02:03Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebcc09b9ca66915ce7f7bca00f461e547cf15ca9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/ebcc09b9ca66915ce7f7bca00f461e547cf15ca9", "committedDate": "2020-06-16T15:33:41Z", "message": "make the update actually work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4206326ceadee289045706da372b76c8875c3ad7", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/4206326ceadee289045706da372b76c8875c3ad7", "committedDate": "2020-06-16T17:59:50Z", "message": "validate.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/77735f506d908c4d5d614a70cf3175530e470187", "committedDate": "2020-06-16T18:25:00Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzg5ODU5", "url": "https://github.com/all-of-us/workbench/pull/3678#pullrequestreview-431789859", "createdAt": "2020-06-16T18:36:26Z", "commit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozNjoyNlrOGkoWkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozNjoyNlrOGkoWkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MzA1Ng==", "bodyText": "this whole block is kind of janky and I expect the entire thing to get deleted by RW-4980.", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441063056", "createdAt": "2020-06-16T18:36:26Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -705,11 +710,26 @@ private void updateProfileForUser(DbUser user, Profile updatedProfile, Profile p\n     user.setLastModifiedTime(now);\n \n     updateInstitutionalAffiliations(updatedProfile, user);\n-    if (workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification) {\n+    boolean requireInstitutionalVerification =\n+        workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification;\n+    if (requireInstitutionalVerification) {\n       profileService.validateInstitutionalAffiliation(updatedProfile);\n     }\n \n     userService.updateUserWithConflictHandling(user);\n+    if (requireInstitutionalVerification) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57b61b59b72a912378b322f0f13b9851c8762307", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/57b61b59b72a912378b322f0f13b9851c8762307", "committedDate": "2020-06-16T20:06:44Z", "message": "typo ugh ugh ugh"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODM4NTgx", "url": "https://github.com/all-of-us/workbench/pull/3678#pullrequestreview-431838581", "createdAt": "2020-06-16T19:46:48Z", "commit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTo0Njo0OFrOGkqqfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowOTozM1rOGkrXgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMDkyNw==", "bodyText": "That sounds about right - but it fits the current state of things", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441100927", "createdAt": "2020-06-16T19:46:48Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -705,11 +710,26 @@ private void updateProfileForUser(DbUser user, Profile updatedProfile, Profile p\n     user.setLastModifiedTime(now);\n \n     updateInstitutionalAffiliations(updatedProfile, user);\n-    if (workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification) {\n+    boolean requireInstitutionalVerification =\n+        workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification;\n+    if (requireInstitutionalVerification) {\n       profileService.validateInstitutionalAffiliation(updatedProfile);\n     }\n \n     userService.updateUserWithConflictHandling(user);\n+    if (requireInstitutionalVerification) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MzA1Ng=="}, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMTkwNA==", "bodyText": "There's a component in common for this.  Could this be used instead?", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441101904", "createdAt": "2020-06-16T19:48:43Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMjQ0OA==", "bodyText": "Hooray for reuse.  Should this go up a level or two?  A little weird for Profile Edit to be referring to this file.  Maybe some kind of institution/common", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441112448", "createdAt": "2020-06-16T20:09:33Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/common.tsx", "diffHunk": "@@ -158,3 +160,21 @@ export const OptionalDropDownSection = (props) => {\n   </DropDownSection>;\n };\n \n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57b61b59b72a912378b322f0f13b9851c8762307"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6793cb511b0b1680b5fda28c4f16df55203e0db3", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/6793cb511b0b1680b5fda28c4f16df55203e0db3", "committedDate": "2020-06-16T20:15:27Z", "message": "actually don't need these"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b446460ce9aae5ba624ba5c3e825098cddcdf743", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/b446460ce9aae5ba624ba5c3e825098cddcdf743", "committedDate": "2020-06-16T20:35:51Z", "message": "set old to new"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fe104137f9f779b91863ad7f2fb8b2bac7a930a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/6fe104137f9f779b91863ad7f2fb8b2bac7a930a", "committedDate": "2020-06-16T21:02:51Z", "message": "move things to different places"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b17c71d495c13d355d6249827cda0a4dd22c6cf", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1b17c71d495c13d355d6249827cda0a4dd22c6cf", "committedDate": "2020-06-16T21:13:42Z", "message": "added test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5cdaaca28d052f1b2986c80d50af215bbdcdc6b", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/f5cdaaca28d052f1b2986c80d50af215bbdcdc6b", "committedDate": "2020-06-16T21:20:03Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODI1NTk4", "url": "https://github.com/all-of-us/workbench/pull/3678#pullrequestreview-431825598", "createdAt": "2020-06-16T19:27:22Z", "commit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyNzoyMlrOGkqC8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMTo0MToyMlrOGkuLRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDgwMg==", "bodyText": "nit: disabled= spacing", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441090802", "createdAt": "2020-06-16T19:27:22Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MjE1MQ==", "bodyText": "nit: Does this work as onChange={onChange} ?", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441092151", "createdAt": "2020-06-16T19:29:58Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -43,14 +47,15 @@ const freeCreditLimitOptions = [\n   {label: '$800', value: 800}\n ];\n \n-const ReadonlyInputWithLabel = ({label, content, dataTestId, inputStyle = {}}) => {\n+const TextInputWithLabel = ({label, content, dataTestId, onChange = (value) => {}, disabled= false, inputStyle = {}}) => {\n   return <FlexColumn data-test-id={dataTestId} style={{marginTop: '1rem'}}>\n     <label style={styles.semiBold}>{label}</label>\n     <TextInput\n         value={content || ''} // react yells at me if this is null\n-        disabled\n+        disabled={disabled}\n+        onChange={(value) => onChange(value)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw==", "bodyText": "How would you feel about consolidating verifiedInstitutionOptions and verifiedInstitutionsByShortname into one piece of state called institutions (or possibly sortedInstitutions)? From institutions we could compute, on the fly the data we need for the options and short name.  This would eliminate a piece of state, would eliminate the Map - which can be cumbersome to work with in lodash, and eliminate the native reduce (bouncing between native methods and lodash adds a bit of cognitive overhead)", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441120587", "createdAt": "2020-06-16T20:25:49Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMjIwNw==", "bodyText": "I believe this can be simplified to:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n          \n          \n            \n                    fp.sortBy('displayName', institutions)", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441122207", "createdAt": "2020-06-16T20:28:27Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMzM2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return fp.map(\n          \n          \n            \n                  institution => {\n          \n          \n            \n                    return {label: institution.displayName, value: institution.shortName};\n          \n          \n            \n                  },\n          \n          \n            \n                  verifiedInstitutionOptions\n          \n          \n            \n                );\n          \n          \n            \n            return fp.map(({displayName, shortName}) => ({label: displayName, value: shortname}), verifiedInstitutionOptions)", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441123363", "createdAt": "2020-06-16T20:30:36Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MTg2MQ==", "bodyText": "Consider trying to perform the state change in one operation with flow:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const {verifiedInstitutionsByShortname} = this.state;\n          \n          \n            \n                this.setState(fp.flow(\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],institutionShortName),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'], fp.find(['shortName', institutionShortName], sortedInstitutions).displayName),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined),\n          \n          \n            \n                    fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined)\n          \n          \n            \n                ))", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441141861", "createdAt": "2020-06-16T21:06:07Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0Mzc3NA==", "bodyText": "Take a look at optional chaining  with a ternary here - it may clean this up a bit\nIf that works, it may work for a few of the functions below as well", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441143774", "createdAt": "2020-06-16T21:10:00Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  updateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;\n+    this.setState({loading: true});\n+    profileApi().updateVerifiedInstitutionalAffiliation(updatedProfile.userId, updatedProfile.verifiedInstitutionalAffiliation).then(() => {\n+      this.setState({loading: false});\n+    });\n+  }\n+\n+  validateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;\n+    if (updatedProfile) {\n+      if (updatedProfile.verifiedInstitutionalAffiliation) {\n+        return updatedProfile.verifiedInstitutionalAffiliation;\n+      }\n+      return false;\n+    }\n+    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDExNg==", "bodyText": "Similar thought as above wrt using fp.flow", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441144116", "createdAt": "2020-06-16T21:10:34Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0OTg2MA==", "bodyText": "nit: consider further destructuring\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                const {updatedProfile} = this.state;\n          \n          \n            \n            const {updatedProfile: {userId, verifiedInstitutionalAffiliation}} = this.state", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441149860", "createdAt": "2020-06-16T21:22:31Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({\n+        verifiedInstitutionOptions: fp.sortBy( institution => institution.displayName, institutions),\n+        verifiedInstitutionsByShortname: institutions.reduce(\n+          (accumulator, institution) => accumulator.set(institution.shortName, institution),\n+          new Map<String, PublicInstitutionDetails>()\n+        )\n+      });\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(\n+      institution => {\n+        return {label: institution.displayName, value: institution.shortName};\n+      },\n+      verifiedInstitutionOptions\n+    );\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionsByShortname} = this.state;\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'],\n+        institutionShortName\n+      )\n+    );\n+    this.setState(\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+        verifiedInstitutionsByShortname.get(institutionShortName).displayName\n+        )\n+    );\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionRoleEnum'], undefined));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  setInstitutionalRoleOnProfile(institutionalRoleEnum: InstitutionalRole) {\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleEnum'], institutionalRoleEnum));\n+    this.setState(fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'], undefined));\n+  }\n+\n+  updateVerifiedInstitutionalAffiliation() {\n+    const {updatedProfile} = this.state;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1MjkyMA==", "bodyText": "I am a little confused on the introduction of oldProfile. It seems to replace saveDisabled, but the saveDisabled state is still getting set in a few places, but never read. The oldProfile also does not get updated. A few questions:\n\nWhen the profile is updated and saved, it seems like the save button will still be enabled (I may be wrong) - is this intentional?\nWould it be unreasonable to revert back to one profile state, and setting saveDisabled to false in setVerifiedInstitutionOnProfile?", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441152920", "createdAt": "2020-06-16T21:28:40Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -114,10 +121,12 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     this.state = {\n       institutionsLoadingError: '',\n       loading: true,\n-      profile: null,\n+      oldProfile: null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1NjE1MQ==", "bodyText": "Do we have a standard around using native find (and other array functions), or utilize lodash find in these cases?\nMy personal preference is to keep things consistent with lodash, which also has other benefits like auto currying.\nAlso, a few nits - could this be changed to destructure out organizationTypeEnum (reassigning the name in the destructure). Could shortName be destructured out as well?", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441156151", "createdAt": "2020-06-16T21:35:58Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/login/account-creation/common.tsx", "diffHunk": "@@ -158,3 +160,21 @@ export const OptionalDropDownSection = (props) => {\n   </DropDownSection>;\n };\n \n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):\n+    Array<{label: string, value: InstitutionalRole}> => {\n+  if (isBlank(institutionShortName)) {\n+    return [];\n+  }\n+\n+  const selectedOrgType = institutions.find(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE1ODQ2OA==", "bodyText": "Do we have a standard around using native find (and other array functions), or utilize lodash find in these cases?\nMy personal preference is to keep things consistent with lodash, which also has other benefits like auto currying.\nAlso, a few nits - could this be changed to destructure out organizationTypeEnum (reassigning the name in the destructure). Could shortName be destructured out as well?", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r441158468", "createdAt": "2020-06-16T21:41:22Z", "author": {"login": "petesantos"}, "path": "ui/src/app/utils/institutions.tsx", "diffHunk": "@@ -0,0 +1,21 @@\n+import {AccountCreationOptions} from 'app/pages/login/account-creation/account-creation-options';\n+import {InstitutionalRole, PublicInstitutionDetails} from 'generated/fetch';\n+import {isBlank} from './index';\n+\n+export const getRoleOptions = (institutions: Array<PublicInstitutionDetails>, institutionShortName: string):\n+    Array<{ label: string, value: InstitutionalRole }> => {\n+  if (isBlank(institutionShortName)) {\n+    return [];\n+  }\n+\n+  const selectedOrgType = institutions.find(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5cdaaca28d052f1b2986c80d50af215bbdcdc6b"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTE0MjQx", "url": "https://github.com/all-of-us/workbench/pull/3678#pullrequestreview-431914241", "createdAt": "2020-06-16T21:44:31Z", "commit": {"oid": "f5cdaaca28d052f1b2986c80d50af215bbdcdc6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12e58ba884fc806f8109f13dab3054321b5c8c3c", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/12e58ba884fc806f8109f13dab3054321b5c8c3c", "committedDate": "2020-06-17T20:27:38Z", "message": "some more review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3bb3ea81a028dd69c822d30db632f43dcb9bf5", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/be3bb3ea81a028dd69c822d30db632f43dcb9bf5", "committedDate": "2020-06-18T19:11:09Z", "message": "institution checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "015fd1941dea759de54fbc2ec2d49c42cfdef075", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/015fd1941dea759de54fbc2ec2d49c42cfdef075", "committedDate": "2020-06-18T20:38:55Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d95a303a77ac6e5496c6510f09a091c27afaa3cc", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/d95a303a77ac6e5496c6510f09a091c27afaa3cc", "committedDate": "2020-06-18T20:45:57Z", "message": "get rid of state"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTExNjk2", "url": "https://github.com/all-of-us/workbench/pull/3678#pullrequestreview-434111696", "createdAt": "2020-06-19T14:15:39Z", "commit": {"oid": "d95a303a77ac6e5496c6510f09a091c27afaa3cc"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoxNTozOVrOGmWYcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoyMTowNlrOGmWjsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2NTc3Nw==", "bodyText": "nit: Do we need to grab the property after the find when setting the institutionDisplayName", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442865777", "createdAt": "2020-06-19T14:15:39Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -132,36 +148,202 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     }\n   }\n \n+  componentWillUnmount(): void {\n+    if (this.aborter) {\n+      this.aborter.abort();\n+    }\n+  }\n+\n+  async checkEmail() {\n+    const {\n+      updatedProfile: {\n+        contactEmail,\n+        verifiedInstitutionalAffiliation: {institutionShortName}\n+      }\n+    } = this.state;\n+\n+    // Cancel any outstanding API calls.\n+    if (this.aborter) {\n+      this.aborter.abort();\n+    }\n+    this.aborter = new AbortController();\n+    this.setState({checkEmailResponse: null});\n+\n+    // Early-exit with no result if either input is blank.\n+    if (!institutionShortName || isBlank(contactEmail)) {\n+      return;\n+    }\n+\n+    try {\n+      const result = await validateEmail(contactEmail, institutionShortName, this.aborter);\n+      this.setState({\n+        checkEmailError: '',\n+        checkEmailResponse: result\n+      });\n+    } catch (e) {\n+      this.setState({\n+        checkEmailError: 'Error validating user email against institution - please refresh page and try again',\n+        checkEmailResponse: null,\n+      });\n+    }\n+  }\n+\n   async getUser() {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;\n+      this.setState({verifiedInstitutionOptions: fp.sortBy( 'displayName', institutions)});\n     } catch (error) {\n       this.setState({institutionsLoadingError: 'Could not get list of verified institutions - please try again later'});\n     }\n   }\n \n+  getRoleOptionsForProfile() {\n+    const {updatedProfile: {verifiedInstitutionalAffiliation}, verifiedInstitutionOptions} = this.state;\n+    const institutionShortName = verifiedInstitutionalAffiliation ? verifiedInstitutionalAffiliation.institutionShortName : '';\n+    return getRoleOptions(verifiedInstitutionOptions, institutionShortName);\n+  }\n+\n+  getInstitutionDropdownOptions() {\n+    const {verifiedInstitutionOptions} = this.state;\n+    return fp.map(({displayName, shortName}) => ({label: displayName, value: shortName}), verifiedInstitutionOptions);\n+  }\n+\n+  isSaveDisabled(errors) {\n+    const {oldProfile, updatedProfile} = this.state;\n+    return fp.isEqual(oldProfile, updatedProfile) || errors;\n+  }\n+\n+  renderCheckEmailResponse() {\n+    const {checkEmailResponse, updatedProfile, verifiedInstitutionOptions} = this.state;\n+    if (updatedProfile && updatedProfile.verifiedInstitutionalAffiliation) {\n+      if (checkEmailResponse.isValidMember) {\n+        return null;\n+      } else {\n+        const {verifiedInstitutionalAffiliation} = updatedProfile;\n+        const institution = fp.find(\n+            institution => institution.shortName === verifiedInstitutionalAffiliation.institutionShortName,\n+            verifiedInstitutionOptions\n+        );\n+        if (institution.duaTypeEnum === DuaType.RESTRICTED) {\n+          // Institution has signed Restricted agreement and the email is not in allowed emails list\n+          return <RestrictedDuaEmailMismatchErrorMessage/>;\n+        } else {\n+          // Institution has MASTER or NULL agreement and the domain is not in the allowed list\n+          return <MasterDuaEmailMismatchErrorMessage/>;\n+        }\n+      }\n+    }\n+    return null;\n+  }\n+\n+  async setVerifiedInstitutionOnProfile(institutionShortName: string) {\n+    const {verifiedInstitutionOptions} = this.state;\n+    await this.setState({loading: true});\n+    await this.setState(fp.flow(\n+      fp.set(['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionShortName'], institutionShortName),\n+      fp.set(\n+          ['updatedProfile', 'verifiedInstitutionalAffiliation', 'institutionDisplayName'],\n+          verifiedInstitutionOptions.find(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d95a303a77ac6e5496c6510f09a091c27afaa3cc"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg2ODY1Nw==", "bodyText": "Thanks for doing that!", "url": "https://github.com/all-of-us/workbench/pull/3678#discussion_r442868657", "createdAt": "2020-06-19T14:21:06Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -136,32 +145,134 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     const {gsuiteDomain} = serverConfigStore.getValue();\n     try {\n       const profile = await profileApi().getUserByUsername(this.props.urlParams.usernameWithoutGsuiteDomain + '@' + gsuiteDomain);\n-      this.setState({profile: profile});\n+      this.setState({oldProfile: profile, updatedProfile: profile});\n     } catch (error) {\n       this.setState({profileLoadingError: 'Could not find user - please check spelling of username and try again'});\n     }\n   }\n \n   async getInstitutions() {\n     try {\n-      const institutionsResponse = await institutionApi().getInstitutions();\n-      const options = fp.map(\n-        institution => {\n-          return {\n-            'label': institution.displayName ? institution.displayName : institution.shortName,\n-            'value': {displayName: institution.displayName, shortName: institution.shortName}\n-          };\n-        },\n-        institutionsResponse.institutions\n-      );\n-      this.setState({verifiedInstitutionOptions: options});\n+      const institutionsResponse = await institutionApi().getPublicInstitutionDetails();\n+      const institutions = institutionsResponse.institutions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyMDU4Nw=="}, "originalCommit": {"oid": "77735f506d908c4d5d614a70cf3175530e470187"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f033b1f595b9d3d38344ebe1c3f867c8bfe2972", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1f033b1f595b9d3d38344ebe1c3f867c8bfe2972", "committedDate": "2020-06-19T15:33:31Z", "message": "actually set displayname"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c8195dedb66b33d578bb580216d197281f99336", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1c8195dedb66b33d578bb580216d197281f99336", "committedDate": "2020-06-19T16:05:51Z", "message": "lint'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4575, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}