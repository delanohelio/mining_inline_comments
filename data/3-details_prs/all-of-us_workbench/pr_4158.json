{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMDg4OTgy", "number": 4158, "title": "[risk=no] Better logging for fetch() errors", "bodyText": "New log:\nERROR Error: 404 @ https://api-dot-all-of-us-workbench-test.appspot.com/v1/workspaces/aou-rw-test-456ce8de/asdf: {\"message\":\"DbWorkspace aou-rw-test-456ce8de/asdf not found.\",\"statusCode\":404,\"errorClassName\":\"org.pmiops.workbench.exceptions.NotFoundException\",\"errorCode\":null,\"errorUniqueId\":\"6483011e-e250-47c2-8b67-711fa3ce27f5\"}", "createdAt": "2020-10-14T03:58:34Z", "url": "https://github.com/all-of-us/workbench/pull/4158", "merged": true, "mergeCommit": {"oid": "75d6603a16d2e922ad3a8e27d3bbc9c0c96e10b3"}, "closed": true, "closedAt": "2020-10-14T23:09:12Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSVBfBAH2gAyNTAzMDg4OTgyOjU3YWU0MmFmZjNhOTdhNzU2NjBkYmFhNTE0OTUxYmEwZGQwNmRiYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSlfp0AFqTUwODgzMjMwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "57ae42aff3a97a75660dbaa514951ba0dd06dbad", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/57ae42aff3a97a75660dbaa514951ba0dd06dbad", "committedDate": "2020-10-14T03:57:30Z", "message": "Better logging for fetch() errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NDEwNTU3", "url": "https://github.com/all-of-us/workbench/pull/4158#pullrequestreview-508410557", "createdAt": "2020-10-14T14:30:46Z", "commit": {"oid": "57ae42aff3a97a75660dbaa514951ba0dd06dbad"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozMDo0NlrOHhWAsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNDozMDo0NlrOHhWAsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDcyNTY4MQ==", "bodyText": "Does changing this to async have any impacts that would be relevant - like changing the order that the error messages appear in, in the log?", "url": "https://github.com/all-of-us/workbench/pull/4158#discussion_r504725681", "createdAt": "2020-10-14T14:30:46Z", "author": {"login": "petesantos"}, "path": "ui/src/app/services/error-reporter.service.ts", "diffHunk": "@@ -31,26 +31,33 @@ export class ErrorReporterService extends ErrorHandler {\n     });\n   }\n \n-  handleError(error: any) {\n-    // Always log to console regardless of whether Stackdriver is enabled.\n-    super.handleError(error);\n-    if (!this.stackdriverReporter) {\n+  /**\n+   * Unwrap to avoid vague top-level errors like: \"Promise rejected: {}\". This method\n+   * mutates the incoming error in order to allow preservation of the original stack trace.\n+   */\n+  private async expandErrorMessage(error: any): Promise<any> {\n+    if (!error.rejection || !(error.rejection instanceof Response)) {\n       return;\n     }\n \n-\n-    // We want to avoid sending XHR errors to stackdriver because they should\n-    // already be being logged by the API with the stacktrace and information\n-    // we care about.\n-\n-    // xhrError is set to true by the interceptor. The rejection piece handles\n-    // return values from promises that error out.\n-    if (error.rejection && error.rejection.xhrError) {\n+    const httpResp = error.rejection;\n+    const prefix = `${httpResp.status} @ ${httpResp.url}`;\n+    if (httpResp.bodyUsed) {\n+      error.message = prefix;\n       return;\n     }\n-    // The check on xhrError explicitly handles error values that are returned from direct\n-    // api errors, rather than promises.\n-    if (error.xhrError) {\n+    const json = JSON.stringify(await httpResp.json());\n+    error.message = `${prefix}: ${json}`;\n+    return;\n+  }\n+\n+  async handleError(error: any) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57ae42aff3a97a75660dbaa514951ba0dd06dbad"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODMyMzAz", "url": "https://github.com/all-of-us/workbench/pull/4158#pullrequestreview-508832303", "createdAt": "2020-10-14T23:08:56Z", "commit": {"oid": "57ae42aff3a97a75660dbaa514951ba0dd06dbad"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3954, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}