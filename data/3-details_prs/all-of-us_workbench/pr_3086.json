{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTQ5NjYx", "number": 3086, "title": "[risk=no][RW-4377] Puppeteer new workspace-ui.spec test", "bodyText": "A simple workspace-detail UI test that verify elements existence and havior of a checkbox.", "createdAt": "2020-02-04T17:03:34Z", "url": "https://github.com/all-of-us/workbench/pull/3086", "merged": true, "mergeCommit": {"oid": "6359aecd73104bc302c61c689d0508c27eb90070"}, "closed": true, "closedAt": "2020-02-12T20:16:03Z", "author": {"login": "aweng98"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8jAJCgH2gAyMzcwOTQ5NjYxOmJmYzgxNjhmMGU0NmMyYTBkNmFmYTIyMGFhZTQ4OTk2ZGRiNTI5Yjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDsHplAFqTM1Nzc1NDYyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bfc8168f0e46c2a0d6afa220aae48996ddb529b7", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/bfc8168f0e46c2a0d6afa220aae48996ddb529b7", "committedDate": "2020-01-21T15:37:13Z", "message": "save"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45e24656331787c98cdc151d1ada195230162140", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/45e24656331787c98cdc151d1ada195230162140", "committedDate": "2020-02-04T17:00:05Z", "message": "created new test workspace-ui.spec.ts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d7ba75c97aaaabd643a7009b464f4624c1078e4", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/6d7ba75c97aaaabd643a7009b464f4624c1078e4", "committedDate": "2020-02-05T17:53:30Z", "message": "switch puppeteer-core to puppeteer lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08d4417a449c0416dd475c6654c938e393611033", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/08d4417a449c0416dd475c6654c938e393611033", "committedDate": "2020-02-05T19:05:05Z", "message": "remove chromePath"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTk4OTIw", "url": "https://github.com/all-of-us/workbench/pull/3086#pullrequestreview-353198920", "createdAt": "2020-02-04T18:23:03Z", "commit": {"oid": "45e24656331787c98cdc151d1ada195230162140"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODoyMzowM1rOFlej7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjo0NDowNFrOFmJwuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0MjM0OA==", "bodyText": "This line fails the linter: variable name must be in lowerCamelCase, PascalCase or UPPER_CASE", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r374842348", "createdAt": "2020-02-04T18:23:03Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/Workspaces.ts", "diffHunk": "@@ -0,0 +1,181 @@\n+import {ElementHandle, JSHandle} from 'puppeteer-core';\n+import authenticatedpage from '../pages/authenticatedpage';\n+import Button from '../pages/elements/button';\n+import Checkbox from '../pages/elements/checkbox';\n+import Input from '../pages/elements/input';\n+import Radio from '../pages/elements/radio';\n+import radio from '../pages/elements/radio';\n+import {waitUntilNetworkIdle} from '../services/page-wait';\n+import ProjectPurposeQuestion from './workspace-element';\n+\n+const configs = require('../config/config');\n+const selectors = {\n+  pageTitleRegex: '/(Create|View) Workspaces?/i',\n+   // select - Synthetic DataSet\n+  dataSet: 'input[type=text][placeholder=\"Workspace Name\"] + div[id] > select', // css\n+   // input - Workspace Name\n+  workspaceName: '//*[normalize-space(@placeholder)=\"Workspace Name\"][@type=\"text\"]',\n+   // input - required when Disease-focused research is checked\n+  nameOfDisease: '//*[normalize-space(@placeholder)=\"Name of Disease\"][@type=\"text\"]',\n+   // textarea - Other Purpose: required when Other Purpose is checked\n+  otherPurpose: '//*[normalize-space(text())=\\'Other Purpose\\']/following-sibling::*/textarea',\n+   // question #2 textarea (required): Provide the reason for choosing All of Us data for your investigation\n+   // xpath with full texts\n+  question2: '//*[starts-with(normalize-space(.), \\'2. Provide the reason for choosing All of Us data for your investigation\\')]/following-sibling::*/textarea',\n+   // question #3 textarea (required)\n+  question3: '//*[starts-with(normalize-space(.), \\'3. What are the specific scientific question(s) you intend to study\\')]/following-sibling::*/textarea',\n+   // question #4 textarea (required)\n+  question4: '//*[starts-with(normalize-space(.), \\'4. What are your anticipated findings from this study\\')]/following-sibling::*/textarea',\n+   // request review Yes or No radiobutton\n+  radio_request_review_yes: '//*[label[contains(normalize-space(.),\\'Would you like to request a review of your research purpose\\')]]/following-sibling::*/input[@type=\\'radio\\'][following-sibling::label[1]/text()=\\'Yes\\']',\n+  radio_request_review_no: '//*[label[contains(normalize-space(.),\\'Would you like to request a review of your research purpose\\')]]/following-sibling::*/input[@type=\\'radio\\'][following-sibling::label[1]/text()=\\'No\\']',\n+};\n+\n+class CommonFields extends authenticatedpage {\n+\n+  public async input_workspace_name(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.workspaceName, { visible: true });\n+  }\n+\n+  public async select_dataSet(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitFor(selectors.dataSet, { visible: true });\n+  }\n+\n+  public async checkbox_forProfitPurpose(): Promise<ElementHandle> {\n+    return new Checkbox(this.puppeteerPage, 'For-Profit Purpose').get();\n+  }\n+\n+  public element_diseaseName(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Disease-focused research');\n+  }\n+\n+  public element_question1_populationHealth(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Population Health/Public Health Research');\n+  }\n+\n+  public element_question1_MethodsDevelopment(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Methods development/validation study');\n+  }\n+\n+  public element_question1_DrugTherapeuticsDevelopment(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Drug/Therapeutics Development Research');\n+  }\n+\n+  public element_question1_ResearchControl(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Research Control');\n+  }\n+\n+  public element_question1_EducationalPurpose(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Educational Purpose');\n+  }\n+\n+  public element_question1_GeneticResearch(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Genetic Research');\n+  }\n+\n+  public element_question1_SocialBehavioralResearch(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Social/Behavioral Research');\n+  }\n+\n+  public element_question1_OtherPurpose(): ProjectPurposeQuestion {\n+    return new ProjectPurposeQuestion(this.puppeteerPage, 'Other Purpose');\n+  }\n+\n+  public async textarea_OtherPurpose(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.otherPurpose);\n+  }\n+\n+   // required field\n+  public async textarea_question2(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.question2);\n+  }\n+\n+// required field\n+  public async textarea_question3(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.question3);\n+  }\n+\n+// required field\n+  public async textarea_question4(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.question4);\n+  }\n+\n+  public async radiobutton_request_review_yes(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.radio_request_review_yes);\n+  }\n+\n+  public async radiobutton_request_review_no(): Promise<ElementHandle> {\n+    return await this.puppeteerPage.waitForXPath(selectors.radio_request_review_no);\n+  }\n+\n+}\n+\n+export default class Workspaces extends CommonFields {\n+\n+  public buttonCreateWorkspace = new Button(this.puppeteerPage,'Create Workspace');\n+  public radiobutton_question5_notFocusingSpecificPopulation = new Radio(this.puppeteerPage, 'No, I am not interested in focusing on specific population(s) in my research');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e24656331787c98cdc151d1ada195230162140"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg0MjcwMQ==", "bodyText": "Fails linter: console.log() not allowed", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r374842701", "createdAt": "2020-02-04T18:23:41Z", "author": {"login": "jmthibault79"}, "path": "e2e/browser/ChromeBrowser.ts", "diffHunk": "@@ -0,0 +1,71 @@\n+import * as chromePaths from 'chrome-paths';\n+import * as Puppeteer from 'puppeteer-core';\n+import GoogleLoginPage from '../pages/google-login';\n+\n+const configs = require('../config/config');\n+\n+export default class ChromeBrowser {\n+\n+  public chromeSwitches = [\n+    '--no-sandbox',\n+    '--disable-setuid-sandbox',\n+    '--disable-dev-shm-usage',\n+    '--disable-gpu',\n+    '--disable-background-timer-throttling',\n+    '--disable-backgrounding-occluded-windows',\n+    '--disable-renderer-backgrounding',\n+  ];\n+\n+  public launchOpts = {\n+    headless: configs.isHeadless,\n+    devtools: false,\n+    slowMo: 50,\n+    executablePath: chromePaths.chrome,\n+    defaultViewport: null,\n+    args: this.chromeSwitches\n+  };\n+\n+  public userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.87 Safari/537.36';\n+\n+  public browser: Puppeteer.Browser;\n+  public page;\n+  private readonly incognito: boolean;\n+\n+  constructor(incognito?: boolean) {\n+    this.incognito = incognito || true;\n+  }\n+\n+  public async newBrowser(opts?): Promise<Puppeteer.Browser> {\n+    const launchOptions = opts || this.launchOpts;\n+    return this.browser = await Puppeteer.launch(launchOptions);\n+  }\n+\n+  public async newPage(browser?: Puppeteer.Browser): Promise<Puppeteer.Page> {\n+    console.log(\"isHeadless: \" + configs.isHeadless);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45e24656331787c98cdc151d1ada195230162140"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0NTk5MA==", "bodyText": "Add text here describing how it needs to be an existing user in the Test environment without 2FA", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375545990", "createdAt": "2020-02-05T22:33:34Z", "author": {"login": "jmthibault79"}, "path": "e2e/README.md", "diffHunk": "@@ -1,21 +1,18 @@\n-# All-of-Us Test Automation with Puppeteer\n-Test using Jest as test runner and Puppeteer to perform automation tests in local installed Chrome browser.\n+# All-of-Us Test Automation with Puppeteer in Chrome\n \n-### Try running tests in localhost\n-#### clone github project\n+#### Clone github project\n - `git clone git@github.com:all-of-us/workbench.git`\n \n-#### set up login credential\n+#### Set up login credential\n - copy `.env.sample` file. Save new file as `.env` (do not commit `.env` file to version control)\n - edit `.env` to provide workbench login credential", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU0ODgwMA==", "bodyText": "can remove this now", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375548800", "createdAt": "2020-02-05T22:40:43Z", "author": {"login": "jmthibault79"}, "path": "e2e/package.json", "diffHunk": "@@ -50,18 +55,20 @@\n   \"engines\": {\n     \"node\": \">=8\"\n   },\n-  \"dependencies\": {},\n+  \"dependencies\": {\n+  },\n   \"devDependencies\": {\n+    \"@types/faker\": \"^4.1.9\",\n     \"@types/jest\": \"^24.0.21\",\n     \"@types/node\": \"^12.12.5\",\n-    \"@types/puppeteer-core\": \"^1.9.0\",\n+    \"@types/puppeteer\": \"^2.0.0\",\n+    \"puppeteer\": \"^2.1.1\",\n     \"chrome-paths\": \"^1.0.1\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1MDEzNg==", "bodyText": "this file is not related and should be removed", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375550136", "createdAt": "2020-02-05T22:44:04Z", "author": {"login": "jmthibault79"}, "path": "performance/yarn.lock", "diffHunk": "@@ -0,0 +1,4 @@\n+# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTAwMDUw", "url": "https://github.com/all-of-us/workbench/pull/3086#pullrequestreview-354100050", "createdAt": "2020-02-05T22:57:06Z", "commit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMjo1NzowNlrOFmKFBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzowNjozMVrOFmKSfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1NTMzMg==", "bodyText": "why are Home and Workspaces in different locations?", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375555332", "createdAt": "2020-02-05T22:57:06Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1NjgwMQ==", "bodyText": "how do these 2 lines differ in approach?", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375556801", "createdAt": "2020-02-05T23:00:53Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';\n+import Home from '../../pages/home';\n+import { getProperty } from '../../services/element-handler';\n+const Chrome = require('../../browser/ChromeBrowser');\n+\n+jest.setTimeout(60 * 1000);\n+\n+describe('Workspace-editing page', () => {\n+\n+  let page;\n+\n+  beforeEach(async () => {\n+    page = await Chrome.setup();\n+  });\n+\n+  afterEach(async () => {\n+    await Chrome.teardown();\n+  });\n+\n+  test('Can Create new workspace from Home page', async () => {\n+    const home = new Home(page);\n+    const link = await home.getCreateNewWorkspaceLink();\n+    expect(link).toBeTruthy();\n+    await link.click();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+    // check Workspace-Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+    // check dataset select options\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+  }, 60 * 1000);\n+\n+\n+  test('Create new workspace page', async () => {\n+    const workspaces = new Workspaces(page);\n+    await workspaces.goURL();\n+    await workspaces.click_button_CreateNewWorkspace();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+\n+    // webelement Disease-focused research: out-of-box\n+    const elementDiseaseName = await workspace.element_diseaseName();\n+    const diseaseNameCheckbox = await elementDiseaseName.checkbox();\n+    expect(diseaseNameCheckbox).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'checked')).toBeFalsy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'disabled')).toBeFalsy();\n+\n+    const diseaseNameTextInput = await elementDiseaseName.textfield();\n+    expect(diseaseNameTextInput).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameTextInput, 'disabled')).toBeTruthy();\n+\n+    // await (diseaseNameCheckbox).click(); // click checkbox to change", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1NzQxNQ==", "bodyText": "move these 2 checks above the checkbox checks, since they're first on the page", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375557415", "createdAt": "2020-02-05T23:02:29Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';\n+import Home from '../../pages/home';\n+import { getProperty } from '../../services/element-handler';\n+const Chrome = require('../../browser/ChromeBrowser');\n+\n+jest.setTimeout(60 * 1000);\n+\n+describe('Workspace-editing page', () => {\n+\n+  let page;\n+\n+  beforeEach(async () => {\n+    page = await Chrome.setup();\n+  });\n+\n+  afterEach(async () => {\n+    await Chrome.teardown();\n+  });\n+\n+  test('Can Create new workspace from Home page', async () => {\n+    const home = new Home(page);\n+    const link = await home.getCreateNewWorkspaceLink();\n+    expect(link).toBeTruthy();\n+    await link.click();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+    // check Workspace-Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+    // check dataset select options\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+  }, 60 * 1000);\n+\n+\n+  test('Create new workspace page', async () => {\n+    const workspaces = new Workspaces(page);\n+    await workspaces.goURL();\n+    await workspaces.click_button_CreateNewWorkspace();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+\n+    // webelement Disease-focused research: out-of-box\n+    const elementDiseaseName = await workspace.element_diseaseName();\n+    const diseaseNameCheckbox = await elementDiseaseName.checkbox();\n+    expect(diseaseNameCheckbox).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'checked')).toBeFalsy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'disabled')).toBeFalsy();\n+\n+    const diseaseNameTextInput = await elementDiseaseName.textfield();\n+    expect(diseaseNameTextInput).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameTextInput, 'disabled')).toBeTruthy();\n+\n+    // await (diseaseNameCheckbox).click(); // click checkbox to change\n+    await page.evaluate(elem => elem.click(), diseaseNameCheckbox);\n+    // TODO wait async for checked and disabled checking or test will fail\n+    await page.waitFor(1000);\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'checked')).toBeTruthy();\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'disabled')).toBeFalsy();\n+\n+\n+    // check Workspace Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1Nzg2MQ==", "bodyText": "there's a For Profit Purpose box in here as well", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375557861", "createdAt": "2020-02-05T23:03:45Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';\n+import Home from '../../pages/home';\n+import { getProperty } from '../../services/element-handler';\n+const Chrome = require('../../browser/ChromeBrowser');\n+\n+jest.setTimeout(60 * 1000);\n+\n+describe('Workspace-editing page', () => {\n+\n+  let page;\n+\n+  beforeEach(async () => {\n+    page = await Chrome.setup();\n+  });\n+\n+  afterEach(async () => {\n+    await Chrome.teardown();\n+  });\n+\n+  test('Can Create new workspace from Home page', async () => {\n+    const home = new Home(page);\n+    const link = await home.getCreateNewWorkspaceLink();\n+    expect(link).toBeTruthy();\n+    await link.click();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+    // check Workspace-Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+    // check dataset select options\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+  }, 60 * 1000);\n+\n+\n+  test('Create new workspace page', async () => {\n+    const workspaces = new Workspaces(page);\n+    await workspaces.goURL();\n+    await workspaces.click_button_CreateNewWorkspace();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+\n+    // webelement Disease-focused research: out-of-box\n+    const elementDiseaseName = await workspace.element_diseaseName();\n+    const diseaseNameCheckbox = await elementDiseaseName.checkbox();\n+    expect(diseaseNameCheckbox).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'checked')).toBeFalsy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'disabled')).toBeFalsy();\n+\n+    const diseaseNameTextInput = await elementDiseaseName.textfield();\n+    expect(diseaseNameTextInput).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameTextInput, 'disabled')).toBeTruthy();\n+\n+    // await (diseaseNameCheckbox).click(); // click checkbox to change\n+    await page.evaluate(elem => elem.click(), diseaseNameCheckbox);\n+    // TODO wait async for checked and disabled checking or test will fail\n+    await page.waitFor(1000);\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'checked')).toBeTruthy();\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'disabled')).toBeFalsy();\n+\n+\n+    // check Workspace Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+\n+    // check dataset select option\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+\n+    // check all fields in Question #1. What is the primary purpose of your project?\n+    expect(await workspace.element_question1_populationHealth().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_MethodsDevelopment().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_DrugTherapeuticsDevelopment().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_ResearchControl().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_EducationalPurpose().checkbox()).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODQzOQ==", "bodyText": "Please check that these boxes are disabled and unchecked to start, and that choosing Yes here will enable them.", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375558439", "createdAt": "2020-02-05T23:05:40Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';\n+import Home from '../../pages/home';\n+import { getProperty } from '../../services/element-handler';\n+const Chrome = require('../../browser/ChromeBrowser');\n+\n+jest.setTimeout(60 * 1000);\n+\n+describe('Workspace-editing page', () => {\n+\n+  let page;\n+\n+  beforeEach(async () => {\n+    page = await Chrome.setup();\n+  });\n+\n+  afterEach(async () => {\n+    await Chrome.teardown();\n+  });\n+\n+  test('Can Create new workspace from Home page', async () => {\n+    const home = new Home(page);\n+    const link = await home.getCreateNewWorkspaceLink();\n+    expect(link).toBeTruthy();\n+    await link.click();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+    // check Workspace-Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+    // check dataset select options\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+  }, 60 * 1000);\n+\n+\n+  test('Create new workspace page', async () => {\n+    const workspaces = new Workspaces(page);\n+    await workspaces.goURL();\n+    await workspaces.click_button_CreateNewWorkspace();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+\n+    // webelement Disease-focused research: out-of-box\n+    const elementDiseaseName = await workspace.element_diseaseName();\n+    const diseaseNameCheckbox = await elementDiseaseName.checkbox();\n+    expect(diseaseNameCheckbox).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'checked')).toBeFalsy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'disabled')).toBeFalsy();\n+\n+    const diseaseNameTextInput = await elementDiseaseName.textfield();\n+    expect(diseaseNameTextInput).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameTextInput, 'disabled')).toBeTruthy();\n+\n+    // await (diseaseNameCheckbox).click(); // click checkbox to change\n+    await page.evaluate(elem => elem.click(), diseaseNameCheckbox);\n+    // TODO wait async for checked and disabled checking or test will fail\n+    await page.waitFor(1000);\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'checked')).toBeTruthy();\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'disabled')).toBeFalsy();\n+\n+\n+    // check Workspace Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+\n+    // check dataset select option\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+\n+    // check all fields in Question #1. What is the primary purpose of your project?\n+    expect(await workspace.element_question1_populationHealth().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_MethodsDevelopment().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_DrugTherapeuticsDevelopment().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_ResearchControl().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_EducationalPurpose().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_GeneticResearch().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_SocialBehavioralResearch()).toBeTruthy();\n+    expect(await workspace.element_question1_OtherPurpose().checkbox()).toBeTruthy();\n+    expect(await workspace.element_question1_OtherPurpose().textarea()).toBeTruthy();\n+    expect(await workspace.textarea_question2()).toBeTruthy();\n+    expect(await workspace.textarea_question3()).toBeTruthy();\n+    expect(await workspace.textarea_question4()).toBeTruthy();\n+\n+    // Question #5 out-of-box behavior\n+    expect(await workspace.radiobutton_question5_notFocusingSpecificPopulation.get()).toBeTruthy();\n+    expect(await workspace.radiobutton_question5_notFocusingSpecificPopulation.isChecked()).toBeTruthy();\n+\n+    // Question: Request a review ... out-of-box behavior\n+    expect(await workspace.radiobutton_request_review_yes()).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODc4Mg==", "bodyText": "can check that these are unchecked and enabled too", "url": "https://github.com/all-of-us/workbench/pull/3086#discussion_r375558782", "createdAt": "2020-02-05T23:06:31Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-ui.spec.ts", "diffHunk": "@@ -0,0 +1,105 @@\n+import Workspaces from '../../app/Workspaces';\n+import Home from '../../pages/home';\n+import { getProperty } from '../../services/element-handler';\n+const Chrome = require('../../browser/ChromeBrowser');\n+\n+jest.setTimeout(60 * 1000);\n+\n+describe('Workspace-editing page', () => {\n+\n+  let page;\n+\n+  beforeEach(async () => {\n+    page = await Chrome.setup();\n+  });\n+\n+  afterEach(async () => {\n+    await Chrome.teardown();\n+  });\n+\n+  test('Can Create new workspace from Home page', async () => {\n+    const home = new Home(page);\n+    const link = await home.getCreateNewWorkspaceLink();\n+    expect(link).toBeTruthy();\n+    await link.click();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+    // check Workspace-Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+    // check dataset select options\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+  }, 60 * 1000);\n+\n+\n+  test('Create new workspace page', async () => {\n+    const workspaces = new Workspaces(page);\n+    await workspaces.goURL();\n+    await workspaces.click_button_CreateNewWorkspace();\n+\n+    // check page title\n+    const actPageTitle = await page.title();\n+    expect(actPageTitle).toMatch('Create Workspace');\n+\n+    const workspace = new Workspaces(page);\n+\n+    // webelement Disease-focused research: out-of-box\n+    const elementDiseaseName = await workspace.element_diseaseName();\n+    const diseaseNameCheckbox = await elementDiseaseName.checkbox();\n+    expect(diseaseNameCheckbox).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'checked')).toBeFalsy();\n+    expect(await getProperty(page, diseaseNameCheckbox, 'disabled')).toBeFalsy();\n+\n+    const diseaseNameTextInput = await elementDiseaseName.textfield();\n+    expect(diseaseNameTextInput).toBeTruthy();\n+    expect(await getProperty(page, diseaseNameTextInput, 'disabled')).toBeTruthy();\n+\n+    // await (diseaseNameCheckbox).click(); // click checkbox to change\n+    await page.evaluate(elem => elem.click(), diseaseNameCheckbox);\n+    // TODO wait async for checked and disabled checking or test will fail\n+    await page.waitFor(1000);\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'checked')).toBeTruthy();\n+    expect(await getProperty(page, await elementDiseaseName.checkbox(), 'disabled')).toBeFalsy();\n+\n+\n+    // check Workspace Name textfield\n+    expect(await workspace.input_workspace_name()).toBeTruthy();\n+\n+    // check dataset select option\n+    expect(await workspace.select_dataSet()).toBeTruthy();\n+\n+    // check all fields in Question #1. What is the primary purpose of your project?\n+    expect(await workspace.element_question1_populationHealth().checkbox()).toBeTruthy();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08d4417a449c0416dd475c6654c938e393611033"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7def855b9a5ef2ecee6a25565b6bf9f6aeffd7aa", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/7def855b9a5ef2ecee6a25565b6bf9f6aeffd7aa", "committedDate": "2020-02-11T00:54:28Z", "message": "pr feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87bfb98cca76d5592b726104bcea92321506cc15", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/87bfb98cca76d5592b726104bcea92321506cc15", "committedDate": "2020-02-12T19:14:05Z", "message": "pr feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f355b44fd10f5d3845ef3529e9dbabf5db5fb6", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/39f355b44fd10f5d3845ef3529e9dbabf5db5fb6", "committedDate": "2020-02-12T19:24:10Z", "message": "restore accidentally deleted fake data files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f18e142abafe5ed6b2d94eac2d1b1aac86aff0ed", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f18e142abafe5ed6b2d94eac2d1b1aac86aff0ed", "committedDate": "2020-02-12T19:53:37Z", "message": "Revert \"pr feedback\"\n\nThis reverts commit 87bfb98cca76d5592b726104bcea92321506cc15."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3dec0cb47e8cca76b7b40b50f7c497244812540", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d3dec0cb47e8cca76b7b40b50f7c497244812540", "committedDate": "2020-02-12T19:54:49Z", "message": "revert commit 87bfb98cc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzU0NjIz", "url": "https://github.com/all-of-us/workbench/pull/3086#pullrequestreview-357754623", "createdAt": "2020-02-12T20:12:02Z", "commit": {"oid": "d3dec0cb47e8cca76b7b40b50f7c497244812540"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}