{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzUwOTEy", "number": 3594, "title": "[risk=no][RW-4927]Fix ToS/DUCC links", "bodyText": "Description:\nRemoved react-pdf and replaced the tos/ducc agreements with HTML files generated from the google docs. I Converted the files to docx, then used word to create HTML versions of the files to create the closes match to the formatted documents.\nThe HTML files are directly rendered in an iframe - no client side processing is needed.\nUnit and integration tests were updated.\nThe changes can be tested here:\nhttps://psantos-dot-all-of-us-workbench-test.appspot.com/\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-05-18T21:26:57Z", "url": "https://github.com/all-of-us/workbench/pull/3594", "merged": true, "mergeCommit": {"oid": "20c3e36b12bb6e43a001051ab81fc3997f861ba3"}, "closed": true, "closedAt": "2020-05-19T18:09:58Z", "author": {"login": "petesantos"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg9irqgH2gAyNDE5NzUwOTEyOmFmOGFlNzQwNmU0MmM3NTAyNGJhMTY4NjM3Njc4ZmZkMDBlYWY5NmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci4Y9NgH2gAyNDE5NzUwOTEyOmY1OGQzNGNiYzQwOTA5OWMyMTQ3MzJkMjU0ZjE5MTYyNWIxMDA1Y2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "af8ae7406e42c75024ba168637678ffd00eaf96a", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/af8ae7406e42c75024ba168637678ffd00eaf96a", "committedDate": "2020-05-13T18:53:45Z", "message": "Add tos html and image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49ba5f7f4fe2be42a0d956f895c3de4eda7e7f81", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/49ba5f7f4fe2be42a0d956f895c3de4eda7e7f81", "committedDate": "2020-05-14T12:14:22Z", "message": "Functioning HTML Viewer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e9901b1617b218024d478f8adbea822db74510d", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/7e9901b1617b218024d478f8adbea822db74510d", "committedDate": "2020-05-14T13:59:27Z", "message": "Update account creation spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e311dde847cbaa0e1c9fc025b93fc01654cf3c4", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/0e311dde847cbaa0e1c9fc025b93fc01654cf3c4", "committedDate": "2020-05-14T14:07:11Z", "message": "Correct intersection observer for firefox"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e759976186dc9e55ce623916c4223632b12c2a64", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/e759976186dc9e55ce623916c4223632b12c2a64", "committedDate": "2020-05-14T14:17:56Z", "message": "Rename variable from pdf to doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b81d6eb490921c91e7a42e85def92583e9ca226", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/3b81d6eb490921c91e7a42e85def92583e9ca226", "committedDate": "2020-05-14T14:28:22Z", "message": "Linting fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abd9a1ec9c75344d693f507c854a8f4fedde1b2", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/6abd9a1ec9c75344d693f507c854a8f4fedde1b2", "committedDate": "2020-05-14T17:29:31Z", "message": "Update app yaml to allow same origin iframes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "808e6803aa0bc2c3d32d1df6b7b300599cc30153", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/808e6803aa0bc2c3d32d1df6b7b300599cc30153", "committedDate": "2020-05-14T18:27:56Z", "message": "Update DUCC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab4c24db7544ddb7cb2f74e3d591f21325aeec83", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/ab4c24db7544ddb7cb2f74e3d591f21325aeec83", "committedDate": "2020-05-14T19:13:04Z", "message": "create default nop function for onLastPageRender"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb2b300244bfe555014bd8268ec24a0af58db86b", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/eb2b300244bfe555014bd8268ec24a0af58db86b", "committedDate": "2020-05-15T00:11:42Z", "message": "Dynamically add base tag to iframe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e67b044db9789f1c3c47a8e13a688804fae866a", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/7e67b044db9789f1c3c47a8e13a688804fae866a", "committedDate": "2020-05-15T12:15:48Z", "message": "ducc disable proceed button until end of page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef8af7829700583c093fe85a6f3cb099302ca5ad", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/ef8af7829700583c093fe85a6f3cb099302ca5ad", "committedDate": "2020-05-15T14:15:31Z", "message": "Add error handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d214d86a5cd1e0113c455fd29228d96e69a3e6e", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/8d214d86a5cd1e0113c455fd29228d96e69a3e6e", "committedDate": "2020-05-15T16:58:31Z", "message": "Add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22af374750a599ad27c38e89fe1336f5e6455002", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/22af374750a599ad27c38e89fe1336f5e6455002", "committedDate": "2020-05-18T20:53:06Z", "message": "Update tests, remove pdf references"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25b57461759c50baab9a85438b434f6c529ea9b6", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/25b57461759c50baab9a85438b434f6c529ea9b6", "committedDate": "2020-05-18T20:57:01Z", "message": "Linting and remove pdf's"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b979befcd3ab136e8cb5313139f882734ada152", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/7b979befcd3ab136e8cb5313139f882734ada152", "committedDate": "2020-05-18T21:16:11Z", "message": "revert workbench config change, update xpath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b657e199de7bc2b497bccc6ef1d059bb1d5823c", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/4b657e199de7bc2b497bccc6ef1d059bb1d5823c", "committedDate": "2020-05-18T21:30:07Z", "message": "correct xpath finder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/3c4a0137326edc1e307229592a8c769de364af15", "committedDate": "2020-05-19T13:13:38Z", "message": "Correct enzyme test issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDYwMjE0", "url": "https://github.com/all-of-us/workbench/pull/3594#pullrequestreview-414460214", "createdAt": "2020-05-19T13:44:45Z", "commit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NDo0NlrOGXhJqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NDo0NlrOGXhJqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxMzU3Ng==", "bodyText": "Hiding whitespace changes for this file will clean up the diff", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427313576", "createdAt": "2020-05-19T13:44:46Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.spec.tsx", "diffHunk": "@@ -95,66 +95,75 @@ describe('DataUserCodeOfConduct', () => {\n     expect(wrapper).toBeTruthy();\n   });\n \n-  it('should not allow DataUserCodeOfConduct without identical initials', async () => {\n+  it('should not allow DataUserCodeOfConduct without identical initials', async() => {\n     serverConfigStore.next({...defaultConfig, enableV3DataUserCodeOfConduct: true});\n     const wrapper = component();\n-    wrapper.find('[data-test-id=\"ducc-next-button\"]').simulate('click');\n-    await waitOneTickAndUpdate(wrapper);\n-    expect(wrapper.find('[data-test-id=\"submit-ducc-button\"]').prop('disabled')).toBeTruthy();\n-\n-    // fill required fields\n-    wrapper.find('[data-test-id=\"dua-initials-input\"]').forEach((node, index) => {\n-      node.simulate('change', {target: {value: 'X' + index.toString()}});\n+    wrapper.setState({proceedDisabled: false}, async() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDY0NzEx", "url": "https://github.com/all-of-us/workbench/pull/3594#pullrequestreview-414464711", "createdAt": "2020-05-19T13:49:25Z", "commit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0OToyNVrOGXhXEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1NzoyMlrOGXknDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNzAxMQ==", "bodyText": "nit: please add typedefs for function parameters and the return type.\nAlso, the single-object parameter pattern doesn't seem to be used elsewhere in the e2e directory. I'd switch to normal function params for consistency. (I generally treat consistency as less important than any documented style guide, and more important than any personal preference.)", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427317011", "createdAt": "2020-05-19T13:49:25Z", "author": {"login": "gjuggler"}, "path": "e2e/app/element/xpath-finder.ts", "diffHunk": "@@ -1,7 +1,26 @@\n-import {ElementHandle, Page, WaitForSelectorOptions} from 'puppeteer';\n+import {ElementHandle, Page, WaitForSelectorOptions, Frame} from 'puppeteer';\n import TextOptions from './text-options';\n import * as xpathDefaults from './xpath-defaults';\n \n+const waitForFn = async ({ fn, interval = 2000, timeout = 10000 }) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMzgwNw==", "bodyText": "The logic here seems fine \u2013 just throwing out a potentially simpler alternative async while loop approach, which may avoid some of the Promise boilerplate.\nwhile (Date.now() > start + timeout) {\n  await new Promise(resolve => setTimeout(resolve, interval));\n  if (fn()) {\n    return true;\n  }\n}\nreturn false;", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427323807", "createdAt": "2020-05-19T13:59:37Z", "author": {"login": "gjuggler"}, "path": "e2e/app/element/xpath-finder.ts", "diffHunk": "@@ -1,7 +1,26 @@\n-import {ElementHandle, Page, WaitForSelectorOptions} from 'puppeteer';\n+import {ElementHandle, Page, WaitForSelectorOptions, Frame} from 'puppeteer';\n import TextOptions from './text-options';\n import * as xpathDefaults from './xpath-defaults';\n \n+const waitForFn = async ({ fn, interval = 2000, timeout = 10000 }) => {\n+  const readyState = new Promise<{success?: Frame, intervalId: NodeJS.Timeout}>(resolve => {\n+    const start = Date.now()\n+    const currentInterval = setInterval(() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MDI4NA==", "bodyText": "I'm a little mystified by the Frame type annotation. Should this be a boolean?\n[After reading a bit further] Oh \u2013\u00a0the fn() is assumed to be a function that returns a Frame. That means this setup is significantly less general; I would either rename this to waitForFrame, or otherwise keep this function extremely generic and adjust the call site to re-collect the Frame after waiting for it to appear.", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427350284", "createdAt": "2020-05-19T14:32:45Z", "author": {"login": "gjuggler"}, "path": "e2e/app/element/xpath-finder.ts", "diffHunk": "@@ -1,7 +1,26 @@\n-import {ElementHandle, Page, WaitForSelectorOptions} from 'puppeteer';\n+import {ElementHandle, Page, WaitForSelectorOptions, Frame} from 'puppeteer';\n import TextOptions from './text-options';\n import * as xpathDefaults from './xpath-defaults';\n \n+const waitForFn = async ({ fn, interval = 2000, timeout = 10000 }) => {\n+  const readyState = new Promise<{success?: Frame, intervalId: NodeJS.Timeout}>(resolve => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1MzAxNA==", "bodyText": "You could refactor this slightly to allow waitForFn to return a Promise, and just extract the Frame after waiting:\nawait waitForFn(hasFrame);\nreturn hasFrame()", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427353014", "createdAt": "2020-05-19T14:36:08Z", "author": {"login": "gjuggler"}, "path": "e2e/app/element/xpath-finder.ts", "diffHunk": "@@ -126,3 +145,12 @@ export async function findImage(page: Page, label: string, waitOptions?: WaitFor\n   }\n   return page.waitForXPath(selector, waitOptions);\n }\n+\n+export async function findIframe(page: Page, label: string): Promise<Frame> {\n+  const iframeNode = await page.waitForXPath(xpathDefaults.iframeXpath(label))\n+  const srcHandle = await iframeNode.getProperty('src')\n+  const src = await srcHandle.jsonValue()\n+  const hasFrame = (): Frame => page.frames().find(frame => frame.url() === src)\n+\n+  return hasFrame() || await waitForFn({ fn: hasFrame })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM1NDUwOA==", "bodyText": "These changes seem sane, but @calbach is much closer to our CSP rules and may have comments.", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427354508", "createdAt": "2020-05-19T14:38:02Z", "author": {"login": "gjuggler"}, "path": "ui/app.yaml", "diffHunk": "@@ -12,7 +12,7 @@ handlers:\n     Strict-Transport-Security: \"max-age=31536000; includeSubDomains; preload\"\n     X-XSS-Protection: 1\n     X-Content-Type-Options: \"nosniff\"\n-    Content-Security-Policy: \"default-src 'none'; frame-ancestors 'none'; report-uri /content-security-report\"\n+    Content-Security-Policy: \"default-src 'none'; img-src 'self'; style-src 'unsafe-inline'; frame-ancestors 'self'; report-uri /content-security-report\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2NjMyMg==", "bodyText": "[opt / nit] Now that I look at this again, the naming here is silly... should probably be \"onLastPageView\" or something similar. Feel free to rename, or leave as-is if it will be a pain to change.", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427366322", "createdAt": "2020-05-19T14:52:33Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/components/html-viewer.tsx", "diffHunk": "@@ -0,0 +1,91 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {withWindowSize} from 'app/utils';\n+import * as React from 'react';\n+\n+\n+export interface Props {\n+  containerStyles?: React.CSSProperties;\n+  onLastPageRender: () => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2NzA3Nw==", "bodyText": "It should be possible to extend from WindowSizeProps for these \u2013\u00a0see https://github.com/all-of-us/workbench/blob/master/ui/src/app/pages/login/sign-in.tsx#L119-L119 for example usage.", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427367077", "createdAt": "2020-05-19T14:53:29Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/components/html-viewer.tsx", "diffHunk": "@@ -0,0 +1,91 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {withWindowSize} from 'app/utils';\n+import * as React from 'react';\n+\n+\n+export interface Props {\n+  containerStyles?: React.CSSProperties;\n+  onLastPageRender: () => void;\n+  filePath: string;\n+  ariaLabel: string;\n+  windowSize: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDI1NQ==", "bodyText": "[opt / nit] This one-liner is a bit clever with the array destructuring. Is there a built-in assumption here that our callback only ever needs to look at the first IntersectionObserverEntry? It's at least worth a comment justifying that, if so.", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427370255", "createdAt": "2020-05-19T14:57:22Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/components/html-viewer.tsx", "diffHunk": "@@ -0,0 +1,91 @@\n+import {SpinnerOverlay} from 'app/components/spinners';\n+import {withWindowSize} from 'app/utils';\n+import * as React from 'react';\n+\n+\n+export interface Props {\n+  containerStyles?: React.CSSProperties;\n+  onLastPageRender: () => void;\n+  filePath: string;\n+  ariaLabel: string;\n+  windowSize: {\n+    width: number,\n+    height: number\n+  };\n+}\n+\n+interface State {\n+  hasReadEntireDoc: boolean;\n+  iframeFailed: boolean;\n+  loading: boolean;\n+}\n+\n+export const HtmlViewer = withWindowSize()( class extends React.Component<Props,  State> {\n+  iframeRef: React.RefObject<any>;\n+\n+  constructor(props) {\n+    super(props);\n+\n+    this.state = {\n+      hasReadEntireDoc: false,\n+      iframeFailed: false,\n+      loading: true\n+    };\n+\n+    this.iframeRef = React.createRef();\n+  }\n+\n+  componentDidUpdate({}, {hasReadEntireDoc}) {\n+    const { onLastPageRender = () => false } = this.props;\n+    if (!hasReadEntireDoc && this.state.hasReadEntireDoc) {\n+      onLastPageRender();\n+    }\n+  }\n+\n+  private handleIframeLoaded() {\n+    try {\n+      const iframeDocument = this.iframeRef.current.contentDocument;\n+      const { body } = iframeDocument;\n+      const openLinksInNewTab = iframeDocument.createElement('base');\n+      const endOfPage = iframeDocument.createElement('div');\n+\n+      openLinksInNewTab.setAttribute('target', '_blank');\n+      body.prepend(openLinksInNewTab);\n+      body.appendChild(endOfPage);\n+\n+      const observer = new IntersectionObserver(\n+        ([{ isIntersecting }]) => isIntersecting && !this.state.hasReadEntireDoc && this.setState({ hasReadEntireDoc: true }),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTM2MDc2", "url": "https://github.com/all-of-us/workbench/pull/3594#pullrequestreview-414536076", "createdAt": "2020-05-19T14:58:10Z", "commit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1ODoxMFrOGXkpkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo1ODoxMFrOGXkpkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDg5OQ==", "bodyText": "I'm not familiar with using unsafe-inline for style-src. Could this have unintended consequences?", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427370899", "createdAt": "2020-05-19T14:58:10Z", "author": {"login": "als364"}, "path": "ui/app.yaml", "diffHunk": "@@ -12,7 +12,7 @@ handlers:\n     Strict-Transport-Security: \"max-age=31536000; includeSubDomains; preload\"\n     X-XSS-Protection: 1\n     X-Content-Type-Options: \"nosniff\"\n-    Content-Security-Policy: \"default-src 'none'; frame-ancestors 'none'; report-uri /content-security-report\"\n+    Content-Security-Policy: \"default-src 'none'; img-src 'self'; style-src 'unsafe-inline'; frame-ancestors 'self'; report-uri /content-security-report\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjQ4MDAx", "url": "https://github.com/all-of-us/workbench/pull/3594#pullrequestreview-414648001", "createdAt": "2020-05-19T17:01:45Z", "commit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzowMTo0NVrOGXp_Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzowMTo0NVrOGXp_Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1ODMxOQ==", "bodyText": "Yeah, this is OK. unsafe-inline is not ideal, but we have a similar requirement for rendering the notebook HTML previews; our hands are a bit tied since we don't have (or want to have) fine control over the generation of the HTML content.\nLater we could try to tune this a bit by only allowing unsafe-inline on specific affected resources, but it won't make a difference currently as I believe this is the only HTML served under this file pattern (the pattern below is used for our main index.html, and has its own CSP)", "url": "https://github.com/all-of-us/workbench/pull/3594#discussion_r427458319", "createdAt": "2020-05-19T17:01:45Z", "author": {"login": "calbach"}, "path": "ui/app.yaml", "diffHunk": "@@ -12,7 +12,7 @@ handlers:\n     Strict-Transport-Security: \"max-age=31536000; includeSubDomains; preload\"\n     X-XSS-Protection: 1\n     X-Content-Type-Options: \"nosniff\"\n-    Content-Security-Policy: \"default-src 'none'; frame-ancestors 'none'; report-uri /content-security-report\"\n+    Content-Security-Policy: \"default-src 'none'; img-src 'self'; style-src 'unsafe-inline'; frame-ancestors 'self'; report-uri /content-security-report\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3MDg5OQ=="}, "originalCommit": {"oid": "3c4a0137326edc1e307229592a8c769de364af15"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa6ddfec5cb93d2387bd5be4c5b424878c4576bf", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/aa6ddfec5cb93d2387bd5be4c5b424878c4576bf", "committedDate": "2020-05-19T17:17:52Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f160d2cc60adfa0baf35e5165a571cd7e794c42", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/9f160d2cc60adfa0baf35e5165a571cd7e794c42", "committedDate": "2020-05-19T17:32:39Z", "message": "Fix lint error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58d34cbc409099c214732d254f191625b1005ca", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/f58d34cbc409099c214732d254f191625b1005ca", "committedDate": "2020-05-19T18:01:27Z", "message": "Fix imports"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4745, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}