{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDI3NjE1", "number": 3579, "title": "[risk=moderate][RW-4972] Change checkEmail endpoint from GET to POST with email body", "bodyText": "Description:\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-05-12T23:29:42Z", "url": "https://github.com/all-of-us/workbench/pull/3579", "merged": true, "mergeCommit": {"oid": "5fc5a84f97c81dd04f25baefaf37007178ed127a"}, "closed": true, "closedAt": "2020-05-13T16:39:06Z", "author": {"login": "jmthibault79"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgs4WjAH2gAyNDE3MDI3NjE1OjM2MjdmN2VmMGFhMWVhNTcxOWE0ZTJkMTRiNzU1ZjM3M2ExMTkyMDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg6jz2AH2gAyNDE3MDI3NjE1OjgzYmZiMzk0OWUxMjc3NjBjODRjNzNjNDQ1OTk2MjE4NzE2YTI5NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3627f7ef0aa1ea5719a4e2d14b755f373a119207", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/3627f7ef0aa1ea5719a4e2d14b755f373a119207", "committedDate": "2020-05-12T23:29:02Z", "message": "new POST endpoint for checkEmail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6974c23f8a37ee8c2707f6c3defd6e06404adcff", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/6974c23f8a37ee8c2707f6c3defd6e06404adcff", "committedDate": "2020-05-12T23:29:02Z", "message": "use an object to avoid JSON/Swagger string problems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/426ea9fd11556d9948779a981c24e0cb24a9b4ee", "committedDate": "2020-05-12T23:29:03Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTgwOTcw", "url": "https://github.com/all-of-us/workbench/pull/3579#pullrequestreview-410980970", "createdAt": "2020-05-13T14:26:49Z", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoyNjo1MFrOGU0RVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoyNjo1MFrOGU0RVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MTEwOQ==", "bodyText": "I would prefer to use type: string here but something gets lost in translation.  The Typescript wrapper adds double quotes to the string it passes to the endpoint (so, a valid JSON String) but the Java endpoint here treats the JSON String as a Java String without parsing the quotes away.\nAn alternative solution would be to manually strip the quotes.  But that feels too reliant on Swagger implementation so I'd be concerned that this might change with an upgrade.", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424481109", "createdAt": "2020-05-13T14:26:50Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -2341,25 +2341,58 @@ paths:\n           description: The updated Institution.\n           schema:\n             \"$ref\": \"#/definitions/Institution\"\n-  \"/v1/institutions/{shortName}/checkEmail/{email}/\":\n+  \"/v1/institutions/{shortName}/checkEmail\":\n     parameters:\n     - in: path\n       name: shortName\n       type: string\n       description: 'The short name / key of the institution to check, e.g. \"VUMC\"'\n       required: true\n-    - in: path\n-      name: email\n-      type: string\n-      description: Institutional contact email address to check.\n-      required: true\n-    get:\n+    post:\n       tags:\n         - institution\n       operationId: checkEmail\n       description: Checks whether the given email address is a verified member of an institution.\n       x-aou-note: This endpoint is publicly-accessible and called by clients during user registration.\n       security: []\n+      parameters:\n+      - in: body\n+        name: contactEmail\n+        description: Institutional contact email address to check.\n+        required: true\n+        schema:\n+          type: object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTg1ODI1", "url": "https://github.com/all-of-us/workbench/pull/3579#pullrequestreview-410985825", "createdAt": "2020-05-13T14:31:38Z", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMTozOFrOGU0f3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMTozOFrOGU0f3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NDgyOA==", "bodyText": "keeping the old endpoint so as not to immediately break anything reliant on it.  https://precisionmedicineinitiative.atlassian.net/browse/RW-4948 removes it.", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424484828", "createdAt": "2020-05-13T14:31:38Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -2341,25 +2341,58 @@ paths:\n           description: The updated Institution.\n           schema:\n             \"$ref\": \"#/definitions/Institution\"\n-  \"/v1/institutions/{shortName}/checkEmail/{email}/\":\n+  \"/v1/institutions/{shortName}/checkEmail\":\n     parameters:\n     - in: path\n       name: shortName\n       type: string\n       description: 'The short name / key of the institution to check, e.g. \"VUMC\"'\n       required: true\n-    - in: path\n-      name: email\n-      type: string\n-      description: Institutional contact email address to check.\n-      required: true\n-    get:\n+    post:\n       tags:\n         - institution\n       operationId: checkEmail\n       description: Checks whether the given email address is a verified member of an institution.\n       x-aou-note: This endpoint is publicly-accessible and called by clients during user registration.\n       security: []\n+      parameters:\n+      - in: body\n+        name: contactEmail\n+        description: Institutional contact email address to check.\n+        required: true\n+        schema:\n+          type: object\n+          required:\n+            - value\n+          properties:\n+            value:\n+              type: string\n+              description: Institutional contact email address to check.\n+\n+      responses:\n+        200:\n+          description: Whether the email is a valid member of the institution.\n+          schema:\n+            \"$ref\": \"#/definitions/CheckEmailResponse\"\n+  \"/v1/institutions/{shortName}/checkEmail/{email}/\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTg2Njcw", "url": "https://github.com/all-of-us/workbench/pull/3579#pullrequestreview-410986670", "createdAt": "2020-05-13T14:32:27Z", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMjoyN1rOGU0iRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMjoyN1rOGU0iRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NTQ0NA==", "bodyText": "Swagger generated this class for us without asking.  neat!", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424485444", "createdAt": "2020-05-13T14:32:27Z", "author": {"login": "jmthibault79"}, "path": "ui/src/testing/stubs/institution-api-stub.ts", "diffHunk": "@@ -1,5 +1,6 @@\n import {\n   CheckEmailResponse,\n+  ContactEmail,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTg4MzQ5", "url": "https://github.com/all-of-us/workbench/pull/3579#pullrequestreview-410988349", "createdAt": "2020-05-13T14:34:04Z", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozNDowNFrOGU0nYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozNDowNFrOGU0nYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4Njc1NQ==", "bodyText": "If we find a way to make type: string work in Swagger, we wouldn't need to change UI code at all.", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424486755", "createdAt": "2020-05-13T14:34:04Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-institution.tsx", "diffHunk": "@@ -170,8 +170,7 @@ export class AccountCreationInstitution extends React.Component<Props, State> {\n     }\n \n     try {\n-      const result = await institutionApi().checkEmail(institutionShortName, contactEmail,\n-        {signal: this.aborter.signal});\n+      const result = await institutionApi().checkEmail(institutionShortName, {value: contactEmail}, {signal: this.aborter.signal});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTkyNzc5", "url": "https://github.com/all-of-us/workbench/pull/3579#pullrequestreview-410992779", "createdAt": "2020-05-13T14:38:29Z", "commit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozODozMFrOGU00eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo0NDo0OFrOGU1IdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5MDEwNA==", "bodyText": "Yeah, I'm not too surprised there's weirdness in trying to have a bare string for a POST body. I think what you've done is the best approach, just go with the flow and make it a simple JSON object.\n[opt] The vast majority of our in: body definitions have a named schema: $ref. For consistency & explicitness, I'd recommend creating a CheckEmailRequest object here rather than inlining the schema.", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424490104", "createdAt": "2020-05-13T14:38:30Z", "author": {"login": "gjuggler"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -2341,25 +2341,58 @@ paths:\n           description: The updated Institution.\n           schema:\n             \"$ref\": \"#/definitions/Institution\"\n-  \"/v1/institutions/{shortName}/checkEmail/{email}/\":\n+  \"/v1/institutions/{shortName}/checkEmail\":\n     parameters:\n     - in: path\n       name: shortName\n       type: string\n       description: 'The short name / key of the institution to check, e.g. \"VUMC\"'\n       required: true\n-    - in: path\n-      name: email\n-      type: string\n-      description: Institutional contact email address to check.\n-      required: true\n-    get:\n+    post:\n       tags:\n         - institution\n       operationId: checkEmail\n       description: Checks whether the given email address is a verified member of an institution.\n       x-aou-note: This endpoint is publicly-accessible and called by clients during user registration.\n       security: []\n+      parameters:\n+      - in: body\n+        name: contactEmail\n+        description: Institutional contact email address to check.\n+        required: true\n+        schema:\n+          type: object", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MTEwOQ=="}, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5NTIyMA==", "bodyText": "Nice approach! I appreciate the attention to detail (and I'm sure Alex does too).", "url": "https://github.com/all-of-us/workbench/pull/3579#discussion_r424495220", "createdAt": "2020-05-13T14:44:48Z", "author": {"login": "gjuggler"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -2341,25 +2341,58 @@ paths:\n           description: The updated Institution.\n           schema:\n             \"$ref\": \"#/definitions/Institution\"\n-  \"/v1/institutions/{shortName}/checkEmail/{email}/\":\n+  \"/v1/institutions/{shortName}/checkEmail\":\n     parameters:\n     - in: path\n       name: shortName\n       type: string\n       description: 'The short name / key of the institution to check, e.g. \"VUMC\"'\n       required: true\n-    - in: path\n-      name: email\n-      type: string\n-      description: Institutional contact email address to check.\n-      required: true\n-    get:\n+    post:\n       tags:\n         - institution\n       operationId: checkEmail\n       description: Checks whether the given email address is a verified member of an institution.\n       x-aou-note: This endpoint is publicly-accessible and called by clients during user registration.\n       security: []\n+      parameters:\n+      - in: body\n+        name: contactEmail\n+        description: Institutional contact email address to check.\n+        required: true\n+        schema:\n+          type: object\n+          required:\n+            - value\n+          properties:\n+            value:\n+              type: string\n+              description: Institutional contact email address to check.\n+\n+      responses:\n+        200:\n+          description: Whether the email is a valid member of the institution.\n+          schema:\n+            \"$ref\": \"#/definitions/CheckEmailResponse\"\n+  \"/v1/institutions/{shortName}/checkEmail/{email}/\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NDgyOA=="}, "originalCommit": {"oid": "426ea9fd11556d9948779a981c24e0cb24a9b4ee"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0866c23ca7a94e3a7634d7b1e46b22b32233ae36", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/0866c23ca7a94e3a7634d7b1e46b22b32233ae36", "committedDate": "2020-05-13T15:09:23Z", "message": "Add email validation logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83bfb3949e127760c84c73c445996218716a2972", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/83bfb3949e127760c84c73c445996218716a2972", "committedDate": "2020-05-13T15:25:16Z", "message": "CheckEmailRequest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4724, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}