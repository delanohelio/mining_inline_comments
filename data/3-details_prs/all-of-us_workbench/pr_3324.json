{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NTQ5NTE0", "number": 3324, "title": "[RW-4500][risk=low]Institution affiliation: distinguish between two institution agreement\u2026", "bodyText": "Add new column agreement type of type Enum in institution table\n\n\nIf agreement is RESTRICTED check the email address else check the email domain\n\n\nRESTRICTED:\n\nMASTER :\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-03-31T19:29:30Z", "url": "https://github.com/all-of-us/workbench/pull/3324", "merged": true, "mergeCommit": {"oid": "667529e90d85bef1a9c3289a46d29f32497b9ceb"}, "closed": true, "closedAt": "2020-04-07T18:02:39Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTIN3rAH2gAyMzk2NTQ5NTE0OmUyOTNmNDg3Y2I2YTAxZDBlYjE5YjhlODJjMjdkNzBlMWFlY2U4NWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVXOYagFqTM4OTM2MjQzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e293f487cb6a01d0eb19b8e82c27d70e1aece85e", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e293f487cb6a01d0eb19b8e82c27d70e1aece85e", "committedDate": "2020-03-31T19:25:02Z", "message": "Institution affiliation: distinguish between two institution agreement types"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a868777ab3b89e958484769f4885a93029806d50", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/a868777ab3b89e958484769f4885a93029806d50", "committedDate": "2020-03-31T19:36:14Z", "message": "spotless and add comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae787d170f1cf472b8969a8b698df5a9b9b85917", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/ae787d170f1cf472b8969a8b698df5a9b9b85917", "committedDate": "2020-03-31T19:45:48Z", "message": "resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "583eac0fcc47782c3f6a8a548f92b802d72d44b0", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/583eac0fcc47782c3f6a8a548f92b802d72d44b0", "committedDate": "2020-03-31T19:47:40Z", "message": "correc file name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c75147335efc391f8dd375654a565bd6941b7720", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c75147335efc391f8dd375654a565bd6941b7720", "committedDate": "2020-03-31T22:56:46Z", "message": "Fix ui Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/78525454158dfae0bbd4234332bf73214f0a79ec", "committedDate": "2020-04-01T02:24:40Z", "message": "Fix backend test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTM1MDM2", "url": "https://github.com/all-of-us/workbench/pull/3324#pullrequestreview-385935036", "createdAt": "2020-04-01T20:44:06Z", "commit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMDo0NDowNlrOF_R4_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMTozNjoxNlrOF_Thnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5NzcyNw==", "bodyText": "Change to something to reflect that it's the Institution's Data Use Agreement Type.  Maybe InstitutionDuaType ?", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401897727", "createdAt": "2020-04-01T20:44:06Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5669,6 +5668,14 @@ definitions:\n     - EDUCATIONAL_INSTITUTION\n     - HEALTH_CENTER_NON_PROFIT\n     - OTHER\n+\n+  AgreementType:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg5ODk4MA==", "bodyText": "\"Type of DUA\"\n\"restricted to a defined set of specific researchers\"", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401898980", "createdAt": "2020-04-01T20:46:36Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5669,6 +5668,14 @@ definitions:\n     - EDUCATIONAL_INSTITUTION\n     - HEALTH_CENTER_NON_PROFIT\n     - OTHER\n+\n+  AgreementType:\n+    type: string\n+    description: 'Type of Agreement Institution has signed, Applicable to all employees or restricted to  just few'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkwMDYzMw==", "bodyText": "something with dua in the name", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401900633", "createdAt": "2020-04-01T20:49:41Z", "author": {"login": "jmthibault79"}, "path": "api/db/changelog/db.changelog-134-institution-agreement.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+  xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"nsaxena\" id=\"changelog-134-institution-agreement\">\n+      <addColumn tableName=\"institution\">\n+        <column name=\"agreement_type_enum\" type=\"tinyint\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkwMTQ1OA==", "bodyText": "thanks for cleanup!", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401901458", "createdAt": "2020-04-01T20:51:24Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5563,9 +5563,7 @@ definitions:\n     type: object\n     description: 'Represents an institution which has been approved to validate researchers\n       who wish to use the system, including the email patterns which we use to validate\n-      users.\n-\n-'\n+      users.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkwMTgxMw==", "bodyText": "\"Type of DUA\"\n\"restricted to a defined set of specific researchers\"", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401901813", "createdAt": "2020-04-01T20:52:05Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5582,15 +5580,14 @@ definitions:\n       organizationTypeEnum:\n         \"$ref\": \"#/definitions/OrganizationType\"\n         description: 'The Organization Type of this institution if it is one of the\n-          enumerated OrganizationTypes, or OrganizationType.OTHER if it is not\n-\n-'\n+          enumerated OrganizationTypes, or OrganizationType.OTHER if it is not'\n       organizationTypeOtherText:\n         type: string\n         description: 'The detailed Organization Type of this institution, as text,\n-          if its enumerated type is OTHER\n-\n-'\n+          if its enumerated type is OTHER'\n+      agreementTypeEnum:\n+        \"$ref\": \"#/definitions/AgreementType\"\n+        description: 'Type of Agreement Institution has signed, Master or restricted to few employees'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxMzI3Ng==", "bodyText": "remove this line to demonstrate that null is converted to MASTER on round-trip", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401913276", "createdAt": "2020-04-01T21:13:56Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/institution/InstitutionServiceTest.java", "diffHunk": "@@ -41,15 +42,19 @@\n   @Autowired private VerifiedInstitutionalAffiliationDao verifiedInstitutionalAffiliationDao;\n \n   private final Institution testInst =\n-      new Institution().shortName(\"test\").displayName(\"this is a test\");\n+      new Institution()\n+          .shortName(\"test\")\n+          .displayName(\"this is a test\")\n+          .agreementTypeEnum(AgreementType.MASTER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxODAzOQ==", "bodyText": "Please add these ProfileControllerTests:\n\nemail validation success when agreementType is NULL\nemail validation success when agreementType is MASTER\nemail validation failure when agreementType is RESTRICTED and the email matches domain\nemail validation failure when agreementType is MASTER and the email does not match domain", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401918039", "createdAt": "2020-04-01T21:23:35Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -57,6 +57,7 @@\n import org.pmiops.workbench.model.AccessBypassRequest;\n import org.pmiops.workbench.model.AccessModule;\n import org.pmiops.workbench.model.Address;\n+import org.pmiops.workbench.model.AgreementType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkxOTU2MQ==", "bodyText": "Please add these InstitutionServiceTests:\n\nvalidation success when agreementType is NULL and the contact email matches a domain\nsomething to demonstrate that agreementType is what determines how we validate email, rather than the presence of address or domains.  i.e. don't match against an email address if agreementType is MASTER", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401919561", "createdAt": "2020-04-01T21:26:18Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/institution/InstitutionServiceTest.java", "diffHunk": "@@ -18,6 +18,7 @@\n import org.pmiops.workbench.db.model.DbVerifiedInstitutionalAffiliation;\n import org.pmiops.workbench.exceptions.ConflictException;\n import org.pmiops.workbench.exceptions.NotFoundException;\n+import org.pmiops.workbench.model.AgreementType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyMTk1Mw==", "bodyText": "VUMC", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401921953", "createdAt": "2020-04-01T21:30:57Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-institution.spec.tsx", "diffHunk": "@@ -145,17 +149,49 @@ it('should validate email affiliation when inst and email are specified', async(\n   // Once we blur the input, the API request is sent. Since asdf.com is not a member, it will\n   // block form submission.\n   getEmailInput(wrapper).simulate('blur');\n+\n   await waitOneTickAndUpdate(wrapper);\n   expect(getInstance(wrapper).validate()['checkEmailResponse'])\n     .toContain('Email address is not a member of the selected institution');\n+\n+  expect(getEmailErrorMessage(wrapper).getDOMNode().textContent).toBe(\n+    'The institution has authorized access only to select members.' +\n+    'Please click here to request to be added to the institution'\n+  );\n+});\n+\n+it('should validate email affiliation when inst and email domain are specified', async() => {\n+  const wrapper = component();\n+  await waitOneTickAndUpdate(wrapper);\n+\n+  // Choose 'Broad' and enter an email address.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyMjQ3OQ==", "bodyText": "this is a little confusing.  does the original asdf work?", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401922479", "createdAt": "2020-04-01T21:32:00Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-institution.spec.tsx", "diffHunk": "@@ -179,7 +215,7 @@ it('should trigger email check when email is filled in before choosing instituti\n   const wrapper = component();\n   await waitOneTickAndUpdate(wrapper);\n \n-  getEmailInput(wrapper).simulate('change', {target: {value: 'asdf@broadinstitute.org'}});\n+  getEmailInput(wrapper).simulate('change', {target: {value: 'institution@broadinstitute.org'}});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyMzA0Mw==", "bodyText": "(or null)", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401923043", "createdAt": "2020-04-01T21:33:10Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-institution.tsx", "diffHunk": "@@ -195,6 +195,28 @@ export class AccountCreationInstitution extends React.Component<Props, State> {\n     this.setState(fp.set(['profile', 'contactEmail'], contactEmail));\n   }\n \n+  get displayEmailErrorMessage() {\n+    const {institutions,\n+    profile: {\n+      verifiedInstitutionalAffiliation\n+    }} = this.state;\n+    if (verifiedInstitutionalAffiliation && verifiedInstitutionalAffiliation.institutionShortName) {\n+      const selectedInstitutionObj = fp.find((institution) =>\n+          institution.shortName === verifiedInstitutionalAffiliation.institutionShortName, institutions);\n+\n+      // If Instution has signed Restricted agreement and the email id is not in allowed email ids list\n+      if (selectedInstitutionObj.agreementTypeEnum === AgreementType.RESTRICTED) {\n+        return <div data-test-id='email-error-message' style={{color: colors.danger}}>\n+          The institution has authorized access only to select members.<br/>\n+          Please <a href='https://www.researchallofus.org/apply/' target='_blank'>\n+          click here</a> to request to be added to the institution</div>;\n+      }\n+      // If institution has MASTER agreement and the domain is not in the allowed list", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkyNDUxMQ==", "bodyText": "good new test \ud83d\udc4d", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r401924511", "createdAt": "2020-04-01T21:36:16Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-institution.spec.tsx", "diffHunk": "@@ -145,17 +149,49 @@ it('should validate email affiliation when inst and email are specified', async(\n   // Once we blur the input, the API request is sent. Since asdf.com is not a member, it will\n   // block form submission.\n   getEmailInput(wrapper).simulate('blur');\n+\n   await waitOneTickAndUpdate(wrapper);\n   expect(getInstance(wrapper).validate()['checkEmailResponse'])\n     .toContain('Email address is not a member of the selected institution');\n+\n+  expect(getEmailErrorMessage(wrapper).getDOMNode().textContent).toBe(\n+    'The institution has authorized access only to select members.' +\n+    'Please click here to request to be added to the institution'\n+  );\n+});\n+\n+it('should validate email affiliation when inst and email domain are specified', async() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78525454158dfae0bbd4234332bf73214f0a79ec"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7804135712b87ae829c05e92a96ed29135ec7335", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/7804135712b87ae829c05e92a96ed29135ec7335", "committedDate": "2020-04-03T19:08:28Z", "message": "PR Comments: Change name agreementType to DuaType and add test to include restricted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NTEzNjQ4", "url": "https://github.com/all-of-us/workbench/pull/3324#pullrequestreview-387513648", "createdAt": "2020-04-03T19:09:36Z", "commit": {"oid": "7804135712b87ae829c05e92a96ed29135ec7335"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOTowOTozNlrOGAkrMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxOTowOTozNlrOGAkrMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI1NDA2Ng==", "bodyText": "changing name to dua_type to be more consistent with other columns like organization_type", "url": "https://github.com/all-of-us/workbench/pull/3324#discussion_r403254066", "createdAt": "2020-04-03T19:09:36Z", "author": {"login": "NehaBroad"}, "path": "api/db/changelog/db.changelog-134-institution-data-user-agreement.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+  xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+  xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"nsaxena\" id=\"changelog-134-institution-data-user-agreement\">\n+      <addColumn tableName=\"institution\">\n+        <column name=\"dua_type_enum\" type=\"tinyint\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7804135712b87ae829c05e92a96ed29135ec7335"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b74d8ca99e1b0fee2f868cb93c076dc2fbaf26", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c5b74d8ca99e1b0fee2f868cb93c076dc2fbaf26", "committedDate": "2020-04-03T19:10:54Z", "message": "remove static file that got added by mistake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c74a43719874029e290fc3f3eb32a73ff57b7b", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c5c74a43719874029e290fc3f3eb32a73ff57b7b", "committedDate": "2020-04-04T02:50:15Z", "message": "Fix UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c6ed4f48fbbebfdde9487cd2a63526ce8799cec", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9c6ed4f48fbbebfdde9487cd2a63526ce8799cec", "committedDate": "2020-04-04T02:55:02Z", "message": "PR Comments: Update comments and update contact email"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48e60a6fbdcdb2ff66f6a194a6480fdd8b35047c", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/48e60a6fbdcdb2ff66f6a194a6480fdd8b35047c", "committedDate": "2020-04-04T03:03:30Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97dddb6c9d961669a259f5a166e6e9a86cc18d1b", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/97dddb6c9d961669a259f5a166e6e9a86cc18d1b", "committedDate": "2020-04-04T03:10:46Z", "message": "rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "796f6d495fff9fb6c5c5a949ab9596add9f1ac16", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/796f6d495fff9fb6c5c5a949ab9596add9f1ac16", "committedDate": "2020-04-04T03:35:58Z", "message": "SpotlessApply"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e808554966f110983b987ee77d963e370bf8237", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/0e808554966f110983b987ee77d963e370bf8237", "committedDate": "2020-04-07T15:46:48Z", "message": "adding new test for email validation with dua null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzYyNDM5", "url": "https://github.com/all-of-us/workbench/pull/3324#pullrequestreview-389362439", "createdAt": "2020-04-07T18:02:01Z", "commit": {"oid": "0e808554966f110983b987ee77d963e370bf8237"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3320, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}