{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTAzOTE1", "number": 3580, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoxNToxMVrOD8kzYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1MjozMlrOD8_1Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODQ0MTMxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoxNToxMVrOGVmYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoxNToxMVrOGVmYnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwMjE3NQ==", "bodyText": "one of these needs to be \"that\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425302175", "createdAt": "2020-05-14T17:15:11Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java", "diffHunk": "@@ -64,12 +67,12 @@ public boolean equals(Object o) {\n \n     DbInstitutionUserInstructions that = (DbInstitutionUserInstructions) o;\n \n-    return Objects.equals(institutionId, that.institutionId)\n+    return Objects.equals(institution.getInstitutionId(), institution.getInstitutionId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODQ3MjU3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoyNDowNFrOGVmtCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1NzowNlrOGWSFAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw==", "bodyText": "If this is now part of the Institution model, we should make it part of the DB model too", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307403", "createdAt": "2020-05-14T17:24:04Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4OTI2Mw==", "bodyText": "So the issue was that since FK resides in user instructions, if we include userInstruction in DbInstitution, the save was throwing error and not behaving as it should.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425389263", "createdAt": "2020-05-14T19:47:33Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MDQ3OQ==", "bodyText": "the email addrs and domains are like that too - so we should be able to make this work", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425470479", "createdAt": "2020-05-14T22:41:32Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxNjM3Mg==", "bodyText": "yes thats given me an issue too as its doing insert and not update and adding multiple rows. So as part of the edit institution PR i'll be taking that out", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425816372", "createdAt": "2020-05-15T13:52:08Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgxODAyOA==", "bodyText": "Ripping out userInstructions was done after suggestion from @freemabd", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425818028", "createdAt": "2020-05-15T13:54:31Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxODA0OA==", "bodyText": "I'm not sure I understand yet, but this doesn't need to be a blocker.  We can follow up on Slack.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426018048", "createdAt": "2020-05-15T19:57:06Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODQ3NTQ5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoyNDo1NlrOGVmu_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMjo0NToxMFrOGVwuVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzkwMA==", "bodyText": "the institutionMapper should handle this", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307900", "createdAt": "2020-05-14T17:24:56Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java", "diffHunk": "@@ -55,6 +55,12 @@\n   public List<Institution> getInstitutions() {\n     return StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n         .map(institutionMapper::dbToModel)\n+        .map(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ3MTU3Mg==", "bodyText": "dbToModel should handle all of the logic regarding whether instructions exist or not\nSo getInstitutions() can look simply like:\nreturn StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n  .map(institutionMapper::dbToModel)\n  .collect(Collectors.toList());", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425471572", "createdAt": "2020-05-14T22:45:10Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java", "diffHunk": "@@ -55,6 +55,12 @@\n   public List<Institution> getInstitutions() {\n     return StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n         .map(institutionMapper::dbToModel)\n+        .map(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzkwMA=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODQ5MjE0OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench-api.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoyODo1MlrOGVm5HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoyODo1MlrOGVm5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxMDQ5Mg==", "bodyText": "mention that these are sent to the users in an email", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425310492", "createdAt": "2020-05-14T17:28:52Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5455,6 +5455,9 @@ definitions:\n           this Institution\n         items:\n           type: string\n+      userInstructions:\n+        description: Institution-specific instructions for users to perform after registration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODUxMzk4OnYy", "diffSide": "RIGHT", "path": "ui/src/testing/stubs/institution-api-stub.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzozNTowNVrOGVnHYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0ODoxM1rOGVruMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDE0Nw==", "bodyText": "what does this change do?", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425314147", "createdAt": "2020-05-14T17:35:05Z", "author": {"login": "jmthibault79"}, "path": "ui/src/testing/stubs/institution-api-stub.ts", "diffHunk": "@@ -65,8 +67,9 @@ export class InstitutionApiStub extends InstitutionApi {\n   }\n \n   getInstitutions(shortName: string): Promise<GetInstitutionsResponse> {\n-    return new Promise(resolve => {\n-      return {institutions: this.institutions};\n+    return new Promise((resolve, reject) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4OTYxNw==", "bodyText": "this was not working for me unless i added resolve(institutions)", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425389617", "createdAt": "2020-05-14T19:48:13Z", "author": {"login": "NehaBroad"}, "path": "ui/src/testing/stubs/institution-api-stub.ts", "diffHunk": "@@ -65,8 +67,9 @@ export class InstitutionApiStub extends InstitutionApi {\n   }\n \n   getInstitutions(shortName: string): Promise<GetInstitutionsResponse> {\n-    return new Promise(resolve => {\n-      return {institutions: this.institutions};\n+    return new Promise((resolve, reject) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDE0Nw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODUxNDg3OnYy", "diffSide": "RIGHT", "path": "ui/yarn.lock", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzozNToxOFrOGVnH-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTowMTozNlrOGVqPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDI5Nw==", "bodyText": "why this update?", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425314297", "createdAt": "2020-05-14T17:35:18Z", "author": {"login": "jmthibault79"}, "path": "ui/yarn.lock", "diffHunk": "@@ -7541,8 +7541,9 @@ primeicons@^1.0.0:\n   resolved \"https://registry.yarnpkg.com/primeicons/-/primeicons-1.0.0.tgz#90061f168ef6227f21f0a7db8204ffa85cd27aec\"\n \n primereact@^3.1.1:\n-  version \"3.3.2\"\n-  resolved \"https://registry.yarnpkg.com/primereact/-/primereact-3.3.2.tgz#0d47fd6a8cc9e22e4d0beb06a86c1bf3401f1b77\"\n+  version \"3.4.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0ODMyOA==", "bodyText": "I have updated the primereact version from 3.1.1 to the latest 4.2.0 as its more stable and have better feature i'll add the package.json", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425348328", "createdAt": "2020-05-14T18:31:51Z", "author": {"login": "NehaBroad"}, "path": "ui/yarn.lock", "diffHunk": "@@ -7541,8 +7541,9 @@ primeicons@^1.0.0:\n   resolved \"https://registry.yarnpkg.com/primeicons/-/primeicons-1.0.0.tgz#90061f168ef6227f21f0a7db8204ffa85cd27aec\"\n \n primereact@^3.1.1:\n-  version \"3.3.2\"\n-  resolved \"https://registry.yarnpkg.com/primereact/-/primereact-3.3.2.tgz#0d47fd6a8cc9e22e4d0beb06a86c1bf3401f1b77\"\n+  version \"3.4.0\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDI5Nw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2NTMyMw==", "bodyText": "Does this PR depend on any of the new features?  Might be better to make that change as a separate PR, if not.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425365323", "createdAt": "2020-05-14T19:01:36Z", "author": {"login": "jmthibault79"}, "path": "ui/yarn.lock", "diffHunk": "@@ -7541,8 +7541,9 @@ primeicons@^1.0.0:\n   resolved \"https://registry.yarnpkg.com/primeicons/-/primeicons-1.0.0.tgz#90061f168ef6227f21f0a7db8204ffa85cd27aec\"\n \n primereact@^3.1.1:\n-  version \"3.3.2\"\n-  resolved \"https://registry.yarnpkg.com/primereact/-/primereact-3.3.2.tgz#0d47fd6a8cc9e22e4d0beb06a86c1bf3401f1b77\"\n+  version \"3.4.0\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDI5Nw=="}, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODY2NzEwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-institution.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNjo1NFrOGVosXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNjo1NFrOGVosXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzOTk5Ng==", "bodyText": "I like these little render functions.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425339996", "createdAt": "2020-05-14T18:16:54Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODY3MjMzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-institution.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxODoxNVrOGVovew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxODoxNVrOGVovew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDc5NQ==", "bodyText": "Please add some punctuation here.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425340795", "createdAt": "2020-05-14T18:18:15Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';\n+    }\n+  }\n+\n+  renderDuaType(row, col) {\n+    return row['duaTypeEnum'] === DuaType.RESTRICTED ? 'Individual' : 'Master';\n+  }\n+\n+  // If email domain list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailDomain(row, col) {\n+    const emailDomain = fp.take(4, row['emailDomains']).join('\\n') ;\n+    if (row['emailDomains'] && row['emailDomains'].length > 4) {\n+      return emailDomain + '...';\n+    }\n+    return emailDomain;\n+  }\n+\n+  // If email address list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailAddress(row, col) {\n+    const emailAddresses = fp.take(4, row['emailAddresses']).join('\\n') ;\n+    if (row['emailAddresses'] && row['emailAddresses'].length > 4) {\n+      return emailAddresses + '...';\n+    }\n+    return emailAddresses;\n+  }\n+\n+  render() {\n+    const {institutions, institutionLoadError, loadingInstitutions} = this.state;\n+    return <div>\n+      <FadeBox style={{marginTop: '1rem', marginLeft: '1rem'}}>\n+        <SemiBoldHeader style={styles.pageHeader}>\n+          <label>Institution admin table</label>\n+              <Button type='secondaryLight'\n+                      style={{padding: '0rem', marginTop: '0.3rem', verticalAlign: 'sub'}}\n+                      data-test-id='add-institution'>\n+                <ClrIcon shape='plus-circle' class='is-solid' size={20}/>\n+              </Button>\n+        </SemiBoldHeader>\n+        {institutionLoadError && <div style={{color: colors.danger}}>\n+          Error while loading Institution please try again later</div>}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODY3NzE3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-institution.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxOTo0N1rOGVoyjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxOTo0N1rOGVoyjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MTU4Mg==", "bodyText": "Something indicating that this refers to an email.  Maybe \"User Email Instructions\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425341582", "createdAt": "2020-05-14T18:19:47Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';\n+    }\n+  }\n+\n+  renderDuaType(row, col) {\n+    return row['duaTypeEnum'] === DuaType.RESTRICTED ? 'Individual' : 'Master';\n+  }\n+\n+  // If email domain list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailDomain(row, col) {\n+    const emailDomain = fp.take(4, row['emailDomains']).join('\\n') ;\n+    if (row['emailDomains'] && row['emailDomains'].length > 4) {\n+      return emailDomain + '...';\n+    }\n+    return emailDomain;\n+  }\n+\n+  // If email address list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailAddress(row, col) {\n+    const emailAddresses = fp.take(4, row['emailAddresses']).join('\\n') ;\n+    if (row['emailAddresses'] && row['emailAddresses'].length > 4) {\n+      return emailAddresses + '...';\n+    }\n+    return emailAddresses;\n+  }\n+\n+  render() {\n+    const {institutions, institutionLoadError, loadingInstitutions} = this.state;\n+    return <div>\n+      <FadeBox style={{marginTop: '1rem', marginLeft: '1rem'}}>\n+        <SemiBoldHeader style={styles.pageHeader}>\n+          <label>Institution admin table</label>\n+              <Button type='secondaryLight'\n+                      style={{padding: '0rem', marginTop: '0.3rem', verticalAlign: 'sub'}}\n+                      data-test-id='add-institution'>\n+                <ClrIcon shape='plus-circle' class='is-solid' size={20}/>\n+              </Button>\n+        </SemiBoldHeader>\n+        {institutionLoadError && <div style={{color: colors.danger}}>\n+          Error while loading Institution please try again later</div>}\n+        <DataTable data-test-id='institution-datatable' value={institutions} paginator={true}\n+                   rows={5} scrollable={true} frozenWidth='7rem' loading={loadingInstitutions}>\n+          <Column field='displayName' header='Institution Name'\n+                  bodyStyle={styles.text} headerStyle={styles.header} frozen={true}/>\n+          <Column field='organizationTypeEnum' header='Institution Type'\n+                  body={this.renderOrganizationType} bodyStyle={styles.text}\n+                  headerStyle={styles.header}/>\n+          <Column field='duaTypeEnum' header='Agreement Type' body={this.renderDuaType}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='emailDomains' header='Accepted Domain List' body={this.renderEmailDomain}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='emailAddresses' header='Accepted Email List' body={this.renderEmailAddress}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='userInstructions' header='User Instruction' bodyStyle={styles.text}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODY5MDk0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-institution.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyMzo1NVrOGVo7gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyMzo1NVrOGVo7gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0Mzg3Mw==", "bodyText": "If organization type is OTHER, we should display the organizationTypeOtherText here instead.  Maybe both, something like \"Other: WhateverSpecialType\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425343873", "createdAt": "2020-05-14T18:23:55Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjg2OTgzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1MjozMlrOGWR8_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1NDozOVrOGWSA8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTk5Nw==", "bodyText": "this can be ifPresent(target::setUserInstructions)", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426015997", "createdAt": "2020-05-15T19:52:32Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -50,4 +55,15 @@\n         .map(address -> new DbInstitutionEmailAddress().setEmailAddress(address))\n         .collect(Collectors.toSet());\n   }\n+\n+  @AfterMapping\n+  default void setUserInstruction(\n+      @MappingTarget Institution target, @Context InstitutionService institutionService) {\n+    institutionService\n+        .getInstitutionUserInstructions(target.getShortName())\n+        .ifPresent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNzAwOQ==", "bodyText": "yes thats much neater thanks", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426017009", "createdAt": "2020-05-15T19:54:39Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -50,4 +55,15 @@\n         .map(address -> new DbInstitutionEmailAddress().setEmailAddress(address))\n         .collect(Collectors.toSet());\n   }\n+\n+  @AfterMapping\n+  default void setUserInstruction(\n+      @MappingTarget Institution target, @Context InstitutionService institutionService) {\n+    institutionService\n+        .getInstitutionUserInstructions(target.getShortName())\n+        .ifPresent(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTk5Nw=="}, "originalCommit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2670, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}