{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NDk0NDU2", "number": 3696, "title": "[RW-4696][RW-5013][risk=no] Initial workspace sharing puppeteer test", "bodyText": "This is intended as a regression test for two separate bugs:\n\n#3694\n#3695", "createdAt": "2020-06-21T04:33:22Z", "url": "https://github.com/all-of-us/workbench/pull/3696", "merged": true, "mergeCommit": {"oid": "4e3c1dc0d2ab38dcc903d9ed43b4c5e4d300abcc"}, "closed": true, "closedAt": "2020-06-27T07:00:20Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct5g3vABqjM0NzA1Mjc3NTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvNgSGgH2gAyNDM3NDk0NDU2OjQwYjZkMzY5NzJlZmFhN2MxOTQ1ZjUzMzVhNWE1MjFlYzYyMDVmMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fda7314c16344f7aa173c2b71e2f18d94c53c4ce", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/fda7314c16344f7aa173c2b71e2f18d94c53c4ce", "committedDate": "2020-06-21T04:23:57Z", "message": "Initial workspace sharing puppeteer test"}, "afterCommit": {"oid": "92e118e0da98364a5dccea293a58acf592e9d1c4", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/92e118e0da98364a5dccea293a58acf592e9d1c4", "committedDate": "2020-06-22T23:33:00Z", "message": "Fixes / cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODM2ODEz", "url": "https://github.com/all-of-us/workbench/pull/3696#pullrequestreview-435836813", "createdAt": "2020-06-23T14:24:33Z", "commit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDoyNDozNFrOGnrxZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNDozODo1NVrOGnsegA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NDgwNA==", "bodyText": "Can you change to ShareModal extends Dialog so common methods are not duplicated?", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r444264804", "createdAt": "2020-06-23T14:24:34Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -0,0 +1,107 @@\n+import Container from 'app/container';\n+import {ElementHandle, Page} from 'puppeteer';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import {ElementType} from 'app/xpath-options';\n+import Button from 'app/element/button';\n+import Textbox from 'app/element/textbox';\n+import ClrIcon from 'app/element/clr-icon-link';\n+\n+\n+export enum ButtonLabel {\n+  Cancel = 'Cancel',\n+  Save = 'Save'\n+}\n+\n+const Selector = {\n+  defaultDialog: '//*[@role=\"dialog\"]',\n+}\n+\n+export default class ShareModal extends Container {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2Njg3NQ==", "bodyText": "nit: Line #84 is unnecessary here because the click() takes care the finding element too.\nasync click(options?: ClickOptions): Promise<void> {\n    return (await this.asElementHandle()).click(options);\n  }", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r444266875", "createdAt": "2020-06-23T14:27:15Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -0,0 +1,107 @@\n+import Container from 'app/container';\n+import {ElementHandle, Page} from 'puppeteer';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import {ElementType} from 'app/xpath-options';\n+import Button from 'app/element/button';\n+import Textbox from 'app/element/textbox';\n+import ClrIcon from 'app/element/clr-icon-link';\n+\n+\n+export enum ButtonLabel {\n+  Cancel = 'Cancel',\n+  Save = 'Save'\n+}\n+\n+const Selector = {\n+  defaultDialog: '//*[@role=\"dialog\"]',\n+}\n+\n+export default class ShareModal extends Container {\n+\n+  constructor(page: Page, xpath: string = Selector.defaultDialog) {\n+    super(page, xpath);\n+  }\n+\n+  async shareWithUser(username: string, level: WorkspaceAccessLevel): Promise<void> {\n+    const searchBox = await this.waitForSearchBox();\n+    await searchBox.type(username);\n+\n+    const addCollab = await this.waitForAddCollaboratorIcon();\n+    await addCollab.click();\n+\n+    const roleInput = await this.waitForRoleSelectorForUser(username);\n+    await roleInput.click();\n+\n+    const ownerOpt = await this.waitForRoleOption(level);\n+    await ownerOpt.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+  }\n+\n+  async removeUser(username: string): Promise<void> {\n+    const rmCollab = await this.page.waitForXPath(\n+      `${this.collabRowXPath(username)}//clr-icon[@shape=\"minus-circle\"]`);\n+    await rmCollab.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+    return;\n+  }\n+\n+  /**\n+   * Creates an xpath to a share \"row\" for a given user within the modal. This\n+   * can be combined with a child selector to pull out a control for a user.\n+   */\n+  private collabRowXPath(username: string): string {\n+    // We dip into child contents to find the collab user row element parent.\n+    // .//div filters by a relative path to the parent row.\n+    return `//*[@data-test-id=\"collab-user-row\" and .//div[` +\n+        `@data-test-id=\"collab-user-email\" and contains(text(),\"${username}\")]]`;\n+  }\n+\n+  async clickButton(buttonLabel: ButtonLabel): Promise<void> {\n+    const button = await this.waitForButton(buttonLabel);\n+    await button.waitUntilEnabled();\n+    return button.click();\n+  }\n+\n+  async waitForButton(buttonLabel: ButtonLabel): Promise<Button> {\n+    return Button.findByName(this.page, {containsText: buttonLabel, type: ElementType.Button}, this);\n+  }\n+\n+  async waitForSearchBox(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {name: 'Find Collaborators'}, this);\n+  }\n+\n+  async waitForAddCollaboratorIcon(): Promise<ClrIcon> {\n+    return ClrIcon.findByName(this.page, {iconShape: 'plus-circle'}, this);\n+  }\n+\n+  async waitForRoleSelectorForUser(username: string): Promise<Textbox> {\n+    const box = new Textbox(\n+      this.page, `${this.collabRowXPath(username)}//input[@type=\"text\"]`);\n+    await box.waitForXPath({visible: true});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI3MDYzMg==", "bodyText": "nit: If this class extends Dialog, you can also adds ${this.getXpath()} at the beginning of xpath to ensure element is located in dialog.", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r444270632", "createdAt": "2020-06-23T14:31:52Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -0,0 +1,107 @@\n+import Container from 'app/container';\n+import {ElementHandle, Page} from 'puppeteer';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import {ElementType} from 'app/xpath-options';\n+import Button from 'app/element/button';\n+import Textbox from 'app/element/textbox';\n+import ClrIcon from 'app/element/clr-icon-link';\n+\n+\n+export enum ButtonLabel {\n+  Cancel = 'Cancel',\n+  Save = 'Save'\n+}\n+\n+const Selector = {\n+  defaultDialog: '//*[@role=\"dialog\"]',\n+}\n+\n+export default class ShareModal extends Container {\n+\n+  constructor(page: Page, xpath: string = Selector.defaultDialog) {\n+    super(page, xpath);\n+  }\n+\n+  async shareWithUser(username: string, level: WorkspaceAccessLevel): Promise<void> {\n+    const searchBox = await this.waitForSearchBox();\n+    await searchBox.type(username);\n+\n+    const addCollab = await this.waitForAddCollaboratorIcon();\n+    await addCollab.click();\n+\n+    const roleInput = await this.waitForRoleSelectorForUser(username);\n+    await roleInput.click();\n+\n+    const ownerOpt = await this.waitForRoleOption(level);\n+    await ownerOpt.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+  }\n+\n+  async removeUser(username: string): Promise<void> {\n+    const rmCollab = await this.page.waitForXPath(\n+      `${this.collabRowXPath(username)}//clr-icon[@shape=\"minus-circle\"]`);\n+    await rmCollab.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+    return;\n+  }\n+\n+  /**\n+   * Creates an xpath to a share \"row\" for a given user within the modal. This\n+   * can be combined with a child selector to pull out a control for a user.\n+   */\n+  private collabRowXPath(username: string): string {\n+    // We dip into child contents to find the collab user row element parent.\n+    // .//div filters by a relative path to the parent row.\n+    return `//*[@data-test-id=\"collab-user-row\" and .//div[` +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI3MTgyMQ==", "bodyText": "waitForXPath() needs {visible: true} option here to ensure element is visible.", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r444271821", "createdAt": "2020-06-23T14:33:23Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/workspace-about-page.ts", "diffHunk": "@@ -33,4 +36,37 @@ export default class WorkspaceAboutPage extends AuthenticatedPage{\n     return waitForAttributeEquality(page, {xpath: selector}, 'aria-selected', 'true');\n   }\n \n+  async findUserInCollaboratorList(username: string): Promise<WorkspaceAccessLevel> {\n+    // At least one collab should eventually render, i.e. the current user.\n+    const collabXPath = `//*[starts-with(@data-test-id,\"workspaceUser-\")]`;\n+    await this.page.waitForXPath(collabXPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI3NjM1Mg==", "bodyText": "waitWhileLoading needs await.", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r444276352", "createdAt": "2020-06-23T14:38:55Z", "author": {"login": "aweng98"}, "path": "e2e/tests/workspace/workspace-share.spec.ts", "diffHunk": "@@ -0,0 +1,50 @@\n+import Link from 'app/element/link';\n+import {findWorkspace, signIn, waitWhileLoading} from 'utils/test-utils';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import WorkspaceAboutPage from 'app/page/workspace-about-page';\n+import {config} from 'resources/workbench-config';\n+\n+describe('Share workspace', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  // Assume there is at least one workspace preexist\n+  describe('From the workspace about page', () => {\n+    test('As OWNER, user can share a workspace', async () => {\n+      const workspaceCard = await findWorkspace(page);\n+      await workspaceCard.clickWorkspaceName();\n+\n+      const notebooksLink = await Link.findByName(page, {name: 'About'});\n+      await notebooksLink.clickAndWait();\n+\n+      const aboutPage = new WorkspaceAboutPage(page);\n+      await aboutPage.waitForLoad();\n+\n+      // This test is not hermetic - if the collaborator is already on this\n+      // workspace, just remove them before continuing.\n+      let accessLevel = await aboutPage.findUserInCollaboratorList(config.collaboratorUsername);\n+      if (accessLevel !== null) {\n+        await (await aboutPage.openShareModal()).removeUser(config.collaboratorUsername);\n+        waitWhileLoading(page);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8db26ca855d3dcebac174a9a3c8d1af4543c45", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/2f8db26ca855d3dcebac174a9a3c8d1af4543c45", "committedDate": "2020-06-26T00:21:49Z", "message": "Initial workspace sharing puppeteer test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1da0b388e338761350a816fe152b5cb53f7a6bbc", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/1da0b388e338761350a816fe152b5cb53f7a6bbc", "committedDate": "2020-06-26T00:21:49Z", "message": "Fixes / cleanups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bcc8d69a35d6b12e7a5be993eab83ce7eef1212", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/7bcc8d69a35d6b12e7a5be993eab83ce7eef1212", "committedDate": "2020-06-26T00:21:49Z", "message": "cmoments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2acecf6d7899eeb69235f5f169900d70e989852", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/f2acecf6d7899eeb69235f5f169900d70e989852", "committedDate": "2020-06-26T00:29:37Z", "message": "PR fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/ab20ec04daecd8bb0c23caedbb24ee0343afb604", "committedDate": "2020-06-22T23:39:56Z", "message": "cmoments"}, "afterCommit": {"oid": "f2acecf6d7899eeb69235f5f169900d70e989852", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/f2acecf6d7899eeb69235f5f169900d70e989852", "committedDate": "2020-06-26T00:29:37Z", "message": "PR fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTQzNDUx", "url": "https://github.com/all-of-us/workbench/pull/3696#pullrequestreview-437943451", "createdAt": "2020-06-26T00:28:10Z", "commit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyODoxMFrOGpQD1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyOTowM1rOGpQEqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNzkyNg==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r445907926", "createdAt": "2020-06-26T00:28:10Z", "author": {"login": "calbach"}, "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -0,0 +1,107 @@\n+import Container from 'app/container';\n+import {ElementHandle, Page} from 'puppeteer';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import {ElementType} from 'app/xpath-options';\n+import Button from 'app/element/button';\n+import Textbox from 'app/element/textbox';\n+import ClrIcon from 'app/element/clr-icon-link';\n+\n+\n+export enum ButtonLabel {\n+  Cancel = 'Cancel',\n+  Save = 'Save'\n+}\n+\n+const Selector = {\n+  defaultDialog: '//*[@role=\"dialog\"]',\n+}\n+\n+export default class ShareModal extends Container {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI2NDgwNA=="}, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwODEzNg==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3696#discussion_r445908136", "createdAt": "2020-06-26T00:29:03Z", "author": {"login": "calbach"}, "path": "e2e/app/component/share-modal.ts", "diffHunk": "@@ -0,0 +1,107 @@\n+import Container from 'app/container';\n+import {ElementHandle, Page} from 'puppeteer';\n+import {WorkspaceAccessLevel} from 'app/page-identifiers';\n+import {ElementType} from 'app/xpath-options';\n+import Button from 'app/element/button';\n+import Textbox from 'app/element/textbox';\n+import ClrIcon from 'app/element/clr-icon-link';\n+\n+\n+export enum ButtonLabel {\n+  Cancel = 'Cancel',\n+  Save = 'Save'\n+}\n+\n+const Selector = {\n+  defaultDialog: '//*[@role=\"dialog\"]',\n+}\n+\n+export default class ShareModal extends Container {\n+\n+  constructor(page: Page, xpath: string = Selector.defaultDialog) {\n+    super(page, xpath);\n+  }\n+\n+  async shareWithUser(username: string, level: WorkspaceAccessLevel): Promise<void> {\n+    const searchBox = await this.waitForSearchBox();\n+    await searchBox.type(username);\n+\n+    const addCollab = await this.waitForAddCollaboratorIcon();\n+    await addCollab.click();\n+\n+    const roleInput = await this.waitForRoleSelectorForUser(username);\n+    await roleInput.click();\n+\n+    const ownerOpt = await this.waitForRoleOption(level);\n+    await ownerOpt.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+  }\n+\n+  async removeUser(username: string): Promise<void> {\n+    const rmCollab = await this.page.waitForXPath(\n+      `${this.collabRowXPath(username)}//clr-icon[@shape=\"minus-circle\"]`);\n+    await rmCollab.click();\n+\n+    await this.clickButton(ButtonLabel.Save);\n+    await this.waitUntilDialogIsClosed();\n+    return;\n+  }\n+\n+  /**\n+   * Creates an xpath to a share \"row\" for a given user within the modal. This\n+   * can be combined with a child selector to pull out a control for a user.\n+   */\n+  private collabRowXPath(username: string): string {\n+    // We dip into child contents to find the collab user row element parent.\n+    // .//div filters by a relative path to the parent row.\n+    return `//*[@data-test-id=\"collab-user-row\" and .//div[` +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDI3MDYzMg=="}, "originalCommit": {"oid": "ab20ec04daecd8bb0c23caedbb24ee0343afb604"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4907e3c69d5ded17e5562d7a801deb3669755c4b", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/4907e3c69d5ded17e5562d7a801deb3669755c4b", "committedDate": "2020-06-26T00:45:04Z", "message": "more fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjM1MTMy", "url": "https://github.com/all-of-us/workbench/pull/3696#pullrequestreview-438635132", "createdAt": "2020-06-26T22:50:39Z", "commit": {"oid": "4907e3c69d5ded17e5562d7a801deb3669755c4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b56fbcd01a3efcd3338c5ef31bb751c56c6f65", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/a5b56fbcd01a3efcd3338c5ef31bb751c56c6f65", "committedDate": "2020-06-27T01:21:47Z", "message": "react-select :/"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40b6d36972efaa7c1945f5335a5a521ec6205f0b", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/40b6d36972efaa7c1945f5335a5a521ec6205f0b", "committedDate": "2020-06-27T01:24:33Z", "message": "hover not actually needd"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4594, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}