{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTI5OTcw", "number": 3741, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowMjo0MVrOEK6RQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1MDoyMFrOEK9c7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODc1OTA2OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowMjo0MVrOGsOTjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowMjo0MVrOGsOTjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNDkwOQ==", "bodyText": "email is no longer handled in this file.  See account-creation-institution and its spec", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449024909", "createdAt": "2020-07-02T14:02:41Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -102,81 +102,6 @@ it('should handle username validity if name is valid', () => {\n   expect(wrapper.exists('#usernameError')).toBeFalsy();\n });\n \n-it('should handle invalid Email', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODc2MjA5OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowMzoyOVrOGsOVkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowMzoyOVrOGsOVkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNTQyNQ==", "bodyText": "Academic vs Non-Academic Affiliation is not a concept which exists in new-style affiliation", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449025425", "createdAt": "2020-07-02T14:03:29Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -102,81 +102,6 @@ it('should handle username validity if name is valid', () => {\n   expect(wrapper.exists('#usernameError')).toBeFalsy();\n });\n \n-it('should handle invalid Email', () => {\n-  const wrapper = component();\n-  expect(wrapper.exists('#contactEmail')).toBeTruthy();\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-  wrapper.find('input#contactEmail').simulate('change',\n-      {target: {value: 'username@'}});\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, requireInstitutionalVerification: false});\n-  const wrapper = component();\n-  const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');\n-  expect(institutionName).toBeTruthy();\n-  const institutionRole = wrapper.find('[data-test-id=\"institutionRole\"]');\n-  expect(institutionRole).toBeTruthy();\n-  expect(institutionRole.find('li').length).toBe(AccountCreationOptions.roles.length);\n-  expect(institutionRole.find('li').get(0).props.children).toBe(AccountCreationOptions.roles[0].label);\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Affiliation information if No is selected', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODc3MjY4OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowNTo1MVrOGsOcOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDowNTo1MVrOGsOcOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAyNzEyOQ==", "bodyText": "This is not related to institutional affiliation and was added after the comment", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449027129", "createdAt": "2020-07-02T14:05:51Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -101,80 +95,31 @@ export interface AccountCreationState {\n   invalidEmail: boolean;\n   profile: Profile;\n   showAllFieldsRequiredError: boolean;\n+  showMostInterestedInKnowingBlurb: boolean;\n   usernameCheckInProgress: boolean;\n   usernameConflictError: boolean;\n-  // TODO(RW-4361): remove all after this point, after we switch to verified institutional affiliation\n-  rolesOptions: any;\n-  showInstitution: boolean;\n-  showNonAcademicAffiliationRole: boolean;\n-  showNonAcademicAffiliationOther: boolean;\n-  showMostInterestedInKnowingBlurb: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODgxMzYyOnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNTo0NVrOGsO2sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNTo0NVrOGsO2sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzMzkwNg==", "bodyText": "these also refer to old-style affiliation", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449033906", "createdAt": "2020-07-02T14:15:45Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -239,55 +184,8 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n     this.setState(fp.set(['profile', 'address', attribute], value));\n   }\n \n-  updateInstitutionAffiliation(attribute: string, value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODgyNjM5OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxODo0OFrOGsO-mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxODo0OFrOGsO-mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNTkzMA==", "bodyText": "handled by (existing) account-creation-institution.spec", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449035930", "createdAt": "2020-07-02T14:18:48Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -102,81 +102,6 @@ it('should handle username validity if name is valid', () => {\n   expect(wrapper.exists('#usernameError')).toBeFalsy();\n });\n \n-it('should handle invalid Email', () => {\n-  const wrapper = component();\n-  expect(wrapper.exists('#contactEmail')).toBeTruthy();\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-  wrapper.find('input#contactEmail').simulate('change',\n-      {target: {value: 'username@'}});\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Institution name and role option by default', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODgyNzc1OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxOTowNVrOGsO_gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxOTowNVrOGsO_gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNjE2MQ==", "bodyText": "account-creation-institution spec", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449036161", "createdAt": "2020-07-02T14:19:05Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -102,81 +102,6 @@ it('should handle username validity if name is valid', () => {\n   expect(wrapper.exists('#usernameError')).toBeFalsy();\n });\n \n-it('should handle invalid Email', () => {\n-  const wrapper = component();\n-  expect(wrapper.exists('#contactEmail')).toBeTruthy();\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-  wrapper.find('input#contactEmail').simulate('change',\n-      {target: {value: 'username@'}});\n-  expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, requireInstitutionalVerification: false});\n-  const wrapper = component();\n-  const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');\n-  expect(institutionName).toBeTruthy();\n-  const institutionRole = wrapper.find('[data-test-id=\"institutionRole\"]');\n-  expect(institutionRole).toBeTruthy();\n-  expect(institutionRole.find('li').length).toBe(AccountCreationOptions.roles.length);\n-  expect(institutionRole.find('li').get(0).props.children).toBe(AccountCreationOptions.roles[0].label);\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Affiliation information if No is selected', () => {\n-  serverConfigStore.next({...defaultConfig, requireInstitutionalVerification: false});\n-  const wrapper = component();\n-  const institutionAffilationOption = wrapper.find('[data-test-id=\"show-institution-no\"]')\n-    .find('input');\n-  expect(institutionAffilationOption).toBeTruthy();\n-  institutionAffilationOption.simulate('click');\n-  const affiliationDropDown = wrapper.find('Dropdown');\n-  const affiliationOptions = affiliationDropDown.find('DropdownItem');\n-  expect(affiliationOptions.length).toBe(AccountCreationOptions.nonAcademicAffiliations.length);\n-  expect(affiliationOptions.find('li').get(0).props.children)\n-    .toBe(AccountCreationOptions.nonAcademicAffiliations[0].label);\n-});\n-\n-// TODO remove after we switch to verified institutional affiliation\n-it('should display Affiliation Roles should change as per affiliation', () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODgzNzE3OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/sign-in.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMTowMFrOGsPFEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMTowMFrOGsPFEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNzU4NQ==", "bodyText": "rm (verification = false) test.  diff continues with the rest of the true test", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449037585", "createdAt": "2020-07-02T14:21:00Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -80,45 +80,15 @@ describe('SignInReact', () => {\n     const templateImage = wrapper.find('[data-test-id=\"sign-in-page\"]');\n   });\n \n-  it('should handle sign-up flow without institutional verification', () => {\n+  it('should handle sign-up flow', () => {\n     // This test is meant to validate the high-level flow through the sign-in component by checking\n     // that each step of the user registration flow is correctly rendered in order.\n     //\n     // As this is simply a high-level test of this component's ability to render each sub-component,\n     // we use Enzyme's shallow rendering to avoid needing to deal with the DOM-level details of\n     // each of the sub-components. Tests within the 'account-creation' folder should cover those\n     // details.\n-    props.serverConfig = {...defaultConfig, requireInstitutionalVerification: false};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODg0MTUyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/sign-in.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMTo1MVrOGsPHqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMTo1MVrOGsPHqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzODI0OQ==", "bodyText": "flag was false before.  now it's true and there's an extra page", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449038249", "createdAt": "2020-07-02T14:21:51Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -161,6 +131,7 @@ describe('SignInReact', () => {\n     expect(steps).toEqual([\n       SignInStep.LANDING,\n       SignInStep.TERMS_OF_SERVICE,\n+      SignInStep.INSTITUTIONAL_AFFILIATION,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODg0ODA2OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/profile/data-user-code-of-conduct.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMzoyMFrOGsPLsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyMzoyMFrOGsPLsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzOTI4MQ==", "bodyText": "not clear why this was here.  DUCC should not be affected by this.", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449039281", "createdAt": "2020-07-02T14:23:20Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/profile/data-user-code-of-conduct.spec.tsx", "diffHunk": "@@ -10,7 +10,7 @@ import {waitOneTickAndUpdate} from '../../../testing/react-test-helpers';\n \n const defaultConfig = {\n   gsuiteDomain: 'researchallofus.org',\n-  requireInstitutionalVerification: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODg1NTE1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/profile/profile-page.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyNDo1NFrOGsPQLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoyNDo1NFrOGsPQLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTA0MDQyOA==", "bodyText": "probably should have flag-protected the section above this.  So it's been always-true for a while already.  oops.", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449040428", "createdAt": "2020-07-02T14:24:54Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -447,7 +447,7 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n                   valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n                   disabled: true\n                 })}\n-                {requireInstitutionalVerification && !profile.verifiedInstitutionalAffiliation &&\n+                {!profile.verifiedInstitutionalAffiliation &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c930494b011f2fe3272eb0ff9b1b84d0ef3ea80"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTI1NTM0OnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0Njo0OVrOGsTVTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo0Njo0OVrOGsTVTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEwNzI3OQ==", "bodyText": "IIRC this represents some older behavior.  It's not currently correct.", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449107279", "createdAt": "2020-07-02T15:46:49Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -408,8 +408,8 @@ public DbUser createUser(\n   }\n \n   /**\n-   * Save updated dbUser object if requireInstitutionalVerification is enabled: Get the existing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cfba9a942107b05d7e9ae242a06e588cbf3778"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTI4MDQ2OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1MDoyMFrOGsTmGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNTo1MDoyMFrOGsTmGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExMTU3Nw==", "bodyText": "email is now on the institution page", "url": "https://github.com/all-of-us/workbench/pull/3741#discussion_r449111577", "createdAt": "2020-07-02T15:50:20Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -98,83 +92,32 @@ export interface AccountCreationProps {\n export interface AccountCreationState {\n   creatingAccount: boolean;\n   errors: any;\n-  invalidEmail: boolean;\n   profile: Profile;\n   showAllFieldsRequiredError: boolean;\n+  showMostInterestedInKnowingBlurb: boolean;\n   usernameCheckInProgress: boolean;\n   usernameConflictError: boolean;\n-  // TODO(RW-4361): remove all after this point, after we switch to verified institutional affiliation\n-  rolesOptions: any;\n-  showInstitution: boolean;\n-  showNonAcademicAffiliationRole: boolean;\n-  showNonAcademicAffiliationOther: boolean;\n-  showMostInterestedInKnowingBlurb: boolean;\n-  institutionName: string;\n-  institutionRole: string;\n-  nonAcademicAffiliation: string;\n-  nonAcademicAffiliationRole: string;\n-  nonAcademicAffiliationOther: string;\n }\n \n export class AccountCreation extends React.Component<AccountCreationProps, AccountCreationState> {\n   private usernameCheckTimeout: NodeJS.Timer;\n \n   constructor(props: AccountCreationProps) {\n-    // What's going on with this assertion: the account creation form only edits a single\n-    // institutional affiliation entry, even though it's a repeated field. This component has\n-    // a convention of requiring the Profile set in props to have a single, empty institutional\n-    // affiliation already populated, for editing by this form. See sign-in.tsx where the \"empty\"\n-    // profile object is created.\n-    // TODO(RW-4361): remove after we switch to verified institutional affiliation\n-    if (!serverConfigStore.getValue().requireInstitutionalVerification &&\n-      props.profile.institutionalAffiliations.length !== 1) {\n-      throw new Error('Profile must be pre-allocated with 1 institutional affiliation.');\n-    }\n     super(props);\n     this.state = this.createInitialState();\n   }\n \n-  async componentDidMount() {\n-    // TODO(RW-4361): Remove after we switch to verified institutional affiliation\n-    if (!serverConfigStore.getValue().requireInstitutionalVerification) {\n-      this.updateNonAcademicAffiliationRoles(\n-        this.state.profile.institutionalAffiliations[0].nonAcademicAffiliation);\n-      this.selectNonAcademicAffiliationRoles(\n-        this.state.profile.institutionalAffiliations[0].role);\n-    }\n-  }\n-\n   createInitialState(): AccountCreationState {\n     const state: AccountCreationState = {\n+      creatingAccount: false,\n       errors: undefined,\n       profile: this.props.profile,\n-      usernameCheckInProgress: false,\n-      usernameConflictError: false,\n-      creatingAccount: false,\n       showAllFieldsRequiredError: false,\n-      invalidEmail: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cfba9a942107b05d7e9ae242a06e588cbf3778"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2625, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}