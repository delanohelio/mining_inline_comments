{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODQxOTc4", "number": 4002, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMTo0N1rOEjZvyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMDo0OFrOEju7Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTU3NDQ4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMTo0N1rOHRu6KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMTo0N1rOHRu6KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NjM5Mw==", "bodyText": "You should be able to unmarshal it using Gson. Something like this, but probably simpler: \n  \n    \n      workbench/api/src/main/java/org/pmiops/workbench/firecloud/FirecloudTransforms.java\n    \n    \n         Line 22\n      in\n      3fd2793\n    \n    \n    \n    \n\n        \n          \n           return gson.fromJson(gson.toJson(aclResp.getAcl(), accessEntryType), accessEntryType);", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488356393", "createdAt": "2020-09-15T03:11:47Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTU3ODQxOnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench-api.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMzo0MFrOHRu8SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMzo0MFrOHRu8SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NjkzNw==", "bodyText": "I'd just leave this enum out for now, can wait until the follow-up PR which looks at the runtime labels.", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488356937", "createdAt": "2020-09-15T03:13:40Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5254,24 +5254,124 @@ definitions:\n     - Deleting\n     - Deleted\n     - Unknown\n+  RuntimeConfigurationType:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTU4MTQ5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxNToxMFrOHRu9_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxNToxMFrOHRu9_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NzM3NQ==", "bodyText": "nit: \"Jupyter\".equals(image.getImageType()) for slightly better null safety", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488357375", "createdAt": "2020-09-15T03:15:10Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.\n+\n+    Map<String, Object> runtimeConfig =\n+        (Map<String, Object>) leonardoGetRuntimeResponse.getRuntimeConfig();\n+\n+    if (runtimeConfig.get(\"cloudService\").equals(\"DATAPROC\")) {\n+      runtime.dataprocConfig(\n+          new DataprocConfig()\n+              .numberOfWorkers(extractIntField(runtimeConfig, \"numberOfWorkers\"))\n+              .masterMachineType((String) runtimeConfig.get(\"masterMachineType\"))\n+              .masterDiskSize(extractIntField(runtimeConfig, \"masterDiskSize\"))\n+              .workerMachineType((String) runtimeConfig.get(\"workerMachineType\"))\n+              .workerDiskSize(extractIntField(runtimeConfig, \"workerDiskSize\"))\n+              .numberOfWorkerLocalSSDs(extractIntField(runtimeConfig, \"numberOfWorkerLocalSSDs\"))\n+              .numberOfPreemptibleWorkers(\n+                  extractIntField(runtimeConfig, \"numberOfPreemptibleWorkers\")));\n+    } else if (runtimeConfig.get(\"cloudService\").equals(\"GCE\")) {\n+      runtime.gceConfig(\n+          new GceConfig()\n+              .diskSize(extractIntField(runtimeConfig, \"diskSize\"))\n+              .bootDiskSize(extractIntField(runtimeConfig, \"bootDiskSize\"))\n+              .machineType((String) runtimeConfig.get(\"machineType\")));\n+    } else {\n+      throw new IllegalArgumentException(\n+          \"Invalid LeonardoGetRuntimeResponse.RuntimeConfig.cloudService : \"\n+              + runtimeConfig.get(\"cloudService\"));\n+    }\n+  }\n+\n   default RuntimeStatus toApiRuntimeStatus(LeonardoRuntimeStatus leonardoRuntimeStatus) {\n     if (leonardoRuntimeStatus == null) {\n       return RuntimeStatus.UNKNOWN;\n     }\n     return RuntimeStatus.fromValue(leonardoRuntimeStatus.toString());\n   }\n+\n+  default String getJupyterImage(List<LeonardoRuntimeImage> images) {\n+    return images.stream()\n+        .filter(image -> image.getImageType().equals(\"Jupyter\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTA0NDAyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMDo0OFrOHSQXcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMDo0OFrOHSQXcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNDU2Mw==", "bodyText": "nit: would reverse the ordering again here for improved null safety", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488904563", "createdAt": "2020-09-15T19:10:48Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +36,51 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    Gson gson = new Gson();\n+    LeonardoRuntimeConfig runtimeConfig =\n+        gson.fromJson(\n+            gson.toJson(leonardoGetRuntimeResponse.getRuntimeConfig()),\n+            LeonardoRuntimeConfig.class);\n+\n+    if (runtimeConfig.getCloudService().equals(CloudServiceEnum.DATAPROC)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "110dc0ab1749d793b1b6eec95f4c8220500c9d63"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4077, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}