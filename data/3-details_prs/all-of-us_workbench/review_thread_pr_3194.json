{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTM0NzM1", "number": 3194, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyMTowMlrODjQ5ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo1MToyMlrODj3FPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzAzNjUxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyMTowMlrOFu-gyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyMTowMlrOFu-gyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwMzAxOA==", "bodyText": "new flow will have 3 pages", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r384803018", "createdAt": "2020-02-26T22:21:02Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -121,10 +113,11 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       },\n     };\n     const errors = validate(demographicSurvey, validationCheck);\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n \n     return <div style={{marginTop: '1rem', paddingLeft: '3rem', width: '26rem'}}>\n       <label style={{color: colors.primary, fontSize: 16}}>\n-        Please complete Step 2 of 2\n+        Please complete Step {requireInstitutionalVerification ? '3 of 3' : '2 of 2'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0340086ce78ebc178e6a5ef8ac1a0bd35c96aa"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA0NTQ1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/sign-in.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyMzo1NVrOFu-mJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyMzo1NVrOFu-mJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNDM4OQ==", "bodyText": "Moved to top-level from elsewhere in this file", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r384804389", "createdAt": "2020-02-26T22:23:55Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.tsx", "diffHunk": "@@ -128,6 +129,47 @@ interface SignInState {\n   termsOfServiceVersion?: number;\n }\n \n+export const createEmptyProfile = (requireInstitutionalVerification: boolean): Profile => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0340086ce78ebc178e6a5ef8ac1a0bd35c96aa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA2MDU5OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyOTowN1rOFu-vew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyOTowN1rOFu-vew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNjc3OQ==", "bodyText": "moved inside render() which is the only place it's used", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r384806779", "createdAt": "2020-02-26T22:29:07Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?\n+  getVerifiedInstitutionalAffiliationAttribute(attribute: string) {\n+    const {verifiedInstitutionalAffiliation} = this.state.profile;\n+    if (!verifiedInstitutionalAffiliation) {\n+      return undefined;\n+    } else {\n+      return verifiedInstitutionalAffiliation[attribute];\n+    }\n   }\n \n-  clearInstitutionAffiliation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0340086ce78ebc178e6a5ef8ac1a0bd35c96aa"}, "originalPosition": 202}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA2MjkxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyOTo1NlrOFu-w5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjoyOTo1NlrOFu-w5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNzE0MA==", "bodyText": "moved from inline in render()", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r384807140", "createdAt": "2020-02-26T22:29:56Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -474,14 +541,145 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n \n     const errors = this.validateAccountCreation();\n \n+    // TODO remove after we switch to verified institutional affiliation\n+    const clearInstitutionAffiliation = () => {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n+        nonAcademicAffiliation: null,\n+        role: '',\n+        institution: '',\n+        other: ''\n+      }));\n+    };\n+\n+    const renderVerifiedInstitutionalAffiliation = () => {\n+      if (!requireInstitutionalVerification) {\n+        return;\n+      }\n+\n+      const {institutionList} = this.state;\n+      const institutionShortName = this.getVerifiedInstitutionalAffiliationAttribute('institutionShortName');\n+      const institutionalRoleEnum = this.getVerifiedInstitutionalAffiliationAttribute('institutionalRoleEnum');\n+      const institutionalRoleOtherText = this.getVerifiedInstitutionalAffiliationAttribute('institutionalRoleOtherText');\n+\n+      return <React.Fragment>\n+        <FlexColumn style={{marginTop: '0.5rem'}}>\n+          <div style={{...styles.text, fontSize: 16}}>\n+            Please complete Step 1 of 3\n+          </div>\n+          <div style={{...styles.text, fontSize: 16, marginTop: '0.5rem'}}>\n+            For access to the <i>All of Us</i> Research Program data, your institution needs to have signed a Data Use Agreement\n+            with the program. The institutions listed below have an Institutional Data Use Agreement with the program that\n+            enables us to provide their researchers with access to the Workbench.\n+          </div>\n+          <div style={{...styles.text, fontSize: 12, marginTop: '0.5rem'}}>All fields required unless indicated as optional</div>\n+          <label style={{...styles.text, fontWeight: 600, marginTop: '0.5rem'}}>Select your institution\n+            <i style={{...styles.publiclyDisplayedText, marginLeft: '0.2rem'}}>Publicly displayed</i>\n+          </label>\n+          <div style={{...styles.text, fontSize: 16}}>\n+            Your institution will be notified that you have registered using your institutional credentials.</div>\n+          <Dropdown options={institutionList.map(inst => ({'value': inst.shortName, 'label': inst.displayName}))}\n+                    value={institutionShortName}\n+                    onChange={(e) => this.updateInstitutionAffiliation('institutionShortName', e.value)}/>\n+          <a href={'https://www.researchallofus.org/apply/'} target='_blank' style={{color: colors.accent}}>\n+            Don't see your institution listed?\n+          </a>\n+          <TextInputWithLabel style={{marginTop: '1rem'}}\n+                              value={contactEmail} inputId='contactEmail' inputName='contactEmail'\n+                              labelText='Your institutional email address'\n+                              invalid={this.state.invalidEmail}\n+                              onChange={v => this.updateProfileObject('contactEmail', v)}/>\n+          {!requireInstitutionalVerification && this.state.invalidEmail &&\n+          <ErrorDiv id='invalidEmailError'>\n+            Contact Email is invalid\n+          </ErrorDiv>}\n+          <label style={{...styles.text, fontWeight: 600, marginTop: '1rem'}}>Which of the following best describes your role?\n+            <i style={{...styles.publiclyDisplayedText, marginLeft: '0.2rem'}}>Publicly displayed</i>\n+          </label>\n+          <Dropdown options={this.roleMapForSelectedInstitution}\n+                    value={institutionalRoleEnum}\n+                    onChange={(e) => this.updateInstitutionAffiliation('institutionalRoleEnum', e.value)}/>\n+          {institutionalRoleEnum === InstitutionalRole.OTHER && <React.Fragment>\n+            <label style={{...styles.text, fontWeight: 600, marginTop: '1rem'}}>Please describe your role\n+              <i style={{...styles.publiclyDisplayedText, marginLeft: '0.2rem'}}>Publicly displayed</i>\n+            </label>\n+            <TextInputWithLabel value={institutionalRoleOtherText} inputId='institutionalRoleOtherText' inputName='institutionalRoleOtherText'\n+                                onChange={v => this.updateInstitutionAffiliation('institutionalRoleOtherText', v)}/>\n+          </React.Fragment>}\n+        </FlexColumn>\n+      </React.Fragment>;\n+    };\n+\n+    // TODO remove after we switch to verified institutional affiliation\n+    const renderOldInstitutionalAffiliation = () => {\n+      if (requireInstitutionalVerification) {\n+        return;\n+      }\n+\n+      return <React.Fragment>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0340086ce78ebc178e6a5ef8ac1a0bd35c96aa"}, "originalPosition": 420}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA2NDc2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjozMDozNVrOFu-yCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjozMDozNVrOFu-yCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgwNzQzNQ==", "bodyText": "email is now part of step 1 because it depends on the inst affil", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r384807435", "createdAt": "2020-02-26T22:30:35Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -529,12 +727,14 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n                   Last Name must be {nameLength} character or less.\n                 </ErrorMessage>}\n               </FlexRow>\n-              <FlexRow style={{alignItems: 'center'}}>\n-                <TextInputWithLabel value={contactEmail} inputId='contactEmail' inputName='contactEmail'\n-                                    placeholder='Email Address'\n-                                    invalid={this.state.invalidEmail} labelText='Email Address'\n-                                    onChange={v => this.updateProfileObject('contactEmail', v)}/>\n-                {this.state.invalidEmail &&\n+              <FlexRow style={{alignItems: 'left'}}>\n+                {/* TODO remove after we switch to verified institutional affiliation */}\n+                {!requireInstitutionalVerification &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0340086ce78ebc178e6a5ef8ac1a0bd35c96aa"}, "originalPosition": 510}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg2NjM0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo1NzozMlrOFvZPCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo1NzozMlrOFvZPCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MDg0Mw==", "bodyText": "This is mostly a copy of the old-flow roles but not quite, so I'm making a clean break and deleting the old ones later, as planned here: https://docs.google.com/document/d/1qrTwj2-YH3-r_nAveQnY75L5GCLuaBwqfwSciiF4p3M/edit#bookmark=id.3ah876rsgvdu", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385240843", "createdAt": "2020-02-27T16:57:32Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -59,6 +63,80 @@ export const AccountCreationOptions = {\n     {label: 'Administrator', value: EducationalRole.ADMIN},\n     {label: 'Other (free text)', value: EducationalRole.FREETEXT}\n   ],\n+  // END roles and affiliations for old (pre-verification) institutional affiliation\n+  // BEGIN roles for verified institutional affiliation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg3MDEyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo1ODozM1rOFvZRgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODoyOTozN1rOFvcX_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MTQ3NQ==", "bodyText": "Object.values() turns them into strings instead, oh well", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385241475", "createdAt": "2020-02-27T16:58:33Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -59,6 +63,80 @@ export const AccountCreationOptions = {\n     {label: 'Administrator', value: EducationalRole.ADMIN},\n     {label: 'Other (free text)', value: EducationalRole.FREETEXT}\n   ],\n+  // END roles and affiliations for old (pre-verification) institutional affiliation\n+  // BEGIN roles for verified institutional affiliation\n+  institutionalRoles: [\n+    {label: `Undergraduate (Bachelor level) student`,\n+      value: InstitutionalRole.UNDERGRADUATE},\n+    {label: `Graduate trainee (Current student in a Masters, PhD, or Medical school training program)`,\n+      value: InstitutionalRole.TRAINEE},\n+    {label: `Research fellow (a post-doctoral fellow or medical resident in training)`,\n+      value: InstitutionalRole.FELLOW},\n+    {label: `Early career tenure-track researcher`,\n+      value: InstitutionalRole.EARLYCAREER},\n+    {label: `Mid-career tenured researcher`,\n+      value: InstitutionalRole.MIDCAREER},\n+    {label: `Late career tenured researcher`,\n+      value: InstitutionalRole.LATECAREER},\n+    {label: `Project Personnel (eg: Research Assistant, Data Analyst, Project Manager, Research Coordinator or other roles)`,\n+      value: InstitutionalRole.PROJECTPERSONNEL},\n+    {label: 'Research Assistant (pre-doctoral)',\n+      value: InstitutionalRole.PREDOCTORAL},\n+    {label: 'Research associate (post-doctoral; early/mid career)',\n+      value: InstitutionalRole.POSTDOCTORAL},\n+    {label: 'Senior Researcher (PI/Team Lead, senior scientist)',\n+      value: InstitutionalRole.SENIORRESEARCHER},\n+    {label: 'Teacher/Instructor/Professor',\n+      value: InstitutionalRole.TEACHER},\n+    {label: 'Student',\n+      value: InstitutionalRole.STUDENT},\n+    {label: 'Administrator',\n+      value: InstitutionalRole.ADMIN},\n+    {label: 'Other (free text)',\n+      value: InstitutionalRole.OTHER},\n+  ],\n+  institutionalRolesByOrganizationType: [\n+    {type: OrganizationType.ACADEMICRESEARCHINSTITUTION,\n+      roles: [\n+        InstitutionalRole.UNDERGRADUATE,\n+        InstitutionalRole.TRAINEE,\n+        InstitutionalRole.FELLOW,\n+        InstitutionalRole.EARLYCAREER,\n+        InstitutionalRole.MIDCAREER,\n+        InstitutionalRole.LATECAREER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.INDUSTRY,\n+      // identical to the HEALTHCENTERNONPROFIT roles\n+      roles: [\n+        InstitutionalRole.PREDOCTORAL,\n+        InstitutionalRole.POSTDOCTORAL,\n+        InstitutionalRole.SENIORRESEARCHER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.HEALTHCENTERNONPROFIT,\n+      // identical to the INDUSTRY roles\n+      roles: [\n+        InstitutionalRole.PREDOCTORAL,\n+        InstitutionalRole.POSTDOCTORAL,\n+        InstitutionalRole.SENIORRESEARCHER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.EDUCATIONALINSTITUTION,\n+      roles: [\n+        InstitutionalRole.TEACHER,\n+        InstitutionalRole.STUDENT,\n+        InstitutionalRole.ADMIN,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.OTHER,\n+      // display all roles for OTHER\n+      roles: Object.keys(InstitutionalRole).map(k => InstitutionalRole[k])}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5MjI4NA==", "bodyText": "booooo javascriiiiipt", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385292284", "createdAt": "2020-02-27T18:29:37Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-options.tsx", "diffHunk": "@@ -59,6 +63,80 @@ export const AccountCreationOptions = {\n     {label: 'Administrator', value: EducationalRole.ADMIN},\n     {label: 'Other (free text)', value: EducationalRole.FREETEXT}\n   ],\n+  // END roles and affiliations for old (pre-verification) institutional affiliation\n+  // BEGIN roles for verified institutional affiliation\n+  institutionalRoles: [\n+    {label: `Undergraduate (Bachelor level) student`,\n+      value: InstitutionalRole.UNDERGRADUATE},\n+    {label: `Graduate trainee (Current student in a Masters, PhD, or Medical school training program)`,\n+      value: InstitutionalRole.TRAINEE},\n+    {label: `Research fellow (a post-doctoral fellow or medical resident in training)`,\n+      value: InstitutionalRole.FELLOW},\n+    {label: `Early career tenure-track researcher`,\n+      value: InstitutionalRole.EARLYCAREER},\n+    {label: `Mid-career tenured researcher`,\n+      value: InstitutionalRole.MIDCAREER},\n+    {label: `Late career tenured researcher`,\n+      value: InstitutionalRole.LATECAREER},\n+    {label: `Project Personnel (eg: Research Assistant, Data Analyst, Project Manager, Research Coordinator or other roles)`,\n+      value: InstitutionalRole.PROJECTPERSONNEL},\n+    {label: 'Research Assistant (pre-doctoral)',\n+      value: InstitutionalRole.PREDOCTORAL},\n+    {label: 'Research associate (post-doctoral; early/mid career)',\n+      value: InstitutionalRole.POSTDOCTORAL},\n+    {label: 'Senior Researcher (PI/Team Lead, senior scientist)',\n+      value: InstitutionalRole.SENIORRESEARCHER},\n+    {label: 'Teacher/Instructor/Professor',\n+      value: InstitutionalRole.TEACHER},\n+    {label: 'Student',\n+      value: InstitutionalRole.STUDENT},\n+    {label: 'Administrator',\n+      value: InstitutionalRole.ADMIN},\n+    {label: 'Other (free text)',\n+      value: InstitutionalRole.OTHER},\n+  ],\n+  institutionalRolesByOrganizationType: [\n+    {type: OrganizationType.ACADEMICRESEARCHINSTITUTION,\n+      roles: [\n+        InstitutionalRole.UNDERGRADUATE,\n+        InstitutionalRole.TRAINEE,\n+        InstitutionalRole.FELLOW,\n+        InstitutionalRole.EARLYCAREER,\n+        InstitutionalRole.MIDCAREER,\n+        InstitutionalRole.LATECAREER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.INDUSTRY,\n+      // identical to the HEALTHCENTERNONPROFIT roles\n+      roles: [\n+        InstitutionalRole.PREDOCTORAL,\n+        InstitutionalRole.POSTDOCTORAL,\n+        InstitutionalRole.SENIORRESEARCHER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.HEALTHCENTERNONPROFIT,\n+      // identical to the INDUSTRY roles\n+      roles: [\n+        InstitutionalRole.PREDOCTORAL,\n+        InstitutionalRole.POSTDOCTORAL,\n+        InstitutionalRole.SENIORRESEARCHER,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.EDUCATIONALINSTITUTION,\n+      roles: [\n+        InstitutionalRole.TEACHER,\n+        InstitutionalRole.STUDENT,\n+        InstitutionalRole.ADMIN,\n+        InstitutionalRole.PROJECTPERSONNEL,\n+        InstitutionalRole.OTHER,\n+      ]},\n+    {type: OrganizationType.OTHER,\n+      // display all roles for OTHER\n+      roles: Object.keys(InstitutionalRole).map(k => InstitutionalRole[k])}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MTQ3NQ=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg3NTUxOnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.spec.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo1OTo1MFrOFvZU5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTozODo0NVrOFwAjwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjM0MQ==", "bodyText": "deleted test-utils.  It had only this, which was a test-only copy of the real fn createEmptyProfile", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385242341", "createdAt": "2020-02-27T16:59:50Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.spec.tsx", "diffHunk": "@@ -5,9 +5,9 @@ import {\n   AccountCreationSurvey,\n   AccountCreationSurveyProps,\n } from 'app/pages/login/account-creation/account-creation-survey';\n-import {getEmptyProfile} from 'app/pages/login/test-utils';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5MjUyNg==", "bodyText": "does it make sense to delete that actual function?", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385292526", "createdAt": "2020-02-27T18:30:04Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.spec.tsx", "diffHunk": "@@ -5,9 +5,9 @@ import {\n   AccountCreationSurvey,\n   AccountCreationSurveyProps,\n } from 'app/pages/login/account-creation/account-creation-survey';\n-import {getEmptyProfile} from 'app/pages/login/test-utils';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjM0MQ=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2OTgyNg==", "bodyText": "delete createEmptyProfile() ?\nHmm.  It's a bit of a code smell to me, but it's not one I have looked into much yet.  Probably worth doing so at some point.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385869826", "createdAt": "2020-02-28T19:04:39Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.spec.tsx", "diffHunk": "@@ -5,9 +5,9 @@ import {\n   AccountCreationSurvey,\n   AccountCreationSurveyProps,\n } from 'app/pages/login/account-creation/account-creation-survey';\n-import {getEmptyProfile} from 'app/pages/login/test-utils';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjM0MQ=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTEyMg==", "bodyText": "No, sorry, getEmptyProfile. Though it looks like you may have gotten rid of the entire file. So. NVM", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385885122", "createdAt": "2020-02-28T19:38:45Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.spec.tsx", "diffHunk": "@@ -5,9 +5,9 @@ import {\n   AccountCreationSurvey,\n   AccountCreationSurveyProps,\n } from 'app/pages/login/account-creation/account-creation-survey';\n-import {getEmptyProfile} from 'app/pages/login/test-utils';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MjM0MQ=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTg4Mjc2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzowMTo0NlrOFvZZZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTozOToxNlrOFwAklQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzQ5Mg==", "bodyText": "aside: this data-test-id should actually be \"institution-name\".  I don't understand why this test passes.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385243492", "createdAt": "2020-02-27T17:01:46Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -123,8 +126,9 @@ it('should handle invalid Email', () => {\n   expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n });\n \n+// TODO remove after we switch to verified institutional affiliation\n it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true});\n+  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true, requireInstitutionalVerification: false});\n   const wrapper = component();\n   const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0MjE4MQ==", "bodyText": "weird. does it still work if you fix the query here?", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385342181", "createdAt": "2020-02-27T20:03:49Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -123,8 +126,9 @@ it('should handle invalid Email', () => {\n   expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n });\n \n+// TODO remove after we switch to verified institutional affiliation\n it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true});\n+  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true, requireInstitutionalVerification: false});\n   const wrapper = component();\n   const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzQ5Mg=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3MDU4NA==", "bodyText": "yes.  My suspicion is that wrapper.find()'s return value doesn't work how we are assuming it does.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385870584", "createdAt": "2020-02-28T19:06:25Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -123,8 +126,9 @@ it('should handle invalid Email', () => {\n   expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n });\n \n+// TODO remove after we switch to verified institutional affiliation\n it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true});\n+  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true, requireInstitutionalVerification: false});\n   const wrapper = component();\n   const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzQ5Mg=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTMzMw==", "bodyText": "\ud83d\ude21", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385885333", "createdAt": "2020-02-28T19:39:16Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -123,8 +126,9 @@ it('should handle invalid Email', () => {\n   expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n });\n \n+// TODO remove after we switch to verified institutional affiliation\n it('should display Institution name and role option by default', () => {\n-  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true});\n+  serverConfigStore.next({...defaultConfig, enableNewAccountCreation: true, requireInstitutionalVerification: false});\n   const wrapper = component();\n   const institutionName = wrapper.find('[data-test-id=\"institutionname\"]');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0MzQ5Mg=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTkzMjc5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/sign-in.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNTowOFrOFvZ5Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNTowOFrOFvZ5Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1MTYwNg==", "bodyText": "moved from render()", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385251606", "createdAt": "2020-02-27T17:15:08Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.tsx", "diffHunk": "@@ -128,6 +129,47 @@ interface SignInState {\n   termsOfServiceVersion?: number;\n }\n \n+export const createEmptyProfile = (requireInstitutionalVerification: boolean = false): Profile => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk0MDMwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/profile/profile-page.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNzoxMVrOFvZ9sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNzoxMVrOFvZ9sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1Mjc4Ng==", "bodyText": "these 2 are pulled out and made more explicit from their original contexts, which has itself been pulled out to renderOldInstitutionalAffiliationComponents()", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385252786", "createdAt": "2020-02-27T17:17:11Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -157,11 +166,98 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n       </div>;\n     };\n \n+    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk0MzIwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/profile/profile-page.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxODowNVrOFvZ_jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxODowNVrOFvZ_jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1MzI2MQ==", "bodyText": "Earlier discussion on a draft version of this at #3181", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385253261", "createdAt": "2020-02-27T17:18:05Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -157,11 +166,98 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n       </div>;\n     };\n \n+    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n+      this.setState(fp.update(\n+        ['profileEdits', 'institutionalAffiliations'],\n+        fp.pull(affiliation)\n+      ));\n+    };\n+\n+    const addEmptyOldInstitutionalAffiliation = () => {\n+      this.setState(fp.update(\n+        ['profileEdits', 'institutionalAffiliations'],\n+        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n+    };\n+\n+    const renderVerifiedInstitutionalAffiliationComponents = () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk2NTg5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/profile/profile-page.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyNDoxNFrOFvaNcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyNDoxNFrOFvaNcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1NjgxNw==", "bodyText": "moved from render()", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385256817", "createdAt": "2020-02-27T17:24:14Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -157,11 +166,98 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n       </div>;\n     };\n \n+    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n+      this.setState(fp.update(\n+        ['profileEdits', 'institutionalAffiliations'],\n+        fp.pull(affiliation)\n+      ));\n+    };\n+\n+    const addEmptyOldInstitutionalAffiliation = () => {\n+      this.setState(fp.update(\n+        ['profileEdits', 'institutionalAffiliations'],\n+        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n+    };\n+\n+    const renderVerifiedInstitutionalAffiliationComponents = () => {\n+      const {verifiedInstitutionalAffiliation} = profile;\n+      if (!verifiedInstitutionalAffiliation) {\n+        return;\n+      }\n+\n+      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n+      return <React.Fragment>\n+        <div style={{...styles.h1, marginBottom: 24}}>Verified Institutional Affiliation</div>\n+        <FlexRow>\n+          <FlexColumn>\n+            <div style={styles.inputLabel}>Institution</div>\n+            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n+          </FlexColumn>\n+          <FlexColumn>\n+            <div style={styles.inputLabel}>Role</div>\n+            <div style={styles.uneditableProfileElement}>\n+            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n+            </div>\n+          </FlexColumn>\n+        </FlexRow>\n+      </React.Fragment>;\n+    };\n+\n+    const renderOldInstitutionalAffiliationComponents = () => {\n+      return <React.Fragment>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk3MDMxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyNTozNlrOFvaQVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDowODoxMVrOFvfi4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1NzU1Ng==", "bodyText": "I'm guessing the linter did this", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385257556", "createdAt": "2020-02-27T17:25:36Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -1,10 +1,7 @@\n import {Button} from 'app/components/buttons';\n import {FormSection} from 'app/components/forms';\n \n-import {\n-  InfoIcon,\n-  ValidationIcon\n-} from 'app/components/icons';\n+import {InfoIcon, ValidationIcon} from 'app/components/icons';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NDIyNQ==", "bodyText": "it does things like this.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385344225", "createdAt": "2020-02-27T20:08:11Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -1,10 +1,7 @@\n import {Button} from 'app/components/buttons';\n import {FormSection} from 'app/components/forms';\n \n-import {\n-  InfoIcon,\n-  ValidationIcon\n-} from 'app/components/icons';\n+import {InfoIcon, ValidationIcon} from 'app/components/icons';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1NzU1Ng=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjA1MzUwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0OTowNlrOFvbEiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxMTozNFrOFv_z_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MDkyMA==", "bodyText": "am I doing crimes?", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385270920", "createdAt": "2020-02-27T17:49:06Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // TODO remove after we switch to verified institutional affiliation\n+  showInstitutionAffiliationFreeTextField(option) {\n+    return option === NonAcademicAffiliation.FREETEXT ||\n+      option === IndustryRole.FREETEXT ||\n+      option === EducationalRole.FREETEXT;\n   }\n \n-  clearInstitutionAffiliation() {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n-      nonAcademicAffiliation: null,\n-      role: '',\n-      institution: '',\n-      other: ''\n-    }));\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MjkxMQ==", "bodyText": "yes. tomorrow at high noon you will be dragged unceremoniously to the typescript pillory and defunct javascript frameworks will be thrown at your face while the webdev community jeers at you.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385352911", "createdAt": "2020-02-27T20:26:36Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // TODO remove after we switch to verified institutional affiliation\n+  showInstitutionAffiliationFreeTextField(option) {\n+    return option === NonAcademicAffiliation.FREETEXT ||\n+      option === IndustryRole.FREETEXT ||\n+      option === EducationalRole.FREETEXT;\n   }\n \n-  clearInstitutionAffiliation() {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n-      nonAcademicAffiliation: null,\n-      role: '',\n-      institution: '',\n-      other: ''\n-    }));\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MDkyMA=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MzM1OA==", "bodyText": "(this is better than doing this check each time. unless I'm misunderstanding something, this will become unnecessary when the feature flag is deleted. this just means this should be a feature flag we seriously prioritize deleting.)", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385353358", "createdAt": "2020-02-27T20:27:39Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // TODO remove after we switch to verified institutional affiliation\n+  showInstitutionAffiliationFreeTextField(option) {\n+    return option === NonAcademicAffiliation.FREETEXT ||\n+      option === IndustryRole.FREETEXT ||\n+      option === EducationalRole.FREETEXT;\n   }\n \n-  clearInstitutionAffiliation() {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n-      nonAcademicAffiliation: null,\n-      role: '',\n-      institution: '',\n-      other: ''\n-    }));\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MDkyMA=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MzQ5OQ==", "bodyText": "please add a // TODO remove after we switch to etc.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385353499", "createdAt": "2020-02-27T20:27:57Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // TODO remove after we switch to verified institutional affiliation\n+  showInstitutionAffiliationFreeTextField(option) {\n+    return option === NonAcademicAffiliation.FREETEXT ||\n+      option === IndustryRole.FREETEXT ||\n+      option === EducationalRole.FREETEXT;\n   }\n \n-  clearInstitutionAffiliation() {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n-      nonAcademicAffiliation: null,\n-      role: '',\n-      institution: '',\n-      other: ''\n-    }));\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MDkyMA=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3Mjg5Mw==", "bodyText": "This will still be needed because the value is null/undefined until renderVerifiedInstitutionalAffiliation() creates it.\nThe old flow avoids this issue by creating an empty institutional affiliation.  We could also do that here, if you think that's cleaner.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385872893", "createdAt": "2020-02-28T19:11:34Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -327,23 +367,33 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   }\n \n   updateInstitutionAffiliation(attribute: string, value) {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    const {requireInstitutionalVerification} = serverConfigStore.getValue();\n+    if (requireInstitutionalVerification) {\n+      this.setState(fp.set(['profile', 'verifiedInstitutionalAffiliation', attribute], value));\n+    } else {\n+      this.setState(fp.set(['profile', 'institutionalAffiliations', '0', attribute], value));\n+    }\n   }\n \n-  showFreeTextField(option) {\n-    return option === NonAcademicAffiliation.FREETEXT || option === IndustryRole.FREETEXT ||\n-        option === EducationalRole.FREETEXT;\n+  // TODO remove after we switch to verified institutional affiliation\n+  showInstitutionAffiliationFreeTextField(option) {\n+    return option === NonAcademicAffiliation.FREETEXT ||\n+      option === IndustryRole.FREETEXT ||\n+      option === EducationalRole.FREETEXT;\n   }\n \n-  clearInstitutionAffiliation() {\n-    this.setState(fp.set(['profile', 'institutionalAffiliations', '0'], {\n-      nonAcademicAffiliation: null,\n-      role: '',\n-      institution: '',\n-      other: ''\n-    }));\n+  // cannot destructure because verifiedInstitutionalAffiliation may not be defined\n+  // todo is this a code smell?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MDkyMA=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 206}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjA1NjQxOnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0OTo0N1rOFvbGLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo0OTo0N1rOFvbGLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3MTM0MA==", "bodyText": "moved to the else below", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385271340", "createdAt": "2020-02-27T17:49:47Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -384,15 +434,14 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n   validateAccountCreation() {\n     const {\n       showInstitution,\n-      profile: { givenName, familyName, contactEmail, areaOfResearch, degrees, username,\n-        address: {streetAddress1, city, country, state, zipCode}, institutionalAffiliations\n+      profile: {\n+        givenName, familyName, contactEmail, areaOfResearch, degrees, username,\n+        address: { streetAddress1, city, country, state, zipCode },\n+        // TODO remove after we switch to verified institutional affiliation\n+        institutionalAffiliations,\n       }\n     } = this.state;\n-\n-    let institution, nonAcademicAffiliation, role;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjUwNTMxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDowNzo1NlrOFvfiYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDowNzo1NlrOFvfiYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NDA5Ng==", "bodyText": "Can you write some tests for if the flag is switched on?", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385344096", "createdAt": "2020-02-27T20:07:56Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.spec.tsx", "diffHunk": "@@ -123,8 +126,9 @@ it('should handle invalid Email', () => {\n   expect(wrapper.exists('#invalidEmailError')).toBeFalsy();\n });\n \n+// TODO remove after we switch to verified institutional affiliation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjUxOTY0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxMjoxNFrOFvfrDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxMjoxNFrOFvfrDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NjMxNw==", "bodyText": "nit: slight preference for naming the props instead of passing in a props object, but I see we use this pattern elsewhere for things like FlexRow, so up to you.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385346317", "createdAt": "2020-02-27T20:12:14Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -118,6 +113,14 @@ export const Section = (props) => {\n   </FormSection>;\n };\n \n+export const DropDownSection = (props) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjUzNTQyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxNzo0MlrOFvf0zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxMzo0M1rOFv_3ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0ODgxNA==", "bodyText": "Please put a comment here explaining why we only care about the first institution.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385348814", "createdAt": "2020-02-27T20:17:42Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -204,22 +218,28 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n       usernameConflictError: false,\n       creatingAccount: false,\n       showAllFieldsRequiredError: false,\n-      // showInstitution defaults to true, since we expect most users coming in will be academics.\n-      showInstitution: true,\n-      showNonAcademicAffiliationRole: false,\n-      showNonAcademicAffiliationOther: false,\n       invalidEmail: false,\n+      // (KEEP) state for verified institutional affiliation\n+      institutionList: [],\n+      // TODO remove all after this point, after we switch to verified institutional affiliation\n       rolesOptions: [],\n       institutionName: '',\n       institutionRole: '',\n       nonAcademicAffiliation: '',\n       nonAcademicAffiliationRole: '',\n-      nonAcademicAffiliationOther: ''\n+      nonAcademicAffiliationOther: '',\n+      // showInstitution defaults to true, since we expect most users coming in will be academics.\n+      showInstitution: true,\n+      showNonAcademicAffiliationRole: false,\n+      showNonAcademicAffiliationOther: false,\n     };\n \n-    const institutionalAffiliation = this.props.profile.institutionalAffiliations[0];\n-    if (institutionalAffiliation.institution) {\n-      state.showInstitution = true;\n+    // TODO remove after we switch to verified institutional affiliation\n+    if (!serverConfigStore.getValue().requireInstitutionalVerification) {\n+      const institutionalAffiliation = this.props.profile.institutionalAffiliations[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3Mzg1MA==", "bodyText": "This is one of the things I don't really understand about the old flow", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385873850", "createdAt": "2020-02-28T19:13:43Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -204,22 +218,28 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n       usernameConflictError: false,\n       creatingAccount: false,\n       showAllFieldsRequiredError: false,\n-      // showInstitution defaults to true, since we expect most users coming in will be academics.\n-      showInstitution: true,\n-      showNonAcademicAffiliationRole: false,\n-      showNonAcademicAffiliationOther: false,\n       invalidEmail: false,\n+      // (KEEP) state for verified institutional affiliation\n+      institutionList: [],\n+      // TODO remove all after this point, after we switch to verified institutional affiliation\n       rolesOptions: [],\n       institutionName: '',\n       institutionRole: '',\n       nonAcademicAffiliation: '',\n       nonAcademicAffiliationRole: '',\n-      nonAcademicAffiliationOther: ''\n+      nonAcademicAffiliationOther: '',\n+      // showInstitution defaults to true, since we expect most users coming in will be academics.\n+      showInstitution: true,\n+      showNonAcademicAffiliationRole: false,\n+      showNonAcademicAffiliationOther: false,\n     };\n \n-    const institutionalAffiliation = this.props.profile.institutionalAffiliations[0];\n-    if (institutionalAffiliation.institution) {\n-      state.showInstitution = true;\n+    // TODO remove after we switch to verified institutional affiliation\n+    if (!serverConfigStore.getValue().requireInstitutionalVerification) {\n+      const institutionalAffiliation = this.props.profile.institutionalAffiliations[0];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0ODgxNA=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU1Mzk3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMzo1N1rOFvgAOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMzo1N1rOFvgAOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MTczOA==", "bodyText": "boo to no pattern matching in typescript.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385351738", "createdAt": "2020-02-27T20:23:57Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation.tsx", "diffHunk": "@@ -268,6 +288,26 @@ export class AccountCreation extends React.Component<AccountCreationProps, Accou\n     return (this.state.usernameConflictError || this.usernameInvalidError());\n   }\n \n+  get roleMapForSelectedInstitution() {\n+    const {institutionList, profile: {verifiedInstitutionalAffiliation}} = this.state;\n+    if (!institutionList || !verifiedInstitutionalAffiliation || isBlank(verifiedInstitutionalAffiliation.institutionShortName)) {\n+      return undefined;\n+    }\n+\n+    const selectedInstOrgType: OrganizationType = institutionList\n+      .find(inst => inst.shortName === verifiedInstitutionalAffiliation.institutionShortName)\n+      .organizationTypeEnum;\n+\n+    const rolesForSelectedInstitution: InstitutionalRole[] =\n+      AccountCreationOptions.institutionalRolesByOrganizationType\n+        .find(kvp => kvp.type === selectedInstOrgType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTI4ODQ1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/sign-in.spec.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo1MDoxOFrOFv5qHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNjozMlrOFv_8xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjA2MQ==", "bodyText": "why can't we just click the button?", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385772061", "createdAt": "2020-02-28T15:50:18Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -117,11 +117,40 @@ describe('SignInReact', () => {\n     wrapper.find(AccountCreationTos).props().onComplete();\n \n     expect(wrapper.exists(AccountCreation)).toBeTruthy();\n-    wrapper.find(AccountCreation).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreation).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n \n     // Account Creation Survey (e.g. demographics) is part of the new-style flow.\n     expect(wrapper.exists(AccountCreationSurvey)).toBeTruthy();\n-    wrapper.find(AccountCreationSurvey).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreationSurvey).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n+\n+    expect(wrapper.exists(AccountCreationSuccess)).toBeTruthy();\n+  });\n+\n+  it('should handle sign-up flow for new account creation with institutional verification', () => {\n+    props.serverConfig = {...defaultConfig, enableNewAccountCreation: true};\n+    const requireInstitutionalVerification = true;\n+\n+    const wrapper = shallowComponent();\n+\n+    // To start, the landing page / login component should be shown.\n+    expect(wrapper.exists(LoginReactComponent)).toBeTruthy();\n+    // Simulate the \"create account\" button being clicked by firing the callback method.\n+    wrapper.find(LoginReactComponent).props().onCreateAccount();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NTE0Mw==", "bodyText": "I don't know.  This is just copy/paste of the above test with a boolean flipped", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385875143", "createdAt": "2020-02-28T19:16:32Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -117,11 +117,40 @@ describe('SignInReact', () => {\n     wrapper.find(AccountCreationTos).props().onComplete();\n \n     expect(wrapper.exists(AccountCreation)).toBeTruthy();\n-    wrapper.find(AccountCreation).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreation).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n \n     // Account Creation Survey (e.g. demographics) is part of the new-style flow.\n     expect(wrapper.exists(AccountCreationSurvey)).toBeTruthy();\n-    wrapper.find(AccountCreationSurvey).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreationSurvey).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n+\n+    expect(wrapper.exists(AccountCreationSuccess)).toBeTruthy();\n+  });\n+\n+  it('should handle sign-up flow for new account creation with institutional verification', () => {\n+    props.serverConfig = {...defaultConfig, enableNewAccountCreation: true};\n+    const requireInstitutionalVerification = true;\n+\n+    const wrapper = shallowComponent();\n+\n+    // To start, the landing page / login component should be shown.\n+    expect(wrapper.exists(LoginReactComponent)).toBeTruthy();\n+    // Simulate the \"create account\" button being clicked by firing the callback method.\n+    wrapper.find(LoginReactComponent).props().onCreateAccount();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjA2MQ=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTI5MjE1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/sign-in.spec.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo1MToyMlrOFv5sgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNjo1M1rOFv_9eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjY3Mg==", "bodyText": "why can't we put the text in the text box?\nand similar comments for all the calling of internal callbacks below in this function.", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385772672", "createdAt": "2020-02-28T15:51:22Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -117,11 +117,40 @@ describe('SignInReact', () => {\n     wrapper.find(AccountCreationTos).props().onComplete();\n \n     expect(wrapper.exists(AccountCreation)).toBeTruthy();\n-    wrapper.find(AccountCreation).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreation).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n \n     // Account Creation Survey (e.g. demographics) is part of the new-style flow.\n     expect(wrapper.exists(AccountCreationSurvey)).toBeTruthy();\n-    wrapper.find(AccountCreationSurvey).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreationSurvey).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n+\n+    expect(wrapper.exists(AccountCreationSuccess)).toBeTruthy();\n+  });\n+\n+  it('should handle sign-up flow for new account creation with institutional verification', () => {\n+    props.serverConfig = {...defaultConfig, enableNewAccountCreation: true};\n+    const requireInstitutionalVerification = true;\n+\n+    const wrapper = shallowComponent();\n+\n+    // To start, the landing page / login component should be shown.\n+    expect(wrapper.exists(LoginReactComponent)).toBeTruthy();\n+    // Simulate the \"create account\" button being clicked by firing the callback method.\n+    wrapper.find(LoginReactComponent).props().onCreateAccount();\n+\n+    // Invitation key step is next.\n+    expect(wrapper.exists(InvitationKey)).toBeTruthy();\n+    wrapper.find(InvitationKey).props().onInvitationKeyVerified('asdf');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NTMyMQ==", "bodyText": "Same comment - I don't actually know how this test works", "url": "https://github.com/all-of-us/workbench/pull/3194#discussion_r385875321", "createdAt": "2020-02-28T19:16:53Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/login/sign-in.spec.tsx", "diffHunk": "@@ -117,11 +117,40 @@ describe('SignInReact', () => {\n     wrapper.find(AccountCreationTos).props().onComplete();\n \n     expect(wrapper.exists(AccountCreation)).toBeTruthy();\n-    wrapper.find(AccountCreation).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreation).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n \n     // Account Creation Survey (e.g. demographics) is part of the new-style flow.\n     expect(wrapper.exists(AccountCreationSurvey)).toBeTruthy();\n-    wrapper.find(AccountCreationSurvey).props().onComplete(getEmptyProfile());\n+    wrapper.find(AccountCreationSurvey).props().onComplete(createEmptyProfile(requireInstitutionalVerification));\n+\n+    expect(wrapper.exists(AccountCreationSuccess)).toBeTruthy();\n+  });\n+\n+  it('should handle sign-up flow for new account creation with institutional verification', () => {\n+    props.serverConfig = {...defaultConfig, enableNewAccountCreation: true};\n+    const requireInstitutionalVerification = true;\n+\n+    const wrapper = shallowComponent();\n+\n+    // To start, the landing page / login component should be shown.\n+    expect(wrapper.exists(LoginReactComponent)).toBeTruthy();\n+    // Simulate the \"create account\" button being clicked by firing the callback method.\n+    wrapper.find(LoginReactComponent).props().onCreateAccount();\n+\n+    // Invitation key step is next.\n+    expect(wrapper.exists(InvitationKey)).toBeTruthy();\n+    wrapper.find(InvitationKey).props().onInvitationKeyVerified('asdf');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MjY3Mg=="}, "originalCommit": {"oid": "301e290c4a7cade4f3f0919665abd465472a7391"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3160, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}