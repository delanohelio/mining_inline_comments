{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNzQ2NjIz", "number": 3911, "title": "[no ticket][risk=no] Puppeteer dataset export to notebook", "bodyText": "Break up export-to-notebook.spec test into export-py-notebook.spec and export-r-notebook.spec tests by programming language.\nReasons are:\n\ntoo many tests in single test suite takes a long time to finish.\nAdd Export dataset to notebook thru ellipsis menu test in export-py-notebook.spec test to cover regression https://precisionmedicineinitiative.atlassian.net/browse/RW-5388.", "createdAt": "2020-08-24T20:24:43Z", "url": "https://github.com/all-of-us/workbench/pull/3911", "merged": true, "mergeCommit": {"oid": "25b67b9ecdf343547852cec8a0664a5ff2292634"}, "closed": true, "closedAt": "2020-08-28T19:09:08Z", "author": {"login": "aweng98"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCJMUUgFqTQ3MzgzMzYyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDZiTPAFqTQ3Nzk1MTA4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczODMzNjI4", "url": "https://github.com/all-of-us/workbench/pull/3911#pullrequestreview-473833628", "createdAt": "2020-08-24T20:30:45Z", "commit": {"oid": "77edaae77845d1c3eddbfed42a11c84560655d11"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMDozMDo0NVrOHF1J_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQyMTowNjozNVrOHF2SRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg3NTgzNw==", "bodyText": "some modals open with loading spinner running.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475875837", "createdAt": "2020-08-24T20:30:45Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/modal.ts", "diffHunk": "@@ -22,7 +23,10 @@ export default class Modal extends Container {\n \n   async waitForLoad(): Promise<this> {\n     try {\n-      await this.waitUntilVisible();\n+      await Promise.all([\n+        this.waitUntilVisible(),\n+        waitWhileLoading(this.page),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77edaae77845d1c3eddbfed42a11c84560655d11"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Mzc5Mw==", "bodyText": "Remove async because it's not async function. Here and few other places.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475893793", "createdAt": "2020-08-24T21:05:23Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -52,12 +54,12 @@ export default class NewNotebookModal extends Modal {\n     return Textbox.findByName(this.page, {name: 'Name:'});\n   }\n \n-  async python3Radiobutton(): Promise<RadioButton> {\n+  python3Radiobutton(): RadioButton {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77edaae77845d1c3eddbfed42a11c84560655d11"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5NDM0MA==", "bodyText": "Text label string should be a LinkText enum value.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r475894340", "createdAt": "2020-08-24T21:06:35Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/dataset-save-modal.ts", "diffHunk": "@@ -10,10 +10,6 @@ import {waitUntilChanged} from 'utils/element-utils';\n import {waitForPropertyExists} from 'utils/waits-utils';\n import Textarea from 'app/element/textarea';\n \n-export const labelAlias = {\n-  SeeCodePreview: 'See Code Preview'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77edaae77845d1c3eddbfed42a11c84560655d11"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTU1OTg4", "url": "https://github.com/all-of-us/workbench/pull/3911#pullrequestreview-475555988", "createdAt": "2020-08-26T14:37:30Z", "commit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDozNzozMVrOHHPRQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0NzozNFrOHHPvAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjI1Nw==", "bodyText": "nit: camel case RadioButton", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477352257", "createdAt": "2020-08-26T14:37:31Z", "author": {"login": "petesantos"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjUwMw==", "bodyText": "nit: camel case RadioButton", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477352503", "createdAt": "2020-08-26T14:37:49Z", "author": {"login": "petesantos"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NDIwOQ==", "bodyText": "Suggestion on changing the conditionals to:\nconst radio = language === Language.Python ? this.getPythonRadioButton() : this.getRRadioButton();\nawait radio.select();", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477354209", "createdAt": "2020-08-26T14:40:04Z", "author": {"login": "petesantos"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:\n+   * - Type notebook name.\n+   * - Select notebook language.\n+   * - Click \"Export and Open\" button.\n+   * @param {string} notebookName Notebook name.\n+   * @param {Language} language Notebook programming language. Default value is Python.\n+   */\n+  async fillInModal(notebookName: string, language: Language = Language.Python): Promise<void> {\n+    const notebookNameInput = this.getNotebookNameInput();\n+    await notebookNameInput.type(notebookName);\n+    if (language === Language.Python) {\n+      const radio = this.getPythonRadiobutton();\n+      await radio.select();\n+    } else {\n+      const radio = this.getRRadiobutton();\n+      await radio.select();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1OTg3NQ==", "bodyText": "Same suggestion as above - is there a utils file or other abstraction where you could create a function and call it like\nawait selectNotebookRadioButton(page)", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477359875", "createdAt": "2020-08-26T14:47:34Z", "author": {"login": "petesantos"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -41,9 +41,11 @@ export default class NewNotebookModal extends Modal {\n   async fillInModal(notebookName: string, language: Language): Promise<void> {\n     await this.name().then( (textbox) => textbox.type(notebookName));\n     if (language === Language.Python) {\n-      await this.python3Radiobutton().then( (radio) => radio.select());\n+      const radio = this.python3Radiobutton();\n+      await radio.select();\n     } else {\n-      await this.RRadiobutton().then( (radio) => radio.select());\n+      const radio = this.RRadiobutton();\n+      await radio.select();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41206b8b84f8b7a83bcc406c3c475f58ca9c83c3", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/41206b8b84f8b7a83bcc406c3c475f58ca9c83c3", "committedDate": "2020-08-28T17:05:05Z", "message": "break up export-to-notebook.spec test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "220116f96a24e334e02c481a3be53207f11e8d65", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/220116f96a24e334e02c481a3be53207f11e8d65", "committedDate": "2020-08-28T17:05:05Z", "message": "dataset export to notebook thru ellipsis menu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527854ffe77b6c5541c98f7ac964f929556b1926", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/527854ffe77b6c5541c98f7ac964f929556b1926", "committedDate": "2020-08-28T17:05:05Z", "message": "fix modal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODk0ODAw", "url": "https://github.com/all-of-us/workbench/pull/3911#pullrequestreview-477894800", "createdAt": "2020-08-28T17:10:01Z", "commit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoxMDowMlrOHJOPAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNzoyMzo1N1rOHJOprA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMjQ0OQ==", "bodyText": "\ud83d\udc4d Done", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479432449", "createdAt": "2020-08-28T17:10:02Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1MjI1Nw=="}, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzMjg5MA==", "bodyText": "\ud83d\udc4d Done", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479432890", "createdAt": "2020-08-28T17:10:58Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:\n+   * - Type notebook name.\n+   * - Select notebook language.\n+   * - Click \"Export and Open\" button.\n+   * @param {string} notebookName Notebook name.\n+   * @param {Language} language Notebook programming language. Default value is Python.\n+   */\n+  async fillInModal(notebookName: string, language: Language = Language.Python): Promise<void> {\n+    const notebookNameInput = this.getNotebookNameInput();\n+    await notebookNameInput.type(notebookName);\n+    if (language === Language.Python) {\n+      const radio = this.getPythonRadiobutton();\n+      await radio.select();\n+    } else {\n+      const radio = this.getRRadiobutton();\n+      await radio.select();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1NDIwOQ=="}, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQzOTI3Ng==", "bodyText": "It's a good idea. So far, I only noticed two modals with radiobuttons. A common function doesn't save a lot at this time. Also, I didn't combine this time because Python radiobutton labels were different in two modals. One is Python 3 and other is Python.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r479439276", "createdAt": "2020-08-28T17:23:57Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -41,9 +41,11 @@ export default class NewNotebookModal extends Modal {\n   async fillInModal(notebookName: string, language: Language): Promise<void> {\n     await this.name().then( (textbox) => textbox.type(notebookName));\n     if (language === Language.Python) {\n-      await this.python3Radiobutton().then( (radio) => radio.select());\n+      const radio = this.python3Radiobutton();\n+      await radio.select();\n     } else {\n-      await this.RRadiobutton().then( (radio) => radio.select());\n+      const radio = this.RRadiobutton();\n+      await radio.select();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1OTg3NQ=="}, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "committedDate": "2020-08-28T17:27:08Z", "message": "PR feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9cc9ecfe2934f25d5202184359ad506188afed81", "committedDate": "2020-08-24T21:13:24Z", "message": "fix modal"}, "afterCommit": {"oid": "c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c00a866273ea6e022958ef740d01c0e5f0e0b5d7", "committedDate": "2020-08-28T17:27:08Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0Njg2OTQ5", "url": "https://github.com/all-of-us/workbench/pull/3911#pullrequestreview-474686949", "createdAt": "2020-08-25T17:12:55Z", "commit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNzoxMjo1NVrOHGhyEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNzoyMzoxNlrOHHWKcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNjk5Mw==", "bodyText": "why is this commented out?", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476606993", "createdAt": "2020-08-25T17:12:55Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzM3NQ==", "bodyText": "I don't think you need the parenthesis around this.getNotebookNameInput(), or I don't understand what they do.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476607375", "createdAt": "2020-08-25T17:13:33Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwNzgxOQ==", "bodyText": "If this is a common exception handling pattern, can it be implemented in the parent class Modal or even higher?", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476607819", "createdAt": "2020-08-25T17:14:12Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYwODgxNQ==", "bodyText": "It might be good to test the dialog in various states of missing, incomplete, or erroneous input. For example, if you delete the text, does the OK button become non-responsive.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476608815", "createdAt": "2020-08-25T17:15:40Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMTE3MA==", "bodyText": "we can de-duplicate this by putting it after the if/else.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476611170", "createdAt": "2020-08-25T17:19:33Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -41,9 +41,11 @@ export default class NewNotebookModal extends Modal {\n   async fillInModal(notebookName: string, language: Language): Promise<void> {\n     await this.name().then( (textbox) => textbox.type(notebookName));\n     if (language === Language.Python) {\n-      await this.python3Radiobutton().then( (radio) => radio.select());\n+      const radio = this.python3Radiobutton();\n+      await radio.select();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjYxMTM4MA==", "bodyText": "@petesantos can eslint detect this?", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r476611380", "createdAt": "2020-08-25T17:19:55Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -52,12 +54,12 @@ export default class NewNotebookModal extends Modal {\n     return Textbox.findByName(this.page, {name: 'Name:'});\n   }\n \n-  async python3Radiobutton(): Promise<RadioButton> {\n+  python3Radiobutton(): RadioButton {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTg5Mzc5Mw=="}, "originalCommit": {"oid": "77edaae77845d1c3eddbfed42a11c84560655d11"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NDYzMQ==", "bodyText": "You can do the select after if you declarer the radio first (before the if) and assign it inside there. Or even make a getLanguageRadioButton(Language language) method to encapsulate this logic.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477464631", "createdAt": "2020-08-26T17:22:20Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/export-to-notebook-modal.ts", "diffHunk": "@@ -0,0 +1,63 @@\n+import RadioButton from 'app/element/radiobutton';\n+import Textbox from 'app/element/textbox';\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils';\n+import {Language, LinkText} from 'app/text-labels';\n+import Modal from './modal';\n+\n+export default class ExportToNotebookModal extends Modal {\n+   // data-test-id=\"notebook-name-input\"\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await (this.getNotebookNameInput()).asElementHandle();\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`ExportToNotebookModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;\n+  }\n+\n+  getNotebookNameInput(): Textbox {\n+    const selector = `${this.getXpath()}//*[@data-test-id=\"notebook-name-input\"]`;\n+    return new Textbox(this.page, selector);\n+  }\n+\n+  getPythonRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"Python\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  getRRadiobutton(): RadioButton {\n+    const selector = `${this.getXpath()}//label[contains(normalize-space(),\"R\")]//input[@type=\"radio\"]`;\n+    return new RadioButton(this.page, selector);\n+  }\n+\n+  /**\n+   * Fill out Export Notebook modal to create a new notebook:\n+   * - Type notebook name.\n+   * - Select notebook language.\n+   * - Click \"Export and Open\" button.\n+   * @param {string} notebookName Notebook name.\n+   * @param {Language} language Notebook programming language. Default value is Python.\n+   */\n+  async fillInModal(notebookName: string, language: Language = Language.Python): Promise<void> {\n+    const notebookNameInput = this.getNotebookNameInput();\n+    await notebookNameInput.type(notebookName);\n+    if (language === Language.Python) {\n+      const radio = this.getPythonRadiobutton();\n+      await radio.select();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQ2NTIwMw==", "bodyText": "If you use this pattern everywhere, you could make an Error creation function that takes a description and then does the formatting for you.", "url": "https://github.com/all-of-us/workbench/pull/3911#discussion_r477465203", "createdAt": "2020-08-26T17:23:16Z", "author": {"login": "jaycarlton"}, "path": "e2e/app/component/new-notebook-modal.ts", "diffHunk": "@@ -17,15 +20,12 @@ export default class NewNotebookModal extends Modal {\n \n   async waitForLoad(): Promise<this> {\n     try {\n+      await super.waitForLoad();\n       await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n-      await this.name();\n-      await this.python3Radiobutton();\n-      await this.RRadiobutton();\n     } catch (e) {\n       await savePageToFile(this.page);\n       await takeScreenshot(this.page);\n-      console.error(`\"New Notebook\" modal waitForLoad() encountered ${e}`);\n-      throw e;\n+      throw new Error(`NewNotebookModal waitForLoad() encountered ${e}`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cc9ecfe2934f25d5202184359ad506188afed81"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afa965e4702c574e3675f0ee8bcc7b6caab3e460", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/afa965e4702c574e3675f0ee8bcc7b6caab3e460", "committedDate": "2020-08-28T17:55:42Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTUxMDgw", "url": "https://github.com/all-of-us/workbench/pull/3911#pullrequestreview-477951080", "createdAt": "2020-08-28T18:44:06Z", "commit": {"oid": "afa965e4702c574e3675f0ee8bcc7b6caab3e460"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}