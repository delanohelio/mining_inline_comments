{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNjE1NjYx", "number": 4163, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToxNzoyNVrOEup6yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzo1MlrOEw8eDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzU2NzQ2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/data/criteria-search.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToxNzoyNVrOHjNA6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1NDozOVrOHmtZ_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NTQzMw==", "bodyText": "It won't let me comment on the actual line, but in the isConcept function below at line 168, we need to check if the source is 'conceptSetDetails' also. Currently, if you're on the detail page and try to search and add new concepts, it will get added to the criteria store and we get double criteria icons in the sidebar.", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r506675433", "createdAt": "2020-10-16T19:17:25Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,16 +128,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'conceptSetDetails') {\n+      this.getConceptSet();\n+    }\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {\n         this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    }\n+  }\n+\n+  async getConceptSet() {\n+    const {urlParams: {ns, wsid, csid}} = this.props;\n+    try {\n+      const resp = await conceptSetsApi().getConceptSet(ns, wsid, csid);\n+      currentConceptStore.next(resp.criteriums);\n+    } catch (error) {\n+      console.log(error);\n+      // TODO: what do we do with resources not found?  Currently we just have an endless spinner\n+      // Maybe want to think about designing an AoU not found page for better UX\n+    }\n   }\n \n   componentWillUnmount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed7be9851876fdcab10898808286e202a87bb988"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MTg2OQ==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510351869", "createdAt": "2020-10-22T17:54:39Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,16 +128,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'conceptSetDetails') {\n+      this.getConceptSet();\n+    }\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {\n         this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    }\n+  }\n+\n+  async getConceptSet() {\n+    const {urlParams: {ns, wsid, csid}} = this.props;\n+    try {\n+      const resp = await conceptSetsApi().getConceptSet(ns, wsid, csid);\n+      currentConceptStore.next(resp.criteriums);\n+    } catch (error) {\n+      console.log(error);\n+      // TODO: what do we do with resources not found?  Currently we just have an endless spinner\n+      // Maybe want to think about designing an AoU not found page for better UX\n+    }\n   }\n \n   componentWillUnmount() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NTQzMw=="}, "originalCommit": {"oid": "ed7be9851876fdcab10898808286e202a87bb988"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzYyOTk3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/data/criteria-search.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOTo0MDozOFrOHjNoBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzo1NDozNFrOHmtZww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY4NTQ0NA==", "bodyText": "I noticed this is called twice because it's getting called in concept-set-details component first, which stores the concept set in currentConceptSetStore. Maybe check if the the concept set in the store matches the csid in props before calling the api to avoid duplicate calls.", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r506685444", "createdAt": "2020-10-16T19:40:38Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,16 +128,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'conceptSetDetails') {\n+      this.getConceptSet();\n+    }\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {\n         this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    }\n+  }\n+\n+  async getConceptSet() {\n+    const {urlParams: {ns, wsid, csid}} = this.props;\n+    try {\n+      const resp = await conceptSetsApi().getConceptSet(ns, wsid, csid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed7be9851876fdcab10898808286e202a87bb988"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1MTgxMQ==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510351811", "createdAt": "2020-10-22T17:54:34Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,16 +128,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'conceptSetDetails') {\n+      this.getConceptSet();\n+    }\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {\n         this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    }\n+  }\n+\n+  async getConceptSet() {\n+    const {urlParams: {ns, wsid, csid}} = this.props;\n+    try {\n+      const resp = await conceptSetsApi().getConceptSet(ns, wsid, csid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY4NTQ0NA=="}, "originalCommit": {"oid": "ed7be9851876fdcab10898808286e202a87bb988"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzE4ODQxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/data/criteria-search.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxOToxNDoxNFrOHmwLkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowNjowMFrOHnNBOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5NzMzMA==", "bodyText": "I'm getting currentConcepts as undefined here when viewing a saved concept set, so there's an empty space where the table should be. Not sure why but seems like it doesn't get the updated store value when the concept set is loaded and set in concept-set-details.tsx.", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510397330", "createdAt": "2020-10-22T19:14:14Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,31 +127,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n-        this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b3d718c1373d048a11df30f55056d43a90f160"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxNzM0Nw==", "bodyText": "Sorry, I got my stores mixed up and my last comment doesn't make sense. We need to set currentConceptStore for all domains in concept-set-details.tsx. Currently, it only gets set for surveys. (see suggestion in concept-set-details.tsx)", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510417347", "createdAt": "2020-10-22T19:51:39Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,31 +127,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n-        this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5NzMzMA=="}, "originalCommit": {"oid": "d5b3d718c1373d048a11df30f55056d43a90f160"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2OTgxOQ==", "bodyText": "Done and also i enclosed it within a flag check that i had forgotten to do before", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510869819", "createdAt": "2020-10-23T13:06:00Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/pages/data/criteria-search.tsx", "diffHunk": "@@ -126,31 +127,30 @@ export class CriteriaSearch extends React.Component<Props, State>  {\n       mode = 'tree';\n     }\n     this.setState({backMode, hierarchyNode, mode});\n-    this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n-      if (source === 'criteria') {\n+    if (source === 'criteria') {\n+      this.subscription = currentCohortCriteriaStore.subscribe(currentCohortCriteria => {\n         this.setState({selectedCriteriaList: currentCohortCriteria});\n-      }\n-    });\n-    this.subscription.add(currentConceptStore.subscribe(currentConcepts => {\n-      if (source === 'concept') {\n-        this.setState({selectedCriteriaList: currentConcepts});\n-      }\n-    }));\n+      });\n+    } else {\n+      this.subscription = currentConceptStore.subscribe(currentConcepts => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM5NzMzMA=="}, "originalCommit": {"oid": "d5b3d718c1373d048a11df30f55056d43a90f160"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NzU3ODM5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/data/concept/concept-set-details.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzo1MlrOHmz4gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTowNzo1MlrOHmz4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1Nzk4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                      currentConceptStore.next(resp.criteriums);\n          \n          \n            \n                    }", "url": "https://github.com/all-of-us/workbench/pull/4163#discussion_r510457985", "createdAt": "2020-10-22T21:07:52Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/concept/concept-set-details.tsx", "diffHunk": "@@ -140,20 +153,35 @@ export const ConceptSetDetails = fp.flow(withUrlParams(), withCurrentWorkspace()\n       this.getConceptSet();\n     }\n \n+    componentWillUnmount() {\n+      currentConceptStore.next(null);\n+    }\n+\n     async getConceptSet() {\n       const {urlParams: {ns, wsid, csid}} = this.props;\n       try {\n         const resp = await conceptSetsApi().getConceptSet(ns, wsid, csid);\n         this.setState({conceptSet: resp, editName: resp.name,\n           editDescription: resp.description, loading: false});\n         currentConceptSetStore.next(resp);\n+        if (resp.domain === Domain.SURVEY) {\n+          const surveyParentList = resp.criteriums.filter((survey) => {\n+            return survey.parentCount !== 0;\n+          });\n+          this.setState({conceptSet: resp});\n+          currentConceptStore.next(surveyParentList);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5b3d718c1373d048a11df30f55056d43a90f160"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3826, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}