{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjEwMDk0", "number": 3392, "title": "[RW-4505] [RISK=LOW]Factor out Edit Profile component", "bodyText": "Remove Contact Position and Organization and display verified institution (Disabled) and role\n\n\nRemove About You section\n\n\nAdd ability to update Address and Professional URL\nThis story was to handle the update of PROFILE and the error handling\n\n\nThere is another story to handle the UI changes like (wrapping up registration task in two rows and add character etc)\n\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-04-14T14:12:42Z", "url": "https://github.com/all-of-us/workbench/pull/3392", "merged": true, "mergeCommit": {"oid": "29e0e5cbf94d980010b19be1b20214f8cb02bc73"}, "closed": true, "closedAt": "2020-04-28T06:04:32Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXcPoEgH2gAyNDAzMjEwMDk0OjRjNGJkOGFmZmZlYjMyMWU3NWEwYmJiZThiMTQxNTM0OGY2NDdhOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb0c-cgH2gAyNDAzMjEwMDk0OjIyNjUwNzgyYWFkOGNhMDI4OTQ0ODFkOTEwZTY3MWE2NDU4ZGU2ZTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c4bd8afffeb321e75a0bbbe8b1415348f647a9e", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4c4bd8afffeb321e75a0bbbe8b1415348f647a9e", "committedDate": "2020-04-14T05:00:45Z", "message": "Profil Page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bccd168f356bc156e1678a3672d8d35f365ed71", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/8bccd168f356bc156e1678a3672d8d35f365ed71", "committedDate": "2020-04-14T15:07:51Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d10c1e04557517967741533b9d515d9efac4f761", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d10c1e04557517967741533b9d515d9efac4f761", "committedDate": "2020-04-14T16:17:45Z", "message": "Update insitutionRole only if its updated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c21d4a89a7836dece5339872fa71a7560a8bcd60", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c21d4a89a7836dece5339872fa71a7560a8bcd60", "committedDate": "2020-04-14T17:44:26Z", "message": "Extracting styles and handling other text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/22eab0eb816ea5a312d46501ef88675be8eee238", "committedDate": "2020-04-17T18:07:37Z", "message": "add some comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NzE2MjYz", "url": "https://github.com/all-of-us/workbench/pull/3392#pullrequestreview-395716263", "createdAt": "2020-04-17T19:25:29Z", "commit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "state": "COMMENTED", "comments": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOToyNToyOVrOGHaY-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMDo0NTowNlrOGHci8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQyNTU5Mg==", "bodyText": "Are you using this instead of java.lang.String.isEmpty to avoid NPEs?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410425592", "createdAt": "2020-04-17T19:25:29Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -275,6 +280,45 @@ private void validateAndCleanProfile(Profile profile) throws BadRequestException\n     profile.setUsername(profile.getUsername().toLowerCase());\n   }\n \n+  private void validateUpdatedProfile(Profile updatedProfile, Profile prevProfile)\n+      throws BadRequestException {\n+    validateAndCleanProfile(updatedProfile);\n+    if (StringUtils.isEmpty(updatedProfile.getAreaOfResearch())) {\n+      throw new BadRequestException(\"Research background cannot be empty\");\n+    }\n+    Optional.ofNullable(updatedProfile.getAddress())\n+        .orElseThrow(() -> new BadRequestException(\"Address must not be empty\"));\n+\n+    Address updatedProfileAddress = updatedProfile.getAddress();\n+    if (StringUtils.isEmpty(updatedProfileAddress.getStreetAddress1())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMTEyMQ==", "bodyText": "Since this does conflict handling, could you please indicate that in the name of the function?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410431121", "createdAt": "2020-04-17T19:37:51Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -417,6 +418,41 @@ public DbUser createUser(\n     return dbUser;\n   }\n \n+  /**\n+   * Save updated dbUser object if requireInstitutionalVerification is enabled: Get the existing\n+   * dbExistingVerifiedInstitutionalAffiliation and update it with Institution role and other text\n+   *\n+   * @param dbUser\n+   * @param dbVerifiedAffiliation\n+   * @return\n+   */\n+  @Override\n+  public DbUser updateUser(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMzU5MA==", "bodyText": "Or, better, could you also call saveUserWithConflictHandling in this function?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410433590", "createdAt": "2020-04-17T19:43:14Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -417,6 +418,41 @@ public DbUser createUser(\n     return dbUser;\n   }\n \n+  /**\n+   * Save updated dbUser object if requireInstitutionalVerification is enabled: Get the existing\n+   * dbExistingVerifiedInstitutionalAffiliation and update it with Institution role and other text\n+   *\n+   * @param dbUser\n+   * @param dbVerifiedAffiliation\n+   * @return\n+   */\n+  @Override\n+  public DbUser updateUser(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQzMTEyMQ=="}, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0MjYwMQ==", "bodyText": "Some of these new styles have unusual % values. How were those calculated?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410442601", "createdAt": "2020-04-17T20:02:52Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -50,14 +56,39 @@ const styles = reactStyles({\n   title: {\n     color: colors.primary,\n     fontSize: 16,\n-    fontWeight: 600\n+    fontWeight: 500,\n+    width: '40%',\n+    display: 'inline',\n+    alignItems: 'flexEnd'\n   },\n   uneditableProfileElement: {\n     paddingLeft: '0.5rem',\n     marginRight: 20,\n     marginBottom: 20,\n     height: '1.5rem',\n     color: colors.primary\n+  },\n+  fadebox: {\n+    margin: '1rem 0 0 3%',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0NTg1OQ==", "bodyText": "Can this be moved into createInitialProfile?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410445859", "createdAt": "2020-04-17T20:10:20Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -101,18 +139,51 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     super(props);\n \n     this.state = {\n-      currentProfile: props.profileState.profile || this.createInitialProfile(),\n+      currentProfile: this.initializeProfile(),\n+      institutions: [],\n       saveProfileErrorResponse: null,\n       showDemographicSurveyModal: false,\n+      showOtherRole: this.initializeShowOtherRole(),\n       updating: false\n     };\n   }\n \n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getPublicInstitutionDetails();\n+      this.setState({\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      reportError(e);\n+    }\n+  }\n+\n+  initializeShowOtherRole() {\n+    return this.props.profileState.profile.verifiedInstitutionalAffiliation.institutionalRoleEnum === InstitutionalRole.OTHER;\n+  }\n+\n   navigateToTraining(): void {\n     window.location.assign(\n       environment.trainingUrl + '/static/data-researcher.html?saml=on');\n   }\n \n+  initializeProfile() {\n+    if (!this.props.profileState.profile) {\n+      return this.createInitialProfile();\n+    }\n+    if (!this.props.profileState.profile.address) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0Nzk2MA==", "bodyText": "This sounds like it does persistence - maybe a better name would be 'setOtherInstitutionalRoleState` or something along those lines?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410447960", "createdAt": "2020-04-17T20:15:01Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -128,6 +199,39 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     }\n   }\n \n+  getRoleOptions(): Array<{label: string, value: InstitutionalRole}> {\n+    const {institutions, currentProfile} = this.state;\n+    if (currentProfile) {\n+      const selectedOrgType = institutions.find(\n+        inst => inst.shortName === currentProfile.verifiedInstitutionalAffiliation.institutionShortName);\n+      if (selectedOrgType) {\n+        const sel = selectedOrgType.organizationTypeEnum;\n+\n+        const availableRoles: Array<InstitutionalRole> =\n+           AccountCreationOptions.institutionalRolesByOrganizationType\n+               .find(obj => obj.type === sel)\n+               .roles;\n+\n+        return AccountCreationOptions.institutionalRoleOptions.filter(option =>\n+           availableRoles.includes(option.value)\n+       );\n+      }\n+    }\n+  }\n+\n+  updateVerifiedInstitutionRole(newRole) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ0ODc1NA==", "bodyText": "since this returns a boolean, could you name it something like isGivenNameValid?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410448754", "createdAt": "2020-04-17T20:16:50Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -153,17 +257,36 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n     }\n   }\n \n+  validGivenName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1MjU2OA==", "bodyText": "This needs to say Publicly displayed information with that capitalization", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410452568", "createdAt": "2020-04-17T20:25:04Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 346}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTU0NA==", "bodyText": "Everything within this div should be indented once more.", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410455544", "createdAt": "2020-04-17T20:32:04Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 333}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTkwNQ==", "bodyText": "Everything within this div should also be indented once more.", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410455905", "createdAt": "2020-04-17T20:32:54Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 337}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODM5OA==", "bodyText": "Extraneous whitespace", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458398", "createdAt": "2020-04-17T20:39:12Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 431}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODQ0NQ==", "bodyText": "extraneous whitespace", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458445", "createdAt": "2020-04-17T20:39:19Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 434}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODY2Ng==", "bodyText": "Should the AoU be italicised here?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458666", "createdAt": "2020-04-17T20:39:50Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 452}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODgyMQ==", "bodyText": "Only first word should be capitalized here", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458821", "createdAt": "2020-04-17T20:40:09Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 469}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODg2OQ==", "bodyText": "Should be 'User name'", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458869", "createdAt": "2020-04-17T20:40:17Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 464}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODk0OQ==", "bodyText": "Only first word should be capitalized here", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458949", "createdAt": "2020-04-17T20:40:30Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 476}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1ODk3Mw==", "bodyText": "Only first word should be capitalized here", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410458973", "createdAt": "2020-04-17T20:40:34Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 481}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTIxMw==", "bodyText": "free should be in all lowercase here", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459213", "createdAt": "2020-04-17T20:41:07Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 586}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTI1NQ==", "bodyText": "free should be in all lowercase here too", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459255", "createdAt": "2020-04-17T20:41:13Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 587}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTMyOQ==", "bodyText": "'on' should be lowercase", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459329", "createdAt": "2020-04-17T20:41:25Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 600}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1OTQ1MA==", "bodyText": "'All of Us' should be italicized", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410459450", "createdAt": "2020-04-17T20:41:43Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'\n+                wasBypassed={!!profile.twoFactorAuthBypassTime}\n+                incompleteButtonText='Set Up'\n+                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n+\n+\n+\n+          </div>\n+          <div>\n+\n+            {enableEraCommons && <ProfileRegistrationStepStatus\n+                title='Connect Your eRA Commons Account'\n+                wasBypassed={!!profile.eraCommonsBypassTime}\n+                incompleteButtonText='Link'\n+                completedButtonText={getRegistrationTasksMap()['eraCommons'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['eraCommons'].onClick} >\n+              <div>\n+                {profile.eraCommonsLinkedNihUsername != null && <React.Fragment>\n+                  <div> Username: </div>\n+                  <div> { profile.eraCommonsLinkedNihUsername } </div>\n+                </React.Fragment>}\n+                {profile.eraCommonsLinkExpireTime != null &&\n+                //  Firecloud returns eraCommons link expiration as 0 if there is no linked account.\n+                profile.eraCommonsLinkExpireTime !== 0\n+                && <React.Fragment>\n+                  <div> Link Expiration: </div>\n+                  <div>\n+                    { moment.unix(profile.eraCommonsLinkExpireTime)\n+                        .format('MMMM Do, YYYY, h:mm:ss A') }\n+                  </div>\n+                </React.Fragment>}\n+              </div>\n+            </ProfileRegistrationStepStatus>}\n+\n+            {enableComplianceTraining && <ProfileRegistrationStepStatus\n+                title='All of Us Responsible Conduct of Research Training'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 640}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MDI2NA==", "bodyText": "This 'View current agreement' looks out of place on the screenshots,  could you make sure it's left-aligned and not crowding the 'completed' button?", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410460264", "createdAt": "2020-04-17T20:43:41Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>\n+      {(!profile || updating) && <SpinnerOverlay/>}\n+      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+        <div>\n \n-    const renderOldInstitutionalAffiliationComponents = () => {\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Institution Affiliations\n-        </div>\n-        {institutionalAffiliations.map((v, i) =>\n-          <div style={{display: 'flex'}} key={`institution${i}`}>\n+        <div style={styles.title}>Public displayed Information</div>\n+          <hr style={styles.verticalLine}/>\n+          <FlexRow style={{marginTop: '1rem'}}>\n+            {makeProfileInput({\n+              title: 'First Name',\n+              valueKey: 'givenName'\n+            })}\n             {makeProfileInput({\n-              title: 'Institution',\n-              valueKey: ['institutionalAffiliations', i, 'institution']\n+              title: 'Last Name',\n+              valueKey: 'familyName'\n             })}\n+          </FlexRow>\n+          <FlexRow style={{height: '6rem'}}>\n+            <FlexColumn>\n             {makeProfileInput({\n-              title: 'Role',\n-              valueKey: ['institutionalAffiliations', i, 'role']\n+              title: 'Your Institution',\n+              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+              disabled: true\n             })}\n-            <Clickable\n-              style={{alignSelf: 'center'}}\n-              onClick={() => removeOldInstitutionalAffiliation(v)}\n-            >\n-              <ClrIcon\n-                shape='times'\n-                size='24'\n-                style={{color: colors.accent, marginBottom: 17}}\n-              />\n-            </Clickable>\n-          </div>\n-        )}\n-        <div style={{display: 'flex', width: 520, alignItems: 'center'}}>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-          <Clickable onClick={() => addEmptyOldInstitutionalAffiliation()}>\n-            <ClrIcon\n-              shape='plus-circle'\n-              size='19'\n-              style={{\n-                color: colors.accent,\n-                margin: '0 14px',\n-                flex: 'none', verticalAlign: 'text-bottom' // text-bottom makes it centered...?\n-              }}\n-            />\n-          </Clickable>\n-          <div style={{border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`, flex: 1}}/>\n-        </div>\n-      </React.Fragment>;\n-    };\n+            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+              Institution cannot be empty. Please contact admin\n+            </div>}\n+            </FlexColumn>\n \n-    const renderInstitutionalAffiliationComponents = () => {\n-      if (requireInstitutionalVerification) {\n-        return renderVerifiedInstitutionalAffiliationComponents();\n-      } else {\n-        return renderOldInstitutionalAffiliationComponents();\n-      }\n-    };\n+            <FlexColumn style={{marginBottom: 40}}>\n+              <div style={styles.inputLabel}>Your Role</div>\n+              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n \n-    return <div style={{margin: '35px 35px 100px 45px'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: 30}}>Profile</div>\n-      <div style={{display: 'flex'}}>\n-        <div style={{flex: '1 0 520px', paddingRight: 26}}>\n-          <div style={{display: 'flex'}}>\n+              {showOtherRole && <div>{makeProfileInput({\n+                title: '',\n+                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                style: {marginTop: '1rem'}\n+              })}\n+              </div>}\n+            </FlexColumn>\n+\n+\n+          </FlexRow>\n+\n+          <FlexRow style={{width: '100%'}}>\n             {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n+              title: 'Professional URL',\n+              valueKey: 'professionalUrl',\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <FlexRow>\n+\n             {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n+              title: <FlexColumn>\n+                <div>Your research background, experience and research interests</div>\n+                <div style={styles.researchPurposeInfo}>\n+                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n+              </FlexColumn>,\n+              valueKey: 'areaOfResearch',\n+              isLong: true,\n+              style: {width: '26rem'}\n             })}\n+          </FlexRow>\n+          <div style={{width: '65%', marginTop: '0.5rem'}}>\n+            <div style={styles.title}>Private Information</div>\n+            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+            <FlexRow style={{marginTop: '1rem'}}>\n+              {makeProfileInput({\n+                title: 'Your Username',\n+                valueKey: 'username',\n+                disabled: true\n+              })}\n+              {makeProfileInput({\n+                title: 'Institutional Email Address',\n+                valueKey: 'contactEmail',\n+                disabled: true\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Street Address 1',\n+                valueKey: ['address', 'streetAddress1'],\n+                id: 'streetAddress1'\n+              })}\n+              {makeProfileInput({\n+                title: 'Street Address 2',\n+                valueKey: ['address', 'streetAddress2'],\n+                id: 'streetAddress2'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'City',\n+                valueKey: ['address', 'city'],\n+                id: 'city'\n+              })}\n+              {makeProfileInput({\n+                title: 'State',\n+                valueKey: ['address' , 'state'],\n+                id: 'state'\n+              })}\n+            </FlexRow>\n+            <FlexRow>\n+              {makeProfileInput({\n+                title: 'Zip Code',\n+                valueKey: ['address', 'zipCode'],\n+                id: 'zipCode'\n+              })}\n+              {makeProfileInput({\n+                title: 'Country',\n+                valueKey: ['address', 'country'],\n+                id: 'country'\n+              })}\n+            </FlexRow>\n           </div>\n-          {makeProfileInput({\n-            title: 'Contact Email',\n-            valueKey: 'contactEmail',\n-            disabled: true\n-          })}\n-          <div style={styles.inputLabel}>Username</div>\n-          <div style={styles.uneditableProfileElement}>\n-            {profile && profile.username}\n-          </div>\n-          {makeProfileInput({\n-            title: 'Your Current Position',\n-            valueKey: 'currentPosition'\n-          })}\n-          {makeProfileInput({\n-            title: 'Your Organization',\n-            valueKey: 'organization'\n-          })}\n-          {makeProfileInput({\n-            title: <React.Fragment>\n-              Current Research Work\n-              <TooltipTrigger\n-                side='right'\n-                content={<span>You are required to describe your current research in order to help\n-                  <i>All of Us</i> improve the Researcher Workbench.</span>}\n-              >\n-                <ClrIcon\n-                  shape='info-standard'\n-                  className='is-solid'\n-                  style={{marginLeft: 10, verticalAlign: 'middle', color: colors.accent}}\n-                />\n-              </TooltipTrigger>\n-            </React.Fragment>,\n-            valueKey: 'areaOfResearch',\n-            isLong: true\n-          })}\n-          {makeProfileInput({\n-            title: 'About You',\n-            valueKey: 'aboutYou',\n-            isLong: true\n-          })}\n-          {renderInstitutionalAffiliationComponents()}\n-          <div style={{marginTop: 100, display: 'flex'}}>\n-            <Button type='link'\n-              onClick={() => this.setState({currentProfile: profile})}\n-            >\n-              Discard Changes\n-            </Button>\n-            <TooltipTrigger\n-              side='top'\n-              content={!!errors && 'You must correct errors before saving.'}\n-            >\n-              <Button\n-                data-test-id='save profile'\n-                type='purplePrimary'\n-                style={{marginLeft: 40}}\n-                onClick={() => this.saveProfile(currentProfile)}\n-                disabled={!!errors || fp.isEqual(profile, currentProfile)}\n-              >\n-                Save Profile\n-              </Button>\n-            </TooltipTrigger>\n-          </div>\n+         </div>\n+        <div style={{width: '16rem', marginRight: '4rem'}}>\n+        <div style={styles.title}>Free credits balance\n         </div>\n-       <div>\n-          {profile && <FlexRow style={{\n-            color: colors.primary, paddingRight: '0.5rem', justifyContent: 'flex-end'\n-          }}>\n-            <FlexColumn style={{alignItems: 'flex-end'}}>\n-              <div><i>All of Us</i> FREE credits used:</div>\n+        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+          {profile && <FlexRow style={styles.freeCreditsBox}>\n+            <FlexColumn style={{marginLeft: '0.8rem'}}>\n+              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n               <div>Remaining <i>All of Us</i> FREE credits:</div>\n             </FlexColumn>\n             <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              {usdElement(profile.freeTierUsage)}\n+              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n               {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n             </FlexColumn>\n           </FlexRow>}\n+          <div style={styles.title}>Requirements for All\n+          </div>\n+          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n           <div>\n+            <ProfileRegistrationStepStatus\n+                title='Turn On Google 2-Step Verification'\n+                wasBypassed={!!profile.twoFactorAuthBypassTime}\n+                incompleteButtonText='Set Up'\n+                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n+\n+\n+\n+          </div>\n+          <div>\n+\n+            {enableEraCommons && <ProfileRegistrationStepStatus\n+                title='Connect Your eRA Commons Account'\n+                wasBypassed={!!profile.eraCommonsBypassTime}\n+                incompleteButtonText='Link'\n+                completedButtonText={getRegistrationTasksMap()['eraCommons'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['eraCommons'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['eraCommons'].onClick} >\n+              <div>\n+                {profile.eraCommonsLinkedNihUsername != null && <React.Fragment>\n+                  <div> Username: </div>\n+                  <div> { profile.eraCommonsLinkedNihUsername } </div>\n+                </React.Fragment>}\n+                {profile.eraCommonsLinkExpireTime != null &&\n+                //  Firecloud returns eraCommons link expiration as 0 if there is no linked account.\n+                profile.eraCommonsLinkExpireTime !== 0\n+                && <React.Fragment>\n+                  <div> Link Expiration: </div>\n+                  <div>\n+                    { moment.unix(profile.eraCommonsLinkExpireTime)\n+                        .format('MMMM Do, YYYY, h:mm:ss A') }\n+                  </div>\n+                </React.Fragment>}\n+              </div>\n+            </ProfileRegistrationStepStatus>}\n+\n+            {enableComplianceTraining && <ProfileRegistrationStepStatus\n+                title='All of Us Responsible Conduct of Research Training'\n+                wasBypassed={!!profile.complianceTrainingBypassTime}\n+                incompleteButtonText='Access Training'\n+                completedButtonText={getRegistrationTasksMap()['complianceTraining'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['complianceTraining'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['complianceTraining'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['complianceTraining'].onClick} />}\n+\n+\n+            {enableDataUseAgreement && <ProfileRegistrationStepStatus\n+                title='Sign Data User Code Of Conduct'\n+                wasBypassed={!!profile.dataUseAgreementBypassTime}\n+                incompleteButtonText='Sign'\n+                completedButtonText={getRegistrationTasksMap()['dataUserCodeOfConduct'].completedText}\n+                completionTimestamp={getRegistrationTasksMap()['dataUserCodeOfConduct'].completionTimestamp(profile)}\n+                isComplete={!!(getRegistrationTasksMap()['dataUserCodeOfConduct'].completionTimestamp(profile))}\n+                completeStep={getRegistrationTasksMap()['dataUserCodeOfConduct'].onClick} >\n+              {profile.dataUseAgreementCompletionTime != null && <React.Fragment>\n+                <div> Agreement Renewal: </div>\n+                <div>\n+                  { moment.unix(profile.dataUseAgreementCompletionTime / 1000)\n+                      .add(1, 'year')\n+                      .format('MMMM Do, YYYY') }\n+                </div>\n+              </React.Fragment>}\n+              <a\n+                  onClick={getRegistrationTasksMap()['dataUserCodeOfConduct'].onClick}>\n+                View current agreement\n+              </a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 668}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ2MDkxNA==", "bodyText": "In general, I'd like to see everything within an open tag indented once, and de-indented after the closed tag, so that all elements at a given level of the heirarchy are at the same level of indentation.", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r410460914", "createdAt": "2020-04-17T20:45:06Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -194,208 +319,237 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n       return <div style={{marginBottom: 40}}>\n         <div style={styles.inputLabel}>{title}</div>\n-        {isLong ?\n-          <TextArea\n+        {isLong ? <TextArea  data-test-id={props.id || valueKey}\n             style={styles.longInputStyle}\n             {...inputProps}\n-          /> :\n-          <TextInput\n+          />  :\n+            <TooltipTrigger content='This field cannot be edited' disabled={!props.disabled}>\n+          <TextInput  data-test-id={props.id || valueKey}\n             style={styles.inputStyle}\n             {...inputProps}\n-          />}\n+          /></TooltipTrigger>}\n         <ValidationError>{errorText}</ValidationError>\n       </div>;\n     };\n \n-    const removeOldInstitutionalAffiliation = (affiliation: InstitutionalAffiliation) => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        fp.pull(affiliation)\n-      ));\n-    };\n \n-    const addEmptyOldInstitutionalAffiliation = () => {\n-      this.setState(fp.update(\n-        ['currentProfile', 'institutionalAffiliations'],\n-        affiliation => fp.concat(affiliation, {institution: '', role: ''})));\n-    };\n-\n-    const renderVerifiedInstitutionalAffiliationComponents = () => {\n-      const {verifiedInstitutionalAffiliation} = profile;\n-      if (!verifiedInstitutionalAffiliation) {\n-        return;\n-      }\n-\n-      const {institutionDisplayName, institutionalRoleEnum, institutionalRoleOtherText} = verifiedInstitutionalAffiliation;\n-      return <React.Fragment>\n-        <div style={{...styles.h1, marginBottom: 24}}>\n-          Verified Institutional Affiliation\n-        </div>\n-        <FlexRow>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Institution\n-            </div>\n-            <div style={styles.uneditableProfileElement}>{institutionDisplayName}</div>\n-          </FlexColumn>\n-          <FlexColumn>\n-            <div style={styles.inputLabel}>\n-              Role\n-            </div>\n-            <div style={styles.uneditableProfileElement}>\n-            {institutionalRoleEnum === InstitutionalRole.OTHER ? institutionalRoleOtherText : institutionalRoleEnum}\n-            </div>\n-          </FlexColumn>\n-        </FlexRow>\n-      </React.Fragment>;\n-    };\n+    return <FadeBox style={styles.fadebox}>\n+      <div style={{width: '95%'}}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ1NTU0NA=="}, "originalCommit": {"oid": "22eab0eb816ea5a312d46501ef88675be8eee238"}, "originalPosition": 333}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/482cefbd173c97a1d51b7387f9aa9834f6ef48d2", "committedDate": "2020-04-21T16:19:23Z", "message": "PR Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aedf01e54046b516d30d2f259f368813af6ae7a9", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/aedf01e54046b516d30d2f259f368813af6ae7a9", "committedDate": "2020-04-21T16:35:17Z", "message": "resolve merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7c7aebf8368abb6a5931beb2f5b557a5431ed9c", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d7c7aebf8368abb6a5931beb2f5b557a5431ed9c", "committedDate": "2020-04-21T16:43:48Z", "message": "Use string | React.ReactNode rather than any"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bebee5e3ef49492b8f3b9c9705629eaded4e2e11", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/bebee5e3ef49492b8f3b9c9705629eaded4e2e11", "committedDate": "2020-04-21T17:07:37Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTg5MTYy", "url": "https://github.com/all-of-us/workbench/pull/3392#pullrequestreview-400189162", "createdAt": "2020-04-24T18:45:24Z", "commit": {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo0NToyNFrOGLkrYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxODo0Njo0MlrOGLkucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4ODQ0OA==", "bodyText": "f in Free should be lowercase.", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414788448", "createdAt": "2020-04-24T18:45:24Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',\n+                  valueKey: 'username',\n+                  disabled: true\n+                })}\n+                {makeProfileInput({\n+                  title: 'Institutional email address',\n+                  valueKey: 'contactEmail',\n+                  disabled: true\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Street address 1',\n+                  valueKey: ['address', 'streetAddress1'],\n+                  id: 'streetAddress1'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Street address 2',\n+                  valueKey: ['address', 'streetAddress2'],\n+                  id: 'streetAddress2'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'City',\n+                  valueKey: ['address', 'city'],\n+                  id: 'city'\n+                })}\n+                {makeProfileInput({\n+                  title: 'State',\n+                  valueKey: ['address', 'state'],\n+                  id: 'state'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Zip Code',\n+                  valueKey: ['address', 'zipCode'],\n+                  id: 'zipCode'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Country',\n+                  valueKey: ['address', 'country'],\n+                  id: 'country'\n+                })}\n+              </FlexRow>\n+            </div>\n           </div>\n-         </div>\n-        <div style={{width: '16rem', marginRight: '4rem'}}>\n-        <div style={styles.title}>Free credits balance\n-        </div>\n-        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n-          {profile && <FlexRow style={styles.freeCreditsBox}>\n-            <FlexColumn style={{marginLeft: '0.8rem'}}>\n-              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n-              <div>Remaining <i>All of Us</i> FREE credits:</div>\n-            </FlexColumn>\n-            <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n-              {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n-            </FlexColumn>\n-          </FlexRow>}\n-          <div style={styles.title}>Requirements for All\n-          </div>\n-          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n-          <div>\n-            <ProfileRegistrationStepStatus\n-                title='Turn On Google 2-Step Verification'\n-                wasBypassed={!!profile.twoFactorAuthBypassTime}\n-                incompleteButtonText='Set Up'\n-                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n-                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n-                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n-                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n-\n+          <div style={{width: '16rem', marginRight: '4rem'}}>\n+            <div style={styles.title}>Free credits balance\n+            </div>\n+            <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+            {profile && <FlexRow style={styles.freeCreditsBox}>\n+              <FlexColumn style={{marginLeft: '0.8rem'}}>\n+                <div style={{marginTop: '0.4rem'}}><i>All of Us</i> Free credits used:</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2"}, "originalPosition": 321}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4ODkzNA==", "bodyText": "This should be 'User name'", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414788934", "createdAt": "2020-04-24T18:46:14Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2"}, "originalPosition": 239}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc4OTIzMw==", "bodyText": "f in Free should be lowercase", "url": "https://github.com/all-of-us/workbench/pull/3392#discussion_r414789233", "createdAt": "2020-04-24T18:46:42Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/profile/profile-page.tsx", "diffHunk": "@@ -335,187 +323,190 @@ export const ProfilePage = withUserProfile()(class extends React.Component<\n \n     return <FadeBox style={styles.fadebox}>\n       <div style={{width: '95%'}}>\n-      {(!profile || updating) && <SpinnerOverlay/>}\n-      <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n-      <FlexRow style={{justifyContent: 'spaceBetween'}}>\n-        <div>\n-\n-        <div style={styles.title}>Public displayed Information</div>\n-          <hr style={styles.verticalLine}/>\n-          <FlexRow style={{marginTop: '1rem'}}>\n-            {makeProfileInput({\n-              title: 'First Name',\n-              valueKey: 'givenName'\n-            })}\n-            {makeProfileInput({\n-              title: 'Last Name',\n-              valueKey: 'familyName'\n-            })}\n-          </FlexRow>\n-          <FlexRow style={{height: '6rem'}}>\n-            <FlexColumn>\n-            {makeProfileInput({\n-              title: 'Your Institution',\n-              valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n-              disabled: true\n-            })}\n-            {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n-              Institution cannot be empty. Please contact admin\n-            </div>}\n-            </FlexColumn>\n-\n-            <FlexColumn style={{marginBottom: 40}}>\n-              <div style={styles.inputLabel}>Your Role</div>\n-              {profile.verifiedInstitutionalAffiliation && <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n-                          placeholder='Your Role'\n-                          options={this.getRoleOptions()}\n-                          onChange={(v) => this.updateVerifiedInstitutionRole(v.value)}\n-                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n-\n-              {showOtherRole && <div>{makeProfileInput({\n-                title: '',\n-                valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n-                style: {marginTop: '1rem'}\n-              })}\n-              </div>}\n-            </FlexColumn>\n-\n-\n-          </FlexRow>\n-\n-          <FlexRow style={{width: '100%'}}>\n-            {makeProfileInput({\n-              title: 'Professional URL',\n-              valueKey: 'professionalUrl',\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <FlexRow>\n-\n-            {makeProfileInput({\n-              title: <FlexColumn>\n-                <div>Your research background, experience and research interests</div>\n-                <div style={styles.researchPurposeInfo}>\n-                  This information will be posted publicly on the AoU Research Hub Website to inform the AoU Research Participants.</div>\n-              </FlexColumn>,\n-              valueKey: 'areaOfResearch',\n-              isLong: true,\n-              style: {width: '26rem'}\n-            })}\n-          </FlexRow>\n-          <div style={{width: '65%', marginTop: '0.5rem'}}>\n-            <div style={styles.title}>Private Information</div>\n-            <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+        {(!profile || updating) && <SpinnerOverlay/>}\n+        <div style={{...styles.h1, marginBottom: '0.7rem'}}>Profile</div>\n+        <FlexRow style={{justifyContent: 'spaceBetween'}}>\n+          <div>\n+            <div style={styles.title}>Public displayed Information</div>\n+            <hr style={styles.verticalLine}/>\n             <FlexRow style={{marginTop: '1rem'}}>\n               {makeProfileInput({\n-                title: 'Your Username',\n-                valueKey: 'username',\n-                disabled: true\n+                title: 'First Name',\n+                valueKey: 'givenName'\n               })}\n               {makeProfileInput({\n-                title: 'Institutional Email Address',\n-                valueKey: 'contactEmail',\n-                disabled: true\n+                title: 'Last Name',\n+                valueKey: 'familyName'\n               })}\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'Street Address 1',\n-                valueKey: ['address', 'streetAddress1'],\n-                id: 'streetAddress1'\n-              })}\n-              {makeProfileInput({\n-                title: 'Street Address 2',\n-                valueKey: ['address', 'streetAddress2'],\n-                id: 'streetAddress2'\n-              })}\n+            <FlexRow style={{height: '6rem'}}>\n+              <FlexColumn>\n+                {makeProfileInput({\n+                  title: 'Your Institution',\n+                  valueKey: 'verifiedInstitutionalAffiliation.institutionDisplayName',\n+                  disabled: true\n+                })}\n+                {!profile.verifiedInstitutionalAffiliation && <div style={{color: colors.danger}}>\n+                  Institution cannot be empty. Please contact admin\n+                </div>}\n+              </FlexColumn>\n+\n+              <FlexColumn style={{marginBottom: 40}}>\n+                <div style={styles.inputLabel}>Your Role</div>\n+                {profile.verifiedInstitutionalAffiliation &&\n+                <Dropdown style={{width: '12.5rem'}} data-test-id='role-dropdown'\n+                          placeholder='Your Role'\n+                          options={this.getRoleOptions()}\n+                          onChange={(v) => this.setVerifiedInstitutionRole(v.value)}\n+                          value={currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum}/>}\n+\n+                {currentProfile.verifiedInstitutionalAffiliation &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum &&\n+                currentProfile.verifiedInstitutionalAffiliation.institutionalRoleEnum ===\n+                InstitutionalRole.OTHER && <div>{makeProfileInput({\n+                  title: '',\n+                  valueKey: ['verifiedInstitutionalAffiliation', 'institutionalRoleOtherText'],\n+                  style: {marginTop: '1rem'}\n+                })}\n+                </div>}\n+              </FlexColumn>\n             </FlexRow>\n-            <FlexRow>\n-              {makeProfileInput({\n-                title: 'City',\n-                valueKey: ['address', 'city'],\n-                id: 'city'\n-              })}\n+\n+            <FlexRow style={{width: '100%'}}>\n               {makeProfileInput({\n-                title: 'State',\n-                valueKey: ['address' , 'state'],\n-                id: 'state'\n+                title: 'Professional URL',\n+                valueKey: 'professionalUrl',\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n             <FlexRow>\n+\n               {makeProfileInput({\n-                title: 'Zip Code',\n-                valueKey: ['address', 'zipCode'],\n-                id: 'zipCode'\n-              })}\n-              {makeProfileInput({\n-                title: 'Country',\n-                valueKey: ['address', 'country'],\n-                id: 'country'\n+                title: <FlexColumn>\n+                  <div>Your research background, experience and research interests</div>\n+                  <div style={styles.researchPurposeInfo}>\n+                    This information will be posted publicly on the <i>AoU</i> Research Hub Website\n+                    to\n+                    inform the <i>AoU</i> Research Participants.\n+                  </div>\n+                </FlexColumn>,\n+                valueKey: 'areaOfResearch',\n+                isLong: true,\n+                style: {width: '26rem'}\n               })}\n             </FlexRow>\n+            <div style={{width: '65%', marginTop: '0.5rem'}}>\n+              <div style={styles.title}>Private Information</div>\n+              <hr style={{...styles.verticalLine, width: '26rem'}}/>\n+              <FlexRow style={{marginTop: '1rem'}}>\n+                {makeProfileInput({\n+                  title: 'Username',\n+                  valueKey: 'username',\n+                  disabled: true\n+                })}\n+                {makeProfileInput({\n+                  title: 'Institutional email address',\n+                  valueKey: 'contactEmail',\n+                  disabled: true\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Street address 1',\n+                  valueKey: ['address', 'streetAddress1'],\n+                  id: 'streetAddress1'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Street address 2',\n+                  valueKey: ['address', 'streetAddress2'],\n+                  id: 'streetAddress2'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'City',\n+                  valueKey: ['address', 'city'],\n+                  id: 'city'\n+                })}\n+                {makeProfileInput({\n+                  title: 'State',\n+                  valueKey: ['address', 'state'],\n+                  id: 'state'\n+                })}\n+              </FlexRow>\n+              <FlexRow>\n+                {makeProfileInput({\n+                  title: 'Zip Code',\n+                  valueKey: ['address', 'zipCode'],\n+                  id: 'zipCode'\n+                })}\n+                {makeProfileInput({\n+                  title: 'Country',\n+                  valueKey: ['address', 'country'],\n+                  id: 'country'\n+                })}\n+              </FlexRow>\n+            </div>\n           </div>\n-         </div>\n-        <div style={{width: '16rem', marginRight: '4rem'}}>\n-        <div style={styles.title}>Free credits balance\n-        </div>\n-        <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n-          {profile && <FlexRow style={styles.freeCreditsBox}>\n-            <FlexColumn style={{marginLeft: '0.8rem'}}>\n-              <div style={{marginTop: '0.4rem'}}><i>All of Us</i> FREE credits used:</div>\n-              <div>Remaining <i>All of Us</i> FREE credits:</div>\n-            </FlexColumn>\n-            <FlexColumn style={{alignItems: 'flex-end', marginLeft: '1.0rem'}}>\n-              <div style={{marginTop: '0.4rem'}}>{usdElement(profile.freeTierUsage)}</div>\n-              {usdElement(profile.freeTierDollarQuota - profile.freeTierUsage)}\n-            </FlexColumn>\n-          </FlexRow>}\n-          <div style={styles.title}>Requirements for All\n-          </div>\n-          <hr style={{...styles.verticalLine, width: '15.8rem'}}/>\n-          <div>\n-            <ProfileRegistrationStepStatus\n-                title='Turn On Google 2-Step Verification'\n-                wasBypassed={!!profile.twoFactorAuthBypassTime}\n-                incompleteButtonText='Set Up'\n-                completedButtonText={getRegistrationTasksMap()['twoFactorAuth'].completedText}\n-                completionTimestamp={getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile)}\n-                isComplete={!!(getRegistrationTasksMap()['twoFactorAuth'].completionTimestamp(profile))}\n-                completeStep={getRegistrationTasksMap()['twoFactorAuth'].onClick  } />\n-\n+          <div style={{width: '16rem', marginRight: '4rem'}}>\n+            <div style={styles.title}>Free credits balance\n+            </div>\n+            <hr style={{...styles.verticalLine, width: '15.7rem'}}/>\n+            {profile && <FlexRow style={styles.freeCreditsBox}>\n+              <FlexColumn style={{marginLeft: '0.8rem'}}>\n+                <div style={{marginTop: '0.4rem'}}><i>All of Us</i> Free credits used:</div>\n+                <div>Remaining <i>All of Us</i> Free credits:</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "482cefbd173c97a1d51b7387f9aa9834f6ef48d2"}, "originalPosition": 322}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTkwOTQ0", "url": "https://github.com/all-of-us/workbench/pull/3392#pullrequestreview-400190944", "createdAt": "2020-04-24T18:48:16Z", "commit": {"oid": "bebee5e3ef49492b8f3b9c9705629eaded4e2e11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecfb886a729200892312eb35a7045e18208589e8", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/ecfb886a729200892312eb35a7045e18208589e8", "committedDate": "2020-04-27T16:23:05Z", "message": "Pr comments : Correct case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff461eda66c325eed4e765febb855705a44f7140", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/ff461eda66c325eed4e765febb855705a44f7140", "committedDate": "2020-04-27T17:29:39Z", "message": "Resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22650782aad8ca02894481d910e671a6458de6e8", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/22650782aad8ca02894481d910e671a6458de6e8", "committedDate": "2020-04-27T19:28:45Z", "message": "Remove duplicate update demographic link"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3164, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}