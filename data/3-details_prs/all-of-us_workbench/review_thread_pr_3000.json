{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODc1NzY5", "number": 3000, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MToyMFrODYVmGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MToyMFrODYVmGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODQ2MjMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/monitoring/views/GaugeMetric.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MToyMFrOFeJBPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1OTowNlrOFeJL0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE0OTM3NA==", "bodyText": "Everything else was incremented to _2, but this was incremented to _3. Who should know about why this metric is different from all the others?", "url": "https://github.com/all-of-us/workbench/pull/3000#discussion_r367149374", "createdAt": "2020-01-15T22:51:20Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/monitoring/views/GaugeMetric.java", "diffHunk": "@@ -1,72 +1,60 @@\n package org.pmiops.workbench.monitoring.views;\n \n-import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableList;\n import io.opencensus.stats.Aggregation;\n+import io.opencensus.stats.Aggregation.LastValue;\n import io.opencensus.stats.Measure.MeasureLong;\n-import io.opencensus.tags.TagKey;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n-import org.pmiops.workbench.monitoring.attachments.Attachment;\n+import org.pmiops.workbench.monitoring.attachments.MetricLabel;\n \n public enum GaugeMetric implements Metric {\n   BILLING_BUFFER_PROJECT_COUNT(\n       \"billing_buffer_project_count\",\n       \"Number of projects in the billing buffer for each status\",\n-      ImmutableSet.of(Attachment.BUFFER_ENTRY_STATUS)),\n-  COHORT_COUNT(\"cohort_count\", \"Count of all cohorts in existence\"),\n-  COHORT_REVIEW_COUNT(\"cohort_review_count\", \"Total number of cohort reviews in existence\"),\n+      ImmutableList.of(MetricLabel.BUFFER_ENTRY_STATUS)),\n+  COHORT_COUNT(\"cohort_count_2\", \"Count of all cohorts in existence\"),\n+  COHORT_REVIEW_COUNT(\"cohort_review_count_2\", \"Total number of cohort reviews in existence\"),\n   DATASET_COUNT(\n-      \"dataset_count\",\n+      \"dataset_count_2\",\n       \"Count of all datasets in existence\",\n-      Collections.singleton(Attachment.DATASET_INVALID)),\n+      ImmutableList.of(MetricLabel.DATASET_INVALID)),\n   USER_COUNT(\n-      \"user_count\",\n+      \"user_count_2\",\n       \"total number of users\",\n-      ImmutableSet.of(\n-          Attachment.USER_BYPASSED_BETA, Attachment.USER_DISABLED, Attachment.DATA_ACCESS_LEVEL)),\n+      ImmutableList.of(\n+          MetricLabel.USER_BYPASSED_BETA,\n+          MetricLabel.USER_DISABLED,\n+          MetricLabel.DATA_ACCESS_LEVEL)),\n   WORKSPACE_COUNT(\n-      \"workspace_count\",\n+      \"workspace_count_3\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE1MjA4MA==", "bodyText": "These are all going to get scrapped at least one more time, so I didn't invest in consistency or name conventions yet. I need to circulate a convention where we have a way to give versions to the metric descriptors.\nIt appears that registering (in OpenCensus) a view corresponding to an existing metric is a no-op if that metric is actually live, but the Google api fails with a \"metric exists\" error if the metric has been deleted. Still sorting this out a bit.", "url": "https://github.com/all-of-us/workbench/pull/3000#discussion_r367152080", "createdAt": "2020-01-15T22:59:06Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/monitoring/views/GaugeMetric.java", "diffHunk": "@@ -1,72 +1,60 @@\n package org.pmiops.workbench.monitoring.views;\n \n-import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableList;\n import io.opencensus.stats.Aggregation;\n+import io.opencensus.stats.Aggregation.LastValue;\n import io.opencensus.stats.Measure.MeasureLong;\n-import io.opencensus.tags.TagKey;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n-import org.pmiops.workbench.monitoring.attachments.Attachment;\n+import org.pmiops.workbench.monitoring.attachments.MetricLabel;\n \n public enum GaugeMetric implements Metric {\n   BILLING_BUFFER_PROJECT_COUNT(\n       \"billing_buffer_project_count\",\n       \"Number of projects in the billing buffer for each status\",\n-      ImmutableSet.of(Attachment.BUFFER_ENTRY_STATUS)),\n-  COHORT_COUNT(\"cohort_count\", \"Count of all cohorts in existence\"),\n-  COHORT_REVIEW_COUNT(\"cohort_review_count\", \"Total number of cohort reviews in existence\"),\n+      ImmutableList.of(MetricLabel.BUFFER_ENTRY_STATUS)),\n+  COHORT_COUNT(\"cohort_count_2\", \"Count of all cohorts in existence\"),\n+  COHORT_REVIEW_COUNT(\"cohort_review_count_2\", \"Total number of cohort reviews in existence\"),\n   DATASET_COUNT(\n-      \"dataset_count\",\n+      \"dataset_count_2\",\n       \"Count of all datasets in existence\",\n-      Collections.singleton(Attachment.DATASET_INVALID)),\n+      ImmutableList.of(MetricLabel.DATASET_INVALID)),\n   USER_COUNT(\n-      \"user_count\",\n+      \"user_count_2\",\n       \"total number of users\",\n-      ImmutableSet.of(\n-          Attachment.USER_BYPASSED_BETA, Attachment.USER_DISABLED, Attachment.DATA_ACCESS_LEVEL)),\n+      ImmutableList.of(\n+          MetricLabel.USER_BYPASSED_BETA,\n+          MetricLabel.USER_DISABLED,\n+          MetricLabel.DATA_ACCESS_LEVEL)),\n   WORKSPACE_COUNT(\n-      \"workspace_count\",\n+      \"workspace_count_3\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE0OTM3NA=="}, "originalCommit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3427, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}