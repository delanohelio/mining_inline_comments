{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MzY5MDI4", "number": 3629, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMjowNzowMFrOEBJBNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMjowNzowMFrOEBJBNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjMxNzk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQyMjowNzowMFrOGc1keQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzo1MzozMlrOGdUOsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MTAwMQ==", "bodyText": "nit: I'd do Optional.ofNullable(resp.getProjects()).ifPresent(projects::addAll);", "url": "https://github.com/all-of-us/workbench/pull/3629#discussion_r432891001", "createdAt": "2020-05-30T22:07:00Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "diffHunk": "@@ -94,7 +94,9 @@ private CloudResourceManager getCloudResourceManagerServiceWithImpersonation(DbU\n                     .list()\n                     .setPageToken(pageToken.orElse(null))\n                     .execute();\n-            projects.addAll(resp.getProjects());\n+            if (resp.getProjects() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a44ca64e7d0a3dcba0bb71aba7be4a9ec9c77470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA3NTY3OQ==", "bodyText": "I'm aware that it can be written this way, but do you really find this to be more readable? Personally I find it a bit convoluted. I don't object to this style in certain cases e.g. if it simplifies a large block of code with repeated setters, but I don't think we want to place prohibition on simple if statements in the codebase.", "url": "https://github.com/all-of-us/workbench/pull/3629#discussion_r433075679", "createdAt": "2020-06-01T07:09:48Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "diffHunk": "@@ -94,7 +94,9 @@ private CloudResourceManager getCloudResourceManagerServiceWithImpersonation(DbU\n                     .list()\n                     .setPageToken(pageToken.orElse(null))\n                     .execute();\n-            projects.addAll(resp.getProjects());\n+            if (resp.getProjects() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MTAwMQ=="}, "originalCommit": {"oid": "a44ca64e7d0a3dcba0bb71aba7be4a9ec9c77470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI3OTI4MQ==", "bodyText": "Ideally I'd change getProjects() to never be null, or be optional (though I wouldn't do optional<List>).\nI feel like the intent is a bit clearer, and there are fewer places for a maintainer to add a bug. ifs beget more ifs sometimes.\nNot a big win in this case.", "url": "https://github.com/all-of-us/workbench/pull/3629#discussion_r433279281", "createdAt": "2020-06-01T14:48:17Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "diffHunk": "@@ -94,7 +94,9 @@ private CloudResourceManager getCloudResourceManagerServiceWithImpersonation(DbU\n                     .list()\n                     .setPageToken(pageToken.orElse(null))\n                     .execute();\n-            projects.addAll(resp.getProjects());\n+            if (resp.getProjects() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MTAwMQ=="}, "originalCommit": {"oid": "a44ca64e7d0a3dcba0bb71aba7be4a9ec9c77470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM2NTEyMA==", "bodyText": "Agree that would be better, and it's what I originally expected hence the bug. It's a 3p library we don't control though.\nAvoiding repetition of the value is a good argument for switching the approach, though I still don't love the side-effect tacked onto the end of the expression with the ifPresent approach. Perhaps something like this instead:\nprojects.addAll(CollectionUtils.emptyIfNull(resp.getProjects()));\n\nor\nprojects.addAll(Optional.ofNullable(resp.getProjects()).orElse(Collections.emptyList()));", "url": "https://github.com/all-of-us/workbench/pull/3629#discussion_r433365120", "createdAt": "2020-06-01T17:00:26Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "diffHunk": "@@ -94,7 +94,9 @@ private CloudResourceManager getCloudResourceManagerServiceWithImpersonation(DbU\n                     .list()\n                     .setPageToken(pageToken.orElse(null))\n                     .execute();\n-            projects.addAll(resp.getProjects());\n+            if (resp.getProjects() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MTAwMQ=="}, "originalCommit": {"oid": "a44ca64e7d0a3dcba0bb71aba7be4a9ec9c77470"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM5MzMzMQ==", "bodyText": "_ I still don't love the side-effect tacked onto the end of the expression with the ifPresent approach_\nYeah, foreach and ifPresent do sneak side effects into otherwise functional expressions. I wasn't raised functional fundamentalist. I still prefer ifPresent() when chained after methods that return Optional though. It's a nice counterpart to orElseThrow(), orElseGet(), and orElse(), all of which come at the end of the chain.\nOf your two options I like the first one better. One thing to note (likely inconsequential here) is that in your scheme you call putAll regardless of whether you need to or not. As long as there are no side effects, that's OK.", "url": "https://github.com/all-of-us/workbench/pull/3629#discussion_r433393331", "createdAt": "2020-06-01T17:53:32Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/google/CloudResourceManagerServiceImpl.java", "diffHunk": "@@ -94,7 +94,9 @@ private CloudResourceManager getCloudResourceManagerServiceWithImpersonation(DbU\n                     .list()\n                     .setPageToken(pageToken.orElse(null))\n                     .execute();\n-            projects.addAll(resp.getProjects());\n+            if (resp.getProjects() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg5MTAwMQ=="}, "originalCommit": {"oid": "a44ca64e7d0a3dcba0bb71aba7be4a9ec9c77470"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}