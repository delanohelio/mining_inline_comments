{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NTUxMzkw", "number": 4278, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMToxMjo0NFrOE4bVLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMToxMjo0NFrOE4bVLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NjAzNTAyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/notebook-redirect.spec.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMToxMjo0NFrOHyVswQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMTozMzoyM1rOHyWGCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU0NjM2OQ==", "bodyText": "Would this syntax work? Slightly easier to read IMO since its on one line: jest.spyOn(NavStore, 'navigate')", "url": "https://github.com/all-of-us/workbench/pull/4278#discussion_r522546369", "createdAt": "2020-11-13T01:12:44Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/analysis/notebook-redirect.spec.tsx", "diffHunk": "@@ -213,4 +214,37 @@ describe('NotebookRedirect', () => {\n     expect(currentCardText(wrapper))\n       .toContain(progressStrings.get(Progress.Redirecting));\n   });\n+\n+  it('should navigate away after runtime transitions to deleting', async() => {\n+    const navSpy = jest.fn();\n+    NavStore.navigate = navSpy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4543954ae3128e59e2c2d2f4d2ff1d6c9f82dda3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU1Mjg0MQ==", "bodyText": "NavStore is a bit odd - by default its methods are undefined... I think we may need to clean this up later for testing purposes. Unfortunately this doesn't work:\n Cannot spy the navigate property because it is not a function; undefined given instead\n\n      217 | \n      218 |   it('should navigate away after runtime transitions to deleting', async() => {\n    > 219 |     const navSpy = jest.spyOn(NavStore, 'navigate').mockImplementation(() => {});\n\nThere's also a problem with my current approach, which is that I never clear/restore the value of navigate. That said, it was undefined to begin with, so this is not the end of the world..", "url": "https://github.com/all-of-us/workbench/pull/4278#discussion_r522552841", "createdAt": "2020-11-13T01:33:23Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/notebook-redirect.spec.tsx", "diffHunk": "@@ -213,4 +214,37 @@ describe('NotebookRedirect', () => {\n     expect(currentCardText(wrapper))\n       .toContain(progressStrings.get(Progress.Redirecting));\n   });\n+\n+  it('should navigate away after runtime transitions to deleting', async() => {\n+    const navSpy = jest.fn();\n+    NavStore.navigate = navSpy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU0NjM2OQ=="}, "originalCommit": {"oid": "4543954ae3128e59e2c2d2f4d2ff1d6c9f82dda3"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3729, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}