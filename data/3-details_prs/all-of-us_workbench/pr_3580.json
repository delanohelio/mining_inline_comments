{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NTAzOTE1", "number": 3580, "title": "[RW-4258][risk=low] Admin UI for List Institute entities for affiliation", "bodyText": "This PR is just to list all institution details. There will be another PR that will have the edit/add institution page\n\n\nThe plus icon will not do anything and also the institution name are not hyperlink in this PR - Part of next PR\n\n\nIf the number of email domain/ address for any institution is more than 4 just show the top 4 and have ... at the end\n\n\nif the email domain/address will not fit in the width of the table cell replace the overflow text with ...\n\n\n\n\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-05-13T17:21:54Z", "url": "https://github.com/all-of-us/workbench/pull/3580", "merged": true, "mergeCommit": {"oid": "4ca8d8a5729866d040031fc1faadb3867a761fff"}, "closed": true, "closedAt": "2020-05-15T20:15:41Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg8JuTgH2gAyNDE3NTAzOTE1OjE3Nzc3MmQzMjc2NWZjOTg4Zjc1NTdlZjBmYTEyZTg5ZTZlMTg1NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchnqpqAH2gAyNDE3NTAzOTE1OmJhYmY2NjVmMDg1ODc4NWRmY2NkYWRhNGQ1M2JkOTJlZmJjNTI1ODY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "177772d32765fc988f7557ef0fa12e89e6e18565", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/177772d32765fc988f7557ef0fa12e89e6e18565", "committedDate": "2020-05-13T17:16:35Z", "message": "Admin UI Instruction List page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96d41b043c08a0de4269670fc82fe2ee7cabc96", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e96d41b043c08a0de4269670fc82fe2ee7cabc96", "committedDate": "2020-05-13T17:36:48Z", "message": "Fix UI Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56539db8a490d5758271b0084ae639f265e7f2d6", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/56539db8a490d5758271b0084ae639f265e7f2d6", "committedDate": "2020-05-13T18:20:10Z", "message": "revert data table version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe847d628a2e57f39acdaf40dcc2e3816a343ec6", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/fe847d628a2e57f39acdaf40dcc2e3816a343ec6", "committedDate": "2020-05-13T18:37:15Z", "message": "Add some Api test for getInstitutions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a98bd76735d19d56ab00096a9a4f97a1be89466", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/2a98bd76735d19d56ab00096a9a4f97a1be89466", "committedDate": "2020-05-13T18:50:43Z", "message": "add Loading parameter to datatable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d55f4da2b9a537fb0b9abdc7663cfc30ea2de0e9", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d55f4da2b9a537fb0b9abdc7663cfc30ea2de0e9", "committedDate": "2020-05-13T18:52:13Z", "message": "Remove Extra line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a916e7d9d9072190ed2d207f54356ad37241926", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9a916e7d9d9072190ed2d207f54356ad37241926", "committedDate": "2020-05-13T19:10:32Z", "message": "Add logic to display different type of institution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe36239feb29a2a557332a72f3b4c1c4a11fbf89", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/fe36239feb29a2a557332a72f3b4c1c4a11fbf89", "committedDate": "2020-05-13T19:11:38Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/dd6ac1181bf23c58becb6fa6795d16900e1ccd0c", "committedDate": "2020-05-13T19:13:07Z", "message": "udpate comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDIxNDU1", "url": "https://github.com/all-of-us/workbench/pull/3580#pullrequestreview-412021455", "createdAt": "2020-05-14T17:15:11Z", "commit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoxNToxMVrOGVmYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoyMzo1NVrOGVo7gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwMjE3NQ==", "bodyText": "one of these needs to be \"that\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425302175", "createdAt": "2020-05-14T17:15:11Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java", "diffHunk": "@@ -64,12 +67,12 @@ public boolean equals(Object o) {\n \n     DbInstitutionUserInstructions that = (DbInstitutionUserInstructions) o;\n \n-    return Objects.equals(institutionId, that.institutionId)\n+    return Objects.equals(institution.getInstitutionId(), institution.getInstitutionId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzQwMw==", "bodyText": "If this is now part of the Institution model, we should make it part of the DB model too", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307403", "createdAt": "2020-05-14T17:24:04Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -20,6 +20,8 @@\n   @Mapping(target = \"institutionId\", ignore = true)\n   DbInstitution modelToDb(Institution modelObject);\n \n+  // userInstructions will be populated by InstitutionUserInstructionsMapper\n+  @Mapping(target = \"userInstructions\", ignore = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwNzkwMA==", "bodyText": "the institutionMapper should handle this", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425307900", "createdAt": "2020-05-14T17:24:56Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionServiceImpl.java", "diffHunk": "@@ -55,6 +55,12 @@\n   public List<Institution> getInstitutions() {\n     return StreamSupport.stream(institutionDao.findAll().spliterator(), false)\n         .map(institutionMapper::dbToModel)\n+        .map(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxMDQ5Mg==", "bodyText": "mention that these are sent to the users in an email", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425310492", "createdAt": "2020-05-14T17:28:52Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5455,6 +5455,9 @@ definitions:\n           this Institution\n         items:\n           type: string\n+      userInstructions:\n+        description: Institution-specific instructions for users to perform after registration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDE0Nw==", "bodyText": "what does this change do?", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425314147", "createdAt": "2020-05-14T17:35:05Z", "author": {"login": "jmthibault79"}, "path": "ui/src/testing/stubs/institution-api-stub.ts", "diffHunk": "@@ -65,8 +67,9 @@ export class InstitutionApiStub extends InstitutionApi {\n   }\n \n   getInstitutions(shortName: string): Promise<GetInstitutionsResponse> {\n-    return new Promise(resolve => {\n-      return {institutions: this.institutions};\n+    return new Promise((resolve, reject) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNDI5Nw==", "bodyText": "why this update?", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425314297", "createdAt": "2020-05-14T17:35:18Z", "author": {"login": "jmthibault79"}, "path": "ui/yarn.lock", "diffHunk": "@@ -7541,8 +7541,9 @@ primeicons@^1.0.0:\n   resolved \"https://registry.yarnpkg.com/primeicons/-/primeicons-1.0.0.tgz#90061f168ef6227f21f0a7db8204ffa85cd27aec\"\n \n primereact@^3.1.1:\n-  version \"3.3.2\"\n-  resolved \"https://registry.yarnpkg.com/primereact/-/primereact-3.3.2.tgz#0d47fd6a8cc9e22e4d0beb06a86c1bf3401f1b77\"\n+  version \"3.4.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzOTk5Ng==", "bodyText": "I like these little render functions.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425339996", "createdAt": "2020-05-14T18:16:54Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDc5NQ==", "bodyText": "Please add some punctuation here.", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425340795", "createdAt": "2020-05-14T18:18:15Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';\n+    }\n+  }\n+\n+  renderDuaType(row, col) {\n+    return row['duaTypeEnum'] === DuaType.RESTRICTED ? 'Individual' : 'Master';\n+  }\n+\n+  // If email domain list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailDomain(row, col) {\n+    const emailDomain = fp.take(4, row['emailDomains']).join('\\n') ;\n+    if (row['emailDomains'] && row['emailDomains'].length > 4) {\n+      return emailDomain + '...';\n+    }\n+    return emailDomain;\n+  }\n+\n+  // If email address list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailAddress(row, col) {\n+    const emailAddresses = fp.take(4, row['emailAddresses']).join('\\n') ;\n+    if (row['emailAddresses'] && row['emailAddresses'].length > 4) {\n+      return emailAddresses + '...';\n+    }\n+    return emailAddresses;\n+  }\n+\n+  render() {\n+    const {institutions, institutionLoadError, loadingInstitutions} = this.state;\n+    return <div>\n+      <FadeBox style={{marginTop: '1rem', marginLeft: '1rem'}}>\n+        <SemiBoldHeader style={styles.pageHeader}>\n+          <label>Institution admin table</label>\n+              <Button type='secondaryLight'\n+                      style={{padding: '0rem', marginTop: '0.3rem', verticalAlign: 'sub'}}\n+                      data-test-id='add-institution'>\n+                <ClrIcon shape='plus-circle' class='is-solid' size={20}/>\n+              </Button>\n+        </SemiBoldHeader>\n+        {institutionLoadError && <div style={{color: colors.danger}}>\n+          Error while loading Institution please try again later</div>}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MTU4Mg==", "bodyText": "Something indicating that this refers to an email.  Maybe \"User Email Instructions\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425341582", "createdAt": "2020-05-14T18:19:47Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';\n+    }\n+  }\n+\n+  renderDuaType(row, col) {\n+    return row['duaTypeEnum'] === DuaType.RESTRICTED ? 'Individual' : 'Master';\n+  }\n+\n+  // If email domain list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailDomain(row, col) {\n+    const emailDomain = fp.take(4, row['emailDomains']).join('\\n') ;\n+    if (row['emailDomains'] && row['emailDomains'].length > 4) {\n+      return emailDomain + '...';\n+    }\n+    return emailDomain;\n+  }\n+\n+  // If email address list has more than 4 entries show top 4 and replace others with ...\n+  renderEmailAddress(row, col) {\n+    const emailAddresses = fp.take(4, row['emailAddresses']).join('\\n') ;\n+    if (row['emailAddresses'] && row['emailAddresses'].length > 4) {\n+      return emailAddresses + '...';\n+    }\n+    return emailAddresses;\n+  }\n+\n+  render() {\n+    const {institutions, institutionLoadError, loadingInstitutions} = this.state;\n+    return <div>\n+      <FadeBox style={{marginTop: '1rem', marginLeft: '1rem'}}>\n+        <SemiBoldHeader style={styles.pageHeader}>\n+          <label>Institution admin table</label>\n+              <Button type='secondaryLight'\n+                      style={{padding: '0rem', marginTop: '0.3rem', verticalAlign: 'sub'}}\n+                      data-test-id='add-institution'>\n+                <ClrIcon shape='plus-circle' class='is-solid' size={20}/>\n+              </Button>\n+        </SemiBoldHeader>\n+        {institutionLoadError && <div style={{color: colors.danger}}>\n+          Error while loading Institution please try again later</div>}\n+        <DataTable data-test-id='institution-datatable' value={institutions} paginator={true}\n+                   rows={5} scrollable={true} frozenWidth='7rem' loading={loadingInstitutions}>\n+          <Column field='displayName' header='Institution Name'\n+                  bodyStyle={styles.text} headerStyle={styles.header} frozen={true}/>\n+          <Column field='organizationTypeEnum' header='Institution Type'\n+                  body={this.renderOrganizationType} bodyStyle={styles.text}\n+                  headerStyle={styles.header}/>\n+          <Column field='duaTypeEnum' header='Agreement Type' body={this.renderDuaType}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='emailDomains' header='Accepted Domain List' body={this.renderEmailDomain}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='emailAddresses' header='Accepted Email List' body={this.renderEmailAddress}\n+                  bodyStyle={styles.text} headerStyle={styles.header}/>\n+          <Column field='userInstructions' header='User Instruction' bodyStyle={styles.text}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0Mzg3Mw==", "bodyText": "If organization type is OTHER, we should display the organizationTypeOtherText here instead.  Maybe both, something like \"Other: WhateverSpecialType\"", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r425343873", "createdAt": "2020-05-14T18:23:55Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-institution.tsx", "diffHunk": "@@ -0,0 +1,153 @@\n+import {Component} from '@angular/core';\n+import {Button} from 'app/components/buttons';\n+import {FadeBox} from 'app/components/containers';\n+import {SemiBoldHeader} from 'app/components/headers';\n+import {ClrIcon} from 'app/components/icons';\n+import {institutionApi} from 'app/services/swagger-fetch-clients';\n+import colors from 'app/styles/colors';\n+import {ReactWrapperBase} from 'app/utils';\n+import {reactStyles} from 'app/utils';\n+import {Institution} from 'generated/fetch';\n+import {DuaType, OrganizationType} from 'generated/fetch';\n+import * as fp from 'lodash/fp';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import * as React from 'react';\n+\n+\n+const styles = reactStyles({\n+  pageHeader: {\n+    fontSize: '18px',\n+    lineHeight: '22px',\n+    marginBottom: '1rem',\n+    marginTop: '0.5rem'\n+  },\n+  header: {\n+    fontSize: '14px',\n+    fontWeight: 600,\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    width: '3rem',\n+    textAlign: 'start',\n+    height: '4rem',\n+  },\n+  text: {\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '18px',\n+    color: colors.primary,\n+    verticalAlign: 'top',\n+    textOverflow: 'ellipsis',\n+    overflow: 'auto',\n+    height: '4rem',\n+    width: '5rem',\n+  }\n+});\n+\n+interface State {\n+  loadingInstitutions: boolean;\n+  institutions: Array<Institution>;\n+  institutionLoadError: boolean;\n+}\n+\n+export class AdminInstitution extends React.Component<{}, State> {\n+  constructor(props) {\n+    super(props);\n+    this.state = {\n+      loadingInstitutions: true,\n+      institutions: [],\n+      institutionLoadError: false\n+    };\n+  }\n+\n+  async componentDidMount() {\n+    try {\n+      const details = await institutionApi().getInstitutions();\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutions: details.institutions\n+      });\n+    } catch (e) {\n+      this.setState({\n+        loadingInstitutions: false,\n+        institutionLoadError: true\n+      });\n+    }\n+  }\n+\n+  renderOrganizationType(row, col) {\n+    switch ( row['organizationTypeEnum']) {\n+      case OrganizationType.ACADEMICRESEARCHINSTITUTION: return 'Academic Research Institution';\n+      case OrganizationType.HEALTHCENTERNONPROFIT: return 'Health Center Non-Profit';\n+      case OrganizationType.EDUCATIONALINSTITUTION: return 'Educational Institution';\n+      case OrganizationType.INDUSTRY: return 'Industry';\n+      default: return 'Other';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6ac1181bf23c58becb6fa6795d16900e1ccd0c"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c5b90bc5d5fac66ea2df0d4155e776c5c5c6b7be", "committedDate": "2020-05-14T21:21:40Z", "message": "Pr comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "038c63b7f66d820137d79539f9a78c75942ed48b", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/038c63b7f66d820137d79539f9a78c75942ed48b", "committedDate": "2020-05-14T21:23:30Z", "message": "Pr comments equality that"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa8cc1488ac3b15179e4ef874bd615f6858e708", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/8aa8cc1488ac3b15179e4ef874bd615f6858e708", "committedDate": "2020-05-15T13:35:59Z", "message": "Primereact 4.2 has updated dropdown onchange to originalEvent: Event, value: any, target: {name: string, id: string, value: any"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "832540f36273e59ebab9ba7f7b37b4f0a1896b8b", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/832540f36273e59ebab9ba7f7b37b4f0a1896b8b", "committedDate": "2020-05-15T16:13:15Z", "message": "PR COMMENTS: Use mapper for setting userInstructions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e07bdcee21765c9dc7ccda75e82ed735befc89c6", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e07bdcee21765c9dc7ccda75e82ed735befc89c6", "committedDate": "2020-05-15T16:14:39Z", "message": "Add comments InstructionMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "311024f8e3e6e57a54471651186ea932eb6b4535", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/311024f8e3e6e57a54471651186ea932eb6b4535", "committedDate": "2020-05-15T16:19:45Z", "message": "Remove method not being used in InstructionMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/590adbb9590eecf84fca804e30a7d56a2f77ac1a", "committedDate": "2020-05-15T16:35:45Z", "message": "Fix Api Test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTI2Njc1", "url": "https://github.com/all-of-us/workbench/pull/3580#pullrequestreview-412926675", "createdAt": "2020-05-15T19:52:32Z", "commit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1MjozMlrOGWR8_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOTo1MjozMlrOGWR8_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAxNTk5Nw==", "bodyText": "this can be ifPresent(target::setUserInstructions)", "url": "https://github.com/all-of-us/workbench/pull/3580#discussion_r426015997", "createdAt": "2020-05-15T19:52:32Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionMapper.java", "diffHunk": "@@ -50,4 +55,15 @@\n         .map(address -> new DbInstitutionEmailAddress().setEmailAddress(address))\n         .collect(Collectors.toSet());\n   }\n+\n+  @AfterMapping\n+  default void setUserInstruction(\n+      @MappingTarget Institution target, @Context InstitutionService institutionService) {\n+    institutionService\n+        .getInstitutionUserInstructions(target.getShortName())\n+        .ifPresent(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTI5MzUz", "url": "https://github.com/all-of-us/workbench/pull/3580#pullrequestreview-412929353", "createdAt": "2020-05-15T19:57:13Z", "commit": {"oid": "590adbb9590eecf84fca804e30a7d56a2f77ac1a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "babf665f0858785dfccdada4d53bd92efbc52586", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/babf665f0858785dfccdada4d53bd92efbc52586", "committedDate": "2020-05-15T19:58:28Z", "message": "PR Comment: Neater way to set  user instruction"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4727, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}