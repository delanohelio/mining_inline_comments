{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MjU4ODIz", "number": 3676, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNTo0OVrOEF97uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1MDozOFrOEGYplA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjkzMDUxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNTo0OVrOGkecNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNTo0OVrOGkecNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwMDY2MQ==", "bodyText": "This is a somewhat opportunistic change / cleanup: the return value from postNihCallback was never used.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r440900661", "createdAt": "2020-06-16T14:35:49Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudService.java", "diffHunk": "@@ -111,7 +111,9 @@ FirecloudWorkspaceACLUpdateResponseList updateWorkspaceACL(\n    */\n   FirecloudNihStatus getNihStatus();\n \n-  FirecloudNihStatus postNihCallback(FirecloudJWTWrapper wrapper);\n+  // Submits a Shibboleth JWT for verification and update using the old-style Shibboleth service\n+  // (via Firecloud Orchestration API).\n+  void postNihCallback(FirecloudJWTWrapper wrapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "875dc72a107cd8a4e9541e62187285079eb8353e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Njk0MDMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNzo1NVrOGkeiiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowMDoyM1rOGkm9gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwMjI4MA==", "bodyText": "I opted to use the standard \"firecloud\" API client config variables here. Even though Shibboleth is a distinct service, I felt it was simpler to use this standard set of API client variables rather than either (1) proliferate with add'l Shibboleth-specific configs or (2) use the ApiClient defaults. I'm open to objections here.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r440902280", "createdAt": "2020-06-16T14:37:55Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethConfig.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.pmiops.workbench.shibboleth;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.pmiops.workbench.auth.UserAuthentication;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.shibboleth.api.ShibbolethApi;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+@org.springframework.context.annotation.Configuration\n+public class ShibbolethConfig {\n+  public static final String X_APP_ID_HEADER = \"X-App-ID\";\n+\n+  @Bean\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public ShibbolethApi shibbolethApi(\n+      UserAuthentication userAuthentication, WorkbenchConfig workbenchConfig) {\n+    ApiClient apiClient = new ApiClient();\n+    apiClient.setBasePath(workbenchConfig.firecloud.shibbolethApiBaseUrl);\n+    apiClient.addDefaultHeader(X_APP_ID_HEADER, workbenchConfig.firecloud.xAppIdValue);\n+    apiClient.setDebugging(workbenchConfig.firecloud.debugEndpoints);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "875dc72a107cd8a4e9541e62187285079eb8353e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0MDI1Ng==", "bodyText": "This is probably fine", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441040256", "createdAt": "2020-06-16T18:00:23Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethConfig.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.pmiops.workbench.shibboleth;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.pmiops.workbench.auth.UserAuthentication;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.shibboleth.api.ShibbolethApi;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+@org.springframework.context.annotation.Configuration\n+public class ShibbolethConfig {\n+  public static final String X_APP_ID_HEADER = \"X-App-ID\";\n+\n+  @Bean\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public ShibbolethApi shibbolethApi(\n+      UserAuthentication userAuthentication, WorkbenchConfig workbenchConfig) {\n+    ApiClient apiClient = new ApiClient();\n+    apiClient.setBasePath(workbenchConfig.firecloud.shibbolethApiBaseUrl);\n+    apiClient.addDefaultHeader(X_APP_ID_HEADER, workbenchConfig.firecloud.xAppIdValue);\n+    apiClient.setDebugging(workbenchConfig.firecloud.debugEndpoints);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwMjI4MA=="}, "originalCommit": {"oid": "875dc72a107cd8a4e9541e62187285079eb8353e"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Njk0NDgwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethRetryHandler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozODo1M1rOGkelZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozODo1M1rOGkelZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDkwMzAxNA==", "bodyText": "I basically copied this from FirecloudRetryHandler. It felt like an awful lot of boilerplate for a single new API call, but I didn't see an obvious alternative.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r440903014", "createdAt": "2020-06-16T14:38:53Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethRetryHandler.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package org.pmiops.workbench.shibboleth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "875dc72a107cd8a4e9541e62187285079eb8353e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc0MjQxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo0OToxNVrOGkmjUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MzowNFrOGkolMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzU1NQ==", "bodyText": "Should this go inside the try?  Alternately, should we remove the try/catch since all it does is rethrow?", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441033555", "createdAt": "2020-06-16T17:49:15Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -833,9 +837,14 @@ private void updateInstitutionalAffiliations(Profile updatedProfile, DbUser user\n     if (token == null || token.getJwt() == null) {\n       throw new BadRequestException(\"Token is required.\");\n     }\n-    FirecloudJWTWrapper wrapper = new FirecloudJWTWrapper().jwt(token.getJwt());\n+\n+    if (workbenchConfigProvider.get().featureFlags.useNewShibbolethService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NjgwMQ==", "bodyText": "Removing try/catch sgtm. Done.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441066801", "createdAt": "2020-06-16T18:43:04Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -833,9 +837,14 @@ private void updateInstitutionalAffiliations(Profile updatedProfile, DbUser user\n     if (token == null || token.getJwt() == null) {\n       throw new BadRequestException(\"Token is required.\");\n     }\n-    FirecloudJWTWrapper wrapper = new FirecloudJWTWrapper().jwt(token.getJwt());\n+\n+    if (workbenchConfigProvider.get().featureFlags.useNewShibbolethService) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzMzU1NQ=="}, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc1NDMyOnYy", "diffSide": "RIGHT", "path": "api/config/config_local.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MjozMlrOGkmrCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0MjoyMlrOGkojnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNTUzMA==", "bodyText": "interesting path here.  Just want to confirm: \"prod/dev\" is right?", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441035530", "createdAt": "2020-06-16T17:52:32Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_local.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_dev_aou_test\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NjM5Ng==", "bodyText": "Yes \u2013\u00a0this is how the new Shibboleth service was designed. We noted this some time ago, and no changes were made.\nThis design also impacts our (in)ability to test against perf. AFAICT, there is no connection possible to the perf environment. So I just pushed a change which configures these params to empty strings in perf (which IMO is probably best, so any attempt fails hard rather than appears to work but acts on the wrong environment).\nThere's probably some architectural discussions worth having with the Terra UI team once they fully take on ownership of this service.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441066396", "createdAt": "2020-06-16T18:42:22Z", "author": {"login": "gjuggler"}, "path": "api/config/config_local.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_dev_aou_test\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNTUzMA=="}, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc1NTU5OnYy", "diffSide": "RIGHT", "path": "api/config/config_perf.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1Mjo1NVrOGkmr7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0Mjo1MVrOGkoktA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNTc1Nw==", "bodyText": "add /dev here?", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441035757", "createdAt": "2020-06-16T17:52:55Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_perf.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_perf_aou_perf\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",\n+    \"shibbolethUiBaseUrl\": \"https:\\/\\/broad-shibboleth-prod.appspot.com\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NjY3Ng==", "bodyText": "Thanks \u2013\u00a0done here and elsewhere. This also prompted me to think about the perf environment (which hits a distinct Terra env), where I decided to blank out the config values.", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441066676", "createdAt": "2020-06-16T18:42:51Z", "author": {"login": "gjuggler"}, "path": "api/config/config_perf.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_perf_aou_perf\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",\n+    \"shibbolethUiBaseUrl\": \"https:\\/\\/broad-shibboleth-prod.appspot.com\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNTc1Nw=="}, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc1Nzc2OnYy", "diffSide": "RIGHT", "path": "api/config/config_test.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1MzozM1rOGkmtTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo0Mjo1N1rOGkok8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNjEwOA==", "bodyText": "/dev here?", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441036108", "createdAt": "2020-06-16T17:53:33Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_test.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_dev_aou_test\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",\n+    \"shibbolethUiBaseUrl\": \"https:\\/\\/broad-shibboleth-prod.appspot.com\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NjczOA==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441066738", "createdAt": "2020-06-16T18:42:57Z", "author": {"login": "gjuggler"}, "path": "api/config/config_test.json", "diffHunk": "@@ -13,7 +13,9 @@\n     \"vpcServicePerimeterName\": \"accessPolicies/228353087260/servicePerimeters/terra_dev_aou_test\",\n     \"timeoutInSeconds\": 60,\n     \"jupyterDockerImage\": \"broadinstitute/terra-jupyter-aou:0.0.1\",\n-    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\"\n+    \"welderDockerImage\": \"broadinstitute/welder-server:7ae1a62\",\n+    \"shibbolethApiBaseUrl\": \"https:\\/\\/profile-dot-broad-shibboleth-prod.appspot.com/dev\",\n+    \"shibbolethUiBaseUrl\": \"https:\\/\\/broad-shibboleth-prod.appspot.com\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNjEwOA=="}, "originalCommit": {"oid": "f85483987a94aa5851ba63591dd80342894ea6f4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTMwNzcyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1MDozOFrOGlJe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1MDozOFrOGlJe-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwNTg4Mw==", "bodyText": "Something I learned recently for you to consider: The \"X-\" prefix is no longer recommended [1].\n[1] https://tools.ietf.org/html/rfc6648", "url": "https://github.com/all-of-us/workbench/pull/3676#discussion_r441605883", "createdAt": "2020-06-17T14:50:38Z", "author": {"login": "dmohs"}, "path": "api/src/main/java/org/pmiops/workbench/shibboleth/ShibbolethConfig.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.pmiops.workbench.shibboleth;\n+\n+import java.util.concurrent.TimeUnit;\n+import org.pmiops.workbench.auth.UserAuthentication;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.shibboleth.api.ShibbolethApi;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+@Configuration\n+public class ShibbolethConfig {\n+  public static final String X_APP_ID_HEADER = \"X-App-ID\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc17527542a86a9fdde1a87168f7e87b2273a18b"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2525, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}