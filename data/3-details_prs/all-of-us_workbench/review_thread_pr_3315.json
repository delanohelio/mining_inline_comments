{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MDM1MjEw", "number": 3315, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo0Mzo0NVrODsyJDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo0Mzo0NVrODsyJDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjg1NDUyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzo0Mzo0NVrOF91DpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOToyMTo1MlrOF94t_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3Njc0MA==", "bodyText": "Do we ever want to do a deep copy?", "url": "https://github.com/all-of-us/workbench/pull/3315#discussion_r400376740", "createdAt": "2020-03-30T17:43:45Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -315,23 +309,36 @@ public void removeOwnerFromBillingProject(\n   @Override\n   public FirecloudWorkspace createWorkspace(String projectName, String workspaceName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setName(workspaceName);\n-    workspaceIngest.setNamespace(projectName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceIngest workspaceIngest =\n+        new FirecloudWorkspaceIngest()\n+            .namespace(projectName)\n+            .name(workspaceName)\n+            .authorizationDomain(\n+                ImmutableList.of(\n+                    new FirecloudManagedGroupRef()\n+                        .membersGroupName(configProvider.get().firecloud.registeredDomainName)));\n+\n     return retryHandler.run((context) -> workspacesApi.createWorkspace(workspaceIngest));\n   }\n \n   @Override\n   public FirecloudWorkspace cloneWorkspace(\n       String fromProject, String fromName, String toProject, String toName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setNamespace(toProject);\n-    workspaceIngest.setName(toName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceRequestClone cloneRequest =\n+        new FirecloudWorkspaceRequestClone()\n+            .namespace(toProject)\n+            .name(toName)\n+            // We copy only the notebooks/ subdirectory as a heuristic to avoid unintentionally\n+            // performing a deep copy of workspace blobs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0ff3e05335f2bfe00bc7e25bb28ab30d0d71b23"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4MjMzNw==", "bodyText": "I updated the comment, it didn't quite say what I originally intended. Deep copy is ambiguous terminology in this context.\nIf your question is: are there use cases for copying different subsets of files (including all / none) when copying  a workspace? Yes. Whether we support those is a product question.", "url": "https://github.com/all-of-us/workbench/pull/3315#discussion_r400382337", "createdAt": "2020-03-30T17:52:34Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -315,23 +309,36 @@ public void removeOwnerFromBillingProject(\n   @Override\n   public FirecloudWorkspace createWorkspace(String projectName, String workspaceName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setName(workspaceName);\n-    workspaceIngest.setNamespace(projectName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceIngest workspaceIngest =\n+        new FirecloudWorkspaceIngest()\n+            .namespace(projectName)\n+            .name(workspaceName)\n+            .authorizationDomain(\n+                ImmutableList.of(\n+                    new FirecloudManagedGroupRef()\n+                        .membersGroupName(configProvider.get().firecloud.registeredDomainName)));\n+\n     return retryHandler.run((context) -> workspacesApi.createWorkspace(workspaceIngest));\n   }\n \n   @Override\n   public FirecloudWorkspace cloneWorkspace(\n       String fromProject, String fromName, String toProject, String toName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setNamespace(toProject);\n-    workspaceIngest.setName(toName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceRequestClone cloneRequest =\n+        new FirecloudWorkspaceRequestClone()\n+            .namespace(toProject)\n+            .name(toName)\n+            // We copy only the notebooks/ subdirectory as a heuristic to avoid unintentionally\n+            // performing a deep copy of workspace blobs.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3Njc0MA=="}, "originalCommit": {"oid": "f0ff3e05335f2bfe00bc7e25bb28ab30d0d71b23"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzNjczMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/all-of-us/workbench/pull/3315#discussion_r400436733", "createdAt": "2020-03-30T19:21:52Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/firecloud/FireCloudServiceImpl.java", "diffHunk": "@@ -315,23 +309,36 @@ public void removeOwnerFromBillingProject(\n   @Override\n   public FirecloudWorkspace createWorkspace(String projectName, String workspaceName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setName(workspaceName);\n-    workspaceIngest.setNamespace(projectName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceIngest workspaceIngest =\n+        new FirecloudWorkspaceIngest()\n+            .namespace(projectName)\n+            .name(workspaceName)\n+            .authorizationDomain(\n+                ImmutableList.of(\n+                    new FirecloudManagedGroupRef()\n+                        .membersGroupName(configProvider.get().firecloud.registeredDomainName)));\n+\n     return retryHandler.run((context) -> workspacesApi.createWorkspace(workspaceIngest));\n   }\n \n   @Override\n   public FirecloudWorkspace cloneWorkspace(\n       String fromProject, String fromName, String toProject, String toName) {\n     WorkspacesApi workspacesApi = workspacesApiProvider.get();\n-    FirecloudWorkspaceIngest workspaceIngest = new FirecloudWorkspaceIngest();\n-    workspaceIngest.setNamespace(toProject);\n-    workspaceIngest.setName(toName);\n-    checkAndAddRegistered(workspaceIngest);\n+    FirecloudWorkspaceRequestClone cloneRequest =\n+        new FirecloudWorkspaceRequestClone()\n+            .namespace(toProject)\n+            .name(toName)\n+            // We copy only the notebooks/ subdirectory as a heuristic to avoid unintentionally\n+            // performing a deep copy of workspace blobs.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3Njc0MA=="}, "originalCommit": {"oid": "f0ff3e05335f2bfe00bc7e25bb28ab30d0d71b23"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3083, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}