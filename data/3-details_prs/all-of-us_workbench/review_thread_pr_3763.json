{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTE5NjQ1", "number": 3763, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMDowM1rOEM4kBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMTozOFrOEM4mbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTQ1MDk0OnYy", "diffSide": "RIGHT", "path": "e2e/app/element/base-element.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMDowM1rOGvQA5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMDowM1rOGvQA5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5ODYzMQ==", "bodyText": "While running dataset-create.spec to make sure it runs okay, I observed clear() func acts flaky. Old value in text input was not always cleared before type new text.\nMy fix is to add one retry.", "url": "https://github.com/all-of-us/workbench/pull/3763#discussion_r452198631", "createdAt": "2020-07-09T13:00:03Z", "author": {"login": "aweng98"}, "path": "e2e/app/element/base-element.ts", "diffHunk": "@@ -151,10 +151,33 @@ export default class BaseElement extends Container {\n       });\n   }\n \n-  async type(text: string, options?: { delay: number }): Promise<this> {\n-    await this.focus();\n-    await this.clear();\n-    await this.asElementHandle().then((handle: ElementHandle) => handle.type(text, options));\n+  /**\n+   * Clear existing value in textbox then type new text value.\n+   * @param {string} The texts string.\n+   * @param options The typing options.\n+   */\n+  async type(textValue: string, options?: { delay: number }): Promise<this> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ab8bb813228f4d831549a68f022721aa03d970d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTQ1NzExOnYy", "diffSide": "RIGHT", "path": "e2e/app/element/base-element.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMTozOFrOGvQEpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMzowMTozOFrOGvQEpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE5OTU4OA==", "bodyText": "clearText alternative: injecting page function.", "url": "https://github.com/all-of-us/workbench/pull/3763#discussion_r452199588", "createdAt": "2020-07-09T13:01:38Z", "author": {"login": "aweng98"}, "path": "e2e/app/element/base-element.ts", "diffHunk": "@@ -177,12 +200,26 @@ export default class BaseElement extends Container {\n   }\n \n   /**\n-   * Clear value in textbox or textarea.\n+   * Clear value in textbox.\n    */\n-  async clear(): Promise<void> {\n+  async clear(options: ClickOptions = { clickCount: 3 }): Promise<void> {\n     const elemt = await this.asElementHandle();\n-    await elemt.click({ clickCount: 3 });\n-    await elemt.press('Backspace');\n+    await elemt.focus();\n+    await elemt.click(options);\n+    await this.page.keyboard.press('Backspace');\n+  }\n+\n+  async clearTextInput(): Promise<void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ab8bb813228f4d831549a68f022721aa03d970d"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2650, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}