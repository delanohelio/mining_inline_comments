{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzQ0MzUz", "number": 3658, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNTo1N1rOEEqahQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxMTo0NlrOEErLjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzI0Njc3OnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNTo1N1rOGibJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0MTo0M1rOGil0uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0OTY3NQ==", "bodyText": "Is the version change necessary for the other changes? If not, it might be nice to test that independently before or after.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438749675", "createdAt": "2020-06-11T12:35:57Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNDQ3Mg==", "bodyText": "It's needed to have an x- property that docker-compose doesn't complain about. I will add a comment about that below. It's a minor version upgrade, and this file is only applicable to local command lines, so I don't think it adds much value to split out a PR for this.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438924472", "createdAt": "2020-06-11T16:41:43Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0OTY3NQ=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzI1MTExOnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNzowOVrOGibMdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0NTozMFrOGil9WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MDMyNg==", "bodyText": "I've started to use workbench-api instead of api for clarity, as pretty much everything has an api.\nAlso, it sounds like this anchor is more generic than just API tasks, so maybe there's a more generic name. Not a huge deal, but it can be difficult to get your bearings here if you haven't used docker-compose much.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438750326", "createdAt": "2020-06-11T12:37:09Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNjY4MQ==", "bodyText": "I think this should be pretty contextually obvious in this case and it's symmetric to the directory name, I don't think the increased verbosity is worth it.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438926681", "createdAt": "2020-06-11T16:45:30Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MDMyNg=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzI1NzQyOnYy", "diffSide": "LEFT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozOTowM1rOGibQZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozNjowN1rOGigSVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MTMzNQ==", "bodyText": "I do use cloud_sql_proxy locally  with the, but I've never done so from docker-compose. @freemabd set me up with a named account on the test db, and I've been doing the same command locally to connect to it in IntelliJ:\n./cloud_sql_proxy -instances all-of-us-workbench-test:us-central1:workbenchmaindb=tcp:0.0.0.0:3307 -credential_file=/Users/jaycarlton/repos/workbench/api/sa-key.json\n\nOf course, as written this wouldn't work locally, unless I want to mount /w.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438751335", "createdAt": "2020-06-11T12:39:03Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   api-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   cdr-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db-cdr\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-make-bq-tables:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-cloudsql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/cloudsql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n \n   db-local-mysql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/local-mysql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n-\n-  cloud-sql-proxy:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w\n-    volumes:\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-    command: |\n-      cloud_sql_proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMzc0OQ==", "bodyText": "I also use cloud_sql_proxy to connect to test mysql db when using sequelPro/intellij", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438833749", "createdAt": "2020-06-11T14:36:07Z", "author": {"login": "freemabd"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   api-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   cdr-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db-cdr\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-make-bq-tables:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-cloudsql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/cloudsql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n \n   db-local-mysql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/local-mysql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n-\n-  cloud-sql-proxy:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w\n-    volumes:\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-    command: |\n-      cloud_sql_proxy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MTMzNQ=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzMxNDI5OnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo1NTozN1rOGib0XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDo0NDo1OVrOGiuKWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ==", "bodyText": "can we name this workbench_app_db instead, since we're a multi-db project? I feel like we're starting to need a distinct name for the MySQL DB, like \"Workbench Backend DB\" or \"Application DB\". Though maybe it's obvious that we're not launching BQ databases inside Docker.\nI suppose that would break compatibility and require doc updates.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760541", "createdAt": "2020-06-11T12:55:37Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n+  env_file:\n+    - db/vars.env\n+  volumes:\n+    - src-sync:/w:nocopy\n+    - gradle-cache:/.gradle\n+    - ~/.config:/.config:cached\n+    - ~/.gsutil:/.gsutil:cached\n services:\n   scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NjE3Mw==", "bodyText": "There's only one database here, and it feels like a pretty big stretch to think this could be referring to BigQuery. Is there a specific use case you are concerned about? Just reading this file?", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438946173", "createdAt": "2020-06-11T17:20:16Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n+  env_file:\n+    - db/vars.env\n+  volumes:\n+    - src-sync:/w:nocopy\n+    - gradle-cache:/.gradle\n+    - ~/.config:/.config:cached\n+    - ~/.gsutil:/.gsutil:cached\n services:\n   scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA2MTA4Mg==", "bodyText": "Fair enough. Just seems like a database should have a name other than database. The confusion isn't so much with this file or even with developers, but when discussing application components with product folks or other stakeholders.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r439061082", "createdAt": "2020-06-11T20:44:59Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n+  env_file:\n+    - db/vars.env\n+  volumes:\n+    - src-sync:/w:nocopy\n+    - gradle-cache:/.gradle\n+    - ~/.config:/.config:cached\n+    - ~/.gsutil:/.gsutil:cached\n services:\n   scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzMxNTg3OnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjo1NjowMVrOGib1Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo0NzowOVrOGimBCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDc4Mg==", "bodyText": "Can we simply include this line in the envs file?", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760782", "createdAt": "2020-06-11T12:56:01Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkyNzYyNw==", "bodyText": "This doesn't relate to the database, so I don't think that would be correct. It also refers to a specific mounted path within the docker container.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438927627", "createdAt": "2020-06-11T16:47:09Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDc4Mg=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzM2MTAxOnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzowODo0OVrOGicR5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxMTowNVrOGim1gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODEwMA==", "bodyText": "Maybe parameterize the port number and timeout?", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768100", "createdAt": "2020-06-11T13:08:49Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MTA1Ng==", "bodyText": "See above comment. Also the port is fine, but the timeout is a constant. Creating knobs for things that don't need to change generally just adds noise. If the intent was to avoid duplication with the other services here, see the PR description: my preference is to just eliminate the services with duplicate functionality. If there's a legitimate need for multiple services with this entrypoint, using an anchor can also work to avoid double-encoding of this.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438941056", "createdAt": "2020-06-11T17:11:05Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODEwMA=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzM2NjM1OnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxMDoxNVrOGicVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzowNzo1OFrOGimu6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODk3NA==", "bodyText": "Maybe make a named constant for the two different port numbers 8081 and 8001. If order is arbitrary, maybe list them alphabetically.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768974", "createdAt": "2020-06-11T13:10:15Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzOTM2OQ==", "bodyText": "Looks like the way to do this in docker-compose would be to push the ports into a .env file. local constants/variables don't seem to be possible in docker-compose, except maybe by further abusing anchors.\nAFAICT the suggestion isn't really related to the PR, so I don't intend to make a non-trivial change like that here.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438939369", "createdAt": "2020-06-11T17:07:58Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODk3NA=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzM3MjI4OnYy", "diffSide": "RIGHT", "path": "api/docker-compose.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxMTo0NlrOGicZIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNjo1MTo0N1rOGimLaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTk1Mg==", "bodyText": "I'm a bit surprised you need to use an anchor. I would've expected docker-compose to have a high-level concept for this kind of reuse.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438769952", "createdAt": "2020-06-11T13:11:46Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzMDI4MQ==", "bodyText": "Agreed, they used to have inheritance in docker-compose 2 which I initially tried to use here, but apparently they removed in v3. See moby/moby#31101", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438930281", "createdAt": "2020-06-11T16:51:47Z", "author": {"login": "calbach"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTk1Mg=="}, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2782, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}