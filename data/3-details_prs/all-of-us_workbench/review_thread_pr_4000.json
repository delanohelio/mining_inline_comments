{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzczMjQw", "number": 4000, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzowNzoyNFrOEkpI_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzowNzoyNFrOEkpI_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODU4MjM4OnYy", "diffSide": "LEFT", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzowNzoyNFrOHTtAfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzozMToxN1rOHTt4ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng==", "bodyText": "This was the Deprecated library the warning referred to", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490422396", "createdAt": "2020-09-17T17:07:24Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "diffHunk": "@@ -53,18 +53,14 @@\n   private static final Gson PRETTY_GSON = new GsonBuilder().setPrettyPrinting().create();\n \n   private static Set<String> commaDelimitedStringToSet(String str) {\n-    return Arrays.asList(str.split(\",\")).stream()\n-        .filter(s -> !s.isEmpty())\n-        .collect(Collectors.toSet());\n+    return Arrays.stream(str.split(\",\")).filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   private static RuntimesApi newApiClient(String apiUrl) throws IOException {\n     ApiClient apiClient = new ApiClient();\n     apiClient.setBasePath(apiUrl);\n-    GoogleCredential credential =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1257c6c41ba904addb3e52bac1003356a08f0250"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjcxNA==", "bodyText": "> Task :compile__tools__Java\nNote: /Users/thibault/src/aou/api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java uses or overrides a deprecated API.", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490422714", "createdAt": "2020-09-17T17:07:56Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "diffHunk": "@@ -53,18 +53,14 @@\n   private static final Gson PRETTY_GSON = new GsonBuilder().setPrettyPrinting().create();\n \n   private static Set<String> commaDelimitedStringToSet(String str) {\n-    return Arrays.asList(str.split(\",\")).stream()\n-        .filter(s -> !s.isEmpty())\n-        .collect(Collectors.toSet());\n+    return Arrays.stream(str.split(\",\")).filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   private static RuntimesApi newApiClient(String apiUrl) throws IOException {\n     ApiClient apiClient = new ApiClient();\n     apiClient.setBasePath(apiUrl);\n-    GoogleCredential credential =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}, "originalCommit": {"oid": "1257c6c41ba904addb3e52bac1003356a08f0250"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzMjY5Mg==", "bodyText": "Question, Just curious do you know why we were refreshing the token before assigning it to apiClient", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490432692", "createdAt": "2020-09-17T17:25:07Z", "author": {"login": "NehaBroad"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "diffHunk": "@@ -53,18 +53,14 @@\n   private static final Gson PRETTY_GSON = new GsonBuilder().setPrettyPrinting().create();\n \n   private static Set<String> commaDelimitedStringToSet(String str) {\n-    return Arrays.asList(str.split(\",\")).stream()\n-        .filter(s -> !s.isEmpty())\n-        .collect(Collectors.toSet());\n+    return Arrays.stream(str.split(\",\")).filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   private static RuntimesApi newApiClient(String apiUrl) throws IOException {\n     ApiClient apiClient = new ApiClient();\n     apiClient.setBasePath(apiUrl);\n-    GoogleCredential credential =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}, "originalCommit": {"oid": "1257c6c41ba904addb3e52bac1003356a08f0250"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNjc5NA==", "bodyText": "It's always a good idea to refresh the token, since it may have expired.\nThis new path still does: it includes a call to credentials.refreshIfExpired()", "url": "https://github.com/all-of-us/workbench/pull/4000#discussion_r490436794", "createdAt": "2020-09-17T17:31:17Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ManageLeonardoRuntimes.java", "diffHunk": "@@ -53,18 +53,14 @@\n   private static final Gson PRETTY_GSON = new GsonBuilder().setPrettyPrinting().create();\n \n   private static Set<String> commaDelimitedStringToSet(String str) {\n-    return Arrays.asList(str.split(\",\")).stream()\n-        .filter(s -> !s.isEmpty())\n-        .collect(Collectors.toSet());\n+    return Arrays.stream(str.split(\",\")).filter(s -> !s.isEmpty()).collect(Collectors.toSet());\n   }\n \n   private static RuntimesApi newApiClient(String apiUrl) throws IOException {\n     ApiClient apiClient = new ApiClient();\n     apiClient.setBasePath(apiUrl);\n-    GoogleCredential credential =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyMjM5Ng=="}, "originalCommit": {"oid": "1257c6c41ba904addb3e52bac1003356a08f0250"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4069, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}