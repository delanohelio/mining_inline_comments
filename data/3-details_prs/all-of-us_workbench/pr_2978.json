{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMTc3NzE3", "number": 2978, "title": "[RW-4226][RISK=no] Use descriptive, unique-per-instance MonitoredResource specification", "bodyText": "We need to use the generic_node MonitoredResource type since we run on AppEngine and can have multiple nodes writing at once.\nSince we don't have a namespace, I chose the short name of the environment. For the instanceId, sometimes we get an exception saying it's not available, and I just use a GUID for that. This hopefully only happens on local, but we're more concerned with avoiding hitting the rate limits when we have escalated instance counts than with debugging performance of particular instances at the moment.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-01-07T21:20:07Z", "url": "https://github.com/all-of-us/workbench/pull/2978", "merged": true, "mergeCommit": {"oid": "8e22ab679c3927f9397734b7ddecfee701d0853b"}, "closed": true, "closedAt": "2020-01-09T19:32:24Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb30lHXAH2gAyMzYwMTc3NzE3OjlmODcyZTljZGJmMTcwNjI5MjhlNDg1YzY4ZmNjZDA2NTEwMDc0OWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4cKTYgFqTM0MDE0NzY5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9f872e9cdbf17062928e485c68fccd065100749a", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9f872e9cdbf17062928e485c68fccd065100749a", "committedDate": "2020-01-06T23:16:22Z", "message": "initial progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c7de5386fb260d7b2cdd715bff536efab7aa14d", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/5c7de5386fb260d7b2cdd715bff536efab7aa14d", "committedDate": "2020-01-07T18:49:41Z", "message": "Merge branch 'master' into jaycarlton/RW-4226"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50cf46a5ef3c4857e7631ca095b1c878c573cc3", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/d50cf46a5ef3c4857e7631ca095b1c878c573cc3", "committedDate": "2020-01-07T20:58:49Z", "message": "working locally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb6ce1700833856523f3e22032574e578e39f9d6", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/cb6ce1700833856523f3e22032574e578e39f9d6", "committedDate": "2020-01-07T21:11:46Z", "message": "location id for all envs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4adef652b8eefd9a5ccaaf31e15d79d5254ba20", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/d4adef652b8eefd9a5ccaaf31e15d79d5254ba20", "committedDate": "2020-01-07T22:52:04Z", "message": "tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "409ce2a09b89b2fd6e066582d4d49cecd1c6a996", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/409ce2a09b89b2fd6e066582d4d49cecd1c6a996", "committedDate": "2020-01-08T13:45:38Z", "message": "spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTQ3Njkx", "url": "https://github.com/all-of-us/workbench/pull/2978#pullrequestreview-340147691", "createdAt": "2020-01-08T21:12:08Z", "commit": {"oid": "409ce2a09b89b2fd6e066582d4d49cecd1c6a996"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMToxMjowOVrOFbj-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMToxMjowOVrOFbj-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ0NTE5Ng==", "bodyText": "Is there a plan to have this return the actual location in the future?  Please add a comment.", "url": "https://github.com/all-of-us/workbench/pull/2978#discussion_r364445196", "createdAt": "2020-01-08T21:12:09Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/monitoring/StackdriverStatsExporterService.java", "diffHunk": "@@ -34,23 +49,68 @@ public StackdriverStatsExporterService(Provider<WorkbenchConfig> workbenchConfig\n   public void createAndRegister() {\n     if (!initialized) {\n       try {\n-        final StackdriverStatsConfiguration configuration =\n-            StackdriverStatsConfiguration.builder()\n-                .setMetricNamePrefix(buildMetricNamePrefix())\n-                .setProjectId(workbenchConfigProvider.get().server.projectId)\n-                .build();\n+        final StackdriverStatsConfiguration configuration = makeStackdriverStatsConfiguration();\n         StackdriverStatsExporter.createAndRegister(configuration);\n+        logger.info(\n+            String.format(\n+                \"Configured StackDriver exports with configuration:\\n%s\",\n+                configuration.toString()));\n         initialized = true;\n       } catch (IOException e) {\n         logger.log(Level.WARNING, \"Failed to initialize global StackdriverStatsExporter.\", e);\n       }\n     }\n   }\n \n+  @VisibleForTesting\n+  public StackdriverStatsConfiguration makeStackdriverStatsConfiguration() {\n+    return StackdriverStatsConfiguration.builder()\n+        .setMetricNamePrefix(buildMetricNamePrefix())\n+        .setProjectId(getProjectId())\n+        .setMonitoredResource(makeMonitoredResource())\n+        .build();\n+  }\n+\n+  private MonitoredResource makeMonitoredResource() {\n+    final MonitoredResource.Builder resultBuilder =\n+        MonitoredResource.newBuilder()\n+            .setType(MONITORED_RESOURCE_TYPE)\n+            .putLabels(PROJECT_ID_LABEL, getProjectId())\n+            .putLabels(LOCATION_LABEL, getLocation())\n+            .putLabels(NAMESPACE_LABEL, getEnvironmentShortName())\n+            .putLabels(NODE_ID_LABEL, getNodeId());\n+\n+    return resultBuilder.build();\n+  }\n+\n+  private String getProjectId() {\n+    return workbenchConfigProvider.get().server.projectId;\n+  }\n+\n+  private String getLocation() {\n+    return workbenchConfigProvider.get().server.appEngineLocationId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "409ce2a09b89b2fd6e066582d4d49cecd1c6a996"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3826, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}