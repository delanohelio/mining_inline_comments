{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExODE5OTI2", "number": 3510, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMjoxMzo1OVrOD4RJDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjozMDo0NFrOD4TKSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzI3NjkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMjoxMzo1OVrOGPASew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMjoxMzo1OVrOGPASew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM4NjU1NQ==", "bodyText": "Might be worth converting this vague (and misleading?) TODO into an explainer comment describing why this log line is important. Channeling CH, it sounds like this is important to verify which user an authenticated request came from.", "url": "https://github.com/all-of-us/workbench/pull/3510#discussion_r418386555", "createdAt": "2020-05-01T02:13:59Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "diffHunk": "@@ -171,7 +171,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons\n             new UserAuthentication(user, OAuth2Userinfo, token, UserType.RESEARCHER));\n \n     // TODO: setup this in the context, get rid of log statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "363704566dd8ed365f487ba2df949458878511ff"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzYwNzc5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNjozMDo0NFrOGPDNwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxOTozMzoyM1rOGPTg_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDQ5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // TODO: setup this in the context, get rid of log statement\n          \n          \n            \n                // TODO: Remove log statement and attach userinfo as a Stackdriver key/value instead.\n          \n          \n            \n                // This log line is currently the the only reliable way to associate a particular App Engine request log\n          \n          \n            \n                // with the authenticated user identity, which is critical information for debugging.", "url": "https://github.com/all-of-us/workbench/pull/3510#discussion_r418434497", "createdAt": "2020-05-01T06:30:44Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "diffHunk": "@@ -171,7 +171,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons\n             new UserAuthentication(user, OAuth2Userinfo, token, UserType.RESEARCHER));\n \n     // TODO: setup this in the context, get rid of log statement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "363704566dd8ed365f487ba2df949458878511ff"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4NTA4Mw==", "bodyText": "@calbach if you can sketch out which properties you want in a Stackdriver log (and if you want it in JSON, which I recommend for filtering and making logs-based metrics), what keys & values would be helpful, I'll be happy to do the logging part.\nI could do the fields on the Userinfoplus in addition to context from the interceptor on  the oparation.", "url": "https://github.com/all-of-us/workbench/pull/3510#discussion_r418585083", "createdAt": "2020-05-01T15:13:11Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "diffHunk": "@@ -171,7 +171,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons\n             new UserAuthentication(user, OAuth2Userinfo, token, UserType.RESEARCHER));\n \n     // TODO: setup this in the context, get rid of log statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDQ5Nw=="}, "originalCommit": {"oid": "363704566dd8ed365f487ba2df949458878511ff"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODU4NTE3MQ==", "bodyText": "merging this in the meantime", "url": "https://github.com/all-of-us/workbench/pull/3510#discussion_r418585171", "createdAt": "2020-05-01T15:13:23Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "diffHunk": "@@ -171,7 +171,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons\n             new UserAuthentication(user, OAuth2Userinfo, token, UserType.RESEARCHER));\n \n     // TODO: setup this in the context, get rid of log statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDQ5Nw=="}, "originalCommit": {"oid": "363704566dd8ed365f487ba2df949458878511ff"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcwMTU2Ng==", "bodyText": "Just email is fine to start to keep parity here. I don't have other ideas off the top of my head (authority and data access level are also interesting)", "url": "https://github.com/all-of-us/workbench/pull/3510#discussion_r418701566", "createdAt": "2020-05-01T19:33:23Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/AuthInterceptor.java", "diffHunk": "@@ -171,7 +171,7 @@ public boolean preHandle(HttpServletRequest request, HttpServletResponse respons\n             new UserAuthentication(user, OAuth2Userinfo, token, UserType.RESEARCHER));\n \n     // TODO: setup this in the context, get rid of log statement", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQzNDQ5Nw=="}, "originalCommit": {"oid": "363704566dd8ed365f487ba2df949458878511ff"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2841, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}