{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTc4NjE3", "number": 3948, "title": "[risk=no][RW-4896] New User Profile e2e tests", "bodyText": "Description:\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test:local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-09-01T15:52:35Z", "url": "https://github.com/all-of-us/workbench/pull/3948", "merged": true, "mergeCommit": {"oid": "abbde777ac3e161b2f65fd2eb0e0dcb66d9b7b04"}, "closed": true, "closedAt": "2020-09-01T21:40:42Z", "author": {"login": "jmthibault79"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEomwYAH2gAyNDc3MTc4NjE3OjYwMDczYzRjYjUzMTNmNDMzYzgzZTBmYjAzNjI1ODM4YTFiYjIyMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEuMUKgH2gAyNDc3MTc4NjE3OmM0OTM5MGI3YWZiMWI5MGIzZTNhNDU4ZjlhMzZlYzc1YWQ3YjJjZDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60073c4cb5313f433c83e0fb03625838a1bb2230", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/60073c4cb5313f433c83e0fb03625838a1bb2230", "committedDate": "2020-09-01T14:51:28Z", "message": "Improve User Profile test coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24f5c9cec48d93f1b52ba4d883696b2ccf09abe1", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/24f5c9cec48d93f1b52ba4d883696b2ccf09abe1", "committedDate": "2020-09-01T14:51:28Z", "message": "Use dataTestId wherever possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a17c311323d9dc957b8165d00f5c0d965d9a0e", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/66a17c311323d9dc957b8165d00f5c0d965d9a0e", "committedDate": "2020-09-01T15:51:17Z", "message": "add a missing required field test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e42755050e7d5ec3c4ada17d94693a0ef6a2fddc", "committedDate": "2020-09-01T15:53:23Z", "message": "Element"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTY3NTky", "url": "https://github.com/all-of-us/workbench/pull/3948#pullrequestreview-479967592", "createdAt": "2020-09-01T17:29:38Z", "commit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyOTozOFrOHLBDpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo0MDozM1rOHLBbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMzcwMA==", "bodyText": "refinding all elements are not necessary.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481313700", "createdAt": "2020-09-01T17:29:38Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';\n \n describe('Profile', () => {\n+  // initialized in beforeEach()\n+  let profilePage: ProfilePage;\n+\n+  async function waitForSaveButton(isActive: boolean): Promise<Button> {\n+    const button = await profilePage.getSaveProfileButton();\n+    const isCursorEnabled = ! (await button.isCursorNotAllowed());\n+    expect(isCursorEnabled).toBe(isActive);\n+    return button;\n+  }\n \n   beforeEach(async () => {\n     await signIn(page);\n+    await navigation.navMenu(page, NavLink.PROFILE);\n+    profilePage = new ProfilePage(page);\n+    await profilePage.waitForLoad();\n+\n+    // Verify \"Save Profile\" button is disabled first time page is opened.\n+    await waitForSaveButton(false);\n   });\n \n+  test('Edit single field of existing user profile', async () => {\n+    const testText = makeString(50);\n \n-  test('Check First and Last name fields on Profile page', async () => {\n-    const homePage = new HomePage(page);\n-    await homePage.waitForLoad();\n-    await navigation.navMenu(page, NavLink.PROFILE);\n-    const profilePage = new ProfilePage(page);\n-    const fname = await (await profilePage.getFirstName()).getValue();\n-    const lname = await (await profilePage.getLastName()).getValue();\n-    // check last and first name textbox is not empty\n-    expect(fname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).not.toEqual(fname);\n+    // Type in Research Background textarea\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    await researchBackground.paste(testText);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    expect(await researchBackground.getValue()).toBe(testText);\n   });\n \n+  test('Edit all fields of existing user profile', async () => {\n+    const testTextFirstName = makeString(10);\n+    const testTextLastName = makeString(10);\n+    const testTextURL = makeUrl(10);\n+    const testTextResearchBackground = makeString(10);\n+    const testTextAddress1 = makeString(10);\n+    const testTextAddress2 = makeString(10);\n+    const testTextCity = makeString(10);\n+    const testTextState = makeString(10);\n+    const testTextZip = makeString(10);\n+    const testTextCountry = makeString(10);\n+\n+    let firstName = await profilePage.getFirstNameInput();\n+    let lastName = await profilePage.getLastNameInput();\n+    let url = await profilePage.getProfessionalUrlInput();\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    let address1 = await profilePage.getAddress1Input();\n+    let address2 = await profilePage.getAddress2Input();\n+    let city = await profilePage.getCityInput();\n+    let state = await profilePage.getStateInput();\n+    let zip = await profilePage.getZipCodeInput();\n+    let country = await profilePage.getCountryInput();\n+\n+    await firstName.type(testTextFirstName);\n+    await lastName.type(testTextLastName);\n+    await url.type(testTextURL);\n+    await researchBackground.type(testTextResearchBackground);\n+    await address1.type(testTextAddress1);\n+    await address2.type(testTextAddress2);\n+    await city.type(testTextCity);\n+    await state.type(testTextState);\n+    await zip.type(testTextZip);\n+    await country.type(testTextCountry);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    firstName = await profilePage.getFirstNameInput();\n+    lastName = await profilePage.getLastNameInput();\n+    url = await profilePage.getProfessionalUrlInput();\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    address1 = await profilePage.getAddress1Input();\n+    address2 = await profilePage.getAddress2Input();\n+    city = await profilePage.getCityInput();\n+    state = await profilePage.getStateInput();\n+    zip = await profilePage.getZipCodeInput();\n+    country = await profilePage.getCountryInput();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNDAxMg==", "bodyText": "no relative path in import. ../../ can be removed.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481314012", "createdAt": "2020-09-01T17:30:09Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNDY2Ng==", "bodyText": "type app instead .. in import statements. do not use relative path.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481314666", "createdAt": "2020-09-01T17:31:19Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTQzNw==", "bodyText": "One disadvantage of not using text labels to find elements is no checking of text labels.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481315437", "createdAt": "2020-09-01T17:32:46Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';\n \n export const PageTitle = 'Profile';\n \n export const LabelAlias = {\n-  FirstName: 'First Name',\n-  LastName: 'Last Name',\n-  ContactEmail: 'Contact Email',\n-  CurrentPosition: 'Your Current Position',\n-  Organization: 'Your Organization',\n-  CurrentResearchWork: 'Current Research Work',\n-  AboutYou: 'About You',\n-  Institution: 'Institution',\n-  Role: 'Role',\n-  DiscardChanges: 'Discard Changes',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTgwOA==", "bodyText": "export is not needed if DataTestIdAlias isn't going to be imported by any outside file.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481315808", "createdAt": "2020-09-01T17:33:26Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';\n \n export const PageTitle = 'Profile';\n \n export const LabelAlias = {\n-  FirstName: 'First Name',\n-  LastName: 'Last Name',\n-  ContactEmail: 'Contact Email',\n-  CurrentPosition: 'Your Current Position',\n-  Organization: 'Your Organization',\n-  CurrentResearchWork: 'Current Research Work',\n-  AboutYou: 'About You',\n-  Institution: 'Institution',\n-  Role: 'Role',\n-  DiscardChanges: 'Discard Changes',\n+  ResearchBackground: 'Your research background, experience and research interests',\n   SaveProfile: 'Save Profile',\n };\n \n+\n+export const DataTestIdAlias = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzgwOA==", "bodyText": "await waitForText(this.page, text) can be used to find texts on page.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481317808", "createdAt": "2020-09-01T17:37:07Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -40,12 +47,64 @@ export default class ProfilePage extends AuthenticatedPage {\n     }\n   }\n \n-  async getFirstName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.FirstName});\n+  async getFirstNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.FirstName});\n+  }\n+\n+  async getLastNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.LastName});\n+  }\n+\n+  async getProfessionalUrlInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.ProfessionalUrl});\n+  }\n+\n+  async getResearchBackgroundTextarea(): Promise<Textarea> {\n+    return Textarea.findByName(this.page, {normalizeSpace: LabelAlias.ResearchBackground});\n+  }\n+\n+  async getAddress1Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address1});\n+  }\n+\n+  async getAddress2Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address2});\n   }\n \n-  async getLastName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.LastName});\n+  async getCityInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.City});\n   }\n \n+  async getStateInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.State});\n+  }\n+\n+  async getZipCodeInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Zip});\n+  }\n+\n+  async getCountryInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Country});\n+  }\n+\n+  async getSaveProfileButton(): Promise<Button> {\n+    return Button.findByName(this.page, {name: LabelAlias.SaveProfile});\n+  }\n+\n+  // TODO generalize - promote to a Div Element?\n+  async getDivWithText(text: string, options?: WaitForSelectorOptions): Promise<BaseElement> {\n+    const selector = `//div[normalize-space(text())=\"${text}\"]`;\n+    const handle = await this.page.waitForXPath(selector, options);\n+    return BaseElement.asBaseElement(this.page, handle);\n+  }\n+\n+  async expectResearchPurposeErrorMissing(): Promise<void> {\n+    const text = 'Current Research can\\'t be blank';\n+    await this.getDivWithText(text, {hidden: true});\n+  }\n+\n+  async expectResearchPurposeErrorPresent(): Promise<void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxOTc3Nw==", "bodyText": "I believe refinding is not necessary.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481319777", "createdAt": "2020-09-01T17:40:33Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';\n \n describe('Profile', () => {\n+  // initialized in beforeEach()\n+  let profilePage: ProfilePage;\n+\n+  async function waitForSaveButton(isActive: boolean): Promise<Button> {\n+    const button = await profilePage.getSaveProfileButton();\n+    const isCursorEnabled = ! (await button.isCursorNotAllowed());\n+    expect(isCursorEnabled).toBe(isActive);\n+    return button;\n+  }\n \n   beforeEach(async () => {\n     await signIn(page);\n+    await navigation.navMenu(page, NavLink.PROFILE);\n+    profilePage = new ProfilePage(page);\n+    await profilePage.waitForLoad();\n+\n+    // Verify \"Save Profile\" button is disabled first time page is opened.\n+    await waitForSaveButton(false);\n   });\n \n+  test('Edit single field of existing user profile', async () => {\n+    const testText = makeString(50);\n \n-  test('Check First and Last name fields on Profile page', async () => {\n-    const homePage = new HomePage(page);\n-    await homePage.waitForLoad();\n-    await navigation.navMenu(page, NavLink.PROFILE);\n-    const profilePage = new ProfilePage(page);\n-    const fname = await (await profilePage.getFirstName()).getValue();\n-    const lname = await (await profilePage.getLastName()).getValue();\n-    // check last and first name textbox is not empty\n-    expect(fname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).not.toEqual(fname);\n+    // Type in Research Background textarea\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    await researchBackground.paste(testText);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95367d665206c54421254164e1b7fa150b6826be", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/95367d665206c54421254164e1b7fa150b6826be", "committedDate": "2020-09-01T18:00:10Z", "message": "test refactor / wpi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf8925c027410ab3118a32fdb06805f1df38185", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/fbf8925c027410ab3118a32fdb06805f1df38185", "committedDate": "2020-09-01T18:02:51Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5880b9d7ccbaa9d420fc6ab83bf6455ee10f62e6", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/5880b9d7ccbaa9d420fc6ab83bf6455ee10f62e6", "committedDate": "2020-09-01T19:11:00Z", "message": "Don't need to re-find these elements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "244f1409075ce2a4075f57b9bb4fb525501b9f55", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/244f1409075ce2a4075f57b9bb4fb525501b9f55", "committedDate": "2020-09-01T19:12:39Z", "message": "fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0c3da58efa8a770003b0b8680e179e5d629c9f", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/3c0c3da58efa8a770003b0b8680e179e5d629c9f", "committedDate": "2020-09-01T19:16:08Z", "message": "these consts don't need to be exported"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e823b8271ccf78c0a9f11a690538b8809fbc3a", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e4e823b8271ccf78c0a9f11a690538b8809fbc3a", "committedDate": "2020-09-01T19:36:22Z", "message": "this can be const"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965186b9e7a2356e64ff5f41b87a24fd79f97cf4", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/965186b9e7a2356e64ff5f41b87a24fd79f97cf4", "committedDate": "2020-09-01T19:37:48Z", "message": "tmp rm incomplete test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDY2MTQ1", "url": "https://github.com/all-of-us/workbench/pull/3948#pullrequestreview-480066145", "createdAt": "2020-09-01T19:49:57Z", "commit": {"oid": "965186b9e7a2356e64ff5f41b87a24fd79f97cf4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c49390b7afb1b90b3e3a458f9a36ec75ad7b2cd1", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c49390b7afb1b90b3e3a458f9a36ec75ad7b2cd1", "committedDate": "2020-09-01T21:22:01Z", "message": "trim names in sidenav.spec"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4395, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}