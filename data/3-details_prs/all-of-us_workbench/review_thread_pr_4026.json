{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NDAyMTU5", "number": 4026, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MzowNlrOElGELQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0NDowMFrOElGFHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzMyMTQxOnYy", "diffSide": "LEFT", "path": "e2e/app/page/notebook-page.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MzowNlrOHUZw5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MzowNlrOHUZw5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NTY4NA==", "bodyText": "not useful information.", "url": "https://github.com/all-of-us/workbench/pull/4026#discussion_r491155684", "createdAt": "2020-09-18T19:43:06Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/notebook-page.ts", "diffHunk": "@@ -222,13 +222,11 @@ export default class NotebookPage extends AuthenticatedPage {\n     if (mode === Mode.Command) {\n       await this.page.keyboard.press('Escape');\n       await this.getIFrame().then(frame => frame.waitForSelector('body.notebook_app.command_mode'));\n-      console.log('Notebook in command mode');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430bd42a351d214555d951425a12bf631e038296"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzMyMTc0OnYy", "diffSide": "LEFT", "path": "e2e/app/page/notebook-page.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MzoxM1rOHUZxGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0MzoxM1rOHUZxGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NTczNw==", "bodyText": "not useful information.", "url": "https://github.com/all-of-us/workbench/pull/4026#discussion_r491155737", "createdAt": "2020-09-18T19:43:13Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/notebook-page.ts", "diffHunk": "@@ -222,13 +222,11 @@ export default class NotebookPage extends AuthenticatedPage {\n     if (mode === Mode.Command) {\n       await this.page.keyboard.press('Escape');\n       await this.getIFrame().then(frame => frame.waitForSelector('body.notebook_app.command_mode'));\n-      console.log('Notebook in command mode');\n       return;\n     }\n     // Press Enter key to activate edit mode\n     await this.page.keyboard.press('Enter');\n     await this.getIFrame().then(frame => frame.waitForSelector('body.notebook_app.edit_mode'));\n-    console.log('Notebook in edit mode');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430bd42a351d214555d951425a12bf631e038296"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzMyMzgwOnYy", "diffSide": "RIGHT", "path": "e2e/tests/notebook/notebook-r.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0NDowMFrOHUZyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxOTo0NDowMFrOHUZyYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE1NjA2NQ==", "bodyText": "Copy from import-r-lib.spec.ts test.", "url": "https://github.com/all-of-us/workbench/pull/4026#discussion_r491156065", "createdAt": "2020-09-18T19:44:00Z", "author": {"login": "aweng98"}, "path": "e2e/tests/notebook/notebook-r.spec.ts", "diffHunk": "@@ -23,14 +25,32 @@ describe('Jupyter notebook tests in R language', () => {\n     const kernelName = await notebook.getKernelName();\n     expect(kernelName).toBe('R');\n \n-    // Run math function in code cell [1]\n-    const code1Output = await notebook.runCodeCell(1, {codeFile: 'resources/r-code/calculate-max.R'});\n+    // Run math function in Code cell [1].\n+    let cellIndex = 1;\n+    const code1Output = await notebook.runCodeCell(cellIndex, {codeFile: 'resources/r-code/calculate-max.R'});\n     expect(code1Output).toEqual('[1] 20');\n \n-    // Print sys environment details in code cell [2]\n-    const code2Output = await notebook.runCodeCell(2, {codeFile: 'resources/r-code/sys-print.R'});\n+    // Print sys environment details in Code cell [2].\n+    cellIndex = 2;\n+    const code2Output = await notebook.runCodeCell(cellIndex, {codeFile: 'resources/r-code/sys-print.R'});\n     expect(code2Output).toContain('success');\n \n+    // Import R libs in Code cell [3].\n+    cellIndex = 3;\n+    const rCodeSnippet = fs.readFileSync('resources/r-code/import-libs.R', 'utf8');\n+    // In Code cell, autoCloseBrackets is true as default and it screws up the R code when Puppeteer types code line by line.\n+    // Worksaround: Type code in Markdown cell, then change to Code cell to run.\n+    const codeCell = await notebook.findCell(cellIndex);\n+    await codeCell.focus();\n+    await notebook.changeToMarkdownCell();\n+    const markdownCell = await notebook.findCell(cellIndex, CellType.Markdown);\n+    const markdownCellInput = await markdownCell.focus();\n+    await markdownCellInput.type(rCodeSnippet);\n+    await notebook.changeToCodeCell();\n+\n+    const cell3Output = await notebook.runCodeCell(cellIndex, {timeOut: 5 * 60 * 1000});\n+    expect(cell3Output).toContain('success');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "430bd42a351d214555d951425a12bf631e038296"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3919, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}