{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTM3OTMx", "number": 4074, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozMDowMVrOEoMHDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozMDowMVrOEoMHDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTc2OTExOnYy", "diffSide": "RIGHT", "path": "ui/src/app/utils/swagger-date.ts", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozMDowMVrOHZIpdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoyMDowOVrOHaf8-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA==", "bodyText": "If this is actually what we're getting on the wire, then surely it's a bug with the JSON serialization on the server; I can't imagine this verbose payload is the expect wire format for Swagger. This seems like a serialization of some internal Java object representation, i.e. the JSON serialization (presumably for java8 dateLibrary) with date-time does not work.\nIf it's a serialization issue, then patching over it on the client side seems incorrect to me.\nFor now, it may be easier for consistency to follow the unix millis pattern used in the rest of the API (though I would prefer we eventually switch to a string representation instead per https://precisionmedicineinitiative.atlassian.net/browse/RW-4682):\n      creationTime:\n        type: integer\n        format: int64\n        description: Milliseconds since the UNIX epoch.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r496118134", "createdAt": "2020-09-28T17:30:01Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0ODY4NQ==", "bodyText": "While this fix may work - I agree with CH on this. My main concern is what happens when the server side response changes/gets \"fixed\"? I would like to have a solid understanding of what is expected/coming over the wire.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r496148685", "createdAt": "2020-09-28T18:24:57Z", "author": {"login": "petesantos"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njk5NDY1MQ==", "bodyText": "I agree serialization is the  place to look. i had the perspective that like the Hitchhiker's Guide, if the JSON is wrong, it's definitively wrong.\nYes this is a band aid, but I feel like making breaking changes to the API for a hotfix is worse. The blast radius of the fix will be significantly higher.\nFor the purposes of RW-4682, I've removed Joda already from everything except Cohort Builder, and java.time.OffsetDateTime is now the standard on the backend.\nNote that this serialization was broken (in a different way) before the server-side change, where it was somehow sending a millisecond value instead of the verbose format.\nIn  any case, I'd  prefer to start with this fix, because the audit trail is very difficult to use today if you'er not familiar with Chrome dev tools, and I don't really have more time allocated this sprint for it.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r496994651", "createdAt": "2020-09-29T19:33:28Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzAwMDQ4NQ==", "bodyText": "How would the blast radius be significantly higher? The server-client communication is already broken and this is the only page that uses the value.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r497000485", "createdAt": "2020-09-29T19:44:11Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA1OTUzOQ==", "bodyText": "Reverting the change to the Java8 is the main thing I want to avoid, since the reporting stuff uses it in  several places.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r497059539", "createdAt": "2020-09-29T21:06:09Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA4NjExMA==", "bodyText": "My suggestion was to switch the type to int for consistency with our other timestamps.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r497086110", "createdAt": "2020-09-29T22:01:21Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0ODUzOA==", "bodyText": "Sure, I can do that for now.", "url": "https://github.com/all-of-us/workbench/pull/4074#discussion_r497548538", "createdAt": "2020-09-30T14:20:09Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/utils/swagger-date.ts", "diffHunk": "@@ -0,0 +1,33 @@\n+\n+// Inferred structure of JSON object coming down the wire for a date-time in Swagger. It's apparently\n+// not a Date as advertised.\n+export interface DateObjectProps {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExODEzNA=="}, "originalCommit": {"oid": "43e55dfc0a19497fae94c11b4a6404b0886674ec"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3974, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}