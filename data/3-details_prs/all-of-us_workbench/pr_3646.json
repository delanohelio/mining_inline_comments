{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NzMxMzc5", "number": 3646, "title": "[RW-4918][RW-4767][risk=no] Validate against whitespace-only strings on workspace create/edit/clone", "bodyText": "Notes:\n\nRefactored validate.js usage to take better advantage built-in capabilities, including allowEmpty: false\nSwitched to a conditional validation approach, rather than including this in the validation check\nDoes not implement any API-level check for non-whitespace strings, this is probably something we should have but is out of scope.\n\nFuture work:\n\nWe should rework the error messages to utilize the validate.js error messaging framework. Currently there's a fair amount of duplication going on in this file.", "createdAt": "2020-06-05T20:22:27Z", "url": "https://github.com/all-of-us/workbench/pull/3646", "merged": true, "mergeCommit": {"oid": "8b598c7cee17df9145c372303e1dae0b0028e83a"}, "closed": true, "closedAt": "2020-06-08T23:30:11Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoYUdHgH2gAyNDI4NzMxMzc5OjU3NTAyYzFhMjNmNjYwZTkzOWFkYzZhZGZmYTQ2N2Y5NTM3NmQ4MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpU2HLgFqTQyNjUwMzk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "57502c1a23f660e939adc6adffa467f95376d802", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/57502c1a23f660e939adc6adffa467f95376d802", "committedDate": "2020-06-05T20:03:07Z", "message": "Use more validate.js, leverage allowEmpty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecbbbe742098e94d89dd24af42d3e363bd53e98d", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/ecbbbe742098e94d89dd24af42d3e363bd53e98d", "committedDate": "2020-06-05T20:04:24Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4c9d12edf411393733947ebb4520efe0c750db2", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/d4c9d12edf411393733947ebb4520efe0c750db2", "committedDate": "2020-06-05T20:11:22Z", "message": "additional test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4202d3e79957210ad48a996cb085a3deffae00f2", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/4202d3e79957210ad48a996cb085a3deffae00f2", "committedDate": "2020-06-05T20:13:31Z", "message": "test code consistency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db2878d1e193d29ba1767c2c7f1953b1a4dae377", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/db2878d1e193d29ba1767c2c7f1953b1a4dae377", "committedDate": "2020-06-05T20:16:44Z", "message": "comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTAzOTg4", "url": "https://github.com/all-of-us/workbench/pull/3646#pullrequestreview-426503988", "createdAt": "2020-06-08T18:28:01Z", "commit": {"oid": "db2878d1e193d29ba1767c2c7f1953b1a4dae377"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoyODowMVrOGgqxAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoyODowMVrOGgqxAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwODI4OA==", "bodyText": "I wish our data-test-ids were a bit more consistent in casing/style, but that's a problem for another PR", "url": "https://github.com/all-of-us/workbench/pull/3646#discussion_r436908288", "createdAt": "2020-06-08T18:28:01Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/workspace/workspace-edit.spec.tsx", "diffHunk": "@@ -392,13 +381,23 @@ describe('WorkspaceEdit', () => {\n     const validInput = fp.repeat(100, 'a');\n     wrapper.find('[data-test-id=\"other-specialPopulation-text\"]').first().simulate('change', {target: {value: validInput}});\n \n-    let otherSpecificPopulationError = getSaveButtonDisableMsg(wrapper, 'otherSpecificPopulation');\n-    expect(otherSpecificPopulationError).toBeUndefined();\n+    expect(getSaveButtonDisableMsg(wrapper, 'otherPopulationDetails')).toBeUndefined();\n \n     const inValidInput = fp.repeat(101, 'a');\n     wrapper.find('[data-test-id=\"other-specialPopulation-text\"]').first().simulate('change', {target: {value: inValidInput}});\n \n-    otherSpecificPopulationError = getSaveButtonDisableMsg(wrapper, 'otherSpecificPopulation');\n-    expect(fp.first(otherSpecificPopulationError)).toBe('Other specific population must be true');\n+    expect(getSaveButtonDisableMsg(wrapper, 'otherPopulationDetails')).toBeDefined();\n+  });\n+\n+  it ('should show error message when other disseminate checked but empty', async() => {\n+    const wrapper = component();\n+    wrapper.find('[data-test-id=\"OTHER-checkbox\"]').at(1).simulate('change', { target: { checked: true } });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db2878d1e193d29ba1767c2c7f1953b1a4dae377"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4842, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}