{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMTI1MjAx", "number": 4362, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjowNToyNVrOFB2wVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo1ODoyMlrOFB9dtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDkwMDA0OnYy", "diffSide": "LEFT", "path": "api/config/config_local.json", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjowNToyNVrOIAuFCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxNzowOFrOIA2ckg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNTg2Nw==", "bodyText": "When was uploadMethod last used in the code?  Please ensure that there is at least one release between that merge and this one.", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537625867", "createdAt": "2020-12-07T16:05:25Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_local.json", "diffHunk": "@@ -123,7 +123,6 @@\n   },\n   \"reporting\": {\n     \"dataset\": \"reporting_local\",\n-    \"maxRowsPerInsert\": 200,\n-    \"uploadMethod\": \"STREAMING\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e5d83435ddcd3357c19771d9c61836063da2fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2MjEzMw==", "bodyText": "\ud83d\udd2a  https://github.com/all-of-us/workbench/pull/4355/files#diff-fd748e8599d99102a8da44afd79c7e9483084d1857c5bf983e4252a9b5243087L66", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537762133", "createdAt": "2020-12-07T19:15:47Z", "author": {"login": "jaycarlton"}, "path": "api/config/config_local.json", "diffHunk": "@@ -123,7 +123,6 @@\n   },\n   \"reporting\": {\n     \"dataset\": \"reporting_local\",\n-    \"maxRowsPerInsert\": 200,\n-    \"uploadMethod\": \"STREAMING\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNTg2Nw=="}, "originalCommit": {"oid": "47e5d83435ddcd3357c19771d9c61836063da2fe"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2Mjk2Mg==", "bodyText": "Good point. I'll leave this in place for rollback safety.", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537762962", "createdAt": "2020-12-07T19:17:08Z", "author": {"login": "jaycarlton"}, "path": "api/config/config_local.json", "diffHunk": "@@ -123,7 +123,6 @@\n   },\n   \"reporting\": {\n     \"dataset\": \"reporting_local\",\n-    \"maxRowsPerInsert\": 200,\n-    \"uploadMethod\": \"STREAMING\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyNTg2Nw=="}, "originalCommit": {"oid": "47e5d83435ddcd3357c19771d9c61836063da2fe"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDkxODc1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjowODo1MVrOIAuQUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOToxNDo1OVrOIA2XXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyODc1Mw==", "bodyText": "Should this use the maxRowsPerInsert config value?", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537628753", "createdAt": "2020-12-07T16:08:51Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "diffHunk": "@@ -27,11 +28,19 @@\n  * @code{ InsertAllRequestPayloadTransformer<ReportingUser> userTransformer =\n  *     UserColumnValueExtractor::values; }\n  */\n+@FunctionalInterface\n public interface InsertAllRequestPayloadTransformer<MODEL_T>\n     extends BigQueryInsertionPayloadTransformer<MODEL_T> {\n   String INSERT_ID_CHARS = \"abcdefghijklmnopqrstuvwxyz\";\n   int INSERT_ID_LENGTH = 16;\n+  int MAX_ROWS_PER_INSERT_ALL_REQUEST = 1000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e5d83435ddcd3357c19771d9c61836063da2fe"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc2MTYzMQ==", "bodyText": "It does, at least in the new code. The constant is a cap on the configured value.", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537761631", "createdAt": "2020-12-07T19:14:59Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "diffHunk": "@@ -27,11 +28,19 @@\n  * @code{ InsertAllRequestPayloadTransformer<ReportingUser> userTransformer =\n  *     UserColumnValueExtractor::values; }\n  */\n+@FunctionalInterface\n public interface InsertAllRequestPayloadTransformer<MODEL_T>\n     extends BigQueryInsertionPayloadTransformer<MODEL_T> {\n   String INSERT_ID_CHARS = \"abcdefghijklmnopqrstuvwxyz\";\n   int INSERT_ID_LENGTH = 16;\n+  int MAX_ROWS_PER_INSERT_ALL_REQUEST = 1000;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYyODc1Mw=="}, "originalCommit": {"oid": "47e5d83435ddcd3357c19771d9c61836063da2fe"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTk5OTI0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxOTo1ODoyMlrOIA4LIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoyMDoxMVrOIA4_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5MTI2Nw==", "bodyText": "This does not seem to be used anywhere?", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537791267", "createdAt": "2020-12-07T19:58:22Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "diffHunk": "@@ -27,11 +28,19 @@\n  * @code{ InsertAllRequestPayloadTransformer<ReportingUser> userTransformer =\n  *     UserColumnValueExtractor::values; }\n  */\n+@FunctionalInterface\n public interface InsertAllRequestPayloadTransformer<MODEL_T>\n     extends BigQueryInsertionPayloadTransformer<MODEL_T> {\n   String INSERT_ID_CHARS = \"abcdefghijklmnopqrstuvwxyz\";\n   int INSERT_ID_LENGTH = 16;\n+  int MAX_ROWS_PER_INSERT_ALL_REQUEST = 1000;\n \n+  default List<InsertAllRequest> buildBatchedRequests(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc71296181b9e8a6d13df96fc3c59bdacd5c04b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwNDYyNQ==", "bodyText": "It's new code from a different branch. Sholuldn't be here...\ngood eye.", "url": "https://github.com/all-of-us/workbench/pull/4362#discussion_r537804625", "createdAt": "2020-12-07T20:20:11Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/reporting/insertion/InsertAllRequestPayloadTransformer.java", "diffHunk": "@@ -27,11 +28,19 @@\n  * @code{ InsertAllRequestPayloadTransformer<ReportingUser> userTransformer =\n  *     UserColumnValueExtractor::values; }\n  */\n+@FunctionalInterface\n public interface InsertAllRequestPayloadTransformer<MODEL_T>\n     extends BigQueryInsertionPayloadTransformer<MODEL_T> {\n   String INSERT_ID_CHARS = \"abcdefghijklmnopqrstuvwxyz\";\n   int INSERT_ID_LENGTH = 16;\n+  int MAX_ROWS_PER_INSERT_ALL_REQUEST = 1000;\n \n+  default List<InsertAllRequest> buildBatchedRequests(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzc5MTI2Nw=="}, "originalCommit": {"oid": "abc71296181b9e8a6d13df96fc3c59bdacd5c04b"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3625, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}