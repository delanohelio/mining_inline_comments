{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzcxNjk2", "number": 4378, "title": "[RW-5427][risk=no] Runtime control E2E tests", "bodyText": "PR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-12-08T22:36:48Z", "url": "https://github.com/all-of-us/workbench/pull/4378", "merged": true, "mergeCommit": {"oid": "0f10bf70fc0e7d2973b607900415e6292e48dae5"}, "closed": true, "closedAt": "2020-12-12T00:42:28Z", "author": {"login": "als364"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkR1SdAH2gAyNTM0NzcxNjk2OjJhNzM0MWI3OTY1MTIzYzc4Y2M4N2I5N2VhZWM1MjhlOTA5NDczMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlPKkOgH2gAyNTM0NzcxNjk2OjQzOWMzYjIwY2IxOGUzMGFiZjQyMDEwODNkOWNlZDY2YmQ0NWI1MmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a7341b7965123c78cc87b97eaec528e9094730f", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/2a7341b7965123c78cc87b97eaec528e9094730f", "committedDate": "2020-12-08T22:25:06Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c053ec9eee13908b485a9489258706f9121dbb8", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/2c053ec9eee13908b485a9489258706f9121dbb8", "committedDate": "2020-12-08T22:25:07Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d99a19e2e4c5f8ef8da2882965dba8864edf3f04", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/d99a19e2e4c5f8ef8da2882965dba8864edf3f04", "committedDate": "2020-12-08T22:25:07Z", "message": "revert some stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f49e7d14d06a99827e1d4020e7d278a999f295f8", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/f49e7d14d06a99827e1d4020e7d278a999f295f8", "committedDate": "2020-12-08T22:25:07Z", "message": "oop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "036e23a51ebcc068e1a1d7495d8c3267e02e00d7", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/036e23a51ebcc068e1a1d7495d8c3267e02e00d7", "committedDate": "2020-12-08T22:25:07Z", "message": "why on earth is the dropdown so egregiously flaky"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9090c820cc0d8eee35e49e27a5c93aa0739606ae", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/9090c820cc0d8eee35e49e27a5c93aa0739606ae", "committedDate": "2020-12-08T22:25:07Z", "message": "revert a thing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7120b628679af6fdcfab711f41c7f86475f2d57d", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/7120b628679af6fdcfab711f41c7f86475f2d57d", "committedDate": "2020-12-08T22:25:07Z", "message": "shelving new test for rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a727210b27cd17f28ab3dd8e7a0b952756a2f093", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/a727210b27cd17f28ab3dd8e7a0b952756a2f093", "committedDate": "2020-12-08T22:36:11Z", "message": "waitfortimeout slow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d33576cb1461fa43972dce90d885364ab01d93", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/e8d33576cb1461fa43972dce90d885364ab01d93", "committedDate": "2020-12-08T22:38:32Z", "message": "notes to self"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd6368b05eb68fd24358b1e89581392bf9ed0fd", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/edd6368b05eb68fd24358b1e89581392bf9ed0fd", "committedDate": "2020-12-08T22:40:20Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eec91c9b15df636f5e2910947c8251f0ba51ede", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/3eec91c9b15df636f5e2910947c8251f0ba51ede", "committedDate": "2020-12-09T04:29:10Z", "message": "fix pickRuntimePreset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e85ac1ed6db30667c545f3f65724be05d04024f", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/6e85ac1ed6db30667c545f3f65724be05d04024f", "committedDate": "2020-12-09T16:28:08Z", "message": "using select-menu, using html id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fdd3337f0980a72de886ef10c07334b4fe54fcc", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/8fdd3337f0980a72de886ef10c07334b4fe54fcc", "committedDate": "2020-12-09T16:37:08Z", "message": "fix merge conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8c87f30475b5a43f518ec52fd5c436b256aefe", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/bc8c87f30475b5a43f518ec52fd5c436b256aefe", "committedDate": "2020-12-09T18:00:57Z", "message": "maybe it'll run on ci oy gevalt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20cacff85a3c5fbeb916f003ace3f428aaab3ae9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/20cacff85a3c5fbeb916f003ace3f428aaab3ae9", "committedDate": "2020-12-09T20:22:09Z", "message": "this time with less 60s+ hail ops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "755b04143821f48606c3d81775c88cb9c7cc75f9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/755b04143821f48606c3d81775c88cb9c7cc75f9", "committedDate": "2020-12-09T22:28:42Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce852438e65d4d237a6fb40323da7a6b197aa3d5", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/ce852438e65d4d237a6fb40323da7a6b197aa3d5", "committedDate": "2020-12-10T01:21:35Z", "message": "some debugging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a0745acd0dc0a4a520cd18b17564ef28573e41a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/6a0745acd0dc0a4a520cd18b17564ef28573e41a", "committedDate": "2020-12-10T01:58:35Z", "message": "moar fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8355a7d453d0b240a00b9b45fe7010a4727ad119", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/8355a7d453d0b240a00b9b45fe7010a4727ad119", "committedDate": "2020-12-10T17:38:01Z", "message": "ahahaha it works"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da4cb7930e21e84b157a9461d0a6a577a3fae100", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/da4cb7930e21e84b157a9461d0a6a577a3fae100", "committedDate": "2020-12-10T17:39:02Z", "message": "delete tests i used to test my tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1258075b3e5138328a24a69e060f6ba7233e7846", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1258075b3e5138328a24a69e060f6ba7233e7846", "committedDate": "2020-12-10T18:30:00Z", "message": "only make one workspace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/e42c552483c2714b9068310b6a3b55202461fe2b", "committedDate": "2020-12-10T19:10:08Z", "message": "ugh beforeall doesn't work for this i think"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDk1MjYx", "url": "https://github.com/all-of-us/workbench/pull/4378#pullrequestreview-549495261", "createdAt": "2020-12-10T18:40:11Z", "commit": {"oid": "1258075b3e5138328a24a69e060f6ba7233e7846"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MDoxMVrOIDX4hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MjoyNlrOIDX-BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNzk0MA==", "bodyText": "moved to Container, which underlies everything", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540407940", "createdAt": "2020-12-10T18:40:11Z", "author": {"login": "als364"}, "path": "e2e/app/component/modal.ts", "diffHunk": "@@ -83,10 +83,6 @@ export default class Modal extends Container {\n     await this.page.waitForXPath(this.xpath, {hidden: true, timeout: 55000});\n   }\n \n-  async waitUntilVisible(): Promise<ElementHandle> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1258075b3e5138328a24a69e060f6ba7233e7846"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwODk2Nw==", "bodyText": "alphabetized", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540408967", "createdAt": "2020-12-10T18:41:53Z", "author": {"login": "als364"}, "path": "e2e/app/text-labels.ts", "diffHunk": "@@ -34,9 +34,10 @@ export enum LinkText {\n    BackToReviewSet = 'Back to review set',\n    Calculate = 'Calculate',\n    Cancel = 'Cancel',\n-   Copy = 'Copy',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1258075b3e5138328a24a69e060f6ba7233e7846"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwOTM0OA==", "bodyText": "I didn't use the suggested bash options because Python makes it obnoxious to capture commandline output", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540409348", "createdAt": "2020-12-10T18:42:26Z", "author": {"login": "als364"}, "path": "e2e/resources/python-code/count-cpus.py", "diffHunk": "@@ -0,0 +1,2 @@\n+import psutil\n+psutil.cpu_count()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1258075b3e5138328a24a69e060f6ba7233e7846"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTI0Mjc5", "url": "https://github.com/all-of-us/workbench/pull/4378#pullrequestreview-549524279", "createdAt": "2020-12-10T19:18:30Z", "commit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOToxODozMVrOIDZWEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxOToxODozMVrOIDZWEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQzMTg5MA==", "bodyText": "Unfortunately have to do this each time because there's no good way to tell from a workspace card what CDR the workspace is using and we need the one with microarray data", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540431890", "createdAt": "2020-12-10T19:18:31Z", "author": {"login": "als364"}, "path": "e2e/tests/runtime/runtime-status-update.spec.ts", "diffHunk": "@@ -0,0 +1,222 @@\n+import HelpSidebar from 'app/component/help-sidebar';\n+import RuntimePanel, {\n+  ComputeType,\n+  RuntimePreset,\n+  StartStopIconState\n+} from 'app/component/runtime-panel';\n+import {config} from 'resources/workbench-config';\n+import {createWorkspace, signIn} from 'utils/test-utils';\n+import WorkspaceDataPage from 'app/page/workspace-data-page';\n+import {makeRandomName} from 'utils/str-utils';\n+import NotebookPreviewPage from 'app/page/notebook-preview-page';\n+\n+// This one is going to take a long time.\n+jest.setTimeout(60 * 30 * 1000);\n+\n+describe('Updating runtime parameters', () => {\n+  beforeEach(async () => {\n+    await signIn(page);\n+    const workspaceCard = await createWorkspace(page, config.altCdrVersionName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTc0NjQy", "url": "https://github.com/all-of-us/workbench/pull/4378#pullrequestreview-549574642", "createdAt": "2020-12-10T20:27:31Z", "commit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDoyNzozMVrOIDb6pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NzowMFrOIDcnAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ3NDAyMg==", "bodyText": "waitForXPath  needs {visible: true}", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540474022", "createdAt": "2020-12-10T20:27:31Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/help-sidebar.ts", "diffHunk": "@@ -108,11 +111,22 @@ export default class HelpSidebar extends Container {\n     return waitForNumericalString(this.page, selector);\n   }\n \n+  async clickSidebarTab(helpSidebarTab: HelpSidebarTab): Promise<void> {\n+    return await this.page.waitForXPath(helpSidebarTab).then(tab => tab.click());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MDExNw==", "bodyText": "TOL I think we need a sidebar base class which runtime panel and help sidebar can extends from.", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540480117", "createdAt": "2020-12-10T20:38:03Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/runtime-panel.ts", "diffHunk": "@@ -0,0 +1,192 @@\n+import Container from 'app/container';\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import {Page} from 'puppeteer';\n+import {waitForAttributeEquality, waitWhileLoading} from 'utils/waits-utils';\n+import PrimereactInputNumber from 'app/element/primereact-input-number';\n+import SelectMenu from \"./select-menu\";\n+import {savePageToFile, takeScreenshot} from \"../../utils/save-file-utils\";\n+import BaseElement from \"../element/base-element\";\n+\n+const defaultXpath = '//*[@id=\"runtime-panel\"]';\n+const startStopIconXpath = '//*[@data-test-id=\"runtime-status-icon\"]';\n+\n+export enum StartStopIconState {\n+  Error = 'error',\n+  None = 'none',\n+  Running = 'running',\n+  Starting = 'starting',\n+  Stopped = 'stopped',\n+  Stopping = 'stopping'\n+}\n+\n+export enum ComputeType {\n+  Standard = 'Standard VM',\n+  Dataproc = 'Dataproc Cluster'\n+}\n+\n+export enum RuntimePreset {\n+  GeneralAnalysis = 'General Analysis',\n+  HailGenomicsAnalysis = 'Hail Genomics Analysis'\n+}\n+\n+export default class RuntimePanel extends Container {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4Mjg3Mg==", "bodyText": "how about await getPropValue<number>(input, 'value');? (I didn't test it out).", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540482872", "createdAt": "2020-12-10T20:42:39Z", "author": {"login": "aweng98"}, "path": "e2e/app/element/primereact-input-number.ts", "diffHunk": "@@ -0,0 +1,42 @@\n+import BaseElement from './base-element';\n+import {ElementHandle, Page} from 'puppeteer';\n+\n+export default class PrimereactInputNumber extends BaseElement {\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async setValue(value: number): Promise<void> {\n+    const input = await this.getInputElementHandle();\n+    // primereact InputNumber thoughtfully ignores any input that would cause the input to go outside\n+    // its specified mins and maxes and is very finicky around 1) copy/paste and 2) manual manipulation\n+    // of its value prop so instead we must do shenanigans!\n+    await input.click();\n+    while (await this.getInputValue() !== value) {\n+      const curr = await this.getInputValue();\n+      if (curr > value) {\n+        await this.page.keyboard.press('ArrowDown');\n+      }\n+      else if (curr < value) {\n+        await this.page.keyboard.press('ArrowUp');\n+      }\n+    }\n+  }\n+\n+  async getInputValue(): Promise<number> {\n+    const input = await this.getInputBaseElement();\n+    return parseInt(await input.getProperty('value'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NTM3Nw==", "bodyText": "line 181 can be rewritten to }, {timeout}, selector.css, attribute, value);", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540485377", "createdAt": "2020-12-10T20:47:00Z", "author": {"login": "aweng98"}, "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -177,7 +178,7 @@ export async function waitForAttributeEquality(page: Page,\n           return element.attributes[attributeName] && element.attributes[attributeName].value === attributeValue;\n         }\n         return false;\n-      }, {}, selector.css, attribute, value);\n+      }, timeout ? {timeout} : {}, selector.css, attribute, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42c552483c2714b9068310b6a3b55202461fe2b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b6a6800315083b81be87f26c82711c00615b84d", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/0b6a6800315083b81be87f26c82711c00615b84d", "committedDate": "2020-12-10T21:05:51Z", "message": "alex review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzM4MzIy", "url": "https://github.com/all-of-us/workbench/pull/4378#pullrequestreview-549738322", "createdAt": "2020-12-11T01:28:02Z", "commit": {"oid": "0b6a6800315083b81be87f26c82711c00615b84d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMToyODowMlrOIDk-lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMTo1MToyM1rOIDlerw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYyMjQ4Nw==", "bodyText": "nit: absolute imports", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540622487", "createdAt": "2020-12-11T01:28:02Z", "author": {"login": "ericsong"}, "path": "e2e/app/component/runtime-panel.ts", "diffHunk": "@@ -0,0 +1,192 @@\n+import Container from 'app/container';\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import {Page} from 'puppeteer';\n+import {waitForAttributeEquality, waitWhileLoading} from 'utils/waits-utils';\n+import PrimereactInputNumber from 'app/element/primereact-input-number';\n+import SelectMenu from \"./select-menu\";\n+import {savePageToFile, takeScreenshot} from \"../../utils/save-file-utils\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b6a6800315083b81be87f26c82711c00615b84d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYyMzE1Nw==", "bodyText": "nit: statusIconXpath seems more accurate? or at least consistent with the UI name.", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540623157", "createdAt": "2020-12-11T01:29:57Z", "author": {"login": "ericsong"}, "path": "e2e/app/component/runtime-panel.ts", "diffHunk": "@@ -0,0 +1,192 @@\n+import Container from 'app/container';\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import {Page} from 'puppeteer';\n+import {waitForAttributeEquality, waitWhileLoading} from 'utils/waits-utils';\n+import PrimereactInputNumber from 'app/element/primereact-input-number';\n+import SelectMenu from \"./select-menu\";\n+import {savePageToFile, takeScreenshot} from \"../../utils/save-file-utils\";\n+import BaseElement from \"../element/base-element\";\n+\n+const defaultXpath = '//*[@id=\"runtime-panel\"]';\n+const startStopIconXpath = '//*[@data-test-id=\"runtime-status-icon\"]';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b6a6800315083b81be87f26c82711c00615b84d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDYzMDcwMw==", "bodyText": "why do some of these click actions have a timeout while others do not? Even if click triggers an action that takes a few seconds to complete, I think it's OK to return once the click has completed. We can let the calling function add a waitForVisible or w/e else is appropriate to wait for the action to complete.\nThis is mainly b/c of the semantics of a function named \"click\". If the function was just named \"customizeButton\", I think it makes sense to add the wait call here.", "url": "https://github.com/all-of-us/workbench/pull/4378#discussion_r540630703", "createdAt": "2020-12-11T01:51:23Z", "author": {"login": "ericsong"}, "path": "e2e/app/component/runtime-panel.ts", "diffHunk": "@@ -0,0 +1,192 @@\n+import Container from 'app/container';\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import {Page} from 'puppeteer';\n+import {waitForAttributeEquality, waitWhileLoading} from 'utils/waits-utils';\n+import PrimereactInputNumber from 'app/element/primereact-input-number';\n+import SelectMenu from \"./select-menu\";\n+import {savePageToFile, takeScreenshot} from \"../../utils/save-file-utils\";\n+import BaseElement from \"../element/base-element\";\n+\n+const defaultXpath = '//*[@id=\"runtime-panel\"]';\n+const startStopIconXpath = '//*[@data-test-id=\"runtime-status-icon\"]';\n+\n+export enum StartStopIconState {\n+  Error = 'error',\n+  None = 'none',\n+  Running = 'running',\n+  Starting = 'starting',\n+  Stopped = 'stopped',\n+  Stopping = 'stopping'\n+}\n+\n+export enum ComputeType {\n+  Standard = 'Standard VM',\n+  Dataproc = 'Dataproc Cluster'\n+}\n+\n+export enum RuntimePreset {\n+  GeneralAnalysis = 'General Analysis',\n+  HailGenomicsAnalysis = 'Hail Genomics Analysis'\n+}\n+\n+export default class RuntimePanel extends Container {\n+  constructor(page: Page, xpath: string = defaultXpath) {\n+    super(page, xpath);\n+  }\n+\n+  async clickCreateButton(): Promise<void> {\n+    const button = await Button.findByName(this.page, {name: LinkText.Create}, this);\n+    await button.click();\n+    return await page.waitForTimeout(2000);\n+  }\n+\n+  async clickCustomizeButton(): Promise<void> {\n+    const button = await Button.findByName(this.page, {name: LinkText.Customize}, this);\n+    await button.click();\n+    return await page.waitForTimeout(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b6a6800315083b81be87f26c82711c00615b84d"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad2b385251e65aa4289364d74550902e4c06010e", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/ad2b385251e65aa4289364d74550902e4c06010e", "committedDate": "2020-12-11T16:44:02Z", "message": "review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "439c3b20cb18e30abf4201083d9ced66bd45b52e", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/439c3b20cb18e30abf4201083d9ced66bd45b52e", "committedDate": "2020-12-11T21:52:33Z", "message": "whoops i didn't put any semicolons"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3739, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}