{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDA1ODk1", "number": 3759, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowODoyMlrOEMozpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo1ODoxMFrOEMpvzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjg2OTQ4OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/workspace-about-page.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDowODoyMlrOGu3fFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToyNjozM1rOGu5zmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng==", "bodyText": "why double await ?", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451796756", "createdAt": "2020-07-08T20:08:22Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/page/workspace-about-page.ts", "diffHunk": "@@ -69,4 +69,26 @@ export default class WorkspaceAboutPage extends AuthenticatedPage{\n     await modal.waitUntilVisible();\n     return modal;\n   }\n+\n+  async getCdrVersion(): Promise<string> {\n+    const cdrVerXpath = '//*[@data-test-id=\"cdrVersion\"]';\n+    const cdr = await this.page.waitForXPath(cdrVerXpath, {visible: true});\n+    const cdrValue = await (await cdr.getProperty('innerText')).jsonValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMzgxMg==", "bodyText": "both are async calls. the inner call has to finish first before outer call starts. I could write it differently with .then() (promises chaining) if you think that's a better to read.", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451823812", "createdAt": "2020-07-08T21:03:08Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/workspace-about-page.ts", "diffHunk": "@@ -69,4 +69,26 @@ export default class WorkspaceAboutPage extends AuthenticatedPage{\n     await modal.waitUntilVisible();\n     return modal;\n   }\n+\n+  async getCdrVersion(): Promise<string> {\n+    const cdrVerXpath = '//*[@data-test-id=\"cdrVersion\"]';\n+    const cdr = await this.page.waitForXPath(cdrVerXpath, {visible: true});\n+    const cdrValue = await (await cdr.getProperty('innerText')).jsonValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNDc3Nw==", "bodyText": "OK\nNo need to change", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451834777", "createdAt": "2020-07-08T21:26:33Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/page/workspace-about-page.ts", "diffHunk": "@@ -69,4 +69,26 @@ export default class WorkspaceAboutPage extends AuthenticatedPage{\n     await modal.waitUntilVisible();\n     return modal;\n   }\n+\n+  async getCdrVersion(): Promise<string> {\n+    const cdrVerXpath = '//*[@data-test-id=\"cdrVersion\"]';\n+    const cdr = await this.page.waitForXPath(cdrVerXpath, {visible: true});\n+    const cdrValue = await (await cdr.getProperty('innerText')).jsonValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5Njc1Ng=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjg3NDQ1OnYy", "diffSide": "RIGHT", "path": "e2e/jest-puppeteer.config.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDoxMDowMVrOGu3iEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToyNjo0MVrOGu5zxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw==", "bodyText": "so we're defaulting to Headless if this value is missing.  is that what we want?", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451797523", "createdAt": "2020-07-08T20:10:01Z", "author": {"login": "jmthibault79"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -5,7 +5,7 @@\n \n const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n-const isHeadless = process.env.HEADLESS !== 'false';\n+const isHeadless = (process.env.HEADLESS || 'true') === 'true';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyNDUyMg==", "bodyText": "yes, that's the intention. it's like that since day 1. I changed code to make it explicitly clear.", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451824522", "createdAt": "2020-07-08T21:04:39Z", "author": {"login": "aweng98"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -5,7 +5,7 @@\n \n const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n-const isHeadless = process.env.HEADLESS !== 'false';\n+const isHeadless = (process.env.HEADLESS || 'true') === 'true';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNDgyMg==", "bodyText": "great!", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451834822", "createdAt": "2020-07-08T21:26:41Z", "author": {"login": "jmthibault79"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -5,7 +5,7 @@\n \n const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n-const isHeadless = process.env.HEADLESS !== 'false';\n+const isHeadless = (process.env.HEADLESS || 'true') === 'true';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc5NzUyMw=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzAyMzQ4OnYy", "diffSide": "RIGHT", "path": "e2e/tests/workspace/workspace-edit.spec.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMDo1ODoxMFrOGu4-6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToyODoxMlrOGu52mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA==", "bodyText": "how does this work?", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451821290", "createdAt": "2020-07-08T20:58:10Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-edit.spec.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import DataPage, {TabLabelAlias} from 'app/page/data-page';\n+import WorkspacesPage from 'app/page/workspaces-page';\n+import {EllipsisMenuAction} from 'app/text-labels';\n+import * as testData from 'resources/data/workspace-data';\n+import {findWorkspace, performActions, signIn} from 'utils/test-utils';\n+import WorkspaceAboutPage from 'app/page/workspace-about-page';\n+\n+\n+describe('Editing workspace thru workspace card ellipsis menu', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  /**\n+   * Test:\n+   * - Find an existing workspace. Create a new workspace if none exists.\n+   * - Edit workspace: changing Question 2 answers.\n+   * - Verify landing in DATA tab.\n+   * - Verify Workspace Information in ABOUT tab.\n+   */\n+  test('User as OWNER can edit workspace', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await (workspaceCard.getEllipsis()).clickAction(EllipsisMenuAction.Edit);\n+\n+    const workspacesPage = new WorkspacesPage(page);\n+    // Change question #2 answer\n+    await performActions(page, testData.defaultAnswersResearchPurposeSummary);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyNjYyNw==", "bodyText": "Basically, iterate thru a json object consisted of elements and performs action (type/check/select) according to the type (textinput/checkbox/radiobutton) of element. (saves me from dupl. code)\nexport const defaultAnswersResearchPurposeSummary = [\n  {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.scientificQuestionsIntentToStudyTextarea,\n    value: makeString(100)\n  }, {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.scientificApproachesToUseTextarea,\n    value: makeString(100)\n  }, {\n    id: FIELD.RESEARCH_PURPOSE_SUMMARY.anticipatedFindingsFromStudyTextarea,\n    value: makeString(100)\n  }\n];", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451826627", "createdAt": "2020-07-08T21:09:09Z", "author": {"login": "aweng98"}, "path": "e2e/tests/workspace/workspace-edit.spec.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import DataPage, {TabLabelAlias} from 'app/page/data-page';\n+import WorkspacesPage from 'app/page/workspaces-page';\n+import {EllipsisMenuAction} from 'app/text-labels';\n+import * as testData from 'resources/data/workspace-data';\n+import {findWorkspace, performActions, signIn} from 'utils/test-utils';\n+import WorkspaceAboutPage from 'app/page/workspace-about-page';\n+\n+\n+describe('Editing workspace thru workspace card ellipsis menu', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  /**\n+   * Test:\n+   * - Find an existing workspace. Create a new workspace if none exists.\n+   * - Edit workspace: changing Question 2 answers.\n+   * - Verify landing in DATA tab.\n+   * - Verify Workspace Information in ABOUT tab.\n+   */\n+  test('User as OWNER can edit workspace', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await (workspaceCard.getEllipsis()).clickAction(EllipsisMenuAction.Edit);\n+\n+    const workspacesPage = new WorkspacesPage(page);\n+    // Change question #2 answer\n+    await performActions(page, testData.defaultAnswersResearchPurposeSummary);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzNTU0Nw==", "bodyText": "oh ok - it fills in those 3 text fields.  cool.", "url": "https://github.com/all-of-us/workbench/pull/3759#discussion_r451835547", "createdAt": "2020-07-08T21:28:12Z", "author": {"login": "jmthibault79"}, "path": "e2e/tests/workspace/workspace-edit.spec.ts", "diffHunk": "@@ -0,0 +1,73 @@\n+import DataPage, {TabLabelAlias} from 'app/page/data-page';\n+import WorkspacesPage from 'app/page/workspaces-page';\n+import {EllipsisMenuAction} from 'app/text-labels';\n+import * as testData from 'resources/data/workspace-data';\n+import {findWorkspace, performActions, signIn} from 'utils/test-utils';\n+import WorkspaceAboutPage from 'app/page/workspace-about-page';\n+\n+\n+describe('Editing workspace thru workspace card ellipsis menu', () => {\n+\n+  beforeEach(async () => {\n+    await signIn(page);\n+  });\n+\n+  /**\n+   * Test:\n+   * - Find an existing workspace. Create a new workspace if none exists.\n+   * - Edit workspace: changing Question 2 answers.\n+   * - Verify landing in DATA tab.\n+   * - Verify Workspace Information in ABOUT tab.\n+   */\n+  test('User as OWNER can edit workspace', async () => {\n+    const workspaceCard = await findWorkspace(page);\n+    await (workspaceCard.getEllipsis()).clickAction(EllipsisMenuAction.Edit);\n+\n+    const workspacesPage = new WorkspacesPage(page);\n+    // Change question #2 answer\n+    await performActions(page, testData.defaultAnswersResearchPurposeSummary);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMTI5MA=="}, "originalCommit": {"oid": "11f109a097b33d89bbb5ac1eca83aea1f3f6de07"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2647, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}