{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1Nzc1MTk5", "number": 3824, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzoxMToyNlrOEVF2rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo1OToxNlrOEWzhnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTUxNDcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzoxMToyNlrOG7pvAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxOTo0NDoyN1rOG7u-zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMjk0NA==", "bodyText": "nit: I'm not sure the heavy suffix helps clarify anything here. Is this important to a reader, and/or does it map to any well-defined concept or pattern in the codebase?", "url": "https://github.com/all-of-us/workbench/pull/3824#discussion_r465202944", "createdAt": "2020-08-04T17:11:26Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "diffHunk": "@@ -501,10 +506,44 @@ public void validateNewProfile(Profile profile) throws BadRequestException {\n     validateProfileForCorrectness(dummyProfile, profile);\n   }\n \n+  // Get all the profiles. Best we can do without surgery on the entity classes is to do one query\n+  // per table and join them in code.\n   public List<Profile> listAllProfiles() {\n-    return userService.getAllUsers().stream().map(this::getProfile).collect(Collectors.toList());\n+    final Set<DbUser> usersHeavy = userService.findAllUsersWithAuthoritiesAndPageVisits();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30b0f7cc0a720622a950cb496565fa895fc7d1ef"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTI4ODkxMQ==", "bodyText": "We don't have an established convention, but I thought it important to indicate that this set of users had more fields populated than the default DbUser. The convention at HubSpot would be hydratedUsers.", "url": "https://github.com/all-of-us/workbench/pull/3824#discussion_r465288911", "createdAt": "2020-08-04T19:44:27Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "diffHunk": "@@ -501,10 +506,44 @@ public void validateNewProfile(Profile profile) throws BadRequestException {\n     validateProfileForCorrectness(dummyProfile, profile);\n   }\n \n+  // Get all the profiles. Best we can do without surgery on the entity classes is to do one query\n+  // per table and join them in code.\n   public List<Profile> listAllProfiles() {\n-    return userService.getAllUsers().stream().map(this::getProfile).collect(Collectors.toList());\n+    final Set<DbUser> usersHeavy = userService.findAllUsersWithAuthoritiesAndPageVisits();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMjk0NA=="}, "originalCommit": {"oid": "30b0f7cc0a720622a950cb496565fa895fc7d1ef"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQ4MzE3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo1OToxNlrOG-PxSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNTo0NjoxMlrOG--F7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMzI3Mw==", "bodyText": "Why change this?  The linter-required formatting makes this version harder to follow", "url": "https://github.com/all-of-us/workbench/pull/3824#discussion_r467923273", "createdAt": "2020-08-10T13:59:16Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "diffHunk": "@@ -393,15 +397,16 @@ private boolean fieldChanged(Diff diff, String field) {\n    * @return true if the Profile is new\n    */\n   private boolean isNewProfile(Diff diff) {\n-    final Predicate<Change> newProfilePred =\n-        change ->\n-            change instanceof NewObject\n-                && change\n-                    .getAffectedGlobalId()\n-                    .getTypeName()\n-                    .equals(Profile.class.getCanonicalName());\n \n-    return diff.getChanges(newProfilePred).size() > 0;\n+    return diff.getChanges(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30b0f7cc0a720622a950cb496565fa895fc7d1ef"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYwNDgyNQ==", "bodyText": "I thought lambdas were preferred in this kind of usage and thought you might not have realized you can use a lambda instead of declaring a predicate. Arguably we could improve it by  declaring the list of changes and then taking its size. I believe  IntelliJ suggested this change as well.", "url": "https://github.com/all-of-us/workbench/pull/3824#discussion_r468604825", "createdAt": "2020-08-11T14:04:19Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "diffHunk": "@@ -393,15 +397,16 @@ private boolean fieldChanged(Diff diff, String field) {\n    * @return true if the Profile is new\n    */\n   private boolean isNewProfile(Diff diff) {\n-    final Predicate<Change> newProfilePred =\n-        change ->\n-            change instanceof NewObject\n-                && change\n-                    .getAffectedGlobalId()\n-                    .getTypeName()\n-                    .equals(Profile.class.getCanonicalName());\n \n-    return diff.getChanges(newProfilePred).size() > 0;\n+    return diff.getChanges(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMzI3Mw=="}, "originalCommit": {"oid": "30b0f7cc0a720622a950cb496565fa895fc7d1ef"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODY4MjIyMw==", "bodyText": "Makes sense.  Lambda + separated size check sounds like the best option here.  Thanks.\nIt's certainly not a priority to make that change.", "url": "https://github.com/all-of-us/workbench/pull/3824#discussion_r468682223", "createdAt": "2020-08-11T15:46:12Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileService.java", "diffHunk": "@@ -393,15 +397,16 @@ private boolean fieldChanged(Diff diff, String field) {\n    * @return true if the Profile is new\n    */\n   private boolean isNewProfile(Diff diff) {\n-    final Predicate<Change> newProfilePred =\n-        change ->\n-            change instanceof NewObject\n-                && change\n-                    .getAffectedGlobalId()\n-                    .getTypeName()\n-                    .equals(Profile.class.getCanonicalName());\n \n-    return diff.getChanges(newProfilePred).size() > 0;\n+    return diff.getChanges(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyMzI3Mw=="}, "originalCommit": {"oid": "30b0f7cc0a720622a950cb496565fa895fc7d1ef"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2462, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}