{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzA0MjIx", "number": 4382, "reviewThreads": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNTo1OTozMlrOFDjTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0NjowNFrOFDuEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MjY4NTUwOnYy", "diffSide": "RIGHT", "path": "tutorials/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNTo1OTozMlrOIDQgbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNTo1OTozMlrOIDQgbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDI4NzA4NQ==", "bodyText": "I would use slightly stronger language here. Perhaps something between this and, \"users of this tutorial are obligated to file a PR if they find something that needs improvement.\"", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540287085", "createdAt": "2020-12-10T15:59:32Z", "author": {"login": "dmohs"}, "path": "tutorials/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Tutorials\n+\n+This area is comprised of tutorials that focus on various aspects of the AoU workbench code base, such as: code organization, build processes, tools & technologies, back end API, database and front end architecure.\n+\n+This is intended to help folks onboard faster and get a solid understanding of the AoU code base. It can also be used by AoU veterans who are not comfortable with certain aspects of the code or want to learn more about a certain area of the code.\n+## How to Use And Contribute To Tutorials\n+These tutorials are meant to be living documents. If there is an issue with any tutorial, or something needs updating feel free to fix it and put up a PR.\n+\n+If you have learned something new and think it will help the next person feel free to add tasks to a tutorial or create a new one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mjk2MTE1OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo1MDowNFrOIDTIbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo1MDowNFrOIDTIbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzMDA5Mg==", "bodyText": "This is awesome, exactly the type of question I might ask if I was pairing with someone and wanted to help build their understanding of the system.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540330092", "createdAt": "2020-12-10T16:50:04Z", "author": {"login": "dmohs"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5Mjk3NTk3OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo1Mjo1MlrOIDTREA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNjo1Mjo1MlrOIDTREA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDMzMjMwNA==", "bodyText": "Is this likely to be an empty list? Is it worth a workspace creation step to guard against this case?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540332304", "createdAt": "2020-12-10T16:52:52Z", "author": {"login": "dmohs"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.\n+   You will need to generate a Bearer token to query the endpoint.\n+   You can do this with the gcp CLI command: `gcloud auth print-access-token`\n+   Make sure you are logged in to your pmi-ops account on the CLI. You can activate this account with `gcloud config activate psantos@fake-research-aou.org`\n+3. An endpoint you can inspect is `http://localhost:8081/v1/workspaces`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzI0NjIyOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzo0OToxMVrOIDV0TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzo0OToxMVrOIDV0TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NDA5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               2. Make the parameter should be a string in the body of the request. You can play around more with parameters after.\n          \n          \n            \n               2. Make the parameter a string in the body of the request. You can play around more with parameters after.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540374092", "createdAt": "2020-12-10T17:49:11Z", "author": {"login": "dmohs"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.\n+   You will need to generate a Bearer token to query the endpoint.\n+   You can do this with the gcp CLI command: `gcloud auth print-access-token`\n+   Make sure you are logged in to your pmi-ops account on the CLI. You can activate this account with `gcloud config activate psantos@fake-research-aou.org`\n+3. An endpoint you can inspect is `http://localhost:8081/v1/workspaces`\n+   This will return all workspaces in your account\n+\n+### (API-SWAG-4) Update the endpoint to accept a new parameter\n+1. Open the `workbench-api.yaml` and find the endpoint whose `operationId` is `getWorkspace`\n+   1. Examine the structure in the yaml file. Note the parameters.\n+2. Check out the super implementation of `getWorkspace` (`api/build/swagger2/org/pmiops/workbench/api/WorkspacesApiDelegate.java`)\n+   1. This is the generated code from swagger. It generates this code based on the API definitions in the yaml file, in this case it is the `workbench-api.yaml`\n+3. Back in `workbench-api.yaml`...\n+   1. Add a [parameter](https://swagger.io/docs/specification/describing-parameters/) to the `get` method of the API. You can take a look at the `patch` method of the `/v1/workspaces/{workspaceNamespace}/{workspaceId}` path for a live example\n+   2. Make the parameter should be a string in the body of the request. You can play around more with parameters after.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzI1ODgwOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNzo1MTo1M1rOIDV7yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0NjoyMFrOIDYHPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NjAwOA==", "bodyText": "I would favor examples in Curl, since it comes already installed on most systems and I'd guess it has widest adoption as a tool.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540376008", "createdAt": "2020-12-10T17:51:53Z", "author": {"login": "dmohs"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxMTcxMA==", "bodyText": "I use curl exclusively", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540411710", "createdAt": "2020-12-10T18:46:20Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM3NjAwOA=="}, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ1Nzc0OnYy", "diffSide": "RIGHT", "path": "tutorials/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODozNzoyMVrOIDXxqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODozNzoyMVrOIDXxqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNjE4Nw==", "bodyText": "spelling: these", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540406187", "createdAt": "2020-12-10T18:37:21Z", "author": {"login": "jmthibault79"}, "path": "tutorials/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Tutorials\n+\n+This area is comprised of tutorials that focus on various aspects of the AoU workbench code base, such as: code organization, build processes, tools & technologies, back end API, database and front end architecure.\n+\n+This is intended to help folks onboard faster and get a solid understanding of the AoU code base. It can also be used by AoU veterans who are not comfortable with certain aspects of the code or want to learn more about a certain area of the code.\n+## How to Use And Contribute To Tutorials\n+These tutorials are meant to be living documents. If there is an issue with any tutorial, or something needs updating feel free to fix it and put up a PR.\n+\n+If you have learned something new and think it will help the next person feel free to add tasks to a tutorial or create a new one.\n+\n+We should look to have a consistent view of each tutorial. As a dev ramps up on a topic they will not have to expend mental energy dealing with a new tutorial style - similar to linting our code and keeping the style consistent.\n+\n+When creating a new tutorial please add the following sections to the document:\n+\n+1. **Overview**\n+   1. This section will inform the user of the tutorial about what aspects of the code the tutorial will cover and what they should get out of it\n+2. **Dependencies** (Optional)\n+   1. If a tutorial needs some setup involved you can add a dependencies section outlining the prereqs or additional install steps\n+3. **Tasks**\n+   1. This should be a section of step by step instructions the user can go through for hands on experience working with the code. The instructions should try to include some questions for the user to think about as they go through the tasks.\n+   2. The tasks should be clear and provide detailed steps when it comes to our specific implementation details, and links to external resources for things like tools and external libraries\n+   3. Please give each task a label. This will allow someone using the tutorial to clearly ask a team member for help on a given task if needed.\n+4. **Caveats / Troubleshooting** (Optional)\n+   1. There may be some unknowns or flaws in the process that have some workarounds associated with the tutorial. This is a place where we can call those out.\n+   2. We could also ask the person taking the tutorial to try fixing the issue\n+      1. As these types of tech debt issues crop up, we can identify them in stories and either have them addressed as learning/onboarding tasks or take care them if it looks like it will be a while before the team will be bringing on a new developer.\n+5. **Comprehension Questions**\n+   1. This section should be comprised of open ended questions that the user should be able to answer at the end of the tutorial.\n+   2. Thes can be difficult and may require the user to do some additional research to better understand the technology they just utilized.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ2Mzk4OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODozOTowMlrOIDX1lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODozOTowMlrOIDX1lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwNzE5MQ==", "bodyText": "Please add a basic description of what Swagger/OpenAPI is, as well as a link to the Swagger/OpenAPI home page", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540407191", "createdAt": "2020-12-10T18:39:02Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ3MDExOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MDozMFrOIDX5Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MDozMFrOIDX5Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwODEzMA==", "bodyText": "I would leave out the last part :)", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540408130", "createdAt": "2020-12-10T18:40:30Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ3MzI0OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MToxOVrOIDX7Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MToxOVrOIDX7Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwODYwMg==", "bodyText": "I don't understand this one.  What is the action to take here?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540408602", "createdAt": "2020-12-10T18:41:19Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ3NDUyOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MTozOVrOIDX75w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MTozOVrOIDX75w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwODgwNw==", "bodyText": "Please add a link to a validator.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540408807", "createdAt": "2020-12-10T18:41:39Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzQ3ODE5OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MjoyNVrOIDX98w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0MjoyNVrOIDX98w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwOTMzMQ==", "bodyText": "I would not expect this - could you go into more detail?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540409331", "createdAt": "2020-12-10T18:42:25Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzUwMDQzOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0Nzo0N1rOIDYLDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo0Nzo0N1rOIDYLDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxMjY4NQ==", "bodyText": "do you mean - make sure you are NOT logged in as pmi-ops?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540412685", "createdAt": "2020-12-10T18:47:47Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.\n+   You will need to generate a Bearer token to query the endpoint.\n+   You can do this with the gcp CLI command: `gcloud auth print-access-token`\n+   Make sure you are logged in to your pmi-ops account on the CLI. You can activate this account with `gcloud config activate psantos@fake-research-aou.org`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzUxNTAxOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MTozMlrOIDYTxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMToyNjoxNlrOIOn9cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNDkxOA==", "bodyText": "Should we call out the LOCAL-SERVER tutorial as a prereq for this one?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540414918", "createdAt": "2020-12-10T18:51:32Z", "author": {"login": "jmthibault79"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjIwNTY4MA==", "bodyText": "I removed this tutorial for now, as it needs some additional work", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r552205680", "createdAt": "2021-01-05T21:26:16Z", "author": {"login": "petesantos"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNDkxOA=="}, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzUyMjEwOnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MzowM1rOIDYX3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MzowM1rOIDYX3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNTk2Nw==", "bodyText": "Link to the other tutorial for how to do this?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540415967", "createdAt": "2020-12-10T18:53:03Z", "author": {"login": "jmthibault79"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies\n+You should have the following installed on your machine for this to work\n+\n+- Ruby installed\n+- docker installed and running\n+- docker-compose\n+- docker-sync (`gem install docker-sync` or `gem install --user-install docker-sync` or non-root installs)\n+\n+Having ruby gems installed on your path is a good idea as well - adding this to your profile or rc file will help to find the ruby gems:\n+\n+```sh\n+if which ruby >/dev/null && which gem >/dev/null; then\n+\u00a0 PATH=\"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\n+fi\n+```\n+\n+### (LOCAL-SERVER-2) Using a REST client (e.g. insomnia) make a request to the local server\n+  1. Start with the /v1/profile endpoint (http://localhost:8081/v1/profile)\n+  2. What was the response?\n+\n+### (LOCAL-SERVER-3) Repeat LOCAL-SERVER-2 With a Bearer Token\n+\n+Generate a bearer token and pass this along to the endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzUyMjQ4OnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MzoxMVrOIDYYIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1MzoxMVrOIDYYIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNjAzMw==", "bodyText": "rm extraneous", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540416033", "createdAt": "2020-12-10T18:53:11Z", "author": {"login": "jmthibault79"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies\n+You should have the following installed on your machine for this to work\n+\n+- Ruby installed\n+- docker installed and running\n+- docker-compose\n+- docker-sync (`gem install docker-sync` or `gem install --user-install docker-sync` or non-root installs)\n+\n+Having ruby gems installed on your path is a good idea as well - adding this to your profile or rc file will help to find the ruby gems:\n+\n+```sh\n+if which ruby >/dev/null && which gem >/dev/null; then\n+\u00a0 PATH=\"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\n+fi\n+```\n+\n+### (LOCAL-SERVER-2) Using a REST client (e.g. insomnia) make a request to the local server\n+  1. Start with the /v1/profile endpoint (http://localhost:8081/v1/profile)\n+  2. What was the response?\n+\n+### (LOCAL-SERVER-3) Repeat LOCAL-SERVER-2 With a Bearer Token\n+\n+Generate a bearer token and pass this along to the endpoint\n+Ge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MzUyNjY5OnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1NDoxMlrOIDYaqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxODo1NDoxMlrOIDYaqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQxNjY4Mg==", "bodyText": "Might want to add trying this with different users' bearer tokens?", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540416682", "createdAt": "2020-12-10T18:54:12Z", "author": {"login": "jmthibault79"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies\n+You should have the following installed on your machine for this to work\n+\n+- Ruby installed\n+- docker installed and running\n+- docker-compose\n+- docker-sync (`gem install docker-sync` or `gem install --user-install docker-sync` or non-root installs)\n+\n+Having ruby gems installed on your path is a good idea as well - adding this to your profile or rc file will help to find the ruby gems:\n+\n+```sh\n+if which ruby >/dev/null && which gem >/dev/null; then\n+\u00a0 PATH=\"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\n+fi\n+```\n+\n+### (LOCAL-SERVER-2) Using a REST client (e.g. insomnia) make a request to the local server\n+  1. Start with the /v1/profile endpoint (http://localhost:8081/v1/profile)\n+  2. What was the response?\n+\n+### (LOCAL-SERVER-3) Repeat LOCAL-SERVER-2 With a Bearer Token\n+\n+Generate a bearer token and pass this along to the endpoint\n+Ge\n+\u00a0 1. What happened, what was the error code and response now?\n+  2. What do you think you need to do in order to log in?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDM1NzQwOnYy", "diffSide": "RIGHT", "path": "tutorials/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyMjowMFrOIDf9yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyMjowMFrOIDf9yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0MDM2MQ==", "bodyText": "There is an existing directory that seemingly has the same purpose as this one. I'd suggest merging them: https://github.com/all-of-us/workbench/tree/master/api/docs/tutorials . We can potentially lift that docs folder up to the top-level, if that better matches the intent here, or else just have parallel directories under api/ui.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540540361", "createdAt": "2020-12-10T22:22:00Z", "author": {"login": "calbach"}, "path": "tutorials/README.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Tutorials\n+\n+This area is comprised of tutorials that focus on various aspects of the AoU workbench code base, such as: code organization, build processes, tools & technologies, back end API, database and front end architecure.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDM4MDMwOnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyODoyNFrOIDgKgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjoyODoyNFrOIDgKgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0MzYxNg==", "bodyText": "Note: http://localhost:8081/v1/config is an easy one to check, since it doesn't require auth. It may be worth showing this before moving onto an authenticated call, which is a more daunting task.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540543616", "createdAt": "2020-12-10T22:28:24Z", "author": {"login": "calbach"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDM5NjE3OnYy", "diffSide": "RIGHT", "path": "tutorials/intro-to-swagger-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjozMlrOIDgTRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozMjozMlrOIDgTRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NTg2Mw==", "bodyText": "This is inviting complications / interference with GET /v1/workspaces/{ns}/{id}. I would just give it a more distinctive path that doesn't risk conflicting.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540545863", "createdAt": "2020-12-10T22:32:32Z", "author": {"login": "calbach"}, "path": "tutorials/intro-to-swagger-api.md", "diffHunk": "@@ -0,0 +1,109 @@\n+# API's and Swagger / OpenAPI\n+\n+In this module we will modify some of the swagger API signatures, bring up the API server and work with Swagger parameters and add a new API endpoint\n+\n+## Background\n+Our API is public, it is always theoretically possible for a user to bypass any UI controls we set up by hitting the endpoints directly or via tools.  The UI has restrictions as well, but ultimately its purpose is as a more friendly interface to the API rather than a security mechanism in itself.\n+\n+For more details on our API endpoints see the [README](https://github.com/all-of-us/workbench) and the [API Code Structure](https://github.com/all-of-us/workbench/blob/master/api/docs/code-structure.md).\n+\n+Note that we often refer to the AoU RW's back end GAE application as \"the api\" but we also use \"the api\" to refer to the collection of endpoints we expose.  It can get tricky!  We really should think of a real name for this app.\n+\n+Endpoints are defined in the Swagger/OpenAPI YAML format.  We run code generation tools as part of the standard compilation and deployment processes to create client code in Java and Typescript (for the UI) as well as server interface code in Java for us to implement with the app.\n+\n+## Caveats / Troubleshooting\n+\n+1. The build directory may have some empty directories that are needed for the build to succeed\n+2. You may need to restart the local server for your changes to take effect\n+3. It can be difficult to detect syntax errors in your YAML file. Use a validator to ensure that you do not have errors\n+\n+## Tasks\n+\n+### (API-SWAG-1) Compile The API \n+\n+1. In the API directory run: \n+    `./gradlew clean compileJava`\n+    This will generate an error (I am not sure why)\n+    Run `./gradlew compileJava` again. This should run to completion.\n+\n+    It will run the `compileGeneratedJava` task, creating and compiling the code generated by swagger and it will compile our hand written java code\n+\n+    Some additional things you can do to explore the code (in the `api/` directory):\n+    1. Look in the `build`  directory.\n+       1. Identify where the generated code is\n+       2. Identify where some of the generated code is being used in the application\n+    2. Run `clean` and examine the build directory\n+       1. What happens?\n+       2. Re-create the generated code\n+\n+### (API-SWAG-2) Add/Remove A Parameter From An Endpoint \n+In the previous task we generated the swagger java code and compile our handwritten code.\n+Let's explore some of our handwritten code and see how it interacts with the Swagger/OpenAPI code\n+1. Go to `src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Let's look at one of the overriden methods in this file - `getWorkspace`\n+   2. Add a parameter to this method. Try compiling - what do you think will happen when you compile?\n+   3. Did your IDE respond to the change? (If not check your IDE settings)\n+2. Undo your changes above, this time remove a parameter from the method.\n+\n+### (API-SWAG-3) Bring up the server and inspect an endpoint\n+1. Run `./project.rb dev-up`\n+   This should bring up the API server allowing you to send requests to the API endpoints\n+2. Using a tool like [insomnia](https://insomnia.rest/) query the endpoints.\n+   You will need to generate a Bearer token to query the endpoint.\n+   You can do this with the gcp CLI command: `gcloud auth print-access-token`\n+   Make sure you are logged in to your pmi-ops account on the CLI. You can activate this account with `gcloud config activate psantos@fake-research-aou.org`\n+3. An endpoint you can inspect is `http://localhost:8081/v1/workspaces`\n+   This will return all workspaces in your account\n+\n+### (API-SWAG-4) Update the endpoint to accept a new parameter\n+1. Open the `workbench-api.yaml` and find the endpoint whose `operationId` is `getWorkspace`\n+   1. Examine the structure in the yaml file. Note the parameters.\n+2. Check out the super implementation of `getWorkspace` (`api/build/swagger2/org/pmiops/workbench/api/WorkspacesApiDelegate.java`)\n+   1. This is the generated code from swagger. It generates this code based on the API definitions in the yaml file, in this case it is the `workbench-api.yaml`\n+3. Back in `workbench-api.yaml`...\n+   1. Add a [parameter](https://swagger.io/docs/specification/describing-parameters/) to the `get` method of the API. You can take a look at the `patch` method of the `/v1/workspaces/{workspaceNamespace}/{workspaceId}` path for a live example\n+   2. Make the parameter should be a string in the body of the request. You can play around more with parameters after.\n+   3. Name your parameter \"test\"\n+4. Open `api/src/main/java/org/pmiops/workbench/api/WorkspacesController.java`\n+   1. Go to the `getWorkspace method`\n+   2. You will need to add the parameter to this method.\n+5. Restart the server (API-SWAG-3) and inspect your endpoint\n+   1. When calling the endpoint, be sure to add your parameter to the JSON body: `{\"test\": \"Hello\"}`\n+   2. What happens when you omit this required parameter?\n+\n+### (API-SWAG-5) Add a new endpoint\n+1. Open the `workbench-api.yaml` and find the beginning of the endpoint definitions.\n+2. Create a path for your endpoint, for the purposes of this example I will call the endpoint `/v1/workspaces/thing`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDQwOTA4OnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozNjoyMFrOIDgahw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozNjoyMFrOIDgahw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0NzcxOQ==", "bodyText": "We already have setup steps / prerequisites in our top-level README. I'd rather just link to there so we don't inevitably have these diverging over time.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540547719", "createdAt": "2020-12-10T22:36:20Z", "author": {"login": "calbach"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDQyMTYzOnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozODo1MFrOIDgh9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjozODo1MFrOIDgh9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU0OTYyMw==", "bodyText": "nit: TBH, I'd probably assume a bug in the tutorial or that I messed up my local server when I get a 401 here. May want a stronger hint, like \"What error response do you get? Why?\"", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540549623", "createdAt": "2020-12-10T22:38:50Z", "author": {"login": "calbach"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies\n+You should have the following installed on your machine for this to work\n+\n+- Ruby installed\n+- docker installed and running\n+- docker-compose\n+- docker-sync (`gem install docker-sync` or `gem install --user-install docker-sync` or non-root installs)\n+\n+Having ruby gems installed on your path is a good idea as well - adding this to your profile or rc file will help to find the ruby gems:\n+\n+```sh\n+if which ruby >/dev/null && which gem >/dev/null; then\n+\u00a0 PATH=\"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\n+fi\n+```\n+\n+### (LOCAL-SERVER-2) Using a REST client (e.g. insomnia) make a request to the local server\n+  1. Start with the /v1/profile endpoint (http://localhost:8081/v1/profile)\n+  2. What was the response?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDQ0NzU2OnYy", "diffSide": "RIGHT", "path": "tutorials/local-server-api-db-intro.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0NjowNFrOIDgwgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjo0NjowNFrOIDgwgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU1MzM0NQ==", "bodyText": "This sounds like a tedious task that's probably not going to result in the response succeeding, and will put your local server into a bad state. I'm not sure I'm following what the goal is here.\nIs there an implicit requirement here that you've already created a user in the test environment, and not locally? If so, this should be spelled out somewhere. There also seems to be an assumption that this is your first time running the API server, and you've never visited the local Workbench UI - is that the case?\nI don't recall what exactly will happen when you hit the profile API as an unknown user, but locally it may actually just lazily initialize you, in which case at this point you would actually expect to see a row here.", "url": "https://github.com/all-of-us/workbench/pull/4382#discussion_r540553345", "createdAt": "2020-12-10T22:46:04Z", "author": {"login": "calbach"}, "path": "tutorials/local-server-api-db-intro.md", "diffHunk": "@@ -0,0 +1,71 @@\n+# Local Server\n+\n+## Overview \n+\n+In this module we will bring up the API server and do some basic exploration of the database and make an API call against the server. The goal is to help you gain an understanding of how the back end and data is structured and to start gaining an understanding the tools, scripts and languages we use to aid us in development.\n+\n+## Tasks\n+\n+### (LOCAL-SERVER-1) Bring up the local server\n+\n+./project.rb dev-up\n+\n+This will bring up a server with API endpoints and a local database.\n+\n+\n+#### Dependencies\n+You should have the following installed on your machine for this to work\n+\n+- Ruby installed\n+- docker installed and running\n+- docker-compose\n+- docker-sync (`gem install docker-sync` or `gem install --user-install docker-sync` or non-root installs)\n+\n+Having ruby gems installed on your path is a good idea as well - adding this to your profile or rc file will help to find the ruby gems:\n+\n+```sh\n+if which ruby >/dev/null && which gem >/dev/null; then\n+\u00a0 PATH=\"$(ruby -r rubygems -e 'puts Gem.user_dir')/bin:$PATH\"\n+fi\n+```\n+\n+### (LOCAL-SERVER-2) Using a REST client (e.g. insomnia) make a request to the local server\n+  1. Start with the /v1/profile endpoint (http://localhost:8081/v1/profile)\n+  2. What was the response?\n+\n+### (LOCAL-SERVER-3) Repeat LOCAL-SERVER-2 With a Bearer Token\n+\n+Generate a bearer token and pass this along to the endpoint\n+Ge\n+\u00a0 1. What happened, what was the error code and response now?\n+  2. What do you think you need to do in order to log in?\n+\n+### (LOCAL-SERVER-4) Initial Database Exploration\n+\n+\u00a0 Run `./project.rb connect-to-db`\n+  This will connect to your local database\n+\n+\u00a0 1. Run a query to display all of the tables in the database\n+  2. Which tables do you think are involved with the error you encountered in task LOCAL-SERVER-3?\n+\n+### (LOCAL-SERVER-5) Further DB and Endpoint Exploration\n+\n+\u00a0 1. Using SQL, look at the schema of the `user` table\n+  2. Insert a row with your test account data to the `user` table", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1060eaaf2b19cf96b852589c8c0832ebca1e7bcb"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3641, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}