{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTM0NTc1", "number": 3565, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0MDoyNlrOD7S3eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MzowN1rOD97gsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTAxNjg5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0MDoyNlrOGTh-Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0MDoyNlrOGTh-Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMjczMQ==", "bodyText": "In a controller you might want to throw a more specific error here and let the handler translate it into a 500, but I'm not sure if that happens with crons. This is fine.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423132731", "createdAt": "2020-05-11T15:40:26Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -63,14 +68,15 @@\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting researcher data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ac816461781523350922cef1631ebed194e3da"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTAxODkzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0MDo1NVrOGTh_eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODoyMDo1OVrOGXtCSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMzA0OQ==", "bodyText": "If you use this constructor that takes the throwable itself, you keep the stack trace.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423133049", "createdAt": "2020-05-11T15:40:55Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -63,14 +68,15 @@\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting researcher data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\"Error creating RDR export Cloud Tasks for users: %s\", ex.getMessage()));\n       }\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllWorkspacesIdsToExport(), EXPORT_USER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting workspace data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\n+                \"Error creating RDR export Cloud Tasks for workspaces: %s\", ex.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ac816461781523350922cef1631ebed194e3da"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwODI5Nw==", "bodyText": "Thanks \u2013\u00a0done", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427508297", "createdAt": "2020-05-19T18:20:59Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -63,14 +68,15 @@\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllUserIdsToExport(), EXPORT_RESEARCHER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting researcher data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\"Error creating RDR export Cloud Tasks for users: %s\", ex.getMessage()));\n       }\n       try {\n         groupIdsAndPushTask(rdrExportService.findAllWorkspacesIdsToExport(), EXPORT_USER_PATH);\n       } catch (Exception ex) {\n-        log.severe(\n-            String.format(\"Error while exporting workspace data to RDR: %s\", ex.getMessage()));\n+        throw new ServerErrorException(\n+            String.format(\n+                \"Error creating RDR export Cloud Tasks for workspaces: %s\", ex.getMessage()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzMzA0OQ=="}, "originalCommit": {"oid": "93ac816461781523350922cef1631ebed194e3da"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTAzOTc3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNTo0NjowOVrOGTiNEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODoyMzo0N1rOGXtIYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzNjUyOA==", "bodyText": "drive-by nit: Above, I'd declare a TaskBuilder and then use taskBuilder.build() in the cal to createTask(). Or just inline the builder.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r423136528", "createdAt": "2020-05-11T15:46:09Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -127,8 +134,10 @@ private void createAndPushTask(List<Long> ids, String queuePath, String taskUri)\n     } catch (IOException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93ac816461781523350922cef1631ebed194e3da"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUwOTg1OA==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427509858", "createdAt": "2020-05-19T18:23:47Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -127,8 +134,10 @@ private void createAndPushTask(List<Long> ids, String queuePath, String taskUri)\n     } catch (IOException ex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEzNjUyOA=="}, "originalCommit": {"oid": "93ac816461781523350922cef1631ebed194e3da"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjY0MjU1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MTo0MFrOGXuJRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxOToyNzoxOFrOGXvYgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjQ2OQ==", "bodyText": "So we need to trigger an alert on the tasks failing in the queue. I bet I can get that from logs somewhere, assuming the tasks live in our GCP-space.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427526469", "createdAt": "2020-05-19T18:51:40Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -17,13 +17,18 @@\n import javax.inject.Provider;\n import org.pmiops.workbench.config.WorkbenchConfig;\n import org.pmiops.workbench.config.WorkbenchLocationConfigService;\n+import org.pmiops.workbench.exceptions.ServerErrorException;\n import org.pmiops.workbench.rdr.RdrExportService;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.RestController;\n \n /**\n- * This offline process is responsible to daily sync up with RDR by creating/pushing multiple task\n- * with eligible user Ids and workspace Ids to cloud task queue\n+ * This offline process is responsible to daily sync up with RDR by creating/pushing multiple Cloud\n+ * Task tasks with eligible user Ids and workspace Ids to cloud task queue.\n+ *\n+ * <p>None of the actual RDR communication occurs from within this cron job handler, so this cron\n+ * may succeed even though the actual export tasks to RDR are failing. See\n+ * CloudTaskRdrExportController for the handlers which do the actual RDR export work.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b4cba5b437295d45371fd941bb2e46e1f97cd7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU0Njc1Mg==", "bodyText": "Yes \u2013 this will be an important metric to track & alert on too.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427546752", "createdAt": "2020-05-19T19:27:18Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -17,13 +17,18 @@\n import javax.inject.Provider;\n import org.pmiops.workbench.config.WorkbenchConfig;\n import org.pmiops.workbench.config.WorkbenchLocationConfigService;\n+import org.pmiops.workbench.exceptions.ServerErrorException;\n import org.pmiops.workbench.rdr.RdrExportService;\n import org.springframework.http.ResponseEntity;\n import org.springframework.web.bind.annotation.RestController;\n \n /**\n- * This offline process is responsible to daily sync up with RDR by creating/pushing multiple task\n- * with eligible user Ids and workspace Ids to cloud task queue\n+ * This offline process is responsible to daily sync up with RDR by creating/pushing multiple Cloud\n+ * Task tasks with eligible user Ids and workspace Ids to cloud task queue.\n+ *\n+ * <p>None of the actual RDR communication occurs from within this cron job handler, so this cron\n+ * may succeed even though the actual export tasks to RDR are failing. See\n+ * CloudTaskRdrExportController for the handlers which do the actual RDR export work.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNjQ2OQ=="}, "originalCommit": {"oid": "43b4cba5b437295d45371fd941bb2e46e1f97cd7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjY0NzUyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MzowN1rOGXuMTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo1MzowN1rOGXuMTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyNzI0Nw==", "bodyText": "nit: Should the IDs be a Set? Alternatively, just take in a Collection<Long>.", "url": "https://github.com/all-of-us/workbench/pull/3565#discussion_r427527247", "createdAt": "2020-05-19T18:53:07Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/OfflineRdrExportController.java", "diffHunk": "@@ -83,7 +86,7 @@\n    * @param idList : Lis of Ids\n    * @param taskUri: The destination URL the task will be calling with group of 10 ids\n    */\n-  private void groupIdsAndPushTask(List<Long> idList, String taskUri) {\n+  private void groupIdsAndPushTask(List<Long> idList, String taskUri) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43b4cba5b437295d45371fd941bb2e46e1f97cd7"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2906, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}