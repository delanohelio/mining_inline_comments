{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNDc5NDQ0", "number": 4306, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzoyMjoyM1rOE7KUQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNzo0OFrOE7KtQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDcwNDY3OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/cohort-review-page.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzoyMjoyM1rOH2pcnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzo1OTozMFrOH2q8CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2NDIyMA==", "bodyText": "nit: I don't think we need link text. what do you think of getParticipantId?", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527064220", "createdAt": "2020-11-19T17:22:23Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/cohort-review-page.ts", "diffHunk": "@@ -45,5 +45,17 @@ export default class CohortReviewPage extends AuthenticatedPage {\n     await waitWhileLoading(this.page);\n     return textContent;\n   }\n+    /**\n+     * Get the participant ID in specified row\n+     * @param {number} rowIndex\n+     * @return {string} Participant text that was clicked on.\n+     */\n+   async getParticipantLinkId(rowIndex: number = 1, colIndex: number = 1): Promise<string> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4ODY0OA==", "bodyText": "this function was more to validate when on clicking gotonextparticipant the participantid on detailpage matches the one that is in cell(3). I've not used this function yet for the validation.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527088648", "createdAt": "2020-11-19T17:59:30Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/page/cohort-review-page.ts", "diffHunk": "@@ -45,5 +45,17 @@ export default class CohortReviewPage extends AuthenticatedPage {\n     await waitWhileLoading(this.page);\n     return textContent;\n   }\n+    /**\n+     * Get the participant ID in specified row\n+     * @param {number} rowIndex\n+     * @return {string} Participant text that was clicked on.\n+     */\n+   async getParticipantLinkId(rowIndex: number = 1, colIndex: number = 1): Promise<string> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2NDIyMA=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDcyNzE5OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/cohort-participant-detail-page.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzoyNzo0NlrOH2pq0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxODowMToxMFrOH2rAlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2Nzg1OA==", "bodyText": "are you waiting for a visible element? if yes, need {visible: true}.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527067858", "createdAt": "2020-11-19T17:27:46Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA4OTgxNA==", "bodyText": "yes it is visible, this icon that's on sidebar on participant detail page.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527089814", "createdAt": "2020-11-19T18:01:10Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA2Nzg1OA=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc0ODI2OnYy", "diffSide": "RIGHT", "path": "e2e/app/component/annotation-field-modal.ts", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozMjo1MlrOH2p4Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo1NDoyNlrOH9hwTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MTI1MQ==", "bodyText": "put await super.waitForLoad outside of try block because it already takes screenshot when fails.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527071251", "createdAt": "2020-11-19T17:32:52Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/annotation-field-modal.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils'\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import Modal from './modal';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading, waitForText} from 'utils/waits-utils';\n+\n+const modalTitle = 'Create a Review-Wide Annotation Field';\n+\n+export enum AnnotationType {\n+    FreeText = 'Free Text',\n+    DropdownList = 'Dropdown List',\n+    Date = 'Date',\n+    TrueFalseCheckBox ='True/False CheckBox',\n+    NumericField = 'Numeric Field'\n+  }\n+\n+export default class AnnotationFieldModal extends Modal {\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`AnnotationFieldModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5MDg4OA==", "bodyText": "should I put it before  return this;?", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527090888", "createdAt": "2020-11-19T18:02:56Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/annotation-field-modal.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils'\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import Modal from './modal';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading, waitForText} from 'utils/waits-utils';\n+\n+const modalTitle = 'Create a Review-Wide Annotation Field';\n+\n+export enum AnnotationType {\n+    FreeText = 'Free Text',\n+    DropdownList = 'Dropdown List',\n+    Date = 'Date',\n+    TrueFalseCheckBox ='True/False CheckBox',\n+    NumericField = 'Numeric Field'\n+  }\n+\n+export default class AnnotationFieldModal extends Modal {\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`AnnotationFieldModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MTI1MQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE1MzczMQ==", "bodyText": "before try", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527153731", "createdAt": "2020-11-19T19:46:13Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/annotation-field-modal.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils'\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import Modal from './modal';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading, waitForText} from 'utils/waits-utils';\n+\n+const modalTitle = 'Create a Review-Wide Annotation Field';\n+\n+export enum AnnotationType {\n+    FreeText = 'Free Text',\n+    DropdownList = 'Dropdown List',\n+    Date = 'Date',\n+    TrueFalseCheckBox ='True/False CheckBox',\n+    NumericField = 'Numeric Field'\n+  }\n+\n+export default class AnnotationFieldModal extends Modal {\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`AnnotationFieldModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MTI1MQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NTE2MA==", "bodyText": "Ok!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527775160", "createdAt": "2020-11-20T15:39:21Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/annotation-field-modal.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils'\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import Modal from './modal';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading, waitForText} from 'utils/waits-utils';\n+\n+const modalTitle = 'Create a Review-Wide Annotation Field';\n+\n+export enum AnnotationType {\n+    FreeText = 'Free Text',\n+    DropdownList = 'Dropdown List',\n+    Date = 'Date',\n+    TrueFalseCheckBox ='True/False CheckBox',\n+    NumericField = 'Numeric Field'\n+  }\n+\n+export default class AnnotationFieldModal extends Modal {\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`AnnotationFieldModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MTI1MQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3ODIyMQ==", "bodyText": "done!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r534278221", "createdAt": "2020-12-02T15:54:26Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/annotation-field-modal.ts", "diffHunk": "@@ -0,0 +1,59 @@\n+import {Page} from 'puppeteer';\n+import {savePageToFile, takeScreenshot} from 'utils/save-file-utils'\n+import {LinkText} from 'app/text-labels';\n+import Button from 'app/element/button';\n+import Modal from './modal';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading, waitForText} from 'utils/waits-utils';\n+\n+const modalTitle = 'Create a Review-Wide Annotation Field';\n+\n+export enum AnnotationType {\n+    FreeText = 'Free Text',\n+    DropdownList = 'Dropdown List',\n+    Date = 'Date',\n+    TrueFalseCheckBox ='True/False CheckBox',\n+    NumericField = 'Numeric Field'\n+  }\n+\n+export default class AnnotationFieldModal extends Modal {\n+\n+  constructor(page: Page, xpath?: string) {\n+    super(page, xpath);\n+  }\n+\n+  async waitForLoad(): Promise<this> {\n+    try {\n+      await super.waitForLoad();\n+      await waitForText(this.page, modalTitle, {xpath: this.getXpath()});\n+    } catch (e) {\n+      await savePageToFile(this.page);\n+      await takeScreenshot(this.page);\n+      throw new Error(`AnnotationFieldModal waitForLoad() encountered ${e}`);\n+    }\n+    return this;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MTI1MQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc2MDI4OnYy", "diffSide": "RIGHT", "path": "e2e/app/component/sidebar-content.ts", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNTo0MVrOH2p_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo1NDo0N1rOH9hxfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzEyMw==", "bodyText": "this is not correct selector. if there is a plus-circle icon outside of sidebar, it will likely find the wrong icon.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527073123", "createdAt": "2020-11-19T17:35:41Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/sidebar-content.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+\n+import {Page} from 'puppeteer';\n+import HelpSidebar from 'app/component/help-sidebar';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import {getPropValue} from 'utils/element-utils';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading} from 'utils/waits-utils';\n+\n+\n+const defaultXpath = '//*[@data-test-id=\"sidebar-content\"]';\n+\n+export enum ReviewStatus {\n+  Excluded = 'Excluded',\n+  Included = 'Included',\n+  NeedsFurtherReview = 'Needs Further Review '\n+}\n+\n+export default class SidebarContent extends  HelpSidebar {\n+  \n+\n+    constructor(page: Page, xpath: string = defaultXpath) {\n+      super(page, xpath);\n+    }\n+\n+    async getParticipantID(): Promise<string> {\n+        const selector = `${this.getXpath()}//div[1][text()=\"Participant \"]`;\n+        const pID = await this.extractParticipantDetails(selector);\n+        console.log(`Participant ID: ${pID}`);\n+        return pID;\n+    }\n+\n+    async getParticipantDOB(): Promise<string> {\n+        const selector = `${this.getXpath()}//*[contains(normalize-space(text()), \"DOB\")]/parent::*//span/following-sibling::text()`;\n+        const pidDob = await this.extractParticipantDetails(selector);\n+        console.log(`DOB: ${pidDob}`);\n+        return pidDob;\n+    }\n+\n+    \n+    private async extractParticipantDetails(selector: string): Promise<string> {\n+      const elemt = await this.page.waitForXPath(selector, {visible: true});\n+      const textContent = await getPropValue<string>(elemt, 'textContent');\n+      // const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n+       const regex = new RegExp(/\\d+/);\n+      return (regex.exec(textContent))[0];\n+    }\n+\n+    /**\n+     * select participant status.\n+     * @param {ReviewStatus}  status\n+     */\n+    async selectReviewStatus(status: ReviewStatus): Promise<string> {\n+      const selectMenu = new ReactSelect(this.page, {name:'Choose a Review Status for Participant'});\n+      await selectMenu.selectOption(status);\n+      await waitWhileLoading(this.page);\n+      return selectMenu.getSelectedOption();\n+    }\n+  \n+    async getAnnotationsButton(): Promise<ClrIconLink> {\n+      return ClrIconLink.findByName(this.page, {iconShape: 'plus-circle'});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5NDM2OQ==", "bodyText": "this plus-circle icon is within the <div data-test-id=\"sidebar-content\" >. Do you think it'll still not work?", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527094369", "createdAt": "2020-11-19T18:08:35Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/sidebar-content.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+\n+import {Page} from 'puppeteer';\n+import HelpSidebar from 'app/component/help-sidebar';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import {getPropValue} from 'utils/element-utils';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading} from 'utils/waits-utils';\n+\n+\n+const defaultXpath = '//*[@data-test-id=\"sidebar-content\"]';\n+\n+export enum ReviewStatus {\n+  Excluded = 'Excluded',\n+  Included = 'Included',\n+  NeedsFurtherReview = 'Needs Further Review '\n+}\n+\n+export default class SidebarContent extends  HelpSidebar {\n+  \n+\n+    constructor(page: Page, xpath: string = defaultXpath) {\n+      super(page, xpath);\n+    }\n+\n+    async getParticipantID(): Promise<string> {\n+        const selector = `${this.getXpath()}//div[1][text()=\"Participant \"]`;\n+        const pID = await this.extractParticipantDetails(selector);\n+        console.log(`Participant ID: ${pID}`);\n+        return pID;\n+    }\n+\n+    async getParticipantDOB(): Promise<string> {\n+        const selector = `${this.getXpath()}//*[contains(normalize-space(text()), \"DOB\")]/parent::*//span/following-sibling::text()`;\n+        const pidDob = await this.extractParticipantDetails(selector);\n+        console.log(`DOB: ${pidDob}`);\n+        return pidDob;\n+    }\n+\n+    \n+    private async extractParticipantDetails(selector: string): Promise<string> {\n+      const elemt = await this.page.waitForXPath(selector, {visible: true});\n+      const textContent = await getPropValue<string>(elemt, 'textContent');\n+      // const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n+       const regex = new RegExp(/\\d+/);\n+      return (regex.exec(textContent))[0];\n+    }\n+\n+    /**\n+     * select participant status.\n+     * @param {ReviewStatus}  status\n+     */\n+    async selectReviewStatus(status: ReviewStatus): Promise<string> {\n+      const selectMenu = new ReactSelect(this.page, {name:'Choose a Review Status for Participant'});\n+      await selectMenu.selectOption(status);\n+      await waitWhileLoading(this.page);\n+      return selectMenu.getSelectedOption();\n+    }\n+  \n+    async getAnnotationsButton(): Promise<ClrIconLink> {\n+      return ClrIconLink.findByName(this.page, {iconShape: 'plus-circle'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzEyMw=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE1NDI1Ng==", "bodyText": "problem is that you're not using sidebar anywhere as parent in selector", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527154256", "createdAt": "2020-11-19T19:47:02Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/sidebar-content.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+\n+import {Page} from 'puppeteer';\n+import HelpSidebar from 'app/component/help-sidebar';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import {getPropValue} from 'utils/element-utils';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading} from 'utils/waits-utils';\n+\n+\n+const defaultXpath = '//*[@data-test-id=\"sidebar-content\"]';\n+\n+export enum ReviewStatus {\n+  Excluded = 'Excluded',\n+  Included = 'Included',\n+  NeedsFurtherReview = 'Needs Further Review '\n+}\n+\n+export default class SidebarContent extends  HelpSidebar {\n+  \n+\n+    constructor(page: Page, xpath: string = defaultXpath) {\n+      super(page, xpath);\n+    }\n+\n+    async getParticipantID(): Promise<string> {\n+        const selector = `${this.getXpath()}//div[1][text()=\"Participant \"]`;\n+        const pID = await this.extractParticipantDetails(selector);\n+        console.log(`Participant ID: ${pID}`);\n+        return pID;\n+    }\n+\n+    async getParticipantDOB(): Promise<string> {\n+        const selector = `${this.getXpath()}//*[contains(normalize-space(text()), \"DOB\")]/parent::*//span/following-sibling::text()`;\n+        const pidDob = await this.extractParticipantDetails(selector);\n+        console.log(`DOB: ${pidDob}`);\n+        return pidDob;\n+    }\n+\n+    \n+    private async extractParticipantDetails(selector: string): Promise<string> {\n+      const elemt = await this.page.waitForXPath(selector, {visible: true});\n+      const textContent = await getPropValue<string>(elemt, 'textContent');\n+      // const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n+       const regex = new RegExp(/\\d+/);\n+      return (regex.exec(textContent))[0];\n+    }\n+\n+    /**\n+     * select participant status.\n+     * @param {ReviewStatus}  status\n+     */\n+    async selectReviewStatus(status: ReviewStatus): Promise<string> {\n+      const selectMenu = new ReactSelect(this.page, {name:'Choose a Review Status for Participant'});\n+      await selectMenu.selectOption(status);\n+      await waitWhileLoading(this.page);\n+      return selectMenu.getSelectedOption();\n+    }\n+  \n+    async getAnnotationsButton(): Promise<ClrIconLink> {\n+      return ClrIconLink.findByName(this.page, {iconShape: 'plus-circle'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzEyMw=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NTg3OA==", "bodyText": "ok! got it. Will update it. Thanks!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527775878", "createdAt": "2020-11-20T15:40:23Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/sidebar-content.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+\n+import {Page} from 'puppeteer';\n+import HelpSidebar from 'app/component/help-sidebar';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import {getPropValue} from 'utils/element-utils';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading} from 'utils/waits-utils';\n+\n+\n+const defaultXpath = '//*[@data-test-id=\"sidebar-content\"]';\n+\n+export enum ReviewStatus {\n+  Excluded = 'Excluded',\n+  Included = 'Included',\n+  NeedsFurtherReview = 'Needs Further Review '\n+}\n+\n+export default class SidebarContent extends  HelpSidebar {\n+  \n+\n+    constructor(page: Page, xpath: string = defaultXpath) {\n+      super(page, xpath);\n+    }\n+\n+    async getParticipantID(): Promise<string> {\n+        const selector = `${this.getXpath()}//div[1][text()=\"Participant \"]`;\n+        const pID = await this.extractParticipantDetails(selector);\n+        console.log(`Participant ID: ${pID}`);\n+        return pID;\n+    }\n+\n+    async getParticipantDOB(): Promise<string> {\n+        const selector = `${this.getXpath()}//*[contains(normalize-space(text()), \"DOB\")]/parent::*//span/following-sibling::text()`;\n+        const pidDob = await this.extractParticipantDetails(selector);\n+        console.log(`DOB: ${pidDob}`);\n+        return pidDob;\n+    }\n+\n+    \n+    private async extractParticipantDetails(selector: string): Promise<string> {\n+      const elemt = await this.page.waitForXPath(selector, {visible: true});\n+      const textContent = await getPropValue<string>(elemt, 'textContent');\n+      // const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n+       const regex = new RegExp(/\\d+/);\n+      return (regex.exec(textContent))[0];\n+    }\n+\n+    /**\n+     * select participant status.\n+     * @param {ReviewStatus}  status\n+     */\n+    async selectReviewStatus(status: ReviewStatus): Promise<string> {\n+      const selectMenu = new ReactSelect(this.page, {name:'Choose a Review Status for Participant'});\n+      await selectMenu.selectOption(status);\n+      await waitWhileLoading(this.page);\n+      return selectMenu.getSelectedOption();\n+    }\n+  \n+    async getAnnotationsButton(): Promise<ClrIconLink> {\n+      return ClrIconLink.findByName(this.page, {iconShape: 'plus-circle'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzEyMw=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3ODUyNQ==", "bodyText": "done!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r534278525", "createdAt": "2020-12-02T15:54:47Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/component/sidebar-content.ts", "diffHunk": "@@ -0,0 +1,64 @@\n+\n+import {Page} from 'puppeteer';\n+import HelpSidebar from 'app/component/help-sidebar';\n+import ClrIconLink from 'app/element/clr-icon-link';\n+import {getPropValue} from 'utils/element-utils';\n+import ReactSelect from 'app/element/react-select';\n+import {waitWhileLoading} from 'utils/waits-utils';\n+\n+\n+const defaultXpath = '//*[@data-test-id=\"sidebar-content\"]';\n+\n+export enum ReviewStatus {\n+  Excluded = 'Excluded',\n+  Included = 'Included',\n+  NeedsFurtherReview = 'Needs Further Review '\n+}\n+\n+export default class SidebarContent extends  HelpSidebar {\n+  \n+\n+    constructor(page: Page, xpath: string = defaultXpath) {\n+      super(page, xpath);\n+    }\n+\n+    async getParticipantID(): Promise<string> {\n+        const selector = `${this.getXpath()}//div[1][text()=\"Participant \"]`;\n+        const pID = await this.extractParticipantDetails(selector);\n+        console.log(`Participant ID: ${pID}`);\n+        return pID;\n+    }\n+\n+    async getParticipantDOB(): Promise<string> {\n+        const selector = `${this.getXpath()}//*[contains(normalize-space(text()), \"DOB\")]/parent::*//span/following-sibling::text()`;\n+        const pidDob = await this.extractParticipantDetails(selector);\n+        console.log(`DOB: ${pidDob}`);\n+        return pidDob;\n+    }\n+\n+    \n+    private async extractParticipantDetails(selector: string): Promise<string> {\n+      const elemt = await this.page.waitForXPath(selector, {visible: true});\n+      const textContent = await getPropValue<string>(elemt, 'textContent');\n+      // const regex = new RegExp(/\\d{1,3}(,?\\d{3})*/); // Match numbers with comma\n+       const regex = new RegExp(/\\d+/);\n+      return (regex.exec(textContent))[0];\n+    }\n+\n+    /**\n+     * select participant status.\n+     * @param {ReviewStatus}  status\n+     */\n+    async selectReviewStatus(status: ReviewStatus): Promise<string> {\n+      const selectMenu = new ReactSelect(this.page, {name:'Choose a Review Status for Participant'});\n+      await selectMenu.selectOption(status);\n+      await waitWhileLoading(this.page);\n+      return selectMenu.getSelectedOption();\n+    }\n+  \n+    async getAnnotationsButton(): Promise<ClrIconLink> {\n+      return ClrIconLink.findByName(this.page, {iconShape: 'plus-circle'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MzEyMw=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc2ODY3OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/cohort-participant-detail-page.ts", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNzo0OFrOH2qE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo1NDo1NlrOH9hx3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDUxNQ==", "bodyText": "click is happening inside function, function name get is not correct. same in next function.", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527074515", "createdAt": "2020-11-19T17:37:48Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);\n+    await clickPenIcon.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"sidebar-content\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  // click on pi-angle-right button to go to next participant\n+  async getGoToTheNextParticipant(): Promise<void> {\n+     const iconXpath = '//button[@title =\"Go To the Next Participant\"]';\n+    await this.page.waitForXPath(iconXpath, {visible: true}).then(icon => icon.click());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA5Mjc3Nw==", "bodyText": "ok! So do you mean I should change the function name to clickGoToNextParticipant?", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527092777", "createdAt": "2020-11-19T18:06:00Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);\n+    await clickPenIcon.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"sidebar-content\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  // click on pi-angle-right button to go to next participant\n+  async getGoToTheNextParticipant(): Promise<void> {\n+     const iconXpath = '//button[@title =\"Go To the Next Participant\"]';\n+    await this.page.waitForXPath(iconXpath, {visible: true}).then(icon => icon.click());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDUxNQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE1NDY1Nw==", "bodyText": "for me, I think goToNextParticipant is good", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527154657", "createdAt": "2020-11-19T19:47:44Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);\n+    await clickPenIcon.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"sidebar-content\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  // click on pi-angle-right button to go to next participant\n+  async getGoToTheNextParticipant(): Promise<void> {\n+     const iconXpath = '//button[@title =\"Go To the Next Participant\"]';\n+    await this.page.waitForXPath(iconXpath, {visible: true}).then(icon => icon.click());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDUxNQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3NjE3Ng==", "bodyText": "sounds good! Thanks!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r527776176", "createdAt": "2020-11-20T15:40:50Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);\n+    await clickPenIcon.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"sidebar-content\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  // click on pi-angle-right button to go to next participant\n+  async getGoToTheNextParticipant(): Promise<void> {\n+     const iconXpath = '//button[@title =\"Go To the Next Participant\"]';\n+    await this.page.waitForXPath(iconXpath, {visible: true}).then(icon => icon.click());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDUxNQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3ODYyMQ==", "bodyText": "done!", "url": "https://github.com/all-of-us/workbench/pull/4306#discussion_r534278621", "createdAt": "2020-12-02T15:54:56Z", "author": {"login": "chavanr2019"}, "path": "e2e/app/page/cohort-participant-detail-page.ts", "diffHunk": "@@ -20,8 +21,46 @@ export default class CohortParticipantDetailPage extends AuthenticatedPage {\n     return true;\n   }\n \n+  // get the particpant ID displayed between the two pi-angle button on participant detail page\n+  async getParticipantIDnum(): Promise<string> {\n+    const selector = `//*[@class=\"detail-header\"]//span[contains(., \"Participant \")]`;\n+    const pID = await this.extractParticipantID(selector);\n+    console.log(`Participant ID: ${pID}`);\n+    return pID;\n+  }\n+\n+  // extract only the number of the participant\n+  async extractParticipantID(selector: string): Promise<string> {\n+    const elemt = await this.page.waitForXPath(selector, {visible: true});\n+    const textContent = await getPropValue<string>(elemt, 'textContent');\n+    const regex = new RegExp(/\\d+/);\n+    return (regex.exec(textContent))[0];\n+  }\n+  \n+  // get the back to review set button\n   async getBackToReviewSetButton(): Promise<Button> {\n     return Button.findByName(this.page, {name: LinkText.BackToReviewSet});\n   }\n+ \n+   // click on the pen icon located on the side bar\n+   async clickPenIconHelpSideBar(): Promise<void> {\n+    const clickPenIcon = await this.page.waitForXPath(`//*[@data-test-id=\"help-sidebar-icon-annotations\"]`);\n+    await clickPenIcon.click();\n+    await this.page.waitForXPath('//*[@data-test-id=\"sidebar-content\"]', {visible: true});\n+    await waitWhileLoading(this.page);\n+  }\n+\n+  // click on pi-angle-right button to go to next participant\n+  async getGoToTheNextParticipant(): Promise<void> {\n+     const iconXpath = '//button[@title =\"Go To the Next Participant\"]';\n+    await this.page.waitForXPath(iconXpath, {visible: true}).then(icon => icon.click());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDUxNQ=="}, "originalCommit": {"oid": "66c44f1ac4f8fbeea849919d7a22a1496ba6aaf8"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3758, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}