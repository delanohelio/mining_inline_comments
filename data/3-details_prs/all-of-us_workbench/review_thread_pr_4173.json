{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MzE2Njk0", "number": 4173, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzozNzo1M1rOEug6VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzozOToyOVrOEug-BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjA5MTczOnYy", "diffSide": "RIGHT", "path": "e2e/tests/cohorts/cohorts-create.spec.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzozNzo1M1rOHi-InA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNDo1MVrOHjBJiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMTY0NA==", "bodyText": "Question: Why was waitForText removed?", "url": "https://github.com/all-of-us/workbench/pull/4173#discussion_r506431644", "createdAt": "2020-10-16T13:37:53Z", "author": {"login": "NehaBroad"}, "path": "e2e/tests/cohorts/cohorts-create.spec.ts", "diffHunk": "@@ -46,14 +46,13 @@ describe('User can create new Cohorts', () => {\n     const group1Count = await group1.includePhysicalMeasurement(PhysicalMeasurementsCriteria.BMI, 30);\n \n     // Checking Group 1 Count. should match Group 1 participants count.\n-    await waitForText(page, group1Count, {xpath: group1.getGroupCountXpath()});\n-    const group1CountInt = Number(group1Count.replace(/,/g, ''));\n+    const group1CountInt = Number((await group1.getGroupCount()).replace(/,/g, ''));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d81d6c3f419a6065b3252c30c81593863cacc0a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMjAzNw==", "bodyText": "Because you added await?", "url": "https://github.com/all-of-us/workbench/pull/4173#discussion_r506432037", "createdAt": "2020-10-16T13:38:16Z", "author": {"login": "NehaBroad"}, "path": "e2e/tests/cohorts/cohorts-create.spec.ts", "diffHunk": "@@ -46,14 +46,13 @@ describe('User can create new Cohorts', () => {\n     const group1Count = await group1.includePhysicalMeasurement(PhysicalMeasurementsCriteria.BMI, 30);\n \n     // Checking Group 1 Count. should match Group 1 participants count.\n-    await waitForText(page, group1Count, {xpath: group1.getGroupCountXpath()});\n-    const group1CountInt = Number(group1Count.replace(/,/g, ''));\n+    const group1CountInt = Number((await group1.getGroupCount()).replace(/,/g, ''));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMTY0NA=="}, "originalCommit": {"oid": "4d81d6c3f419a6065b3252c30c81593863cacc0a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MTAzMg==", "bodyText": "Replaced it with call to await group1.getGroupCount() to find Group Count.", "url": "https://github.com/all-of-us/workbench/pull/4173#discussion_r506481032", "createdAt": "2020-10-16T14:24:51Z", "author": {"login": "aweng98"}, "path": "e2e/tests/cohorts/cohorts-create.spec.ts", "diffHunk": "@@ -46,14 +46,13 @@ describe('User can create new Cohorts', () => {\n     const group1Count = await group1.includePhysicalMeasurement(PhysicalMeasurementsCriteria.BMI, 30);\n \n     // Checking Group 1 Count. should match Group 1 participants count.\n-    await waitForText(page, group1Count, {xpath: group1.getGroupCountXpath()});\n-    const group1CountInt = Number(group1Count.replace(/,/g, ''));\n+    const group1CountInt = Number((await group1.getGroupCount()).replace(/,/g, ''));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMTY0NA=="}, "originalCommit": {"oid": "4d81d6c3f419a6065b3252c30c81593863cacc0a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjEwMTE2OnYy", "diffSide": "RIGHT", "path": "e2e/utils/waits-utils.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzozOToyOVrOHi-OuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNDoyNzoyNVrOHjBTNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMzIwOA==", "bodyText": "Since timeOut is an optional argument should there be a check to see if it exist before using it.", "url": "https://github.com/all-of-us/workbench/pull/4173#discussion_r506433208", "createdAt": "2020-10-16T13:39:29Z", "author": {"login": "NehaBroad"}, "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -225,15 +225,16 @@ export async function waitForNumberElements(page: Page,\n  */\n export async function waitForText(page: Page,\n                                   textSubstr: string,\n-                                  selector: {xpath?: string, css?: string} = {css: 'body'}): Promise<boolean> {\n+                                  selector: {xpath?: string, css?: string} = {css: 'body'},\n+                                  timeOut?: number): Promise<boolean> {\n   if (selector.css !== undefined) {\n     try {\n          // wait for visible then compare texts\n       await page.waitForSelector(selector.css, {visible: true});\n       const jsHandle = await page.waitForFunction((css, expText) => {\n         const element = document.querySelector(css);\n         return element && element.textContent.includes(expText);\n-      }, {}, selector.css, textSubstr);\n+      }, {timeout: timeOut}, selector.css, textSubstr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d81d6c3f419a6065b3252c30c81593863cacc0a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ4MzUxMA==", "bodyText": "page.waitForFunction ignores undefined optional param.", "url": "https://github.com/all-of-us/workbench/pull/4173#discussion_r506483510", "createdAt": "2020-10-16T14:27:25Z", "author": {"login": "aweng98"}, "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -225,15 +225,16 @@ export async function waitForNumberElements(page: Page,\n  */\n export async function waitForText(page: Page,\n                                   textSubstr: string,\n-                                  selector: {xpath?: string, css?: string} = {css: 'body'}): Promise<boolean> {\n+                                  selector: {xpath?: string, css?: string} = {css: 'body'},\n+                                  timeOut?: number): Promise<boolean> {\n   if (selector.css !== undefined) {\n     try {\n          // wait for visible then compare texts\n       await page.waitForSelector(selector.css, {visible: true});\n       const jsHandle = await page.waitForFunction((css, expText) => {\n         const element = document.querySelector(css);\n         return element && element.textContent.includes(expText);\n-      }, {}, selector.css, textSubstr);\n+      }, {timeout: timeOut}, selector.css, textSubstr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQzMzIwOA=="}, "originalCommit": {"oid": "4d81d6c3f419a6065b3252c30c81593863cacc0a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3837, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}