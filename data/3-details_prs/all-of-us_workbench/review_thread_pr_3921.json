{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTk1NTM4", "number": 3921, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozODozNVrOEcojsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozODozNVrOEcojsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NDYwMDgwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/CohortReviewController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozODozNVrOHHSC4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjoyOToyNFrOHIYKqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzcyOA==", "bodyText": "I was thinking about moving the logic to update PageRequest inside cohortBuilderService as well, replacing the entire method. Let me know what you think", "url": "https://github.com/all-of-us/workbench/pull/3921#discussion_r477397728", "createdAt": "2020-08-26T15:38:35Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/api/CohortReviewController.java", "diffHunk": "@@ -745,25 +732,10 @@ private DbCohortReview createNewCohortReview(\n   private void convertGenderRaceEthnicitySortOrder(PageRequest pageRequest) {\n     String sortColumn = pageRequest.getSortColumn();\n     String sortName = pageRequest.getSortOrder().name();\n-    Sort sort =\n-        sortName.equalsIgnoreCase(Direction.ASC.toString())\n-            ? new Sort(Direction.ASC, \"name\")\n-            : new Sort(Direction.DESC, \"name\");\n     if (GENDER_RACE_ETHNICITY_TYPES.contains(sortColumn)) {\n-      List<DbCriteria> criteriaList =\n-          cbCriteriaDao.findByDomainIdAndTypeAndParentIdNotIn(\n-              DomainType.PERSON.toString(), sortColumn, 0L, sort);\n-      Map<String, Map<Long, String>> concepts = new HashMap<>();\n       List<String> demoList =\n-          criteriaList.stream()\n-              .map(\n-                  c ->\n-                      new ConceptIdName()\n-                          .conceptId(new Long(c.getConceptId()))\n-                          .conceptName(c.getName()))\n-              .sorted(Comparator.comparing(ConceptIdName::getConceptName))\n-              .map(c -> c.getConceptId().toString())\n-              .collect(Collectors.toList());\n+          cohortBuilderService.findSortedConceptIdsByDomainIdAndTypeAndParentIdNotIn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaa30853244c32bac9896040342a9c8941d43832"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU0NjYwMw==", "bodyText": "That seems fine.", "url": "https://github.com/all-of-us/workbench/pull/3921#discussion_r478546603", "createdAt": "2020-08-27T16:29:24Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/CohortReviewController.java", "diffHunk": "@@ -745,25 +732,10 @@ private DbCohortReview createNewCohortReview(\n   private void convertGenderRaceEthnicitySortOrder(PageRequest pageRequest) {\n     String sortColumn = pageRequest.getSortColumn();\n     String sortName = pageRequest.getSortOrder().name();\n-    Sort sort =\n-        sortName.equalsIgnoreCase(Direction.ASC.toString())\n-            ? new Sort(Direction.ASC, \"name\")\n-            : new Sort(Direction.DESC, \"name\");\n     if (GENDER_RACE_ETHNICITY_TYPES.contains(sortColumn)) {\n-      List<DbCriteria> criteriaList =\n-          cbCriteriaDao.findByDomainIdAndTypeAndParentIdNotIn(\n-              DomainType.PERSON.toString(), sortColumn, 0L, sort);\n-      Map<String, Map<Long, String>> concepts = new HashMap<>();\n       List<String> demoList =\n-          criteriaList.stream()\n-              .map(\n-                  c ->\n-                      new ConceptIdName()\n-                          .conceptId(new Long(c.getConceptId()))\n-                          .conceptName(c.getName()))\n-              .sorted(Comparator.comparing(ConceptIdName::getConceptName))\n-              .map(c -> c.getConceptId().toString())\n-              .collect(Collectors.toList());\n+          cohortBuilderService.findSortedConceptIdsByDomainIdAndTypeAndParentIdNotIn(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NzcyOA=="}, "originalCommit": {"oid": "aaa30853244c32bac9896040342a9c8941d43832"}, "originalPosition": 156}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2342, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}