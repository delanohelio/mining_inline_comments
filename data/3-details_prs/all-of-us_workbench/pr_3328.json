{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDQ1Njgz", "number": 3328, "title": "[RW-4614][risk=no]integrate jest-puppeteer in Puppeteer e2e test framework", "bodyText": "", "createdAt": "2020-04-01T14:50:54Z", "url": "https://github.com/all-of-us/workbench/pull/3328", "merged": true, "mergeCommit": {"oid": "5ecb31cccade8ac9c3ad2f64cc9ec998de4a3116"}, "closed": true, "closedAt": "2020-04-03T19:50:06Z", "author": {"login": "aweng98"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTJQw7AH2gAyMzk3MDQ1NjgzOjU1MmIyNjA1MDhjYzIwOTAzMGEwNGIyODg3MDJkZmY3MmZjOWYzZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUGMUNgFqTM4NzQyNjUyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "552b260508cc209030a04b288702dff72fc9f3fc", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/552b260508cc209030a04b288702dff72fc9f3fc", "committedDate": "2020-03-31T20:38:06Z", "message": "add jest-puppeteer preset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53b3bf86020f2a89c202390d95b32af3a2fbe0d8", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/53b3bf86020f2a89c202390d95b32af3a2fbe0d8", "committedDate": "2020-04-01T14:11:57Z", "message": "saving work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae7a956375ceca488f4687065d6a99bcaeb837f6", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/ae7a956375ceca488f4687065d6a99bcaeb837f6", "committedDate": "2020-04-01T17:48:47Z", "message": "remove console log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b55c5836a008d96c466284734000a510b3716a0", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/7b55c5836a008d96c466284734000a510b3716a0", "committedDate": "2020-04-01T18:05:49Z", "message": "test on circle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e1f8695d106b94a997b4c73a389a308f14d6b68e", "committedDate": "2020-04-01T18:51:56Z", "message": "undo change circle config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODYxOTQz", "url": "https://github.com/all-of-us/workbench/pull/3328#pullrequestreview-385861943", "createdAt": "2020-04-01T18:55:15Z", "commit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxODo1NToxNVrOF_OQJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOToxODoxNVrOF_PC2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTgzODExOA==", "bodyText": "tsc compile told me to remove redundant await when return is used. :)", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401838118", "createdAt": "2020-04-01T18:55:15Z", "author": {"login": "aweng98"}, "path": "e2e/app/google-login.ts", "diffHunk": "@@ -23,41 +23,51 @@ export default class GoogleLoginPage extends BasePage {\n    * Login email input field.\n    */\n   async email(): Promise<ElementHandle> {\n-    return await this.page.waitForXPath(selectors.emailInput, {visible: true});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0NzcxMA==", "bodyText": "Unrelated to jest-puppeteer. This change owns thanks to the unpredictable Google authentication. Test won't fail on Google login page.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401847710", "createdAt": "2020-04-01T19:12:06Z", "author": {"login": "aweng98"}, "path": "e2e/app/google-login.ts", "diffHunk": "@@ -23,41 +23,51 @@ export default class GoogleLoginPage extends BasePage {\n    * Login email input field.\n    */\n   async email(): Promise<ElementHandle> {\n-    return await this.page.waitForXPath(selectors.emailInput, {visible: true});\n+    return this.page.waitForXPath(selectors.emailInput, {visible: true});\n   }\n \n   /**\n    * Login password input field.\n    */\n   async password(): Promise<ElementHandle> {\n-    return await this.page.waitForXPath(selectors.passwordInput, {visible: true});\n+    return this.page.waitForXPath(selectors.passwordInput, {visible: true});\n   }\n \n   /**\n    * Google login button.\n    */\n   async loginButton(): Promise<ElementHandle> {\n-    return await this.page.waitForXPath(selectors.loginButton, {visible: true});\n+    return this.page.waitForXPath(selectors.loginButton, {visible: true});\n   }\n \n   /**\n    * Enter login email and click Next button.\n    * @param email\n    */\n   async enterEmail(userEmail: string) : Promise<void> {\n-    let emailInput: ElementHandle;\n-    try {\n-      emailInput = await this.email()\n-    } catch(e) {\n-      const randomLink = await this.page.$x('//*[@role=\"link\"]//*[text()=\"Use another account\"]');\n-      if (randomLink.length > 0) {\n-        await randomLink[0].click();\n-      }\n-      emailInput = await this.email()\n+    // Handle Google \"Use another account\" dialog if it exists\n+    const useAnotherAccountXpath = '//*[@role=\"link\"]//*[text()=\"Use another account\"]';\n+    const elemt1 = await Promise.race([\n+      this.page.waitForXPath(selectors.emailInput, {visible: true, timeout: 60000}),\n+      this.page.waitForXPath(useAnotherAccountXpath, {visible: true, timeout: 60000}),\n+    ]);\n+\n+    // compare to the Use another account link\n+    const [link] = await this.page.$x(useAnotherAccountXpath);\n+    const isLink = await page.evaluate((e1, e2) => e1 === e2, elemt1, link);\n+    if (isLink) {\n+      // click \" Use another Account \" link\n+      await Promise.all([\n+        this.page.waitForNavigation(),\n+        link.click(),\n+      ]);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg0OTcwNg==", "bodyText": "For now, in some tests, setUserAgent and setDefaultNavigationTimeout are still required in beforeEach. boilerplate code, not good. I have a PR in work that will remove them from tests for good. I don't want to pack more new changes in this PR.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401849706", "createdAt": "2020-04-01T19:15:36Z", "author": {"login": "aweng98"}, "path": "e2e/tests/user/login.spec.ts", "diffHunk": "@@ -1,40 +1,25 @@\n import GoogleLoginPage, {selectors} from '../../app/google-login';\n-import PuppeteerLaunch from '../../driver/puppeteer-launch';\n \n const configs = require('../../resources/workbench-config');\n \n-// set timeout globally per suite, not per test.\n-jest.setTimeout(2 * 60 * 1000);\n \n describe('Login tests:', () => {\n-  let browser;\n-  let incognitoContext;\n-  let page;\n-\n-  beforeAll(async () =>  {\n-    browser = await PuppeteerLaunch();\n-  });\n \n   beforeEach(async () => {\n-    incognitoContext = await browser.createIncognitoBrowserContext();\n-    page = await incognitoContext.newPage();\n     await page.setUserAgent(configs.puppeteerUserAgent);\n-    await page.setDefaultNavigationTimeout(60000);\n+    await page.setDefaultNavigationTimeout(120000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg1MDEzMg==", "bodyText": "test is no longer valid due to removal of invitation key during Create Account workflow.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401850132", "createdAt": "2020-04-01T19:16:23Z", "author": {"login": "aweng98"}, "path": "e2e/tests/user/registration-ui.spec.ts", "diffHunk": "@@ -3,56 +3,19 @@ import SelectComponent from '../../app/aou-elements/select-component';\n import Textbox from '../../app/aou-elements/textbox';\n import CreateAccountPage, {FIELD_LABEL, INSTITUTION_ROLE_VALUE, INSTITUTION_VALUE} from '../../app/create-account-page';\n import GoogleLoginPage from '../../app/google-login';\n-import PuppeteerLaunch from '../../driver/puppeteer-launch';\n \n const configs = require('../../resources/workbench-config');\n \n-// set timeout globally per suite, not per test.\n-jest.setTimeout(2 * 60 * 1000);\n \n-describe.skip('User registration tests:', () => {\n-\n-  let browser;\n-  let page;\n-\n-  beforeAll(async () => {\n-    browser = await PuppeteerLaunch();\n-  });\n+describe('User registration tests:', () => {\n \n   beforeEach(async () => {\n-    page = await browser.newPage();\n-    await page.setDefaultNavigationTimeout(60000);\n+    await page.setUserAgent(configs.puppeteerUserAgent);\n+    await page.setDefaultNavigationTimeout(120000);\n   });\n \n   afterEach(async () => {\n-    await page.close();\n-  });\n-\n-  afterAll(async () => {\n-    await browser.close();\n-  });\n-\n-\n-  test('Entered invalid invitation key', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg1MTA5Nw==", "bodyText": "changes in tslint are mostly changed by linting. real change are lines #50 - #52.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401851097", "createdAt": "2020-04-01T19:18:15Z", "author": {"login": "aweng98"}, "path": "e2e/tslint.json", "diffHunk": "@@ -1,44 +1,55 @@\n {\n-    \"defaultSeverity\": \"error\",\n-    \"extends\": [\n-        \"tslint:recommended\",\n-        \"tslint-eslint-rules\",\n-        \"tslint-config-prettier\"\n+  \"defaultSeverity\": \"error\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTgxODUx", "url": "https://github.com/all-of-us/workbench/pull/3328#pullrequestreview-385981851", "createdAt": "2020-04-01T22:03:55Z", "commit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjowMzo1NlrOF_USnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjowNToyOFrOF_UVJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNzA1NQ==", "bodyText": "unused?", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401937055", "createdAt": "2020-04-01T22:03:56Z", "author": {"login": "calbach"}, "path": "e2e/app/authenticated-page.ts", "diffHunk": "@@ -2,6 +2,7 @@ import {Page} from 'puppeteer';\n import {clrIconXpath} from './aou-elements/xpath-defaults';\n import {findIcon} from './aou-elements/xpath-finder';\n import BasePage from './base-page';\n+import {performance} from 'perf_hooks';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzNzcwMg==", "bodyText": "In the codebase we typically don't capitalize local variables, even if they are constants.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401937702", "createdAt": "2020-04-01T22:05:28Z", "author": {"login": "calbach"}, "path": "e2e/app/base-page.ts", "diffHunk": "@@ -232,7 +232,34 @@ export default abstract class BasePage {\n     const timestamp = new Date().getTime();\n     const screenshotFile = `${SCREENSHOT_DIR}/${fileName}_${timestamp}.png`;\n     await this.page.screenshot({path: screenshotFile, fullPage: true});\n-    console.log('screenshot taken: ' + screenshotFile);\n+    console.log('Saved screenshot ' + screenshotFile);\n+  }\n+\n+  async saveToFile(fileName, data, suffix: string = 'html') {\n+    const LOG_DIR = 'logs/html';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTg1MTU3", "url": "https://github.com/all-of-us/workbench/pull/3328#pullrequestreview-385985157", "createdAt": "2020-04-01T22:10:45Z", "commit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjoxMDo0NVrOF_UdiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjoxNDozOVrOF_Uj9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTkzOTg0OQ==", "bodyText": "How did you decide on these flags - were these copied from elsewhere? Please add a comment.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401939849", "createdAt": "2020-04-01T22:10:45Z", "author": {"login": "calbach"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -0,0 +1,44 @@\n+const lodash = require('lodash');\n+const puppeteer = require('puppeteer');\n+const isHeadless = process.env.HEADLESS !== 'false';\n+\n+const NEW_CHROME_SWITCHES = [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MDUwMg==", "bodyText": "Existing issue: the rest of the codebase uses lodash/fp, our convention is to alias this as \"fp\". May want to reconcile this later", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401940502", "createdAt": "2020-04-01T22:12:17Z", "author": {"login": "calbach"}, "path": "e2e/resources/workbench-config.ts", "diffHunk": "@@ -1,5 +1,5 @@\n require('dotenv').config();\n-const _ = require('lodash');\n+const lodash = require('lodash');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MDk3Ng==", "bodyText": "do we need to depend on clr-icon? This seems maybe overly specific. Can we just wait for app-signed-in, for example?", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401940976", "createdAt": "2020-04-01T22:13:30Z", "author": {"login": "calbach"}, "path": "e2e/tests/app.ts", "diffHunk": "@@ -0,0 +1,9 @@\n+import {Page} from 'puppeteer';\n+import GoogleLoginPage from '../app/google-login';\n+\n+\n+export const signIn = async (page: Page) => {\n+  await GoogleLoginPage.logIn(page);\n+   // this element exists in DOM after user has logged in\n+  await page.waitFor(() => document.querySelector('app-signed-in app-nav-bar clr-icon') !== null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MTEzOQ==", "bodyText": "Fix steps", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401941139", "createdAt": "2020-04-01T22:13:57Z", "author": {"login": "calbach"}, "path": "e2e/tests/user/registration.spec.ts", "diffHunk": "@@ -44,10 +25,6 @@ describe.skip('User registration tests:', () => {\n \n     const createAccountPage = new CreateAccountPage(page);\n \n-    // Step 1: Enter invitation key.\n-    await createAccountPage.waitForTextExists('Enter your Invitation Key:');\n-    await createAccountPage.fillOutInvitationKey(process.env.INVITATION_KEY);\n-\n     // Step 2: Terms of Service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MTIyMw==", "bodyText": "Did you mean to leave this in?", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401941223", "createdAt": "2020-04-01T22:14:05Z", "author": {"login": "calbach"}, "path": "e2e/tests/user/registration.spec.ts", "diffHunk": "@@ -1,39 +1,20 @@\n import CreateAccountPage from '../../app/create-account-page';\n import GoogleLoginPage from '../../app/google-login';\n-import PuppeteerLaunch from '../../driver/puppeteer-launch';\n-const configs = require('../../resources/workbench-config');\n \n-// set timeout globally per suite, not per test.\n-jest.setTimeout(2 * 60 * 1000);\n \n-describe.skip('User registration tests:', () => {\n-\n-  let browser;\n-  let incognitoContext;\n-  let page;\n-\n-\n-  beforeAll(async () => {\n-    browser = await PuppeteerLaunch();\n-  });\n+describe('User registration tests:', () => {\n \n   beforeEach(async () => {\n-    incognitoContext = await browser.createIncognitoBrowserContext();\n-    page = await incognitoContext.newPage();\n     await page.setUserAgent(configs.puppeteerUserAgent);\n-    await page.setDefaultNavigationTimeout(60000);\n+    await page.setDefaultNavigationTimeout(120000);\n   });\n \n   afterEach(async () => {\n-    await incognitoContext.close();\n-  });\n-\n-  afterAll(async () => {\n-    await browser.close();\n+    await jestPuppeteer.resetBrowser();\n   });\n \n \n-  test('Can register new user', async () => {\n+  test.skip('Can register new user', async () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MTQ5NA==", "bodyText": "Is this the same as our other tslint file? We should probably just have one.", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r401941494", "createdAt": "2020-04-01T22:14:39Z", "author": {"login": "calbach"}, "path": "e2e/tslint.json", "diffHunk": "@@ -1,44 +1,55 @@\n {\n-    \"defaultSeverity\": \"error\",\n-    \"extends\": [\n-        \"tslint:recommended\",\n-        \"tslint-eslint-rules\",\n-        \"tslint-config-prettier\"\n+  \"defaultSeverity\": \"error\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg1MTA5Nw=="}, "originalCommit": {"oid": "e1f8695d106b94a997b4c73a389a308f14d6b68e"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91db88325546bb14a809a8e4113432576c256ae8", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/91db88325546bb14a809a8e4113432576c256ae8", "committedDate": "2020-04-03T01:42:22Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDIyMzIw", "url": "https://github.com/all-of-us/workbench/pull/3328#pullrequestreview-387422320", "createdAt": "2020-04-03T16:51:11Z", "commit": {"oid": "91db88325546bb14a809a8e4113432576c256ae8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1MToxMVrOGAdzig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1MToxMVrOGAdzig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MTUxNA==", "bodyText": "remove?", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r403141514", "createdAt": "2020-04-03T16:51:11Z", "author": {"login": "calbach"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -1,41 +1,45 @@\n-const lodash = require('lodash');\n+const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n const isHeadless = process.env.HEADLESS !== 'false';\n \n+\n const NEW_CHROME_SWITCHES = [\n-  '--disable-web-security',\n-  '--disable-features=TranslateUI,BlinkGenPropertyTrees,IsolateOrigins,site-per-process',\n-  '--disable-gpu',\n-  '--disable-accelerated-2d-canvas', // disable gpu-accelerated 2d canvas\n-  '--no-zygote', // https://codereview.chromium.org/2384163002\n+  // Reduce cpu and memory usage. Disables one-site-per-process security policy, dedicated processes for site origins.\n+  '--disable-features=BlinkGenPropertyTrees,IsolateOrigins,site-per-process',\n+  // Page not loading Login URL when launched Chromium without this flag. It disables use of zygote process for forking child processes.\n+  // https://codereview.chromium.org/2384163002\n+  '--no-zygote',\n+  '--no-sandbox', // required for --no-zygote flag\n+  '--safebrowsing-disable-auto-update',\n   '--window-size=1920,1080',\n ];\n \n-// append to Puppeteer default chrome flags.\n+// Append to Puppeteer default chrome flags.\n // https://github.com/puppeteer/puppeteer/blob/33f1967072e07824c5bf6a8c1336f844d9efaabf/lib/Launcher.js#L261\n-const DEFAULT_SWITCHES = puppeteer.defaultArgs({devtools: false, headless: isHeadless, userDataDir: null})\n-  .concat(...NEW_CHROME_SWITCHES)\n-  .filter(flag => flag !== '--disable-background-networking'); // filter out from default arguments\n+const DEFAULT_SWITCHES = fp.concat(\n+  puppeteer.defaultArgs({devtools: false, headless: isHeadless, userDataDir: null}),\n+  NEW_CHROME_SWITCHES\n+);\n \n-// merge without changing DEFAULT_SWITCHES\n-const CI_SWITCHES = lodash.assign([], DEFAULT_SWITCHES,\n-    [\n-      '--disable-dev-shm-usage',\n-      '--no-sandbox',\n-      '--disable-setuid-sandbox',\n-    ]\n+// Need for running Puppeteer headless Chromium in docker container.\n+const CI_SWITCHES = fp.concat(\n+  DEFAULT_SWITCHES,\n+  [\n+    '--disable-gpu', // https://bugs.chromium.org/p/chromium/issues/detail?id=737678#c10\n+    '--disable-setuid-sandbox',\n+  ]\n );\n \n-// switches for Chrome launch\n const SWITCHES = (process.env.CI === 'true') ? CI_SWITCHES : DEFAULT_SWITCHES;\n \n+console.log(SWITCHES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91db88325546bb14a809a8e4113432576c256ae8"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5faa2cc2572bfb4e1da0cfc6ac7f54d3b0a6d23b", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/5faa2cc2572bfb4e1da0cfc6ac7f54d3b0a6d23b", "committedDate": "2020-04-03T19:35:13Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDI2NTIw", "url": "https://github.com/all-of-us/workbench/pull/3328#pullrequestreview-387426520", "createdAt": "2020-04-03T16:57:15Z", "commit": {"oid": "91db88325546bb14a809a8e4113432576c256ae8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1NzoxNVrOGAeDQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjo1NzoxNVrOGAeDQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0NTUzNg==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3328#discussion_r403145536", "createdAt": "2020-04-03T16:57:15Z", "author": {"login": "aweng98"}, "path": "e2e/jest-puppeteer.config.js", "diffHunk": "@@ -1,41 +1,45 @@\n-const lodash = require('lodash');\n+const fp = require('lodash/fp');\n const puppeteer = require('puppeteer');\n const isHeadless = process.env.HEADLESS !== 'false';\n \n+\n const NEW_CHROME_SWITCHES = [\n-  '--disable-web-security',\n-  '--disable-features=TranslateUI,BlinkGenPropertyTrees,IsolateOrigins,site-per-process',\n-  '--disable-gpu',\n-  '--disable-accelerated-2d-canvas', // disable gpu-accelerated 2d canvas\n-  '--no-zygote', // https://codereview.chromium.org/2384163002\n+  // Reduce cpu and memory usage. Disables one-site-per-process security policy, dedicated processes for site origins.\n+  '--disable-features=BlinkGenPropertyTrees,IsolateOrigins,site-per-process',\n+  // Page not loading Login URL when launched Chromium without this flag. It disables use of zygote process for forking child processes.\n+  // https://codereview.chromium.org/2384163002\n+  '--no-zygote',\n+  '--no-sandbox', // required for --no-zygote flag\n+  '--safebrowsing-disable-auto-update',\n   '--window-size=1920,1080',\n ];\n \n-// append to Puppeteer default chrome flags.\n+// Append to Puppeteer default chrome flags.\n // https://github.com/puppeteer/puppeteer/blob/33f1967072e07824c5bf6a8c1336f844d9efaabf/lib/Launcher.js#L261\n-const DEFAULT_SWITCHES = puppeteer.defaultArgs({devtools: false, headless: isHeadless, userDataDir: null})\n-  .concat(...NEW_CHROME_SWITCHES)\n-  .filter(flag => flag !== '--disable-background-networking'); // filter out from default arguments\n+const DEFAULT_SWITCHES = fp.concat(\n+  puppeteer.defaultArgs({devtools: false, headless: isHeadless, userDataDir: null}),\n+  NEW_CHROME_SWITCHES\n+);\n \n-// merge without changing DEFAULT_SWITCHES\n-const CI_SWITCHES = lodash.assign([], DEFAULT_SWITCHES,\n-    [\n-      '--disable-dev-shm-usage',\n-      '--no-sandbox',\n-      '--disable-setuid-sandbox',\n-    ]\n+// Need for running Puppeteer headless Chromium in docker container.\n+const CI_SWITCHES = fp.concat(\n+  DEFAULT_SWITCHES,\n+  [\n+    '--disable-gpu', // https://bugs.chromium.org/p/chromium/issues/detail?id=737678#c10\n+    '--disable-setuid-sandbox',\n+  ]\n );\n \n-// switches for Chrome launch\n const SWITCHES = (process.env.CI === 'true') ? CI_SWITCHES : DEFAULT_SWITCHES;\n \n+console.log(SWITCHES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzE0MTUxNA=="}, "originalCommit": {"oid": "91db88325546bb14a809a8e4113432576c256ae8"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3325, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}