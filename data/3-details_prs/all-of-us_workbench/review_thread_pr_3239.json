{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Mjk3ODYy", "number": 3239, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxODozNDoxMlrODmzmFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxOToxNToyN1rODm0h1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDE3ODEzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/user-disabled.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxODozNDoxMlrOF0b7SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNzowM1rOF02Zzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyNzgxNw==", "bodyText": "I wasn't sure where to put this page. It is designed to look like the logged out pages, but I don't really like importing from different modules like this. Any ideas? (I also ended up copying some other code, that could probably be abstracted some more?)", "url": "https://github.com/all-of-us/workbench/pull/3239#discussion_r390527817", "createdAt": "2020-03-10T18:34:12Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/user-disabled.tsx", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component} from '@angular/core';\n+import * as React from 'react';\n+\n+import {StyledAnchorTag} from 'app/components/buttons';\n+import {FlexColumn} from 'app/components/flex';\n+import {Header} from 'app/components/headers';\n+import {backgroundStyleTemplate, SIGNED_OUT_HEADER_IMAGE, SignInStep, StepToImageConfig} from 'app/pages/login/sign-in';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73dbdc8d098330acf46adecd4c2d2606bd36a46"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU1NDI3MQ==", "bodyText": "It could be abstracted some more, but it's not too bad as-is. The most fragile part looks like the backgroundStyleTemplate method call... I don't think including the bg image is critical to the disabled page, so I might be inclined to leave that out in the name of maintainability, but keep the header image (which could more easily be pulled out into a separate constants file, but also isn't a critical to-do IMO).", "url": "https://github.com/all-of-us/workbench/pull/3239#discussion_r390554271", "createdAt": "2020-03-10T19:19:25Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/user-disabled.tsx", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component} from '@angular/core';\n+import * as React from 'react';\n+\n+import {StyledAnchorTag} from 'app/components/buttons';\n+import {FlexColumn} from 'app/components/flex';\n+import {Header} from 'app/components/headers';\n+import {backgroundStyleTemplate, SIGNED_OUT_HEADER_IMAGE, SignInStep, StepToImageConfig} from 'app/pages/login/sign-in';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyNzgxNw=="}, "originalCommit": {"oid": "b73dbdc8d098330acf46adecd4c2d2606bd36a46"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MTYxNA==", "bodyText": "The background image is actually a relatively clear part of Lou's mock/Karthik's design. I think they wanted it to look like the signin page, so that it was a similar page for users who sign in and find themself disabled:\nhttps://projects.invisionapp.com/d/main#/console/12820961/408493657/inspect", "url": "https://github.com/all-of-us/workbench/pull/3239#discussion_r390961614", "createdAt": "2020-03-11T13:17:03Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/user-disabled.tsx", "diffHunk": "@@ -0,0 +1,57 @@\n+import {Component} from '@angular/core';\n+import * as React from 'react';\n+\n+import {StyledAnchorTag} from 'app/components/buttons';\n+import {FlexColumn} from 'app/components/flex';\n+import {Header} from 'app/components/headers';\n+import {backgroundStyleTemplate, SIGNED_OUT_HEADER_IMAGE, SignInStep, StepToImageConfig} from 'app/pages/login/sign-in';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDUyNzgxNw=="}, "originalCommit": {"oid": "b73dbdc8d098330acf46adecd4c2d2606bd36a46"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDMzMTA4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/guards/disabled-guard.service.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxOToxNToyN1rOF0daHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMzoxNzo1MFrOF02biA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU1MjA5NQ==", "bodyText": "nit: I don't think you're using any async syntax, so you can drop the 'async' here and below.\nI personally think the async syntax is nicer than nested, but I don't think we have a style requirement to use that (yet...)", "url": "https://github.com/all-of-us/workbench/pull/3239#discussion_r390552095", "createdAt": "2020-03-10T19:15:27Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/guards/disabled-guard.service.ts", "diffHunk": "@@ -0,0 +1,29 @@\n+import {Injectable} from '@angular/core';\n+import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\n+\n+import {SignInService} from 'app/services/sign-in.service';\n+import {profileApi} from 'app/services/swagger-fetch-clients';\n+import {convertAPIError} from 'app/utils/errors';\n+import {ErrorCode} from 'generated/fetch';\n+\n+@Injectable()\n+export class DisabledGuard implements CanActivate, CanActivateChild {\n+  constructor(private signInService: SignInService, private router: Router) {}\n+\n+  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73dbdc8d098330acf46adecd4c2d2606bd36a46"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDk2MjA1Ng==", "bodyText": "Want to bring it up at the eng sync? Then if everyone agrees, we can add it to our style guide markdown.", "url": "https://github.com/all-of-us/workbench/pull/3239#discussion_r390962056", "createdAt": "2020-03-11T13:17:50Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/guards/disabled-guard.service.ts", "diffHunk": "@@ -0,0 +1,29 @@\n+import {Injectable} from '@angular/core';\n+import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\n+\n+import {SignInService} from 'app/services/sign-in.service';\n+import {profileApi} from 'app/services/swagger-fetch-clients';\n+import {convertAPIError} from 'app/utils/errors';\n+import {ErrorCode} from 'generated/fetch';\n+\n+@Injectable()\n+export class DisabledGuard implements CanActivate, CanActivateChild {\n+  constructor(private signInService: SignInService, private router: Router) {}\n+\n+  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU1MjA5NQ=="}, "originalCommit": {"oid": "b73dbdc8d098330acf46adecd4c2d2606bd36a46"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3216, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}