{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDgwMTk5", "number": 3019, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjowMjoyNFrODZpqeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowODoxM1rODZ_gpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjIzNjA5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjowMjoyNFrOFgKRwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxOToyNlrOFgf9yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzEzNg==", "bodyText": "Nit: methods named \"toggle\" generally mean \"switch from one state to another every time I'm called\", while this method and the one below simply update a field to a given boolean value. A slightly clearer name may be \"updateDisability\" or \"setDisability\".", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369267136", "createdAt": "2020-01-21T22:02:24Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -111,16 +109,20 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n   }\n \n   toggleDisability(value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjQ3NA==", "bodyText": "I may actually just get rid of these and use the updateDemographicAttribute cause its really the exact same thing.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369622474", "createdAt": "2020-01-22T15:19:26Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -111,16 +109,20 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n   }\n \n   toggleDisability(value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzEzNg=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjIzNzEzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjowMjo1MVrOFgKSYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToxOTo0MFrOFgf-Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzI5Nw==", "bodyText": "Typing nit: it's never too late to start incorporating some type-safety here, e.g. value --> value: Boolean", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369267297", "createdAt": "2020-01-21T22:02:51Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -111,16 +109,20 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n   }\n \n   toggleDisability(value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjU5NA==", "bodyText": "Will do, if I don't get rid of these methods.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369622594", "createdAt": "2020-01-22T15:19:40Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -111,16 +109,20 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n   }\n \n   toggleDisability(value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzI5Nw=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjIzODM1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjowMzoxOVrOFgKTGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMDoxMlrOFgf_fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzQ4MA==", "bodyText": "What impact does this change have?", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369267480", "createdAt": "2020-01-21T22:03:19Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -138,70 +140,75 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       </ListPageHeader>\n \n       {/*Race section*/}\n-      <Section header='1. Race'>\n+      <Section header='Race'>\n         <div style={{display: 'flex', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n           {AccountCreationOptions.race.map((race) => {\n-            return this.createOptionCheckbox(race.label, 'race', race.value);\n+            return this.createOptionCheckbox(race.label, 'race', race.value, race.value.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMjkxMQ==", "bodyText": "It removes a console error message. If you don't provide keys to react within a map, it complains with red in the console.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369622911", "createdAt": "2020-01-22T15:20:12Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -138,70 +140,75 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       </ListPageHeader>\n \n       {/*Race section*/}\n-      <Section header='1. Race'>\n+      <Section header='Race'>\n         <div style={{display: 'flex', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n           {AccountCreationOptions.race.map((race) => {\n-            return this.createOptionCheckbox(race.label, 'race', race.value);\n+            return this.createOptionCheckbox(race.label, 'race', race.value, race.value.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2NzQ4MA=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjI0NDE4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjowNToyNVrOFgKWgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNToyMDoyMlrOFgf_5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2ODM1Mw==", "bodyText": "Nit: can you make the  fit on one line to be consistent with the \"no\" label? (If it got auto-wrapped, that's fine, but by eye it looks like it might fit.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369268353", "createdAt": "2020-01-21T22:05:25Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -138,70 +140,75 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       </ListPageHeader>\n \n       {/*Race section*/}\n-      <Section header='1. Race'>\n+      <Section header='Race'>\n         <div style={{display: 'flex', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n           {AccountCreationOptions.race.map((race) => {\n-            return this.createOptionCheckbox(race.label, 'race', race.value);\n+            return this.createOptionCheckbox(race.label, 'race', race.value, race.value.toString());\n           })}\n         </div>\n       </Section>\n \n       {/*Ethnicity section*/}\n-      <DropDownSection header='2. Ethnicity' options={AccountCreationOptions.ethnicity}\n+      <DropDownSection header='Ethnicity' options={AccountCreationOptions.ethnicity}\n                        value={demographicSurvey.ethnicity}\n                        onChange={(e) => this.updateDemographicAttribute('ethnicity', e)}/>\n-\n-      {/*Gender section*/}\n-      <Section header='3. Gender'>\n-        <FlexRow style={{flexWrap: 'wrap'}}>\n-          {AccountCreationOptions.gender.map((gender) => {\n-            return this.createOptionCheckbox(gender.label, 'gender', gender.value);\n-          })}\n-        </FlexRow>\n+      <Section header='Do you identify as lesbian, gay, bisexual, transgender, queer (LGBTQ),\n+or another sexual and/or gender minority?'>\n+        <div style={{paddingTop: '0.5rem'}}>\n+          <RadioButton onChange={\n+            (e) => this.toggleIdentifiesAsLgbtq(true)}\n+                       checked={demographicSurvey.identifiesAsLgbtq}\n+                       style={{marginRight: '0.5rem'}}/>\n+          <label style={{paddingRight: '3rem', color: colors.primary}}>\n+            Yes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYyMzAxMg==", "bodyText": "Probably! Let me try.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369623012", "createdAt": "2020-01-22T15:20:22Z", "author": {"login": "s-rubenstein"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -138,70 +140,75 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       </ListPageHeader>\n \n       {/*Race section*/}\n-      <Section header='1. Race'>\n+      <Section header='Race'>\n         <div style={{display: 'flex', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n           {AccountCreationOptions.race.map((race) => {\n-            return this.createOptionCheckbox(race.label, 'race', race.value);\n+            return this.createOptionCheckbox(race.label, 'race', race.value, race.value.toString());\n           })}\n         </div>\n       </Section>\n \n       {/*Ethnicity section*/}\n-      <DropDownSection header='2. Ethnicity' options={AccountCreationOptions.ethnicity}\n+      <DropDownSection header='Ethnicity' options={AccountCreationOptions.ethnicity}\n                        value={demographicSurvey.ethnicity}\n                        onChange={(e) => this.updateDemographicAttribute('ethnicity', e)}/>\n-\n-      {/*Gender section*/}\n-      <Section header='3. Gender'>\n-        <FlexRow style={{flexWrap: 'wrap'}}>\n-          {AccountCreationOptions.gender.map((gender) => {\n-            return this.createOptionCheckbox(gender.label, 'gender', gender.value);\n-          })}\n-        </FlexRow>\n+      <Section header='Do you identify as lesbian, gay, bisexual, transgender, queer (LGBTQ),\n+or another sexual and/or gender minority?'>\n+        <div style={{paddingTop: '0.5rem'}}>\n+          <RadioButton onChange={\n+            (e) => this.toggleIdentifiesAsLgbtq(true)}\n+                       checked={demographicSurvey.identifiesAsLgbtq}\n+                       style={{marginRight: '0.5rem'}}/>\n+          <label style={{paddingRight: '3rem', color: colors.primary}}>\n+            Yes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI2ODM1Mw=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjI2NTg1OnYy", "diffSide": "RIGHT", "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjoxMzo0OFrOFgKjxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMzozOFrOFgfX_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3MTc0OQ==", "bodyText": "[Just thinking out loud] Have we encountered scenarios where users attempt to put more text into an input form than our database column width allows? Do we have clear DB design guidelines around choosing between the various text types or lengths for free-form text like this? I suspect 255 is probably enough here, I'm just curious if there is a broader pattern.\n(Based on a quick dig into our codebase, it seems we use varchar more often by far, with one instance of type=\"longtext\" and a few instances of type=\"text\" in the data dictionary schema. It's a clear pattern, but I'm not sure the motivation behind preferring varchar more often than not.)", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369271749", "createdAt": "2020-01-21T22:13:48Z", "author": {"login": "gjuggler"}, "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"srubenst\" id=\"db.changelog-116-update-demographics\">\n+    <addColumn tableName=\"user\">\n+      <column name=\"professional_url\" type=\"varchar(255)\">\n+        <constraints nullable=\"true\"/>\n+      </column>\n+    </addColumn>\n+    <addColumn tableName=\"demographic_survey\">\n+      <column name=\"identifies_as_lgbtq\" type=\"boolean\">\n+        <constraints nullable=\"true\"/>\n+      </column>\n+      <column name=\"lgbtq_identity\" type=\"varchar(255)\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjc5Ng==", "bodyText": "We haven't. I can add some front-end validation on that though. I asked Lou and it sounded like we thought 255 char was probably enough for this. I've been mainly following the DB schema pattern we have established.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369612796", "createdAt": "2020-01-22T15:03:38Z", "author": {"login": "s-rubenstein"}, "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"srubenst\" id=\"db.changelog-116-update-demographics\">\n+    <addColumn tableName=\"user\">\n+      <column name=\"professional_url\" type=\"varchar(255)\">\n+        <constraints nullable=\"true\"/>\n+      </column>\n+    </addColumn>\n+    <addColumn tableName=\"demographic_survey\">\n+      <column name=\"identifies_as_lgbtq\" type=\"boolean\">\n+        <constraints nullable=\"true\"/>\n+      </column>\n+      <column name=\"lgbtq_identity\" type=\"varchar(255)\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3MTc0OQ=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjI4MTgyOnYy", "diffSide": "RIGHT", "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMjoxOTozOFrOFgKtPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNTowMzowOVrOFgfWjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NDE3Mg==", "bodyText": "It might be worth adding a comment here, and/or in the PR description, referencing https://precisionmedicineinitiative.atlassian.net/browse/RW-4312 (thanks for filing!). I also marked that ticket as blocked by RW-4293 for clarity.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369274172", "createdAt": "2020-01-21T22:19:38Z", "author": {"login": "gjuggler"}, "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"srubenst\" id=\"db.changelog-116-update-demographics\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTYxMjQzMA==", "bodyText": "Threw a comment in there!", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369612430", "createdAt": "2020-01-22T15:03:09Z", "author": {"login": "s-rubenstein"}, "path": "api/db/changelog/db.changelog-118-update-demographics.xml", "diffHunk": "@@ -0,0 +1,22 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog\n+    xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                    http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+  <changeSet author=\"srubenst\" id=\"db.changelog-116-update-demographics\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTI3NDE3Mg=="}, "originalCommit": {"oid": "0de081c8df448fb18f444647303385f67cfa11e1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTgwOTYzOnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowNjowM1rOFgsofA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjowNzoxMFrOFhD1vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMDAxMg==", "bodyText": "Is it an AC to not export this anymore?", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369830012", "createdAt": "2020-01-22T22:06:03Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -193,11 +193,6 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n             RdrExportEnums.sexAtBirthToRdrSexAtBirth(\n                 dbDemographicSurvey.getSexAtBirthEnum().get(0)));\n       }\n-      if (dbDemographicSurvey.getSexualOrientationEnum() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f1561b397ee201359d40a9fc6424bf5d42f83c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxMDIzOQ==", "bodyText": "We aren't capturing this data in enum field anymore. I think there's a conversation with the RDR team about importing the new fields that @NehaBroad was leading.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r370210239", "createdAt": "2020-01-23T16:07:10Z", "author": {"login": "s-rubenstein"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -193,11 +193,6 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n             RdrExportEnums.sexAtBirthToRdrSexAtBirth(\n                 dbDemographicSurvey.getSexAtBirthEnum().get(0)));\n       }\n-      if (dbDemographicSurvey.getSexualOrientationEnum() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMDAxMg=="}, "originalCommit": {"oid": "b9f1561b397ee201359d40a9fc6424bf5d42f83c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTgxNTQyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowODoxM1rOFgssKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMjowODoxM1rOFgssKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTgzMDk1Mg==", "bodyText": "Given that this is how we're wording it, I agree with Greg's earlier comment that this could be much larger than 255 characters. I'd bump it all the way up to 4000 because storage is cheap and a lot of the time it will be empty anyways.", "url": "https://github.com/all-of-us/workbench/pull/3019#discussion_r369830952", "createdAt": "2020-01-22T22:08:13Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -138,70 +144,73 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n       </ListPageHeader>\n \n       {/*Race section*/}\n-      <Section header='1. Race'>\n+      <Section header='Race'>\n         <div style={{display: 'flex', justifyContent: 'flex-start', flexWrap: 'wrap'}}>\n           {AccountCreationOptions.race.map((race) => {\n-            return this.createOptionCheckbox(race.label, 'race', race.value);\n+            return this.createOptionCheckbox(race.label, 'race', race.value, race.value.toString());\n           })}\n         </div>\n       </Section>\n \n       {/*Ethnicity section*/}\n-      <DropDownSection header='2. Ethnicity' options={AccountCreationOptions.ethnicity}\n+      <DropDownSection header='Ethnicity' options={AccountCreationOptions.ethnicity}\n                        value={demographicSurvey.ethnicity}\n                        onChange={(e) => this.updateDemographicAttribute('ethnicity', e)}/>\n-\n-      {/*Gender section*/}\n-      <Section header='3. Gender'>\n-        <FlexRow style={{flexWrap: 'wrap'}}>\n-          {AccountCreationOptions.gender.map((gender) => {\n-            return this.createOptionCheckbox(gender.label, 'gender', gender.value);\n-          })}\n-        </FlexRow>\n+      <Section header='Do you identify as lesbian, gay, bisexual, transgender, queer (LGBTQ),\n+or another sexual and/or gender minority?'>\n+        <div style={{paddingTop: '0.5rem'}}>\n+          <RadioButton onChange={\n+            (e) => this.updateDemographicAttribute('identifiesAsLgbtq', true)}\n+                       checked={demographicSurvey.identifiesAsLgbtq}\n+                       style={{marginRight: '0.5rem'}}/>\n+          <label style={{paddingRight: '3rem', color: colors.primary}}>\n+            Yes\n+          </label>\n+          <RadioButton onChange={(e) => this.updateDemographicAttribute('identifiesAsLgbtq', false)}\n+                       checked={!demographicSurvey.identifiesAsLgbtq}\n+                       style={{marginRight: '0.5rem'}}/>\n+          <label style={{color: colors.primary}}>No</label>\n+        </div>\n+        <label></label>\n+        <TextInputWithLabel labelText='If yes, please tell us about your LGBTQ+ identity'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9f1561b397ee201359d40a9fc6424bf5d42f83c"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3467, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}