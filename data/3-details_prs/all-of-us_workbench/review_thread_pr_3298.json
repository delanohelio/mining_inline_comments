{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTg5ODQz", "number": 3298, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzo0MzoxNFrODrN98A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDowMDoxM1rODrOdyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjQ0MjA4OnYy", "diffSide": "RIGHT", "path": "api/config/config_local.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMzo0MzoxNFrOF7bnMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNzoxMlrOF7dLnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2MjcwNA==", "bodyText": "Welp.  The good thing about autoformatters is that they only run once.", "url": "https://github.com/all-of-us/workbench/pull/3298#discussion_r397862704", "createdAt": "2020-03-25T13:43:14Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_local.json", "diffHunk": "@@ -23,7 +23,10 @@\n     \"bufferCapacity\": 2,\n     \"bufferRefillProjectsPerTask\": 1,\n     \"defaultFreeCreditsDollarLimit\": 300.0,\n-    \"freeTierCostAlertThresholds\": [0.5, 0.75],\n+    \"freeTierCostAlertThresholds\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d81c5122e640e5f000f5b8886d9a312fd2a2007"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2Nzc2Mw==", "bodyText": "Which autoformatter did you run? I'm wondering if we can document something somewhere about how this should be done, so we can have consistent adoption.", "url": "https://github.com/all-of-us/workbench/pull/3298#discussion_r397867763", "createdAt": "2020-03-25T13:49:53Z", "author": {"login": "gjuggler"}, "path": "api/config/config_local.json", "diffHunk": "@@ -23,7 +23,10 @@\n     \"bufferCapacity\": 2,\n     \"bufferRefillProjectsPerTask\": 1,\n     \"defaultFreeCreditsDollarLimit\": 300.0,\n-    \"freeTierCostAlertThresholds\": [0.5, 0.75],\n+    \"freeTierCostAlertThresholds\": [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2MjcwNA=="}, "originalCommit": {"oid": "3d81c5122e640e5f000f5b8886d9a312fd2a2007"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4ODQxNQ==", "bodyText": "IntelliJ Save Action, following our onboarding/setup doc: https://docs.google.com/document/d/1DtESBapEzvuti7xODTFPHorwmLM7LybF-6D5lhbIkLU/edit#heading=h.sjqyvxq4luy4\nThere are many options for Save Actions however, and I was initially quite overzealous on a different branch and had to revert some changes.", "url": "https://github.com/all-of-us/workbench/pull/3298#discussion_r397888415", "createdAt": "2020-03-25T14:17:12Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_local.json", "diffHunk": "@@ -23,7 +23,10 @@\n     \"bufferCapacity\": 2,\n     \"bufferRefillProjectsPerTask\": 1,\n     \"defaultFreeCreditsDollarLimit\": 300.0,\n-    \"freeTierCostAlertThresholds\": [0.5, 0.75],\n+    \"freeTierCostAlertThresholds\": [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg2MjcwNA=="}, "originalCommit": {"oid": "3d81c5122e640e5f000f5b8886d9a312fd2a2007"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjUyMzYyOnYy", "diffSide": "RIGHT", "path": "api/config/config_perf.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDowMDoxM1rOF7caaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxODo0N1rOF7dQmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg3NTgxNw==", "bodyText": "FYI @aweng98 in case this flag flip might affect our perf tests at all. I think it's unlikely to be impacted, just wanted to check.\n(My thought process is that perf tests may be impacted only if both of the following are true: (1) nightly perf tests are creating new users, and (2) our API returns an error response if an invitation key is provided bu requireInvitationKey is false. My quick read of this line is that we just ignore the invitation key when it's not required.", "url": "https://github.com/all-of-us/workbench/pull/3298#discussion_r397875817", "createdAt": "2020-03-25T14:00:13Z", "author": {"login": "gjuggler"}, "path": "api/config/config_perf.json", "diffHunk": "@@ -85,7 +88,7 @@\n     \"enableDataUseAgreement\": true,\n     \"enableBetaAccess\": true,\n     \"unsafeAllowSelfBypass\": true,\n-    \"requireInvitationKey\": true\n+    \"requireInvitationKey\": false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d81c5122e640e5f000f5b8886d9a312fd2a2007"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4OTY4OQ==", "bodyText": "I spoke to Alex offline - we're ok", "url": "https://github.com/all-of-us/workbench/pull/3298#discussion_r397889689", "createdAt": "2020-03-25T14:18:47Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_perf.json", "diffHunk": "@@ -85,7 +88,7 @@\n     \"enableDataUseAgreement\": true,\n     \"enableBetaAccess\": true,\n     \"unsafeAllowSelfBypass\": true,\n-    \"requireInvitationKey\": true\n+    \"requireInvitationKey\": false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg3NTgxNw=="}, "originalCommit": {"oid": "3d81c5122e640e5f000f5b8886d9a312fd2a2007"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3067, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}