{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NjUyMzg2", "number": 4280, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyNToyM1rOE4NlvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTozMjowMlrOE4Ny6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzc4MzY1OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench-api.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyNToyM1rOHx_-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyNToyM1rOHx_-9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5MDU4MA==", "bodyText": "Not sure we need an enum.. you can just make the type: boolean", "url": "https://github.com/all-of-us/workbench/pull/4280#discussion_r522190580", "createdAt": "2020-11-12T15:25:23Z", "author": {"login": "freemabd"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -3641,6 +3641,12 @@ definitions:\n     - unregistered\n     - registered\n     - protected\n+  CdrFitBitData:\n+    type: string\n+    description: Whether CDR has FITBIT data\n+    enum:\n+    - true\n+    - false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4386b36b68920ca01da1f8a0a2a050857591467"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzc4Mzk2OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench-api.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyNToyN1rOHx__JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToyNToyN1rOHx__JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5MDYyOA==", "bodyText": "Shouldn't this just be type: boolean like hasMicroarrayData above", "url": "https://github.com/all-of-us/workbench/pull/4280#discussion_r522190628", "createdAt": "2020-11-12T15:25:27Z", "author": {"login": "freemabd"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -3784,6 +3790,8 @@ definitions:\n         \"$ref\": \"#/definitions/ArchivalStatus\"\n       hasMicroarrayData:\n         type: boolean\n+      hasFitbitData:\n+        \"$ref\": \"#/definitions/CdrFitBitData\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4386b36b68920ca01da1f8a0a2a050857591467"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzgxMzE0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbCdrVersion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTozMToxMVrOHyARZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTozMToxMVrOHyARZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5NTMwMw==", "bodyText": "This can be type: boolean", "url": "https://github.com/all-of-us/workbench/pull/4280#discussion_r522195303", "createdAt": "2020-11-12T15:31:11Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbCdrVersion.java", "diffHunk": "@@ -30,6 +31,7 @@\n   private String cdrDbName;\n   private String elasticIndexBaseName;\n   private String microarrayBigqueryDataset;\n+  private Short hasFitbitData;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4386b36b68920ca01da1f8a0a2a050857591467"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MzgxNzM2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbStorageEnums.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTozMjowMlrOHyAT-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0MDowNVrOHyUtGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5NTk2Mw==", "bodyText": "If we use type boolean, there is not need for these mthods.", "url": "https://github.com/all-of-us/workbench/pull/4280#discussion_r522195963", "createdAt": "2020-11-12T15:32:02Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbStorageEnums.java", "diffHunk": "@@ -207,6 +208,21 @@ public static Short dataAccessLevelToStorage(DataAccessLevel level) {\n     return CLIENT_TO_STORAGE_DATA_ACCESS_LEVEL.get(level);\n   }\n \n+  // Cdr has Fitbit\n+  private static final BiMap<CdrFitBitData, Short> CLIENT_TO_STORAGE_FITBIT =\n+      ImmutableBiMap.<CdrFitBitData, Short>builder()\n+          .put(CdrFitBitData.FALSE, (short) 0)\n+          .put(CdrFitBitData.TRUE, (short) 1)\n+          .build();\n+\n+  public static CdrFitBitData cdrFitBitDataFromStorage(Short level) {\n+    return CLIENT_TO_STORAGE_FITBIT.inverse().get(level);\n+  }\n+\n+  public static Short cdrFitBitDataToStorage(CdrFitBitData level) {\n+    return CLIENT_TO_STORAGE_FITBIT.get(level);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4386b36b68920ca01da1f8a0a2a050857591467"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUzMDA3Mw==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/4280#discussion_r522530073", "createdAt": "2020-11-13T00:40:05Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbStorageEnums.java", "diffHunk": "@@ -207,6 +208,21 @@ public static Short dataAccessLevelToStorage(DataAccessLevel level) {\n     return CLIENT_TO_STORAGE_DATA_ACCESS_LEVEL.get(level);\n   }\n \n+  // Cdr has Fitbit\n+  private static final BiMap<CdrFitBitData, Short> CLIENT_TO_STORAGE_FITBIT =\n+      ImmutableBiMap.<CdrFitBitData, Short>builder()\n+          .put(CdrFitBitData.FALSE, (short) 0)\n+          .put(CdrFitBitData.TRUE, (short) 1)\n+          .build();\n+\n+  public static CdrFitBitData cdrFitBitDataFromStorage(Short level) {\n+    return CLIENT_TO_STORAGE_FITBIT.inverse().get(level);\n+  }\n+\n+  public static Short cdrFitBitDataToStorage(CdrFitBitData level) {\n+    return CLIENT_TO_STORAGE_FITBIT.get(level);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE5NTk2Mw=="}, "originalCommit": {"oid": "d4386b36b68920ca01da1f8a0a2a050857591467"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3732, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}