{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODIyOTM0", "number": 4125, "title": "[RW-5409][risk=no] Dynamic sidebar runtime icon state", "bodyText": "Unfortunately cannot upload video files, but they have been shared with UX and Product\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-10-06T20:41:03Z", "url": "https://github.com/all-of-us/workbench/pull/4125", "merged": true, "mergeCommit": {"oid": "6f963463f26d137c0d7ca9f6dc29033bad9e86f5"}, "closed": true, "closedAt": "2020-10-08T21:08:00Z", "author": {"login": "als364"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQBTVlgFqTUwMzQyMjkzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQnzeqgFqTUwNTE1MDQxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDIyOTM2", "url": "https://github.com/all-of-us/workbench/pull/4125#pullrequestreview-503422936", "createdAt": "2020-10-06T23:15:10Z", "commit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzoxNToxMFrOHddHCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo0OTo0MlrOHddwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0NzY4OQ==", "bodyText": "nit: probably time to start wrapping these to one per line", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500647689", "createdAt": "2020-10-06T23:15:10Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/help-sidebar.tsx", "diffHunk": "@@ -316,7 +332,7 @@ interface State {\n   showCriteria: boolean;\n   tooltipId: number;\n }\n-export const HelpSidebar = fp.flow(withCurrentWorkspace(), withUserProfile(), withCurrentCohortCriteria())(\n+export const HelpSidebar = fp.flow(withCurrentWorkspace(), withUserProfile(), withCurrentCohortCriteria(), withStore(currentRuntimeStore, 'runtimeStore'))(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0OTE1Nw==", "bodyText": "nit: maybe nest these as was done from some of the otheruse-case specific colors:\nruntimeStatus: {\n  running: ...\n}", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500649157", "createdAt": "2020-10-06T23:20:05Z", "author": {"login": "calbach"}, "path": "ui/src/app/styles/colors.ts", "diffHunk": "@@ -33,7 +33,13 @@ export default {\n     'READER': '#8F8E8F',\n     'WRITER': '#92B572'\n   },\n-  chartColors: ['#216FB4', '#6CACE4', '#8BC990', '#F8C954', '#F7981C', '#F0718B', '#F38D7A', '#A27DB7', '#CAB2D6']\n+  chartColors: ['#216FB4', '#6CACE4', '#8BC990', '#F8C954', '#F7981C', '#F0718B', '#F38D7A', '#A27DB7', '#CAB2D6'],\n+  // High-contrast colors for runtime status icon\n+  runtimeStarting: '#9FFF00',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY0OTQ1MQ==", "bodyText": "opt_nit: !! is redundant here", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500649451", "createdAt": "2020-10-06T23:21:08Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/leo-runtime-initializer.spec.tsx", "diffHunk": "@@ -136,7 +136,7 @@ describe('RuntimeInitializer', () => {\n       {status: RuntimeStatus.Running}\n     ]);\n     const statuses = [];\n-    await runInitializerAndTimers({onStatusUpdate: (status) => statuses.push(status)});\n+    await runInitializerAndTimers({onPollCycleComplete: (runtime) => statuses.push(!!runtime ? runtime.status : null)});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1MDgwNQ==", "bodyText": "nit: I'd prefer onUpdate or onPoll. Including the word complete indicates to me some degree of finality, as in this only runs once the poll cycle has fully complete.\nThat said, perhaps this change is no longer necessary given the approach we reached during the mobbing session - and is implemented in Pete's PR: https://github.com/all-of-us/workbench/pull/4100/files#diff-ebc3f186ce4c82a34bb3588490435f21R154", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500650805", "createdAt": "2020-10-06T23:25:43Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/leo-runtime-initializer.tsx", "diffHunk": "@@ -68,7 +69,7 @@ export interface LeoRuntimeInitializerOptions {\n   workspaceNamespace: string;\n   // Callback which is called every time the runtime updates its status. When no runtime is found,\n   // the callback is called with a null value.\n-  onStatusUpdate?: (RuntimeStatus?) => void;\n+  onPollCycleComplete?: (Runtime?) => void;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1Nzc0Mw==", "bodyText": "I think the verbosity can be greatly reduced here by just pulling out status as a local var ahead of all this", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500657743", "createdAt": "2020-10-06T23:48:16Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/help-sidebar.tsx", "diffHunk": "@@ -524,15 +540,69 @@ export const HelpSidebar = fp.flow(withCurrentWorkspace(), withUserProfile(), wi\n       return !icon.page || icon.page === helpContentKey || (criteria && icon.page === 'criteria');\n     }\n \n-    displayIcon(icon, i) {\n-      const {criteria} = this.props;\n+    displayFontAwesomeIcon(icon) {\n+      const {criteria, runtimeStore} = this.props;\n \n       return <React.Fragment>\n-        {(criteria && icon.page === 'criteria') && <span data-test-id='criteria-count'\n-                                                         style={styles.criteriaCount}>\n-          {criteria.length}</span>}\n-            <FontAwesomeIcon data-test-id={'help-sidebar-icon-' + icon.id} icon={icon.faIcon} style={icon.style} />\n-          </React.Fragment> ;\n+        {(criteria && icon.page === 'criteria') &&\n+          <span data-test-id='criteria-count' style={styles.criteriaCount}>\n+            {criteria.length}\n+          </span>\n+        }\n+        <FontAwesomeIcon data-test-id={'help-sidebar-icon-' + icon.id} icon={icon.faIcon} style={icon.style} />\n+      </React.Fragment> ;\n+    }\n+\n+    displayRuntimeIcon(icon) {\n+      const {runtimeStore} = this.props;\n+\n+      return <FlexRow style={{height: '100%', alignItems: 'center', justifyContent: 'space-around'}}>\n+        <img data-test-id={'help-sidebar-icon-' + icon.id} src={proIcons[icon.id]} style={{...icon.style, position: 'absolute'}} />\n+        {\n+          runtimeStore.currentRuntime\n+          && (\n+              runtimeStore.currentRuntime.status === RuntimeStatus.Creating", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1ODIyNg==", "bodyText": "Can you put a comment here to explain the scope of this big conditional, and specifically what should happen if we see a status which is not covered here? My understanding is that the icon above is always shown, and then there may optionally be a status indicator shown as an overlay.", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r500658226", "createdAt": "2020-10-06T23:49:42Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/help-sidebar.tsx", "diffHunk": "@@ -524,15 +540,69 @@ export const HelpSidebar = fp.flow(withCurrentWorkspace(), withUserProfile(), wi\n       return !icon.page || icon.page === helpContentKey || (criteria && icon.page === 'criteria');\n     }\n \n-    displayIcon(icon, i) {\n-      const {criteria} = this.props;\n+    displayFontAwesomeIcon(icon) {\n+      const {criteria, runtimeStore} = this.props;\n \n       return <React.Fragment>\n-        {(criteria && icon.page === 'criteria') && <span data-test-id='criteria-count'\n-                                                         style={styles.criteriaCount}>\n-          {criteria.length}</span>}\n-            <FontAwesomeIcon data-test-id={'help-sidebar-icon-' + icon.id} icon={icon.faIcon} style={icon.style} />\n-          </React.Fragment> ;\n+        {(criteria && icon.page === 'criteria') &&\n+          <span data-test-id='criteria-count' style={styles.criteriaCount}>\n+            {criteria.length}\n+          </span>\n+        }\n+        <FontAwesomeIcon data-test-id={'help-sidebar-icon-' + icon.id} icon={icon.faIcon} style={icon.style} />\n+      </React.Fragment> ;\n+    }\n+\n+    displayRuntimeIcon(icon) {\n+      const {runtimeStore} = this.props;\n+\n+      return <FlexRow style={{height: '100%', alignItems: 'center', justifyContent: 'space-around'}}>\n+        <img data-test-id={'help-sidebar-icon-' + icon.id} src={proIcons[icon.id]} style={{...icon.style, position: 'absolute'}} />\n+        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd9abb23c8933d4fcbe6fdd649c81892d95b136e"}, "originalPosition": 105}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f52d344c2fd498dbf0fbaa7b491237801ea447e", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/7f52d344c2fd498dbf0fbaa7b491237801ea447e", "committedDate": "2020-10-07T19:12:01Z", "message": "feedback"}, "afterCommit": {"oid": "1b12c53bc1bdca54783c7709a9c1e5f1adb54acd", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1b12c53bc1bdca54783c7709a9c1e5f1adb54acd", "committedDate": "2020-10-07T20:44:42Z", "message": "feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTIzNjAw", "url": "https://github.com/all-of-us/workbench/pull/4125#pullrequestreview-505123600", "createdAt": "2020-10-08T20:02:31Z", "commit": {"oid": "5938cb56c8c97958ea2739f3fbf7f19378eab02c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMDowMjozMVrOHeubvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMDowMjozMVrOHeubvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MDA5NQ==", "bodyText": "We don't use this prop, and I could get rid of it, but it would just cause more merge conflicts for #4100 to deal with.", "url": "https://github.com/all-of-us/workbench/pull/4125#discussion_r501980095", "createdAt": "2020-10-08T20:02:31Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -49,208 +41,121 @@ const styles = reactStyles({\n \n const defaultMachineType = allMachineTypes.find(({name}) => name === 'n1-standard-4');\n \n-const ActiveRuntimeOp = ({operation, workspaceNamespace}) => {\n-  return <React.Fragment>\n-    <h3 style={styles.sectionHeader}>Active Runtime Operations</h3>\n-    <FlexRow style={{'alignItems': 'center'}}>\n-      <span style={{'marginRight': '1rem'}}>\n-        {operation} in progress\n-      </span>\n-      <Button\n-          onClick={() => abortRuntimeOperationForWorkspace(workspaceNamespace)}\n-          data-test-id='active-runtime-operation'\n-      >\n-        Cancel\n-      </Button>\n-    </FlexRow>\n-  </React.Fragment>;\n-};\n-\n export interface Props {\n-  runtimeOps: RuntimeOpsStore;\n   workspace: WorkspaceData;\n }\n \n-interface State {\n-  // Whether the initial runtime load is still in progress.\n-  loading: boolean;\n-  // Whether there was an error in loading the runtime data.\n-  error: boolean;\n-  // The runtime. null if none exists, or if there was an error in loading the\n-  // runtime.\n-  runtime: Runtime|null;\n-}\n-\n-export const RuntimePanel = fp.flow(withCurrentWorkspace(), withStore(runtimeOpsStore, 'runtimeOps'))(\n-  class extends React.Component<Props, State> {\n-    private aborter = new AbortController();\n-\n-    constructor(props: Props) {\n-      super(props);\n-      this.state = {\n-        loading: true,\n-        error: false,\n-        runtime: null\n-      };\n-    }\n-\n-    async componentDidMount() {\n-      // TODO(RW-5420): Centralize a runtimeStore.\n-      let runtime = null;\n-      let error = false;\n-      try {\n-        const promise = runtimeApi().getRuntime(this.props.workspace.namespace, {signal: this.aborter.signal});\n-        updateRuntimeOpsStoreForWorkspaceNamespace(this.props.workspace.namespace, {\n-          promise: promise,\n-          operation: 'get',\n-          aborter: this.aborter\n-        });\n-        runtime = await promise;\n-      } catch (e) {\n-        // 404 is expected if the runtime doesn't exist, represent this as a null\n-        // runtime rather than an error mode.\n-        if (e.status !== 404) {\n-          error = true;\n-        }\n-      }\n-      markRuntimeOperationCompleteForWorkspace(this.props.workspace.namespace);\n-      this.setState({\n-        runtime,\n-        error,\n-        loading: false\n-      });\n-    }\n-\n-    render() {\n-      const {runtimeOps, workspace} = this.props;\n-      const {loading, error, runtime} = this.state;\n-\n-      const activeRuntimeOp: RuntimeOperation = runtimeOps.opsByWorkspaceNamespace[workspace.namespace];\n-\n-      if (loading) {\n-        return <Spinner style={{width: '100%', marginTop: '5rem'}}/>;\n-      } else if (error) {\n-        return <div>Error loading compute configuration</div>;\n-      } else if (!runtime) {\n-        // TODO(RW-5591): Create runtime page goes here.\n-        return <React.Fragment>\n-          <div>No runtime exists yet</div>\n-          {activeRuntimeOp && <hr/>}\n-          {activeRuntimeOp && <div>\n-            <ActiveRuntimeOp operation={activeRuntimeOp.operation} workspaceNamespace={workspace.namespace}/>\n-          </div>}\n-        </React.Fragment>;\n-      }\n+export const RuntimePanel = withCurrentWorkspace()(({workspace}) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5938cb56c8c97958ea2739f3fbf7f19378eab02c"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "949236ad828f662ee19d07490e910342ddce8f31", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/949236ad828f662ee19d07490e910342ddce8f31", "committedDate": "2020-10-08T20:21:08Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d8ea378ada961bf64b8d664cc3bec7918b710bc", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/7d8ea378ada961bf64b8d664cc3bec7918b710bc", "committedDate": "2020-10-08T20:21:08Z", "message": "shelving, again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "591561b1fb6f1487f67a1c1755a151063992a414", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/591561b1fb6f1487f67a1c1755a151063992a414", "committedDate": "2020-10-08T20:21:08Z", "message": "simplify"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9381a921de55222ddd8d9abfa8a32d5ed3a61849", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/9381a921de55222ddd8d9abfa8a32d5ed3a61849", "committedDate": "2020-10-08T20:21:08Z", "message": "it moves"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b70c6eebc591041572e6ddfc3a0572d1aa0e9c4d", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/b70c6eebc591041572e6ddfc3a0572d1aa0e9c4d", "committedDate": "2020-10-08T20:21:08Z", "message": "feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ee5699ac2846d810f61a95fd1edb8f7586d56a1", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/0ee5699ac2846d810f61a95fd1edb8f7586d56a1", "committedDate": "2020-10-08T20:21:08Z", "message": "remove redundant state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2d504fdf413d108fd637526e05ab04ae9549912", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/e2d504fdf413d108fd637526e05ab04ae9549912", "committedDate": "2020-10-08T20:21:08Z", "message": "why doesn't terminal know when it should have focus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "514293fe3f0834de5f5b9c1eec558fbec02e740f", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/514293fe3f0834de5f5b9c1eec558fbec02e740f", "committedDate": "2020-10-08T20:21:08Z", "message": "shelving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "239ad3adf04d8a1ea2504fef62a6d76781a492f3", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/239ad3adf04d8a1ea2504fef62a6d76781a492f3", "committedDate": "2020-10-08T20:21:08Z", "message": "TESTS"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c416c40f4e4fb309473a35b07c54ad00323b2aff", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/c416c40f4e4fb309473a35b07c54ad00323b2aff", "committedDate": "2020-10-08T20:21:09Z", "message": "dryerful o' lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe3520f8b94363ef60cca21c3a4d70f1b0c8fd7", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/bfe3520f8b94363ef60cca21c3a4d70f1b0c8fd7", "committedDate": "2020-10-08T20:21:09Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63d37e9f92b2af5aa8f3d204eee2a9bf00765fd9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/63d37e9f92b2af5aa8f3d204eee2a9bf00765fd9", "committedDate": "2020-10-08T20:21:09Z", "message": "angular tests, my mortal enemy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56ae24f0c176cea2830759cd58dff30b83d4fe4b", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/56ae24f0c176cea2830759cd58dff30b83d4fe4b", "committedDate": "2020-10-08T20:19:20Z", "message": "angular tests, my mortal enemy"}, "afterCommit": {"oid": "63d37e9f92b2af5aa8f3d204eee2a9bf00765fd9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/63d37e9f92b2af5aa8f3d204eee2a9bf00765fd9", "committedDate": "2020-10-08T20:21:09Z", "message": "angular tests, my mortal enemy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f115e46c6da87707673f56279c270dcfc48343", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/e9f115e46c6da87707673f56279c270dcfc48343", "committedDate": "2020-10-08T20:30:14Z", "message": "linting with an electron microscope"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTUwNDE0", "url": "https://github.com/all-of-us/workbench/pull/4125#pullrequestreview-505150414", "createdAt": "2020-10-08T20:42:33Z", "commit": {"oid": "e9f115e46c6da87707673f56279c270dcfc48343"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3910, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}