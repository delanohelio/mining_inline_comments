{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTA1NzYx", "number": 3698, "title": "[risk=no] 404 instead of 500 for user not found", "bodyText": "Description:\nNo ticket.  Friendlier response when a user name is not found.\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-06-22T18:22:08Z", "url": "https://github.com/all-of-us/workbench/pull/3698", "merged": true, "mergeCommit": {"oid": "02b14efad4703ab316d486b17fcd5cc54d219912"}, "closed": true, "closedAt": "2020-06-22T19:37:33Z", "author": {"login": "jmthibault79"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct0-HVgH2gAyNDM4MTA1NzYxOjkyODNhNzA5NTg0NjgxYjkzYzg5NDdjZTUwNTFiZDg0YzNmZDU0ZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct1-dgAH2gAyNDM4MTA1NzYxOjdhNzJlZWRiYzhkM2M4MmM5N2U4NDAzNGJjOGRkZGQwMWYxMjc0NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9283a709584681b93c8947ce5051bd84c3fd54ed", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9283a709584681b93c8947ce5051bd84c3fd54ed", "committedDate": "2020-06-22T18:15:35Z", "message": "Check for user not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/064574f930f3f01acb4cac6f7833fd0f9a8430ed", "committedDate": "2020-06-22T18:23:30Z", "message": "rv not necessary update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTk4NjU1", "url": "https://github.com/all-of-us/workbench/pull/3698#pullrequestreview-435198655", "createdAt": "2020-06-22T19:06:57Z", "commit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowNjo1N1rOGnNb-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToxOVrOGnNgVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2NzgwMg==", "bodyText": "nit: Since you do this three times, I'd make a little helper method like getDbUser() so these methods are shorter.", "url": "https://github.com/all-of-us/workbench/pull/3698#discussion_r443767802", "createdAt": "2020-06-22T19:06:57Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -598,7 +598,10 @@ private void checkUserCreationNonce(DbUser user, String nonce) {\n       UpdateContactEmailRequest updateContactEmailRequest) {\n     String username = updateContactEmailRequest.getUsername().toLowerCase();\n     com.google.api.services.directory.model.User googleUser = directoryService.getUser(username);\n-    DbUser user = userDao.findUserByUsername(username);\n+    DbUser user =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2ODkxNw==", "bodyText": "super-nit, but we could centralize the not found error message function and exception function somewhere, like on the suer service, so it'd be .orElseThrow(() -> userNotFoundEx(username)) and all the messages would match.\nMaybe a job for an Exceptions utility class.", "url": "https://github.com/all-of-us/workbench/pull/3698#discussion_r443768917", "createdAt": "2020-06-22T19:09:19Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -598,7 +598,10 @@ private void checkUserCreationNonce(DbUser user, String nonce) {\n       UpdateContactEmailRequest updateContactEmailRequest) {\n     String username = updateContactEmailRequest.getUsername().toLowerCase();\n     com.google.api.services.directory.model.User googleUser = directoryService.getUser(username);\n-    DbUser user = userDao.findUserByUsername(username);\n+    DbUser user =\n+        userService\n+            .getByUsername(username)\n+            .orElseThrow(() -> new NotFoundException(\"User '\" + username + \"' not found\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a72eedbc8d3c82c97e84034bc8dddd01f127446", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/7a72eedbc8d3c82c97e84034bc8dddd01f127446", "committedDate": "2020-06-22T19:25:52Z", "message": "userService.getByUsernameOrThrow()"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4597, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}