{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODc4MTAw", "number": 4005, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDowNjowNFrOEjXm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxMjowMFrOEjXrDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTIyNDA0OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/cdr/dao/CBCriteriaDaoTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDowNjowNFrOHRrvPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoyMzo1MlrOHRsDNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNDQ0NA==", "bodyText": "Should we also add a negative test say if itemCount is null?", "url": "https://github.com/all-of-us/workbench/pull/4005#discussion_r488304444", "createdAt": "2020-09-15T00:06:04Z", "author": {"login": "NehaBroad"}, "path": "api/src/test/java/org/pmiops/workbench/cdr/dao/CBCriteriaDaoTest.java", "diffHunk": "@@ -365,4 +366,84 @@ public void findMenuOptions() {\n     assertThat(option9.getType()).isEqualTo(\"PPI\");\n     assertThat(option9.getStandard()).isFalse();\n   }\n+\n+  @Test\n+  public void findSurveyVersionByQuestionConceptId() {\n+    jdbcTemplate.execute(\n+        \"create table cb_survey_version(survey_id integer, concept_id integer, version varchar(50), display_order integer)\");\n+    jdbcTemplate.execute(\n+        \"create table cb_survey_attribute(id integer, question_concept_id integer, answer_concept_id integer, survey_id integer, item_count integer)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (100, 1333342, 'May 2020', 1)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (101, 1333342, 'June 2020', 2)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (102, 1333342, 'July 2020', 3)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (1, 715713, 0, 100, 291)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (2, 715713, 0, 101, 148)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (3, 715713, 0, 102, 150)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (4, 715713, 903096, 100, 154)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (5, 715713, 903096, 101, 82)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (6, 715713, 903096, 102, 31)\");\n+    List<DbSurveyVersion> dbSurveyVersions =\n+        cbCriteriaDao.findSurveyVersionByQuestionConceptId(1333342L, 715713L);\n+    assertThat(dbSurveyVersions).hasSize(3);\n+    assertThat(dbSurveyVersions.get(0).getSurveyId()).isEqualTo(100);\n+    assertThat(dbSurveyVersions.get(0).getVersion()).isEqualTo(\"May 2020\");\n+    assertThat(dbSurveyVersions.get(0).getItemCount()).isEqualTo(445);\n+    assertThat(dbSurveyVersions.get(1).getSurveyId()).isEqualTo(101);\n+    assertThat(dbSurveyVersions.get(1).getVersion()).isEqualTo(\"June 2020\");\n+    assertThat(dbSurveyVersions.get(1).getItemCount()).isEqualTo(230);\n+    assertThat(dbSurveyVersions.get(2).getSurveyId()).isEqualTo(102);\n+    assertThat(dbSurveyVersions.get(2).getVersion()).isEqualTo(\"July 2020\");\n+    assertThat(dbSurveyVersions.get(2).getItemCount()).isEqualTo(181);\n+    jdbcTemplate.execute(\"drop table cb_survey_version\");\n+    jdbcTemplate.execute(\"drop table cb_survey_attribute\");\n+  }\n+\n+  @Test\n+  public void findSurveyVersionByQuestionConceptIdAndAnswerConceptId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b80ca6d2fd13a56d2ff4924ea92d1f3f1f93877c"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwOTU1Ng==", "bodyText": "nvm i am assuming itemCount will have nullable=false constraint", "url": "https://github.com/all-of-us/workbench/pull/4005#discussion_r488309556", "createdAt": "2020-09-15T00:23:52Z", "author": {"login": "NehaBroad"}, "path": "api/src/test/java/org/pmiops/workbench/cdr/dao/CBCriteriaDaoTest.java", "diffHunk": "@@ -365,4 +366,84 @@ public void findMenuOptions() {\n     assertThat(option9.getType()).isEqualTo(\"PPI\");\n     assertThat(option9.getStandard()).isFalse();\n   }\n+\n+  @Test\n+  public void findSurveyVersionByQuestionConceptId() {\n+    jdbcTemplate.execute(\n+        \"create table cb_survey_version(survey_id integer, concept_id integer, version varchar(50), display_order integer)\");\n+    jdbcTemplate.execute(\n+        \"create table cb_survey_attribute(id integer, question_concept_id integer, answer_concept_id integer, survey_id integer, item_count integer)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (100, 1333342, 'May 2020', 1)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (101, 1333342, 'June 2020', 2)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_version(survey_id, concept_id, version, display_order) values (102, 1333342, 'July 2020', 3)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (1, 715713, 0, 100, 291)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (2, 715713, 0, 101, 148)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (3, 715713, 0, 102, 150)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (4, 715713, 903096, 100, 154)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (5, 715713, 903096, 101, 82)\");\n+    jdbcTemplate.execute(\n+        \"insert into cb_survey_attribute(id, question_concept_id, answer_concept_id, survey_id, item_count) values (6, 715713, 903096, 102, 31)\");\n+    List<DbSurveyVersion> dbSurveyVersions =\n+        cbCriteriaDao.findSurveyVersionByQuestionConceptId(1333342L, 715713L);\n+    assertThat(dbSurveyVersions).hasSize(3);\n+    assertThat(dbSurveyVersions.get(0).getSurveyId()).isEqualTo(100);\n+    assertThat(dbSurveyVersions.get(0).getVersion()).isEqualTo(\"May 2020\");\n+    assertThat(dbSurveyVersions.get(0).getItemCount()).isEqualTo(445);\n+    assertThat(dbSurveyVersions.get(1).getSurveyId()).isEqualTo(101);\n+    assertThat(dbSurveyVersions.get(1).getVersion()).isEqualTo(\"June 2020\");\n+    assertThat(dbSurveyVersions.get(1).getItemCount()).isEqualTo(230);\n+    assertThat(dbSurveyVersions.get(2).getSurveyId()).isEqualTo(102);\n+    assertThat(dbSurveyVersions.get(2).getVersion()).isEqualTo(\"July 2020\");\n+    assertThat(dbSurveyVersions.get(2).getItemCount()).isEqualTo(181);\n+    jdbcTemplate.execute(\"drop table cb_survey_version\");\n+    jdbcTemplate.execute(\"drop table cb_survey_attribute\");\n+  }\n+\n+  @Test\n+  public void findSurveyVersionByQuestionConceptIdAndAnswerConceptId() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNDQ0NA=="}, "originalCommit": {"oid": "b80ca6d2fd13a56d2ff4924ea92d1f3f1f93877c"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTIzNDY5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/cdr/dao/CBCriteriaDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxMjowMFrOHRr1fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNDoyODo1M1rOHSEtyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjA0Nw==", "bodyText": "Question: here we have sum(csa.item_count) vs just returning csa.item_count in method findSurveyVersionByQuestionConceptIdAndAnswerConceptId ,\nIs it because  for findSurveyVersionByQuestionConceptId,  its aggregating the item_count of all answers for question_id passed?", "url": "https://github.com/all-of-us/workbench/pull/4005#discussion_r488306047", "createdAt": "2020-09-15T00:12:00Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/cdr/dao/CBCriteriaDao.java", "diffHunk": "@@ -249,4 +250,35 @@\n           \"select distinct domain_id as domain, type, is_standard as standard from cb_criteria order by domain, type, is_standard\",\n       nativeQuery = true)\n   List<DbMenuOption> findMenuOptions();\n+\n+  @Query(\n+      value =\n+          \"select surveyId, version, itemCount from( \"\n+              + \"select csv.survey_id as surveyId, csv.version as version, sum(csa.item_count) as itemCount, csv.display_order \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b80ca6d2fd13a56d2ff4924ea92d1f3f1f93877c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODcxMzY3Mg==", "bodyText": "correct.", "url": "https://github.com/all-of-us/workbench/pull/4005#discussion_r488713672", "createdAt": "2020-09-15T14:28:53Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/cdr/dao/CBCriteriaDao.java", "diffHunk": "@@ -249,4 +250,35 @@\n           \"select distinct domain_id as domain, type, is_standard as standard from cb_criteria order by domain, type, is_standard\",\n       nativeQuery = true)\n   List<DbMenuOption> findMenuOptions();\n+\n+  @Query(\n+      value =\n+          \"select surveyId, version, itemCount from( \"\n+              + \"select csv.survey_id as surveyId, csv.version as version, sum(csa.item_count) as itemCount, csv.display_order \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjA0Nw=="}, "originalCommit": {"oid": "b80ca6d2fd13a56d2ff4924ea92d1f3f1f93877c"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4083, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}