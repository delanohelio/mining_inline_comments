{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTA1NzYx", "number": 3698, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowNjo1N1rOEHshDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToxOVrOEHsjoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTA0ODQ2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowNjo1N1rOGnNb-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowNjo1N1rOGnNb-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2NzgwMg==", "bodyText": "nit: Since you do this three times, I'd make a little helper method like getDbUser() so these methods are shorter.", "url": "https://github.com/all-of-us/workbench/pull/3698#discussion_r443767802", "createdAt": "2020-06-22T19:06:57Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -598,7 +598,10 @@ private void checkUserCreationNonce(DbUser user, String nonce) {\n       UpdateContactEmailRequest updateContactEmailRequest) {\n     String username = updateContactEmailRequest.getUsername().toLowerCase();\n     com.google.api.services.directory.model.User googleUser = directoryService.getUser(username);\n-    DbUser user = userDao.findUserByUsername(username);\n+    DbUser user =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTA1NTA1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToxOVrOGnNgVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTowOToxOVrOGnNgVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc2ODkxNw==", "bodyText": "super-nit, but we could centralize the not found error message function and exception function somewhere, like on the suer service, so it'd be .orElseThrow(() -> userNotFoundEx(username)) and all the messages would match.\nMaybe a job for an Exceptions utility class.", "url": "https://github.com/all-of-us/workbench/pull/3698#discussion_r443768917", "createdAt": "2020-06-22T19:09:19Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -598,7 +598,10 @@ private void checkUserCreationNonce(DbUser user, String nonce) {\n       UpdateContactEmailRequest updateContactEmailRequest) {\n     String username = updateContactEmailRequest.getUsername().toLowerCase();\n     com.google.api.services.directory.model.User googleUser = directoryService.getUser(username);\n-    DbUser user = userDao.findUserByUsername(username);\n+    DbUser user =\n+        userService\n+            .getByUsername(username)\n+            .orElseThrow(() -> new NotFoundException(\"User '\" + username + \"' not found\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "064574f930f3f01acb4cac6f7833fd0f9a8430ed"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2553, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}