{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyODc1NzY5", "number": 3000, "title": "[no ticket][risk=no] Did I say Attachments? I meant Tags.", "bodyText": "In coming and going on my previous branch, I formed a memory in my head validating that the attachments I was using were being reflected in Stackdriver. It turns out that that's doubly not working: attachments don't support my use case and the Stackdriver exporter doesn't support exporting attachments.\nLuckily, changing to Tags wasn't too bad. It's a bit irksome because you have to commit to your labels (tags) when creating your metrics. I'm researching the best way to establish things, whether separately through the API or in our Java code.\nI added some utilities to workbench-devops for clearing out old metrics. They die after the retention period ends, but in the meantime they really clutter things up.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-01-14T22:49:50Z", "url": "https://github.com/all-of-us/workbench/pull/3000", "merged": true, "mergeCommit": {"oid": "bf35e5af1afd283fc16889400ea14f1ccd80bb1e"}, "closed": true, "closedAt": "2020-01-15T22:59:28Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6U9jMAH2gAyMzYyODc1NzY5OmRhOGE3MjVmMDU5OTc3NzAxOGFkNGJmOGVmMTRiY2I3NGYzODAyNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6tpRugFqTM0MzU3NjAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da8a725f0599777018ad4bf8ef14bcb74f380262", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/da8a725f0599777018ad4bf8ef14bcb74f380262", "committedDate": "2020-01-14T18:07:52Z", "message": "cleaning some things up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2607b3d80c59dbaa905ce7da8cb015b4ac4e135", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c2607b3d80c59dbaa905ce7da8cb015b4ac4e135", "committedDate": "2020-01-14T20:17:44Z", "message": "more fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f35c8f5ee2594fda1f1752ac591ff2f11d38595", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/6f35c8f5ee2594fda1f1752ac591ff2f11d38595", "committedDate": "2020-01-14T21:47:44Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9805b747141f43e7ec5be4b8e06c6c4eec7e99d5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9805b747141f43e7ec5be4b8e06c6c4eec7e99d5", "committedDate": "2020-01-14T22:26:06Z", "message": "make string format thinner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd1a1ad35ab1c54753ad36947f640dea9432dbf", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7dd1a1ad35ab1c54753ad36947f640dea9432dbf", "committedDate": "2020-01-14T22:26:33Z", "message": "restore logging level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "414905cd08fe8154f83451638aef23032c63f55e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/414905cd08fe8154f83451638aef23032c63f55e", "committedDate": "2020-01-14T23:18:44Z", "message": "Fox in mocks our game is done sir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9020032cc65f7e0fed788de49c36e3b80a015d5b", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9020032cc65f7e0fed788de49c36e3b80a015d5b", "committedDate": "2020-01-15T02:30:34Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be70469b636474e31867c108b5c8cd7b86d103eb", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/be70469b636474e31867c108b5c8cd7b86d103eb", "committedDate": "2020-01-15T17:05:46Z", "message": "merge master && switch set to list to match view.create signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4", "committedDate": "2020-01-15T17:47:17Z", "message": "test tweak"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTc2MDM3", "url": "https://github.com/all-of-us/workbench/pull/3000#pullrequestreview-343576037", "createdAt": "2020-01-15T22:51:20Z", "commit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MToyMFrOFeJBPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMjo1MToyMFrOFeJBPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE0OTM3NA==", "bodyText": "Everything else was incremented to _2, but this was incremented to _3. Who should know about why this metric is different from all the others?", "url": "https://github.com/all-of-us/workbench/pull/3000#discussion_r367149374", "createdAt": "2020-01-15T22:51:20Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/monitoring/views/GaugeMetric.java", "diffHunk": "@@ -1,72 +1,60 @@\n package org.pmiops.workbench.monitoring.views;\n \n-import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.ImmutableList;\n import io.opencensus.stats.Aggregation;\n+import io.opencensus.stats.Aggregation.LastValue;\n import io.opencensus.stats.Measure.MeasureLong;\n-import io.opencensus.tags.TagKey;\n import java.util.Collections;\n import java.util.List;\n-import java.util.Set;\n-import org.pmiops.workbench.monitoring.attachments.Attachment;\n+import org.pmiops.workbench.monitoring.attachments.MetricLabel;\n \n public enum GaugeMetric implements Metric {\n   BILLING_BUFFER_PROJECT_COUNT(\n       \"billing_buffer_project_count\",\n       \"Number of projects in the billing buffer for each status\",\n-      ImmutableSet.of(Attachment.BUFFER_ENTRY_STATUS)),\n-  COHORT_COUNT(\"cohort_count\", \"Count of all cohorts in existence\"),\n-  COHORT_REVIEW_COUNT(\"cohort_review_count\", \"Total number of cohort reviews in existence\"),\n+      ImmutableList.of(MetricLabel.BUFFER_ENTRY_STATUS)),\n+  COHORT_COUNT(\"cohort_count_2\", \"Count of all cohorts in existence\"),\n+  COHORT_REVIEW_COUNT(\"cohort_review_count_2\", \"Total number of cohort reviews in existence\"),\n   DATASET_COUNT(\n-      \"dataset_count\",\n+      \"dataset_count_2\",\n       \"Count of all datasets in existence\",\n-      Collections.singleton(Attachment.DATASET_INVALID)),\n+      ImmutableList.of(MetricLabel.DATASET_INVALID)),\n   USER_COUNT(\n-      \"user_count\",\n+      \"user_count_2\",\n       \"total number of users\",\n-      ImmutableSet.of(\n-          Attachment.USER_BYPASSED_BETA, Attachment.USER_DISABLED, Attachment.DATA_ACCESS_LEVEL)),\n+      ImmutableList.of(\n+          MetricLabel.USER_BYPASSED_BETA,\n+          MetricLabel.USER_DISABLED,\n+          MetricLabel.DATA_ACCESS_LEVEL)),\n   WORKSPACE_COUNT(\n-      \"workspace_count\",\n+      \"workspace_count_3\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3669, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}