{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NDY4NTk2", "number": 3926, "title": "[RW-4847][RW-5405][risk=low] s/cluster/runtime/, API edition", "bodyText": "(part 1 of ??)\n\nSwitch all Leo backend interactions to use the new Runtime APIs, these are functionally similar, but support slightly different/newer capabilities\n\nException: createCluster is still used, blocked on https://broadworkbench.atlassian.net/browse/IA-2167\n\n\nReplace internal code references to \"clusters\" with \"runtimes\"\nFork Workbench notebook APIs into /clusters and /runtimes:\n\nold /cluster variants will soon be unused, they are kept around simply to ensure a smooth deployment, since removing them suddenly would be a breaking change\nNew APIs are under \"/runtimes\" and correspond to new Leo data models\nI did not fork the cron, since this config is pushed simultaneously with the binary, and it is not critical if it fails once\nI did not fork the cluster upgrade API, since that is deprecated and going away soon\n\n\nSwitched some older cluster conversion code over to mapstruct\n\nAfter this PR has been released to prod, I will send a follow-up PR to remove the /cluster endpoints.\nFollow-up PRs coming soon:\n\nswitch UI code references from cluster --> runtime\ncheck docs for references to cluster, rename\nreplace \"cluster\" in the JSON configs\nSwitch to createRuntime", "createdAt": "2020-08-27T06:00:19Z", "url": "https://github.com/all-of-us/workbench/pull/3926", "merged": true, "mergeCommit": {"oid": "3455d48d1f0de70de46d1d777304b208dd38ab78"}, "closed": true, "closedAt": "2020-09-02T01:03:17Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDbILvgFqTQ3Nzk4Mzg2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEv7OzABqjM3MTcxOTk1Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3OTgzODYy", "url": "https://github.com/all-of-us/workbench/pull/3926#pullrequestreview-477983862", "createdAt": "2020-08-28T19:43:29Z", "commit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxOTo0MzoyOVrOHJSdGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMDozNDo1NVrOHJTvJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTU5NQ==", "bodyText": "nit: runtime should be plural", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479501595", "createdAt": "2020-08-28T19:43:29Z", "author": {"login": "ericsong"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1861,19 +1861,19 @@ def describe_cluster(cmd_name, *args)\n   ServiceAccountContext.new(gcc.project).run do |ctx|\n     common = Common.new\n     common.run_inline %W{\n-       gradle manageClusters\n-      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.cluster_id}']}\n+       gradle manageLeonardoRuntimes\n+      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.runtime_id}']}\n   end\n end\n \n Common.register_command({\n-  :invocation => \"describe-cluster\",\n-  :description => \"Describe all cluster in this environment\",\n-  :fn => ->(*args) { describe_cluster(\"describe-cluster\", *args) }\n+  :invocation => \"describe-runtime\",\n+  :description => \"Describe all runtime in this environment\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxMTA3Mg==", "bodyText": "I was a bit confused since the class names are the same. Is it possible to prefix one of them like we do with DbX models?", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479511072", "createdAt": "2020-08-28T20:05:46Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/api/RuntimeController.java", "diffHunk": "@@ -120,68 +107,81 @@\n     this.userService = userService;\n     this.userRecentResourceService = userRecentResourceService;\n     this.userDao = userDao;\n+    this.leonardoMapper = leonardoMapper;\n     this.clock = clock;\n   }\n \n-  private Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> filterByClustersInList(\n-      Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> clustersToFilter,\n-      List<String> clusterNames) {\n+  private Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> filterByRuntimesInList(\n+      Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> clustersToFilter,\n+      List<String> runtimeNames) {\n     // Null means keep all clusters.\n     return clustersToFilter.filter(\n-        cluster -> clusterNames == null || clusterNames.contains(cluster.getClusterName()));\n+        cluster -> runtimeNames == null || runtimeNames.contains(cluster.getRuntimeName()));\n   }\n \n   @Override\n   @AuthorityRequired(Authority.SECURITY_ADMIN)\n   public ResponseEntity<List<ListClusterResponse>> deleteClustersInProject(\n       String billingProjectId, ListClusterDeleteRequest clusterNamesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(\n+                billingProjectId, clusterNamesToDelete.getClustersToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListClusterResponse)\n+            .collect(Collectors.toList()));\n+  }\n+\n+  @Override\n+  @AuthorityRequired(Authority.SECURITY_ADMIN)\n+  public ResponseEntity<List<ListRuntimeResponse>> deleteRuntimesInProject(\n+      String billingProjectId, ListRuntimeDeleteRequest runtimesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(billingProjectId, runtimesToDelete.getRuntimesToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListRuntimeResponse)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxODIwNA==", "bodyText": "cluster -> runtime", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479518204", "createdAt": "2020-08-28T20:23:51Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClient.java", "diffHunk": "@@ -3,47 +3,45 @@\n import java.util.List;\n import java.util.Map;\n import org.pmiops.workbench.exceptions.WorkbenchException;\n-import org.pmiops.workbench.leonardo.model.Cluster;\n-import org.pmiops.workbench.leonardo.model.ListClusterResponse;\n+import org.pmiops.workbench.leonardo.model.GetRuntimeResponse;\n+import org.pmiops.workbench.leonardo.model.ListRuntimeResponse;\n import org.pmiops.workbench.notebooks.model.StorageLink;\n \n /**\n  * Encapsulate Leonardo's Notebooks API interaction details and provide a simple/mockable interface\n  * for internal use.\n  */\n public interface LeonardoNotebooksClient {\n-  List<ListClusterResponse> listClustersByProject(String googleProject);\n-\n   /** lists all notebook clusters as the appengine SA, to be used only for admin operations */\n-  List<ListClusterResponse> listClustersByProjectAsService(String googleProject);\n+  List<ListRuntimeResponse> listRuntimesByProjectAsService(String googleProject);\n \n   /**\n    * Creates a notebooks cluster owned by the current authenticated user.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTIyOQ==", "bodyText": "cluster -> runtime", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479521229", "createdAt": "2020-08-28T20:31:17Z", "author": {"login": "ericsong"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTI3OA==", "bodyText": "cluster -> runtime", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479521278", "createdAt": "2020-08-28T20:31:26Z", "author": {"login": "ericsong"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]\n+      dateAccessed:\n+        type: string\n+        description: |\n+          The date and time the cluster was last accessed, in ISO-8601 format.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMjU5Nw==", "bodyText": "Nit - some of the Runtime classes are prefixed with Leonardo while others are not. Is there a pattern being followed?", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479522597", "createdAt": "2020-08-28T20:34:55Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/LeonardoRuntimeAuditor.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.pmiops.workbench.actionaudit.auditors;\n+\n+import java.util.List;\n+\n+public interface LeonardoRuntimeAuditor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDYzMzU4", "url": "https://github.com/all-of-us/workbench/pull/3926#pullrequestreview-478063358", "createdAt": "2020-08-28T22:55:26Z", "commit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMjo1NToyNlrOHJWaYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzowMjoyN1rOHJWgkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NjQzNQ==", "bodyText": "Thanks - fixed (actually singular, the rest of the comment was bad)", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479566435", "createdAt": "2020-08-28T22:55:26Z", "author": {"login": "calbach"}, "path": "api/libproject/devstart.rb", "diffHunk": "@@ -1861,19 +1861,19 @@ def describe_cluster(cmd_name, *args)\n   ServiceAccountContext.new(gcc.project).run do |ctx|\n     common = Common.new\n     common.run_inline %W{\n-       gradle manageClusters\n-      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.cluster_id}']}\n+       gradle manageLeonardoRuntimes\n+      -PappArgs=['describe','#{api_url}','#{gcc.project}','#{ctx.service_account}','#{op.opts.runtime_id}']}\n   end\n end\n \n Common.register_command({\n-  :invocation => \"describe-cluster\",\n-  :description => \"Describe all cluster in this environment\",\n-  :fn => ->(*args) { describe_cluster(\"describe-cluster\", *args) }\n+  :invocation => \"describe-runtime\",\n+  :description => \"Describe all runtime in this environment\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUwMTU5NQ=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NjkwNg==", "bodyText": "Done. There was an issue with generating the model name prefix, which I've filed against Swagger, but it turns out by eliminating the Swagger oneOf (as I intended to do in a later PR), we can bypass this bug. swagger-api/swagger-codegen#10442", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479566906", "createdAt": "2020-08-28T22:57:39Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/api/RuntimeController.java", "diffHunk": "@@ -120,68 +107,81 @@\n     this.userService = userService;\n     this.userRecentResourceService = userRecentResourceService;\n     this.userDao = userDao;\n+    this.leonardoMapper = leonardoMapper;\n     this.clock = clock;\n   }\n \n-  private Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> filterByClustersInList(\n-      Stream<org.pmiops.workbench.leonardo.model.ListClusterResponse> clustersToFilter,\n-      List<String> clusterNames) {\n+  private Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> filterByRuntimesInList(\n+      Stream<org.pmiops.workbench.leonardo.model.ListRuntimeResponse> clustersToFilter,\n+      List<String> runtimeNames) {\n     // Null means keep all clusters.\n     return clustersToFilter.filter(\n-        cluster -> clusterNames == null || clusterNames.contains(cluster.getClusterName()));\n+        cluster -> runtimeNames == null || runtimeNames.contains(cluster.getRuntimeName()));\n   }\n \n   @Override\n   @AuthorityRequired(Authority.SECURITY_ADMIN)\n   public ResponseEntity<List<ListClusterResponse>> deleteClustersInProject(\n       String billingProjectId, ListClusterDeleteRequest clusterNamesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(\n+                billingProjectId, clusterNamesToDelete.getClustersToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListClusterResponse)\n+            .collect(Collectors.toList()));\n+  }\n+\n+  @Override\n+  @AuthorityRequired(Authority.SECURITY_ADMIN)\n+  public ResponseEntity<List<ListRuntimeResponse>> deleteRuntimesInProject(\n+      String billingProjectId, ListRuntimeDeleteRequest runtimesToDelete) {\n+    return ResponseEntity.ok(\n+        deleteLeonardoRuntimesInProject(billingProjectId, runtimesToDelete.getRuntimesToDelete())\n+            .stream()\n+            .map(leonardoMapper::toApiListRuntimeResponse)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxMTA3Mg=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzEyNg==", "bodyText": "done", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567126", "createdAt": "2020-08-28T22:58:34Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/notebooks/LeonardoNotebooksClient.java", "diffHunk": "@@ -3,47 +3,45 @@\n import java.util.List;\n import java.util.Map;\n import org.pmiops.workbench.exceptions.WorkbenchException;\n-import org.pmiops.workbench.leonardo.model.Cluster;\n-import org.pmiops.workbench.leonardo.model.ListClusterResponse;\n+import org.pmiops.workbench.leonardo.model.GetRuntimeResponse;\n+import org.pmiops.workbench.leonardo.model.ListRuntimeResponse;\n import org.pmiops.workbench.notebooks.model.StorageLink;\n \n /**\n  * Encapsulate Leonardo's Notebooks API interaction details and provide a simple/mockable interface\n  * for internal use.\n  */\n public interface LeonardoNotebooksClient {\n-  List<ListClusterResponse> listClustersByProject(String googleProject);\n-\n   /** lists all notebook clusters as the appengine SA, to be used only for admin operations */\n-  List<ListClusterResponse> listClustersByProjectAsService(String googleProject);\n+  List<ListRuntimeResponse> listRuntimesByProjectAsService(String googleProject);\n \n   /**\n    * Creates a notebooks cluster owned by the current authenticated user.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUxODIwNA=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzQyNQ==", "bodyText": "done, here and below", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567425", "createdAt": "2020-08-28T22:59:50Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTIyOQ=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 303}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2NzQzOA==", "bodyText": "done", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479567438", "createdAt": "2020-08-28T22:59:52Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5389,13 +5542,56 @@ definitions:\n         description: |\n           The date and time the cluster was last accessed, in ISO-8601 format.\n           Date accessed is defined as the last time the cluster was created, modified, or accessed via the proxy.\n+  ListRuntimeResponse:\n+    description: This is a subset of options in a full runtimes response, copied from leonardo.yaml.\n+    required:\n+    - id\n+    - runtimeName\n+    - googleProject\n+    - status\n+    - createdDate\n+    - labels\n+    - dateAccessed\n+    properties:\n+      id:\n+        type: integer\n+        description: Internal Leonardo ID of the runtime\n+      runtimeName:\n+        type: string\n+        description: The user-supplied name for the runtime\n+      googleProject:\n+        type: string\n+        description: The Google Project used to create the runtime\n+      status:\n+        \"$ref\": \"#/definitions/RuntimeStatus\"\n+      createdDate:\n+        type: string\n+        description: The date and time the cluster was created, in ISO-8601 format\n+      labels:\n+        type: object\n+        description: The labels to be placed on the cluster. Of type Map[String,String]\n+      dateAccessed:\n+        type: string\n+        description: |\n+          The date and time the cluster was last accessed, in ISO-8601 format.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMTI3OA=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 307}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU2ODAxOA==", "bodyText": "I've basically added this prefix in contexts where it would not otherwise be obvious. Unfortunately \"runtime\" is a bit of a poor resource name, since it can commonly be used as an adjective or adverb. i.e. in this case, \"RuntimeAuditor\" could be interpreted in many different ways. In places where it's a noun in our own API, I just use \"Runtime\".", "url": "https://github.com/all-of-us/workbench/pull/3926#discussion_r479568018", "createdAt": "2020-08-28T23:02:27Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/LeonardoRuntimeAuditor.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package org.pmiops.workbench.actionaudit.auditors;\n+\n+import java.util.List;\n+\n+public interface LeonardoRuntimeAuditor {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyMjU5Nw=="}, "originalCommit": {"oid": "bcc4df66b911d45000dd93be70fe2df15b31d376"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e9c4950e57c387e242e06f1660e90d399098059", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/9e9c4950e57c387e242e06f1660e90d399098059", "committedDate": "2020-09-01T22:35:44Z", "message": "Finally compiles, tests definitely broken, need to add new methods too"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bb899b19941fde5fa51913ae49c19e9b9e41cc1", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/0bb899b19941fde5fa51913ae49c19e9b9e41cc1", "committedDate": "2020-09-01T22:35:44Z", "message": "Test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e20c7a8bd40aa47852580f66b916005efba03b73", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/e20c7a8bd40aa47852580f66b916005efba03b73", "committedDate": "2020-09-01T22:35:45Z", "message": "manage clusters fix, creation time fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef99840d4c9f43d9395221a8686c3ca5766514ab", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/ef99840d4c9f43d9395221a8686c3ca5766514ab", "committedDate": "2020-09-01T22:35:45Z", "message": "Model name prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df949cb20ab7959ae50ce49f0f81aef8383df379", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/df949cb20ab7959ae50ce49f0f81aef8383df379", "committedDate": "2020-09-01T22:35:45Z", "message": "Test refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d740f4b5ac9f8bfb4d5ad5377f6f85b5a34397bc", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/d740f4b5ac9f8bfb4d5ad5377f6f85b5a34397bc", "committedDate": "2020-09-01T22:35:45Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92a3ea32bf3756e1c66db8c8384d0d016fac11aa", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/92a3ea32bf3756e1c66db8c8384d0d016fac11aa", "committedDate": "2020-09-01T22:35:45Z", "message": "remaining fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d494151678d1f5c860633da40753396e454fdf91", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/d494151678d1f5c860633da40753396e454fdf91", "committedDate": "2020-09-01T22:35:45Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9df982d04a2ad2f2ce92015a575e68418f512b94", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/9df982d04a2ad2f2ce92015a575e68418f512b94", "committedDate": "2020-09-01T22:35:45Z", "message": "Another UI test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e945d5089806fda60ae487acdbee38b6d524cdd", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/6e945d5089806fda60ae487acdbee38b6d524cdd", "committedDate": "2020-09-01T22:37:14Z", "message": "lint fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1089235c4d22376e81da8b509557d9ad4047bc3", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/e1089235c4d22376e81da8b509557d9ad4047bc3", "committedDate": "2020-09-01T22:48:37Z", "message": "Revert create endpoint only"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84401b3aef5a4610cc86c056f9c9475f04faf07b", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/84401b3aef5a4610cc86c056f9c9475f04faf07b", "committedDate": "2020-08-29T00:45:20Z", "message": "Another UI test fix"}, "afterCommit": {"oid": "e1089235c4d22376e81da8b509557d9ad4047bc3", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/e1089235c4d22376e81da8b509557d9ad4047bc3", "committedDate": "2020-09-01T22:48:37Z", "message": "Revert create endpoint only"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4363, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}