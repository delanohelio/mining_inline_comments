{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczOTI3MjI5", "number": 3922, "title": "[RW-5275] use Java 8 OffsetTimestamp for date-time types", "bodyText": "Previously, our date-time Swagger members were genereated in the Joda datetime class, which is effectively deprecated in Java 8. I ran into this issue again when looking at ways to build projection interface classes or DTOs in Swagger that use a rich timestamp instead of a long millis/micros representation.\nThis changeset addresses usage resulting from generated Java code, but does not remove all Joda usage.\nAdded a TemporalAssertions testing utility class, as timestamp comparisons are verbose and tedious.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test:local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-08-26T13:58:42Z", "url": "https://github.com/all-of-us/workbench/pull/3922", "merged": true, "mergeCommit": {"oid": "594244398b0326e615cdea798596cb8a3262dd7d"}, "closed": true, "closedAt": "2020-09-08T17:59:03Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCuFxIgBqjM2OTU1NTMzNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEto9eAH2gAyNDczOTI3MjI5OjkyNWViZjIzODA4MjFmNGZiMWU1MTk4ZjM0Zjk0YzZkOGM3NTk5NzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9a7fd1ba4092baf1e30f22bce158feea23016cd", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/f9a7fd1ba4092baf1e30f22bce158feea23016cd", "committedDate": "2020-08-26T15:51:53Z", "message": "Merge branch 'master' into jaycarlton/java8timeSwagger"}, "afterCommit": {"oid": "65230b3a1e9d5738a6c84d0bf28c3867b267597e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/65230b3a1e9d5738a6c84d0bf28c3867b267597e", "committedDate": "2020-08-26T16:06:25Z", "message": "squashed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3NzE4MDk5", "url": "https://github.com/all-of-us/workbench/pull/3922#pullrequestreview-477718099", "createdAt": "2020-08-28T13:15:30Z", "commit": {"oid": "ac4315e176ba3d3c22d62f1df9b334037ac6bfcd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzoxNTozMFrOHJEwlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzoxNTozMFrOHJEwlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTI3NzIwNw==", "bodyText": "from our offline conversation: please add a version of this with a tolerance, and a basic test for all methods here which don't yet have one", "url": "https://github.com/all-of-us/workbench/pull/3922#discussion_r479277207", "createdAt": "2020-08-28T13:15:30Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/utils/TemporalAssertions.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.pmiops.workbench.utils;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+\n+import java.time.Instant;\n+import java.time.OffsetDateTime;\n+\n+public class TemporalAssertions {\n+\n+  private static final double TIME_TOLERANCE_MILLIS = 100.0;\n+\n+  public static void assertTimeWithinTolerance(OffsetDateTime actual, OffsetDateTime expected) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac4315e176ba3d3c22d62f1df9b334037ac6bfcd"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d45f953204a829fe34d3922db8cd50fd479fd68", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/6d45f953204a829fe34d3922db8cd50fd479fd68", "committedDate": "2020-08-31T22:49:51Z", "message": "squashed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "568501e291de3386198fce5802a4728f4d315543", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/568501e291de3386198fce5802a4728f4d315543", "committedDate": "2020-08-31T22:49:51Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb7ff98cbd7409530ec7b0370a0de099da7e8c6f", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/fb7ff98cbd7409530ec7b0370a0de099da7e8c6f", "committedDate": "2020-08-31T22:49:52Z", "message": "remove mapper change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7af37e3842be393508ca43a5aaf9f278c3b4357c", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7af37e3842be393508ca43a5aaf9f278c3b4357c", "committedDate": "2020-08-31T22:49:52Z", "message": "fixup timestamp format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cc037491ed0bf67aa5c900b2c6dbcc59de82d94", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/0cc037491ed0bf67aa5c900b2c6dbcc59de82d94", "committedDate": "2020-08-31T22:49:52Z", "message": "test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5363b80ab4d2b57e937771b6dbf922d58579e6e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c5363b80ab4d2b57e937771b6dbf922d58579e6e", "committedDate": "2020-08-31T22:49:52Z", "message": "test coverage and enhancements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "913bac808a880b34e9d0da4f6921e498ef6cf803", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/913bac808a880b34e9d0da4f6921e498ef6cf803", "committedDate": "2020-08-31T22:29:02Z", "message": "Merge branch 'master' into jaycarlton/java8timeSwagger"}, "afterCommit": {"oid": "c5363b80ab4d2b57e937771b6dbf922d58579e6e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c5363b80ab4d2b57e937771b6dbf922d58579e6e", "committedDate": "2020-08-31T22:49:52Z", "message": "test coverage and enhancements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDM4MTQx", "url": "https://github.com/all-of-us/workbench/pull/3922#pullrequestreview-480038141", "createdAt": "2020-09-01T19:07:00Z", "commit": {"oid": "c5363b80ab4d2b57e937771b6dbf922d58579e6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTowNzowMVrOHLEezQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTowNzowMVrOHLEezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM2OTgwNQ==", "bodyText": "make this a minus to show explicitly that the problem is the tolerance delta rather than being \"larger than max\"", "url": "https://github.com/all-of-us/workbench/pull/3922#discussion_r481369805", "createdAt": "2020-09-01T19:07:01Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/utils/TemporalAssertionsTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.pmiops.workbench.utils;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.pmiops.workbench.utils.TemporalAssertions.DEFAULT_TOLERANCE;\n+import static org.pmiops.workbench.utils.TemporalAssertions.MAX_SUPPORTED_INSTANT;\n+import static org.pmiops.workbench.utils.TemporalAssertions.MIN_SUPPORTED_INSTANT;\n+import static org.pmiops.workbench.utils.TemporalAssertions.assertTimeWithinTolerance;\n+\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.time.OffsetDateTime;\n+import java.time.ZoneOffset;\n+import org.junit.Test;\n+\n+public class TemporalAssertionsTest {\n+\n+  private static final Instant EXPECTED_TIME = Instant.parse(\"2010-06-30T01:20:00.00Z\");\n+  private static final Duration DELTA_WITHIN_TOLERANCE = DEFAULT_TOLERANCE.dividedBy(2);\n+  private static final Duration DELTA_OUTSIDE_TOLERANCE = DEFAULT_TOLERANCE.multipliedBy(2);\n+\n+  @Test\n+  public void testZeroTime() {\n+    assertTimeWithinTolerance(0, 0);\n+    assertTimeWithinTolerance(Instant.ofEpochMilli(0), Instant.ofEpochMilli(0));\n+  }\n+\n+  @Test\n+  public void testInstant_smallDifference() {\n+    assertTimeWithinTolerance(EXPECTED_TIME.plus(DELTA_WITHIN_TOLERANCE), EXPECTED_TIME);\n+    assertTimeWithinTolerance(\n+        EXPECTED_TIME.plus(DELTA_WITHIN_TOLERANCE),\n+        EXPECTED_TIME,\n+        DEFAULT_TOLERANCE.multipliedBy(10));\n+    assertThrows(\n+        AssertionError.class,\n+        () ->\n+            assertTimeWithinTolerance(EXPECTED_TIME.plus(DELTA_OUTSIDE_TOLERANCE), EXPECTED_TIME));\n+  }\n+\n+  @Test\n+  public void testLong() {\n+    assertTimeWithinTolerance(1_598_550_909_000L, 1_598_550_909_000L);\n+  }\n+\n+  @Test\n+  public void testOffsetDateTime() {\n+    final OffsetDateTime expected = OffsetDateTime.ofInstant(EXPECTED_TIME, ZoneOffset.UTC);\n+    final AssertionError exception =\n+        assertThrows(\n+            AssertionError.class,\n+            () -> assertTimeWithinTolerance(expected.plus(DELTA_OUTSIDE_TOLERANCE), expected));\n+    assertThat(exception.getMessage()).contains(\"outside tolerance\");\n+\n+    assertTimeWithinTolerance(expected.plus(DELTA_WITHIN_TOLERANCE), expected);\n+    assertTimeWithinTolerance(expected.plusSeconds(3), expected, Duration.ofSeconds(4));\n+  }\n+\n+  @Test\n+  public void testMaximumDateTime() {\n+    assertTimeWithinTolerance(MIN_SUPPORTED_INSTANT, MIN_SUPPORTED_INSTANT);\n+    assertTimeWithinTolerance(\n+        MAX_SUPPORTED_INSTANT.plus(DELTA_WITHIN_TOLERANCE), MAX_SUPPORTED_INSTANT);\n+    assertThrows(\n+        AssertionError.class,\n+        () ->\n+            assertTimeWithinTolerance(\n+                MIN_SUPPORTED_INSTANT.plus(DELTA_OUTSIDE_TOLERANCE), MIN_SUPPORTED_INSTANT));\n+\n+    assertTimeWithinTolerance(MAX_SUPPORTED_INSTANT, MAX_SUPPORTED_INSTANT);\n+    assertTimeWithinTolerance(\n+        MAX_SUPPORTED_INSTANT.minus(DELTA_WITHIN_TOLERANCE), MAX_SUPPORTED_INSTANT);\n+    assertThrows(\n+        AssertionError.class,\n+        () ->\n+            assertTimeWithinTolerance(\n+                MAX_SUPPORTED_INSTANT.plus(DELTA_OUTSIDE_TOLERANCE), MAX_SUPPORTED_INSTANT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5363b80ab4d2b57e937771b6dbf922d58579e6e"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDM5NTMx", "url": "https://github.com/all-of-us/workbench/pull/3922#pullrequestreview-480039531", "createdAt": "2020-09-01T19:09:06Z", "commit": {"oid": "c5363b80ab4d2b57e937771b6dbf922d58579e6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a20afa118bfccd601f05727951e2f6fe89cf5dbe", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/a20afa118bfccd601f05727951e2f6fe89cf5dbe", "committedDate": "2020-09-01T20:36:37Z", "message": "Merge branch 'master' into jaycarlton/java8timeSwagger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "925ebf2380821f4fb1e5198f34f94c6d8c759970", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/925ebf2380821f4fb1e5198f34f94c6d8c759970", "committedDate": "2020-09-01T20:43:24Z", "message": "rename"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4357, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}