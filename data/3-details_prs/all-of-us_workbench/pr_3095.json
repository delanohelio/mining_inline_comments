{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNTQ2OTM3", "number": 3095, "title": "[RW-4315][risk=no] Workaround for Count Metrics", "bodyText": "Use Logs-based metrics system to provide poor-man's code instrumentation. We simply create LogEntry structures with the JsonPayload type and give that payload map three entries:\n\nmetric_name: name for the metric; same as we'd use with OpenCensus\ndata_point_value: numerical value, always converted to double by Stackdriver, and always 1 for count metrics (aka event metrics)\nlabels: another string-string map from label key to value\n\nI reused the MeasurementBundle type to make transitioning back as simple as possible.\nView in Logs Explorer\nIn the log view, you can filter on the resource type for generic_node, us-central, namespace=local and then export from there.\n\n###Single Entry Expanded###\n\nNotebook Stats in Edit Chart View\n\nProvisioning\nStackdriver will automatically create the log in the appropriate project with the right name and properties in the MonitoredResource.\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-02-05T19:31:18Z", "url": "https://github.com/all-of-us/workbench/pull/3095", "merged": true, "mergeCommit": {"oid": "812bd4d4f2bda830fa3c6c5843c50c739ad3387b"}, "closed": true, "closedAt": "2020-02-06T21:23:06Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBL9EeAH2gAyMzcxNTQ2OTM3OjM5ZDZhNmNiNGY1OGU2OThiOTZhMzQxNTNmMGVlZTRhMmExNGZlNWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBw43rAH2gAyMzcxNTQ2OTM3OjY1MmNlMzlmMzRiMTk4YTY0NDBmMDY4MzZlZTQ2YzFmNWViOTYzYjk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "39d6a6cb4f58e698b96a34153f0eee4a2a14fe5a", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/39d6a6cb4f58e698b96a34153f0eee4a2a14fe5a", "committedDate": "2020-02-05T01:35:40Z", "message": "got test working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d637c244c28e1db42f25958dd65af8b47f55fd", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/d6d637c244c28e1db42f25958dd65af8b47f55fd", "committedDate": "2020-02-05T01:47:46Z", "message": "tighten loops"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68bd8cf89374d3a03d51b45fad8482107d44318c", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/68bd8cf89374d3a03d51b45fad8482107d44318c", "committedDate": "2020-02-05T19:22:43Z", "message": "add cron job reporting demo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b866678206d89887574f7b6dc26bea6b419695f2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/b866678206d89887574f7b6dc26bea6b419695f2", "committedDate": "2020-02-05T19:23:22Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db914bf758d29a64de3d1f6d3f1f232c8da99d61", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/db914bf758d29a64de3d1f6d3f1f232c8da99d61", "committedDate": "2020-02-05T21:43:43Z", "message": "Merge branch 'master' into jaycarlton/logBasedMetrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa0b0cb67d13e7dfd26cf6a4dd2256642670f39", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/4aa0b0cb67d13e7dfd26cf6a4dd2256642670f39", "committedDate": "2020-02-05T21:47:35Z", "message": "provide another service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8f90295603069a531a127f5f1aee182d1cf9db5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/a8f90295603069a531a127f5f1aee182d1cf9db5", "committedDate": "2020-02-06T15:51:08Z", "message": "test fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTc1MTE5", "url": "https://github.com/all-of-us/workbench/pull/3095#pullrequestreview-354575119", "createdAt": "2020-02-06T16:09:05Z", "commit": {"oid": "a8f90295603069a531a127f5f1aee182d1cf9db5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjowOTowNVrOFmg5SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjowOTowNVrOFmg5SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkyOTE2MQ==", "bodyText": "setup*", "url": "https://github.com/all-of-us/workbench/pull/3095#discussion_r375929161", "createdAt": "2020-02-06T16:09:05Z", "author": {"login": "ericsong"}, "path": "api/src/test/java/org/pmiops/workbench/monitoring/LogsBasedMetricsServiceTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+package org.pmiops.workbench.monitoring;\n+\n+import static com.google.common.truth.Truth.assertThat;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.verify;\n+\n+import com.google.cloud.MonitoredResource;\n+import com.google.cloud.logging.LogEntry;\n+import com.google.cloud.logging.Logging;\n+import com.google.cloud.logging.Payload.JsonPayload;\n+import com.google.cloud.logging.Payload.Type;\n+import com.google.cloud.logging.Severity;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.common.collect.ImmutableSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.ArgumentCaptor;\n+import org.mockito.Captor;\n+import org.pmiops.workbench.model.DataAccessLevel;\n+import org.pmiops.workbench.model.WorkspaceActiveStatus;\n+import org.pmiops.workbench.monitoring.labels.MetricLabel;\n+import org.pmiops.workbench.monitoring.views.EventMetric;\n+import org.pmiops.workbench.monitoring.views.GaugeMetric;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.context.TestConfiguration;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.context.annotation.Import;\n+import org.springframework.test.context.junit4.SpringRunner;\n+\n+@RunWith(SpringRunner.class)\n+public class LogsBasedMetricsServiceTest {\n+\n+  private static MonitoredResource MONITORED_RESOURCE =\n+      MonitoredResource.newBuilder(\"resource_type_woot\")\n+          .addLabel(\"height\", \"3 apples tall\")\n+          .addLabel(\"area_code\", \"90210\")\n+          .build();\n+  @MockBean Logging mockLogging;\n+  @MockBean StackdriverStatsExporterService mockStackdriverStatsExporterService;\n+\n+  @Captor ArgumentCaptor<Iterable<LogEntry>> logEntriesCaptor;\n+  @Autowired LogsBasedMetricService logsBasedMetricService;\n+\n+  @TestConfiguration\n+  @Import({LogsBasedMetricServiceImpl.class})\n+  static class Configuration {}\n+\n+  @Before\n+  public void settup() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8f90295603069a531a127f5f1aee182d1cf9db5"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525ef9c4fc337ed00172043fe9dfc667ebd8b9b5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/525ef9c4fc337ed00172043fe9dfc667ebd8b9b5", "committedDate": "2020-02-06T19:58:07Z", "message": "fix mocks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "652ce39f34b198a6440f06836ee46c1f5eb963b9", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/652ce39f34b198a6440f06836ee46c1f5eb963b9", "committedDate": "2020-02-06T20:37:34Z", "message": "spotless"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3516, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}