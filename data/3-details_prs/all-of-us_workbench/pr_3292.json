{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNjYyMjM5", "number": 3292, "title": "[risk=no]RW-4562 Send institution-specific instructions to new users", "bodyText": "Description:\nNew APIs:\n\nPOST /v1/institutions/instructionsEmail\nSet or update the user instructions for an institution\nDELETE /v1/institutions/instructionsEmail/{shortName}\nDelete the instructions for an institution\n\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-03-23T22:04:35Z", "url": "https://github.com/all-of-us/workbench/pull/3292", "merged": true, "mergeCommit": {"oid": "0f62f18da25675cf059e8fbe4e930442785ae31c"}, "closed": true, "closedAt": "2020-03-25T21:45:49Z", "author": {"login": "jmthibault79"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQiEekAH2gAyMzkyNjYyMjM5OmYxYmZkOTZkN2MxZDA1MDYwMmE2Yjk3NmYzMDI1MzA5MjQwNzVjOTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRNv9sgH2gAyMzkyNjYyMjM5OmNiMzQ5ZjAxYzkwOTU1ZjdjYjcwYjgyNjRkNzVmYzYxMGE3ZmRjZTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f1bfd96d7c1d050602a6b976f302530924075c90", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f1bfd96d7c1d050602a6b976f302530924075c90", "committedDate": "2020-03-23T17:50:32Z", "message": "Group and reorder UserServiceImpl dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0aa5561ede616e2e9d4057a1acdbd1cfe0a1541", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c0aa5561ede616e2e9d4057a1acdbd1cfe0a1541", "committedDate": "2020-03-23T17:51:58Z", "message": "RW-4562 Institution User Instructions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddf66dc26742f4361a20763f3c44656856458eb5", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/ddf66dc26742f4361a20763f3c44656856458eb5", "committedDate": "2020-03-24T13:52:37Z", "message": "sanitize inputs, revise tests, rm InstitutionUserInstructionsMapper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzc3MjQ1", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-380377245", "createdAt": "2020-03-24T14:41:44Z", "commit": {"oid": "ddf66dc26742f4361a20763f3c44656856458eb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MTo0NVrOF6zf7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MTo0NVrOF6zf7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNTQ4Ng==", "bodyText": "opportunistic reordering/grouping.  I can revert.", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r397205486", "createdAt": "2020-03-24T14:41:45Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -78,53 +78,55 @@\n   private static final int CURRENT_DATA_USE_AGREEMENT_VERSION = 2;\n   private static final int CURRENT_TERMS_OF_SERVICE_VERSION = 1;\n \n+  private final Provider<WorkbenchConfig> configProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf66dc26742f4361a20763f3c44656856458eb5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzc4MDI2", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-380378026", "createdAt": "2020-03-24T14:42:29Z", "commit": {"oid": "ddf66dc26742f4361a20763f3c44656856458eb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MjoyOVrOF6ziKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDo0MjoyOVrOF6ziKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIwNjA1OA==", "bodyText": "Everwhere this was called, it was required to exist", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r397206058", "createdAt": "2020-03-24T14:42:29Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionService.java", "diffHunk": "@@ -15,7 +16,8 @@\n \n   Optional<Institution> getInstitution(final String shortName);\n \n-  Optional<DbInstitution> getDbInstitution(final String shortName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf66dc26742f4361a20763f3c44656856458eb5"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b34e95e4eb1e9c853fd21a43b7b1c2bf0dc81010", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/b34e95e4eb1e9c853fd21a43b7b1c2bf0dc81010", "committedDate": "2020-03-24T14:56:02Z", "message": "add comments and change signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c", "committedDate": "2020-03-24T15:06:53Z", "message": "rv rm InstitutionUserInstructionsMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/91362b99cf8a5680accedca490c2456ac3ba1adf", "committedDate": "2020-03-24T15:13:24Z", "message": "fix name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDEwNjc3", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-380410677", "createdAt": "2020-03-24T15:14:47Z", "commit": {"oid": "4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxNDo0N1rOF61HGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxNDo0N1rOF61HGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzMTg5OQ==", "bodyText": "just a reordering to match", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r397231899", "createdAt": "2020-03-24T15:14:47Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/AuthDomainControllerTest.java", "diffHunk": "@@ -81,20 +81,20 @@ public void setUp() {\n     FakeClock clock = new FakeClock(Instant.now());\n     UserService userService =\n         new UserServiceImpl(\n+            Providers.of(config),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDExNjk0", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-380411694", "createdAt": "2020-03-24T15:15:47Z", "commit": {"oid": "4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxNTo0N1rOF61KRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxNTo0N1rOF61KRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzMjcwOQ==", "bodyText": "Open to naming suggestions", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r397232709", "createdAt": "2020-03-24T15:15:47Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionService.java", "diffHunk": "@@ -15,7 +16,8 @@\n \n   Optional<Institution> getInstitution(final String shortName);\n \n-  Optional<DbInstitution> getDbInstitution(final String shortName);\n+  // throws NotFoundException if the DbInstitution is not found\n+  DbInstitution getDbInstitutionOrThrow(final String shortName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c981fbbf1b92bc2c16dc1c7473b2c87d8f1fc1c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzU3NDcz", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-381357473", "createdAt": "2020-03-25T17:07:42Z", "commit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzowNzo0MlrOF7lYoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzowNzo0MlrOF7lYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAyMjgxNg==", "bodyText": "should this be institutionUserInstructionsId and institutionId rather than institutionUserInstructionsId and userInstructions", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r398022816", "createdAt": "2020-03-25T17:07:42Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbInstitutionUserInstructions.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.pmiops.workbench.db.model;\n+\n+import java.util.Objects;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+\n+@Entity\n+@Table(name = \"institution_user_instructions\")\n+public class DbInstitutionUserInstructions {\n+\n+  private long institutionUserInstructionsId;\n+  private long institutionId;\n+  private String userInstructions;\n+\n+  public DbInstitutionUserInstructions() {}\n+\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  @Column(name = \"institution_user_instructions_id\", nullable = false)\n+  public long getInstitutionUserInstructionsId() {\n+    return institutionUserInstructionsId;\n+  }\n+\n+  public DbInstitutionUserInstructions setInstitutionUserInstructionsId(\n+      long institutionUserInstructionsId) {\n+    this.institutionUserInstructionsId = institutionUserInstructionsId;\n+    return this;\n+  }\n+\n+  @Column(name = \"institution_id\", nullable = false)\n+  public long getInstitutionId() {\n+    return institutionId;\n+  }\n+\n+  public DbInstitutionUserInstructions setInstitutionId(long institutionId) {\n+    this.institutionId = institutionId;\n+    return this;\n+  }\n+\n+  @Column(name = \"user_instructions\", nullable = false)\n+  public String getUserInstructions() {\n+    return userInstructions;\n+  }\n+\n+  public DbInstitutionUserInstructions setUserInstructions(String userInstructions) {\n+    this.userInstructions = userInstructions;\n+    return this;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) return true;\n+    if (o == null || getClass() != o.getClass()) return false;\n+\n+    DbInstitutionUserInstructions that = (DbInstitutionUserInstructions) o;\n+\n+    return Objects.equals(institutionUserInstructionsId, that.institutionUserInstructionsId)\n+        && Objects.equals(userInstructions, that.userInstructions);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(institutionUserInstructionsId, userInstructions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzcxNTYx", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-381371561", "createdAt": "2020-03-25T17:23:31Z", "commit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoyMzozMlrOF7mG1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoyMzozMlrOF7mG1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNDY0NA==", "bodyText": "will it make sense to have a method that takes in shortName and send institutionID as well in addition to getDbInstitutionOrThrow because thats being used at a lot of places.", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r398034644", "createdAt": "2020-03-25T17:23:32Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/institution/InstitutionUserInstructionsMapper.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.pmiops.workbench.institution;\n+\n+import org.mapstruct.AfterMapping;\n+import org.mapstruct.Context;\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.MappingTarget;\n+import org.owasp.html.HtmlPolicyBuilder;\n+import org.owasp.html.PolicyFactory;\n+import org.pmiops.workbench.db.model.DbInstitutionUserInstructions;\n+import org.pmiops.workbench.model.InstitutionUserInstructions;\n+\n+@Mapper(componentModel = \"spring\")\n+public interface InstitutionUserInstructionsMapper {\n+  @Mapping(target = \"institutionUserInstructionsId\", ignore = true)\n+  @Mapping(target = \"institutionId\", ignore = true) // set by setFields()\n+  @Mapping(target = \"userInstructions\", ignore = true) // set by setFields()\n+  DbInstitutionUserInstructions modelToDb(\n+      InstitutionUserInstructions modelObject, @Context InstitutionService institutionService);\n+\n+  @AfterMapping\n+  default void setFields(\n+      @MappingTarget DbInstitutionUserInstructions target,\n+      InstitutionUserInstructions modelObject,\n+      @Context InstitutionService institutionService) {\n+\n+    final long institutionId =\n+        institutionService\n+            .getDbInstitutionOrThrow(modelObject.getInstitutionShortName())\n+            .getInstitutionId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzc0ODU0", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-381374854", "createdAt": "2020-03-25T17:27:16Z", "commit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoyNzoxNlrOF7mRQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzoyNzoxNlrOF7mRQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAzNzMxMg==", "bodyText": "\ud83d\ude06", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r398037312", "createdAt": "2020-03-25T17:27:16Z", "author": {"login": "NehaBroad"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -676,6 +669,82 @@ public void resendWelcomeEmail_OK() throws MessagingException {\n     verify(directoryService, times(1)).resetUserPassword(anyString());\n   }\n \n+  @Test\n+  public void sendUserInstructions_none() throws MessagingException {\n+    config.featureFlags.requireInstitutionalVerification = true;\n+\n+    final VerifiedInstitutionalAffiliation verifiedInstitutionalAffiliation =\n+        createVerifiedInstitutionalAffiliation();\n+\n+    createAccountRequest\n+        .getProfile()\n+        .setVerifiedInstitutionalAffiliation(verifiedInstitutionalAffiliation);\n+\n+    createUser();\n+    verify(mailService).sendWelcomeEmail(any(), any(), any());\n+\n+    // don't send the user instructions email if there are no instructions\n+    verifyNoMoreInteractions(mailService);\n+  }\n+\n+  @Test\n+  public void sendUserInstructions_sanitized() throws MessagingException {\n+    config.featureFlags.requireInstitutionalVerification = true;\n+\n+    final VerifiedInstitutionalAffiliation verifiedInstitutionalAffiliation =\n+        createVerifiedInstitutionalAffiliation();\n+\n+    createAccountRequest\n+        .getProfile()\n+        .setVerifiedInstitutionalAffiliation(verifiedInstitutionalAffiliation);\n+\n+    final String rawInstructions =\n+        \"<html><script>window.alert('hacked');</script></html>\"\n+            + \"Wash your hands for 20 seconds\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91362b99cf8a5680accedca490c2456ac3ba1adf"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8b933cfb6609ae686159f99ba4e51a18db6d71f", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f8b933cfb6609ae686159f99ba4e51a18db6d71f", "committedDate": "2020-03-25T18:08:04Z", "message": "Fix logical equality and add comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDQ2MDU2", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-381446056", "createdAt": "2020-03-25T18:55:43Z", "commit": {"oid": "f8b933cfb6609ae686159f99ba4e51a18db6d71f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxODo1NTo0M1rOF7p02g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxODo1NTo0M1rOF7p02g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA5NTU3OA==", "bodyText": "I know this is more of Karthik question but should we make this as a link which sends email to support@researchallofus.org just like in welcome email", "url": "https://github.com/all-of-us/workbench/pull/3292#discussion_r398095578", "createdAt": "2020-03-25T18:55:43Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/resources/emails/instructionsemail/content.html", "diffHunk": "@@ -0,0 +1,51 @@\n+<head>\n+  <meta charset=\"UTF-8\">\n+  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n+  <link href=\"https://fonts.googleapis.com/css?family=Montserrat\" rel=\"stylesheet\">\n+  <style>\n+    body {\n+      background-color: #F1F1F1;\n+      padding-left: 1rem;\n+      padding-top: 1rem;\n+    }\n+    * {\n+      font-family: 'Montserrat', sans-serif;\n+      font-weight: 300;\n+    }\n+    .welcome-message {\n+      margin-top: 2rem;\n+      margin-bottom: 1rem;\n+      color: #302C71;\n+      font-size: 30px;\n+      font-weight: 300;\n+      line-height: 36px;\n+    }\n+    .text {\n+      color: rgba(0,0,0,0.87);\n+      font-size: 16px;\n+      font-weight: 300;\n+      line-height: 22px;\n+      margin-bottom: 1rem;\n+    }\n+    .text.thanks {\n+      margin-bottom: 0;\n+    }\n+\n+\n+  </style>\n+</head>\n+<body>\n+<div><img src=\"${HEADER_IMG}\"></div>\n+<div class=\"welcome-message\">Welcome to the <i>All of Us</i> Researcher Workbench!</div>\n+<div class=\"text\">\n+  Thank you for signing up for the <i>All of Us</i> Researcher Workbench.\n+  Your institution expects you to adhere to the following while using the Researcher Workbench.\n+</div>\n+<div class=\"text\">${INSTRUCTIONS}</div>\n+<div class=\"text\">\n+  If you have questions, please contact our support team using the Help Desk widget in the\n+  Workbench or by emailing support@researchallofus.org.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b933cfb6609ae686159f99ba4e51a18db6d71f"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNDQ2ODQx", "url": "https://github.com/all-of-us/workbench/pull/3292#pullrequestreview-381446841", "createdAt": "2020-03-25T18:56:47Z", "commit": {"oid": "f8b933cfb6609ae686159f99ba4e51a18db6d71f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb349f01c90955f7cb70b8264d75fc610a7fdce5", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/cb349f01c90955f7cb70b8264d75fc610a7fdce5", "committedDate": "2020-03-25T20:43:57Z", "message": "make support email a link"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3283, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}