{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MDI3Mjk1", "number": 4266, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0MToyMFrOE3XCtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODowMTozOFrOE5nEsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDg0NjYyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0MToyMFrOHwqOug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0MToyMFrOHwqOug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4NTU5NA==", "bodyText": "nit: && here and below?", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520785594", "createdAt": "2020-11-10T18:41:20Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDg2NDY2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0NDo1N1rOHwqafQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0NDo1N1rOHwqafQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4ODYwNQ==", "bodyText": "nit: this line should be equivalent to just dataprocConfig", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520788605", "createdAt": "2020-11-10T18:44:57Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDg2NjcwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0NToxOVrOHwqb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0NToxOVrOHwqb0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc4ODk0Nw==", "bodyText": "nit: computeType: computeType, --> computeType,", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520788947", "createdAt": "2020-11-10T18:45:19Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDg5MTMxOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo0OTozOFrOHwqsNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxOTo1ODoxMVrOHyLzOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5MzE0Mw==", "bodyText": "This whole section is bolded?", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520793143", "createdAt": "2020-11-10T18:49:38Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s)</b>\n+        {!dataprocConfig.numberOfPreemptibleWorkers && <Fragment>, </Fragment>}\n+        <b>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM3NzI5NQ==", "bodyText": "The comma actually shouldn't be, but the rest should", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522377295", "createdAt": "2020-11-12T19:46:19Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s)</b>\n+        {!dataprocConfig.numberOfPreemptibleWorkers && <Fragment>, </Fragment>}\n+        <b>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5MzE0Mw=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4MTYyMg==", "bodyText": "I really don't think \"each with compute size of\" should be bolded, it's not dynamic content. If you prefer a consistency argument instead, you can also just look at the treatment of General Analysis, where \"compute size of\" is unbolded.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522381622", "createdAt": "2020-11-12T19:53:46Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s)</b>\n+        {!dataprocConfig.numberOfPreemptibleWorkers && <Fragment>, </Fragment>}\n+        <b>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5MzE0Mw=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjM4NDE4Ng==", "bodyText": "Oh, good point!", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522384186", "createdAt": "2020-11-12T19:58:11Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s)</b>\n+        {!dataprocConfig.numberOfPreemptibleWorkers && <Fragment>, </Fragment>}\n+        <b>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5MzE0Mw=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDg5ODk3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1MTowN1rOHwqxcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1MTowN1rOHwqxcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5NDQ4MA==", "bodyText": "I don't think we should need a comma before \"each with a compute size\" - would drop this", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520794480", "createdAt": "2020-11-10T18:51:07Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,6 +483,113 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType: computeType,\n+          diskSize: gceConfig ? gceConfig.diskSize : null,\n+          machineType: gceConfig ? gceConfig.machineType : null,\n+          dataprocConfig: dataprocConfig ? dataprocConfig : null\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s)</b>\n+        {!dataprocConfig.numberOfPreemptibleWorkers && <Fragment>, </Fragment>}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDkyODU5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1NjoyMVrOHwrErA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1NjoyMVrOHwrErA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5OTQwNA==", "bodyText": "I don't think this is ever the correct thing to show initially, would just remove this from the switch. If you need a default, Customize is probably most appropriate", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520799404", "createdAt": "2020-11-10T18:56:21Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.\n-  const [panelContent, setPanelContent] = useState<PanelContent>(PanelContent.Customize);\n+  const initialPanelContent = fp.cond([\n+    [(s) => s === RuntimeStatus.Running || s === RuntimeStatus.Stopped, () => PanelContent.Customize],\n+    [(s) => s === null || s === RuntimeStatus.Unknown, () => PanelContent.Create],\n+    [() => true, () => PanelContent.Delete]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDk5MzcyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOToxMDo1N1rOHwru4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxOToyMjowNlrOHy8BSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA==", "bodyText": "So initially I thought this might work, but I'm less sure as I understand more about hooks. My updated understanding is that this only works if the runtime store has already been populated by the time the user renders the panel contents. In most cases, this will be true, but I don't think it's guaranteed.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r520810208", "createdAt": "2020-11-10T19:10:57Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQyNDE5MQ==", "bodyText": "Sorry, what do you mean by 'this'? Inspecting the runtime status?", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522424191", "createdAt": "2020-11-12T21:02:25Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQyOTYzNw==", "bodyText": "The thing you did here and which is outlined in this TODO, which is to pick initialPanelContent based on the incoming runtime. The initial value of a hook is only relevant to the first time this component gets rendered - if the runtime is undefined at that point (still loading), that dictates the initial value.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522429637", "createdAt": "2020-11-12T21:13:13Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ0MDcwOQ==", "bodyText": "Given the inability to rely on currentRuntime, do you think it's worth trying to do another useEffect that updates the panel content when the runtime status is updated, or should I just set reasonable defaults based on the initial state of currentRuntime and let the user click through to the customize page if they need to?", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522440709", "createdAt": "2020-11-12T21:35:25Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ3NjAyMg==", "bodyText": "It's probably easiest to just show the Customize page in this case as the initial page, if it's still loading. Showing the create page will be confusing if you already have an active runtime.\nThe useEffect approach I think is also possible, but would be complicated since you'll have to make sure it would run only once. Probably you'd need to introduce some loading state or PanelContent.Loading type, then useEffect transition based on runtime becoming !== undefined.\nI would just go with the simple approach of defaulting to Customize for now and leave a comment explaining the current state of things (please also remove this TODO line). We can revisit if this race condition winds up being more common than I'm expecting it to be.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r522476022", "createdAt": "2020-11-12T22:36:27Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA2Mzk3Mw==", "bodyText": "I think that would result in this Create page never being shown - we can't currently differentiate between getRuntime having not yet returned and getRuntime having returned nothing.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r523063973", "createdAt": "2020-11-13T16:32:13Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzE3NDIxOA==", "bodyText": "Ok, I think I am slightly wrong, and that currentRuntime will be undefined when getRuntime has not returned for the first time and it will be null if getRuntime 404s.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r523174218", "createdAt": "2020-11-13T19:22:06Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -499,7 +609,12 @@ export const RuntimePanel = fp.flow(\n   const initialMasterMachine = findMachineByName(machineName) || defaultMachineType;\n   const initialCompute = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n   // TODO(RW-5591): Initialize PanelContent according to the runtime status.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgxMDIwOA=="}, "originalCommit": {"oid": "36bbd16bfeb661f5cdf3dde8ac025022fc546888"}, "originalPosition": 152}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODM4ODUwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.spec.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzo0ODowMVrOH0KaUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODowODo0OFrOH0LNqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODU3Ng==", "bodyText": "Is there a test that actually clicks the create button on the create panel? This would be good to have", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r524458576", "createdAt": "2020-11-16T17:48:01Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.spec.tsx", "diffHunk": "@@ -115,6 +124,19 @@ describe('RuntimePanel', () => {\n     expect(!wrapper.exists(Spinner));\n   });\n \n+  it('should show Create panel when no runtime', async() => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33798997b68c76d4cbae0754cfaa72e658bd9548"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3MDA4Mw==", "bodyText": "The should allow creation when no runtime exists with defaults test does this.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r524470083", "createdAt": "2020-11-16T18:06:14Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.spec.tsx", "diffHunk": "@@ -115,6 +124,19 @@ describe('RuntimePanel', () => {\n     expect(!wrapper.exists(Spinner));\n   });\n \n+  it('should show Create panel when no runtime', async() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODU3Ng=="}, "originalCommit": {"oid": "33798997b68c76d4cbae0754cfaa72e658bd9548"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3MTcyMg==", "bodyText": "Ah, nice - I see it now. Thanks.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r524471722", "createdAt": "2020-11-16T18:08:48Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.spec.tsx", "diffHunk": "@@ -115,6 +124,19 @@ describe('RuntimePanel', () => {\n     expect(!wrapper.exists(Spinner));\n   });\n \n+  it('should show Create panel when no runtime', async() => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1ODU3Ng=="}, "originalCommit": {"oid": "33798997b68c76d4cbae0754cfaa72e658bd9548"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODQ0NDY0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODowMTozOFrOH0K8VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODowNjo0MlrOH0LIYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2NzI4NQ==", "bodyText": "nit: I feel it might be a cleaner separation to replace these constituent properties with disabled and label (disabled could default to false). This way you don't leave any opportunity for bugs where the button is potentially grayed out on the creation panel (create panel would just be a simple hardcoded 'Create'), and it pushed most of the hairy business logic into the customize panel where it belongs.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r524467285", "createdAt": "2020-11-16T18:01:38Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,11 +484,116 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType,\n+          diskSize: gceConfig && gceConfig.diskSize,\n+          machineType: gceConfig && gceConfig.machineType,\n+          dataprocConfig: dataprocConfig\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+          aria-label='Customize'\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s) </b>\n+        {\n+          dataprocConfig.numberOfPreemptibleWorkers > 0 &&\n+          <b>and {dataprocConfig.numberOfPreemptibleWorkers}  preemptible worker(s) </b>\n+        }\n+        each with compute size of <b>{workerMachine.cpu} CPUs</b>,\n+        <b> {workerMachine.memory} GB memory</b>, and a\n+        <b> {workerDiskSize} GB disk</b>\n+      </div>\n+    </Fragment>}\n+  </div>;\n+};\n+\n+const UpdateRuntimeButton = ({\n+   closePanel,\n+   runtimeExists,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33798997b68c76d4cbae0754cfaa72e658bd9548"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3MDM3MA==", "bodyText": "Good call, will do.", "url": "https://github.com/all-of-us/workbench/pull/4266#discussion_r524470370", "createdAt": "2020-11-16T18:06:42Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/analysis/runtime-panel.tsx", "diffHunk": "@@ -480,11 +484,116 @@ const CostEstimator = ({\n   </FlexRow>;\n };\n \n+const CreatePanel = ({creatorFreeCreditsRemaining, preset, profile, setPanelContent, workspace}) => {\n+  const {\n+    displayName,\n+    runtimeTemplate: {gceConfig = null, dataprocConfig = null}\n+  } = preset;\n+  const computeType = dataprocConfig ? ComputeType.Dataproc : ComputeType.Standard;\n+  const masterMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.masterMachineType : gceConfig.machineType;\n+  const masterMachine = findMachineByName(masterMachineType);\n+  const masterDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.masterDiskSize : gceConfig.diskSize;\n+  const workerMachineType = computeType === ComputeType.Dataproc ? dataprocConfig.workerMachineType : null;\n+  const workerMachine = workerMachineType ? findMachineByName(workerMachineType) : null;\n+  const workerDiskSize = computeType === ComputeType.Dataproc ? dataprocConfig.workerDiskSize : null;\n+\n+  return <div style={styles.controlSection}>\n+    <CostEstimator\n+        freeCreditsRemaining={creatorFreeCreditsRemaining}\n+        profile={profile}\n+        runtimeParameters={{\n+          computeType,\n+          diskSize: gceConfig && gceConfig.diskSize,\n+          machineType: gceConfig && gceConfig.machineType,\n+          dataprocConfig: dataprocConfig\n+        }}\n+        runtimeChanged={false}\n+        workspace={workspace}\n+    />\n+    <FlexRow style={{justifyContent: 'space-between', alignItems: 'center'}}>\n+      <h3 style={{...styles.sectionHeader, ...styles.bold}}>Recommended Environment for {displayName}</h3>\n+      <Button\n+          type='secondarySmall'\n+          onClick={() => setPanelContent(PanelContent.Customize)}\n+          aria-label='Customize'\n+      >\n+        Customize\n+      </Button>\n+    </FlexRow>\n+    <label htmlFor='compute-resources' style={{...styles.bold, marginTop: '1rem'}}>Compute Resources</label>\n+    <div id='compute-resources'>- Default: compute size of\n+      <b> {masterMachine.cpu} CPUs</b>,\n+      <b> {masterMachine.memory} GB memory</b>, and a\n+      <b> {masterDiskSize} GB disk</b>\n+    </div>\n+    {computeType === ComputeType.Dataproc && <Fragment>\n+      <label htmlFor='worker-configuration' style={{...styles.bold, marginTop: '1rem'}}>Worker Configuration</label>\n+      <div id='worker-configuration'>- Default:\n+        <b> {dataprocConfig.numberOfWorkers} worker(s) </b>\n+        {\n+          dataprocConfig.numberOfPreemptibleWorkers > 0 &&\n+          <b>and {dataprocConfig.numberOfPreemptibleWorkers}  preemptible worker(s) </b>\n+        }\n+        each with compute size of <b>{workerMachine.cpu} CPUs</b>,\n+        <b> {workerMachine.memory} GB memory</b>, and a\n+        <b> {workerDiskSize} GB disk</b>\n+      </div>\n+    </Fragment>}\n+  </div>;\n+};\n+\n+const UpdateRuntimeButton = ({\n+   closePanel,\n+   runtimeExists,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ2NzI4NQ=="}, "originalCommit": {"oid": "33798997b68c76d4cbae0754cfaa72e658bd9548"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3717, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}