{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDg0Mzc2", "number": 3917, "title": "[risk=no][RW-5446] Correct issues with ProtectedRoutes routing component", "bodyText": "Description:\n\n\nAdded the featured workspaces back in to the react based router\n\n\nFix the way ProtectedRoutes handles child routes and guards. Guards were being applied at a higher level in the component hierarchy causing issues like unintended redirects and routes not getting hit if they were not in the \"right\" location in the routing component. Guards are now applied at the individual \"route level\" component rather than at the parent. Only if the route matches and its render function is hit will a guard be checked. At that point if the guard fails it will redirect the user.\n\n\nThe issue with \"next sibling\" components of the protected route has been addressed by removing the react-router Switch component. When no path is provided to a child of a Switch it will match any path. Since ProtectedRoutes do not have a path, that component would always be considered a match, even if it did not render any children. Removing the Switch will allow all paths to be checked, not stopping at the first match.\n\n\nThe Switch can be useful if a component page wants to handle its own routing - but we do not need it at the top level.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test:local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-08-25T21:01:21Z", "url": "https://github.com/all-of-us/workbench/pull/3917", "merged": true, "mergeCommit": {"oid": "36bb9c38ed5ca9012b45d9c21b6efafe4fd3cf0c"}, "closed": true, "closedAt": "2020-08-26T20:14:56Z", "author": {"login": "petesantos"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCZhlyAH2gAyNDczNDg0Mzc2OjMyYzE3M2I5Yjk1OGYxMGY1ZTkyNTgzZTNlYzFhNWZhYzgzMWNlMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCxl-vgFqTQ3NTgyMzM3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32c173b9b958f10f5e92583e3ec1a5fac831ce04", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/32c173b9b958f10f5e92583e3ec1a5fac831ce04", "committedDate": "2020-08-25T16:09:24Z", "message": "Move guard check to individual routes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5320cf97eb2f5c6f3f8bf3fbd1d2684444458f54", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/5320cf97eb2f5c6f3f8bf3fbd1d2684444458f54", "committedDate": "2020-08-25T20:23:23Z", "message": "Allow protected routes to be nested or siblings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/79e09775df6bf0abc27050ddac2385e4461e40e8", "committedDate": "2020-08-25T20:34:57Z", "message": "Merge with master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MDUyNTgw", "url": "https://github.com/all-of-us/workbench/pull/3917#pullrequestreview-475052580", "createdAt": "2020-08-25T23:29:19Z", "commit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzoyOToyMFrOHGxCXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMzo0MDowNFrOHGxv1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg1NjkyNw==", "bodyText": "What's the purpose of putting children in an array, only to immediately flatten them?", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476856927", "createdAt": "2020-08-25T23:29:20Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MTE3OQ==", "bodyText": "I gather children is a map of keys -> react elements. I'm a bit confused though, since the previous approach rendered this directly, and your new approach appears to instead render an array of elements. Does React just support either?", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476861179", "createdAt": "2020-08-25T23:33:24Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,\n+    fp.toPairs,\n+    fp.map(\n+      ([key, element]: [string, React.ReactElement]) => {\n+        const {guards: elementGuards = []} = element.props;\n+        return React.cloneElement(element, {key, guards: [...elementGuards, ...guards]});\n+      }\n+    )\n+  )([children]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2MjM0OQ==", "bodyText": "This is the opposite order of guard execution than what I would expect, i.e. was expecting [...guards, ...elementGuards], which should track with increasing specificity.", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476862349", "createdAt": "2020-08-25T23:34:30Z", "author": {"login": "calbach"}, "path": "ui/src/app/components/app-router.tsx", "diffHunk": "@@ -38,21 +38,36 @@ const NavRedirect = ({path}) => {\n   return null;\n };\n \n-export const AppRoute = ({path, data = {}, component: Component}): React.ReactElement => {\n+export const AppRoute = ({path, data = {}, guards = [], component: Component}): React.ReactElement => {\n   const routeParams = useParams();\n   const routeHistory = useHistory();\n \n-  return <Route exact={true} path={path} >\n-    <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>\n+  return <Route exact={true} path={path} render={\n+    () => {\n+      const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n+      return redirectPath\n+        ? <NavRedirect path={redirectPath}/>\n+        : <Component urlParams={routeParams} routeHistory={routeHistory} routeConfig={data}/>;\n+    }}>\n   </Route>;\n };\n \n export const ProtectedRoutes = (\n   {guards, children}: {guards: Guard[], children: any }): React.ReactElement => {\n-  const { redirectPath = null } = fp.find(({allowed}) => !allowed(), guards) || {};\n \n-  return redirectPath ? <NavRedirect path={redirectPath}/>\n-  : <Fragment>{children}</Fragment>;\n+  // Pass the guards to the individual routes. Be sure not to overwrite any existing guards\n+  const guardedChildren = fp.flow(\n+    fp.flatten,\n+    fp.toPairs,\n+    fp.map(\n+      ([key, element]: [string, React.ReactElement]) => {\n+        const {guards: elementGuards = []} = element.props;\n+        return React.cloneElement(element, {key, guards: [...elementGuards, ...guards]});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njg2ODU2Nw==", "bodyText": "Existing issue, but we're not treating this as state, right? so there is nothing to cause a route to be rerendered as a result of a registration status change, for example?\nI think this issue is purely hypothetical for now, since Angular routing should cause this to be reevaluated on every navigate anyways.", "url": "https://github.com/all-of-us/workbench/pull/3917#discussion_r476868567", "createdAt": "2020-08-25T23:40:04Z", "author": {"login": "calbach"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -23,11 +24,10 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n-// This will be added back in after the protectedRoutes fix\n-// const registrationGuard: Guard = {\n-//   allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n-//   redirectPath: '/'\n-// };\n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e09775df6bf0abc27050ddac2385e4461e40e8"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07ebef66ca58607df1097ab28c31b1ce170f1009", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/07ebef66ca58607df1097ab28c31b1ce170f1009", "committedDate": "2020-08-26T11:31:42Z", "message": "Add comments, correct guard execution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e36c68982f8d1ed13303e7e2a38cbeaf994c7a7", "author": {"user": {"login": "petesantos", "name": "Pete Santos"}}, "url": "https://github.com/all-of-us/workbench/commit/1e36c68982f8d1ed13303e7e2a38cbeaf994c7a7", "committedDate": "2020-08-26T12:28:08Z", "message": "Update children type for ProtectedRoutes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1ODIzMzcz", "url": "https://github.com/all-of-us/workbench/pull/3917#pullrequestreview-475823373", "createdAt": "2020-08-26T20:11:55Z", "commit": {"oid": "1e36c68982f8d1ed13303e7e2a38cbeaf994c7a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4343, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}