{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMTMyOTA5", "number": 3739, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNTozMFrOEKtaJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoyMzozMlrOEKuMsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjY1MTkxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNTozMFrOGr6CAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNTozMFrOGr6CAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MjczNw==", "bodyText": "Confirmed with RDR that it's OK to stop sending this - it has been bad information for a long time already.", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448692737", "createdAt": "2020-07-02T01:05:30Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/rdr/RdrExportServiceImpl.java", "diffHunk": "@@ -242,14 +242,10 @@ private RdrResearcher toRdrResearcher(DbUser dbUser) {\n       researcher.setLgbtqIdentity(dbDemographicSurvey.getLgbtqIdentity());\n       researcher.setIdentifiesAsLgbtq(dbDemographicSurvey.getIdentifiesAsLgbtq());\n     }\n-    researcher.setAffiliations(\n-        dbUser.getInstitutionalAffiliations().stream()\n-            .map(\n-                inst ->\n-                    new ResearcherAffiliation()\n-                        .institution(inst.getInstitution())\n-                        .role(inst.getRole()))\n-            .collect(Collectors.toList()));\n+\n+    // Deprecated old-style institutional affiliations\n+    // To be removed in RW-4362\n+    researcher.setAffiliations(Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d4569e0644218147646c12888df5972f1f34b0"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjY1NTg1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNzo0MFrOGr6ELA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTowNzo0MFrOGr6ELA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MzI5Mg==", "bodyText": "Affiliation is now required for user creation.  Most tests get the default, but a few use a version with a parameter.", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448693292", "createdAt": "2020-07-02T01:07:40Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -266,7 +264,7 @@ public void setUp() throws IOException {\n \n   @Test(expected = BadRequestException.class)\n   public void testCreateAccount_invitationKeyMismatch() {\n-    createUser();\n+    createUserWithVerifiedAffiliation();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6d4569e0644218147646c12888df5972f1f34b0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjcxODc0OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTo0NDowMFrOGr6oiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMTo0NDowMFrOGr6oiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwMjYwMQ==", "bodyText": "fun fact! many of these tests were invalid because leaving out the organizationTypeEnum when creating an Institution also generates a BadRequestException", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448702601", "createdAt": "2020-07-02T01:44:00Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -298,12 +296,11 @@ public void testInvitationKeyVerification_invitationKeyMismatch() {\n \n   @Test(expected = BadRequestException.class)\n   public void testCreateAccount_MismatchEmailAddress() {\n-    createUser();\n-    config.featureFlags.requireInstitutionalVerification = true;\n     final Institution broad =\n         new Institution()\n             .shortName(\"Broad\")\n             .displayName(\"The Broad Institute\")\n+            .organizationTypeEnum(OrganizationType.ACADEMIC_RESEARCH_INSTITUTION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7fdb6d75d74755270ae1ba73f2576ccf6de9f68"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc1NTMzOnYy", "diffSide": "LEFT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowNjoxOFrOGr6-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowNjoxOFrOGr6-JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODEzMw==", "bodyText": "moved and grouped below", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708133", "createdAt": "2020-07-02T02:06:18Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -246,16 +244,21 @@ public void setUp() throws IOException {\n     googleUser.setChangePasswordAtNextLogin(true);\n     googleUser.setPassword(\"testPassword\");\n     googleUser.setIsEnrolledIn2Sv(true);\n-    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc1NTcwOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowNjozOVrOGr6-aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowNjozOVrOGr6-aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODIwMQ==", "bodyText": "these 2 are moved from createUser()", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708201", "createdAt": "2020-07-02T02:06:39Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -246,16 +244,21 @@ public void setUp() throws IOException {\n     googleUser.setChangePasswordAtNextLogin(true);\n     googleUser.setPassword(\"testPassword\");\n     googleUser.setIsEnrolledIn2Sv(true);\n-    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);\n \n     DUA_VERSION = userService.getCurrentDuccVersion();\n \n+    when(mockDirectoryService.getUser(PRIMARY_EMAIL)).thenReturn(googleUser);\n+    when(mockCloudStorageService.readInvitationKey()).thenReturn(INVITATION_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc1ODg5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowOTowM1rOGr7AZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjowOTowM1rOGr7AZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODcxMQ==", "bodyText": "can you deprecate a test?  whatever, removing these soon", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708711", "createdAt": "2020-07-02T02:09:03Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -599,9 +570,10 @@ public void testMe_userBeforeNotLoggedInSuccess() {\n         false);\n   }\n \n+  @Deprecated // to be removed in RW-4362", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 286}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc2MDYwOnYy", "diffSide": "LEFT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxMDowMVrOGr7BaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxMDowMVrOGr7BaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcwODk2OA==", "bodyText": "this became equivalent to the other test testMe_success()", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448708968", "createdAt": "2020-07-02T02:10:01Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -693,33 +668,14 @@ public void testMe_removeAllInstitutionalAffiliations() {\n     assertThat(result.getInstitutionalAffiliations().size()).isEqualTo(0);\n   }\n \n-  @Test\n-  public void testMe_verifiedInstitutionalAffiliation() {\n-    config.featureFlags.requireInstitutionalVerification = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 336}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc2ODI3OnYy", "diffSide": "LEFT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxNDo0M1rOGr7F-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxNDo0M1rOGr7F-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMDEzOA==", "bodyText": "no longer possible to create a user without an affiliation", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448710138", "createdAt": "2020-07-02T02:14:43Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -812,30 +752,13 @@ public void updateVerifiedInstitutionalAffiliation_noSuchInstitution() {\n     profileController.updateVerifiedInstitutionalAffiliation(dbUser.getUserId(), newAffil);\n   }\n \n-  @Test\n-  public void updateVerifiedInstitutionalAffiliation_create() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 448}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc3NTIxOnYy", "diffSide": "LEFT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxOToxMlrOGr7KPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoxOToxMlrOGr7KPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMTIzMQ==", "bodyText": "moved these 2 to setUp()", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448711231", "createdAt": "2020-07-02T02:19:12Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -1251,18 +1145,22 @@ public void testUpdateProfile_updateDemographicSurvey() {\n         false);\n   }\n \n-  private Profile createUser() {\n-    when(mockCloudStorageService.readInvitationKey()).thenReturn(INVITATION_KEY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00d9c15427d9574acae803ac9ec71bbe3c7f11c1"}, "originalPosition": 773}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Njc4MTMxOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoyMzozMlrOGr7N8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMjoyMzozMlrOGr7N8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODcxMjE3OQ==", "bodyText": "the logic of this test was backwards until I moved the invitation key mock to where it always ran.\nPreviously: this test called invitationKeyVerification() with the correct key.  It was a BadRequest because it mismatched the mock which didn't return the correct key\nNow: mock returns correct key, and this test attempts to verify a wrong key.", "url": "https://github.com/all-of-us/workbench/pull/3739#discussion_r448712179", "createdAt": "2020-07-02T02:23:32Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -293,17 +296,17 @@ public void testCreateAccount_noRequireInvitationKey() {\n \n   @Test(expected = BadRequestException.class)\n   public void testInvitationKeyVerification_invitationKeyMismatch() {\n+    invitationVerificationRequest.setInvitationKey(\"wrong key\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9026b473027e98c00547897ff68c511318f84e2f"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2621, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}