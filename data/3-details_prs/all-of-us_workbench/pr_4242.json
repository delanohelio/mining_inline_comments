{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Mjk5MTM1", "number": 4242, "title": "[risk=low][RW-5662] Recent Resources Table", "bodyText": "Description:\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-11-02T20:29:19Z", "url": "https://github.com/all-of-us/workbench/pull/4242", "merged": true, "mergeCommit": {"oid": "18b7a193f6999e8d21c62314e05940d6e53b65ee"}, "closed": true, "closedAt": "2020-11-05T18:53:43Z", "author": {"login": "jmthibault79"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY-PBCABqjM5NTQ0NDgxODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZmazwgH2gAyNTE0Mjk5MTM1OjA2Y2I0YzBlYzQ4YzI3MmM4MzBmNjk1NGJiZTQ5NDMyMzMzZTNhMmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dc414c3ea4906270bac2d0323d2a57dee7d069c3", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/dc414c3ea4906270bac2d0323d2a57dee7d069c3", "committedDate": "2020-11-02T22:58:11Z", "message": "WorkspaceNavigation and styling"}, "afterCommit": {"oid": "b4bb7eed56fe2ad95941167d17121608a2b35fd8", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/b4bb7eed56fe2ad95941167d17121608a2b35fd8", "committedDate": "2020-11-03T19:03:26Z", "message": "lint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4bb7eed56fe2ad95941167d17121608a2b35fd8", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/b4bb7eed56fe2ad95941167d17121608a2b35fd8", "committedDate": "2020-11-03T19:03:26Z", "message": "lint"}, "afterCommit": {"oid": "3229803734d07ddc6a7979daf77e18f47bd1bfb8", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/3229803734d07ddc6a7979daf77e18f47bd1bfb8", "committedDate": "2020-11-03T19:45:45Z", "message": "tmp resourceNavigationXpath"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4697ef26bd9a028c2360537572089f68c6f6f70", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f4697ef26bd9a028c2360537572089f68c6f6f70", "committedDate": "2020-11-03T19:53:13Z", "message": "test fix"}, "afterCommit": {"oid": "9e8d024a9fbb24355637b1b1bcee5d8bad70b5fb", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9e8d024a9fbb24355637b1b1bcee5d8bad70b5fb", "committedDate": "2020-11-03T21:31:50Z", "message": "tmp resourceNavigationXpath"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e97bcd998b787f32eae649ab91518cf29c9c8ad0", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e97bcd998b787f32eae649ab91518cf29c9c8ad0", "committedDate": "2020-11-04T14:24:07Z", "message": "Begin RecentResourcesTable\nRender resource card or the menuOnly\nbetter loading state mgmt\nrename template to ResourceCard\nrm old ResourceCards\nStyledResourceType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d42c3a74eb7dc2e3e9c0f82149912a91125a574", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4d42c3a74eb7dc2e3e9c0f82149912a91125a574", "committedDate": "2020-11-04T14:24:07Z", "message": "ResourceNavigation component\n- Resource type and name are clickable to navigate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a66d4c056c242ab00636d7961818f3c10b8f34a3", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/a66d4c056c242ab00636d7961818f3c10b8f34a3", "committedDate": "2020-11-04T14:24:07Z", "message": "WorkspaceNavigation and styling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d1e85a49a391bf5d395925d140014b4a1b0f64", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/33d1e85a49a391bf5d395925d140014b4a1b0f64", "committedDate": "2020-11-04T14:24:08Z", "message": "align column headers left\n\nrm comment\n\ndata-test-id\n\nshrink the type column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "731c3c11471e4205d4b2cd2c3ae086c09b300c17", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/731c3c11471e4205d4b2cd2c3ae086c09b300c17", "committedDate": "2020-11-04T14:29:31Z", "message": "lint and revert accidental changes\n\ntmp resourceNavigationXpath\n\nrv accidental workspace-card changes\n\nrv data-test-id card-name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4508b1c95714a6d79ab21b2a133e481aac53d3ee", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4508b1c95714a6d79ab21b2a133e481aac53d3ee", "committedDate": "2020-11-04T14:29:34Z", "message": "render-resource menu test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e8d024a9fbb24355637b1b1bcee5d8bad70b5fb", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/9e8d024a9fbb24355637b1b1bcee5d8bad70b5fb", "committedDate": "2020-11-03T21:31:50Z", "message": "tmp resourceNavigationXpath"}, "afterCommit": {"oid": "4508b1c95714a6d79ab21b2a133e481aac53d3ee", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4508b1c95714a6d79ab21b2a133e481aac53d3ee", "committedDate": "2020-11-04T14:29:34Z", "message": "render-resource menu test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDMwNTk0", "url": "https://github.com/all-of-us/workbench/pull/4242#pullrequestreview-523430594", "createdAt": "2020-11-04T14:46:58Z", "commit": {"oid": "4508b1c95714a6d79ab21b2a133e481aac53d3ee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0Njo1OFrOHtbZRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDo0Njo1OFrOHtbZRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5NjgwNg==", "bodyText": "Note: the full card view is still active on the Data and Analysis pages", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517396806", "createdAt": "2020-11-04T14:46:58Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/resource-card.tsx", "diffHunk": "@@ -112,71 +131,78 @@ function canDelete(resource: WorkspaceResource): boolean {\n   return resource.permission === 'OWNER';\n }\n \n-function getColor(resource: WorkspaceResource): string {\n-  return fp.cond([\n-    [isCohort, () => colors.resourceCardHighlights.cohort],\n-    [isCohortReview, () => colors.resourceCardHighlights.cohortReview],\n-    [isConceptSet, () => colors.resourceCardHighlights.conceptSet],\n-    [isDataSet, () => colors.resourceCardHighlights.dataSet],\n-    [isNotebook, () => colors.resourceCardHighlights.notebook],\n-  ])(resource);\n+interface NavProps extends PropsWithChildren<any> {\n+  resource: WorkspaceResource;\n+  linkTestId?: string;\n+  style?: CSSProperties;\n }\n \n+const ResourceNavigation = (props: NavProps) => {\n+  const {resource, linkTestId, style = styles.resourceName, children} = props;\n+  const url = getResourceUrl(resource);\n+\n+  function canNavigate(): boolean {\n+    // can always navigate to notebooks\n+    return isNotebook(resource) || canWrite(resource);\n+  }\n+\n+  function onNavigate() {\n+    if (isNotebook(resource)) {\n+      AnalyticsTracker.Notebooks.Preview();\n+    }\n+  }\n+\n+  return <Clickable disabled={!canNavigate()}>\n+    <a style={style}\n+       data-test-id={linkTestId}\n+       href={url}\n+       onClick={e => {\n+         onNavigate();\n+         navigateAndPreventDefaultIfNoKeysPressed(e, url);\n+       }}>\n+      {...children}\n+    </a>\n+  </Clickable>;\n+};\n+\n interface Props {\n   actions: Action[];\n-  disabled: boolean;\n   resource: WorkspaceResource;\n-  onNavigate: () => void;\n+  menuOnly: boolean;  // use this component strictly for its actions, without rendering the card", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4508b1c95714a6d79ab21b2a133e481aac53d3ee"}, "originalPosition": 116}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da667dbb10293e78a45249c206495229c9d43c63", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/da667dbb10293e78a45249c206495229c9d43c63", "committedDate": "2020-11-04T14:49:06Z", "message": "RW-5847 note"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5729977fb7da9dea564a1acee4985630dd7f7a90", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/5729977fb7da9dea564a1acee4985630dd7f7a90", "committedDate": "2020-11-04T18:00:15Z", "message": "test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a", "committedDate": "2020-11-04T18:04:54Z", "message": "lint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNzQ3NTAz", "url": "https://github.com/all-of-us/workbench/pull/4242#pullrequestreview-523747503", "createdAt": "2020-11-04T21:27:19Z", "commit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMToyNzoxOVrOHtqTJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQyMTo1MzoyNFrOHtrB4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY0MDk5Ng==", "bodyText": "was this necessary for unit tests somehow?", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517640996", "createdAt": "2020-11-04T21:27:19Z", "author": {"login": "als364"}, "path": "ui/src/app/components/resource-card.tsx", "diffHunk": "@@ -112,71 +131,78 @@ function canDelete(resource: WorkspaceResource): boolean {\n   return resource.permission === 'OWNER';\n }\n \n-function getColor(resource: WorkspaceResource): string {\n-  return fp.cond([\n-    [isCohort, () => colors.resourceCardHighlights.cohort],\n-    [isCohortReview, () => colors.resourceCardHighlights.cohortReview],\n-    [isConceptSet, () => colors.resourceCardHighlights.conceptSet],\n-    [isDataSet, () => colors.resourceCardHighlights.dataSet],\n-    [isNotebook, () => colors.resourceCardHighlights.notebook],\n-  ])(resource);\n+interface NavProps extends PropsWithChildren<any> {\n+  resource: WorkspaceResource;\n+  linkTestId?: string;\n+  style?: CSSProperties;\n }\n \n+const ResourceNavigation = (props: NavProps) => {\n+  const {resource, linkTestId, style = styles.resourceName, children} = props;\n+  const url = getResourceUrl(resource);\n+\n+  function canNavigate(): boolean {\n+    // can always navigate to notebooks\n+    return isNotebook(resource) || canWrite(resource);\n+  }\n+\n+  function onNavigate() {\n+    if (isNotebook(resource)) {\n+      AnalyticsTracker.Notebooks.Preview();\n+    }\n+  }\n+\n+  return <Clickable disabled={!canNavigate()}>\n+    <a style={style}\n+       data-test-id={linkTestId}\n+       href={url}\n+       onClick={e => {\n+         onNavigate();\n+         navigateAndPreventDefaultIfNoKeysPressed(e, url);\n+       }}>\n+      {...children}\n+    </a>\n+  </Clickable>;\n+};\n+\n interface Props {\n   actions: Action[];\n-  disabled: boolean;\n   resource: WorkspaceResource;\n-  onNavigate: () => void;\n+  menuOnly: boolean;  // use this component strictly for its actions, without rendering the card", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5NjgwNg=="}, "originalCommit": {"oid": "4508b1c95714a6d79ab21b2a133e481aac53d3ee"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1MDIzNA==", "bodyText": "ooh, when did this get renamed? i like this name", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517650234", "createdAt": "2020-11-04T21:47:36Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/homepage/recent-resources.tsx", "diffHunk": "@@ -1,99 +1,137 @@\n import * as fp from 'lodash/fp';\n import * as React from 'react';\n \n-import {FlexRow} from 'app/components/flex';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import {CSSProperties, useEffect, useState} from 'react';\n+\n+import {Clickable} from 'app/components/buttons';\n import {SmallHeader} from 'app/components/headers';\n import {renderResourceCard} from 'app/components/render-resource-card';\n+import {ResourceNavigation, StyledResourceType} from 'app/components/resource-card';\n import {SpinnerOverlay} from 'app/components/spinners';\n-import {Scroll} from 'app/icons/scroll';\n-import {userMetricsApi} from 'app/services/swagger-fetch-clients';\n-import {WorkspaceResource} from 'generated/fetch';\n-import {withContentRect} from 'react-measure';\n-\n-export const RecentResources = (fp.flow as any)(\n-  withContentRect('client'),\n-)(class extends React.Component<{\n-  measureRef: React.Ref<any>,\n-  contentRect: {client: {width: number}},\n-  dark: boolean\n-}, {\n-  loading: boolean,\n-  offset: number,\n-  resources: WorkspaceResource[],\n-  existingCohortName: string[],\n-  existingConceptName: string[],\n-  existingNotebookName: string[]\n-}> {\n-\n-  constructor(props) {\n-    super(props);\n-    this.state = {\n-      loading: false,\n-      resources: [],\n-      offset: 0,\n-      existingCohortName: [],\n-      existingConceptName: [],\n-      existingNotebookName: []};\n-  }\n+import {userMetricsApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n+import {formatWorkspaceResourceDisplayDate, getCdrVersion, reactStyles, withCdrVersions} from 'app/utils';\n+import {navigateAndPreventDefaultIfNoKeysPressed} from 'app/utils/navigation';\n+import {getDisplayName} from 'app/utils/resources';\n+import {CdrVersionListResponse, Workspace, WorkspaceResource, WorkspaceResourceResponse} from 'generated/fetch';\n \n-  componentDidMount() {\n-    this.loadResources();\n+const styles = reactStyles({\n+  column: {\n+    textAlign: 'left',\n+  },\n+  typeColumn: {\n+    textAlign: 'left',\n+    width: '130px',\n+  },\n+  menu: {\n+    width: '30px',\n+  },\n+  navigation: {\n+    fontFamily: 'Montserrat',\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '22px',\n   }\n+});\n \n-  async loadResources() {\n-    try {\n-      this.setState({loading: true});\n-      const resources = await userMetricsApi().getUserRecentResources();\n-      this.setState({resources});\n-    } catch (error) {\n-      console.error(error);\n-    } finally {\n-      this.setState({loading: false});\n-    }\n-  }\n+const WorkspaceNavigation = (props: {workspace: Workspace, style?: CSSProperties}) => {\n+  const {workspace: {name, namespace, id}, style} = props;\n+  const url = `/workspaces/${namespace}/${id}/data`;\n+\n+  return <Clickable>\n+    <a data-test-id='workspace-navigation'\n+       style={style}\n+       href={url}\n+       onClick={e => navigateAndPreventDefaultIfNoKeysPressed(e, url)}>\n+      {name}\n+    </a>\n+  </Clickable>;\n+};\n+\n+interface TableData {\n+  menu: JSX.Element;\n+  resourceType: JSX.Element;\n+  resourceName: JSX.Element;\n+  workspaceName: JSX.Element;\n+  formattedLastModified: string;\n+  cdrVersionName: string;\n+}\n+\n+const RecentResources = fp.flow(withCdrVersions())((props: {cdrVersionListResponse: CdrVersionListResponse}) => {\n+  const [loading, setLoading] = useState(true);\n+  const [resources, setResources] = useState<WorkspaceResourceResponse>();\n+  const [wsMap, setWorkspaceMap] = useState<Map<string, Workspace>>();\n+  const [tableData, setTableData] = useState<TableData[]>();\n+\n+  const loadResources = () => {\n+    setLoading(true);\n+    return userMetricsApi().getUserRecentResources()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1MDY0MA==", "bodyText": "any way to do this with fp? nbd if not", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517650640", "createdAt": "2020-11-04T21:48:33Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/homepage/recent-resources.tsx", "diffHunk": "@@ -1,99 +1,137 @@\n import * as fp from 'lodash/fp';\n import * as React from 'react';\n \n-import {FlexRow} from 'app/components/flex';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import {CSSProperties, useEffect, useState} from 'react';\n+\n+import {Clickable} from 'app/components/buttons';\n import {SmallHeader} from 'app/components/headers';\n import {renderResourceCard} from 'app/components/render-resource-card';\n+import {ResourceNavigation, StyledResourceType} from 'app/components/resource-card';\n import {SpinnerOverlay} from 'app/components/spinners';\n-import {Scroll} from 'app/icons/scroll';\n-import {userMetricsApi} from 'app/services/swagger-fetch-clients';\n-import {WorkspaceResource} from 'generated/fetch';\n-import {withContentRect} from 'react-measure';\n-\n-export const RecentResources = (fp.flow as any)(\n-  withContentRect('client'),\n-)(class extends React.Component<{\n-  measureRef: React.Ref<any>,\n-  contentRect: {client: {width: number}},\n-  dark: boolean\n-}, {\n-  loading: boolean,\n-  offset: number,\n-  resources: WorkspaceResource[],\n-  existingCohortName: string[],\n-  existingConceptName: string[],\n-  existingNotebookName: string[]\n-}> {\n-\n-  constructor(props) {\n-    super(props);\n-    this.state = {\n-      loading: false,\n-      resources: [],\n-      offset: 0,\n-      existingCohortName: [],\n-      existingConceptName: [],\n-      existingNotebookName: []};\n-  }\n+import {userMetricsApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n+import {formatWorkspaceResourceDisplayDate, getCdrVersion, reactStyles, withCdrVersions} from 'app/utils';\n+import {navigateAndPreventDefaultIfNoKeysPressed} from 'app/utils/navigation';\n+import {getDisplayName} from 'app/utils/resources';\n+import {CdrVersionListResponse, Workspace, WorkspaceResource, WorkspaceResourceResponse} from 'generated/fetch';\n \n-  componentDidMount() {\n-    this.loadResources();\n+const styles = reactStyles({\n+  column: {\n+    textAlign: 'left',\n+  },\n+  typeColumn: {\n+    textAlign: 'left',\n+    width: '130px',\n+  },\n+  menu: {\n+    width: '30px',\n+  },\n+  navigation: {\n+    fontFamily: 'Montserrat',\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '22px',\n   }\n+});\n \n-  async loadResources() {\n-    try {\n-      this.setState({loading: true});\n-      const resources = await userMetricsApi().getUserRecentResources();\n-      this.setState({resources});\n-    } catch (error) {\n-      console.error(error);\n-    } finally {\n-      this.setState({loading: false});\n-    }\n-  }\n+const WorkspaceNavigation = (props: {workspace: Workspace, style?: CSSProperties}) => {\n+  const {workspace: {name, namespace, id}, style} = props;\n+  const url = `/workspaces/${namespace}/${id}/data`;\n+\n+  return <Clickable>\n+    <a data-test-id='workspace-navigation'\n+       style={style}\n+       href={url}\n+       onClick={e => navigateAndPreventDefaultIfNoKeysPressed(e, url)}>\n+      {name}\n+    </a>\n+  </Clickable>;\n+};\n+\n+interface TableData {\n+  menu: JSX.Element;\n+  resourceType: JSX.Element;\n+  resourceName: JSX.Element;\n+  workspaceName: JSX.Element;\n+  formattedLastModified: string;\n+  cdrVersionName: string;\n+}\n+\n+const RecentResources = fp.flow(withCdrVersions())((props: {cdrVersionListResponse: CdrVersionListResponse}) => {\n+  const [loading, setLoading] = useState(true);\n+  const [resources, setResources] = useState<WorkspaceResourceResponse>();\n+  const [wsMap, setWorkspaceMap] = useState<Map<string, Workspace>>();\n+  const [tableData, setTableData] = useState<TableData[]>();\n+\n+  const loadResources = () => {\n+    setLoading(true);\n+    return userMetricsApi().getUserRecentResources()\n+      .then(setResources)\n+      .then(() => setLoading(false));\n+  };\n \n-  getExistingNameList(resource) {\n-    if (resource.notebook) {\n-      return this.state.existingNotebookName;\n-    } else if (resource.conceptSet) {\n-      return this.state.existingConceptName;\n-    } else if (resource.cohort) {\n-      return this.state.existingCohortName;\n+  useEffect(() => {\n+    loadResources();\n+  }, []);\n+\n+  useEffect(() => {\n+    workspacesApi().getWorkspaces().then(response => {\n+      const workspaces = response.items.map(r => [r.workspace.id, r.workspace] as [string, Workspace]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1MTk2NA==", "bodyText": "i have a vague recollection of it being a PITA and may involve fp.flow and fp.toPairs", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517651964", "createdAt": "2020-11-04T21:51:12Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/homepage/recent-resources.tsx", "diffHunk": "@@ -1,99 +1,137 @@\n import * as fp from 'lodash/fp';\n import * as React from 'react';\n \n-import {FlexRow} from 'app/components/flex';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import {CSSProperties, useEffect, useState} from 'react';\n+\n+import {Clickable} from 'app/components/buttons';\n import {SmallHeader} from 'app/components/headers';\n import {renderResourceCard} from 'app/components/render-resource-card';\n+import {ResourceNavigation, StyledResourceType} from 'app/components/resource-card';\n import {SpinnerOverlay} from 'app/components/spinners';\n-import {Scroll} from 'app/icons/scroll';\n-import {userMetricsApi} from 'app/services/swagger-fetch-clients';\n-import {WorkspaceResource} from 'generated/fetch';\n-import {withContentRect} from 'react-measure';\n-\n-export const RecentResources = (fp.flow as any)(\n-  withContentRect('client'),\n-)(class extends React.Component<{\n-  measureRef: React.Ref<any>,\n-  contentRect: {client: {width: number}},\n-  dark: boolean\n-}, {\n-  loading: boolean,\n-  offset: number,\n-  resources: WorkspaceResource[],\n-  existingCohortName: string[],\n-  existingConceptName: string[],\n-  existingNotebookName: string[]\n-}> {\n-\n-  constructor(props) {\n-    super(props);\n-    this.state = {\n-      loading: false,\n-      resources: [],\n-      offset: 0,\n-      existingCohortName: [],\n-      existingConceptName: [],\n-      existingNotebookName: []};\n-  }\n+import {userMetricsApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n+import {formatWorkspaceResourceDisplayDate, getCdrVersion, reactStyles, withCdrVersions} from 'app/utils';\n+import {navigateAndPreventDefaultIfNoKeysPressed} from 'app/utils/navigation';\n+import {getDisplayName} from 'app/utils/resources';\n+import {CdrVersionListResponse, Workspace, WorkspaceResource, WorkspaceResourceResponse} from 'generated/fetch';\n \n-  componentDidMount() {\n-    this.loadResources();\n+const styles = reactStyles({\n+  column: {\n+    textAlign: 'left',\n+  },\n+  typeColumn: {\n+    textAlign: 'left',\n+    width: '130px',\n+  },\n+  menu: {\n+    width: '30px',\n+  },\n+  navigation: {\n+    fontFamily: 'Montserrat',\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '22px',\n   }\n+});\n \n-  async loadResources() {\n-    try {\n-      this.setState({loading: true});\n-      const resources = await userMetricsApi().getUserRecentResources();\n-      this.setState({resources});\n-    } catch (error) {\n-      console.error(error);\n-    } finally {\n-      this.setState({loading: false});\n-    }\n-  }\n+const WorkspaceNavigation = (props: {workspace: Workspace, style?: CSSProperties}) => {\n+  const {workspace: {name, namespace, id}, style} = props;\n+  const url = `/workspaces/${namespace}/${id}/data`;\n+\n+  return <Clickable>\n+    <a data-test-id='workspace-navigation'\n+       style={style}\n+       href={url}\n+       onClick={e => navigateAndPreventDefaultIfNoKeysPressed(e, url)}>\n+      {name}\n+    </a>\n+  </Clickable>;\n+};\n+\n+interface TableData {\n+  menu: JSX.Element;\n+  resourceType: JSX.Element;\n+  resourceName: JSX.Element;\n+  workspaceName: JSX.Element;\n+  formattedLastModified: string;\n+  cdrVersionName: string;\n+}\n+\n+const RecentResources = fp.flow(withCdrVersions())((props: {cdrVersionListResponse: CdrVersionListResponse}) => {\n+  const [loading, setLoading] = useState(true);\n+  const [resources, setResources] = useState<WorkspaceResourceResponse>();\n+  const [wsMap, setWorkspaceMap] = useState<Map<string, Workspace>>();\n+  const [tableData, setTableData] = useState<TableData[]>();\n+\n+  const loadResources = () => {\n+    setLoading(true);\n+    return userMetricsApi().getUserRecentResources()\n+      .then(setResources)\n+      .then(() => setLoading(false));\n+  };\n \n-  getExistingNameList(resource) {\n-    if (resource.notebook) {\n-      return this.state.existingNotebookName;\n-    } else if (resource.conceptSet) {\n-      return this.state.existingConceptName;\n-    } else if (resource.cohort) {\n-      return this.state.existingCohortName;\n+  useEffect(() => {\n+    loadResources();\n+  }, []);\n+\n+  useEffect(() => {\n+    workspacesApi().getWorkspaces().then(response => {\n+      const workspaces = response.items.map(r => [r.workspace.id, r.workspace] as [string, Workspace]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1MDY0MA=="}, "originalCommit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzY1Mjk2MQ==", "bodyText": "IIRC this is what allows the automagical sorting by each column?", "url": "https://github.com/all-of-us/workbench/pull/4242#discussion_r517652961", "createdAt": "2020-11-04T21:53:24Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/homepage/recent-resources.tsx", "diffHunk": "@@ -1,99 +1,137 @@\n import * as fp from 'lodash/fp';\n import * as React from 'react';\n \n-import {FlexRow} from 'app/components/flex';\n+import {Column} from 'primereact/column';\n+import {DataTable} from 'primereact/datatable';\n+import {CSSProperties, useEffect, useState} from 'react';\n+\n+import {Clickable} from 'app/components/buttons';\n import {SmallHeader} from 'app/components/headers';\n import {renderResourceCard} from 'app/components/render-resource-card';\n+import {ResourceNavigation, StyledResourceType} from 'app/components/resource-card';\n import {SpinnerOverlay} from 'app/components/spinners';\n-import {Scroll} from 'app/icons/scroll';\n-import {userMetricsApi} from 'app/services/swagger-fetch-clients';\n-import {WorkspaceResource} from 'generated/fetch';\n-import {withContentRect} from 'react-measure';\n-\n-export const RecentResources = (fp.flow as any)(\n-  withContentRect('client'),\n-)(class extends React.Component<{\n-  measureRef: React.Ref<any>,\n-  contentRect: {client: {width: number}},\n-  dark: boolean\n-}, {\n-  loading: boolean,\n-  offset: number,\n-  resources: WorkspaceResource[],\n-  existingCohortName: string[],\n-  existingConceptName: string[],\n-  existingNotebookName: string[]\n-}> {\n-\n-  constructor(props) {\n-    super(props);\n-    this.state = {\n-      loading: false,\n-      resources: [],\n-      offset: 0,\n-      existingCohortName: [],\n-      existingConceptName: [],\n-      existingNotebookName: []};\n-  }\n+import {userMetricsApi, workspacesApi} from 'app/services/swagger-fetch-clients';\n+import {formatWorkspaceResourceDisplayDate, getCdrVersion, reactStyles, withCdrVersions} from 'app/utils';\n+import {navigateAndPreventDefaultIfNoKeysPressed} from 'app/utils/navigation';\n+import {getDisplayName} from 'app/utils/resources';\n+import {CdrVersionListResponse, Workspace, WorkspaceResource, WorkspaceResourceResponse} from 'generated/fetch';\n \n-  componentDidMount() {\n-    this.loadResources();\n+const styles = reactStyles({\n+  column: {\n+    textAlign: 'left',\n+  },\n+  typeColumn: {\n+    textAlign: 'left',\n+    width: '130px',\n+  },\n+  menu: {\n+    width: '30px',\n+  },\n+  navigation: {\n+    fontFamily: 'Montserrat',\n+    fontSize: '14px',\n+    letterSpacing: 0,\n+    lineHeight: '22px',\n   }\n+});\n \n-  async loadResources() {\n-    try {\n-      this.setState({loading: true});\n-      const resources = await userMetricsApi().getUserRecentResources();\n-      this.setState({resources});\n-    } catch (error) {\n-      console.error(error);\n-    } finally {\n-      this.setState({loading: false});\n-    }\n-  }\n+const WorkspaceNavigation = (props: {workspace: Workspace, style?: CSSProperties}) => {\n+  const {workspace: {name, namespace, id}, style} = props;\n+  const url = `/workspaces/${namespace}/${id}/data`;\n+\n+  return <Clickable>\n+    <a data-test-id='workspace-navigation'\n+       style={style}\n+       href={url}\n+       onClick={e => navigateAndPreventDefaultIfNoKeysPressed(e, url)}>\n+      {name}\n+    </a>\n+  </Clickable>;\n+};\n+\n+interface TableData {\n+  menu: JSX.Element;\n+  resourceType: JSX.Element;\n+  resourceName: JSX.Element;\n+  workspaceName: JSX.Element;\n+  formattedLastModified: string;\n+  cdrVersionName: string;\n+}\n+\n+const RecentResources = fp.flow(withCdrVersions())((props: {cdrVersionListResponse: CdrVersionListResponse}) => {\n+  const [loading, setLoading] = useState(true);\n+  const [resources, setResources] = useState<WorkspaceResourceResponse>();\n+  const [wsMap, setWorkspaceMap] = useState<Map<string, Workspace>>();\n+  const [tableData, setTableData] = useState<TableData[]>();\n+\n+  const loadResources = () => {\n+    setLoading(true);\n+    return userMetricsApi().getUserRecentResources()\n+      .then(setResources)\n+      .then(() => setLoading(false));\n+  };\n \n-  getExistingNameList(resource) {\n-    if (resource.notebook) {\n-      return this.state.existingNotebookName;\n-    } else if (resource.conceptSet) {\n-      return this.state.existingConceptName;\n-    } else if (resource.cohort) {\n-      return this.state.existingCohortName;\n+  useEffect(() => {\n+    loadResources();\n+  }, []);\n+\n+  useEffect(() => {\n+    workspacesApi().getWorkspaces().then(response => {\n+      const workspaces = response.items.map(r => [r.workspace.id, r.workspace] as [string, Workspace]);\n+      setWorkspaceMap(new Map(workspaces));\n+    });\n+  }, []);\n+\n+  const renderResourceMenu = (resource: WorkspaceResource) => {\n+    return renderResourceCard({\n+      resource,\n+      menuOnly: true,\n+      existingNameList: [],   // TODO existing bug RW-5847: does not populate names for rename modal\n+      onUpdate: loadResources});\n+  };\n+\n+  useEffect(() => {\n+    const getWorkspace = (r: WorkspaceResource) => {\n+      return wsMap.get(r.workspaceFirecloudName);\n+    };\n+\n+    const getCdrVersionName = (r: WorkspaceResource) => {\n+      const {cdrVersionListResponse} = props;\n+      return getCdrVersion(getWorkspace(r), cdrVersionListResponse).name;\n+    };\n+\n+    if (resources && wsMap) {\n+      setTableData(resources.map(r => {\n+        return {\n+          menu: renderResourceMenu(r),\n+          resourceType: <ResourceNavigation resource={r}><StyledResourceType resource={r}/></ResourceNavigation>,\n+          resourceName: <ResourceNavigation resource={r} style={styles.navigation}>{getDisplayName(r)}</ResourceNavigation>,\n+          workspaceName: <WorkspaceNavigation workspace={getWorkspace(r)} style={styles.navigation}/>,\n+          formattedLastModified: formatWorkspaceResourceDisplayDate(r.modifiedTime),\n+          cdrVersionName: getCdrVersionName(r),\n+        };\n+      }));\n     }\n-    return [];\n-  }\n+  }, [resources, wsMap]);\n \n-  render() {\n-    const {contentRect, measureRef} = this.props;\n-    const {offset, resources, loading} = this.state;\n-    const limit = (contentRect.client.width - 24) / 224;\n-    return (resources !== null && resources.length > 0) || loading ?\n-      <React.Fragment>\n-        <SmallHeader>Recently Accessed Items</SmallHeader>\n-        <div ref={measureRef} style={{display: 'flex', position: 'relative', minHeight: 247}}>\n-          <FlexRow style={{position: 'relative', alignItems: 'center', marginTop: '-1rem',\n-            marginLeft: '-1rem', paddingLeft: '1rem', opacity: loading ? 0.5 : 1}}>\n-            {resources.slice(offset, offset + limit).map((resource, i) => {\n-              return <div key={i}> {renderResourceCard({\n-                resource: resource,\n-                existingNameList: this.getExistingNameList(resource),\n-                onUpdate: () => this.loadResources(),\n-              })} </div>;\n-            })}\n-            {offset > 0 && <Scroll\n-              dir='left'\n-              onClick={() => this.setState({offset: offset - 1})}\n-              style={{position: 'absolute', left: 0, paddingBottom: '0.5rem'}}\n-            />}\n-            {offset + limit < resources.length && <Scroll\n-              dir='right'\n-              onClick={() => this.setState({offset: offset + 1})}\n-              style={{position: 'absolute', right: 0, paddingBottom: '0.5rem'}}\n-            />}\n-          </FlexRow>\n-          {loading && <SpinnerOverlay dark={this.props.dark} />}\n-        </div>\n-      </React.Fragment> :\n-      null;\n-  }\n+  return (resources && wsMap && !loading) ? <React.Fragment>\n+    <SmallHeader>Recently Accessed Items</SmallHeader>\n+      <div data-test-id='recent-resources-table'><DataTable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7cc8bcfe8df015a9da8601ee9fe26f3c5ae597a"}, "originalPosition": 205}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c91b2eebf5a1b4cdee3b28364e21a9a4f7ef4bfd", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/c91b2eebf5a1b4cdee3b28364e21a9a4f7ef4bfd", "committedDate": "2020-11-05T18:05:40Z", "message": "move ResourceActionsMenu component to its own file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06cb4c0ec48c272c830f6954bbe49432333e3a2c", "author": {"user": {"login": "jmthibault79", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/06cb4c0ec48c272c830f6954bbe49432333e3a2c", "committedDate": "2020-11-05T18:11:01Z", "message": "formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3820, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}