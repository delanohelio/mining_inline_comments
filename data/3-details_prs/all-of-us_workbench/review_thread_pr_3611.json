{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDkwMzc3", "number": 3611, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1MzoxM1rOD-sUbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoxODoxNVrOD-s0wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDY0NDMwOnYy", "diffSide": "RIGHT", "path": "e2e/app/component/workspace-card.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1MzoxM1rOGY80tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1MzoxM1rOGY80tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxNTU0Mw==", "bodyText": "Rename getAllCards and getAnyCard methods to have consistent method names convention.", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428815543", "createdAt": "2020-05-21T17:53:13Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/workspace-card.ts", "diffHunk": "@@ -27,16 +27,16 @@ export default class WorkspaceCard {\n    * @param {Page} page\n    * @throws TimeoutError if fails to find Card.\n    */\n-  static async getAllCards(page: Page): Promise<WorkspaceCard[]> {\n+  static async findAllCards(page: Page): Promise<WorkspaceCard[]> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDY0OTYzOnYy", "diffSide": "LEFT", "path": "e2e/resources/workbench-config.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1NDo0N1rOGY84PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1NDo0N1rOGY84PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxNjQ0NQ==", "bodyText": "no longer using this email.", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428816445", "createdAt": "2020-05-21T17:54:47Z", "author": {"login": "aweng98"}, "path": "e2e/resources/workbench-config.ts", "diffHunk": "@@ -4,11 +4,9 @@ import * as fp from 'lodash/fp';\n const env = process.env.WORKBENCH_ENV || 'dev';\n \n const userCredential = {\n-  contactEmail: 'hermione.owner@quality.firecloud.org',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDY1MzA2OnYy", "diffSide": "RIGHT", "path": "e2e/tests/workspace/workspace-clone.spec.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1NTo0OVrOGY86dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNzo1NTo0OVrOGY86dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgxNzAxNA==", "bodyText": "tweaks to run this test against local ui server in circleci", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428817014", "createdAt": "2020-05-21T17:55:49Z", "author": {"login": "aweng98"}, "path": "e2e/tests/workspace/workspace-clone.spec.ts", "diffHunk": "@@ -84,12 +90,20 @@ describe('Clone workspace', () => {\n       // strips out dash from workspace name\n       expect(workspaceDataUrl).toContain(cloneWorkspaceName.replace(/-/g, ''));\n \n+      // starting a new incognito page\n+      await page.deleteCookie(...await page.cookies());\n       await jestPuppeteer.resetBrowser();\n-      const newPage = await browser.newPage();\n+      await page.waitFor(2000);\n+      const newBrowser = await browser.createIncognitoBrowserContext();\n+      const newPage = await newBrowser.newPage();\n+      const userAgent = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36';\n+      await newPage.setUserAgent(userAgent);\n       await signIn(newPage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MDcyNzA1OnYy", "diffSide": "RIGHT", "path": "e2e/puppeteer-custom-environment.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxODoxODoxNVrOGY9qWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxOToxMjozNVrOGY_ZaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyOTI3NQ==", "bodyText": "save page html and take a screenshot when test fails.", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428829275", "createdAt": "2020-05-21T18:18:15Z", "author": {"login": "aweng98"}, "path": "e2e/puppeteer-custom-environment.ts", "diffHunk": "@@ -21,24 +21,46 @@ class PuppeteerCustomEnvironment extends PuppeteerEnvironment {\n   async handleTestEvent(event, state) {\n     switch (event.name) {\n     case 'test_fn_failure':\n-      console.log('test failed: \\t', event.test.name);\n       if (state.currentlyRunningTest.invocations > retryTimes) {\n-        const testName = state.currentlyRunningTest.name.replace(/\\s/g, ''); // remove whitespaces\n+        console.error(`Failed test:  \"${event.test.name}\"`);\n+        const testName = fp.startCase(state.currentlyRunningTest.name).replace(/[^A-Z0-9]+/ig, '');\n         const screenshotDir = 'logs/screenshot';\n         await fs.ensureDir(screenshotDir);\n           // move create-filename to helper.ts\n         const timestamp = new Date().getTime();\n-        const fileName = `${testName}_${timestamp}.png`\n+        const fileName = `${testName}_${timestamp}.png`;\n+\n         const screenshotFile = `${screenshotDir}/${fileName}`;\n         await this.global.page.screenshot({path: screenshotFile, fullPage: true});\n-        console.error(`Test \"${event.test.name}\" failed. Saved screenshot ${screenshotFile}.`);\n+        console.error(`Saved screenshot ${screenshotFile}`);\n+\n+        const htmlFileName = `${testName}_${timestamp}.html`;\n+        await this.savePageToFile(htmlFileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1NzI2Mw==", "bodyText": "@als364 This change is it. Others are cleanup and improvement. \ud83d\ude42Thanks for the quick turnaround.", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428857263", "createdAt": "2020-05-21T19:11:30Z", "author": {"login": "aweng98"}, "path": "e2e/puppeteer-custom-environment.ts", "diffHunk": "@@ -21,24 +21,46 @@ class PuppeteerCustomEnvironment extends PuppeteerEnvironment {\n   async handleTestEvent(event, state) {\n     switch (event.name) {\n     case 'test_fn_failure':\n-      console.log('test failed: \\t', event.test.name);\n       if (state.currentlyRunningTest.invocations > retryTimes) {\n-        const testName = state.currentlyRunningTest.name.replace(/\\s/g, ''); // remove whitespaces\n+        console.error(`Failed test:  \"${event.test.name}\"`);\n+        const testName = fp.startCase(state.currentlyRunningTest.name).replace(/[^A-Z0-9]+/ig, '');\n         const screenshotDir = 'logs/screenshot';\n         await fs.ensureDir(screenshotDir);\n           // move create-filename to helper.ts\n         const timestamp = new Date().getTime();\n-        const fileName = `${testName}_${timestamp}.png`\n+        const fileName = `${testName}_${timestamp}.png`;\n+\n         const screenshotFile = `${screenshotDir}/${fileName}`;\n         await this.global.page.screenshot({path: screenshotFile, fullPage: true});\n-        console.error(`Test \"${event.test.name}\" failed. Saved screenshot ${screenshotFile}.`);\n+        console.error(`Saved screenshot ${screenshotFile}`);\n+\n+        const htmlFileName = `${testName}_${timestamp}.html`;\n+        await this.savePageToFile(htmlFileName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyOTI3NQ=="}, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODg1NzcwNQ==", "bodyText": "thank you!", "url": "https://github.com/all-of-us/workbench/pull/3611#discussion_r428857705", "createdAt": "2020-05-21T19:12:35Z", "author": {"login": "als364"}, "path": "e2e/puppeteer-custom-environment.ts", "diffHunk": "@@ -21,24 +21,46 @@ class PuppeteerCustomEnvironment extends PuppeteerEnvironment {\n   async handleTestEvent(event, state) {\n     switch (event.name) {\n     case 'test_fn_failure':\n-      console.log('test failed: \\t', event.test.name);\n       if (state.currentlyRunningTest.invocations > retryTimes) {\n-        const testName = state.currentlyRunningTest.name.replace(/\\s/g, ''); // remove whitespaces\n+        console.error(`Failed test:  \"${event.test.name}\"`);\n+        const testName = fp.startCase(state.currentlyRunningTest.name).replace(/[^A-Z0-9]+/ig, '');\n         const screenshotDir = 'logs/screenshot';\n         await fs.ensureDir(screenshotDir);\n           // move create-filename to helper.ts\n         const timestamp = new Date().getTime();\n-        const fileName = `${testName}_${timestamp}.png`\n+        const fileName = `${testName}_${timestamp}.png`;\n+\n         const screenshotFile = `${screenshotDir}/${fileName}`;\n         await this.global.page.screenshot({path: screenshotFile, fullPage: true});\n-        console.error(`Test \"${event.test.name}\" failed. Saved screenshot ${screenshotFile}.`);\n+        console.error(`Saved screenshot ${screenshotFile}`);\n+\n+        const htmlFileName = `${testName}_${timestamp}.html`;\n+        await this.savePageToFile(htmlFileName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyOTI3NQ=="}, "originalCommit": {"oid": "b902c9af70c4c343d67be52c0fa3cce368e73bc8"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2713, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}