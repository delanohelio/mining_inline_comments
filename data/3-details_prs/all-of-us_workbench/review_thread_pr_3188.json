{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjkyOTE1", "number": 3188, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMjozOVrODjHGgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1NTozOVrODjIiOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTQzMTA2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTowMjozOVrOFuvBsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzoyNDoxMFrOFvEGnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0OTI5Nw==", "bodyText": "This header is going to show up even if we haven't searched a project. When I wrote this page I deliberately made sure it wouldn't. Not the biggest deal for an internal page though.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384549297", "createdAt": "2020-02-26T15:02:39Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -130,23 +199,14 @@ export class AdminWorkspace extends React.Component<{}, State> {\n           Search\n         </Button>\n       </FlexRow>\n-      {\n-        workspace && <FlexColumn>\n-          <h3>Workspace Admin Actions</h3>\n-          <FlexRow style={{justifyContent: 'space-between'}}>\n-            <Button>Shut down all VMs</Button>\n-            <Button>Disable workspace</Button>\n-            <Button>Disable all collaborators</Button>\n-            <Button>Exclude from public directory</Button>\n-            <Button>Log administrative comment</Button>\n-            <Button>Publish workspace</Button>\n-          </FlexRow>\n-        </FlexColumn>\n-      }\n-      {workspace && resources.workspaceObjects && resources.cloudStorage && collaborators &&\n-        <FlexRow>\n-          <FlexColumn style={styles.wideWithMargin}>\n-            <h3>Basic Information</h3>\n+\n+      {loadingData && <SpinnerOverlay />}\n+\n+      <h2>Workspace</h2>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg5NDYyMQ==", "bodyText": "Good point \u2013\u00a0fixed.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384894621", "createdAt": "2020-02-27T03:24:10Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -130,23 +199,14 @@ export class AdminWorkspace extends React.Component<{}, State> {\n           Search\n         </Button>\n       </FlexRow>\n-      {\n-        workspace && <FlexColumn>\n-          <h3>Workspace Admin Actions</h3>\n-          <FlexRow style={{justifyContent: 'space-between'}}>\n-            <Button>Shut down all VMs</Button>\n-            <Button>Disable workspace</Button>\n-            <Button>Disable all collaborators</Button>\n-            <Button>Exclude from public directory</Button>\n-            <Button>Log administrative comment</Button>\n-            <Button>Publish workspace</Button>\n-          </FlexRow>\n-        </FlexColumn>\n-      }\n-      {workspace && resources.workspaceObjects && resources.cloudStorage && collaborators &&\n-        <FlexRow>\n-          <FlexColumn style={styles.wideWithMargin}>\n-            <h3>Basic Information</h3>\n+\n+      {loadingData && <SpinnerOverlay />}\n+\n+      <h2>Workspace</h2>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU0OTI5Nw=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 242}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU5NTA5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozOTo1MlrOFuwnfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOTo1ODoxM1rOFu6H7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3NTM1OA==", "bodyText": "Why six hours specifically?", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384575358", "createdAt": "2020-02-26T15:39:52Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -26,6 +35,10 @@\n \n @RestController\n public class WorkspaceAdminController implements WorkspaceAdminApiDelegate {\n+\n+  private static final Duration TRAILING_TIME_TO_QUERY = Duration.ofHours(6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDczMTExOQ==", "bodyText": "Dunno \u2013\u00a0it felt like a reasonable historical period to catch any recent blips of activity. I'd originally had 2 days, but that meant that a short window of activity got smushed into a very narrow peak, which was often hard to see.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384731119", "createdAt": "2020-02-26T19:58:13Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -26,6 +35,10 @@\n \n @RestController\n public class WorkspaceAdminController implements WorkspaceAdminApiDelegate {\n+\n+  private static final Duration TRAILING_TIME_TO_QUERY = Duration.ofHours(6);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3NTM1OA=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU5NjAzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0MDowNlrOFuwoFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTozNTo0NFrOFvCdSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3NTUxMA==", "bodyText": "Extraneous (unless you meant to put javadoc and forgot)", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384575510", "createdAt": "2020-02-26T15:40:06Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -34,18 +47,43 @@\n \n   @Autowired\n   public WorkspaceAdminController(\n+      CloudMonitoringService cloudMonitoringService,\n       FireCloudService fireCloudService,\n       LeonardoNotebooksClient leonardoNotebooksClient,\n       WorkspaceAdminService workspaceAdminService,\n       WorkspaceMapper workspaceMapper,\n       WorkspaceService workspaceService) {\n+    this.cloudMonitoringService = cloudMonitoringService;\n     this.fireCloudService = fireCloudService;\n     this.leonardoNotebooksClient = leonardoNotebooksClient;\n     this.workspaceAdminService = workspaceAdminService;\n     this.workspaceMapper = workspaceMapper;\n     this.workspaceService = workspaceService;\n   }\n \n+  /** */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NzY1Ng==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384867656", "createdAt": "2020-02-27T01:35:44Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -34,18 +47,43 @@\n \n   @Autowired\n   public WorkspaceAdminController(\n+      CloudMonitoringService cloudMonitoringService,\n       FireCloudService fireCloudService,\n       LeonardoNotebooksClient leonardoNotebooksClient,\n       WorkspaceAdminService workspaceAdminService,\n       WorkspaceMapper workspaceMapper,\n       WorkspaceService workspaceService) {\n+    this.cloudMonitoringService = cloudMonitoringService;\n     this.fireCloudService = fireCloudService;\n     this.leonardoNotebooksClient = leonardoNotebooksClient;\n     this.workspaceAdminService = workspaceAdminService;\n     this.workspaceMapper = workspaceMapper;\n     this.workspaceService = workspaceService;\n   }\n \n+  /** */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3NTUxMA=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYxNjE4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NDozMlrOFuw0og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTozODowMVrOFvCfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3ODcyMg==", "bodyText": "At least one of these could probably done as a stream instead of an old-school foreach loop. Though I do vaguely recall nested streams being obnoxious to deal with.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384578722", "createdAt": "2020-02-26T15:44:32Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -34,18 +47,43 @@\n \n   @Autowired\n   public WorkspaceAdminController(\n+      CloudMonitoringService cloudMonitoringService,\n       FireCloudService fireCloudService,\n       LeonardoNotebooksClient leonardoNotebooksClient,\n       WorkspaceAdminService workspaceAdminService,\n       WorkspaceMapper workspaceMapper,\n       WorkspaceService workspaceService) {\n+    this.cloudMonitoringService = cloudMonitoringService;\n     this.fireCloudService = fireCloudService;\n     this.leonardoNotebooksClient = leonardoNotebooksClient;\n     this.workspaceAdminService = workspaceAdminService;\n     this.workspaceMapper = workspaceMapper;\n     this.workspaceService = workspaceService;\n   }\n \n+  /** */\n+  @Override\n+  @AuthorityRequired({Authority.WORKSPACES_VIEW})\n+  public ResponseEntity<CloudStorageTraffic> getCloudStorageTraffic(String workspaceNamespace) {\n+    CloudStorageTraffic response = new CloudStorageTraffic().receivedBytes(new ArrayList<>());\n+\n+    for (TimeSeries timeSeries :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2ODI2NQ==", "bodyText": "Yehhhh I almost did that, but the nested bit made me shy away and stick with a trusty for loop.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384868265", "createdAt": "2020-02-27T01:38:01Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminController.java", "diffHunk": "@@ -34,18 +47,43 @@\n \n   @Autowired\n   public WorkspaceAdminController(\n+      CloudMonitoringService cloudMonitoringService,\n       FireCloudService fireCloudService,\n       LeonardoNotebooksClient leonardoNotebooksClient,\n       WorkspaceAdminService workspaceAdminService,\n       WorkspaceMapper workspaceMapper,\n       WorkspaceService workspaceService) {\n+    this.cloudMonitoringService = cloudMonitoringService;\n     this.fireCloudService = fireCloudService;\n     this.leonardoNotebooksClient = leonardoNotebooksClient;\n     this.workspaceAdminService = workspaceAdminService;\n     this.workspaceMapper = workspaceMapper;\n     this.workspaceService = workspaceService;\n   }\n \n+  /** */\n+  @Override\n+  @AuthorityRequired({Authority.WORKSPACES_VIEW})\n+  public ResponseEntity<CloudStorageTraffic> getCloudStorageTraffic(String workspaceNamespace) {\n+    CloudStorageTraffic response = new CloudStorageTraffic().receivedBytes(new ArrayList<>());\n+\n+    for (TimeSeries timeSeries :", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3ODcyMg=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYzMTAzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminControllerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0Nzo1NFrOFuw-Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTozODoyMlrOFvCgCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4MTE3OA==", "bodyText": "oh god is this really how spotless wants it", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384581178", "createdAt": "2020-02-26T15:47:54Z", "author": {"login": "als364"}, "path": "api/src/test/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminControllerTest.java", "diffHunk": "@@ -157,6 +158,31 @@ public void getFederatedWorkspaceDetails_404sWhenNotFound() {\n     assertThat(response.getStatusCodeValue()).isEqualTo(404);\n   }\n \n+  @Test\n+  public void getCloudStorageTraffic_sortsPointsByTimestamp() {\n+    TimeSeries timeSeries =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4MTQ0MQ==", "bodyText": "If it is, could you at least put a full blank line between statements for readability", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384581441", "createdAt": "2020-02-26T15:48:21Z", "author": {"login": "als364"}, "path": "api/src/test/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminControllerTest.java", "diffHunk": "@@ -157,6 +158,31 @@ public void getFederatedWorkspaceDetails_404sWhenNotFound() {\n     assertThat(response.getStatusCodeValue()).isEqualTo(404);\n   }\n \n+  @Test\n+  public void getCloudStorageTraffic_sortsPointsByTimestamp() {\n+    TimeSeries timeSeries =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4MTE3OA=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2ODM2MQ==", "bodyText": "Yeah protobuf builders are apparently the worst. Done.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384868361", "createdAt": "2020-02-27T01:38:22Z", "author": {"login": "gjuggler"}, "path": "api/src/test/java/org/pmiops/workbench/workspaceadmin/WorkspaceAdminControllerTest.java", "diffHunk": "@@ -157,6 +158,31 @@ public void getFederatedWorkspaceDetails_404sWhenNotFound() {\n     assertThat(response.getStatusCodeValue()).isEqualTo(404);\n   }\n \n+  @Test\n+  public void getCloudStorageTraffic_sortsPointsByTimestamp() {\n+    TimeSeries timeSeries =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4MTE3OA=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTY1MjY1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1Mjo1MlrOFuxL5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMzoyNTo0NVrOFvEH5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NDY3Ng==", "bodyText": "This should also be disabled if the person doesn't have the authority to delete clusters (SECURITY_ADMIN).", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384584676", "createdAt": "2020-02-26T15:52:52Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -267,17 +335,39 @@ export class AdminWorkspace extends React.Component<{}, State> {\n             <PurpleLabel style={styles.narrowWithMargin}>Status</PurpleLabel>\n           </FlexRow>\n           {resources.clusters.map((cluster, i) =>\n-              <FlexRow>\n+              <FlexRow key={i}>\n                 <div style={styles.narrowWithMargin}>{cluster.clusterName}</div>\n                 <div style={styles.narrowWithMargin}>{cluster.googleProject}</div>\n                 <div style={styles.narrowWithMargin}>{new Date(cluster.createdDate).toDateString()}</div>\n                 <div style={styles.narrowWithMargin}>{new Date(cluster.dateAccessed).toDateString()}</div>\n                 <div style={styles.narrowWithMargin}>{cluster.status}</div>\n-                <Button>Disable</Button>\n+                <Button onClick={() =>\n+                  this.setState({clusterToDelete: cluster, confirmDeleteCluster: true})}\n+                  disabled={clusterToDelete && clusterToDelete.clusterName === cluster.clusterName}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 378}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg5NDk0OA==", "bodyText": "Yeah \u2013 I didn't want to deal with piping the Profile into this component as part of this PR, but that will be a helpful follow-up. I'll add a comment to RW-4461 which might be a reasonable place to track it.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384894948", "createdAt": "2020-02-27T03:25:45Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -267,17 +335,39 @@ export class AdminWorkspace extends React.Component<{}, State> {\n             <PurpleLabel style={styles.narrowWithMargin}>Status</PurpleLabel>\n           </FlexRow>\n           {resources.clusters.map((cluster, i) =>\n-              <FlexRow>\n+              <FlexRow key={i}>\n                 <div style={styles.narrowWithMargin}>{cluster.clusterName}</div>\n                 <div style={styles.narrowWithMargin}>{cluster.googleProject}</div>\n                 <div style={styles.narrowWithMargin}>{new Date(cluster.createdDate).toDateString()}</div>\n                 <div style={styles.narrowWithMargin}>{new Date(cluster.dateAccessed).toDateString()}</div>\n                 <div style={styles.narrowWithMargin}>{cluster.status}</div>\n-                <Button>Disable</Button>\n+                <Button onClick={() =>\n+                  this.setState({clusterToDelete: cluster, confirmDeleteCluster: true})}\n+                  disabled={clusterToDelete && clusterToDelete.clusterName === cluster.clusterName}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NDY3Ng=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 378}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTY2NTg2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-workspace.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1NTozOVrOFuxUPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTo0MjozNlrOFvCkNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NjgxNA==", "bodyText": "If one of these 503s, this function will short circuit and we will get an infinite spinner. Again as it's an internal page it's not that big a deal, but it could be nice to have it say 'oops it 503'd' instead of just spinning forever when you're looking at it at 3am.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384586814", "createdAt": "2020-02-26T15:55:39Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -56,22 +54,24 @@ export class AdminWorkspace extends React.Component<{}, State> {\n \n     this.state = {\n       googleProject: '',\n-      workspace: null,\n-      collaborators: [],\n-      resources: {},\n+      workspaceDetails: {},\n+      cloudStorageTraffic: null,\n     };\n   }\n \n-  getFederatedWorkspaceInformation() {\n-    workspaceAdminApi().getFederatedWorkspaceDetails(this.state.googleProject).then(\n-      response => {\n-        this.setState({\n-          workspace: response.workspace,\n-          collaborators: response.collaborators,\n-          resources: response.resources\n-        });\n-      }\n-    );\n+  async getFederatedWorkspaceInformation() {\n+    this.setState({\n+      loadingData: true,\n+    });\n+\n+    // Fire off both requests in parallel\n+    const workspaceDetailsPromise = workspaceAdminApi().getFederatedWorkspaceDetails(this.state.googleProject);\n+    const cloudStorageTrafficPromise = workspaceAdminApi().getCloudStorageTraffic(this.state.googleProject);\n+    // Wait for both promises to complete before updating state.\n+    const workspaceDetails = await workspaceDetailsPromise;\n+    const cloudStorageTraffic = await cloudStorageTrafficPromise;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2OTQzMA==", "bodyText": "Good point \u2013 added something basic here. I'm still deeply unsatisfied with our options for lightweight error display; if there were a 1-line way to show a toast notification for an error response code, I'd use that in a heartbeat. We have a long history of ignored error-handling stories \u2013\u00a0see RW-1976, RW-2877, RW-4406, and my recently filed RW-4392. I'm planning to push a bit harder on this once we're post-launch. It really feels like the kind of fundamental building block we should have.", "url": "https://github.com/all-of-us/workbench/pull/3188#discussion_r384869430", "createdAt": "2020-02-27T01:42:36Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/pages/admin/admin-workspace.tsx", "diffHunk": "@@ -56,22 +54,24 @@ export class AdminWorkspace extends React.Component<{}, State> {\n \n     this.state = {\n       googleProject: '',\n-      workspace: null,\n-      collaborators: [],\n-      resources: {},\n+      workspaceDetails: {},\n+      cloudStorageTraffic: null,\n     };\n   }\n \n-  getFederatedWorkspaceInformation() {\n-    workspaceAdminApi().getFederatedWorkspaceDetails(this.state.googleProject).then(\n-      response => {\n-        this.setState({\n-          workspace: response.workspace,\n-          collaborators: response.collaborators,\n-          resources: response.resources\n-        });\n-      }\n-    );\n+  async getFederatedWorkspaceInformation() {\n+    this.setState({\n+      loadingData: true,\n+    });\n+\n+    // Fire off both requests in parallel\n+    const workspaceDetailsPromise = workspaceAdminApi().getFederatedWorkspaceDetails(this.state.googleProject);\n+    const cloudStorageTrafficPromise = workspaceAdminApi().getCloudStorageTraffic(this.state.googleProject);\n+    // Wait for both promises to complete before updating state.\n+    const workspaceDetails = await workspaceDetailsPromise;\n+    const cloudStorageTraffic = await cloudStorageTrafficPromise;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4NjgxNA=="}, "originalCommit": {"oid": "47fe5de63c5626e7d93071e6d516dcb73f9966f1"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3149, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}