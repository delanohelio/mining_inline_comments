{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzU2MjI1", "number": 3481, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1Mjo0MlrOD1863g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NToxOFrOD18-yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODk5MjMwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/inputs.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1Mjo0MlrOGLoztA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1MzowNFrOGLo0YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjExNg==", "bodyText": "nit: Extract Style", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414856116", "createdAt": "2020-04-24T20:52:42Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/components/inputs.tsx", "diffHunk": "@@ -82,6 +83,132 @@ export const ValidationError = ({children}) => {\n   >{children}</div>;\n };\n \n+export const TextArea = ({style = {}, onChange, ...props}) => {\n+  return <textarea\n+      {...props}\n+      onChange={onChange ? (e => onChange(e.target.value)) : undefined}\n+      style={{\n+        width: '100%',\n+        borderColor: inputBorderColor, borderWidth: 1, borderStyle: 'solid', borderRadius: 3,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjI4OA==", "bodyText": "I deliberately didn't extract the style because it's not reused and it's in a file that has multiple different classes.", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414856288", "createdAt": "2020-04-24T20:53:04Z", "author": {"login": "als364"}, "path": "ui/src/app/components/inputs.tsx", "diffHunk": "@@ -82,6 +83,132 @@ export const ValidationError = ({children}) => {\n   >{children}</div>;\n };\n \n+export const TextArea = ({style = {}, onChange, ...props}) => {\n+  return <textarea\n+      {...props}\n+      onChange={onChange ? (e => onChange(e.target.value)) : undefined}\n+      style={{\n+        width: '100%',\n+        borderColor: inputBorderColor, borderWidth: 1, borderStyle: 'solid', borderRadius: 3,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjExNg=="}, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODk5NDkzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/inputs.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1MzoyNVrOGLo1KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1MzoyNVrOGLo1KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjQ4OQ==", "bodyText": "nit: extract style", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414856489", "createdAt": "2020-04-24T20:53:25Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/components/inputs.tsx", "diffHunk": "@@ -82,6 +83,132 @@ export const ValidationError = ({children}) => {\n   >{children}</div>;\n };\n \n+export const TextArea = ({style = {}, onChange, ...props}) => {\n+  return <textarea\n+      {...props}\n+      onChange={onChange ? (e => onChange(e.target.value)) : undefined}\n+      style={{\n+        width: '100%',\n+        borderColor: inputBorderColor, borderWidth: 1, borderStyle: 'solid', borderRadius: 3,\n+        padding: '0.25rem 0.5rem',\n+        backgroundColor: colors.white,\n+        ...style\n+      }}\n+  />;\n+};\n+\n+interface TextAreaWithLengthValidationMessageProps {\n+  id: string;\n+  initialText: string;\n+  maxCharacters: number;\n+  tooLongWarningCharacters: number;\n+  onChange: (s: string) => void;\n+  tooShortWarningCharacters?: number;\n+  tooShortWarning?: string;\n+}\n+\n+interface TextAreaWithLengthValidationMessageState {\n+  showTooShortWarning: boolean;\n+  text: string;\n+}\n+\n+export class TextAreaWithLengthValidationMessage extends React.Component<\n+  TextAreaWithLengthValidationMessageProps,\n+  TextAreaWithLengthValidationMessageState\n+> {\n+  constructor(props: TextAreaWithLengthValidationMessageProps) {\n+    super(props);\n+    this.state = {\n+      showTooShortWarning: false,\n+      text: props.initialText\n+    };\n+  }\n+\n+  onTextUpdate(text) {\n+    if (this.state.showTooShortWarning && text.length >= 50) {\n+      this.setState({showTooShortWarning: false});\n+    }\n+    this.setState({text: text});\n+    this.props.onChange(text);\n+  }\n+\n+  updateShowTooShortWarning() {\n+    if (\n+        this.state.text\n+        && this.props.tooShortWarningCharacters\n+        && this.props.tooShortWarning\n+        && this.state.text.length < this.props.tooShortWarningCharacters\n+    ) {\n+      this.setState({showTooShortWarning: true});\n+    } else {\n+      this.setState({showTooShortWarning: false});\n+    }\n+  }\n+\n+  renderCharacterLimitMessage(textColor: string, message: string) {\n+    return <div\n+        data-test-id='characterLimit'\n+        style={{color: textColor, marginLeft: 'auto', flex: '0 0 auto'}}\n+    >\n+      {message}\n+    </div>;\n+  }\n+\n+  render() {\n+    const {id, maxCharacters, tooShortWarning} = this.props;\n+    const {showTooShortWarning, text} = this.state;\n+\n+    return <React.Fragment>\n+      <TextArea\n+          style={{\n+            height: '15rem',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODk5NjA5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/inputs.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1Mzo0NlrOGLo11A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1Mzo0NlrOGLo11A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NjY2MA==", "bodyText": "nit: extract style", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414856660", "createdAt": "2020-04-24T20:53:46Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/components/inputs.tsx", "diffHunk": "@@ -82,6 +83,132 @@ export const ValidationError = ({children}) => {\n   >{children}</div>;\n };\n \n+export const TextArea = ({style = {}, onChange, ...props}) => {\n+  return <textarea\n+      {...props}\n+      onChange={onChange ? (e => onChange(e.target.value)) : undefined}\n+      style={{\n+        width: '100%',\n+        borderColor: inputBorderColor, borderWidth: 1, borderStyle: 'solid', borderRadius: 3,\n+        padding: '0.25rem 0.5rem',\n+        backgroundColor: colors.white,\n+        ...style\n+      }}\n+  />;\n+};\n+\n+interface TextAreaWithLengthValidationMessageProps {\n+  id: string;\n+  initialText: string;\n+  maxCharacters: number;\n+  tooLongWarningCharacters: number;\n+  onChange: (s: string) => void;\n+  tooShortWarningCharacters?: number;\n+  tooShortWarning?: string;\n+}\n+\n+interface TextAreaWithLengthValidationMessageState {\n+  showTooShortWarning: boolean;\n+  text: string;\n+}\n+\n+export class TextAreaWithLengthValidationMessage extends React.Component<\n+  TextAreaWithLengthValidationMessageProps,\n+  TextAreaWithLengthValidationMessageState\n+> {\n+  constructor(props: TextAreaWithLengthValidationMessageProps) {\n+    super(props);\n+    this.state = {\n+      showTooShortWarning: false,\n+      text: props.initialText\n+    };\n+  }\n+\n+  onTextUpdate(text) {\n+    if (this.state.showTooShortWarning && text.length >= 50) {\n+      this.setState({showTooShortWarning: false});\n+    }\n+    this.setState({text: text});\n+    this.props.onChange(text);\n+  }\n+\n+  updateShowTooShortWarning() {\n+    if (\n+        this.state.text\n+        && this.props.tooShortWarningCharacters\n+        && this.props.tooShortWarning\n+        && this.state.text.length < this.props.tooShortWarningCharacters\n+    ) {\n+      this.setState({showTooShortWarning: true});\n+    } else {\n+      this.setState({showTooShortWarning: false});\n+    }\n+  }\n+\n+  renderCharacterLimitMessage(textColor: string, message: string) {\n+    return <div\n+        data-test-id='characterLimit'\n+        style={{color: textColor, marginLeft: 'auto', flex: '0 0 auto'}}\n+    >\n+      {message}\n+    </div>;\n+  }\n+\n+  render() {\n+    const {id, maxCharacters, tooShortWarning} = this.props;\n+    const {showTooShortWarning, text} = this.state;\n+\n+    return <React.Fragment>\n+      <TextArea\n+          style={{\n+            height: '15rem',\n+            resize: 'none',\n+            width: '48rem',\n+            borderRadius: '3px 3px 0 0',\n+            boderColor: colorWithWhiteness(colors.dark, 0.5)\n+          }}\n+          id={id}\n+          value={text}\n+          onBlur={() => this.updateShowTooShortWarning()}\n+          onChange={v => this.onTextUpdate(v)}\n+      />\n+      <FlexRow\n+          style={{\n+            justifyContent: 'space-between',\n+            width: '48rem',\n+            backgroundColor: colorWithWhiteness(colors.primary, 0.95),\n+            fontSize: 12,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3OTAwMjMyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-research-summary.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NToxOVrOGLo5Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NTozNVrOGLo5tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NzUzMQ==", "bodyText": "Curious should this be a const rather than class?", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414857531", "createdAt": "2020-04-24T20:55:19Z", "author": {"login": "NehaBroad"}, "path": "ui/src/app/pages/workspace/workspace-research-summary.tsx", "diffHunk": "@@ -1,111 +1,40 @@\n-import {FlexRow} from 'app/components/flex';\n-import {TextArea} from 'app/components/inputs';\n-import colors from 'app/styles/colors';\n-import {colorWithWhiteness} from 'app/styles/colors';\n-import {reactStyles} from 'app/utils';\n+import {TextAreaWithLengthValidationMessage} from 'app/components/inputs';\n import * as React from 'react';\n import {WorkspaceEditSection} from './workspace-edit-section';\n import {ResearchPurposeQuestion} from './workspace-edit-text';\n \n-const styles = reactStyles({\n-  textArea: {\n-    height: '15rem',\n-    resize: 'none',\n-    width: '48rem',\n-    borderRadius: '3px 3px 0 0',\n-    boderColor: colorWithWhiteness(colors.dark, 0.5)\n-  },\n-  textBoxCharRemaining: {\n-    justifyContent: 'space-between',\n-    width: '48rem',\n-    backgroundColor: colorWithWhiteness(colors.primary, 0.95),\n-    fontSize: 12,\n-    colors: colors.primary,\n-    padding: '0.25rem',\n-    borderRadius: '0 0 3px 3px', marginTop: '-0.5rem',\n-    border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`\n-  },\n-});\n \n interface Props {\n+  id: string;\n   index: string;\n   onChange: Function;\n   researchPurpose: ResearchPurposeQuestion;\n   researchValue: string;\n-  rowId: string;\n }\n \n-interface State {\n-  showWarningMessage: boolean;\n-  researchValue: string;\n-  textColor: string;\n-}\n-\n-export class WorkspaceResearchSummary extends React.Component<Props, State > {\n+export class WorkspaceResearchSummary extends React.Component<Props> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NzY1Mw==", "bodyText": "Ooh, yeah, now that it has no more state it can be a const!", "url": "https://github.com/all-of-us/workbench/pull/3481#discussion_r414857653", "createdAt": "2020-04-24T20:55:35Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/workspace/workspace-research-summary.tsx", "diffHunk": "@@ -1,111 +1,40 @@\n-import {FlexRow} from 'app/components/flex';\n-import {TextArea} from 'app/components/inputs';\n-import colors from 'app/styles/colors';\n-import {colorWithWhiteness} from 'app/styles/colors';\n-import {reactStyles} from 'app/utils';\n+import {TextAreaWithLengthValidationMessage} from 'app/components/inputs';\n import * as React from 'react';\n import {WorkspaceEditSection} from './workspace-edit-section';\n import {ResearchPurposeQuestion} from './workspace-edit-text';\n \n-const styles = reactStyles({\n-  textArea: {\n-    height: '15rem',\n-    resize: 'none',\n-    width: '48rem',\n-    borderRadius: '3px 3px 0 0',\n-    boderColor: colorWithWhiteness(colors.dark, 0.5)\n-  },\n-  textBoxCharRemaining: {\n-    justifyContent: 'space-between',\n-    width: '48rem',\n-    backgroundColor: colorWithWhiteness(colors.primary, 0.95),\n-    fontSize: 12,\n-    colors: colors.primary,\n-    padding: '0.25rem',\n-    borderRadius: '0 0 3px 3px', marginTop: '-0.5rem',\n-    border: `1px solid ${colorWithWhiteness(colors.dark, 0.5)}`\n-  },\n-});\n \n interface Props {\n+  id: string;\n   index: string;\n   onChange: Function;\n   researchPurpose: ResearchPurposeQuestion;\n   researchValue: string;\n-  rowId: string;\n }\n \n-interface State {\n-  showWarningMessage: boolean;\n-  researchValue: string;\n-  textColor: string;\n-}\n-\n-export class WorkspaceResearchSummary extends React.Component<Props, State > {\n+export class WorkspaceResearchSummary extends React.Component<Props> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NzUzMQ=="}, "originalCommit": {"oid": "b3858a459277b18b6370614df6291092311ff961"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2812, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}