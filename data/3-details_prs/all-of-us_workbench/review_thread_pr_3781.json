{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDI4NjI3", "number": 3781, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODo1MjowNlrOEO0J5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODo1NToyN1rOEO0O1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTcwMDIwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODo1MjowNlrOGyLfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzowNzoyMFrOGyqEbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw==", "bodyText": "Not part of this story, but we should add validation for createRequest to be sure we have cohort/conceptsets and values information in data set Request", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455270217", "createdAt": "2020-07-15T18:52:06Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -124,18 +107,14 @@\n   public ResponseEntity<DataSet> createDataSet(\n       String workspaceNamespace, String workspaceFirecloudName, DataSetRequest dataSetRequest) {\n     validateDataSetCreateRequest(dataSetRequest);\n-    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n-        workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER);\n     final long workspaceId =\n-        workspaceService.get(workspaceNamespace, workspaceFirecloudName).getWorkspaceId();\n+        workspaceService\n+            .getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+                workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER)\n+            .getWorkspaceId();\n     dataSetRequest.setWorkspaceId(workspaceId);\n-    DbDataset datasetToSave = dataSetMapper.dataSetRequestToDb(dataSetRequest, null);\n-    datasetToSave.setCreationTime(now);\n-    datasetToSave.setCreatorId(userProvider.get().getUserId());\n-    datasetToSave.setInvalid(false);\n-    DbDataset savedDataSet = dataSetService.saveDataSet(datasetToSave);\n-    return ResponseEntity.ok(dataSetMapper.dbModelToClient(savedDataSet));\n+    return ResponseEntity.ok(\n+        dataSetService.saveDataSet(dataSetRequest, userProvider.get().getUserId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMDc2OA==", "bodyText": "Isn't that what validateDataSetCreateRequest(dataSetRequest) on line 109 does?", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455310768", "createdAt": "2020-07-15T20:06:32Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -124,18 +107,14 @@\n   public ResponseEntity<DataSet> createDataSet(\n       String workspaceNamespace, String workspaceFirecloudName, DataSetRequest dataSetRequest) {\n     validateDataSetCreateRequest(dataSetRequest);\n-    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n-        workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER);\n     final long workspaceId =\n-        workspaceService.get(workspaceNamespace, workspaceFirecloudName).getWorkspaceId();\n+        workspaceService\n+            .getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+                workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER)\n+            .getWorkspaceId();\n     dataSetRequest.setWorkspaceId(workspaceId);\n-    DbDataset datasetToSave = dataSetMapper.dataSetRequestToDb(dataSetRequest, null);\n-    datasetToSave.setCreationTime(now);\n-    datasetToSave.setCreatorId(userProvider.get().getUserId());\n-    datasetToSave.setInvalid(false);\n-    DbDataset savedDataSet = dataSetService.saveDataSet(datasetToSave);\n-    return ResponseEntity.ok(dataSetMapper.dbModelToClient(savedDataSet));\n+    return ResponseEntity.ok(\n+        dataSetService.saveDataSet(dataSetRequest, userProvider.get().getUserId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw=="}, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3MTI0NA==", "bodyText": "Ahh i missed that. Thanks!", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455771244", "createdAt": "2020-07-16T13:07:20Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -124,18 +107,14 @@\n   public ResponseEntity<DataSet> createDataSet(\n       String workspaceNamespace, String workspaceFirecloudName, DataSetRequest dataSetRequest) {\n     validateDataSetCreateRequest(dataSetRequest);\n-    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n-        workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER);\n     final long workspaceId =\n-        workspaceService.get(workspaceNamespace, workspaceFirecloudName).getWorkspaceId();\n+        workspaceService\n+            .getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+                workspaceNamespace, workspaceFirecloudName, WorkspaceAccessLevel.WRITER)\n+            .getWorkspaceId();\n     dataSetRequest.setWorkspaceId(workspaceId);\n-    DbDataset datasetToSave = dataSetMapper.dataSetRequestToDb(dataSetRequest, null);\n-    datasetToSave.setCreationTime(now);\n-    datasetToSave.setCreatorId(userProvider.get().getUserId());\n-    datasetToSave.setInvalid(false);\n-    DbDataset savedDataSet = dataSetService.saveDataSet(datasetToSave);\n-    return ResponseEntity.ok(dataSetMapper.dbModelToClient(savedDataSet));\n+    return ResponseEntity.ok(\n+        dataSetService.saveDataSet(dataSetRequest, userProvider.get().getUserId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDIxNw=="}, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTcwNDcxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODo1MzoyMVrOGyLiCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDowODoxOFrOGyOBKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDkyMw==", "bodyText": "Should this also be Optional?", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455270923", "createdAt": "2020-07-15T18:53:21Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetService.java", "diffHunk": "@@ -37,11 +44,13 @@ DbDataset cloneDataSetToWorkspace(\n \n   List<DbCohort> getCohortsForDataset(DbDataset dataSet);\n \n-  List<DbDataset> getDataSets(ResourceType resourceType, long resourceId);\n+  List<DataSet> getDataSets(ResourceType resourceType, long resourceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxMTY1Nw==", "bodyText": "Not sure return type of List needs to be Optional... it either has items on it or it's empty... no chance of a NullPointer", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455311657", "createdAt": "2020-07-15T20:08:18Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetService.java", "diffHunk": "@@ -37,11 +44,13 @@ DbDataset cloneDataSetToWorkspace(\n \n   List<DbCohort> getCohortsForDataset(DbDataset dataSet);\n \n-  List<DbDataset> getDataSets(ResourceType resourceType, long resourceId);\n+  List<DataSet> getDataSets(ResourceType resourceType, long resourceId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MDkyMw=="}, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTcxMjg3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODo1NToyN1rOGyLm-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMDoxNToxNlrOGyOPaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MjE4NA==", "bodyText": "Again we can create another story: But should this throw an exception if no data sets are found for resourceType and Id ?", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455272184", "createdAt": "2020-07-15T18:55:27Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetServiceImpl.java", "diffHunk": "@@ -683,19 +732,18 @@ public DbDataset cloneDataSetToWorkspace(\n   }\n \n   @Override\n-  public void deleteDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    long dbDataSetId = getDbDataSet(dbWorkspace, dataSetId).get().getDataSetId();\n-    dataSetDao.delete(dbDataSetId);\n+  public void deleteDataSet(Long dataSetId) {\n+    dataSetDao.delete(dataSetId);\n   }\n \n   @Override\n-  public Optional<DbDataset> getDbDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    return Optional.of(dataSetDao.findOne(dataSetId));\n+  public Optional<DataSet> getDbDataSet(Long dataSetId) {\n+    return Optional.of(dataSetMapper.dbModelToClient(dataSetDao.findOne(dataSetId)));\n   }\n \n   @Override\n   public void markDirty(ResourceType resourceType, long resourceId) {\n-    List<DbDataset> dbDataSetList = getDataSets(resourceType, resourceId);\n+    List<DbDataset> dbDataSetList = getDbDataSets(resourceType, resourceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTMxNTMwNA==", "bodyText": "Good idea, we could also return false here instead of an exception -> \n  \n    \n      workbench/api/src/main/java/org/pmiops/workbench/api/DataSetController.java\n    \n    \n         Line 381\n      in\n      9c1af4c\n    \n    \n    \n    \n\n        \n          \n           return ResponseEntity.ok(true);", "url": "https://github.com/all-of-us/workbench/pull/3781#discussion_r455315304", "createdAt": "2020-07-15T20:15:16Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetServiceImpl.java", "diffHunk": "@@ -683,19 +732,18 @@ public DbDataset cloneDataSetToWorkspace(\n   }\n \n   @Override\n-  public void deleteDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    long dbDataSetId = getDbDataSet(dbWorkspace, dataSetId).get().getDataSetId();\n-    dataSetDao.delete(dbDataSetId);\n+  public void deleteDataSet(Long dataSetId) {\n+    dataSetDao.delete(dataSetId);\n   }\n \n   @Override\n-  public Optional<DbDataset> getDbDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n-    return Optional.of(dataSetDao.findOne(dataSetId));\n+  public Optional<DataSet> getDbDataSet(Long dataSetId) {\n+    return Optional.of(dataSetMapper.dbModelToClient(dataSetDao.findOne(dataSetId)));\n   }\n \n   @Override\n   public void markDirty(ResourceType resourceType, long resourceId) {\n-    List<DbDataset> dbDataSetList = getDataSets(resourceType, resourceId);\n+    List<DbDataset> dbDataSetList = getDbDataSets(resourceType, resourceId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI3MjE4NA=="}, "originalCommit": {"oid": "80ad42a5f302027a232d80722274b671d9fef018"}, "originalPosition": 168}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2422, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}