{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MDUzOTQz", "number": 3967, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzozMjo1MVrOEii4tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzo0NjoxOVrOEijNhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU4NjEyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/EgressEventAuditorImpl.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzozMjo1MVrOHQfAzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0Njo0MlrOHQp6mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0NzM3NA==", "bodyText": "No action today, but a reminder for this part", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487047374", "createdAt": "2020-09-11T13:32:51Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/EgressEventAuditorImpl.kt", "diffHunk": "@@ -32,15 +32,15 @@ constructor(\n ) : EgressEventAuditor {\n \n     /**\n-     * Converts the AoU-chosen cluster name into the actual VM name as reported by Google Cloud's\n+     * Converts the AoU-chosen runtime name into the actual VM name as reported by Google Cloud's\n      * flow logs. Empirically, an \"-m\" suffix is added to the VM name, due to Leo team's use\n      * of Dataproc (see https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/metadata).\n      *\n      * Note: this pattern may change if the Leo team switches to using raw VMs instead of Dataproc", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNjAwOA==", "bodyText": "Thanks for pointing this out - I was not tracking this. I've added a reference to this ticket, and cross-referenced in the AC there: https://precisionmedicineinitiative.atlassian.net/browse/RW-4848 .", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487226008", "createdAt": "2020-09-11T18:46:42Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/actionaudit/auditors/EgressEventAuditorImpl.kt", "diffHunk": "@@ -32,15 +32,15 @@ constructor(\n ) : EgressEventAuditor {\n \n     /**\n-     * Converts the AoU-chosen cluster name into the actual VM name as reported by Google Cloud's\n+     * Converts the AoU-chosen runtime name into the actual VM name as reported by Google Cloud's\n      * flow logs. Empirically, an \"-m\" suffix is added to the VM name, due to Leo team's use\n      * of Dataproc (see https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/metadata).\n      *\n      * Note: this pattern may change if the Leo team switches to using raw VMs instead of Dataproc", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0NzM3NA=="}, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjU5NDg3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbUser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzozNToyM1rOHQfGYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0ODoxMlrOHQp9dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0ODgwMg==", "bodyText": "a few missed cluster -> runtime", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487048802", "createdAt": "2020-09-11T13:35:23Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbUser.java", "diffHunk": "@@ -34,10 +34,12 @@\n @Table(name = \"user\")\n public class DbUser {\n \n-  private static final String CLUSTER_NAME_PREFIX = \"all-of-us-\";\n+  private static final String RUNTIME_NAME_PREFIX = \"all-of-us-\";\n \n   /**\n-   * This is a Gson compatible class for encoding a JSON blob which is stored in MySQL. This\n+   * TODO(RW-5406): Remove cluster config overrides.\n+   *\n+   * <p>This is a Gson compatible class for encoding a JSON blob which is stored in MySQL. This\n    * represents cluster configuration overrides we support on a per-user basis for their notebook", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNjc0Mw==", "bodyText": "In this case, I haven't bothered renaming these models / comments since they are slotted for deletion, per above RW-5406.", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487226743", "createdAt": "2020-09-11T18:48:12Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbUser.java", "diffHunk": "@@ -34,10 +34,12 @@\n @Table(name = \"user\")\n public class DbUser {\n \n-  private static final String CLUSTER_NAME_PREFIX = \"all-of-us-\";\n+  private static final String RUNTIME_NAME_PREFIX = \"all-of-us-\";\n \n   /**\n-   * This is a Gson compatible class for encoding a JSON blob which is stored in MySQL. This\n+   * TODO(RW-5406): Remove cluster config overrides.\n+   *\n+   * <p>This is a Gson compatible class for encoding a JSON blob which is stored in MySQL. This\n    * represents cluster configuration overrides we support on a per-user basis for their notebook", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA0ODgwMg=="}, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjYzOTQxOnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMzo0NjoxOVrOHQfhsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODozNTo1NlrOHQpnPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NTc5Mg==", "bodyText": "What is the context for removing this one?", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487055792", "createdAt": "2020-09-11T13:46:19Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -2,62 +2,26 @@\n \n import org.mapstruct.Mapper;\n import org.mapstruct.Mapping;\n-import org.pmiops.workbench.leonardo.model.LeonardoCluster;\n import org.pmiops.workbench.leonardo.model.LeonardoGetRuntimeResponse;\n-import org.pmiops.workbench.leonardo.model.LeonardoListClusterResponse;\n import org.pmiops.workbench.leonardo.model.LeonardoListRuntimeResponse;\n import org.pmiops.workbench.leonardo.model.LeonardoRuntimeStatus;\n-import org.pmiops.workbench.model.Cluster;\n-import org.pmiops.workbench.model.ClusterLocalizeRequest;\n-import org.pmiops.workbench.model.ClusterLocalizeResponse;\n-import org.pmiops.workbench.model.ClusterStatus;\n-import org.pmiops.workbench.model.ListClusterResponse;\n import org.pmiops.workbench.model.ListRuntimeResponse;\n import org.pmiops.workbench.model.Runtime;\n-import org.pmiops.workbench.model.RuntimeLocalizeRequest;\n-import org.pmiops.workbench.model.RuntimeLocalizeResponse;\n import org.pmiops.workbench.model.RuntimeStatus;\n \n @Mapper(config = MapStructConfig.class)\n public interface LeonardoMapper {\n-  @Mapping(target = \"internalId\", source = \"id\")\n-  @Mapping(target = \"jupyterUserScriptUri\", ignore = true)\n-  LeonardoListClusterResponse toListClusterResponse(LeonardoCluster cluster);\n-\n   @Mapping(target = \"patchInProgress\", ignore = true)\n   LeonardoListRuntimeResponse toListRuntimeResponse(LeonardoGetRuntimeResponse runtime);\n \n-  @Mapping(target = \"clusterName\", source = \"runtimeName\")\n-  @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n-  @Mapping(target = \"dateAccessed\", source = \"auditInfo.dateAccessed\")\n-  ListClusterResponse toApiListClusterResponse(\n-      LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n-\n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n   @Mapping(target = \"dateAccessed\", source = \"auditInfo.dateAccessed\")\n   ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n-  @Mapping(target = \"clusterName\", source = \"runtimeName\")\n-  @Mapping(target = \"clusterNamespace\", source = \"googleProject\")\n-  @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n-  Cluster toApiCluster(LeonardoGetRuntimeResponse runtime);\n-\n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n-  RuntimeLocalizeRequest clusterToRuntimeLocalizeRequest(ClusterLocalizeRequest req);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyMTA1Mg==", "bodyText": "It only existed to support mapping between the old and new types, since I temporarily implemented deprecatedLocalize as a shim on top of localize", "url": "https://github.com/all-of-us/workbench/pull/3967#discussion_r487221052", "createdAt": "2020-09-11T18:35:56Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -2,62 +2,26 @@\n \n import org.mapstruct.Mapper;\n import org.mapstruct.Mapping;\n-import org.pmiops.workbench.leonardo.model.LeonardoCluster;\n import org.pmiops.workbench.leonardo.model.LeonardoGetRuntimeResponse;\n-import org.pmiops.workbench.leonardo.model.LeonardoListClusterResponse;\n import org.pmiops.workbench.leonardo.model.LeonardoListRuntimeResponse;\n import org.pmiops.workbench.leonardo.model.LeonardoRuntimeStatus;\n-import org.pmiops.workbench.model.Cluster;\n-import org.pmiops.workbench.model.ClusterLocalizeRequest;\n-import org.pmiops.workbench.model.ClusterLocalizeResponse;\n-import org.pmiops.workbench.model.ClusterStatus;\n-import org.pmiops.workbench.model.ListClusterResponse;\n import org.pmiops.workbench.model.ListRuntimeResponse;\n import org.pmiops.workbench.model.Runtime;\n-import org.pmiops.workbench.model.RuntimeLocalizeRequest;\n-import org.pmiops.workbench.model.RuntimeLocalizeResponse;\n import org.pmiops.workbench.model.RuntimeStatus;\n \n @Mapper(config = MapStructConfig.class)\n public interface LeonardoMapper {\n-  @Mapping(target = \"internalId\", source = \"id\")\n-  @Mapping(target = \"jupyterUserScriptUri\", ignore = true)\n-  LeonardoListClusterResponse toListClusterResponse(LeonardoCluster cluster);\n-\n   @Mapping(target = \"patchInProgress\", ignore = true)\n   LeonardoListRuntimeResponse toListRuntimeResponse(LeonardoGetRuntimeResponse runtime);\n \n-  @Mapping(target = \"clusterName\", source = \"runtimeName\")\n-  @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n-  @Mapping(target = \"dateAccessed\", source = \"auditInfo.dateAccessed\")\n-  ListClusterResponse toApiListClusterResponse(\n-      LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n-\n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n   @Mapping(target = \"dateAccessed\", source = \"auditInfo.dateAccessed\")\n   ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n-  @Mapping(target = \"clusterName\", source = \"runtimeName\")\n-  @Mapping(target = \"clusterNamespace\", source = \"googleProject\")\n-  @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n-  Cluster toApiCluster(LeonardoGetRuntimeResponse runtime);\n-\n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n-  RuntimeLocalizeRequest clusterToRuntimeLocalizeRequest(ClusterLocalizeRequest req);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzA1NTc5Mg=="}, "originalCommit": {"oid": "3658f5e171177339074972f6ddee3a5026bdc4b2"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2397, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}