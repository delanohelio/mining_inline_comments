{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzM5MjAw", "number": 3702, "title": "[RW-5056][Risk=low] DataSetController - use DataSetServiceImpl instead of dataSetDao, conceptSetDao and cohortDao", "bodyText": "PR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-06-23T06:00:36Z", "url": "https://github.com/all-of-us/workbench/pull/3702", "merged": true, "mergeCommit": {"oid": "b606a49dea9b99bfb6ac2c1f164f34d85d609bd4"}, "closed": true, "closedAt": "2020-06-24T19:25:56Z", "author": {"login": "NehaBroad"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct-_vygH2gAyNDM4MzM5MjAwOjBlMjU5N2VmNDNmNGI2NjQ2OTgyMWEwZDQ4NDQ1Yjg5ZDA1ZWU5NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuewBOAH2gAyNDM4MzM5MjAwOmU3MjZmMGViNGRhNGM4YmVkNWU4MmNmODJmNzY2YjNiNWJlNmVjOTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e2597ef43f4b66469821a0d48445b89d05ee94b", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/0e2597ef43f4b66469821a0d48445b89d05ee94b", "committedDate": "2020-06-23T05:56:25Z", "message": "Use service rather than Dao in dataSetController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02c0e5107d78cf182a9061ccefa355c84063913f", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/02c0e5107d78cf182a9061ccefa355c84063913f", "committedDate": "2020-06-23T06:37:06Z", "message": "Cohort and Concept set service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/142dc75ff1347e60bcd11863d64a945addaa2fb4", "committedDate": "2020-06-23T18:35:55Z", "message": "FIX Api Test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDk0MDIx", "url": "https://github.com/all-of-us/workbench/pull/3702#pullrequestreview-436094021", "createdAt": "2020-06-23T19:34:43Z", "commit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTozNDo0M1rOGn3skw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOTo0MToxM1rOGn34-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MDE3OQ==", "bodyText": "I'd add a method to WorkspaceService that returns Optional so you know to handle the case where it's not found separately.", "url": "https://github.com/all-of-us/workbench/pull/3702#discussion_r444460179", "createdAt": "2020-06-23T19:34:43Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -525,47 +520,33 @@ private void formatTimestampValues(List<DataSetPreviewValueList> valuePreviewLis\n       String workspaceNamespace, String workspaceId, MarkDataSetRequest markDataSetRequest) {\n     workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n         workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-    List<DbDataset> dbDataSetList = new ArrayList<>();\n-    if (ResourceType.COHORT.equals(markDataSetRequest.getResourceType())) {\n-      dbDataSetList = dataSetDao.findDataSetsByCohortIds(markDataSetRequest.getId());\n-    } else if (ResourceType.CONCEPT_SET.equals(markDataSetRequest.getResourceType())) {\n-      dbDataSetList = dataSetDao.findDataSetsByConceptSetIds(markDataSetRequest.getId());\n-    }\n-    dbDataSetList =\n-        dbDataSetList.stream()\n-            .map(\n-                dataSet -> {\n-                  dataSet.setInvalid(true);\n-                  return dataSet;\n-                })\n-            .collect(Collectors.toList());\n-    try {\n-      dataSetDao.save(dbDataSetList);\n-    } catch (OptimisticLockException e) {\n-      throw new ConflictException(\"Failed due to concurrent data set modification\");\n-    }\n-\n+    dataSetService.markDirty(markDataSetRequest.getResourceType(), markDataSetRequest.getId());\n     return ResponseEntity.ok(true);\n   }\n \n   @Override\n   public ResponseEntity<EmptyResponse> deleteDataSet(\n       String workspaceNamespace, String workspaceId, Long dataSetId) {\n-    DbDataset dataSet =\n-        getDbDataSet(workspaceNamespace, workspaceId, dataSetId, WorkspaceAccessLevel.WRITER);\n-    dataSetDao.delete(dataSet.getDataSetId());\n+    DbWorkspace workspace =\n+        workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MDk2Nw==", "bodyText": "Yeah, I'd make this one return Optional.", "url": "https://github.com/all-of-us/workbench/pull/3702#discussion_r444460967", "createdAt": "2020-06-23T19:36:23Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/DataSetService.java", "diffHunk": "@@ -46,4 +49,14 @@ DbDataset cloneDataSetToWorkspace(\n   List<DbConceptSet> getConceptSetsForDataset(DbDataset dataSet);\n \n   List<DbCohort> getCohortsForDataset(DbDataset dataSet);\n+\n+  List<DbDataset> getDataSets(ResourceType resourceType, long resourceId);\n+\n+  List<DbDataset> getInvalidDataSetsByWorkspace(DbWorkspace dbWorkspace);\n+\n+  void deleteDataSet(DbWorkspace dbWorkspace, Long dataSetId);\n+\n+  DbDataset getDbDataSet(DbWorkspace dbWorkspace, Long dataSetId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MTI4NA==", "bodyText": "nit: prefer switch statements on enum values.", "url": "https://github.com/all-of-us/workbench/pull/3702#discussion_r444461284", "createdAt": "2020-06-23T19:37:05Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/DataSetServiceImpl.java", "diffHunk": "@@ -676,6 +684,59 @@ public DbDataset cloneDataSetToWorkspace(\n     return cohortDao.findAllByCohortIdIn(dataSetDao.findOne(dataSet.getDataSetId()).getCohortIds());\n   }\n \n+  @Override\n+  public List<DbDataset> getDataSets(ResourceType resourceType, long resourceId) {\n+    List<DbDataset> dbDataSets = new ArrayList<>();\n+    if (ResourceType.COHORT.equals(resourceType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2MzM1NA==", "bodyText": "If you can, it's better to avoid overwriting variables. I'd probably give the original set a different name, or just inline it so yo have\ngetDataSets(resourceType, resourceId).stream()\n            .map(\n                dataSet -> {\n                  dataSet.setInvalid(true);\n                  return dataSet;\n                })\n            .collect(Collectors.toList());\n\nBut really I think you can just do dbDataSetList.stream().forEach(ds -> ds.setInvalid(true)); to change them in place.", "url": "https://github.com/all-of-us/workbench/pull/3702#discussion_r444463354", "createdAt": "2020-06-23T19:41:13Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/DataSetServiceImpl.java", "diffHunk": "@@ -676,6 +684,59 @@ public DbDataset cloneDataSetToWorkspace(\n     return cohortDao.findAllByCohortIdIn(dataSetDao.findOne(dataSet.getDataSetId()).getCohortIds());\n   }\n \n+  @Override\n+  public List<DbDataset> getDataSets(ResourceType resourceType, long resourceId) {\n+    List<DbDataset> dbDataSets = new ArrayList<>();\n+    if (ResourceType.COHORT.equals(resourceType)) {\n+      dbDataSets = dataSetDao.findDataSetsByCohortIds(resourceId);\n+    } else if (ResourceType.CONCEPT_SET.equals(resourceType)) {\n+      dbDataSets = dataSetDao.findDataSetsByConceptSetIds(resourceId);\n+    }\n+    return dbDataSets;\n+  }\n+\n+  @Override\n+  public List<DbDataset> getInvalidDataSetsByWorkspace(DbWorkspace dbWorkspace) {\n+\n+    return dataSetDao.findByWorkspaceIdAndInvalid(dbWorkspace.getWorkspaceId(), false);\n+  }\n+\n+  @Override\n+  public void deleteDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n+    DbDataset dataSet = getDbDataSet(dbWorkspace, dataSetId);\n+    dataSetDao.delete(dataSet.getDataSetId());\n+  }\n+\n+  @Override\n+  public DbDataset getDbDataSet(DbWorkspace dbWorkspace, Long dataSetId) {\n+\n+    DbDataset dataSet = dataSetDao.findOne(dataSetId);\n+    if (dataSet == null || dbWorkspace.getWorkspaceId() != dataSet.getWorkspaceId()) {\n+      throw new NotFoundException(\n+          String.format(\n+              \"No data set with ID %s in workspace %s.\", dataSet, dbWorkspace.getFirecloudName()));\n+    }\n+    return dataSet;\n+  }\n+\n+  @Override\n+  public void markDirty(ResourceType resourceType, long resourceId) {\n+    List<DbDataset> dbDataSetList = getDataSets(resourceType, resourceId);\n+    dbDataSetList =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "142dc75ff1347e60bcd11863d64a945addaa2fb4"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc79f2f5f7c0e0c91605d17a982bc5d56edf3aee", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/bc79f2f5f7c0e0c91605d17a982bc5d56edf3aee", "committedDate": "2020-06-24T16:14:49Z", "message": "PR Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b46eb2ae301c7b63e8e6bf9110599e78a0e26a30", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/b46eb2ae301c7b63e8e6bf9110599e78a0e26a30", "committedDate": "2020-06-24T18:15:15Z", "message": "fixing test case."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4214588eda06b517be546f89aa76786beb43e014", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/4214588eda06b517be546f89aa76786beb43e014", "committedDate": "2020-06-24T18:42:47Z", "message": "Fix Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b55376cff6436d2ce15d9fee848f0e0e7ea9db2", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/3b55376cff6436d2ce15d9fee848f0e0e7ea9db2", "committedDate": "2020-06-24T18:47:31Z", "message": "Merge branch 'master' into nsaxena/dataSetService"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e726f0eb4da4c8bed5e82cf82f766b3b5be6ec92", "author": {"user": {"login": "NehaBroad", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/e726f0eb4da4c8bed5e82cf82f766b3b5be6ec92", "committedDate": "2020-06-24T18:56:12Z", "message": "Spotless"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4601, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}