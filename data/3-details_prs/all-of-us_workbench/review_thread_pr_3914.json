{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjkzODg0", "number": 3914, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOToyOTo1MFrOEcNofg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOToyOTo1MFrOEcNofg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDE4OTQyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxOToyOTo1MFrOHGmrrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTowOTowM1rOHHQt-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY4NzI3Ng==", "bodyText": "Since both at line 120 and here toHydratedConcept is being called after updateConeptSet, how about calling   toHydratedConcept inside an conceptSetService.updateConceptSet? Or should we make the service return  Hydrated ConceptSet where ever possible like update/create?", "url": "https://github.com/all-of-us/workbench/pull/3914#discussion_r476687276", "createdAt": "2020-08-25T19:29:50Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -221,18 +126,15 @@ private void addConceptsToSet(DbConceptSet dbConceptSet, List<Long> addedIds) {\n       String workspaceId,\n       Long conceptSetId,\n       UpdateConceptSetRequest request) {\n-    DbConceptSet dbConceptSet =\n-        getDbConceptSet(workspaceNamespace, workspaceId, conceptSetId, WorkspaceAccessLevel.WRITER);\n-    validateAndUpdateDbConceptSetConcept(dbConceptSet, request);\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbConceptSet.setLastModifiedTime(now);\n-    try {\n-      dbConceptSet = conceptSetService.save(dbConceptSet);\n-      return ResponseEntity.ok(toHydratedConceptSet(dbConceptSet));\n-      // TODO: add recent resource entry for concept sets [RW-1129]\n-    } catch (OptimisticLockException e) {\n-      throw new ConflictException(\"Failed due to concurrent concept set modification\");\n-    }\n+    // Fail fast if request isn't valid\n+    validateUpdateConceptSetConcepts(request);\n+\n+    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+        workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n+\n+    return ResponseEntity.ok(\n+        conceptSetService.toHydratedConcepts(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "00437c4739c916aa2cbe9dbba077611bbdddf69c"}, "originalPosition": 272}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM3NTk5Mw==", "bodyText": "Good idea. Making toHydratedConcept a private method in ConceptSetService.", "url": "https://github.com/all-of-us/workbench/pull/3914#discussion_r477375993", "createdAt": "2020-08-26T15:09:03Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -221,18 +126,15 @@ private void addConceptsToSet(DbConceptSet dbConceptSet, List<Long> addedIds) {\n       String workspaceId,\n       Long conceptSetId,\n       UpdateConceptSetRequest request) {\n-    DbConceptSet dbConceptSet =\n-        getDbConceptSet(workspaceNamespace, workspaceId, conceptSetId, WorkspaceAccessLevel.WRITER);\n-    validateAndUpdateDbConceptSetConcept(dbConceptSet, request);\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbConceptSet.setLastModifiedTime(now);\n-    try {\n-      dbConceptSet = conceptSetService.save(dbConceptSet);\n-      return ResponseEntity.ok(toHydratedConceptSet(dbConceptSet));\n-      // TODO: add recent resource entry for concept sets [RW-1129]\n-    } catch (OptimisticLockException e) {\n-      throw new ConflictException(\"Failed due to concurrent concept set modification\");\n-    }\n+    // Fail fast if request isn't valid\n+    validateUpdateConceptSetConcepts(request);\n+\n+    workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n+        workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n+\n+    return ResponseEntity.ok(\n+        conceptSetService.toHydratedConcepts(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjY4NzI3Ng=="}, "originalCommit": {"oid": "00437c4739c916aa2cbe9dbba077611bbdddf69c"}, "originalPosition": 272}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2328, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}