{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjU1OTAw", "number": 3367, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTozNzo0OFrODwDLPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjo0NTozMlrODwE6bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzEwMjY5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTozNzo0OFrOGC1Dmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTozNzo0OFrOGC1Dmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTYxOTYxMA==", "bodyText": "This is very nicely compartmentalized.  (spelling tho)", "url": "https://github.com/all-of-us/workbench/pull/3367#discussion_r405619610", "createdAt": "2020-04-08T15:37:48Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -344,6 +345,10 @@ private DbUser initializeUserIfNeeded() {\n       verifyInvitationKey(request.getInvitationKey());\n     }\n \n+    if (workbenchConfigProvider.get().featureFlags.requireInstitutionalVerification) {\n+      verifyInsitutionAffilation(request.getProfile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c868f03e1d1876fd04141fa3820c52b87155a7a0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzM4NzMyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjo0NTozMlrOGC33sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjo0NTozMlrOGC33sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2NTcxNQ==", "bodyText": "please make this line use CONTACT_EMAIL and change the domain to a different domain", "url": "https://github.com/all-of-us/workbench/pull/3367#discussion_r405665715", "createdAt": "2020-04-08T16:45:32Z", "author": {"login": "jmthibault79"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -291,6 +290,147 @@ public void testInvitationKeyVerification_invitationKeyMismatch() {\n     profileController.invitationKeyVerification(invitationVerificationRequest);\n   }\n \n+  @Test(expected = BadRequestException.class)\n+  public void testCreateAccount_MismatchEmailAddress() {\n+    createUser();\n+    config.featureFlags.requireInstitutionalVerification = true;\n+    final Institution broad =\n+        new Institution()\n+            .shortName(\"Broad\")\n+            .displayName(\"The Broad Institute\")\n+            .emailAddresses(Collections.singletonList(CONTACT_EMAIL))\n+            .emailDomains(Collections.singletonList(\"example.com\"))\n+            .duaTypeEnum(DuaType.RESTRICTED);\n+    institutionService.createInstitution(broad);\n+\n+    final VerifiedInstitutionalAffiliation verifiedInstitutionalAffiliation =\n+        new VerifiedInstitutionalAffiliation()\n+            .institutionShortName(\"Broad\")\n+            .institutionalRoleEnum(InstitutionalRole.STUDENT);\n+    createAccountRequest\n+        .getProfile()\n+        .verifiedInstitutionalAffiliation(verifiedInstitutionalAffiliation)\n+        .contactEmail(\"notBob@example.com\");\n+    profileController.createAccount(createAccountRequest);\n+  }\n+\n+  @Test(expected = BadRequestException.class)\n+  public void testCreateAccount_MismatchEmailDomain() {\n+    createUser();\n+    config.featureFlags.requireInstitutionalVerification = true;\n+    final Institution broad =\n+        new Institution()\n+            .shortName(\"Broad\")\n+            .displayName(\"The Broad Institute\")\n+            .emailAddresses(Collections.singletonList(CONTACT_EMAIL))\n+            .emailDomains(Collections.singletonList(\"example.com\"))\n+            .duaTypeEnum(DuaType.MASTER);\n+    institutionService.createInstitution(broad);\n+\n+    final VerifiedInstitutionalAffiliation verifiedInstitutionalAffiliation =\n+        new VerifiedInstitutionalAffiliation()\n+            .institutionShortName(\"Broad\")\n+            .institutionalRoleEnum(InstitutionalRole.STUDENT);\n+    createAccountRequest\n+        .getProfile()\n+        .verifiedInstitutionalAffiliation(verifiedInstitutionalAffiliation)\n+        .contactEmail(\"bob@broad.com\");\n+    profileController.createAccount(createAccountRequest);\n+  }\n+\n+  @Test(expected = BadRequestException.class)\n+  public void testCreateAccount_MismatchEmailDomainNullDUA() {\n+    createUser();\n+    config.featureFlags.requireInstitutionalVerification = true;\n+    final Institution broad =\n+        new Institution()\n+            .shortName(\"Broad\")\n+            .displayName(\"The Broad Institute\")\n+            .emailAddresses(Collections.singletonList(CONTACT_EMAIL))\n+            .emailDomains(Collections.singletonList(\"example.com\"));\n+    institutionService.createInstitution(broad);\n+\n+    final VerifiedInstitutionalAffiliation verifiedInstitutionalAffiliation =\n+        new VerifiedInstitutionalAffiliation()\n+            .institutionShortName(\"Broad\")\n+            .institutionalRoleEnum(InstitutionalRole.STUDENT);\n+    createAccountRequest\n+        .getProfile()\n+        .verifiedInstitutionalAffiliation(verifiedInstitutionalAffiliation)\n+        .contactEmail(\"bob@broadInstitute.com\");\n+    profileController.createAccount(createAccountRequest);\n+  }\n+\n+  @Test\n+  public void testCreateAccount_Success_RESTRICTEDDUA() {\n+    createUser();\n+    config.featureFlags.requireInstitutionalVerification = true;\n+    final Institution broad =\n+        new Institution()\n+            .shortName(\"Broad\")\n+            .displayName(\"The Broad Institute\")\n+            .emailAddresses(Collections.singletonList(\"bob@example.com\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c868f03e1d1876fd04141fa3820c52b87155a7a0"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3143, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}