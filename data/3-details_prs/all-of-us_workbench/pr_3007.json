{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzODQ5MDg3", "number": 3007, "title": "[RW-4233][risk=no] adding PM and Surveys to concept search", "bodyText": "adding PM and Surveys to concept search. This PR includes changes for:\n\nmake-bq-data.sh - update standard concept counts for measurements\nConceptsController - converting TO_CLIENT_CONCEPT function to a regular method and updating   search to include PM/Survey\nConceptService - updating service to include PM/Survey calls\nCbCriteriaDao - implemented survey db calls here to allow proper ordering of questions\nConceptDao - Implemented PM db calls here\nDomainInfoDao - added source/standard checks and implemented call for PM", "createdAt": "2020-01-16T21:15:46Z", "url": "https://github.com/all-of-us/workbench/pull/3007", "merged": true, "mergeCommit": {"oid": "abcab0576952f0fbbe23438910ba5c17bf6c42b3"}, "closed": true, "closedAt": "2020-01-17T18:55:24Z", "author": {"login": "freemabd"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4E3UiAH2gAyMzYzODQ5MDg3OjAzOTliZmQ1NzdiMWJjY2JmNDY3ZDhmYTFjZTg4MGVjZDQ2NjBlM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7TbI5AFqTM0NDc3NTM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0399bfd577b1bccbf467d8fa1ce880ecd4660e3d", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/0399bfd577b1bccbf467d8fa1ce880ecd4660e3d", "committedDate": "2020-01-07T18:14:44Z", "message": "RW-4233 adding calls for PM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6fa0928d89cdefaaf9df08e11e822b83890f091", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/a6fa0928d89cdefaaf9df08e11e822b83890f091", "committedDate": "2020-01-07T19:28:31Z", "message": "fixing problems."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "775f107c9854a9277e3950785abc9a57e3edbedb", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/775f107c9854a9277e3950785abc9a57e3edbedb", "committedDate": "2020-01-07T20:16:19Z", "message": "RW-4233 change sort on surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed678fd67fd35870b2457681f9a88565e8b32885", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/ed678fd67fd35870b2457681f9a88565e8b32885", "committedDate": "2020-01-09T17:32:24Z", "message": "RW-4233 adding check for source/standard when searching Surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eac5610972d831df23f8c3c42e574994dc62b93", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/5eac5610972d831df23f8c3c42e574994dc62b93", "committedDate": "2020-01-10T18:43:07Z", "message": "RW-4233 remove surveys filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a11e5064cdc9fad8bb1abaeb491089c53e3aad28", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/a11e5064cdc9fad8bb1abaeb491089c53e3aad28", "committedDate": "2020-01-10T20:16:27Z", "message": "RW-4233 fixing queries for PM and Surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b3af477626e12b8886f46534b3eac3d22834ee4", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/3b3af477626e12b8886f46534b3eac3d22834ee4", "committedDate": "2020-01-13T15:12:22Z", "message": "RW-4233 adding tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfa95feceb68b2d4ef7ff44c5aa4f18737bed7cf", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/bfa95feceb68b2d4ef7ff44c5aa4f18737bed7cf", "committedDate": "2020-01-13T19:08:03Z", "message": "RW-4233 show survey results in same table as other domains"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b2baf89916f2df1a4967098e89fcb33faaabaf6", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/6b2baf89916f2df1a4967098e89fcb33faaabaf6", "committedDate": "2020-01-13T19:08:24Z", "message": "Merge branch 'freemabd/RW-4233' of https://github.com/all-of-us/workbench into freemabd/RW-4233"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fbe3d2e14f8fbe07ba63f5b7c198d7f88872065", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/1fbe3d2e14f8fbe07ba63f5b7c198d7f88872065", "committedDate": "2020-01-13T20:56:05Z", "message": "RW-4233 fix count in title for PM and Surveys in add concepts modal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3f1bfc56aa92b387ab1489a62f350a825319a59", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/c3f1bfc56aa92b387ab1489a62f350a825319a59", "committedDate": "2020-01-13T22:35:30Z", "message": "RW-4233 fix broken ui test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58ef00806b7ded8d67c7c60057ed0f2fe1843b50", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/58ef00806b7ded8d67c7c60057ed0f2fe1843b50", "committedDate": "2020-01-14T15:51:48Z", "message": "RW-4233 pass domain to concept table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2227ccf145f423a25d8ea3a485f9596c9eedc0cb", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/2227ccf145f423a25d8ea3a485f9596c9eedc0cb", "committedDate": "2020-01-14T15:54:12Z", "message": "RW-4233 fix concept table in detail view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d8599f7b5570a41c5aad2820f9c88b74b1678dd", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/5d8599f7b5570a41c5aad2820f9c88b74b1678dd", "committedDate": "2020-01-14T20:57:56Z", "message": "RW-4233 show survey tab when clicking survey cards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52bfe401f44247b32274956ea685b8928465262a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/52bfe401f44247b32274956ea685b8928465262a", "committedDate": "2020-01-16T15:27:06Z", "message": "RW-4233 trigger search when standard checkbox changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8140e9a717127a05773638b2e64b2844c4e225dd", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/8140e9a717127a05773638b2e64b2844c4e225dd", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 adding calls for PM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08e9b2c8ca757f72b38288578f598a42ea866e9d", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/08e9b2c8ca757f72b38288578f598a42ea866e9d", "committedDate": "2020-01-16T15:36:42Z", "message": "fixing problems."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d6f9270689470f2d688e92dec864d5091be3778", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/8d6f9270689470f2d688e92dec864d5091be3778", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 change sort on surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2424312fd50a8dd1b876a09d4999af9ba73248de", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/2424312fd50a8dd1b876a09d4999af9ba73248de", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 adding check for source/standard when searching Surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c85a61dfee851ffb287da437f90fe21f3a99bae", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/2c85a61dfee851ffb287da437f90fe21f3a99bae", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 remove surveys filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29633e0a8a4cb2b0c0254f22ab6595d2bffb062c", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/29633e0a8a4cb2b0c0254f22ab6595d2bffb062c", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 fixing queries for PM and Surveys."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "973022cd551c81dcda2256e84a7281f7b2e6f35a", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/973022cd551c81dcda2256e84a7281f7b2e6f35a", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 adding tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec9e9a2f317743d082faa5b885a8832e6028e0fd", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/ec9e9a2f317743d082faa5b885a8832e6028e0fd", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 show survey results in same table as other domains"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cce6e7590607db7afd226eef25c728d0d7a74b9", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/0cce6e7590607db7afd226eef25c728d0d7a74b9", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 fix count in title for PM and Surveys in add concepts modal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef7892ad85cd513f935973df776587722d844f18", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/ef7892ad85cd513f935973df776587722d844f18", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 fix broken ui test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc2122c20c1f512f0cb92a4c4942603b86d8681d", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/fc2122c20c1f512f0cb92a4c4942603b86d8681d", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 pass domain to concept table"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73a6d0ebac3e78da5c82938e74c973c3c1eeb27a", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/73a6d0ebac3e78da5c82938e74c973c3c1eeb27a", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 fix concept table in detail view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c414d0bad9b7222a62f76ba7cde244d6fe7307b3", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/c414d0bad9b7222a62f76ba7cde244d6fe7307b3", "committedDate": "2020-01-16T15:36:42Z", "message": "RW-4233 show survey tab when clicking survey cards"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cf5db97256954f1c3de7f1862782c2894646bf0", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/5cf5db97256954f1c3de7f1862782c2894646bf0", "committedDate": "2020-01-16T15:40:05Z", "message": "RW-4233 trigger search when standard checkbox changed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27a8147527b3310fe7b0ff818fd52e7f1aa3b907", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/27a8147527b3310fe7b0ff818fd52e7f1aa3b907", "committedDate": "2020-01-16T15:43:16Z", "message": "Merge branch 'freemabd/RW-4233' of https://github.com/all-of-us/workbench into freemabd/RW-4233\n\n\u0001 Conflicts:\n\u0001\tui/src/app/pages/data/concept/concept-homepage.tsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f753628aae55bb2c4ee8e0af5a0bd46a00d4790", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/0f753628aae55bb2c4ee8e0af5a0bd46a00d4790", "committedDate": "2020-01-16T19:17:44Z", "message": "RW-4233 code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "498bc7b98215309fa4771964dcb56d16e120ed1b", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/498bc7b98215309fa4771964dcb56d16e120ed1b", "committedDate": "2020-01-16T20:19:11Z", "message": "RW-4233 fixing queries for PM."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76aae25351caa93f7ecb8de31a3ed2dd4db37aae", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/76aae25351caa93f7ecb8de31a3ed2dd4db37aae", "committedDate": "2020-01-16T20:19:32Z", "message": "Merge branch 'freemabd/RW-4233' of https://github.com/all-of-us/workbench into freemabd/RW-4233"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/cda16421e0d478b29c4b16c6a78a72898c116c0d", "committedDate": "2020-01-16T20:51:10Z", "message": "RW-4233 fixing test cases."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjM4MjYy", "url": "https://github.com/all-of-us/workbench/pull/3007#pullrequestreview-344638262", "createdAt": "2020-01-17T15:05:00Z", "commit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTowNTowMFrOFe7zDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNToxMzoxMlrOFe8C4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4MTMyNw==", "bodyText": "Will, does PM still have a separate bucket at the bottom of the UI?", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r367981327", "createdAt": "2020-01-17T15:05:00Z", "author": {"login": "freemabd"}, "path": "ui/src/app/pages/data/concept/concept-add-modal.tsx", "diffHunk": "@@ -31,6 +25,16 @@ const styles = reactStyles({\n   }\n });\n \n+const filterConcepts = (concepts: any[], domain: Domain) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Mzc3Ng==", "bodyText": "Is it easier to separate domain counts api calls from data api calls from a UI perspective? Seems like it would simplify logic/responsibility of the api call.", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r367983776", "createdAt": "2020-01-17T15:10:11Z", "author": {"login": "freemabd"}, "path": "ui/src/app/pages/data/concept/concept-homepage.tsx", "diffHunk": "@@ -348,49 +342,51 @@ export const ConceptHomepage = withCurrentWorkspace()(\n           maxResults: this.MAX_CONCEPT_FETCH\n         });\n         completedDomainSearches.push(cacheItem.domain);\n-        cacheItem.items = resp.items;\n+        cacheItem.items = cacheItem.domain === Domain.SURVEY ? resp.questions || [] : resp.items;\n         this.setState({completedDomainSearches: completedDomainSearches});\n         if (activeTabSearch) {\n-          const conceptDomainCounts = environment.enableNewConceptTabs ? [...resp.domainCounts]\n-            : resp.domainCounts.filter(item => item.domain !== Domain.PHYSICALMEASUREMENT);\n+          const conceptDomainCounts = environment.enableNewConceptTabs ? resp.domainCounts\n+            : resp.domainCounts.filter(item => ![Domain.PHYSICALMEASUREMENT, Domain.SURVEY].includes(item.domain));\n           this.setState({\n             searchLoading: false,\n             conceptDomainCounts: conceptDomainCounts,\n-            selectedDomain: resp.domainCounts\n-              .find(domainCount => domainCount.domain === cacheItem.domain)});\n+            selectedDomain: resp.domainCounts.find(domainCount => domainCount.domain === cacheItem.domain)\n+          });\n           this.setConceptsAndVocabularies();\n         }\n       });\n       this.setState({selectedConceptDomainMap: selectedConceptDomainMap});\n     }\n \n-    selectConcepts(concepts: Concept[]) {\n-      const {selectedDomain, selectedConceptDomainMap} = this.state;\n-      selectedConceptDomainMap[selectedDomain.domain] = concepts.filter(concept => {\n-        return concept.domainId.toLowerCase() === selectedDomain.domain.toString().toLowerCase();\n-      });\n+    selectConcepts(concepts: any[]) {\n+      const {selectedDomain: {domain}, selectedConceptDomainMap} = this.state;\n+      if (domain === Domain.PHYSICALMEASUREMENT) {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept =>\n+          concept.domainId.toLowerCase() === Domain[Domain.MEASUREMENT].toLowerCase()\n+            && concept.vocabularyId === CriteriaType[CriteriaType.PPI]\n+        );\n+      } else if (domain === Domain.SURVEY) {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept => !!concept.question);\n+      } else {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept => concept.domainId.toLowerCase() === Domain[domain].toLowerCase());\n+      }\n       this.setState({selectedConceptDomainMap: selectedConceptDomainMap});\n     }\n \n     clearSearch() {\n       this.setState({\n+        currentInputString: '',\n         currentSearchString: '',\n         showSearchError: false,\n         searching: false // reset the search result table to show browse/domain cards instead\n       });\n     }\n \n-    browseDomain(domain: DomainInfo) {\n+    browseDomain(domain?: DomainInfo) {\n       const {conceptDomainCounts} = this.state;\n-      this.setState({browsingSurvey: false, currentSearchString: '',\n-        selectedDomain: conceptDomainCounts\n-          .find(domainCount => domainCount.domain === domain.domain)},\n-        this.searchConcepts);\n-    }\n-\n-    browseSurvey(surveyName) {\n-      this.setState({browsingSurvey: true,\n-        selectedSurvey: surveyName});\n+      const selectedDomain = !domain ? {domain: Domain.SURVEY, name: 'Surveys', conceptCount: 0}\n+        : conceptDomainCounts.find(domainCount => domainCount.domain === domain.domain);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 243}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NDc5OA==", "bodyText": "Does the api need a call the get survey answers? Or is that obsolete now?", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r367984798", "createdAt": "2020-01-17T15:12:05Z", "author": {"login": "freemabd"}, "path": "ui/src/app/pages/data/concept/concept-homepage.tsx", "diffHunk": "@@ -411,23 +407,11 @@ export const ConceptHomepage = withCurrentWorkspace()(\n       return selectedConceptDomainMap[selectedDomain.domain].length;\n     }\n \n-    selectedQuestion(selectedQues) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 252}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTM3OQ==", "bodyText": "Did we change this to any because it can also be PM?", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r367985379", "createdAt": "2020-01-17T15:13:12Z", "author": {"login": "freemabd"}, "path": "ui/src/app/pages/data/concept/concept-table.tsx", "diffHunk": "@@ -107,23 +158,24 @@ export class SynonymsObject extends React.Component<{}, SynonymsObjectState> {\n }\n \n interface Props {\n-  concepts: Concept[];\n+  concepts: any[];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjcxMzMz", "url": "https://github.com/all-of-us/workbench/pull/3007#pullrequestreview-344671333", "createdAt": "2020-01-17T15:52:53Z", "commit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTo1Mjo1M1rOFe9T9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNjoxNjozMlrOFe-CwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwNjEzNA==", "bodyText": "Here we select concepts from DbConcept and above we get the concept counts from DbCriteria.  Is it possible to get these from the same source?", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368006134", "createdAt": "2020-01-17T15:52:53Z", "author": {"login": "dolbeew"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -42,5 +43,59 @@\n               + \"where (c.countValue > 0 or c.sourceCountValue > 0) \"\n               + \"and c.standardConcept IN (?1) \"\n               + \"and c.domainId in (?2)\")\n-  Page<DbConcept> findConcepts(List<String> conceptTypes, List<String> domainIds, Pageable page);\n+  Page<DbConcept> findConcepts(\n+      ImmutableList<String> conceptTypes, List<String> domainIds, Pageable page);\n+\n+  /**\n+   * Return standard or all concepts in each vocabulary for the specified domain matching the\n+   * specified expression, matching concept name, synonym, ID, or code.\n+   *\n+   * @param matchExp SQL MATCH expression to match concept name or synonym\n+   * @param conceptTypes can be 'S', 'C' or ''\n+   * @param domainIds domain IDs to use when filtering concepts\n+   * @param vocabularyId vocabulary id type to search\n+   * @param conceptClassId concept class id type to search\n+   * @return per-vocabulary concept counts\n+   */\n+  @Query(\n+      value =\n+          \"select distinct c from DbConcept c \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxMjAwOA==", "bodyText": "Do surveys have to use this structure or can it be modified to add properties (possibly survey name)? Not needed now, just asking for future reference.", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368012008", "createdAt": "2020-01-17T16:03:52Z", "author": {"login": "dolbeew"}, "path": "api/src/main/java/org/pmiops/workbench/api/ConceptsController.java", "diffHunk": "@@ -195,12 +192,34 @@ private void addDomainCounts(SearchConceptsRequest request, ConceptListResponse\n               (request.getPageNumber() == null) ? 0 : request.getPageNumber());\n       if (concepts != null) {\n         response.setItems(\n-            concepts.getContent().stream().map(TO_CLIENT_CONCEPT).collect(Collectors.toList()));\n+            concepts.getContent().stream()\n+                .map(ConceptsController::toClientConcept)\n+                .collect(Collectors.toList()));\n       }\n     }\n \n     // TODO: consider doing these queries in parallel\n     addDomainCounts(request, response);\n     return ResponseEntity.ok(response);\n   }\n+\n+  public static Concept toClientConcept(DbConcept concept) {\n+    return new Concept()\n+        .conceptClassId(concept.getConceptClassId())\n+        .conceptCode(concept.getConceptCode())\n+        .conceptName(concept.getConceptName())\n+        .conceptId(concept.getConceptId())\n+        .countValue(concept.getCountValue())\n+        .domainId(concept.getDomainId())\n+        .prevalence(concept.getPrevalence())\n+        .standardConcept(ConceptService.STANDARD_CONCEPT_CODE.equals(concept.getStandardConcept()))\n+        .vocabularyId(concept.getVocabularyId())\n+        .conceptSynonyms(concept.getSynonyms());\n+  }\n+\n+  private SurveyQuestions toClientSurveyQuestions(DbCriteria dbCriteria) {\n+    return new SurveyQuestions()\n+        .conceptId(dbCriteria.getLongConceptId())\n+        .question(dbCriteria.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxMzIzNA==", "bodyText": "Yes, the code is there but is currently feature flagged. Should only appear in local and test environments", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368013234", "createdAt": "2020-01-17T16:06:26Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/concept/concept-add-modal.tsx", "diffHunk": "@@ -31,6 +25,16 @@ const styles = reactStyles({\n   }\n });\n \n+const filterConcepts = (concepts: any[], domain: Domain) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4MTMyNw=="}, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxNTQ1Mg==", "bodyText": "Actually changed so surveys could be included. We used to use a separate component but now we use the same one for all domains", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368015452", "createdAt": "2020-01-17T16:10:56Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/concept/concept-table.tsx", "diffHunk": "@@ -107,23 +158,24 @@ export class SynonymsObject extends React.Component<{}, SynonymsObjectState> {\n }\n \n interface Props {\n-  concepts: Concept[];\n+  concepts: any[];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NTM3OQ=="}, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxNzQ4Mg==", "bodyText": "Yes, that would actually make it simpler on the UI also.", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368017482", "createdAt": "2020-01-17T16:15:09Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/concept/concept-homepage.tsx", "diffHunk": "@@ -348,49 +342,51 @@ export const ConceptHomepage = withCurrentWorkspace()(\n           maxResults: this.MAX_CONCEPT_FETCH\n         });\n         completedDomainSearches.push(cacheItem.domain);\n-        cacheItem.items = resp.items;\n+        cacheItem.items = cacheItem.domain === Domain.SURVEY ? resp.questions || [] : resp.items;\n         this.setState({completedDomainSearches: completedDomainSearches});\n         if (activeTabSearch) {\n-          const conceptDomainCounts = environment.enableNewConceptTabs ? [...resp.domainCounts]\n-            : resp.domainCounts.filter(item => item.domain !== Domain.PHYSICALMEASUREMENT);\n+          const conceptDomainCounts = environment.enableNewConceptTabs ? resp.domainCounts\n+            : resp.domainCounts.filter(item => ![Domain.PHYSICALMEASUREMENT, Domain.SURVEY].includes(item.domain));\n           this.setState({\n             searchLoading: false,\n             conceptDomainCounts: conceptDomainCounts,\n-            selectedDomain: resp.domainCounts\n-              .find(domainCount => domainCount.domain === cacheItem.domain)});\n+            selectedDomain: resp.domainCounts.find(domainCount => domainCount.domain === cacheItem.domain)\n+          });\n           this.setConceptsAndVocabularies();\n         }\n       });\n       this.setState({selectedConceptDomainMap: selectedConceptDomainMap});\n     }\n \n-    selectConcepts(concepts: Concept[]) {\n-      const {selectedDomain, selectedConceptDomainMap} = this.state;\n-      selectedConceptDomainMap[selectedDomain.domain] = concepts.filter(concept => {\n-        return concept.domainId.toLowerCase() === selectedDomain.domain.toString().toLowerCase();\n-      });\n+    selectConcepts(concepts: any[]) {\n+      const {selectedDomain: {domain}, selectedConceptDomainMap} = this.state;\n+      if (domain === Domain.PHYSICALMEASUREMENT) {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept =>\n+          concept.domainId.toLowerCase() === Domain[Domain.MEASUREMENT].toLowerCase()\n+            && concept.vocabularyId === CriteriaType[CriteriaType.PPI]\n+        );\n+      } else if (domain === Domain.SURVEY) {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept => !!concept.question);\n+      } else {\n+        selectedConceptDomainMap[domain] = concepts.filter(concept => concept.domainId.toLowerCase() === Domain[domain].toLowerCase());\n+      }\n       this.setState({selectedConceptDomainMap: selectedConceptDomainMap});\n     }\n \n     clearSearch() {\n       this.setState({\n+        currentInputString: '',\n         currentSearchString: '',\n         showSearchError: false,\n         searching: false // reset the search result table to show browse/domain cards instead\n       });\n     }\n \n-    browseDomain(domain: DomainInfo) {\n+    browseDomain(domain?: DomainInfo) {\n       const {conceptDomainCounts} = this.state;\n-      this.setState({browsingSurvey: false, currentSearchString: '',\n-        selectedDomain: conceptDomainCounts\n-          .find(domainCount => domainCount.domain === domain.domain)},\n-        this.searchConcepts);\n-    }\n-\n-    browseSurvey(surveyName) {\n-      this.setState({browsingSurvey: true,\n-        selectedSurvey: surveyName});\n+      const selectedDomain = !domain ? {domain: Domain.SURVEY, name: 'Surveys', conceptCount: 0}\n+        : conceptDomainCounts.find(domainCount => domainCount.domain === domain.domain);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4Mzc3Ng=="}, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 243}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxODExMw==", "bodyText": "We've removed the answers since they're not selectable. It's possible we may need them in the future though", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368018113", "createdAt": "2020-01-17T16:16:32Z", "author": {"login": "dolbeew"}, "path": "ui/src/app/pages/data/concept/concept-homepage.tsx", "diffHunk": "@@ -411,23 +407,11 @@ export const ConceptHomepage = withCurrentWorkspace()(\n       return selectedConceptDomainMap[selectedDomain.domain].length;\n     }\n \n-    selectedQuestion(selectedQues) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzk4NDc5OA=="}, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 252}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NzA0ODM2", "url": "https://github.com/all-of-us/workbench/pull/3007#pullrequestreview-344704836", "createdAt": "2020-01-17T16:43:50Z", "commit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNjo0Mzo1MFrOFe-3MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNjo0Mzo1MFrOFe-3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAzMTUzNg==", "bodyText": "Yes, survey name can definitely be added to the model.", "url": "https://github.com/all-of-us/workbench/pull/3007#discussion_r368031536", "createdAt": "2020-01-17T16:43:50Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/ConceptsController.java", "diffHunk": "@@ -195,12 +192,34 @@ private void addDomainCounts(SearchConceptsRequest request, ConceptListResponse\n               (request.getPageNumber() == null) ? 0 : request.getPageNumber());\n       if (concepts != null) {\n         response.setItems(\n-            concepts.getContent().stream().map(TO_CLIENT_CONCEPT).collect(Collectors.toList()));\n+            concepts.getContent().stream()\n+                .map(ConceptsController::toClientConcept)\n+                .collect(Collectors.toList()));\n       }\n     }\n \n     // TODO: consider doing these queries in parallel\n     addDomainCounts(request, response);\n     return ResponseEntity.ok(response);\n   }\n+\n+  public static Concept toClientConcept(DbConcept concept) {\n+    return new Concept()\n+        .conceptClassId(concept.getConceptClassId())\n+        .conceptCode(concept.getConceptCode())\n+        .conceptName(concept.getConceptName())\n+        .conceptId(concept.getConceptId())\n+        .countValue(concept.getCountValue())\n+        .domainId(concept.getDomainId())\n+        .prevalence(concept.getPrevalence())\n+        .standardConcept(ConceptService.STANDARD_CONCEPT_CODE.equals(concept.getStandardConcept()))\n+        .vocabularyId(concept.getVocabularyId())\n+        .conceptSynonyms(concept.getSynonyms());\n+  }\n+\n+  private SurveyQuestions toClientSurveyQuestions(DbCriteria dbCriteria) {\n+    return new SurveyQuestions()\n+        .conceptId(dbCriteria.getLongConceptId())\n+        .question(dbCriteria.getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAxMjAwOA=="}, "originalCommit": {"oid": "cda16421e0d478b29c4b16c6a78a72898c116c0d"}, "originalPosition": 142}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c6e6c458f9393734452e440f5ebd230dbfa5544", "author": {"user": null}, "url": "https://github.com/all-of-us/workbench/commit/2c6e6c458f9393734452e440f5ebd230dbfa5544", "committedDate": "2020-01-17T18:00:34Z", "message": "RW-4233 fix surveys for non feature flagged view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b76bb455e89cadc950320df924b75ba0c8e8a096", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/b76bb455e89cadc950320df924b75ba0c8e8a096", "committedDate": "2020-01-17T18:22:29Z", "message": "RW-4233 removing unchecked warnings."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0Nzc1Mzg0", "url": "https://github.com/all-of-us/workbench/pull/3007#pullrequestreview-344775384", "createdAt": "2020-01-17T18:54:18Z", "commit": {"oid": "b76bb455e89cadc950320df924b75ba0c8e8a096"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3681, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}