{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTA0MDcz", "number": 4065, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNTo1NVrOEngHsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0NDowMlrOEngjMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU2MTc3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/UserMetricsController.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNTo1NVrOHYITQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNTo1NVrOHYITQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2Mzg3Mw==", "bodyText": "this line is the only actual change here", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495063873", "createdAt": "2020-09-25T15:25:55Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserMetricsController.java", "diffHunk": "@@ -260,24 +261,37 @@ public boolean hasValidBlobIdIfNotebookNamePresent(DbUserRecentResource dbUserRe\n         .orElse(true);\n   }\n \n+  // TODO RW-5638 reimplement all this in MapStruct\n   private WorkspaceResource buildRecentResource(\n       Map<Long, DbWorkspace> idToDbWorkspace,\n       Map<Long, FirecloudWorkspaceResponse> idToFcWorkspaceResponse,\n       DbUserRecentResource dbUserRecentResource) {\n+\n     WorkspaceResource resource = TO_CLIENT.apply(dbUserRecentResource);\n-    FirecloudWorkspaceResponse workspaceDetails =\n-        idToFcWorkspaceResponse.get(dbUserRecentResource.getWorkspaceId());\n+    final long workspaceId = dbUserRecentResource.getWorkspaceId();\n+\n+    buildFromDbWorkspace(resource, idToDbWorkspace.get(workspaceId));\n+    buildFromFcWorkspace(resource, idToFcWorkspaceResponse.get(workspaceId));\n+\n+    return resource;\n+  }\n+\n+  private void buildFromDbWorkspace(WorkspaceResource resource, DbWorkspace dbWorkspace) {\n+    resource.setCdrVersionId(commonMappers.cdrVersionToId(dbWorkspace.getCdrVersion()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU2NDE1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNjozNFrOHYIUyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNjozNFrOHYIUyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NDI2Nw==", "bodyText": "these were not used until now.  so now they need to refer to real values.", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495064267", "createdAt": "2020-09-25T15:26:34Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/copy-modal.spec.tsx", "diffHunk": "@@ -9,57 +9,64 @@ import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n \n import {dropNotebookFileSuffix} from 'app/pages/analysis/util';\n-import {CopyModal, CopyModalProps, CopyModalState} from './copy-modal';\n+import {CopyModalComponent, CopyModalProps, CopyModalState} from './copy-modal';\n import {ResourceType} from 'generated/fetch';\n+import {cdrVersionListResponse, CdrVersionsStubVariables} from 'testing/stubs/cdr-versions-api-stub';\n \n describe('CopyModal', () => {\n   let props: CopyModalProps;\n \n   const component = () => {\n-    return mount<CopyModal, CopyModalProps, CopyModalState>\n-    (<CopyModal {...props}/>);\n+    return mount<CopyModalComponent, CopyModalProps, CopyModalState>\n+    (<CopyModalComponent {...props}/>);\n   };\n \n   const workspaces = [\n     {\n       namespace: 'El Capitan',\n       name: 'Freerider',\n-      id: 'freerider'\n+      id: 'freerider',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Dawn Wall',\n-      id: 'dawn wall'\n+      id: 'dawn wall',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Zodiac',\n-      id: 'zodiac'\n+      id: 'zodiac',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'The Nose',\n-      id: 'the nose'\n+      id: 'the nose',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     }\n   ];\n-  const fromWorkspaceNamespace = 'namespace';\n-  const fromWorkspaceName = 'name';\n+  const fromWorkspaceNamespace = workspaces[0].namespace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU2Njg5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.spec.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNzoxNFrOHYIWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyNzoxNFrOHYIWjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NDcxOQ==", "bodyText": "\"fc\" added to clarify that this is the Firecloud Name, e.g. my-workspace rather than the Name, My Workspace", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495064719", "createdAt": "2020-09-25T15:27:14Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/copy-modal.spec.tsx", "diffHunk": "@@ -9,57 +9,64 @@ import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n \n import {dropNotebookFileSuffix} from 'app/pages/analysis/util';\n-import {CopyModal, CopyModalProps, CopyModalState} from './copy-modal';\n+import {CopyModalComponent, CopyModalProps, CopyModalState} from './copy-modal';\n import {ResourceType} from 'generated/fetch';\n+import {cdrVersionListResponse, CdrVersionsStubVariables} from 'testing/stubs/cdr-versions-api-stub';\n \n describe('CopyModal', () => {\n   let props: CopyModalProps;\n \n   const component = () => {\n-    return mount<CopyModal, CopyModalProps, CopyModalState>\n-    (<CopyModal {...props}/>);\n+    return mount<CopyModalComponent, CopyModalProps, CopyModalState>\n+    (<CopyModalComponent {...props}/>);\n   };\n \n   const workspaces = [\n     {\n       namespace: 'El Capitan',\n       name: 'Freerider',\n-      id: 'freerider'\n+      id: 'freerider',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Dawn Wall',\n-      id: 'dawn wall'\n+      id: 'dawn wall',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Zodiac',\n-      id: 'zodiac'\n+      id: 'zodiac',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'The Nose',\n-      id: 'the nose'\n+      id: 'the nose',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     }\n   ];\n-  const fromWorkspaceNamespace = 'namespace';\n-  const fromWorkspaceName = 'name';\n+  const fromWorkspaceNamespace = workspaces[0].namespace;\n+  const fromWorkspaceFCName = workspaces[0].id;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU3MDgyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyODoxNFrOHYIY4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyODoxNFrOHYIY4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NTMxNA==", "bodyText": "renamed for the benefit of the follow-on PR which will have different kinds of errors.  The original is only set for errors after attempting to copy.", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495065314", "createdAt": "2020-09-25T15:28:14Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -1,18 +1,20 @@\n+import * as fp from 'lodash/fp';\n import * as React from 'react';\n \n import { Button } from 'app/components/buttons';\n import { styles as headerStyles } from 'app/components/headers';\n import { Select, TextInput, ValidationError } from 'app/components/inputs';\n import { Modal, ModalBody, ModalFooter, ModalTitle } from 'app/components/modals';\n-import {ConceptSet, FileDetail, ResourceType, Workspace} from 'generated/fetch';\n+import {CdrVersionListResponse, ConceptSet, FileDetail, ResourceType, Workspace} from 'generated/fetch';\n \n import { Spinner } from 'app/components/spinners';\n import { workspacesApi } from 'app/services/swagger-fetch-clients';\n+import {reactStyles, withCdrVersions} from 'app/utils';\n import { navigate } from 'app/utils/navigation';\n import {toDisplay} from 'app/utils/resourceActions';\n import { WorkspacePermissions } from 'app/utils/workspace-permissions';\n \n-enum RequestState { UNSENT, ERROR, SUCCESS }\n+enum RequestState { UNSENT, COPY_ERROR, SUCCESS }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU3NTI4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyOToxN1rOHYIbcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyOToxN1rOHYIbcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NTk3MQ==", "bodyText": "renamed because this is no longer the primary exported artifact.  scroll down to the bottom of the file for the new CopyModal", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495065971", "createdAt": "2020-09-25T15:29:17Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -21,54 +23,105 @@ const ResourceTypeHomeTabs = new Map()\n   .set(ResourceType.DATASET, 'data');\n \n export interface Props {\n+  cdrVersionListResponse: CdrVersionListResponse;\n   fromWorkspaceNamespace: string;\n-  fromWorkspaceName: string;\n+  fromWorkspaceFCName: string;\n   fromResourceName: string;\n+  fromCdrVersionId: string;\n   onClose: Function;\n   onCopy: Function;\n   resourceType: ResourceType;\n   saveFunction: (CopyRequest) => Promise<FileDetail | ConceptSet>;\n }\n \n interface State {\n-  writeableWorkspaces: Array<Workspace>;\n+  workspaceOptions: Array<Object>;\n   destination: Workspace;\n   newName: string;\n   requestState: RequestState;\n-  errorMsg: string;\n+  copyErrorMsg: string;\n   loading: boolean;\n }\n \n-const boldStyle = {\n-  fontWeight: 600\n-};\n+const styles = reactStyles({\n+  bold: {\n+    fontWeight: 600\n+  },\n+});\n \n-class CopyModal extends React.Component<Props, State> {\n+class CopyModalComponent extends React.Component<Props, State> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODU4MjM0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTozMDo0OVrOHYIfYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0NjowOVrOHYJDmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2Njk3OQ==", "bodyText": "this method doesn't have much to do yet but it will in the next PR", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495066979", "createdAt": "2020-09-25T15:30:49Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -161,25 +211,29 @@ class CopyModal extends React.Component<Props, State> {\n     }\n   }\n \n+  setDestination(destination: Workspace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3NjI0OQ==", "bodyText": "two lines is plenty of work for a function to do", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495076249", "createdAt": "2020-09-25T15:46:09Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -161,25 +211,29 @@ class CopyModal extends React.Component<Props, State> {\n     }\n   }\n \n+  setDestination(destination: Workspace) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2Njk3OQ=="}, "originalCommit": {"oid": "bfc32601c70d4aa09c3ad9e6adb117a42786191c"}, "originalPosition": 198}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODYxNDkyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.spec.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTozOToyN1rOHYIzXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTozOToyN1rOHYIzXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3MjA5NQ==", "bodyText": "I'd rather you abbreviate workspace, response, function, etc,  and spell out \"Firecloud\".", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495072095", "createdAt": "2020-09-25T15:39:27Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/components/copy-modal.spec.tsx", "diffHunk": "@@ -9,57 +9,64 @@ import {waitOneTickAndUpdate} from 'testing/react-test-helpers';\n import {WorkspacesApiStub} from 'testing/stubs/workspaces-api-stub';\n \n import {dropNotebookFileSuffix} from 'app/pages/analysis/util';\n-import {CopyModal, CopyModalProps, CopyModalState} from './copy-modal';\n+import {CopyModalComponent, CopyModalProps, CopyModalState} from './copy-modal';\n import {ResourceType} from 'generated/fetch';\n+import {cdrVersionListResponse, CdrVersionsStubVariables} from 'testing/stubs/cdr-versions-api-stub';\n \n describe('CopyModal', () => {\n   let props: CopyModalProps;\n \n   const component = () => {\n-    return mount<CopyModal, CopyModalProps, CopyModalState>\n-    (<CopyModal {...props}/>);\n+    return mount<CopyModalComponent, CopyModalProps, CopyModalState>\n+    (<CopyModalComponent {...props}/>);\n   };\n \n   const workspaces = [\n     {\n       namespace: 'El Capitan',\n       name: 'Freerider',\n-      id: 'freerider'\n+      id: 'freerider',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Dawn Wall',\n-      id: 'dawn wall'\n+      id: 'dawn wall',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'Zodiac',\n-      id: 'zodiac'\n+      id: 'zodiac',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     },\n     {\n       namespace: 'El Capitan',\n       name: 'The Nose',\n-      id: 'the nose'\n+      id: 'the nose',\n+      cdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n     }\n   ];\n-  const fromWorkspaceNamespace = 'namespace';\n-  const fromWorkspaceName = 'name';\n+  const fromWorkspaceNamespace = workspaces[0].namespace;\n+  const fromWorkspaceFCName = workspaces[0].id;\n   const fromResourceName = 'notebook';\n \n   beforeEach(() => {\n     const apiStub = new WorkspacesApiStub(workspaces);\n     registerApiClient(WorkspacesApi, apiStub);\n     props = {\n+      cdrVersionListResponse: cdrVersionListResponse,\n       fromWorkspaceNamespace: fromWorkspaceNamespace,\n-      fromWorkspaceName: fromWorkspaceName,\n+      fromWorkspaceFCName: fromWorkspaceFCName,\n       fromResourceName: fromResourceName,\n+      fromCdrVersionId: CdrVersionsStubVariables.DEFAULT_WORKSPACE_CDR_VERSION_ID,\n       resourceType: ResourceType.NOTEBOOK,\n       onClose: () => {},\n       onCopy: () => {},\n       saveFunction: (copyRequest) => {\n         return workspacesApi().copyNotebook(\n           fromWorkspaceNamespace,\n-          fromWorkspaceName,\n+          fromWorkspaceFCName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a266382031988e5c4458b079ad9f67fbdbb90c22"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODYyNjI4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0MjozMFrOHYI6eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0MjozMFrOHYI6eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3MzkxNA==", "bodyText": "Please handle the case  where it's not found in some way and document that.", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495073914", "createdAt": "2020-09-25T15:42:30Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -21,54 +23,111 @@ const ResourceTypeHomeTabs = new Map()\n   .set(ResourceType.DATASET, 'data');\n \n export interface Props {\n+  cdrVersionListResponse: CdrVersionListResponse;\n   fromWorkspaceNamespace: string;\n-  fromWorkspaceName: string;\n+  fromWorkspaceFCName: string;\n   fromResourceName: string;\n+  fromCdrVersionId: string;\n   onClose: Function;\n   onCopy: Function;\n   resourceType: ResourceType;\n   saveFunction: (CopyRequest) => Promise<FileDetail | ConceptSet>;\n }\n \n+interface WorkspaceOptions {\n+  label: string;\n+  options: Array<{label: string, value: Workspace}>;\n+}\n+\n interface State {\n-  writeableWorkspaces: Array<Workspace>;\n+  workspaceOptions: Array<WorkspaceOptions>;\n   destination: Workspace;\n   newName: string;\n   requestState: RequestState;\n-  errorMsg: string;\n+  copyErrorMsg: string;\n   loading: boolean;\n }\n \n-const boldStyle = {\n-  fontWeight: 600\n-};\n+const styles = reactStyles({\n+  bold: {\n+    fontWeight: 600\n+  },\n+});\n \n-class CopyModal extends React.Component<Props, State> {\n+class CopyModalComponent extends React.Component<Props, State> {\n   constructor(props: Props) {\n     super(props);\n \n     this.state = {\n-      writeableWorkspaces: [],\n+      workspaceOptions: [],\n       newName: props.fromResourceName,\n       destination: null,\n       requestState: RequestState.UNSENT,\n-      errorMsg: '',\n-      loading: true\n+      copyErrorMsg: '',\n+      loading: true,\n     };\n   }\n \n+  cdrName(cdrVersionId: string): string {\n+    const {cdrVersionListResponse} = this.props;\n+    return cdrVersionListResponse.items.find(version => version.cdrVersionId === cdrVersionId).name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53ce56a9ae5fd5ded53879cb7556ced4e9046f7"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODYzMjE4OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/copy-modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0NDowMlrOHYI9-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNTo0NDowMlrOHYI9-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA3NDgwOQ==", "bodyText": "I'd recommend the list CDRs provide an index or date  you can use for sorting so you don't get into this lexical sorting business. We can't keep them from coming up with new version string formats, so this could get hairy fast.", "url": "https://github.com/all-of-us/workbench/pull/4065#discussion_r495074809", "createdAt": "2020-09-25T15:44:02Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/components/copy-modal.tsx", "diffHunk": "@@ -21,54 +23,111 @@ const ResourceTypeHomeTabs = new Map()\n   .set(ResourceType.DATASET, 'data');\n \n export interface Props {\n+  cdrVersionListResponse: CdrVersionListResponse;\n   fromWorkspaceNamespace: string;\n-  fromWorkspaceName: string;\n+  fromWorkspaceFCName: string;\n   fromResourceName: string;\n+  fromCdrVersionId: string;\n   onClose: Function;\n   onCopy: Function;\n   resourceType: ResourceType;\n   saveFunction: (CopyRequest) => Promise<FileDetail | ConceptSet>;\n }\n \n+interface WorkspaceOptions {\n+  label: string;\n+  options: Array<{label: string, value: Workspace}>;\n+}\n+\n interface State {\n-  writeableWorkspaces: Array<Workspace>;\n+  workspaceOptions: Array<WorkspaceOptions>;\n   destination: Workspace;\n   newName: string;\n   requestState: RequestState;\n-  errorMsg: string;\n+  copyErrorMsg: string;\n   loading: boolean;\n }\n \n-const boldStyle = {\n-  fontWeight: 600\n-};\n+const styles = reactStyles({\n+  bold: {\n+    fontWeight: 600\n+  },\n+});\n \n-class CopyModal extends React.Component<Props, State> {\n+class CopyModalComponent extends React.Component<Props, State> {\n   constructor(props: Props) {\n     super(props);\n \n     this.state = {\n-      writeableWorkspaces: [],\n+      workspaceOptions: [],\n       newName: props.fromResourceName,\n       destination: null,\n       requestState: RequestState.UNSENT,\n-      errorMsg: '',\n-      loading: true\n+      copyErrorMsg: '',\n+      loading: true,\n     };\n   }\n \n+  cdrName(cdrVersionId: string): string {\n+    const {cdrVersionListResponse} = this.props;\n+    return cdrVersionListResponse.items.find(version => version.cdrVersionId === cdrVersionId).name;\n+  }\n+\n+  groupWorkspacesByCdrVersion(workspaces: Workspace[]): Array<WorkspaceOptions> {\n+    const {fromCdrVersionId} = this.props;\n+    const workspacesByCdr = fp.groupBy(w => w.cdrVersionId, workspaces);\n+    const cdrVersions = Array.from(new Set(workspaces.map(w => w.cdrVersionId)));\n+\n+    // list the \"from\" CDR version first.\n+    const fromCdrVersionFirst = (cdrv1: string, cdrv2: string) => {\n+      if (cdrv1 === fromCdrVersionId && cdrv2 !== fromCdrVersionId) {\n+        return -1;\n+      } else if (cdrv1 !== fromCdrVersionId && cdrv2 === fromCdrVersionId) {\n+        return 1;\n+      } else {\n+        // TODO: a meaningful ordering, possibly as part of RW-5563", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53ce56a9ae5fd5ded53879cb7556ced4e9046f7"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3964, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}