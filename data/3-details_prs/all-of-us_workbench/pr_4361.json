{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMDc0MDc1", "number": 4361, "title": "[RW-6009][risk=no] batch inserts", "bodyText": "Batch my streaming inserts so I don't trip the breaker again. Currently Tests isn't reporting data because one of its tables has more than 1000 rows that I need.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-12-05T18:32:56Z", "url": "https://github.com/all-of-us/workbench/pull/4361", "merged": true, "mergeCommit": {"oid": "13b6a31e31a3898e182c9794fd4ba80371182041"}, "closed": true, "closedAt": "2020-12-08T02:27:47Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjXHZkgBqjQwNzYxOTkwNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj-nFDgFqTU0NjY0MDUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32cc9e2293370280c049c7e023dbd29475b76fe1", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/32cc9e2293370280c049c7e023dbd29475b76fe1", "committedDate": "2020-12-05T18:31:53Z", "message": "initial progress"}, "afterCommit": {"oid": "bff82fec5df03513f3088632376c9627aed1d149", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/bff82fec5df03513f3088632376c9627aed1d149", "committedDate": "2020-12-06T01:57:55Z", "message": "clean up more dead code and batch inserts to at most 1000"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c08a0135a126671864990f65139dace85e5d9f8c", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c08a0135a126671864990f65139dace85e5d9f8c", "committedDate": "2020-12-06T02:12:02Z", "message": "batch up to 1000 rows per InsertAllRequest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "606b7f9d0b245af8d1f7cf9ddb05b4a18d50bdf9", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/606b7f9d0b245af8d1f7cf9ddb05b4a18d50bdf9", "committedDate": "2020-12-07T22:10:47Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cab9c84243601b9b73d73a2af1d564f844f027f2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/cab9c84243601b9b73d73a2af1d564f844f027f2", "committedDate": "2020-12-07T22:16:02Z", "message": "restore merged-out values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8f28e657a6e06ed75916c1d39e79829aee8bc383", "committedDate": "2020-12-07T22:16:26Z", "message": "update"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bff82fec5df03513f3088632376c9627aed1d149", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/bff82fec5df03513f3088632376c9627aed1d149", "committedDate": "2020-12-06T01:57:55Z", "message": "clean up more dead code and batch inserts to at most 1000"}, "afterCommit": {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8f28e657a6e06ed75916c1d39e79829aee8bc383", "committedDate": "2020-12-07T22:16:26Z", "message": "update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NTg1NTEx", "url": "https://github.com/all-of-us/workbench/pull/4361#pullrequestreview-546585511", "createdAt": "2020-12-07T22:18:25Z", "commit": {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjoxODoyNVrOIA9Urg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMjoxODoyNVrOIA9Urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzg3NTYzMA==", "bodyText": "We can reuse this safely because the code that used it has been removed.", "url": "https://github.com/all-of-us/workbench/pull/4361#discussion_r537875630", "createdAt": "2020-12-07T22:18:25Z", "author": {"login": "jaycarlton"}, "path": "api/config/config_local.json", "diffHunk": "@@ -123,7 +123,7 @@\n   },\n   \"reporting\": {\n     \"dataset\": \"reporting_local\",\n-    \"maxRowsPerInsert\": 200,\n+    \"maxRowsPerInsert\": 800,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f28e657a6e06ed75916c1d39e79829aee8bc383"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45", "committedDate": "2020-12-07T22:19:17Z", "message": "remove unneeded files"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjQwNTA4", "url": "https://github.com/all-of-us/workbench/pull/4361#pullrequestreview-546640508", "createdAt": "2020-12-07T23:59:33Z", "commit": {"oid": "aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1OTozM1rOIBAd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1OTozM1rOIBAd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNzE1OA==", "bodyText": "nit: addAll can be chained", "url": "https://github.com/all-of-us/workbench/pull/4361#discussion_r537927158", "createdAt": "2020-12-07T23:59:33Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/reporting/ReportingUploadServiceImpl.java", "diffHunk": "@@ -123,51 +120,70 @@ private TableId getTableId(String tableName) {\n   private List<InsertAllRequest> getInsertAllRequests(ReportingSnapshot reportingSnapshot) {\n     final Map<String, Object> fixedValues =\n         ImmutableMap.of(\"snapshot_timestamp\", reportingSnapshot.getCaptureTimestamp());\n+    // The maxRowsForInsert parameter is in use by the insert query implementation, but that code is\n+    // being removed, freeing it to be used here.\n+    final int batchSize = configProvider.get().reporting.maxRowsPerInsert;\n+    final ImmutableList.Builder<InsertAllRequest> resultBuilder = ImmutableList.builder();\n \n-    return ImmutableList.of(\n-            cohortRequestBuilder.build(\n-                getTableId(CohortColumnValueExtractor.class),\n-                reportingSnapshot.getCohorts(),\n-                fixedValues),\n-            datasetRequestBuilder.build(\n-                getTableId(DatasetColumnValueExtractor.class),\n-                reportingSnapshot.getDatasets(),\n-                fixedValues),\n-            datasetCohortRequestBuilder.build(\n-                getTableId(DatasetCohortColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetCohorts(),\n-                fixedValues),\n-            datasetConceptSetRequestBuilder.build(\n-                getTableId(DatasetConceptSetColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetConceptSets(),\n-                fixedValues),\n-            datasetDomainIIdValueRequestBuilder.build(\n-                getTableId(DatasetDomainColumnValueExtractor.class),\n-                reportingSnapshot.getDatasetDomainIdValues(),\n-                fixedValues),\n-            institutionRequestBuilder.build(\n-                getTableId(InstitutionColumnValueExtractor.class),\n-                reportingSnapshot.getInstitutions(),\n-                fixedValues),\n-            userRequestBuilder.build(\n-                getTableId(UserColumnValueExtractor.class),\n-                reportingSnapshot.getUsers(),\n-                fixedValues),\n-            workspaceRequestBuilder.build(\n-                getTableId(WorkspaceColumnValueExtractor.class),\n-                reportingSnapshot.getWorkspaces(),\n-                fixedValues))\n-        .stream()\n+    resultBuilder.addAll(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa6e1cc1f2502d3bbc0d95398f731d1db73e8f45"}, "originalPosition": 124}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3716, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}