{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzAyNzk4", "number": 3361, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NzowM1rODvmeTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NzoyM1rODvme9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjQwMDE1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NzowM1rOGCHrMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTo0OToyN1rOGCKMpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjA4Mw==", "bodyText": "Can we just keep the version directly in either the config file (simplest for now)? In the short/medium term, I'd really like to see a table in the database for the different singable compliance documents and their active & retired versions that each document view can refer to and user signature record can link to?", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404876083", "createdAt": "2020-04-07T14:57:03Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -129,6 +128,10 @@ public UserServiceImpl(\n     this.institutionService = institutionService;\n   }\n \n+  private int getCurrentDuccVersion() {\n+    return configProvider.get().featureFlags.enableV3DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3OTkxMQ==", "bodyText": "We cannot, because it's feature flagged.", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404879911", "createdAt": "2020-04-07T15:01:28Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -129,6 +128,10 @@ public UserServiceImpl(\n     this.institutionService = institutionService;\n   }\n \n+  private int getCurrentDuccVersion() {\n+    return configProvider.get().featureFlags.enableV3DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjA4Mw=="}, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4NjcxMA==", "bodyText": "We can add an integer to the config file without breaking things that don't know about it, right? Or are you saying that it exists in both states at once, guarded by a feature flag? In that case, we should remove it from the flag and just have a value for the active version.\nIn other words, we really shouldn't have code like this line. It's a temporary flag pointing to two one of two hard-coded values. Plus I'm concerned we seem to have different policies for versioning documents.", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404886710", "createdAt": "2020-04-07T15:10:17Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -129,6 +128,10 @@ public UserServiceImpl(\n     this.institutionService = institutionService;\n   }\n \n+  private int getCurrentDuccVersion() {\n+    return configProvider.get().featureFlags.enableV3DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjA4Mw=="}, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg5MzMzNw==", "bodyText": "I'm saying that if I follow your suggestion, it will break the feature until the feature flag is turned on everywhere.", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404893337", "createdAt": "2020-04-07T15:18:50Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -129,6 +128,10 @@ public UserServiceImpl(\n     this.institutionService = institutionService;\n   }\n \n+  private int getCurrentDuccVersion() {\n+    return configProvider.get().featureFlags.enableV3DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjA4Mw=="}, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxNzQxNA==", "bodyText": "Oh. You could use a feature flag for enableDataUserCodeOfConductBeta, and then have two values like dataUserCodeOfConductBetaVersion and dataUserCodeOfConductCurrentVersion. Then that line of code could keep working when one or both version keys changes.", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404917414", "createdAt": "2020-04-07T15:49:27Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -129,6 +128,10 @@ public UserServiceImpl(\n     this.institutionService = institutionService;\n   }\n \n+  private int getCurrentDuccVersion() {\n+    return configProvider.get().featureFlags.enableV3DataUserCodeOfConduct ? 3 : 2;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjA4Mw=="}, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjQwMTgyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NzoyM1rOGCHsQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NzoyM1rOGCHsQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NjM1NA==", "bodyText": "Presumably this could also bite us.", "url": "https://github.com/all-of-us/workbench/pull/3361#discussion_r404876354", "createdAt": "2020-04-07T14:57:23Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -75,7 +75,6 @@\n public class UserServiceImpl implements UserService, GaugeDataCollector {\n \n   private final int MAX_RETRIES = 3;\n-  private static final int CURRENT_DATA_USE_AGREEMENT_VERSION = 2;\n   private static final int CURRENT_TERMS_OF_SERVICE_VERSION = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68445c2db308310f47bd5939d28b50e589ac9870"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3127, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}