{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjExMjYx", "number": 3819, "title": "[RW-5305][risk=no] links for audit", "bodyText": "I added links to and from the audit and admin pages for users and workspaces. For users, we just have the main table, but there's a table entry now to link to that user's audit.\nAlso added two contextual links on the audit cards themselves. For user agents, there's a link from the username to the user's audit page, and for workspaces, the namespace property links to that workspace. There are several more places this trick can be done. I'm looking for a more generic way to do what I want though, as I wound up duplicating the HideableCell ll code largely.\nThe user admin page doesn't load on test, so I was only able to see it locally.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test:local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-07-22T16:01:25Z", "url": "https://github.com/all-of-us/workbench/pull/3819", "merged": true, "mergeCommit": {"oid": "9ac968c78efd5e1d39278df860ead3561288f3ac"}, "closed": true, "closedAt": "2020-08-04T19:53:56Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3MUrlAH2gAyNDU1MjExMjYxOjlhNDcyMTIxODE0NTdjODZmYTJlOGY1YmFlOGJjYWI2ZTM0YmYzNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7sIfvgFqTQ2MTEyNTg2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9a47212181457c86fa2e8f5bae8bcab6e34bf367", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9a47212181457c86fa2e8f5bae8bcab6e34bf367", "committedDate": "2020-07-21T20:33:22Z", "message": "add links to & from admin pages (except user admin, which isn't loading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f879a0a4d916a46029c69fe89cbdb892a4455d1", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/2f879a0a4d916a46029c69fe89cbdb892a4455d1", "committedDate": "2020-07-22T14:29:32Z", "message": "Merge branch 'master' into jaycarlton/linksForAudit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91c658d4bce496a4314a3f8569b8d1aa1e1cf4f2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/91c658d4bce496a4314a3f8569b8d1aa1e1cf4f2", "committedDate": "2020-07-22T15:55:25Z", "message": "more links"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62a843f1b74355eaa1003974efc236f43446ef6d", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/62a843f1b74355eaa1003974efc236f43446ef6d", "committedDate": "2020-07-22T16:09:00Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/2039743f8c31dcab6d7796c8276af081ee83bf2b", "committedDate": "2020-07-30T21:25:01Z", "message": "rename"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5Mjk1Nzcw", "url": "https://github.com/all-of-us/workbench/pull/3819#pullrequestreview-459295770", "createdAt": "2020-07-31T16:14:28Z", "commit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNjoxNDoyOFrOG6OLRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyODo1N1rOG6TpEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwMjg1Mg==", "bodyText": "nit: Thoughts on using a ternary?\nThis would also eliminate the need for the named function - it may be a bit clearer to inline the check here\n  return fp.isEqual({targetType: 'WORKSPACE', targetProperty: 'namespace'}, {targetType, targetProperty})\n      ? <HideableLinkCell url={ `/admin/workspace-audit/${value}`} content={value}/>\n      : <HideableCell content={value}/>;", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463702852", "createdAt": "2020-07-31T16:14:28Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-card-list-view.tsx", "diffHunk": "@@ -21,26 +22,61 @@ const HideableCell = (props: {content: string}) => {\n       }}>{content}</div>;\n };\n \n+const HideableLinkCell = (props: {url: string, content: string}) => {\n+  const {content, url} = props;\n+  return <a\n+      style={{backgroundColor: content ? 'white' : '#f0f3f5',\n+        border: '1px solid',\n+        boxSizing: 'border-box'}}\n+        href={url}>{content}</a>;\n+};\n+\n const styles = reactStyles({\n   propertyCell: {\n     fontWeight: 600,\n     border: '1px solid'\n   }\n });\n \n-const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string, newValue?: string}) => {\n-  const {targetProperty, previousValue, newValue} = props;\n-  return <React.Fragment>\n+const isWorkspaceNamespace = (targetType?: string, targetProperty?: string) => {\n+  return targetType === 'WORKSPACE' && targetProperty === 'namespace';\n+};\n+\n+const PossibleLinkCell = (props: {targetType?: string, targetProperty?: string, value?: string}) => {\n+  const {targetType, targetProperty, value} = props;\n+  if (isWorkspaceNamespace(targetType, targetProperty)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcwOTE4OQ==", "bodyText": "Should there be a ticket on the back end to address this issue?", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463709189", "createdAt": "2020-07-31T16:27:11Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-card-list-view.tsx", "diffHunk": "@@ -21,26 +22,61 @@ const HideableCell = (props: {content: string}) => {\n       }}>{content}</div>;\n };\n \n+const HideableLinkCell = (props: {url: string, content: string}) => {\n+  const {content, url} = props;\n+  return <a\n+      style={{backgroundColor: content ? 'white' : '#f0f3f5',\n+        border: '1px solid',\n+        boxSizing: 'border-box'}}\n+        href={url}>{content}</a>;\n+};\n+\n const styles = reactStyles({\n   propertyCell: {\n     fontWeight: 600,\n     border: '1px solid'\n   }\n });\n \n-const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string, newValue?: string}) => {\n-  const {targetProperty, previousValue, newValue} = props;\n-  return <React.Fragment>\n+const isWorkspaceNamespace = (targetType?: string, targetProperty?: string) => {\n+  return targetType === 'WORKSPACE' && targetProperty === 'namespace';\n+};\n+\n+const PossibleLinkCell = (props: {targetType?: string, targetProperty?: string, value?: string}) => {\n+  const {targetType, targetProperty, value} = props;\n+  if (isWorkspaceNamespace(targetType, targetProperty)) {\n+    return <HideableLinkCell url={`/admin/workspace-audit/${value}`} content={value}/>;\n+  } else {\n+    return <HideableCell content={value}/>;\n+  }\n+};\n+\n+function isRealPropertyChange(newValue: string, previousValue: string) {\n+  return fp.isEmpty(newValue) && fp.isEmpty(previousValue);\n+}\n+\n+const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string,\n+  newValue?: string, targetType?: string}) => {\n+  const {targetProperty, previousValue, newValue, targetType} = props;\n+  // On the backend, fields are initialized to null but sometimes re-initialized to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcxMzc3MA==", "bodyText": "The name doesn't seem to match up well with the result.\nConsider renaming to something like isUserDrivenChange\nand negating the return value:\n  return !(fp.isEmpty(newValue) && fp.isEmpty(previousValue));", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463713770", "createdAt": "2020-07-31T16:36:52Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-card-list-view.tsx", "diffHunk": "@@ -21,26 +22,61 @@ const HideableCell = (props: {content: string}) => {\n       }}>{content}</div>;\n };\n \n+const HideableLinkCell = (props: {url: string, content: string}) => {\n+  const {content, url} = props;\n+  return <a\n+      style={{backgroundColor: content ? 'white' : '#f0f3f5',\n+        border: '1px solid',\n+        boxSizing: 'border-box'}}\n+        href={url}>{content}</a>;\n+};\n+\n const styles = reactStyles({\n   propertyCell: {\n     fontWeight: 600,\n     border: '1px solid'\n   }\n });\n \n-const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string, newValue?: string}) => {\n-  const {targetProperty, previousValue, newValue} = props;\n-  return <React.Fragment>\n+const isWorkspaceNamespace = (targetType?: string, targetProperty?: string) => {\n+  return targetType === 'WORKSPACE' && targetProperty === 'namespace';\n+};\n+\n+const PossibleLinkCell = (props: {targetType?: string, targetProperty?: string, value?: string}) => {\n+  const {targetType, targetProperty, value} = props;\n+  if (isWorkspaceNamespace(targetType, targetProperty)) {\n+    return <HideableLinkCell url={`/admin/workspace-audit/${value}`} content={value}/>;\n+  } else {\n+    return <HideableCell content={value}/>;\n+  }\n+};\n+\n+function isRealPropertyChange(newValue: string, previousValue: string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzcxNDUwMg==", "bodyText": "nit: remove the assignment - based on renaming the function:\nisUserDrivenChange(newValue, previousValue) ? ... : null\nThis may be a bit easier to read", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463714502", "createdAt": "2020-07-31T16:38:28Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-card-list-view.tsx", "diffHunk": "@@ -21,26 +22,61 @@ const HideableCell = (props: {content: string}) => {\n       }}>{content}</div>;\n };\n \n+const HideableLinkCell = (props: {url: string, content: string}) => {\n+  const {content, url} = props;\n+  return <a\n+      style={{backgroundColor: content ? 'white' : '#f0f3f5',\n+        border: '1px solid',\n+        boxSizing: 'border-box'}}\n+        href={url}>{content}</a>;\n+};\n+\n const styles = reactStyles({\n   propertyCell: {\n     fontWeight: 600,\n     border: '1px solid'\n   }\n });\n \n-const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string, newValue?: string}) => {\n-  const {targetProperty, previousValue, newValue} = props;\n-  return <React.Fragment>\n+const isWorkspaceNamespace = (targetType?: string, targetProperty?: string) => {\n+  return targetType === 'WORKSPACE' && targetProperty === 'namespace';\n+};\n+\n+const PossibleLinkCell = (props: {targetType?: string, targetProperty?: string, value?: string}) => {\n+  const {targetType, targetProperty, value} = props;\n+  if (isWorkspaceNamespace(targetType, targetProperty)) {\n+    return <HideableLinkCell url={`/admin/workspace-audit/${value}`} content={value}/>;\n+  } else {\n+    return <HideableCell content={value}/>;\n+  }\n+};\n+\n+function isRealPropertyChange(newValue: string, previousValue: string) {\n+  return fp.isEmpty(newValue) && fp.isEmpty(previousValue);\n+}\n+\n+const PropertyChangeListEntry = (props: {targetProperty?: string, previousValue?: string,\n+  newValue?: string, targetType?: string}) => {\n+  const {targetProperty, previousValue, newValue, targetType} = props;\n+  // On the backend, fields are initialized to null but sometimes re-initialized to\n+  // empty strings. Since it's not a user-driven change, I'm dropping those rows from the output.\n+  const isFalseChange = isRealPropertyChange(newValue, previousValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2ODE4NA==", "bodyText": "To keep things consistently in fp-land you could do something like:\n    {fp.flow(\n      fp.toPairs,\n      fp.map(([index, {targetProperty, newValue, previousValue}]) => <PropertyChangeListEntry targetProperty={targetProperty}\n        previousValue={previousValue}\n        newValue={newValue}\n        targetType={header.target.targetType}\n        key={index}/>\n      ))(propertyChanges)\n    }", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463768184", "createdAt": "2020-07-31T18:33:49Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-card-list-view.tsx", "diffHunk": "@@ -51,17 +87,28 @@ const PropertyChangeListView = (props: { propertyChanges: AuditTargetPropertyCha\n     <div style={styles.propertyCell}>Previous Value</div>\n     <div style={styles.propertyCell}>New Value</div>\n     {propertyChanges.map((propertyChange, index) =>\n-        <PropertyChangeListEntry {...propertyChange} key={index}/>)}\n+        <PropertyChangeListEntry targetProperty={propertyChange.targetProperty}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc3MzYzNg==", "bodyText": "The navigateByUrl won't work with the new style routing. The router handles navigation like any other react component - you must mount the component <Navigate>.\nLook at lines 58, 73 and 96 for the pattern.\nThis should be cleaned up on the router side, as it is not ideal at the moment. I can write a hook around that that will make adding navigation easier in function components.", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463773636", "createdAt": "2020-07-31T18:46:29Z", "author": {"login": "petesantos"}, "path": "ui/src/app/components/admin/audit-page-component.tsx", "diffHunk": "@@ -106,18 +108,36 @@ const UserInput = ({initialAuditSubject, auditSubjectType, getNextAuditPath, but\n       Audit\n       </Button>\n     </TooltipTrigger>\n+    <div style={{\n+      margin: '0',\n+      display: 'flex',\n+      flexDirection: 'row',\n+      textAlign: 'center',\n+      fontWeight: 600\n+    }}>\n     <TooltipTrigger content={'Download actual SQL query for BigQuery Action Audit table. Useful' +\n-    ' for developers or analysts interested in basing other ad hoc queries off' +\n-    ' this audit query in the BigQuery console or bq tool.'}>\n-    <Button style={buttonStyle}\n-            disabled={fp.isEmpty(queryText)}\n-            onClick={() => setDownloadSqlFile(true)}>\n-      Download SQL\n-    </Button>\n-  </TooltipTrigger>\n+      ' for developers or analysts interested in basing other ad hoc queries off' +\n+      ' this audit query in the BigQuery console or bq tool.'}>\n+      <Button style={buttonStyle}\n+              disabled={fp.isEmpty(queryText)}\n+              onClick={() => setDownloadSqlFile(true)}>\n+        Download SQL\n+      </Button>\n+    </TooltipTrigger>\n     <TooltipTrigger content={'BigQuery Console page (use pmi-ops.org account)'}>\n-      <a href={getBigQueryConsoleUrl()}>BigQuery Console</a>\n+      <Button style={buttonStyle}\n+              onClick={() => navigateByUrl(getBigQueryConsoleUrl())}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MTIxMA==", "bodyText": "TOL: These \"feel\" far away from where they are getting used. What are your thoughts on\n\nSince we have the initialSubject and know the query at this time, running the initial queries in these components and passing the data into the AuditPageComponent\nChanging getAdminPageURL to something like onAdminClick or similar - this may be a bit clearer on where and how this property/function is being used", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463791210", "createdAt": "2020-07-31T19:27:30Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/user-audit.tsx", "diffHunk": "@@ -38,11 +38,17 @@ const getNextAuditPath = (subject: string) => {\n   return `/admin/user-audit/${subject}`;\n };\n \n+// Single-user admin page isn't available yet, so go to the main users list page.\n+const getAdminPageUrl = (subject: string) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MjQwMA==", "bodyText": "Could the usernameWithoutDomain utility function be used here?", "url": "https://github.com/all-of-us/workbench/pull/3819#discussion_r463792400", "createdAt": "2020-07-31T19:28:57Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-users.tsx", "diffHunk": "@@ -133,17 +133,18 @@ export const AdminUsers = withUserProfile()(class extends React.Component<\n   }\n \n   convertProfilesToFields(profiles: Profile[]) {\n-\n+    const usernameWithoutDomain = p => p.username.substring(0, p.username.indexOf('@'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2039743f8c31dcab6d7796c8276af081ee83bf2b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa218b424824c74079472f7e031ea9bdad9db6b6", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/aa218b424824c74079472f7e031ea9bdad9db6b6", "committedDate": "2020-08-03T13:55:03Z", "message": "fix links to use navigate(). re move workarounds"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62bfb81f0ab6a380d5865e915c6863b02be88049", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/62bfb81f0ab6a380d5865e915c6863b02be88049", "committedDate": "2020-08-03T14:51:17Z", "message": "yarn & fix nav"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTI1ODY1", "url": "https://github.com/all-of-us/workbench/pull/3819#pullrequestreview-461125865", "createdAt": "2020-08-04T19:52:43Z", "commit": {"oid": "62bfb81f0ab6a380d5865e915c6863b02be88049"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4489, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}