{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNDIzNTk3", "number": 3199, "title": "[RW-4446][risk=no] Clean up the enableNewAccountCreation flag", "bodyText": "This flag was pushed to prod with last week's release (see #3130). We should clean this up sooner than later, since the verified institutional affiliation stuff will soon add some extra config-driven complexity to the account creation page.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n I have run and tested this change locally", "createdAt": "2020-02-28T14:37:34Z", "url": "https://github.com/all-of-us/workbench/pull/3199", "merged": true, "mergeCommit": {"oid": "de394565d5b6ada942ded617fa28675c4109c0b3"}, "closed": true, "closedAt": "2020-02-28T21:32:51Z", "author": {"login": "gjuggler"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIxrllAFqTM2NjQ4MTY3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcI2jffgH2gAyMzgxNDIzNTk3Ojc1MTVlOTRhNjQxNWNhOWQ4MzdjODQwYjRmNzk1ZThiNjVkYTE5Zjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDgxNjc5", "url": "https://github.com/all-of-us/workbench/pull/3199#pullrequestreview-366481679", "createdAt": "2020-02-28T15:30:25Z", "commit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTozMDoyNVrOFv46ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTozMDoyNVrOFv46ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1OTg4Mg==", "bodyText": "This is one minor functional change I made along the way... I felt we should probably have more of the profile object validation centralized in this method, which is called during both the createProfile and updateProfile flows.", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385759882", "createdAt": "2020-02-28T15:30:25Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTUyNDE5", "url": "https://github.com/all-of-us/workbench/pull/3199#pullrequestreview-366552419", "createdAt": "2020-02-28T17:08:59Z", "commit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzowOTowMFrOFv8Rbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzoyMDo1M1rOFv8wGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxNDg5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getDemographicSurvey() == null) {\n          \n          \n            \n                  profile.setDemographicSurvey(new DemographicSurvey());\n          \n          \n            \n                }\n          \n          \n            \n                profile.setDemographicSurvey(Optional.ofNullable(profile.getDemographicSurvey()).orElse(new DemographicSurvey()));", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385814895", "createdAt": "2020-02-28T17:09:00Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    if (profile.getDemographicSurvey() == null) {\n+      profile.setDemographicSurvey(new DemographicSurvey());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxNTI3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getInstitutionalAffiliations() == null) {\n          \n          \n            \n                  profile.setInstitutionalAffiliations(new ArrayList<>());\n          \n          \n            \n                }\n          \n          \n            \n                profile.setInstitutionalAffiliations(Optional.ofNullable(profile.getInstitutionalAffiliations()).orElse(new ArrayList()));", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385815274", "createdAt": "2020-02-28T17:09:53Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +247,25 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    if (profile.getDemographicSurvey() == null) {\n+      profile.setDemographicSurvey(new DemographicSurvey());\n+    }\n+    if (profile.getInstitutionalAffiliations() == null) {\n+      profile.setInstitutionalAffiliations(new ArrayList<>());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyMjc0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (profile.getAddress() == null) {\n          \n          \n            \n                  throw new BadRequestException(\"Address must not be empty\");\n          \n          \n            \n                }\n          \n          \n            \n                Optional.ofNullable(profile.getAddress()).orElseThrow(() -> new BadRequestException(\"Address must not be empty\"));", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385822746", "createdAt": "2020-02-28T17:20:53Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -323,28 +333,22 @@ private DbUser initializeUserIfNeeded() {\n       verifyInvitationKey(request.getInvitationKey());\n     }\n \n-    String userName = request.getProfile().getUsername();\n-    if (userName == null || userName.length() < 3 || userName.length() > 64)\n-      throw new BadRequestException(\n-          \"Username should be at least 3 characters and not more than 64 characters\");\n-    request.getProfile().setUsername(request.getProfile().getUsername().toLowerCase());\n-    validateProfileFields(request.getProfile());\n-    // This check will be removed once enableNewAccountCreation flag is turned on.\n-    if (request.getProfile().getAddress() == null) {\n-      request.getProfile().setAddress(new Address());\n-    }\n-    if (request.getProfile().getDemographicSurvey() == null) {\n-      request.getProfile().setDemographicSurvey(new DemographicSurvey());\n-    }\n-    if (request.getProfile().getInstitutionalAffiliations() == null) {\n-      request.getProfile().setInstitutionalAffiliations(new ArrayList<>());\n+    final Profile profile = request.getProfile();\n+\n+    // We don't include this check in validateAndCleanProfile since some existing user profiles\n+    // may have empty addresses. So we only check this on user creation, not update.\n+    if (profile.getAddress() == null) {\n+      throw new BadRequestException(\"Address must not be empty\");\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd50ebebc59b5bcc9f5bd78a56fae6d4cda9da05"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjA5MTQ0", "url": "https://github.com/all-of-us/workbench/pull/3199#pullrequestreview-366609144", "createdAt": "2020-02-28T18:47:47Z", "commit": {"oid": "df786872dbd172e9f1d7558bfd31e3d719103ecb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0Nzo0OFrOFv_ImA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxODo0Nzo0OFrOFv_ImA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg2MTc4NA==", "bodyText": "Let's make this check first.", "url": "https://github.com/all-of-us/workbench/pull/3199#discussion_r385861784", "createdAt": "2020-02-28T18:47:48Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/ProfileController.java", "diffHunk": "@@ -247,15 +248,23 @@ private void validateStringLength(String field, String fieldName, int max, int m\n     }\n   }\n \n-  private void validateProfileFields(Profile profile) {\n+  private void validateAndCleanProfile(Profile profile) throws BadRequestException {\n+    profile.setDemographicSurvey(\n+        Optional.ofNullable(profile.getDemographicSurvey()).orElse(new DemographicSurvey()));\n+    profile.setInstitutionalAffiliations(\n+        Optional.ofNullable(profile.getInstitutionalAffiliations()).orElse(new ArrayList()));\n+\n+    String userName = profile.getUsername();\n+    if (userName == null || userName.length() < 3 || userName.length() > 64) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df786872dbd172e9f1d7558bfd31e3d719103ecb"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e2802739a92735d4ab0736201373be804923db6", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/3e2802739a92735d4ab0736201373be804923db6", "committedDate": "2020-02-28T20:52:28Z", "message": "Clean up the enableNewAccountCreation flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfd7b8a457ce3273c2098d224a9ef1a2479e606", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/1cfd7b8a457ce3273c2098d224a9ef1a2479e606", "committedDate": "2020-02-28T20:52:28Z", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd8c43393cc0ba1b584255c20fd662c22e7b394d", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/cd8c43393cc0ba1b584255c20fd662c22e7b394d", "committedDate": "2020-02-28T20:52:28Z", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bca36e018111136a01711de31285b7996f3538f6", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/bca36e018111136a01711de31285b7996f3538f6", "committedDate": "2020-02-28T20:52:28Z", "message": "Update api/src/main/java/org/pmiops/workbench/api/ProfileController.java\n\nCo-Authored-By: Brian Freeman <brian.d.freeman@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca37eda4e141abde65b2b338ab6a58c03b5d31a9", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/ca37eda4e141abde65b2b338ab6a58c03b5d31a9", "committedDate": "2020-02-28T20:52:28Z", "message": "Spotless formatting."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34c9d13dbb226c7fdeb08dcd51d632be918fd615", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/34c9d13dbb226c7fdeb08dcd51d632be918fd615", "committedDate": "2020-02-28T20:53:09Z", "message": "PR feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f30aebb8cb496d91ecb447cffa4d9f035d62f715", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/f30aebb8cb496d91ecb447cffa4d9f035d62f715", "committedDate": "2020-02-28T20:29:45Z", "message": "PR feedback"}, "afterCommit": {"oid": "34c9d13dbb226c7fdeb08dcd51d632be918fd615", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/34c9d13dbb226c7fdeb08dcd51d632be918fd615", "committedDate": "2020-02-28T20:53:09Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7515e94a6415ca9d837c840b4f795e8b65da19f7", "author": {"user": {"login": "gjuggler", "name": "Greg Jordan"}}, "url": "https://github.com/all-of-us/workbench/commit/7515e94a6415ca9d837c840b4f795e8b65da19f7", "committedDate": "2020-02-28T21:11:07Z", "message": "Sign-in test fixes."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3404, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}