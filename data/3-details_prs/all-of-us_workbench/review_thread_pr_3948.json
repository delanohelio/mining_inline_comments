{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MTc4NjE3", "number": 3948, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyOTozOFrOEfAk5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo0MDozM1rOEfAzRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUwNzU5OnYy", "diffSide": "RIGHT", "path": "e2e/tests/profile/profile-page.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyOTozOFrOHLBDpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyOTozOFrOHLBDpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMzcwMA==", "bodyText": "refinding all elements are not necessary.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481313700", "createdAt": "2020-09-01T17:29:38Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';\n \n describe('Profile', () => {\n+  // initialized in beforeEach()\n+  let profilePage: ProfilePage;\n+\n+  async function waitForSaveButton(isActive: boolean): Promise<Button> {\n+    const button = await profilePage.getSaveProfileButton();\n+    const isCursorEnabled = ! (await button.isCursorNotAllowed());\n+    expect(isCursorEnabled).toBe(isActive);\n+    return button;\n+  }\n \n   beforeEach(async () => {\n     await signIn(page);\n+    await navigation.navMenu(page, NavLink.PROFILE);\n+    profilePage = new ProfilePage(page);\n+    await profilePage.waitForLoad();\n+\n+    // Verify \"Save Profile\" button is disabled first time page is opened.\n+    await waitForSaveButton(false);\n   });\n \n+  test('Edit single field of existing user profile', async () => {\n+    const testText = makeString(50);\n \n-  test('Check First and Last name fields on Profile page', async () => {\n-    const homePage = new HomePage(page);\n-    await homePage.waitForLoad();\n-    await navigation.navMenu(page, NavLink.PROFILE);\n-    const profilePage = new ProfilePage(page);\n-    const fname = await (await profilePage.getFirstName()).getValue();\n-    const lname = await (await profilePage.getLastName()).getValue();\n-    // check last and first name textbox is not empty\n-    expect(fname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).not.toEqual(fname);\n+    // Type in Research Background textarea\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    await researchBackground.paste(testText);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    expect(await researchBackground.getValue()).toBe(testText);\n   });\n \n+  test('Edit all fields of existing user profile', async () => {\n+    const testTextFirstName = makeString(10);\n+    const testTextLastName = makeString(10);\n+    const testTextURL = makeUrl(10);\n+    const testTextResearchBackground = makeString(10);\n+    const testTextAddress1 = makeString(10);\n+    const testTextAddress2 = makeString(10);\n+    const testTextCity = makeString(10);\n+    const testTextState = makeString(10);\n+    const testTextZip = makeString(10);\n+    const testTextCountry = makeString(10);\n+\n+    let firstName = await profilePage.getFirstNameInput();\n+    let lastName = await profilePage.getLastNameInput();\n+    let url = await profilePage.getProfessionalUrlInput();\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    let address1 = await profilePage.getAddress1Input();\n+    let address2 = await profilePage.getAddress2Input();\n+    let city = await profilePage.getCityInput();\n+    let state = await profilePage.getStateInput();\n+    let zip = await profilePage.getZipCodeInput();\n+    let country = await profilePage.getCountryInput();\n+\n+    await firstName.type(testTextFirstName);\n+    await lastName.type(testTextLastName);\n+    await url.type(testTextURL);\n+    await researchBackground.type(testTextResearchBackground);\n+    await address1.type(testTextAddress1);\n+    await address2.type(testTextAddress2);\n+    await city.type(testTextCity);\n+    await state.type(testTextState);\n+    await zip.type(testTextZip);\n+    await country.type(testTextCountry);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    firstName = await profilePage.getFirstNameInput();\n+    lastName = await profilePage.getLastNameInput();\n+    url = await profilePage.getProfessionalUrlInput();\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    address1 = await profilePage.getAddress1Input();\n+    address2 = await profilePage.getAddress2Input();\n+    city = await profilePage.getCityInput();\n+    state = await profilePage.getStateInput();\n+    zip = await profilePage.getZipCodeInput();\n+    country = await profilePage.getCountryInput();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUwOTQ5OnYy", "diffSide": "RIGHT", "path": "e2e/tests/profile/profile-page.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMDowOVrOHLBE3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMDowOVrOHLBE3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNDAxMg==", "bodyText": "no relative path in import. ../../ can be removed.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481314012", "createdAt": "2020-09-01T17:30:09Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUxMzY0OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/profile-page.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMToxOVrOHLBHag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMToxOVrOHLBHag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNDY2Ng==", "bodyText": "type app instead .. in import statements. do not use relative path.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481314666", "createdAt": "2020-09-01T17:31:19Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUxODE2OnYy", "diffSide": "LEFT", "path": "e2e/app/page/profile-page.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMjo0NlrOHLBKbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOToxNDozMFrOHLEuaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTQzNw==", "bodyText": "One disadvantage of not using text labels to find elements is no checking of text labels.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481315437", "createdAt": "2020-09-01T17:32:46Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';\n \n export const PageTitle = 'Profile';\n \n export const LabelAlias = {\n-  FirstName: 'First Name',\n-  LastName: 'Last Name',\n-  ContactEmail: 'Contact Email',\n-  CurrentPosition: 'Your Current Position',\n-  Organization: 'Your Organization',\n-  CurrentResearchWork: 'Current Research Work',\n-  AboutYou: 'About You',\n-  Institution: 'Institution',\n-  Role: 'Role',\n-  DiscardChanges: 'Discard Changes',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM3MzgwMA==", "bodyText": "Which is preferred / best practices?\nThe advantage of the testDataId is that we can change labels without changing tests ... but the disadvantage is that we may accidentally change labels and not catch it.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481373800", "createdAt": "2020-09-01T19:14:30Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';\n \n export const PageTitle = 'Profile';\n \n export const LabelAlias = {\n-  FirstName: 'First Name',\n-  LastName: 'Last Name',\n-  ContactEmail: 'Contact Email',\n-  CurrentPosition: 'Your Current Position',\n-  Organization: 'Your Organization',\n-  CurrentResearchWork: 'Current Research Work',\n-  AboutYou: 'About You',\n-  Institution: 'Institution',\n-  Role: 'Role',\n-  DiscardChanges: 'Discard Changes',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTQzNw=="}, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUyMDQzOnYy", "diffSide": "RIGHT", "path": "e2e/app/page/profile-page.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMzoyNlrOHLBL4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozMzoyNlrOHLBL4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNTgwOA==", "bodyText": "export is not needed if DataTestIdAlias isn't going to be imported by any outside file.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481315808", "createdAt": "2020-09-01T17:33:26Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -1,25 +1,32 @@\n-import {Page} from 'puppeteer';\n+import {Page, WaitForSelectorOptions} from 'puppeteer';\n import Textbox from 'app/element/textbox';\n import AuthenticatedPage from 'app/page/authenticated-page';\n import {waitWhileLoading} from 'utils/test-utils';\n import {waitForDocumentTitle, waitForUrl} from 'utils/waits-utils';\n+import Button from '../element/button';\n+import Textarea from '../element/textarea';\n+import BaseElement from '../element/base-element';\n \n export const PageTitle = 'Profile';\n \n export const LabelAlias = {\n-  FirstName: 'First Name',\n-  LastName: 'Last Name',\n-  ContactEmail: 'Contact Email',\n-  CurrentPosition: 'Your Current Position',\n-  Organization: 'Your Organization',\n-  CurrentResearchWork: 'Current Research Work',\n-  AboutYou: 'About You',\n-  Institution: 'Institution',\n-  Role: 'Role',\n-  DiscardChanges: 'Discard Changes',\n+  ResearchBackground: 'Your research background, experience and research interests',\n   SaveProfile: 'Save Profile',\n };\n \n+\n+export const DataTestIdAlias = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTUzMjU0OnYy", "diffSide": "RIGHT", "path": "e2e/app/page/profile-page.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzozNzowN1rOHLBTsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxOTozOToxN1rOHLFgAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzgwOA==", "bodyText": "await waitForText(this.page, text) can be used to find texts on page.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481317808", "createdAt": "2020-09-01T17:37:07Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -40,12 +47,64 @@ export default class ProfilePage extends AuthenticatedPage {\n     }\n   }\n \n-  async getFirstName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.FirstName});\n+  async getFirstNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.FirstName});\n+  }\n+\n+  async getLastNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.LastName});\n+  }\n+\n+  async getProfessionalUrlInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.ProfessionalUrl});\n+  }\n+\n+  async getResearchBackgroundTextarea(): Promise<Textarea> {\n+    return Textarea.findByName(this.page, {normalizeSpace: LabelAlias.ResearchBackground});\n+  }\n+\n+  async getAddress1Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address1});\n+  }\n+\n+  async getAddress2Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address2});\n   }\n \n-  async getLastName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.LastName});\n+  async getCityInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.City});\n   }\n \n+  async getStateInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.State});\n+  }\n+\n+  async getZipCodeInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Zip});\n+  }\n+\n+  async getCountryInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Country});\n+  }\n+\n+  async getSaveProfileButton(): Promise<Button> {\n+    return Button.findByName(this.page, {name: LabelAlias.SaveProfile});\n+  }\n+\n+  // TODO generalize - promote to a Div Element?\n+  async getDivWithText(text: string, options?: WaitForSelectorOptions): Promise<BaseElement> {\n+    const selector = `//div[normalize-space(text())=\"${text}\"]`;\n+    const handle = await this.page.waitForXPath(selector, options);\n+    return BaseElement.asBaseElement(this.page, handle);\n+  }\n+\n+  async expectResearchPurposeErrorMissing(): Promise<void> {\n+    const text = 'Current Research can\\'t be blank';\n+    await this.getDivWithText(text, {hidden: true});\n+  }\n+\n+  async expectResearchPurposeErrorPresent(): Promise<void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTM4NjQ5OQ==", "bodyText": "I want to have a generic check that works whether or not something is present - so I have changed this to something different", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481386499", "createdAt": "2020-09-01T19:39:17Z", "author": {"login": "jmthibault79"}, "path": "e2e/app/page/profile-page.ts", "diffHunk": "@@ -40,12 +47,64 @@ export default class ProfilePage extends AuthenticatedPage {\n     }\n   }\n \n-  async getFirstName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.FirstName});\n+  async getFirstNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.FirstName});\n+  }\n+\n+  async getLastNameInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.LastName});\n+  }\n+\n+  async getProfessionalUrlInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.ProfessionalUrl});\n+  }\n+\n+  async getResearchBackgroundTextarea(): Promise<Textarea> {\n+    return Textarea.findByName(this.page, {normalizeSpace: LabelAlias.ResearchBackground});\n+  }\n+\n+  async getAddress1Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address1});\n+  }\n+\n+  async getAddress2Input(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Address2});\n   }\n \n-  async getLastName(): Promise<Textbox> {\n-    return await Textbox.findByName(this.page, {name: LabelAlias.LastName});\n+  async getCityInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.City});\n   }\n \n+  async getStateInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.State});\n+  }\n+\n+  async getZipCodeInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Zip});\n+  }\n+\n+  async getCountryInput(): Promise<Textbox> {\n+    return Textbox.findByName(this.page, {dataTestId: DataTestIdAlias.Country});\n+  }\n+\n+  async getSaveProfileButton(): Promise<Button> {\n+    return Button.findByName(this.page, {name: LabelAlias.SaveProfile});\n+  }\n+\n+  // TODO generalize - promote to a Div Element?\n+  async getDivWithText(text: string, options?: WaitForSelectorOptions): Promise<BaseElement> {\n+    const selector = `//div[normalize-space(text())=\"${text}\"]`;\n+    const handle = await this.page.waitForXPath(selector, options);\n+    return BaseElement.asBaseElement(this.page, handle);\n+  }\n+\n+  async expectResearchPurposeErrorMissing(): Promise<void> {\n+    const text = 'Current Research can\\'t be blank';\n+    await this.getDivWithText(text, {hidden: true});\n+  }\n+\n+  async expectResearchPurposeErrorPresent(): Promise<void> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxNzgwOA=="}, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTU0NDM5OnYy", "diffSide": "RIGHT", "path": "e2e/tests/profile/profile-page.spec.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo0MDozM1rOHLBbYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzo0MDozM1rOHLBbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxOTc3Nw==", "bodyText": "I believe refinding is not necessary.", "url": "https://github.com/all-of-us/workbench/pull/3948#discussion_r481319777", "createdAt": "2020-09-01T17:40:33Z", "author": {"login": "aweng98"}, "path": "e2e/tests/profile/profile-page.spec.ts", "diffHunk": "@@ -1,26 +1,123 @@\n-import HomePage from 'app/page/home-page';\n import ProfilePage from 'app/page/profile-page';\n import {signIn} from 'utils/test-utils';\n import navigation, {NavLink} from 'app/component/navigation';\n+import {makeString, makeUrl} from 'utils/str-utils';\n+import Button from '../../app/element/button';\n \n describe('Profile', () => {\n+  // initialized in beforeEach()\n+  let profilePage: ProfilePage;\n+\n+  async function waitForSaveButton(isActive: boolean): Promise<Button> {\n+    const button = await profilePage.getSaveProfileButton();\n+    const isCursorEnabled = ! (await button.isCursorNotAllowed());\n+    expect(isCursorEnabled).toBe(isActive);\n+    return button;\n+  }\n \n   beforeEach(async () => {\n     await signIn(page);\n+    await navigation.navMenu(page, NavLink.PROFILE);\n+    profilePage = new ProfilePage(page);\n+    await profilePage.waitForLoad();\n+\n+    // Verify \"Save Profile\" button is disabled first time page is opened.\n+    await waitForSaveButton(false);\n   });\n \n+  test('Edit single field of existing user profile', async () => {\n+    const testText = makeString(50);\n \n-  test('Check First and Last name fields on Profile page', async () => {\n-    const homePage = new HomePage(page);\n-    await homePage.waitForLoad();\n-    await navigation.navMenu(page, NavLink.PROFILE);\n-    const profilePage = new ProfilePage(page);\n-    const fname = await (await profilePage.getFirstName()).getValue();\n-    const lname = await (await profilePage.getLastName()).getValue();\n-    // check last and first name textbox is not empty\n-    expect(fname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).toMatch(new RegExp(/^[a-zA-Z]+/));\n-    expect(lname).not.toEqual(fname);\n+    // Type in Research Background textarea\n+    let researchBackground = await profilePage.getResearchBackgroundTextarea();\n+    await researchBackground.paste(testText);\n+\n+    // profile update should enable Save button\n+    const saveButton = await waitForSaveButton(true);\n+    await saveButton.click();\n+    await profilePage.waitForLoad();\n+\n+    researchBackground = await profilePage.getResearchBackgroundTextarea();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42755050e7d5ec3c4ada17d94693a0ef6a2fddc"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2372, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}