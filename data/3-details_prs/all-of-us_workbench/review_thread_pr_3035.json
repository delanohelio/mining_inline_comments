{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTk2OTkz", "number": 3035, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0NToyOVrODapReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NzoyNlrODbCNVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY1Nzg2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0NToyOVrOFht13g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0NToyOVrOFht13g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODM5OA==", "bodyText": "Can a bean provider not just throw an exception? i.e. add throws to the method signature for this? That seems more natural than rethrowing a runtime exception.\nIf you can't do this for some reason, then please at least include the exception here, as it stands the original exception is swallowed here", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370898398", "createdAt": "2020-01-25T00:45:29Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package org.pmiops.workbench.billing;\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.services.cloudbilling.Cloudbilling;\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.Collections;\n+import javax.inject.Provider;\n+import org.pmiops.workbench.auth.UserAuthentication;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+@Configuration\n+public class GoogleApisConfig {\n+\n+  @Bean\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public Cloudbilling googleCloudBillingApi(\n+      UserAuthentication userAuthentication,\n+      JsonFactory jsonFactory,\n+      Provider<WorkbenchConfig> workbenchConfigProvider) {\n+    GoogleCredential credential =\n+        new GoogleCredential()\n+            .setAccessToken(userAuthentication.getCredentials())\n+            .createScoped(\n+                Collections.singletonList(\"https://www.googleapis.com/auth/cloud-platform\"));\n+\n+    try {\n+      return new Cloudbilling.Builder(\n+              GoogleNetHttpTransport.newTrustedTransport(), jsonFactory, credential)\n+          .setApplicationName(workbenchConfigProvider.get().server.projectId)\n+          .build();\n+    } catch (GeneralSecurityException | IOException e) {\n+      throw new RuntimeException(\"Could not construct Cloudbilling API client\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY1OTY1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0NzoxNFrOFht29Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0NzoxNFrOFht29Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODY3Nw==", "bodyText": "I would add a log.severe() here; we will want to pay attention if this happens, since this call might fail as well.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370898677", "createdAt": "2020-01-25T00:47:14Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,76 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation\n+      // fails\n+      updateWorkspaceBillingAccount(dbWorkspace, workbenchConfigProvider.get().billing.accountId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY2MTA0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo0ODo0MVrOFht3xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjozOToyMFrOFiJc0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODg4Nw==", "bodyText": "Perhaps instead just update the billing account after you save the workspace. that way it is already on free tier if either step fails", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370898887", "createdAt": "2020-01-25T00:48:41Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,76 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1MDczNw==", "bodyText": "If I am saving the workspace with the updates billing account, I believe I still need to make a try/catch call to update the db if the Google call fails.\nProposed\n\nsave db w/ new billing account (succeeds)\ncall google (fails)\nsave db w/ old billing account to keep state in sync OR delete the workspace b/c the create call didn't fully complete successfully.\n\nCurrent\n\ncall google w/ new billing account (succeeds)\nsave db (fails)\ncall google w/ old billing account to keep state in sync\n\nMy reasoning for going with the current workflow was that I felt like a db save call is less likely to fail than an API call. There's also the effect of having a partially successful workspace entry in our database. I could see a case for not failing the entire call if the updateBillingInfo call fails since the entire call is quite expensive but I view that more of a feature add on that we can talk to product about.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371350737", "createdAt": "2020-01-27T16:39:20Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,76 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5ODg4Nw=="}, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY2MzIwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo1MDo1OFrOFht5DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo1MDo1OFrOFht5DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5OTIxMg==", "bodyText": "Please use something with jitter and/or backoff, fixed wait is not very graceful.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370899212", "createdAt": "2020-01-25T00:50:58Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,76 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation\n+      // fails\n+      updateWorkspaceBillingAccount(dbWorkspace, workbenchConfigProvider.get().billing.accountId);\n+      throw e;\n+    }\n+\n     Workspace createdWorkspace = WorkspaceConversionUtils.toApiWorkspace(dbWorkspace, fcWorkspace);\n     workspaceAuditor.fireCreateAction(createdWorkspace, dbWorkspace.getWorkspaceId());\n     return ResponseEntity.ok(createdWorkspace);\n   }\n \n+  private Retryer<ProjectBillingInfo> cloudBillingRetryer =\n+      RetryerBuilder.<ProjectBillingInfo>newBuilder()\n+          .retryIfException(\n+              e ->\n+                  e instanceof GoogleJsonResponseException\n+                      && ((GoogleJsonResponseException) e).getStatusCode() == 403)\n+          .withWaitStrategy(WaitStrategies.fixedWait(5, TimeUnit.SECONDS))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY2NDgwOnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo1Mjo0OFrOFht57w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMDo1Mjo0OFrOFht57w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg5OTQzOQ==", "bodyText": "fix here and below", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370899439", "createdAt": "2020-01-25T00:52:48Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -536,6 +536,18 @@ paths:\n           type: string\n           required: false\n \n+  /v1/user/billingAccounts:\n+    get:\n+      tags:\n+        - user\n+      description: Placeholder", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY3MjMyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMTowMDo0NlrOFht-Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNzozNVrOFiP4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMDUxOQ==", "bodyText": "Some cases to make sure are handled here:\n\nThe user is an editor (not an owner). We expect this call to 403.\nThe user is an owner, but doesn't have access to the billing account (i.e. the workspace billing account is not present in the dropdown).", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370900519", "createdAt": "2020-01-25T01:00:46Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -450,6 +465,22 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         // workspace which references a non-default, non-archived CDR version.\n         this.setState(fp.set(['workspace', 'cdrVersionId'], cdrResp.defaultCdrVersionId));\n       }\n+\n+      if (serverConfigStore.getValue().enableBillingLockout) {\n+        userApi().listBillingAccounts().then(response =>\n+          this.setState({billingAccounts: response.billingAccounts})\n+        );\n+\n+        if (this.isMode(WorkspaceEditMode.Edit)) {\n+          getBillingAccountName(this.props.workspace.namespace).then(billingAccountName =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzMjY0Ng==", "bodyText": "It looks like the user is able to call getBillingInfo on the project when they're a writer but they are NOT able to update the billing info. Is this OK? Fixing the permissions so that they can't call getBillingInfo might be non trivial since I think that is managed on FC's side based on how they interpret the writer role.\nFrom AoU's standpoint, they will not be able to update the workspace since only owners can edit Workspace details. We can also just remove the dropdown for writers if we do not want them to be able to see the billing info.\nWith regards to #2, the logic here got a bit tricky but I think I have something reasonable and there's enough comments that it should be readable. LMK what you think.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371432646", "createdAt": "2020-01-27T19:20:38Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -450,6 +465,22 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         // workspace which references a non-default, non-archived CDR version.\n         this.setState(fp.set(['workspace', 'cdrVersionId'], cdrResp.defaultCdrVersionId));\n       }\n+\n+      if (serverConfigStore.getValue().enableBillingLockout) {\n+        userApi().listBillingAccounts().then(response =>\n+          this.setState({billingAccounts: response.billingAccounts})\n+        );\n+\n+        if (this.isMode(WorkspaceEditMode.Edit)) {\n+          getBillingAccountName(this.props.workspace.namespace).then(billingAccountName =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMDUxOQ=="}, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NjA2MQ==", "bodyText": "Only owners should be able to change the billing information, so the dropdown should ideally just be disabled for non-owners.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371456061", "createdAt": "2020-01-27T20:07:35Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -450,6 +465,22 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         // workspace which references a non-default, non-archived CDR version.\n         this.setState(fp.set(['workspace', 'cdrVersionId'], cdrResp.defaultCdrVersionId));\n       }\n+\n+      if (serverConfigStore.getValue().enableBillingLockout) {\n+        userApi().listBillingAccounts().then(response =>\n+          this.setState({billingAccounts: response.billingAccounts})\n+        );\n+\n+        if (this.isMode(WorkspaceEditMode.Edit)) {\n+          getBillingAccountName(this.props.workspace.namespace).then(billingAccountName =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMDUxOQ=="}, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY3Mzg2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/utils/workbench-gapi-client.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMTowMjozMlrOFht_FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMTowMjozMlrOFht_FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMDc1Ng==", "bodyText": "This seems slightly overfit to me. I'd probably have it return the full JSON response structure, then have the client pick out billingAccountName", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370900756", "createdAt": "2020-01-25T01:02:32Z", "author": {"login": "calbach"}, "path": "ui/src/app/utils/workbench-gapi-client.ts", "diffHunk": "@@ -0,0 +1,13 @@\n+declare const gapi: any;\n+\n+export async function getBillingAccountName(workspaceNamespace: string) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MjY3NTUzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwMTowNDozMFrOFhuALg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNjoyNFrOFiP2Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMTAzOA==", "bodyText": "Noting we'll need to keep this in sync with the actual value. Probably fine for now", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r370901038", "createdAt": "2020-01-25T01:04:30Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -201,6 +209,10 @@ export const specificPopulations = [\n   }\n ];\n \n+const billingDescription = <div>The <i>All of Us</i> Program provides $200 in free credits per user.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NDE1OQ==", "bodyText": "I can add it. I'm thinking it makes more sense for this value to follow the default free credits value and not the user overridden one. thoughts?", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371364159", "createdAt": "2020-01-27T17:01:55Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -201,6 +209,10 @@ export const specificPopulations = [\n   }\n ];\n \n+const billingDescription = <div>The <i>All of Us</i> Program provides $200 in free credits per user.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMTAzOA=="}, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NTU1MA==", "bodyText": "Yes, default makes sense. It would also be very confusing to explain which user this is referring to (since it depends on the creator, not necesarily the current user's free tier credits).", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371455550", "createdAt": "2020-01-27T20:06:24Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -201,6 +209,10 @@ export const specificPopulations = [\n   }\n ];\n \n+const billingDescription = <div>The <i>All of Us</i> Program provides $200 in free credits per user.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkwMTAzOA=="}, "originalCommit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQxMTM4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1MToxMlrOFiPZ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1MToxMlrOFiPZ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0ODI3Mw==", "bodyText": "nit: combine this with the exception log.log(Level.SEVERE, \"Could not...\", e)", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371448273", "createdAt": "2020-01-27T19:51:12Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,78 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation\n+      // fails\n+      log.severe(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQyODA1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1NjoyOVrOFiPkgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTo1NjoyOVrOFiPkgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1MTAwOQ==", "bodyText": "With backtick newlines, you're getting this whitespace embedded into the string - I'm guessing this is not desired, so should probably concat multiple backticked strings instead", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371451009", "createdAt": "2020-01-27T19:56:29Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -377,9 +373,61 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         loading: false,\n         showUnderservedPopulationDetails: false,\n         showStigmatizationDetails: false,\n+        billingAccounts: []\n       };\n     }\n \n+    async componentDidMount() {\n+      if (serverConfigStore.getValue().enableBillingLockout) {\n+        const billingAccounts = (await userApi().listBillingAccounts()).billingAccounts;\n+\n+        if (this.isMode(WorkspaceEditMode.Edit)) {\n+          const fetchedBillingInfo = await getBillingAccountInfo(this.props.workspace.namespace);\n+\n+          if (!billingAccounts.find(billingAccount => billingAccount.name === fetchedBillingInfo.billingAccountName)) {\n+            // If the user has owner access on the workspace but does not have access to the billing account\n+            // that it is attached to, keep the server's current value for billingAccountName and add a shim\n+            // entry into billingAccounts so the dropdown entry is not empty.\n+            //\n+            // The server will not perform an updateBillingInfo call if the received billingAccountName\n+            // is the same as what is currently stored.\n+            //\n+            // This can happen if a workspace is shared to another researcher as an owner.\n+            billingAccounts.push({\n+              name: this.props.workspace.billingAccountName,\n+              displayName: 'User Provided Billing Account',\n+              isFreeTier: false,\n+              isOpen: true\n+            });\n+\n+            if (fetchedBillingInfo.billingAccountName !== this.props.workspace.billingAccountName) {\n+              // This should never happen but it means the database is out of sync with Google\n+              // and does not have the correct billing account stored.\n+              // We cannot send over the correct billing account info since the current user\n+              // does not have permissions to set it.\n+\n+              reportError({\n+                name: 'Out of date billing account name',\n+                message: `Workspace ${this.props.workspace.namespace} has an out of date billing account name.\n+                Stored value is ${this.props.workspace.billingAccountName}. True value is ${fetchedBillingInfo.billingAccountName}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQ0NDY1OnYy", "diffSide": "LEFT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowMjozMlrOFiPvTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowMjozMlrOFiPvTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1Mzc3NA==", "bodyText": "Where did this go?", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371453774", "createdAt": "2020-01-27T20:02:32Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -416,40 +464,15 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n             socialBehavioral: false,\n             reasonForAllOfUs: '',\n           }\n-        },\n-        workspaceCreationConflictError: false,\n-        workspaceCreationError: false,\n-        workspaceCreationErrorMessage: '',\n-        workspaceNewAclDelayed: false,\n-        workspaceNewAclDelayedContinueFn: () => {},\n-        cloneUserRole: false,\n-        loading: false,\n-        showUnderservedPopulationDetails: false,\n-        showStigmatizationDetails: false,\n-        billingAccounts: []\n-      };\n-    }\n-\n-    async componentDidMount() {\n-      if (!this.isMode(WorkspaceEditMode.Create)) {\n-        this.setState({workspace : {\n-          ...this.props.workspace,\n-            // Replace potential nulls with empty string or empty array\n-          researchPurpose: {\n-            ...this.props.workspace.researchPurpose,\n-            populationDetails: !this.props.workspace.researchPurpose.populationDetails ?\n-              [] : this.props.workspace.researchPurpose.populationDetails,\n-            diseaseOfFocus: !this.props.workspace.researchPurpose.diseaseOfFocus ?\n-              '' : this.props.workspace.researchPurpose.diseaseOfFocus}\n-        }});\n+        };\n+      }\n \n-        if (this.isMode(WorkspaceEditMode.Duplicate)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 115}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQ1MDY1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNDozMVrOFiPy8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowNDozMVrOFiPy8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1NDcwNQ==", "bodyText": "In the clone case, we should just default to the free tier billing account.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371454705", "createdAt": "2020-01-27T20:04:31Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -377,9 +373,61 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         loading: false,\n         showUnderservedPopulationDetails: false,\n         showStigmatizationDetails: false,\n+        billingAccounts: []\n       };\n     }\n \n+    async componentDidMount() {\n+      if (serverConfigStore.getValue().enableBillingLockout) {\n+        const billingAccounts = (await userApi().listBillingAccounts()).billingAccounts;\n+\n+        if (this.isMode(WorkspaceEditMode.Edit)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjQ2Mzg2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDowOTowN1rOFiP68Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTowNTozMFrOFiRcfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1Njc1Mw==", "bodyText": "nit: pretty heavy nesting. I might at least break out this first case into an inverted flag check + early return to eliminate one level.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371456753", "createdAt": "2020-01-27T20:09:07Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -377,9 +373,61 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         loading: false,\n         showUnderservedPopulationDetails: false,\n         showStigmatizationDetails: false,\n+        billingAccounts: []\n       };\n     }\n \n+    async componentDidMount() {\n+      if (serverConfigStore.getValue().enableBillingLockout) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ4MTcyNA==", "bodyText": "I pulled it out into a function and I think that helped a little. I tried shuffling around the stuff inside but couldn't find a format that I like more than what I already have.", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371481724", "createdAt": "2020-01-27T21:05:30Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/workspace/workspace-edit.tsx", "diffHunk": "@@ -377,9 +373,61 @@ export const WorkspaceEdit = fp.flow(withRouteConfigData(), withCurrentWorkspace\n         loading: false,\n         showUnderservedPopulationDetails: false,\n         showStigmatizationDetails: false,\n+        billingAccounts: []\n       };\n     }\n \n+    async componentDidMount() {\n+      if (serverConfigStore.getValue().enableBillingLockout) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1Njc1Mw=="}, "originalCommit": {"oid": "e21e64dfc8ccae06b61f997c10ed7a5788ad1825"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NjcyNTc3OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/workbench.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0MTo0N1rOFiSccw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0MTo0N1rOFiSccw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ5ODA5OQ==", "bodyText": "Could you add a comment about what it means for a Billing Account to be \"open\" ?", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371498099", "createdAt": "2020-01-27T21:41:47Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/resources/workbench.yaml", "diffHunk": "@@ -2789,6 +2811,33 @@ definitions:\n         items:\n           $ref: \"#/definitions/CohortReview\"\n \n+  WorkbenchListBillingAccountsResponse:\n+    type: object\n+    required:\n+      - billingAccounts\n+    properties:\n+      billingAccounts:\n+        type: \"array\"\n+        items:\n+          $ref: \"#/definitions/BillingAccount\"\n+\n+  BillingAccount:\n+    type: object\n+    required:\n+      - isFreeTier\n+      - name\n+      - displayName\n+      - isOpen\n+    properties:\n+      isFreeTier:\n+        type: boolean\n+      name:\n+        type: string\n+      displayName:\n+        type: string\n+      isOpen:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84290cfd8a5a60f83e7638410c98c2510e018055"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njc0MDAwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NjoyNFrOFiSk6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NjoyNFrOFiSk6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMDI2Ng==", "bodyText": "GoogleCredential is deprecated.  Can this be rewritten with GoogleCredentials ?", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371500266", "createdAt": "2020-01-27T21:46:24Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.pmiops.workbench.billing;\n+\n+import com.google.api.client.googleapis.auth.oauth2.GoogleCredential;\n+import com.google.api.client.googleapis.javanet.GoogleNetHttpTransport;\n+import com.google.api.client.json.JsonFactory;\n+import com.google.api.services.cloudbilling.Cloudbilling;\n+import java.io.IOException;\n+import java.security.GeneralSecurityException;\n+import java.util.Collections;\n+import javax.inject.Provider;\n+import org.pmiops.workbench.auth.UserAuthentication;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.ScopedProxyMode;\n+import org.springframework.web.context.annotation.RequestScope;\n+\n+@Configuration\n+public class GoogleApisConfig {\n+\n+  @Bean\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public Cloudbilling googleCloudBillingApi(\n+      UserAuthentication userAuthentication,\n+      JsonFactory jsonFactory,\n+      Provider<WorkbenchConfig> workbenchConfigProvider)\n+      throws GeneralSecurityException, IOException {\n+    GoogleCredential credential =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84290cfd8a5a60f83e7638410c98c2510e018055"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njc0MjM5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NzowN1rOFiSmTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NzowN1rOFiSmTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMDYyMA==", "bodyText": "can be .call(request::execute) instead", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371500620", "createdAt": "2020-01-27T21:47:07Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -244,12 +252,80 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+    try {\n+      dbWorkspace = workspaceService.getDao().save(dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if the workspace creation\n+      // fails\n+      log.log(\n+          Level.SEVERE,\n+          \"Could not save new workspace to database. Calling Google Cloud billing to update the failed billing project's billing account back to the free tier.\",\n+          e);\n+\n+      updateWorkspaceBillingAccount(dbWorkspace, workbenchConfigProvider.get().billing.accountId);\n+      throw e;\n+    }\n+\n     Workspace createdWorkspace = WorkspaceConversionUtils.toApiWorkspace(dbWorkspace, fcWorkspace);\n     workspaceAuditor.fireCreateAction(createdWorkspace, dbWorkspace.getWorkspaceId());\n     return ResponseEntity.ok(createdWorkspace);\n   }\n \n+  private Retryer<ProjectBillingInfo> cloudBillingRetryer =\n+      RetryerBuilder.<ProjectBillingInfo>newBuilder()\n+          .retryIfException(\n+              e ->\n+                  e instanceof GoogleJsonResponseException\n+                      && ((GoogleJsonResponseException) e).getStatusCode() == 403)\n+          .withWaitStrategy(WaitStrategies.exponentialWait())\n+          .withStopStrategy(StopStrategies.stopAfterDelay(60, TimeUnit.SECONDS))\n+          .build();\n+\n+  private void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBillingAccountName) {\n+    if (!workbenchConfigProvider.get().featureFlags.enableBillingLockout) {\n+      // If billing lockout / upgrade is not enabled, ignore the normal logic\n+      // and set the billing account to the free tier\n+      workspace.setBillingAccountName(\n+          \"billingAccounts/\" + workbenchConfigProvider.get().billing.accountId);\n+      return;\n+    }\n+\n+    if (newBillingAccountName.equals(workspace.getBillingAccountName())) {\n+      return;\n+    }\n+\n+    try {\n+      UpdateBillingInfo request =\n+          cloudbillingProvider\n+              .get()\n+              .projects()\n+              .updateBillingInfo(\n+                  \"projects/\" + workspace.getWorkspaceNamespace(),\n+                  new ProjectBillingInfo().setBillingAccountName(newBillingAccountName));\n+\n+      ProjectBillingInfo response;\n+\n+      try {\n+        // this is necessary because the grant ownership call in create/clone\n+        // may not have propagated. Adding a few retries drastically reduces\n+        // the likely of failing due to slow propagation\n+        response = cloudBillingRetryer.call(() -> request.execute());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84290cfd8a5a60f83e7638410c98c2510e018055"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Njc0MzI2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMTo0NzoyNlrOFiSm2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMjowMTo1MlrOFiTA1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMDc2MA==", "bodyText": "Could you go into more detail here?", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371500760", "createdAt": "2020-01-27T21:47:26Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -460,9 +545,18 @@ private void setDbWorkspaceFields(\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    DbWorkspace savedDbWorkspace =\n-        workspaceService.saveAndCloneCohortsConceptSetsAndDataSets(fromWorkspace, dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, body.getWorkspace().getBillingAccountName());\n+\n+    try {\n+      dbWorkspace =\n+          workspaceService.saveAndCloneCohortsConceptSetsAndDataSets(fromWorkspace, dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if our clone fails\n+      updateWorkspaceBillingAccount(dbWorkspace, workbenchConfigProvider.get().billing.accountId);\n+      throw e;\n+    }\n \n+    // TODO: File a bug about this. Can create a workspace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84290cfd8a5a60f83e7638410c98c2510e018055"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwNzQxMg==", "bodyText": "oops. Yeah, I expanded my comment. I'm not quite sure if it warrants a ticket so I think I'm going to leave it at that", "url": "https://github.com/all-of-us/workbench/pull/3035#discussion_r371507412", "createdAt": "2020-01-27T22:01:52Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -460,9 +545,18 @@ private void setDbWorkspaceFields(\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    DbWorkspace savedDbWorkspace =\n-        workspaceService.saveAndCloneCohortsConceptSetsAndDataSets(fromWorkspace, dbWorkspace);\n+    updateWorkspaceBillingAccount(dbWorkspace, body.getWorkspace().getBillingAccountName());\n+\n+    try {\n+      dbWorkspace =\n+          workspaceService.saveAndCloneCohortsConceptSetsAndDataSets(fromWorkspace, dbWorkspace);\n+    } catch (Exception e) {\n+      // Tell Google to set the billing account back to the free tier if our clone fails\n+      updateWorkspaceBillingAccount(dbWorkspace, workbenchConfigProvider.get().billing.accountId);\n+      throw e;\n+    }\n \n+    // TODO: File a bug about this. Can create a workspace", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTUwMDc2MA=="}, "originalCommit": {"oid": "84290cfd8a5a60f83e7638410c98c2510e018055"}, "originalPosition": 175}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3488, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}