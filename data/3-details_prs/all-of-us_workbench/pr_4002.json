{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2ODQxOTc4", "number": 4002, "title": "[RW-5422][risk=low] GetRuntime - Add runtime configuration details", "bodyText": "Description:\nExposes autopauseThreshold, toolDockerImage, and gceConfig/dataprocConfig on our getRuntimes endpoint by mapping the values over from a call to GetLeonardoRuntimes.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test:local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-09-14T19:43:30Z", "url": "https://github.com/all-of-us/workbench/pull/4002", "merged": true, "mergeCommit": {"oid": "9c99fae9941a044063ff2cd899201c998c4f8e65"}, "closed": true, "closedAt": "2020-09-16T03:07:28Z", "author": {"login": "ericsong"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI4fsiAH2gAyNDg2ODQxOTc4OjA5NDlkMzkxMTdiZGZhOTg5MzY2NmQ2MTEzMDdhNGFhMjBlM2QyMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJOujCAH2gAyNDg2ODQxOTc4OjliZGI3MjNmZjI3NTU5Zjg5YTgwMDVlZjFmOTc0Y2EzYWFhZTQ1M2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0949d39117bdfa9893666d611307a4aa20e3d233", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/0949d39117bdfa9893666d611307a4aa20e3d233", "committedDate": "2020-09-14T19:37:56Z", "message": "add new Runtime fields and mapping fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda3099ac70eac455d109dd92f8e69dab1904491", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/cda3099ac70eac455d109dd92f8e69dab1904491", "committedDate": "2020-09-14T19:38:38Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/51a0225c88b02c102b0655aa298f9b99b5faf9cb", "committedDate": "2020-09-14T19:43:19Z", "message": "add comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjkyMjI1", "url": "https://github.com/all-of-us/workbench/pull/4002#pullrequestreview-488292225", "createdAt": "2020-09-15T03:11:46Z", "commit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxMTo0N1rOHRu6KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMzoxNToxMFrOHRu9_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NjM5Mw==", "bodyText": "You should be able to unmarshal it using Gson. Something like this, but probably simpler: \n  \n    \n      workbench/api/src/main/java/org/pmiops/workbench/firecloud/FirecloudTransforms.java\n    \n    \n         Line 22\n      in\n      3fd2793\n    \n    \n    \n    \n\n        \n          \n           return gson.fromJson(gson.toJson(aclResp.getAcl(), accessEntryType), accessEntryType);", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488356393", "createdAt": "2020-09-15T03:11:47Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NjkzNw==", "bodyText": "I'd just leave this enum out for now, can wait until the follow-up PR which looks at the runtime labels.", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488356937", "createdAt": "2020-09-15T03:13:40Z", "author": {"login": "calbach"}, "path": "api/src/main/resources/workbench-api.yaml", "diffHunk": "@@ -5254,24 +5254,124 @@ definitions:\n     - Deleting\n     - Deleted\n     - Unknown\n+  RuntimeConfigurationType:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM1NzM3NQ==", "bodyText": "nit: \"Jupyter\".equals(image.getImageType()) for slightly better null safety", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488357375", "createdAt": "2020-09-15T03:15:10Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +27,67 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"configurationType\", ignore = true)\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  default Integer extractIntField(Map<String, Object> map, String field) {\n+    if (map.get(field) == null) {\n+      return null;\n+    }\n+\n+    return ((Number) map.get(field)).intValue();\n+  }\n+\n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    // There's a lot of unchecked casting happening here but I couldn't find a way around it\n+    // This is primarily due to the fact that Swagger generates the `runtimeConfig` object as a\n+    // generic Java object.\n+    // From manual testing, it seems like it is generated as a LinkedTreeMap.\n+\n+    Map<String, Object> runtimeConfig =\n+        (Map<String, Object>) leonardoGetRuntimeResponse.getRuntimeConfig();\n+\n+    if (runtimeConfig.get(\"cloudService\").equals(\"DATAPROC\")) {\n+      runtime.dataprocConfig(\n+          new DataprocConfig()\n+              .numberOfWorkers(extractIntField(runtimeConfig, \"numberOfWorkers\"))\n+              .masterMachineType((String) runtimeConfig.get(\"masterMachineType\"))\n+              .masterDiskSize(extractIntField(runtimeConfig, \"masterDiskSize\"))\n+              .workerMachineType((String) runtimeConfig.get(\"workerMachineType\"))\n+              .workerDiskSize(extractIntField(runtimeConfig, \"workerDiskSize\"))\n+              .numberOfWorkerLocalSSDs(extractIntField(runtimeConfig, \"numberOfWorkerLocalSSDs\"))\n+              .numberOfPreemptibleWorkers(\n+                  extractIntField(runtimeConfig, \"numberOfPreemptibleWorkers\")));\n+    } else if (runtimeConfig.get(\"cloudService\").equals(\"GCE\")) {\n+      runtime.gceConfig(\n+          new GceConfig()\n+              .diskSize(extractIntField(runtimeConfig, \"diskSize\"))\n+              .bootDiskSize(extractIntField(runtimeConfig, \"bootDiskSize\"))\n+              .machineType((String) runtimeConfig.get(\"machineType\")));\n+    } else {\n+      throw new IllegalArgumentException(\n+          \"Invalid LeonardoGetRuntimeResponse.RuntimeConfig.cloudService : \"\n+              + runtimeConfig.get(\"cloudService\"));\n+    }\n+  }\n+\n   default RuntimeStatus toApiRuntimeStatus(LeonardoRuntimeStatus leonardoRuntimeStatus) {\n     if (leonardoRuntimeStatus == null) {\n       return RuntimeStatus.UNKNOWN;\n     }\n     return RuntimeStatus.fromValue(leonardoRuntimeStatus.toString());\n   }\n+\n+  default String getJupyterImage(List<LeonardoRuntimeImage> images) {\n+    return images.stream()\n+        .filter(image -> image.getImageType().equals(\"Jupyter\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb"}, "originalPosition": 80}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19983aa114695b96f05c361241409e6f6acde090", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/19983aa114695b96f05c361241409e6f6acde090", "committedDate": "2020-09-15T17:57:01Z", "message": "Set label based on Runtime.ConfigurationType"}, "afterCommit": {"oid": "51a0225c88b02c102b0655aa298f9b99b5faf9cb", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/51a0225c88b02c102b0655aa298f9b99b5faf9cb", "committedDate": "2020-09-14T19:43:19Z", "message": "add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "025f2594d5d9cb336e975d2f14043ef723768644", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/025f2594d5d9cb336e975d2f14043ef723768644", "committedDate": "2020-09-15T18:56:20Z", "message": "use GSON to deserialize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "110dc0ab1749d793b1b6eec95f4c8220500c9d63", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/110dc0ab1749d793b1b6eec95f4c8220500c9d63", "committedDate": "2020-09-15T18:57:35Z", "message": "remove old function:"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4OTg3MzAx", "url": "https://github.com/all-of-us/workbench/pull/4002#pullrequestreview-488987301", "createdAt": "2020-09-15T19:10:47Z", "commit": {"oid": "110dc0ab1749d793b1b6eec95f4c8220500c9d63"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMDo0OFrOHSQXcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxOToxMDo0OFrOHSQXcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODkwNDU2Mw==", "bodyText": "nit: would reverse the ordering again here for improved null safety", "url": "https://github.com/all-of-us/workbench/pull/4002#discussion_r488904563", "createdAt": "2020-09-15T19:10:48Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/LeonardoMapper.java", "diffHunk": "@@ -20,12 +36,51 @@ ListRuntimeResponse toApiListRuntimeResponse(\n       LeonardoListRuntimeResponse leonardoListRuntimeResponse);\n \n   @Mapping(target = \"createdDate\", source = \"auditInfo.createdDate\")\n+  @Mapping(target = \"toolDockerImage\", source = \"runtimeImages\")\n+  @Mapping(target = \"gceConfig\", ignore = true)\n+  @Mapping(target = \"dataprocConfig\", ignore = true)\n   Runtime toApiRuntime(LeonardoGetRuntimeResponse runtime);\n \n+  @AfterMapping\n+  default void mapRuntimeConfig(\n+      @MappingTarget Runtime runtime, LeonardoGetRuntimeResponse leonardoGetRuntimeResponse) {\n+    Gson gson = new Gson();\n+    LeonardoRuntimeConfig runtimeConfig =\n+        gson.fromJson(\n+            gson.toJson(leonardoGetRuntimeResponse.getRuntimeConfig()),\n+            LeonardoRuntimeConfig.class);\n+\n+    if (runtimeConfig.getCloudService().equals(CloudServiceEnum.DATAPROC)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "110dc0ab1749d793b1b6eec95f4c8220500c9d63"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5166f59fa343a638b86cad955823bad48da48155", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/5166f59fa343a638b86cad955823bad48da48155", "committedDate": "2020-09-15T19:55:52Z", "message": "null safetey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d5d1d8073656510e05c46c3676d7bfd41ae3240", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/7d5d1d8073656510e05c46c3676d7bfd41ae3240", "committedDate": "2020-09-15T20:23:24Z", "message": "test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44d6eb4303296bce5c4b031708116eb6734aea5a", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/44d6eb4303296bce5c4b031708116eb6734aea5a", "committedDate": "2020-09-15T20:37:16Z", "message": "test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdb723ff27559f89a8005ef1f974ca3aaae453f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/9bdb723ff27559f89a8005ef1f974ca3aaae453f", "committedDate": "2020-09-15T21:32:04Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-5422"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4224, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}