{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTQ2MDA5", "number": 3751, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1MDowMVrOEMLnvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo1Mzo1NVrOEMM8EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjA4NzY1OnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDataset.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1MDowMVrOGuJVrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNzo1MDowMVrOGuJVrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA0MDY4Ng==", "bodyText": "I had to delete this otherwise DataSetMapper was using this method for the method  DbDataset dataSetRequestToDb(DataSetRequest dataSetRequest);\nand then starting throwing exception (for each attribute)  \"lastModifiedTIME\" not found did you mean null", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451040686", "createdAt": "2020-07-07T17:50:01Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/db/model/DbDataset.java", "diffHunk": "@@ -277,101 +260,4 @@ public int hashCode() {\n   public String toString() {\n     return ToStringBuilder.reflectionToString(this);\n   }\n-\n-  public static DbDataset.Builder builder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8a1d7e4f4e9c1f784e8d68409f0767be8a8ca02"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI2MDAyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0MDo1MFrOGuLCYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxOTo0MjoxOFrOGuM-sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODUxMw==", "bodyText": "I think you need to revert this block and leave the code the way it was for purposes of how the rename has to work. This will be a breaking change to the rename dataset.", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451068513", "createdAt": "2020-07-07T18:40:50Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -437,34 +416,27 @@ private void formatTimestampValues(List<DataSetPreviewValueList> valuePreviewLis\n     if (Strings.isNullOrEmpty(request.getEtag())) {\n       throw new BadRequestException(\"missing required update field 'etag'\");\n     }\n+    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace workspace =\n         workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n             workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-\n+    request.setWorkspaceId(workspace.getWorkspaceId());\n     DbDataset dbDataSet = dataSetService.getDbDataSet(workspace, dataSetId).get();\n \n     int version = Etags.toVersion(request.getEtag());\n     if (dbDataSet.getVersion() != version) {\n       throw new ConflictException(\"Attempted to modify outdated data set version\");\n     }\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbDataSet.setName(request.getName());\n-    dbDataSet.setDescription(request.getDescription());\n-    dbDataSet.setLastModifiedTime(now);\n-    if (request.getDomainValuePairs() != null) {\n-      dbDataSet.setIncludesAllParticipants(request.getIncludesAllParticipants());\n-      dbDataSet.setCohortIds(request.getCohortIds());\n-      dbDataSet.setConceptSetIds(request.getConceptSetIds());\n-      dbDataSet.setPrePackagedConceptSetEnum(request.getPrePackagedConceptSet());\n-      dbDataSet.setValues(\n-          request.getDomainValuePairs().stream()\n-              .map(this::getDataSetValuesFromDomainValueSet)\n-              .collect(Collectors.toList()));\n-    }\n+    DbDataset dbMappingConvert = dataSetMapper.dataSetRequestToDb(request);\n+    dbMappingConvert.setDataSetId(dbDataSet.getDataSetId());\n+    dbMappingConvert.setInvalid(false);\n+    dbMappingConvert.setCreatorId(dbDataSet.getCreatorId());\n+    dbMappingConvert.setCreationTime(dbDataSet.getCreationTime());\n+    dbMappingConvert.setLastModifiedTime(now);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NjY3NA==", "bodyText": "We need to add a test case for the dataset rename that would have caught this type of code change. Don't have to do it in this PR.", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451076674", "createdAt": "2020-07-07T18:56:26Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -437,34 +416,27 @@ private void formatTimestampValues(List<DataSetPreviewValueList> valuePreviewLis\n     if (Strings.isNullOrEmpty(request.getEtag())) {\n       throw new BadRequestException(\"missing required update field 'etag'\");\n     }\n+    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace workspace =\n         workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n             workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-\n+    request.setWorkspaceId(workspace.getWorkspaceId());\n     DbDataset dbDataSet = dataSetService.getDbDataSet(workspace, dataSetId).get();\n \n     int version = Etags.toVersion(request.getEtag());\n     if (dbDataSet.getVersion() != version) {\n       throw new ConflictException(\"Attempted to modify outdated data set version\");\n     }\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbDataSet.setName(request.getName());\n-    dbDataSet.setDescription(request.getDescription());\n-    dbDataSet.setLastModifiedTime(now);\n-    if (request.getDomainValuePairs() != null) {\n-      dbDataSet.setIncludesAllParticipants(request.getIncludesAllParticipants());\n-      dbDataSet.setCohortIds(request.getCohortIds());\n-      dbDataSet.setConceptSetIds(request.getConceptSetIds());\n-      dbDataSet.setPrePackagedConceptSetEnum(request.getPrePackagedConceptSet());\n-      dbDataSet.setValues(\n-          request.getDomainValuePairs().stream()\n-              .map(this::getDataSetValuesFromDomainValueSet)\n-              .collect(Collectors.toList()));\n-    }\n+    DbDataset dbMappingConvert = dataSetMapper.dataSetRequestToDb(request);\n+    dbMappingConvert.setDataSetId(dbDataSet.getDataSetId());\n+    dbMappingConvert.setInvalid(false);\n+    dbMappingConvert.setCreatorId(dbDataSet.getCreatorId());\n+    dbMappingConvert.setCreationTime(dbDataSet.getCreationTime());\n+    dbMappingConvert.setLastModifiedTime(now);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODUxMw=="}, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA4NDkwNg==", "bodyText": "Is this because rename just going to send the name and id and not the cohort/Concept Ids ? If yes should i add a comment /TODO to remove this once we will introduce a new endpoint?", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451084906", "createdAt": "2020-07-07T19:12:15Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -437,34 +416,27 @@ private void formatTimestampValues(List<DataSetPreviewValueList> valuePreviewLis\n     if (Strings.isNullOrEmpty(request.getEtag())) {\n       throw new BadRequestException(\"missing required update field 'etag'\");\n     }\n+    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace workspace =\n         workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n             workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-\n+    request.setWorkspaceId(workspace.getWorkspaceId());\n     DbDataset dbDataSet = dataSetService.getDbDataSet(workspace, dataSetId).get();\n \n     int version = Etags.toVersion(request.getEtag());\n     if (dbDataSet.getVersion() != version) {\n       throw new ConflictException(\"Attempted to modify outdated data set version\");\n     }\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbDataSet.setName(request.getName());\n-    dbDataSet.setDescription(request.getDescription());\n-    dbDataSet.setLastModifiedTime(now);\n-    if (request.getDomainValuePairs() != null) {\n-      dbDataSet.setIncludesAllParticipants(request.getIncludesAllParticipants());\n-      dbDataSet.setCohortIds(request.getCohortIds());\n-      dbDataSet.setConceptSetIds(request.getConceptSetIds());\n-      dbDataSet.setPrePackagedConceptSetEnum(request.getPrePackagedConceptSet());\n-      dbDataSet.setValues(\n-          request.getDomainValuePairs().stream()\n-              .map(this::getDataSetValuesFromDomainValueSet)\n-              .collect(Collectors.toList()));\n-    }\n+    DbDataset dbMappingConvert = dataSetMapper.dataSetRequestToDb(request);\n+    dbMappingConvert.setDataSetId(dbDataSet.getDataSetId());\n+    dbMappingConvert.setInvalid(false);\n+    dbMappingConvert.setCreatorId(dbDataSet.getCreatorId());\n+    dbMappingConvert.setCreationTime(dbDataSet.getCreationTime());\n+    dbMappingConvert.setLastModifiedTime(now);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODUxMw=="}, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTEwMDMzNg==", "bodyText": "Correct. And this was the fix... so we didn't need a new endpoint.", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451100336", "createdAt": "2020-07-07T19:42:18Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -437,34 +416,27 @@ private void formatTimestampValues(List<DataSetPreviewValueList> valuePreviewLis\n     if (Strings.isNullOrEmpty(request.getEtag())) {\n       throw new BadRequestException(\"missing required update field 'etag'\");\n     }\n+    final Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace workspace =\n         workspaceService.getWorkspaceEnforceAccessLevelAndSetCdrVersion(\n             workspaceNamespace, workspaceId, WorkspaceAccessLevel.WRITER);\n-\n+    request.setWorkspaceId(workspace.getWorkspaceId());\n     DbDataset dbDataSet = dataSetService.getDbDataSet(workspace, dataSetId).get();\n \n     int version = Etags.toVersion(request.getEtag());\n     if (dbDataSet.getVersion() != version) {\n       throw new ConflictException(\"Attempted to modify outdated data set version\");\n     }\n-    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n-    dbDataSet.setName(request.getName());\n-    dbDataSet.setDescription(request.getDescription());\n-    dbDataSet.setLastModifiedTime(now);\n-    if (request.getDomainValuePairs() != null) {\n-      dbDataSet.setIncludesAllParticipants(request.getIncludesAllParticipants());\n-      dbDataSet.setCohortIds(request.getCohortIds());\n-      dbDataSet.setConceptSetIds(request.getConceptSetIds());\n-      dbDataSet.setPrePackagedConceptSetEnum(request.getPrePackagedConceptSet());\n-      dbDataSet.setValues(\n-          request.getDomainValuePairs().stream()\n-              .map(this::getDataSetValuesFromDomainValueSet)\n-              .collect(Collectors.toList()));\n-    }\n+    DbDataset dbMappingConvert = dataSetMapper.dataSetRequestToDb(request);\n+    dbMappingConvert.setDataSetId(dbDataSet.getDataSetId());\n+    dbMappingConvert.setInvalid(false);\n+    dbMappingConvert.setCreatorId(dbDataSet.getCreatorId());\n+    dbMappingConvert.setCreationTime(dbDataSet.getCreationTime());\n+    dbMappingConvert.setLastModifiedTime(now);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA2ODUxMw=="}, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI3MDAxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0Mzo0OVrOGuLIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0Mzo0OVrOGuLIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MDA5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @Mapping(target = \"version\", source = \"etag\")\n          \n          \n            \n              @Mapping(target = \"version\", source = \"etag\", qualifiedByName = \"etagToCdrVersion\")", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451070092", "createdAt": "2020-07-07T18:43:49Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "diffHunk": "@@ -37,17 +42,47 @@\n   @Named(\"dbModelToClientLight\")\n   DataSet dbModelToClientLight(DbDataset dbDataset);\n \n+  @Mapping(target = \"dataSetId\", ignore = true)\n+  @Mapping(target = \"version\", source = \"etag\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjI3NTQzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo0NToyMVrOGuLL0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMDozNlrOGws9Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MDkyOA==", "bodyText": "Remove this and use qualifiedByName above. This method exists in CommonMappers.", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451070928", "createdAt": "2020-07-07T18:45:21Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "diffHunk": "@@ -37,17 +42,47 @@\n   @Named(\"dbModelToClientLight\")\n   DataSet dbModelToClientLight(DbDataset dbDataset);\n \n+  @Mapping(target = \"dataSetId\", ignore = true)\n+  @Mapping(target = \"version\", source = \"etag\")\n+  @Mapping(target = \"creatorId\", ignore = true)\n+  @Mapping(target = \"creationTime\", ignore = true)\n+  @Mapping(target = \"invalid\", ignore = true)\n+  @Mapping(target = \"lastModifiedTime\", ignore = true)\n+  @Mapping(target = \"prePackagedConceptSetEnum\", ignore = true)\n+  @Mapping(target = \"values\", source = \"domainValuePairs\")\n+  DbDataset dataSetRequestToDb(DataSetRequest dataSetRequest);\n+\n   @Mapping(target = \"id\", source = \"dataSetId\")\n   @Mapping(target = \"conceptSets\", source = \"conceptSetIds\")\n   @Mapping(target = \"cohorts\", source = \"cohortIds\")\n   @Mapping(target = \"domainValuePairs\", source = \"values\")\n   @Mapping(target = \"etag\", source = \"version\", qualifiedByName = \"cdrVersionToEtag\")\n   DataSet dbModelToClient(DbDataset dbDataset);\n \n+  default int etagToVersion(String eTag) {\n+    return Strings.isNullOrEmpty(eTag) ? 1 : Etags.toVersion(eTag);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMTM3NA==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r453721374", "createdAt": "2020-07-13T15:10:36Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "diffHunk": "@@ -37,17 +42,47 @@\n   @Named(\"dbModelToClientLight\")\n   DataSet dbModelToClientLight(DbDataset dbDataset);\n \n+  @Mapping(target = \"dataSetId\", ignore = true)\n+  @Mapping(target = \"version\", source = \"etag\")\n+  @Mapping(target = \"creatorId\", ignore = true)\n+  @Mapping(target = \"creationTime\", ignore = true)\n+  @Mapping(target = \"invalid\", ignore = true)\n+  @Mapping(target = \"lastModifiedTime\", ignore = true)\n+  @Mapping(target = \"prePackagedConceptSetEnum\", ignore = true)\n+  @Mapping(target = \"values\", source = \"domainValuePairs\")\n+  DbDataset dataSetRequestToDb(DataSetRequest dataSetRequest);\n+\n   @Mapping(target = \"id\", source = \"dataSetId\")\n   @Mapping(target = \"conceptSets\", source = \"conceptSetIds\")\n   @Mapping(target = \"cohorts\", source = \"cohortIds\")\n   @Mapping(target = \"domainValuePairs\", source = \"values\")\n   @Mapping(target = \"etag\", source = \"version\", qualifiedByName = \"cdrVersionToEtag\")\n   DataSet dbModelToClient(DbDataset dbDataset);\n \n+  default int etagToVersion(String eTag) {\n+    return Strings.isNullOrEmpty(eTag) ? 1 : Etags.toVersion(eTag);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3MDkyOA=="}, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjMwMzUyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODo1Mzo1NVrOGuLc6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNToxMDo0MVrOGws9bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NTMwNQ==", "bodyText": "Can we add a test case for this in DataSetMapperTest?", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r451075305", "createdAt": "2020-07-07T18:53:55Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "diffHunk": "@@ -37,17 +42,47 @@\n   @Named(\"dbModelToClientLight\")\n   DataSet dbModelToClientLight(DbDataset dbDataset);\n \n+  @Mapping(target = \"dataSetId\", ignore = true)\n+  @Mapping(target = \"version\", source = \"etag\")\n+  @Mapping(target = \"creatorId\", ignore = true)\n+  @Mapping(target = \"creationTime\", ignore = true)\n+  @Mapping(target = \"invalid\", ignore = true)\n+  @Mapping(target = \"lastModifiedTime\", ignore = true)\n+  @Mapping(target = \"prePackagedConceptSetEnum\", ignore = true)\n+  @Mapping(target = \"values\", source = \"domainValuePairs\")\n+  DbDataset dataSetRequestToDb(DataSetRequest dataSetRequest);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzcyMTQ1Mw==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3751#discussion_r453721453", "createdAt": "2020-07-13T15:10:41Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/dataset/DataSetMapper.java", "diffHunk": "@@ -37,17 +42,47 @@\n   @Named(\"dbModelToClientLight\")\n   DataSet dbModelToClientLight(DbDataset dbDataset);\n \n+  @Mapping(target = \"dataSetId\", ignore = true)\n+  @Mapping(target = \"version\", source = \"etag\")\n+  @Mapping(target = \"creatorId\", ignore = true)\n+  @Mapping(target = \"creationTime\", ignore = true)\n+  @Mapping(target = \"invalid\", ignore = true)\n+  @Mapping(target = \"lastModifiedTime\", ignore = true)\n+  @Mapping(target = \"prePackagedConceptSetEnum\", ignore = true)\n+  @Mapping(target = \"values\", source = \"domainValuePairs\")\n+  DbDataset dataSetRequestToDb(DataSetRequest dataSetRequest);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA3NTMwNQ=="}, "originalCommit": {"oid": "257852fbb5b29e194b4aef682894975640ab6c12"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2637, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}