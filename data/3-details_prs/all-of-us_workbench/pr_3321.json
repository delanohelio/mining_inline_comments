{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MDAzODAy", "number": 3321, "title": "[RW-4691][risk=no] Await authentication before checking disabled status", "bodyText": "This causes the initial /getMe request to fail with a 500. There is no clear user facing issue as a result of this, but it is a confounding factor in the very least to debugging other issues.\nManually tested with a disabled and a non-disabled user.", "createdAt": "2020-03-31T01:26:43Z", "url": "https://github.com/all-of-us/workbench/pull/3321", "merged": true, "mergeCommit": {"oid": "d6fb99e9a0c56273cea529392a78fc6853b82c30"}, "closed": true, "closedAt": "2020-03-31T02:02:01Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS4reEgH2gAyMzk2MDAzODAyOmY2NjI4OGQ3NzcxYmNhMmY0MGNiM2Y3OTkzYWFhNGMzMGYzMmUyODg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcS5FrzgFqTM4NDM0ODk2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f66288d7771bca2f40cb3f7993aaa4c30f32e288", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/f66288d7771bca2f40cb3f7993aaa4c30f32e288", "committedDate": "2020-03-31T01:18:53Z", "message": "Block disabled check on signin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7db3f05b1c7e8c9b5b0ce4e33556092013253e", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/2b7db3f05b1c7e8c9b5b0ce4e33556092013253e", "committedDate": "2020-03-31T01:28:56Z", "message": "better comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzQ4OTY3", "url": "https://github.com/all-of-us/workbench/pull/3321#pullrequestreview-384348967", "createdAt": "2020-03-31T01:46:50Z", "commit": {"oid": "2b7db3f05b1c7e8c9b5b0ce4e33556092013253e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTo0Njo1MFrOF-CXZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTo0Njo1MFrOF-CXZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5NDc4OQ==", "bodyText": "You just have read my mind \u2013\u00a0I was adding a review comment asking for a comment, then your comment showed up when I refreshed :)\nI'm still a little confused as to how we have confidence that this guard will be called again once the sign-in state is changed. Is this something we handle explicitly somewhere?", "url": "https://github.com/all-of-us/workbench/pull/3321#discussion_r400594789", "createdAt": "2020-03-31T01:46:50Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/guards/disabled-guard.service.ts", "diffHunk": "@@ -1,16 +1,24 @@\n import {Injectable} from '@angular/core';\n import {ActivatedRouteSnapshot, CanActivate, CanActivateChild, Router, RouterStateSnapshot} from '@angular/router';\n \n+import {SignInService} from 'app/services/sign-in.service';\n import {profileApi} from 'app/services/swagger-fetch-clients';\n import {convertAPIError} from 'app/utils/errors';\n import {ErrorCode} from 'generated/fetch';\n \n @Injectable()\n export class DisabledGuard implements CanActivate, CanActivateChild {\n-  constructor(private router: Router) {}\n+  constructor(private router: Router, private signInService: SignInService) {}\n \n   async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n     try {\n+      // The user is not necessarily authenticated at this point - we have to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b7db3f05b1c7e8c9b5b0ce4e33556092013253e"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3317, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}