{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMDI3Nzcy", "number": 3197, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxNDowN1rODjmMfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo0MDo0MlrODj8iXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjUyNTQzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxNDowN1rOFvfulg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoxNDowN1rOFvfulg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM0NzIyMg==", "bodyText": "Nit: Please use specific imports as opposed to * imports.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385347222", "createdAt": "2020-02-27T20:14:07Z", "author": {"login": "s-rubenstein"}, "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.captcha;\n+\n+import com.fasterxml.jackson.annotation.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3030c8215c3834fc9de9cdf933471c27c654134c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NjU0NzEwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMDoyMTozNlrOFvf76A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDo0Nzo0OVrOFvpa0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MDYzMg==", "bodyText": "Opt: Could either of these files be generated with Swagger? Assuming I understand and this is an api response object and a caller to the captcha API?\nThis is opt because this is a small number of methods and is unlikely to change, but may be worth considering.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385350632", "createdAt": "2020-02-27T20:21:36Z", "author": {"login": "s-rubenstein"}, "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.captcha;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c146418e197a36ad7c0af67606fa3a2baae66581"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5NDgxOQ==", "bodyText": "I started with the swagger approach that did not work for me hence i used this.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385394819", "createdAt": "2020-02-27T21:56:45Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.captcha;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MDYzMg=="}, "originalCommit": {"oid": "c146418e197a36ad7c0af67606fa3a2baae66581"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNjAwMw==", "bodyText": "Apparently i need to borrow Greg's shame cube, the reason why this was not working in swagger was spelling mistake and security Definitions (we do not need it here)", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385506003", "createdAt": "2020-02-28T04:47:49Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaServerVerificationResponse.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.pmiops.workbench.captcha;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM1MDYzMg=="}, "originalCommit": {"oid": "c146418e197a36ad7c0af67606fa3a2baae66581"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Njg1ODQ5OnYy", "diffSide": "RIGHT", "path": "api/config/config_local.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjowODowMFrOFvi8EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDoyNzo1MlrOFwB5vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5OTgyNQ==", "bodyText": "Drive-by comment: I think I lost the last round of \"battle\" over this topic in a PR from a couple months back (@als364 and @jaycarlton were on that one), but I still don't believe that filenames like this really belong in our per-environment config. Our convention has always been to have consistent filenames across environments, with just the bucket name changing (see credentialsBucketName). Most of our key / credential filenames are code-constants in CloudStorageServiceImpl\nI'm more than happy to be overruled if folks strongly disagree with that pattern. But it's important to note that we're actively introducing inconsistency in our system by storing key filenames in our config: some filenames will be stored in WorkbenchConfig, while most others continue to be code constants.\nIf we think there's benefit to migrating to the other approach, we should track a tech debt ticket & acknowledge the cost of migrating everything to the config pattern.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385399825", "createdAt": "2020-02-27T22:08:00Z", "author": {"login": "gjuggler"}, "path": "api/config/config_local.json", "diffHunk": "@@ -105,5 +105,9 @@\n     \"host\": \"pmi-drc-api-test.appspot.com\",\n     \"queueName\": \"rdrQueueTest\",\n     \"exportObjectsPerTask\" : 10\n+  },\n+  \"captcha\": {\n+    \"enableCaptcha\": true,\n+    \"serverKeyFileName\": \"captcha-server-key.txt\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6913393a8ccb8b3f115f6ef62a9d43faa21cc22"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwNzEzMg==", "bodyText": "I agree we should migrate to the other approach, I don't think creating this new pattern should block this ticket, I do think creating said tech debt ticket should block this ticket.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385907132", "createdAt": "2020-02-28T20:27:52Z", "author": {"login": "als364"}, "path": "api/config/config_local.json", "diffHunk": "@@ -105,5 +105,9 @@\n     \"host\": \"pmi-drc-api-test.appspot.com\",\n     \"queueName\": \"rdrQueueTest\",\n     \"exportObjectsPerTask\" : 10\n+  },\n+  \"captcha\": {\n+    \"enableCaptcha\": true,\n+    \"serverKeyFileName\": \"captcha-server-key.txt\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM5OTgyNQ=="}, "originalCommit": {"oid": "e6913393a8ccb8b3f115f6ef62a9d43faa21cc22"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDE3MDE2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaVerificationService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozNDoxNlrOFwCDdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozNDoxNlrOFwCDdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkwOTYyMg==", "bodyText": "This looks more like a ServiceImpl than a service - please pull out the Service interface.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385909622", "createdAt": "2020-02-28T20:34:16Z", "author": {"login": "als364"}, "path": "api/src/main/java/org/pmiops/workbench/captcha/CaptchaVerificationService.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.pmiops.workbench.captcha;\n+\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+import java.util.stream.Collectors;\n+import javax.inject.Provider;\n+import org.pmiops.workbench.captcha.api.CaptchaApi;\n+import org.pmiops.workbench.captcha.model.CaptchaVerificationResponse;\n+import org.pmiops.workbench.config.WorkbenchConfig;\n+import org.pmiops.workbench.google.CloudStorageService;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+/** Service to verify Captcha */\n+@Service\n+public class CaptchaVerificationService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703045182875144b04cac17b485b5a37bf547ab1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDE3MjUyOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozNToxN1rOFwCE8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozNToxN1rOFwCE8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMDAwMA==", "bodyText": "nit: either camelcase this or make it all lowercase", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385910000", "createdAt": "2020-02-28T20:35:17Z", "author": {"login": "als364"}, "path": "api/src/test/java/org/pmiops/workbench/api/ProfileControllerTest.java", "diffHunk": "@@ -94,6 +96,8 @@\n   private static final String FAMILY_NAME = \"Bobberson\";\n   private static final String CONTACT_EMAIL = \"bob@example.com\";\n   private static final String INVITATION_KEY = \"secretpassword\";\n+  private static final String CAPTCHA_TOKEN = \"captchaToken\";\n+  private static final String WRONG_CAPTCHA_TOKEN = \"WrongcaptchaToken\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703045182875144b04cac17b485b5a37bf547ab1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDE4MjgwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozOToyMVrOFwCLUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozOToyMVrOFwCLUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMTYzMg==", "bodyText": "jeez is this really how they cased it", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385911632", "createdAt": "2020-02-28T20:39:21Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -13,7 +13,9 @@ import {SpinnerOverlay} from 'app/components/spinners';\n import {profileApi} from 'app/services/swagger-fetch-clients';\n import colors from 'app/styles/colors';\n import {toggleIncludes} from 'app/utils';\n+import {environment} from 'environments/environment';\n import {Profile} from 'generated/fetch';\n+import ReCAPTCHA from 'react-google-recaptcha';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703045182875144b04cac17b485b5a37bf547ab1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDE4Mzk2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozOTo1MFrOFwCMDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDozOTo1MFrOFwCMDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMTgyMw==", "bodyText": "nit: can you move this TODO up to line 93?", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385911823", "createdAt": "2020-02-28T20:39:50Z", "author": {"login": "als364"}, "path": "ui/src/app/pages/login/account-creation/account-creation-survey.tsx", "diffHunk": "@@ -83,11 +91,21 @@ export class AccountCreationSurvey extends React.Component<AccountCreationSurvey\n         onComplete(savedProfile);\n       }).catch(error => {\n         console.log(error);\n-        this.setState({creatingAccount: false});\n+        if (environment.enableCaptcha) {\n+          // Reset captcha\n+          this.captchaRef.current.reset();\n+          this.setState({captcha: false});\n+        }\n         // TODO: we need to show some user-facing error message when this fails.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703045182875144b04cac17b485b5a37bf547ab1"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDE4NTg4OnYy", "diffSide": "RIGHT", "path": "ui/src/environments/environment.prod.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo0MDo0MlrOFwCNRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo0MDo0MlrOFwCNRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxMjEzMw==", "bodyText": "If you're not going to enable this straight away, please file a ticket to enable captcha in prod.", "url": "https://github.com/all-of-us/workbench/pull/3197#discussion_r385912133", "createdAt": "2020-02-28T20:40:42Z", "author": {"login": "als364"}, "path": "ui/src/environments/environment.prod.ts", "diffHunk": "@@ -4,6 +4,7 @@ export const environment: Environment = {\n   displayTag: '',\n   shouldShowDisplayTag: false,\n   allOfUsApiUrl: 'https://api.workbench.researchallofus.org',\n+  captchaSiteKey: '',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703045182875144b04cac17b485b5a37bf547ab1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3163, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}