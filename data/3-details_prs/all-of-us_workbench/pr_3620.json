{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjY1MzEy", "number": 3620, "title": "[RW-4825][risk=no] Misc. tweaks & small refactors split from main story branch", "bodyText": "This is a grab bag of tweaks from another branch that was getting too heavy:\n\nintroduce FirecloudMapper\nmove WorkspaceMapper\nClean up DataSetControllerTest, & remove DataSetService references so the latter can be mocked (and tested in DataSetServiceTest)\nSorted lots of lists alphabetically using the IntelliJ String Manipulation plugin. This helps find places where a service's constructor is used directly, which should generally not be necessary.\n\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n I have run the E2E tests on ths change against my local UI + API server with yarn test-local\n If this includes a UI change, I have taken screen recordings or screenshots of the new behavior and notified the PO and UX designer\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-05-28T18:43:29Z", "url": "https://github.com/all-of-us/workbench/pull/3620", "merged": true, "mergeCommit": {"oid": "3a8c60e0f83f7271bf626524d7c2ccca3a03d68e"}, "closed": true, "closedAt": "2020-06-09T14:15:28Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclx6P1gH2gAyNDI0NjY1MzEyOjU1NDZiYmU0ZTgyYzU3N2ZmNWYzYzY2YTUyYWVkMDBkNjE2MDEyYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpldAkgH2gAyNDI0NjY1MzEyOmIwODdhYzBmNTA0YmY4NGRhNThjYzA0NmIxMGVjODdhZGMzNmJmMWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5546bbe4e82c577ff5f3c66a52aed00d616012ad", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/5546bbe4e82c577ff5f3c66a52aed00d616012ad", "committedDate": "2020-05-28T18:10:15Z", "message": "add a new kitchen sink type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a0bf3ae3d4f0783c13576ba34d679d98ccde750", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/1a0bf3ae3d4f0783c13576ba34d679d98ccde750", "committedDate": "2020-05-28T18:11:19Z", "message": "rebase master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ae7d84618646111b429587f4efc6fa5011b714", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/80ae7d84618646111b429587f4efc6fa5011b714", "committedDate": "2020-05-28T18:19:12Z", "message": "fixp manual constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e345da4f92f3ffeec4060c796d24cc14b752de33", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/e345da4f92f3ffeec4060c796d24cc14b752de33", "committedDate": "2020-05-28T18:19:12Z", "message": "add qualifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddad49e55eef950313e85306a3e6096e124d0816", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/ddad49e55eef950313e85306a3e6096e124d0816", "committedDate": "2020-05-28T18:20:54Z", "message": "backend changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db0380a946b7e4a2983ca217eef53c72e2c60012", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/db0380a946b7e4a2983ca217eef53c72e2c60012", "committedDate": "2020-05-28T18:20:57Z", "message": "more fiddling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e43f83b6621b23210415a4f5124c53088ad85c50", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/e43f83b6621b23210415a4f5124c53088ad85c50", "committedDate": "2020-05-28T18:20:57Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d540d55566662fba7494b2974d4008e10271efb5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/d540d55566662fba7494b2974d4008e10271efb5", "committedDate": "2020-05-28T18:20:58Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "939790076eda2db11c968e39057db88ba092cf27", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/939790076eda2db11c968e39057db88ba092cf27", "committedDate": "2020-05-28T18:20:58Z", "message": "progress for later"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56e8dd114bb3c15cd5135d5e5ee0701506cb716", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/b56e8dd114bb3c15cd5135d5e5ee0701506cb716", "committedDate": "2020-05-28T18:22:43Z", "message": "tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98ff4b687e24cccf228115d5bcab77719823ad2d", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/98ff4b687e24cccf228115d5bcab77719823ad2d", "committedDate": "2020-05-28T18:22:45Z", "message": "kill broken method [skip ci]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f2ec9229255e4577babb8ce8100b4b49cab1077", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/0f2ec9229255e4577babb8ce8100b4b49cab1077", "committedDate": "2020-05-28T18:28:54Z", "message": "fake commit [skip ci]"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b715457b90235677e6937014e8074262441d5c04", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/b715457b90235677e6937014e8074262441d5c04", "committedDate": "2020-05-28T18:48:20Z", "message": "move WorkspaceMapper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e1ab08641b7a3afc72ad1ba3db64cb3939fef9", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/e4e1ab08641b7a3afc72ad1ba3db64cb3939fef9", "committedDate": "2020-05-28T18:49:38Z", "message": "don't need on this branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245db23ad3953f40e3a31b932bc5d736af87b0de", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/245db23ad3953f40e3a31b932bc5d736af87b0de", "committedDate": "2020-05-28T20:47:30Z", "message": "fix paths"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "338da636d9955c1c0f183162d855556007fdfc83", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/338da636d9955c1c0f183162d855556007fdfc83", "committedDate": "2020-06-02T19:54:12Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/36d4dfde5187234608c18d9b06f70338bcb965de", "committedDate": "2020-06-03T15:00:16Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a52f86eca9534ee05dbef71c3578f3303ee7cca5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/a52f86eca9534ee05dbef71c3578f3303ee7cca5", "committedDate": "2020-06-03T16:10:16Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjQ2NDI2", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-423646426", "createdAt": "2020-06-03T15:02:52Z", "commit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTowMjo1MlrOGegGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToyOToyNVrOGehTlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzNjM5MQ==", "bodyText": "By injecting this random value, we no longer have to use a spy() around the DataSetService.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434636391", "createdAt": "2020-06-03T15:02:52Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/api/DataSetController.java", "diffHunk": "@@ -261,7 +265,7 @@ private ConceptSet toClientConceptSet(DbConceptSet dbConceptSet) {\n \n   @VisibleForTesting\n   public String generateRandomEightCharacterQualifier() {\n-    return RandomStringUtils.randomNumeric(8);\n+    return prefixProvider.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzNzE0NQ==", "bodyText": "This is actually leftover from the other (future) branch. I can remove from this PR if necessary, but it's pretty small.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434637145", "createdAt": "2020-06-03T15:03:58Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/db/dao/UserServiceImpl.java", "diffHunk": "@@ -950,4 +950,9 @@ public DbUser syncTwoFactorAuthStatus(DbUser targetUser, Agent agent) {\n                     .build())\n         .collect(ImmutableList.toImmutableList());\n   }\n+\n+  @Override\n+  public Optional<DbUser> getByUsername(String username) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzNzk1OA==", "bodyText": "Public static methods on used classes are fair game for the mapper.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434637958", "createdAt": "2020-06-03T15:05:01Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/profile/ProfileMapper.java", "diffHunk": "@@ -17,6 +15,7 @@\n     uses = {\n       AddressMapper.class,\n       CommonMappers.class,\n+      DbStorageEnums.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzODg0NA==", "bodyText": "FWIW, I'm not sure \"common\" is much of an abstraction. I kinda feel like breaking this down further so the uses directives are more granular.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434638844", "createdAt": "2020-06-03T15:06:04Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/CommonMappers.java", "diffHunk": "@@ -7,15 +7,8 @@\n import org.pmiops.workbench.api.Etags;\n import org.pmiops.workbench.config.WorkbenchConfig;\n import org.pmiops.workbench.db.model.DbCdrVersion;\n-import org.pmiops.workbench.db.model.DbStorageEnums;\n import org.pmiops.workbench.db.model.DbUser;\n-import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceAccessEntry;\n-import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceResponse;\n-import org.pmiops.workbench.model.AnnotationType;\n import org.pmiops.workbench.model.BillingStatus;\n-import org.pmiops.workbench.model.DataAccessLevel;\n-import org.pmiops.workbench.model.WorkspaceAccessLevel;\n-import org.pmiops.workbench.workspaces.WorkspaceService;\n import org.springframework.stereotype.Service;\n \n @Service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzOTIzNQ==", "bodyText": "One could argue for merging this with the ProfileMapper...", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434639235", "createdAt": "2020-06-03T15:06:36Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/utils/mappers/UserMapper.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.pmiops.workbench.utils.mappers;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.pmiops.workbench.db.model.DbUser;\n+import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceAccessEntry;\n+import org.pmiops.workbench.model.User;\n+import org.pmiops.workbench.model.UserRole;\n+\n+@Mapper(componentModel = \"spring\", uses = FirecloudMapper.class)\n+public interface UserMapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYzOTY3OQ==", "bodyText": "This class's only advantage is its no-arg constructor. It's used in a tool Spring configuration below.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434639679", "createdAt": "2020-06-03T15:07:13Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceFakeImpl.java", "diffHunk": "@@ -0,0 +1,178 @@\n+package org.pmiops.workbench.workspaces;\n+\n+import java.sql.Timestamp;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.db.model.DbUserRecentWorkspace;\n+import org.pmiops.workbench.db.model.DbWorkspace;\n+import org.pmiops.workbench.exceptions.ForbiddenException;\n+import org.pmiops.workbench.exceptions.NotFoundException;\n+import org.pmiops.workbench.firecloud.FireCloudService;\n+import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceACLUpdate;\n+import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceAccessEntry;\n+import org.pmiops.workbench.model.UserRole;\n+import org.pmiops.workbench.model.WorkspaceAccessLevel;\n+import org.pmiops.workbench.model.WorkspaceResponse;\n+\n+public class WorkspaceServiceFakeImpl implements WorkspaceService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0NTUyMw==", "bodyText": "Lots of heavy services were initialized inline in the @Before method, greatly inflating the number of test class members.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434645523", "createdAt": "2020-06-03T15:15:15Z", "author": {"login": "jaycarlton"}, "path": "api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java", "diffHunk": "@@ -187,95 +174,76 @@\n \n   private static final Instant NOW = Instant.now();\n   private static final FakeClock CLOCK = new FakeClock(NOW, ZoneId.systemDefault());\n+  private static final BasicFormatterImpl BASIC_FORMATTER = new BasicFormatterImpl();\n+  private static final String PREFIX = \"00000000\";\n+  private static final String FULL_PREFIX = String.format(\"dataset_%s_condition_\", PREFIX);\n+\n   private static DbUser currentUser;\n \n-  private String cohortCriteria;\n-  private SearchRequest searchRequest;\n-  private TestMockFactory testMockFactory;\n   private Workspace workspace;\n \n-  @Autowired BillingProjectBufferService billingProjectBufferService;\n-  @Autowired BigQueryService bigQueryService;\n-  @Autowired CdrBigQuerySchemaConfigService cdrBigQuerySchemaConfigService;\n-  @Autowired WorkspaceResourcesService workspaceResourcesService;\n-  @Autowired CdrVersionDao cdrVersionDao;\n-  @Autowired CdrVersionService cdrVersionService;\n-  @Autowired CloudStorageService cloudStorageService;\n-  @Autowired Provider<Cloudbilling> cloudBillingProvider;\n-  @Autowired CohortDao cohortDao;\n-  @Autowired CohortFactory cohortFactory;\n-  @Autowired CohortMapper cohortMapper;\n-  @Autowired CohortMaterializationService cohortMaterializationService;\n-  @Autowired CohortReviewDao cohortReviewDao;\n-  @Autowired CohortReviewMapper cohortReviewMapper;\n-  @Autowired CohortReviewService cohortReviewService;\n-  @Autowired ConceptBigQueryService conceptBigQueryService;\n-  @Autowired ConceptDao conceptDao;\n-  @Autowired ConceptService conceptService;\n-  @Autowired ConceptSetService conceptSetService;\n-  @Autowired ConceptSetDao conceptSetDao;\n-  @Autowired DataDictionaryEntryDao dataDictionaryEntryDao;\n-  @Autowired DataSetDao dataSetDao;\n-  @Mock DataSetMapper dataSetMapper;\n-  @Autowired ConceptSetMapper conceptSetMapper;\n-  @Autowired DataSetService dataSetService;\n-  @Autowired FireCloudService fireCloudService;\n-  @Autowired FreeTierBillingService freeTierBillingService;\n-  @Autowired CohortQueryBuilder cohortQueryBuilder;\n-  @Autowired TestBigQueryCdrSchemaConfig testBigQueryCdrSchemaConfig;\n-  @Autowired UserDao userDao;\n-  @Mock Provider<DbUser> userProvider;\n-  @Autowired Provider<WorkbenchConfig> workbenchConfigProvider;\n-  @Autowired NotebooksService notebooksService;\n-  @Autowired UserRecentResourceService userRecentResourceService;\n-  @Autowired UserService userService;\n-  @Autowired WorkspaceDao workspaceDao;\n-  @Autowired WorkspaceService workspaceService;\n-  @Autowired WorkspaceAuditor workspaceAuditor;\n-  @Autowired WorkspaceMapper workspaceMapper;\n-  @Autowired LogsBasedMetricService logsBasedMetricService;\n-  @MockBean MonitoringService mockMonitoringService;\n+  @Autowired private BillingProjectBufferService billingProjectBufferService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY0NzE1MA==", "bodyText": "One could argue for a new DatasetConfig to host this. I don't have strong feelings at the moment.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434647150", "createdAt": "2020-06-03T15:17:23Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/config/CommonConfig.java", "diffHunk": "@@ -25,4 +31,11 @@ Clock clock() {\n   Random random() {\n     return new SecureRandom();\n   }\n+\n+  @Bean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NjE1MA==", "bodyText": "Using the @MockBean annotation directly on the members is cleaner than putting it here and using @Autowire. I keep this list around for those mocks that don't need to have named instances.", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r434656150", "createdAt": "2020-06-03T15:29:25Z", "author": {"login": "jaycarlton"}, "path": "api/src/test/java/org/pmiops/workbench/api/DataSetControllerTest.java", "diffHunk": "@@ -187,95 +174,76 @@\n \n   private static final Instant NOW = Instant.now();\n   private static final FakeClock CLOCK = new FakeClock(NOW, ZoneId.systemDefault());\n+  private static final BasicFormatterImpl BASIC_FORMATTER = new BasicFormatterImpl();\n+  private static final String PREFIX = \"00000000\";\n+  private static final String FULL_PREFIX = String.format(\"dataset_%s_condition_\", PREFIX);\n+\n   private static DbUser currentUser;\n \n-  private String cohortCriteria;\n-  private SearchRequest searchRequest;\n-  private TestMockFactory testMockFactory;\n   private Workspace workspace;\n \n-  @Autowired BillingProjectBufferService billingProjectBufferService;\n-  @Autowired BigQueryService bigQueryService;\n-  @Autowired CdrBigQuerySchemaConfigService cdrBigQuerySchemaConfigService;\n-  @Autowired WorkspaceResourcesService workspaceResourcesService;\n-  @Autowired CdrVersionDao cdrVersionDao;\n-  @Autowired CdrVersionService cdrVersionService;\n-  @Autowired CloudStorageService cloudStorageService;\n-  @Autowired Provider<Cloudbilling> cloudBillingProvider;\n-  @Autowired CohortDao cohortDao;\n-  @Autowired CohortFactory cohortFactory;\n-  @Autowired CohortMapper cohortMapper;\n-  @Autowired CohortMaterializationService cohortMaterializationService;\n-  @Autowired CohortReviewDao cohortReviewDao;\n-  @Autowired CohortReviewMapper cohortReviewMapper;\n-  @Autowired CohortReviewService cohortReviewService;\n-  @Autowired ConceptBigQueryService conceptBigQueryService;\n-  @Autowired ConceptDao conceptDao;\n-  @Autowired ConceptService conceptService;\n-  @Autowired ConceptSetService conceptSetService;\n-  @Autowired ConceptSetDao conceptSetDao;\n-  @Autowired DataDictionaryEntryDao dataDictionaryEntryDao;\n-  @Autowired DataSetDao dataSetDao;\n-  @Mock DataSetMapper dataSetMapper;\n-  @Autowired ConceptSetMapper conceptSetMapper;\n-  @Autowired DataSetService dataSetService;\n-  @Autowired FireCloudService fireCloudService;\n-  @Autowired FreeTierBillingService freeTierBillingService;\n-  @Autowired CohortQueryBuilder cohortQueryBuilder;\n-  @Autowired TestBigQueryCdrSchemaConfig testBigQueryCdrSchemaConfig;\n-  @Autowired UserDao userDao;\n-  @Mock Provider<DbUser> userProvider;\n-  @Autowired Provider<WorkbenchConfig> workbenchConfigProvider;\n-  @Autowired NotebooksService notebooksService;\n-  @Autowired UserRecentResourceService userRecentResourceService;\n-  @Autowired UserService userService;\n-  @Autowired WorkspaceDao workspaceDao;\n-  @Autowired WorkspaceService workspaceService;\n-  @Autowired WorkspaceAuditor workspaceAuditor;\n-  @Autowired WorkspaceMapper workspaceMapper;\n-  @Autowired LogsBasedMetricService logsBasedMetricService;\n-  @MockBean MonitoringService mockMonitoringService;\n+  @Autowired private BillingProjectBufferService billingProjectBufferService;\n+  @Autowired private CdrBigQuerySchemaConfigService cdrBigQuerySchemaConfigService;\n+  @Autowired private CdrVersionDao cdrVersionDao;\n+  @Autowired private CohortsController cohortsController;\n+  @Autowired private CohortQueryBuilder cohortQueryBuilder;\n+  @Autowired private ConceptSetsController conceptSetsController;\n+  @Autowired private DataSetController dataSetController;\n+  @Autowired private DataSetService dataSetService;\n+  @Autowired private FireCloudService fireCloudService;\n+  @Autowired private NotebooksService notebooksService;\n+  @Autowired private UserDao userDao;\n+  @Autowired private WorkspaceDao workspaceDao;\n+  @Autowired private WorkspacesController workspacesController;\n+\n+  @MockBean private BigQueryService mockBigQueryService;\n+\n+  //  @Mock Provider<DbUser> userProvider;\n \n   @TestConfiguration\n   @Import({\n-    WorkspaceResourcesServiceImpl.class,\n     CohortFactoryImpl.class,\n     CohortMapperImpl.class,\n     CohortReviewMapperImpl.class,\n     CohortReviewServiceImpl.class,\n+    CohortsController.class,\n+    CommonMappers.class,\n     ConceptService.class,\n     ConceptSetMapperImpl.class,\n+    ConceptSetsController.class,\n     ConceptSetService.class,\n+    DataSetController.class,\n     DataSetServiceImpl.class,\n-    TestBigQueryCdrSchemaConfig.class,\n-    WorkspacesController.class,\n-    WorkspaceServiceImpl.class,\n-    WorkspaceMapperImpl.class,\n-    CommonMappers.class,\n+    FirecloudMapperImpl.class,\n     LogsBasedMetricServiceFakeImpl.class,\n+    TestBigQueryCdrSchemaConfig.class,\n+    UserMapperImpl.class,\n     UserServiceTestConfiguration.class,\n+    WorkspaceMapperImpl.class,\n+    WorkspaceResourcesServiceImpl.class,\n+    WorkspaceResourcesServiceImpl.class,\n+    WorkspacesController.class,\n+    WorkspaceServiceImpl.class\n   })\n   @MockBean({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36d4dfde5187234608c18d9b06f70338bcb965de"}, "originalPosition": 222}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dcee486cc1caacea922d9d65efcbc1f6828b62e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/5dcee486cc1caacea922d9d65efcbc1f6828b62e", "committedDate": "2020-06-03T21:11:12Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c630214b27bb9b470a73100a554ca7368453fb4", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/4c630214b27bb9b470a73100a554ca7368453fb4", "committedDate": "2020-06-03T21:17:29Z", "message": "remove mismerged code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68b3a4b731ea8fa19123cdf7d13ce3a269c571a9", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/68b3a4b731ea8fa19123cdf7d13ce3a269c571a9", "committedDate": "2020-06-03T21:42:37Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf18a51fa1c211d1d89b129ff45f1d6ca79ce15", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8cf18a51fa1c211d1d89b129ff45f1d6ca79ce15", "committedDate": "2020-06-04T15:53:21Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53e90d72df33a9a4d59df61391299a2ef7205a58", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/53e90d72df33a9a4d59df61391299a2ef7205a58", "committedDate": "2020-06-04T16:07:54Z", "message": "add import & alphabetize"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MjYzNDg2", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-425263486", "createdAt": "2020-06-05T12:43:00Z", "commit": {"oid": "53e90d72df33a9a4d59df61391299a2ef7205a58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MzowMVrOGfs8aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjo0MzowMVrOGfs8aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg5NTQwMA==", "bodyText": "Whats this used for?", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r435895400", "createdAt": "2020-06-05T12:43:01Z", "author": {"login": "NehaBroad"}, "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/DataSetControllerBQTest.java", "diffHunk": "@@ -128,13 +136,20 @@\n     FreeTierBillingService.class,\n     NotebooksServiceImpl.class,\n     Provider.class,\n+    UserMapper.class,\n     WorkspaceMapperImpl.class\n   })\n   static class Configuration {\n     @Bean\n     public Clock clock() {\n       return CLOCK;\n     }\n+\n+    @Bean\n+    @Qualifier(CommonConfig.DATASET_PREFIX_CODE)\n+    String prefixCode() {\n+      return \"00000000\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53e90d72df33a9a4d59df61391299a2ef7205a58"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/b06c4f0dcf111f33c6e125892ef92e6ca566cd36", "committedDate": "2020-06-08T15:27:51Z", "message": "dependency"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mzc3Mjk2", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-426377296", "createdAt": "2020-06-08T15:49:49Z", "commit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo0OTo1MFrOGgkzpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo0OTo1MFrOGgkzpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxMDY2Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r436810663", "createdAt": "2020-06-08T15:49:50Z", "author": {"login": "NehaBroad"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java", "diffHunk": "@@ -97,8 +97,7 @@\n   // Importing the real one requires importing a large subtree of dependencies\n   @Bean\n   public WorkspaceService workspaceService() {\n-    return new WorkspaceServiceImpl(\n-        null, null, null, null, null, null, null, null, null, null, null, null, null, null);\n+    return new WorkspaceServiceFakeImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mzg0NDk4", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-426384498", "createdAt": "2020-06-08T15:57:31Z", "commit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1NzozMVrOGglI_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1NzozMVrOGglI_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNjEyNw==", "bodyText": "Question: Why did you use new ArrayList here?", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r436816127", "createdAt": "2020-06-08T15:57:31Z", "author": {"login": "NehaBroad"}, "path": "api/src/test/java/org/pmiops/workbench/db/dao/DataSetServiceTest.java", "diffHunk": "@@ -272,4 +293,62 @@ public void testCapitalizeFirstCharacterOnly_emoji() {\n     assertThat((DataSetServiceImpl.capitalizeFirstCharacterOnly(\"\u30de\u30ea\u30aa\u306b\u611f\u8b1d\u3057\u307e\u3059\u304c\u3001\u79c1\u305f\u3061\u306e\u738b\u5973\u306f\u5225\u306e\u57ce\u306b\u3044\u307e\u3059\")))\n         .isEqualTo(\"\u30de\u30ea\u30aa\u306b\u611f\u8b1d\u3057\u307e\u3059\u304c\u3001\u79c1\u305f\u3061\u306e\u738b\u5973\u306f\u5225\u306e\u57ce\u306b\u3044\u307e\u3059\");\n   }\n+\n+  @Test\n+  public void testDomainToBigQueryConfig() {\n+    mockLinkingTableQuery(ImmutableList.of(\"FROM `\" + TEST_CDR_TABLE + \".person` person\"));\n+    final DataSetRequest dataSetRequest =\n+        new DataSetRequest()\n+            .conceptSetIds(Collections.emptyList())\n+            .cohortIds(new ArrayList<>())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mzg4Mjg3", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-426388287", "createdAt": "2020-06-08T16:01:37Z", "commit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMTozOFrOGglUNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNjowMTozOFrOGglUNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxODk5Ng==", "bodyText": "Why did you decide to send null rather than Empty Object?", "url": "https://github.com/all-of-us/workbench/pull/3620#discussion_r436818996", "createdAt": "2020-06-08T16:01:38Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceFakeImpl.java", "diffHunk": "@@ -0,0 +1,178 @@\n+package org.pmiops.workbench.workspaces;\n+\n+import java.sql.Timestamp;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.pmiops.workbench.db.dao.WorkspaceDao;\n+import org.pmiops.workbench.db.model.DbUserRecentWorkspace;\n+import org.pmiops.workbench.db.model.DbWorkspace;\n+import org.pmiops.workbench.exceptions.ForbiddenException;\n+import org.pmiops.workbench.exceptions.NotFoundException;\n+import org.pmiops.workbench.firecloud.FireCloudService;\n+import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceACLUpdate;\n+import org.pmiops.workbench.firecloud.model.FirecloudWorkspaceAccessEntry;\n+import org.pmiops.workbench.model.UserRole;\n+import org.pmiops.workbench.model.WorkspaceAccessLevel;\n+import org.pmiops.workbench.model.WorkspaceResponse;\n+\n+public class WorkspaceServiceFakeImpl implements WorkspaceService {\n+\n+  @Override\n+  public WorkspaceDao getDao() {\n+    return null;\n+  }\n+\n+  @Override\n+  public Optional<DbWorkspace> findActiveByWorkspaceId(long workspaceId) {\n+    return Optional.empty();\n+  }\n+\n+  @Override\n+  public FireCloudService getFireCloudService() {\n+    return null;\n+  }\n+\n+  @Override\n+  public DbWorkspace get(String ns, String firecloudName) {\n+    return null;\n+  }\n+\n+  @Override\n+  public Optional<DbWorkspace> getByNamespace(String workspaceNamespace) {\n+    return Optional.empty();\n+  }\n+\n+  @Override\n+  public List<WorkspaceResponse> getWorkspacesAndPublicWorkspaces() {\n+    return null;\n+  }\n+\n+  @Override\n+  public WorkspaceResponse getWorkspace(String workspaceNamespace) throws NotFoundException {\n+    return null;\n+  }\n+\n+  @Override\n+  public WorkspaceResponse getWorkspace(String workspaceNamespace, String workspaceId) {\n+    return null;\n+  }\n+\n+  @Override\n+  public List<WorkspaceResponse> getWorkspaces() {\n+    return null;\n+  }\n+\n+  @Override\n+  public List<WorkspaceResponse> getPublishedWorkspaces() {\n+    return null;\n+  }\n+\n+  @Override\n+  public DbWorkspace getRequired(String ns, String firecloudName) {\n+    return null;\n+  }\n+\n+  @Override\n+  public DbWorkspace getRequiredWithCohorts(String ns, String firecloudName) {\n+    return null;\n+  }\n+\n+  @Override\n+  public DbWorkspace saveWithLastModified(DbWorkspace workspace) {\n+    return null;\n+  }\n+\n+  @Override\n+  public void deleteWorkspace(DbWorkspace dbWorkspace) {}\n+\n+  @Override\n+  public void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBillingAccountName) {}\n+\n+  @Override\n+  public void validateActiveBilling(String workspaceNamespace, String workspaceId)\n+      throws ForbiddenException {}\n+\n+  @Override\n+  public List<DbWorkspace> findForReview() {\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b06c4f0dcf111f33c6e125892ef92e6ca566cd36"}, "originalPosition": 98}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eb6c3a81e154348f981a40a2de060bdcbc64db2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/3eb6c3a81e154348f981a40a2de060bdcbc64db2", "committedDate": "2020-06-08T17:45:45Z", "message": "tweaks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d232dad727e24374230a3ca6ff078abe9085a35", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7d232dad727e24374230a3ca6ff078abe9085a35", "committedDate": "2020-06-08T18:18:37Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdeddded288ad3cba8c545f8ce32e561105aae04", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/fdeddded288ad3cba8c545f8ce32e561105aae04", "committedDate": "2020-06-08T18:27:38Z", "message": "fix moved ref"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MTYwMjM3", "url": "https://github.com/all-of-us/workbench/pull/3620#pullrequestreview-427160237", "createdAt": "2020-06-09T13:40:01Z", "commit": {"oid": "fdeddded288ad3cba8c545f8ce32e561105aae04"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b087ac0f504bf84da58cc046b10ec87adc36bf1b", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/b087ac0f504bf84da58cc046b10ec87adc36bf1b", "committedDate": "2020-06-09T13:55:09Z", "message": "Merge branch 'master' into jaycarlton/mapperTweaks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4793, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}