{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDcwMDY1", "number": 3890, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxMjozM1rOEZOWOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozNzoxN1rOEZpotA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODg0OTIyOnYy", "diffSide": "RIGHT", "path": "ui/src/app/app-routing.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxMjozM1rOHB7CSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNToyOTo0MFrOHDM2Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw==", "bodyText": "redirecting to homepage seemed most correct, let me know if there's some other thing that seems correcter to you", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r471777867", "createdAt": "2020-08-17T21:12:33Z", "author": {"login": "als364"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce0b1ee70454843c759731ead1d3bdf84411868e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3MTYwNg==", "bodyText": "Does it work like this: if an unregistered user navigates to a registration-guarded page, it kicks them back to the homepage?  That sounds reasonable.", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472471606", "createdAt": "2020-08-18T20:29:06Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw=="}, "originalCommit": {"oid": "ce0b1ee70454843c759731ead1d3bdf84411868e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzExODI4Mw==", "bodyText": "Yep, exactly. We should probably make a 404 page eventually and do that instead.", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473118283", "createdAt": "2020-08-19T15:29:40Z", "author": {"login": "als364"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3Nzg2Nw=="}, "originalCommit": {"oid": "ce0b1ee70454843c759731ead1d3bdf84411868e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODg1NTI5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/app-routing.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxNDo0N1rOHB7GJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMToxNDo0N1rOHB7GJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc3ODg1Mw==", "bodyText": "worth noting: it caused confusing bugs when I tried to nest it inside the other ProtectedRoutes. so we'll probably have to enumerate all combinations of guards. not a huge deal since we only have a few.", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r471778853", "createdAt": "2020-08-17T21:14:47Z", "author": {"login": "als364"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -61,21 +70,41 @@ export const AppRoutingComponent: React.FunctionComponent<RoutingProps> = ({onSi\n     />\n \n     <ProtectedRoutes guards={[signInGuard]}>\n-        <AppRoute\n+      <AppRoute\n+        path='/'\n+          component={() => <HomepagePage routeData={{title: 'Homepage'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/user-audit'\n+          component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/user-audit/:username'\n+          component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/workspace-audit'\n+          component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}\n+      />\n+      <AppRoute\n+          path='/admin/workspace-audit/:workspaceNamespace'\n+          component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}\n+      />\n+      <AppRoute\n           path='/data-code-of-conduct'\n           component={ () => <DataUserCodeOfConductPage routeData={{\n             title: 'Data User Code of Conduct',\n             minimizeChrome: true\n           }} />}\n-        />\n-        <AppRoute path='/admin/user-audit'\n-                  component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}/>\n-        <AppRoute path='/admin/user-audit/:username'\n-                  component={() => <UserAuditPage routeData={{title: 'User Audit'}}/>}/>\n-        <AppRoute path='/admin/workspace-audit'\n-                  component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}/>\n-        <AppRoute path='/admin/workspace-audit/:workspaceNamespace'\n-                  component={() => <WorkspaceAuditPage routeData={{title: 'Workspace Audit'}}/>}/>\n+      />\n+      <AppRoute path='/nih-callback' component={() => <HomepagePage routeData={{title: 'Homepage'}}/>} />\n+    </ProtectedRoutes>\n+\n+    <ProtectedRoutes guards={[signInGuard, registrationGuard]}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce0b1ee70454843c759731ead1d3bdf84411868e"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MzI4NTY1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/app-routing.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozMDowN1rOHClcEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozMDowN1rOHClcEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3MjU5Mw==", "bodyText": "HomeUhhhhhhhPageIGuess", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472472593", "createdAt": "2020-08-18T20:30:07Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/app-routing.tsx", "diffHunk": "@@ -22,14 +24,21 @@ const signInGuard: Guard = {\n   redirectPath: '/login'\n };\n \n+const registrationGuard: Guard = {\n+  allowed: (): boolean => hasRegisteredAccess(profileStore.get().profile.dataAccessLevel),\n+  redirectPath: '/'\n+};\n+\n const CookiePolicyPage = withRouteData(CookiePolicy);\n const DataUserCodeOfConductPage = fp.flow(withRouteData, withFullHeight)(DataUserCodeOfConduct);\n+const HomepagePage = withRouteData(Homepage); // this name is bad i am sorry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MzMwMTU3OnYy", "diffSide": "LEFT", "path": "ui/src/app/app-routing.module.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozMjo1NVrOHClmVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTowMDoyM1rOHDLi2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NTIyMQ==", "bodyText": "What's a good way for me to check that all of the previously-wildcard routes are now accounted for?", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472475221", "createdAt": "2020-08-18T20:32:55Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/app-routing.module.ts", "diffHunk": "@@ -361,13 +391,9 @@ const routes: Routes = [\n             path: 'institution/edit/:institutionId',\n             component: AdminInstitutionEditComponent,\n             data: { title: 'Institution Admin'},\n-          }]\n+          }\n+        ]\n       },\n-      {\n-        path: '**',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5NjkyMA==", "bodyText": "Cross reference app-routing.tsx", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473096920", "createdAt": "2020-08-19T15:00:23Z", "author": {"login": "als364"}, "path": "ui/src/app/app-routing.module.ts", "diffHunk": "@@ -361,13 +391,9 @@ const routes: Routes = [\n             path: 'institution/edit/:institutionId',\n             component: AdminInstitutionEditComponent,\n             data: { title: 'Institution Admin'},\n-          }]\n+          }\n+        ]\n       },\n-      {\n-        path: '**',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NTIyMQ=="}, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MzMyMDIwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/services/profile-storage.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozNzoxN1rOHClx7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNTo0NDo1N1rOHDNe5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA==", "bodyText": "what does this do?", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r472478190", "createdAt": "2020-08-18T20:37:17Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/services/profile-storage.service.ts", "diffHunk": "@@ -54,10 +55,12 @@ export class ProfileStorageService {\n     this.profileService.getMe()\n       .retryWhen(ProfileStorageService.conflictRetryPolicy())\n       .subscribe((profile) => {\n+        profileStore.set({...profileStore.get(), profile: profile});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA5NzMwMQ==", "bodyText": "This updates the React profile store to contain the profile that we are updating the Angular profile store with", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473097301", "createdAt": "2020-08-19T15:00:54Z", "author": {"login": "als364"}, "path": "ui/src/app/services/profile-storage.service.ts", "diffHunk": "@@ -54,10 +55,12 @@ export class ProfileStorageService {\n     this.profileService.getMe()\n       .retryWhen(ProfileStorageService.conflictRetryPolicy())\n       .subscribe((profile) => {\n+        profileStore.set({...profileStore.get(), profile: profile});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA=="}, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzEyODY3OA==", "bodyText": "and we need this because the React router needs that info to check registration.  thx.", "url": "https://github.com/all-of-us/workbench/pull/3890#discussion_r473128678", "createdAt": "2020-08-19T15:44:57Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/services/profile-storage.service.ts", "diffHunk": "@@ -54,10 +55,12 @@ export class ProfileStorageService {\n     this.profileService.getMe()\n       .retryWhen(ProfileStorageService.conflictRetryPolicy())\n       .subscribe((profile) => {\n+        profileStore.set({...profileStore.get(), profile: profile});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3ODE5MA=="}, "originalCommit": {"oid": "a0be0928400e1acb3f53aa89d2b4d33724c51650"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2279, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}