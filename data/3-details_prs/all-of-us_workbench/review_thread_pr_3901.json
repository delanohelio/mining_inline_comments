{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMTk2MDgx", "number": 3901, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MDowOVrOEarvYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxOTo0NFrOEa_HsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDE1MDc0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MDowOVrOHEQ_dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0NjozOFrOHEyUWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDc0Mg==", "bodyText": "bulk renaming", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474234742", "createdAt": "2020-08-20T19:50:09Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -107,8 +109,8 @@ interface Props {\n }\n \n interface State {\n-  checkEmailError: string;\n-  checkEmailResponse: CheckEmailResponse;\n+  validateEmailError: string;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxOTI4Mg==", "bodyText": "I tend to expect  symbols starting with a verb to be a function, not a value. I would have expected emailValidationErrorMessage or similar  here.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474719282", "createdAt": "2020-08-21T14:05:10Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -107,8 +109,8 @@ interface Props {\n }\n \n interface State {\n-  checkEmailError: string;\n-  checkEmailResponse: CheckEmailResponse;\n+  validateEmailError: string;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDc0Mg=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc4MDc2MQ==", "bodyText": "done", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474780761", "createdAt": "2020-08-21T15:46:38Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -107,8 +109,8 @@ interface Props {\n }\n \n interface State {\n-  checkEmailError: string;\n-  checkEmailResponse: CheckEmailResponse;\n+  validateEmailError: string;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNDc0Mg=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDE1Mzc0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MTowNFrOHERBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MTowNFrOHERBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNTIxMw==", "bodyText": "moved from setVerifiedInstitutionOnProfile() to apply to all callers", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474235213", "createdAt": "2020-08-20T19:51:04Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -154,20 +156,21 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     }\n   }\n \n-  async checkEmail() {\n+  async validateEmail() {\n     const {\n       updatedProfile: {\n         contactEmail,\n         verifiedInstitutionalAffiliation: {institutionShortName}\n       }\n     } = this.state;\n \n+    await this.setState({loading: true});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDE1Njc5OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MTo1N1rOHERDJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo1NjozMFrOHEyo1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNTY4NA==", "bodyText": "undefined if it has not.  Used immediately below.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474235684", "createdAt": "2020-08-20T19:51:57Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyMDY5NA==", "bodyText": "I  really don't like  intentionally returning undefined. null would be less bad, and an idempotent treatment of the profile that does nothing if there are no changes (e.g. using React's vdom diff stuff) would be best.\nIt  sounds like there's no direct analog of Optional from Java, but I did find this  nifty  article on the options you do have for null  safety.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474720694", "createdAt": "2020-08-21T14:07:40Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNTY4NA=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc4NjAwNQ==", "bodyText": "null is fine", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474786005", "createdAt": "2020-08-21T15:56:30Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNTY4NA=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDE2MDIzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1MzoxN1rOHERFbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo0ODoxMlrOHEyXjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjI2OA==", "bodyText": "username and accessBypassRequests are required.  Only include others if they have changed (and are implemented in this PR)", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474236268", "createdAt": "2020-08-20T19:53:17Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);\n+    const updatedValue = fp.get(['updatedProfile' , attribute], this.state);\n+    if (!fp.isEqual(oldValue, updatedValue)) {\n+      return updatedValue;\n+    }\n+  }\n+\n+  updateAccountProperties() {\n+    const {updatedProfile} = this.state;\n+    const {username} = updatedProfile;\n+    const request: AccountPropertyUpdate = {\n+      username,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNDY4OA==", "bodyText": "I believe typescript has  methods to mark these as required and the others as optional (e.g. string?).", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474724688", "createdAt": "2020-08-21T14:13:25Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);\n+    const updatedValue = fp.get(['updatedProfile' , attribute], this.state);\n+    if (!fp.isEqual(oldValue, updatedValue)) {\n+      return updatedValue;\n+    }\n+  }\n+\n+  updateAccountProperties() {\n+    const {updatedProfile} = this.state;\n+    const {username} = updatedProfile;\n+    const request: AccountPropertyUpdate = {\n+      username,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjI2OA=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc4MTU4Mw==", "bodyText": "AccountPropertyUpdate is already using this", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474781583", "createdAt": "2020-08-21T15:48:12Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -282,11 +289,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     });\n   }\n \n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);\n+    const updatedValue = fp.get(['updatedProfile' , attribute], this.state);\n+    if (!fp.isEqual(oldValue, updatedValue)) {\n+      return updatedValue;\n+    }\n+  }\n+\n+  updateAccountProperties() {\n+    const {updatedProfile} = this.state;\n+    const {username} = updatedProfile;\n+    const request: AccountPropertyUpdate = {\n+      username,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzNjI2OA=="}, "originalCommit": {"oid": "ec6d5c3505f00aac4201f07677c222c6fe180a7f"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzI3MTYwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDowNTo1OVrOHEul8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoxNDo1M1rOHE1BDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxOTczMQ==", "bodyText": "nit: we shouldn't need to ask the user to refresh the page. Can't  we just re-render or re-fetch  ourselves?", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474719731", "createdAt": "2020-08-21T14:05:59Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -177,15 +180,16 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     try {\n       const result = await validateEmail(contactEmail, institutionShortName, this.aborter);\n       this.setState({\n-        checkEmailError: '',\n-        checkEmailResponse: result\n+        validateEmailError: '',\n+        validateEmailResponse: result\n       });\n     } catch (e) {\n       this.setState({\n-        checkEmailError: 'Error validating user email against institution - please refresh page and try again',\n-        checkEmailResponse: null,\n+        validateEmailError: 'Error validating user email against institution - please refresh page and try again',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc2NzYyNA==", "bodyText": "We could add retries here, but ultimately we'll still need some failure text.\nThere's also no particular reason to expect this endpoint is any more likely to fail than others which we aren't retrying.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474767624", "createdAt": "2020-08-21T15:23:40Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -177,15 +180,16 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     try {\n       const result = await validateEmail(contactEmail, institutionShortName, this.aborter);\n       this.setState({\n-        checkEmailError: '',\n-        checkEmailResponse: result\n+        validateEmailError: '',\n+        validateEmailResponse: result\n       });\n     } catch (e) {\n       this.setState({\n-        checkEmailError: 'Error validating user email against institution - please refresh page and try again',\n-        checkEmailResponse: null,\n+        validateEmailError: 'Error validating user email against institution - please refresh page and try again',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxOTczMQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyNDk3Mg==", "bodyText": "OK. I guess I don't understand why we expect refreshing to help.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474824972", "createdAt": "2020-08-21T17:14:53Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -177,15 +180,16 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     try {\n       const result = await validateEmail(contactEmail, institutionShortName, this.aborter);\n       this.setState({\n-        checkEmailError: '',\n-        checkEmailResponse: result\n+        validateEmailError: '',\n+        validateEmailResponse: result\n       });\n     } catch (e) {\n       this.setState({\n-        checkEmailError: 'Error validating user email against institution - please refresh page and try again',\n-        checkEmailResponse: null,\n+        validateEmailError: 'Error validating user email against institution - please refresh page and try again',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcxOTczMQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzI5NzU3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxMjoxMlrOHEu2iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxODoxMzo1NVrOHE2uIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyMzk3Nw==", "bodyText": "nit: I've been preferring  the curried form of the fp calls, e.g. fp.get(['oldProfile' , attribute])(this.state);. It's a nice reminder that I'm creating a function first and then calling it. I don't know  that we have a standard  for this  though.  @petesantos do you have a preference?", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474723977", "createdAt": "2020-08-21T14:12:12Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -273,20 +280,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     ));\n   }\n \n-  updateVerifiedInstitutionalAffiliation() {\n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg1Mjg5OA==", "bodyText": "My personal preference (and it is only that) - if you have all of the parameters ahead of time, add them in as parameters otherwise it can get confusing - when should you use params and at what granularity should you break it down into functions (e.g. a function that has 3 params)?\nWhile I am a big fan of the auto currying in fp, for me it adds a slight bit of cognitive overhead when reading the code to think about why the function is getting called with double execution when all params are known. I do make an exception for fp.flow though - as we are essentially building a new function. I feel things like \"get\" or \"isEqual\" have a set of parameters defined so I am ok with calling it with all params. Flow takes n params/functions so breaking out the last/data param makes sense to me.\nAnother alternative:\nreturn fp.flow(\n  fp.get(['updatedProfile' , attribute]), \n  updatedValue => fp.isEqual(oldValue, updatedValue) ? null : updatedValue,\n)(this.state)", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474852898", "createdAt": "2020-08-21T18:13:55Z", "author": {"login": "petesantos"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -273,20 +280,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     ));\n   }\n \n-  updateVerifiedInstitutionalAffiliation() {\n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyMzk3Nw=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMwNDcwOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNDowNVrOHEu67g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNTo1MDowOFrOHEybkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNTEwMg==", "bodyText": "Please type this and give an appropriate default value (like 0.0).", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474725102", "createdAt": "2020-08-21T14:14:05Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -273,20 +280,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     ));\n   }\n \n-  updateVerifiedInstitutionalAffiliation() {\n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);\n+    const updatedValue = fp.get(['updatedProfile' , attribute], this.state);\n+    if (!fp.isEqual(oldValue, updatedValue)) {\n+      return updatedValue;\n+    }\n+  }\n+\n+  updateAccountProperties() {\n     const {updatedProfile} = this.state;\n-    const {userId, verifiedInstitutionalAffiliation} = updatedProfile;\n+    const {username} = updatedProfile;\n+    const request: AccountPropertyUpdate = {\n+      username,\n+      freeCreditsLimit: undefined, // coming soon: RW-4956", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc4MjYxMQ==", "bodyText": "The type is number? and unset means \"don't change it\"\nI could fully comment out this line instead.  I do want to show that it will soon exist.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474782611", "createdAt": "2020-08-21T15:50:08Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -273,20 +280,44 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     ));\n   }\n \n-  updateVerifiedInstitutionalAffiliation() {\n+  // returns the updated profile value only if it has changed\n+  updatedProfileValue(attribute: string) {\n+    const oldValue = fp.get(['oldProfile' , attribute], this.state);\n+    const updatedValue = fp.get(['updatedProfile' , attribute], this.state);\n+    if (!fp.isEqual(oldValue, updatedValue)) {\n+      return updatedValue;\n+    }\n+  }\n+\n+  updateAccountProperties() {\n     const {updatedProfile} = this.state;\n-    const {userId, verifiedInstitutionalAffiliation} = updatedProfile;\n+    const {username} = updatedProfile;\n+    const request: AccountPropertyUpdate = {\n+      username,\n+      freeCreditsLimit: undefined, // coming soon: RW-4956", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNTEwMg=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMwODI3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNDo1OFrOHEu9Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzowODo0OFrOHE01dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNTY0Ng==", "bodyText": "Make  sure to test  the layout with various  combinations of these errors  present at once.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474725646", "createdAt": "2020-08-21T14:14:58Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -353,7 +384,7 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n           color: colors.primary\n         }}\n     >\n-      {checkEmailError && <div>{checkEmailError}</div>}\n+      {validateEmailError && <div>{validateEmailError}</div>}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyMjAwNA==", "bodyText": "Looks fine - multiple lines, one error each", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474822004", "createdAt": "2020-08-21T17:08:48Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -353,7 +384,7 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n           color: colors.primary\n         }}\n     >\n-      {checkEmailError && <div>{checkEmailError}</div>}\n+      {validateEmailError && <div>{validateEmailError}</div>}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNTY0Ng=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMxMDg3OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNTozNlrOHEu-jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNjozOTowOVrOHEz8zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjAzMQ==", "bodyText": "You can just do onClick={this.updateAccountProperties}.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474726031", "createdAt": "2020-08-21T14:15:36Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -415,7 +446,7 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             <Button\n                 type='primary'\n                 disabled={this.isSaveDisabled(errors)}\n-                onClick={() => this.updateVerifiedInstitutionalAffiliation()}\n+                onClick={() => this.updateAccountProperties()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDc4Njc1Nw==", "bodyText": "oh nice, thanks", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474786757", "createdAt": "2020-08-21T15:57:54Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -415,7 +446,7 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             <Button\n                 type='primary'\n                 disabled={this.isSaveDisabled(errors)}\n-                onClick={() => this.updateVerifiedInstitutionalAffiliation()}\n+                onClick={() => this.updateAccountProperties()}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjAzMQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNzUwMQ==", "bodyText": "this does not work unfortunately", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474807501", "createdAt": "2020-08-21T16:39:09Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -415,7 +446,7 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             <Button\n                 type='primary'\n                 disabled={this.isSaveDisabled(errors)}\n-                onClick={() => this.updateVerifiedInstitutionalAffiliation()}\n+                onClick={() => this.updateAccountProperties()}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjAzMQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMxMzA1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNjoxNFrOHEu_9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNzoxMzoyOFrOHE0-Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjM5MQ==", "bodyText": "I don't think you need the arrow expression here. Just put onChange={this.setContactEmail}.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474726391", "createdAt": "2020-08-21T14:16:14Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -461,11 +492,11 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             />\n             <TextInputWithLabel\n                 labelText={'Contact email'}\n-                placeholder={updatedProfile.contactEmail}\n+                value={updatedProfile.contactEmail}\n                 inputId={'contactEmail'}\n-                disabled={true}\n                 inputStyle={{...styles.textInput, ...styles.backgroundColorDark}}\n                 containerStyle={styles.textInputContainer}\n+                onChange={email => this.setContactEmail(email)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgwNDM5Mg==", "bodyText": "unfortunately no", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474804392", "createdAt": "2020-08-21T16:32:27Z", "author": {"login": "jmthibault79"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -461,11 +492,11 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             />\n             <TextInputWithLabel\n                 labelText={'Contact email'}\n-                placeholder={updatedProfile.contactEmail}\n+                value={updatedProfile.contactEmail}\n                 inputId={'contactEmail'}\n-                disabled={true}\n                 inputStyle={{...styles.textInput, ...styles.backgroundColorDark}}\n                 containerStyle={styles.textInputContainer}\n+                onChange={email => this.setContactEmail(email)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjM5MQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDgyNDI1NQ==", "bodyText": "oh because of the this business, right.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474824255", "createdAt": "2020-08-21T17:13:28Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -461,11 +492,11 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n             />\n             <TextInputWithLabel\n                 labelText={'Contact email'}\n-                placeholder={updatedProfile.contactEmail}\n+                value={updatedProfile.contactEmail}\n                 inputId={'contactEmail'}\n-                disabled={true}\n                 inputStyle={{...styles.textInput, ...styles.backgroundColorDark}}\n                 containerStyle={styles.textInputContainer}\n+                onChange={email => this.setContactEmail(email)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNjM5MQ=="}, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMxNzg0OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNzozMFrOHEvC2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxNzozMFrOHEvC2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyNzEzMA==", "bodyText": "I would have probably made this a function component like EmailValidationMessage so it could be called like <EmailValidationMessage/>.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474727130", "createdAt": "2020-08-21T14:17:30Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -224,10 +228,10 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n     return fp.isEqual(oldProfile, updatedProfile) || errors;\n   }\n \n-  renderCheckEmailResponse() {\n-    const {checkEmailResponse, updatedProfile, verifiedInstitutionOptions} = this.state;\n+  renderValidateEmailResponse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NzMyNTkzOnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/admin/admin-user.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxOTo0NFrOHEvH4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxNDoxOTo0NFrOHEvH4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDcyODQxOQ==", "bodyText": "nit: I'd prefer a single state value to determine whether to show this and what to show so you don't have this logic cluttering up your main render function.", "url": "https://github.com/all-of-us/workbench/pull/3901#discussion_r474728419", "createdAt": "2020-08-21T14:19:44Z", "author": {"login": "jaycarlton"}, "path": "ui/src/app/pages/admin/admin-user.tsx", "diffHunk": "@@ -497,10 +528,8 @@ const AdminUser = withUrlParams()(class extends React.Component<Props, State> {\n                 }\n                 dataTestId={'verifiedInstitution'}\n             />}\n-            {checkEmailResponse && !checkEmailResponse.isValidMember && this.renderCheckEmailResponse()}\n+            {validateEmailResponse && !validateEmailResponse.isValidMember && this.renderValidateEmailResponse()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7fcca54b68a081f0dddc50d1b36949ed26fc75"}, "originalPosition": 226}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2291, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}