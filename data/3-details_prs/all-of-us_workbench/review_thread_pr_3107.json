{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjYzMDU5", "number": 3107, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo1MjozOFrODejJCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo1MjozOFrODejJCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMzU5NjI2OnYy", "diffSide": "RIGHT", "path": "ui/src/app/pages/signed-in/component.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzo1MjozOFrOFnvs9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxODoyNzozOFrOFnww8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMDM0Mg==", "bodyText": "Does this get called when a sleeping machine is woken up? I think I got most of it but wondering how the check is enforced the moment the user returns to their machine.", "url": "https://github.com/all-of-us/workbench/pull/3107#discussion_r377220342", "createdAt": "2020-02-10T17:52:38Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/signed-in/component.ts", "diffHunk": "@@ -93,14 +94,25 @@ export class SignedInComponent implements OnInit, OnDestroy, AfterViewInit {\n       this.minimizeChrome = minimizeChrome;\n     }));\n \n+    this.signOutIfLocalStorageInactivityElapsed();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fc7337062934be05533fe2986d9f1fc4ef8c10"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyNDQyMQ==", "bodyText": "This line was actually just a refactoring of a check which was already here - no logic changed on this line. I didn't think hard about why it was here; I think this was to catch returning users.\nIt won't necessarily be enforced the moment they return to their machine, it will be enforced either:\n\nWhen they next interact with the page: L175, or\nwhen the interval check resets the timers (within <1m of machine wakeup): L163", "url": "https://github.com/all-of-us/workbench/pull/3107#discussion_r377224421", "createdAt": "2020-02-10T18:00:22Z", "author": {"login": "calbach"}, "path": "ui/src/app/pages/signed-in/component.ts", "diffHunk": "@@ -93,14 +94,25 @@ export class SignedInComponent implements OnInit, OnDestroy, AfterViewInit {\n       this.minimizeChrome = minimizeChrome;\n     }));\n \n+    this.signOutIfLocalStorageInactivityElapsed();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMDM0Mg=="}, "originalCommit": {"oid": "e8fc7337062934be05533fe2986d9f1fc4ef8c10"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIzNzc0Nw==", "bodyText": "Got it. L175 was what I was looking for.", "url": "https://github.com/all-of-us/workbench/pull/3107#discussion_r377237747", "createdAt": "2020-02-10T18:27:38Z", "author": {"login": "ericsong"}, "path": "ui/src/app/pages/signed-in/component.ts", "diffHunk": "@@ -93,14 +94,25 @@ export class SignedInComponent implements OnInit, OnDestroy, AfterViewInit {\n       this.minimizeChrome = minimizeChrome;\n     }));\n \n+    this.signOutIfLocalStorageInactivityElapsed();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMDM0Mg=="}, "originalCommit": {"oid": "e8fc7337062934be05533fe2986d9f1fc4ef8c10"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3292, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}