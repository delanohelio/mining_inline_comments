{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTkwNDA2", "number": 3134, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNDo1NFrODhnAxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxODo1NVrODhnGOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTY4Nzc1OnYy", "diffSide": "RIGHT", "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNDo1NFrOFscACg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTozMjoyOFrOFs644g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDQyNg==", "bodyText": "Need to delete countSurveys()", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382140426", "createdAt": "2020-02-20T17:14:54Z", "author": {"login": "freemabd"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -130,6 +130,35 @@\n       nativeQuery = true)\n   long countSurveys(@Param(\"term\") String term);\n \n+  @Query(\n+      value =\n+          \"select count(*) \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1\",\n+      nativeQuery = true)\n+  long countSurveyByName(@Param(\"term\") String term, @Param(\"surveyName\") String surveyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0NjQ5OA==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382646498", "createdAt": "2020-02-21T15:32:28Z", "author": {"login": "dolbeew"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -130,6 +130,35 @@\n       nativeQuery = true)\n   long countSurveys(@Param(\"term\") String term);\n \n+  @Query(\n+      value =\n+          \"select count(*) \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1\",\n+      nativeQuery = true)\n+  long countSurveyByName(@Param(\"term\") String term, @Param(\"surveyName\") String surveyName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDQyNg=="}, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTY4OTgyOnYy", "diffSide": "RIGHT", "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxNTozM1rOFscBSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTozMjo1M1rOFs65zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDc0NQ==", "bodyText": "need to delete findSurveys(@Param(\"limit\") int limit, @Param(\"offset\") int offset)", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382140745", "createdAt": "2020-02-20T17:15:33Z", "author": {"login": "freemabd"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -155,6 +184,41 @@\n   List<DbConcept> findSurveys(\n       @Param(\"term\") String term, @Param(\"limit\") int limit, @Param(\"offset\") int offset);\n \n+  @Query(\n+      value =\n+          \"select concept_id, concept_name, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1 \"\n+              + \"order by id \"\n+              + \"limit :limit offset :offset\",\n+      nativeQuery = true)\n+  List<DbConcept> findSurveysByName(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0NjczMw==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382646733", "createdAt": "2020-02-21T15:32:53Z", "author": {"login": "dolbeew"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -155,6 +184,41 @@\n   List<DbConcept> findSurveys(\n       @Param(\"term\") String term, @Param(\"limit\") int limit, @Param(\"offset\") int offset);\n \n+  @Query(\n+      value =\n+          \"select concept_id, concept_name, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1 \"\n+              + \"order by id \"\n+              + \"limit :limit offset :offset\",\n+      nativeQuery = true)\n+  List<DbConcept> findSurveysByName(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MDc0NQ=="}, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTY5OTYzOnYy", "diffSide": "RIGHT", "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxODoxOFrOFscHgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTozMjo1OVrOFs65_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MjMzOA==", "bodyText": "Also, can we rename this to findSurveysByTermAndName?", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382142338", "createdAt": "2020-02-20T17:18:18Z", "author": {"login": "freemabd"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -155,6 +184,41 @@\n   List<DbConcept> findSurveys(\n       @Param(\"term\") String term, @Param(\"limit\") int limit, @Param(\"offset\") int offset);\n \n+  @Query(\n+      value =\n+          \"select concept_id, concept_name, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1 \"\n+              + \"order by id \"\n+              + \"limit :limit offset :offset\",\n+      nativeQuery = true)\n+  List<DbConcept> findSurveysByName(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0Njc4Mg==", "bodyText": "Done", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382646782", "createdAt": "2020-02-21T15:32:59Z", "author": {"login": "dolbeew"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -155,6 +184,41 @@\n   List<DbConcept> findSurveys(\n       @Param(\"term\") String term, @Param(\"limit\") int limit, @Param(\"offset\") int offset);\n \n+  @Query(\n+      value =\n+          \"select concept_id, concept_name, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1 \"\n+              + \"order by id \"\n+              + \"limit :limit offset :offset\",\n+      nativeQuery = true)\n+  List<DbConcept> findSurveysByName(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MjMzOA=="}, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTcwMTcwOnYy", "diffSide": "RIGHT", "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxODo1NVrOFscI5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNTozMjo0NFrOFs65Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MjY5NQ==", "bodyText": "Also, can we rename this to countSurveyByTermAndName?", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382142695", "createdAt": "2020-02-20T17:18:55Z", "author": {"login": "freemabd"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -130,6 +130,35 @@\n       nativeQuery = true)\n   long countSurveys(@Param(\"term\") String term);\n \n+  @Query(\n+      value =\n+          \"select count(*) \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1\",\n+      nativeQuery = true)\n+  long countSurveyByName(@Param(\"term\") String term, @Param(\"surveyName\") String surveyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0NjYzMA==", "bodyText": "Good idea, done.", "url": "https://github.com/all-of-us/workbench/pull/3134#discussion_r382646630", "createdAt": "2020-02-21T15:32:44Z", "author": {"login": "dolbeew"}, "path": "common-api/src/main/java/org/pmiops/workbench/cdr/dao/ConceptDao.java", "diffHunk": "@@ -130,6 +130,35 @@\n       nativeQuery = true)\n   long countSurveys(@Param(\"term\") String term);\n \n+  @Query(\n+      value =\n+          \"select count(*) \"\n+              + \"from \"\n+              + \"  (select case when @curType = concept_name then @curRow \\\\:= @curRow + 1 else @curRow \\\\:= 1 end as rank, \"\n+              + \"   id, @curType \\\\:= concept_name as concept_name, concept_id, domain_id, vocabulary_id, concept_class_id, standard_concept, concept_code, count_value, prevalence, source_count_value, synonyms \"\n+              + \"    from \"\n+              + \"      (select cr.id, c.* \"\n+              + \"        from cb_criteria cr \"\n+              + \"        join concept c on c.concept_id = cr.concept_id \"\n+              + \"        where cr.domain_id = 'SURVEY' \"\n+              + \"          and cr.type = 'PPI' \"\n+              + \"          and cr.subtype = 'ANSWER' \"\n+              + \"          and cr.path like CONCAT( \"\n+              + \"            (select dc.id \"\n+              + \"              from cb_criteria dc \"\n+              + \"              where dc.domain_id = 'SURVEY' \"\n+              + \"                and dc.type = 'PPI' \"\n+              + \"                and dc.name = :surveyName), '.%' \"\n+              + \"          ) \"\n+              + \"          and match(c.concept_name, c.concept_code, c.vocabulary_id, c.synonyms) against (:term in boolean mode)\"\n+              + \"      ) a, \"\n+              + \"      (select @curRow \\\\:= 0, @curType \\\\:= '') r \"\n+              + \"    order by concept_name, id \"\n+              + \"  ) as x \"\n+              + \"where rank = 1\",\n+      nativeQuery = true)\n+  long countSurveyByName(@Param(\"term\") String term, @Param(\"surveyName\") String surveyName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE0MjY5NQ=="}, "originalCommit": {"oid": "2ce55754c11faa90a363ec382761b09726d858ac"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3338, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}