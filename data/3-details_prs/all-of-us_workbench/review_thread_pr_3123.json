{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTQ4Nzg5", "number": 3123, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyMjo0MlrODfpo_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0OToxMVrODfrVOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTE0Njg3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyMjo0MlrOFpemcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo0NzoyNVrOFpmPTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzNzI5OA==", "bodyText": "[nit] May be marginally more readable to replace orElse(false) with isPresent()", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379037298", "createdAt": "2020-02-13T18:22:42Z", "author": {"login": "gjuggler"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -694,6 +698,16 @@ public void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBilli\n       cloudbilling = serviceAccountCloudbillingProvider.get();\n     } else {\n       cloudbilling = endUserCloudbillingProvider.get();\n+      try {\n+        if (!Optional.ofNullable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2MjQ0Ng==", "bodyText": "That's actually a different statement since isPresent() would return true if isOpen is set to false.\nBut probably not a good sign if that's not clear so I refactored it a little bit by pulling out a variable.", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379162446", "createdAt": "2020-02-13T22:47:25Z", "author": {"login": "ericsong"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -694,6 +698,16 @@ public void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBilli\n       cloudbilling = serviceAccountCloudbillingProvider.get();\n     } else {\n       cloudbilling = endUserCloudbillingProvider.get();\n+      try {\n+        if (!Optional.ofNullable(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzNzI5OA=="}, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTE2NTA4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyODowOFrOFpexzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyODowOFrOFpexzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA0MDIwNQ==", "bodyText": "I'm just sad for whoever (at Google?) decided that \"Cloudbilling\" shouldn't have a capital \"B\"... \ud83d\ude44", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379040205", "createdAt": "2020-02-13T18:28:08Z", "author": {"login": "gjuggler"}, "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "diffHunk": "@@ -246,6 +247,9 @@\n   @Autowired\n   private Provider<Cloudbilling> serviceAccountCloudbillingProvider;\n \n+  private static Cloudbilling endUserCloudbilling;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTM5NTg4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0MDoxOVrOFphFAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0MDoxOVrOFphFAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA3Nzg5MA==", "bodyText": "[opt] I tend to try to avoid abbreviations for var names in Java, though they're prevalent enough in our codebase I wouldn't block on this.", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379077890", "createdAt": "2020-02-13T19:40:19Z", "author": {"login": "gjuggler"}, "path": "api/src/test/java/org/pmiops/workbench/workspaces/WorkspacesControllerTest.java", "diffHunk": "@@ -787,22 +793,156 @@ public void testUpdateWorkspace() throws Exception {\n   }\n \n   @Test\n-  public void testUpdateWorkspace_freeTierBilling() throws Exception {\n+  public void testUpdateWorkspace_freeTierBilling_usesCorrectProvider() throws Exception {\n     Workspace ws = createWorkspace();\n     ws = workspacesController.createWorkspace(ws).getBody();\n \n-    verify(endUserCloudbillingProvider.get()).projects();\n-    verifyZeroInteractions(serviceAccountCloudbillingProvider.get());\n+    // Creating the workspace with a user provided billing account\n+    endUserCloudbilling = TestMockFactory.createMockedCloudbilling();\n+    serviceAccountCloudbilling = TestMockFactory.createMockedCloudbilling();\n \n     UpdateWorkspaceRequest request = new UpdateWorkspaceRequest();\n     ws.setBillingAccountName(workbenchConfig.billing.freeTierBillingAccountName());\n     request.setWorkspace(ws);\n     workspacesController.updateWorkspace(ws.getNamespace(), ws.getId(), request);\n \n-    verifyNoMoreInteractions(endUserCloudbillingProvider.get());\n+    verifyZeroInteractions(endUserCloudbillingProvider.get());\n     verify(serviceAccountCloudbillingProvider.get()).projects();\n   }\n \n+  @Test\n+  public void testUpdateWorkspace_freeTierBilling_noCreditsRemaining() throws Exception {\n+    Workspace ws = createWorkspace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTQyMzk1OnYy", "diffSide": "RIGHT", "path": "ui/src/app/components/breadcrumb.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOTo0OToxMVrOFphWeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1MzoyNVrOFpmYXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjM2MA==", "bodyText": "[No action] I haven't come up against the breadcrumb code before, so it's a little surprising to see some very workspace & billing specific logic showing up in a component that otherwise seems to be very generic. Could you imagine (not for this PR, or not anytime soon) a better home for this? Or is there a a strong reason that this logic belongs in this component?", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379082360", "createdAt": "2020-02-13T19:49:11Z", "author": {"login": "gjuggler"}, "path": "ui/src/app/components/breadcrumb.tsx", "diffHunk": "@@ -167,10 +167,13 @@ export const Breadcrumb = fp.flow(\n       if (!prevProps.workspace && this.props.workspace &&\n         this.props.workspace.billingStatus === BillingStatus.INACTIVE) {\n         this.setState({showInvalidBillingBanner: true});\n-      }\n-\n-      if (prevProps.workspace && !this.props.workspace) {\n+      } else if (prevProps.workspace && !this.props.workspace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NDc2Ng==", "bodyText": "Definitely a bit of a hack. It's mainly being used because it was the best React component I could find that is loaded on every workspace page.\nI had initially tried to put it in workspace-wrapper but that is still in angular.", "url": "https://github.com/all-of-us/workbench/pull/3123#discussion_r379164766", "createdAt": "2020-02-13T22:53:25Z", "author": {"login": "ericsong"}, "path": "ui/src/app/components/breadcrumb.tsx", "diffHunk": "@@ -167,10 +167,13 @@ export const Breadcrumb = fp.flow(\n       if (!prevProps.workspace && this.props.workspace &&\n         this.props.workspace.billingStatus === BillingStatus.INACTIVE) {\n         this.setState({showInvalidBillingBanner: true});\n-      }\n-\n-      if (prevProps.workspace && !this.props.workspace) {\n+      } else if (prevProps.workspace && !this.props.workspace) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA4MjM2MA=="}, "originalCommit": {"oid": "775a6b7f12308fb15688c1fccb3b786497656473"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3327, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}