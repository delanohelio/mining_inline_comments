{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODgxODcz", "number": 3964, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjozNTozNlrOEgLZeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjozNTozNlrOEgLZeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTc2NjM0OnYy", "diffSide": "RIGHT", "path": "api/src/main/webapp/static/initialize_notebook_runtime.sh", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjozNTozNlrOHM5o6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMjo0MjoxNVrOHM5wkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4OTMyMA==", "bodyText": "TOL: What do you think about include -e like -ex?", "url": "https://github.com/all-of-us/workbench/pull/3964#discussion_r483289320", "createdAt": "2020-09-03T22:35:36Z", "author": {"login": "aweng98"}, "path": "api/src/main/webapp/static/initialize_notebook_runtime.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+# Log all commands, logs are written to the Leo staging directory during startup\n+# and can be found via the Leo API's GetRuntimeResponse.asyncRuntimeFields.stagingBucket.\n+set -x", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31772571f1572b02028f232d1572c003ec9c526b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5MTI4MQ==", "bodyText": "It was a consideration, but in general we want to allow for fine grain control of when a failure in this script results in exiting non-zero. The net result of failing here is an opaque error on createRuntime, i.e. when you attempt to open a notebook. Arguably we should fail if wondershaper does not start correctly, but failure on the other commands would not be severe.", "url": "https://github.com/all-of-us/workbench/pull/3964#discussion_r483291281", "createdAt": "2020-09-03T22:42:15Z", "author": {"login": "calbach"}, "path": "api/src/main/webapp/static/initialize_notebook_runtime.sh", "diffHunk": "@@ -0,0 +1,23 @@\n+#!/bin/bash\n+\n+# Log all commands, logs are written to the Leo staging directory during startup\n+# and can be found via the Leo API's GetRuntimeResponse.asyncRuntimeFields.stagingBucket.\n+set -x", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI4OTMyMA=="}, "originalCommit": {"oid": "31772571f1572b02028f232d1572c003ec9c526b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2394, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}