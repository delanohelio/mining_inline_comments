{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTA4ODE1", "number": 3864, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo0MDozOFrOEV8q4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo0MDozOFrOEV8q4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDQ5NTY4OnYy", "diffSide": "RIGHT", "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortReviewControllerBQTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxODo0MDozOFrOG8_whg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNDozNzowN1rOG-7AJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMjM1OA==", "bodyText": "this could be moved to a method (maybe pass Participant Id) and called again", "url": "https://github.com/all-of-us/workbench/pull/3864#discussion_r466612358", "createdAt": "2020-08-06T18:40:38Z", "author": {"login": "NehaBroad"}, "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortReviewControllerBQTest.java", "diffHunk": "@@ -209,57 +207,47 @@ public void setUp() {\n     stubMockFirecloudGetWorkspaceAcl();\n \n     Gson gson = new Gson();\n-    cohortWithoutEHRData = new DbCohort();\n+    DbCohort cohortWithoutEHRData = new DbCohort();\n     cohortWithoutEHRData.setWorkspaceId(workspace.getWorkspaceId());\n     cohortWithoutEHRData.setCriteria(gson.toJson(SearchRequests.males()));\n     cohortWithoutEHRData = cohortDao.save(cohortWithoutEHRData);\n \n-    cohortWithEHRData = new DbCohort();\n+    DbCohort cohortWithEHRData = new DbCohort();\n     cohortWithEHRData.setWorkspaceId(workspace.getWorkspaceId());\n     cohortWithEHRData.setCriteria(gson.toJson(SearchRequests.malesWithEHRData()));\n     cohortWithEHRData = cohortDao.save(cohortWithEHRData);\n \n-    reviewWithoutEHRData =\n-        new DbCohortReview()\n-            .cdrVersionId(cdrVersion.getCdrVersionId())\n-            .matchedParticipantCount(212)\n-            .creationTime(new Timestamp(new Date().getTime()))\n-            .lastModifiedTime(new Timestamp(new Date().getTime()))\n-            .cohortId(cohortWithoutEHRData.getCohortId());\n-    reviewWithoutEHRData = cohortReviewDao.save(reviewWithoutEHRData);\n-\n-    DbParticipantCohortStatusKey key =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID)\n-            .cohortReviewId(reviewWithoutEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key));\n-\n-    DbParticipantCohortStatusKey key2 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID2)\n-            .cohortReviewId(reviewWithoutEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key2));\n-\n-    reviewWithEHRData =\n-        new DbCohortReview()\n-            .cdrVersionId(cdrVersion.getCdrVersionId())\n-            .matchedParticipantCount(212)\n-            .creationTime(new Timestamp(new Date().getTime()))\n-            .lastModifiedTime(new Timestamp(new Date().getTime()))\n-            .cohortId(cohortWithEHRData.getCohortId());\n-    reviewWithEHRData = cohortReviewDao.save(reviewWithEHRData);\n-\n-    DbParticipantCohortStatusKey key3 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID)\n-            .cohortReviewId(reviewWithEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key3));\n-\n-    DbParticipantCohortStatusKey key4 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID2)\n-            .cohortReviewId(reviewWithEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key4));\n+    reviewWithoutEHRData = createCohortReview(cohortWithoutEHRData);\n+\n+    participantCohortStatusDao.save(\n+        new DbParticipantCohortStatus()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76c4747185b64d39387de7b864d121521efa374a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODYzMTU4OQ==", "bodyText": "done.", "url": "https://github.com/all-of-us/workbench/pull/3864#discussion_r468631589", "createdAt": "2020-08-11T14:37:07Z", "author": {"login": "freemabd"}, "path": "api/src/bigquerytest/java/org/pmiops/workbench/api/CohortReviewControllerBQTest.java", "diffHunk": "@@ -209,57 +207,47 @@ public void setUp() {\n     stubMockFirecloudGetWorkspaceAcl();\n \n     Gson gson = new Gson();\n-    cohortWithoutEHRData = new DbCohort();\n+    DbCohort cohortWithoutEHRData = new DbCohort();\n     cohortWithoutEHRData.setWorkspaceId(workspace.getWorkspaceId());\n     cohortWithoutEHRData.setCriteria(gson.toJson(SearchRequests.males()));\n     cohortWithoutEHRData = cohortDao.save(cohortWithoutEHRData);\n \n-    cohortWithEHRData = new DbCohort();\n+    DbCohort cohortWithEHRData = new DbCohort();\n     cohortWithEHRData.setWorkspaceId(workspace.getWorkspaceId());\n     cohortWithEHRData.setCriteria(gson.toJson(SearchRequests.malesWithEHRData()));\n     cohortWithEHRData = cohortDao.save(cohortWithEHRData);\n \n-    reviewWithoutEHRData =\n-        new DbCohortReview()\n-            .cdrVersionId(cdrVersion.getCdrVersionId())\n-            .matchedParticipantCount(212)\n-            .creationTime(new Timestamp(new Date().getTime()))\n-            .lastModifiedTime(new Timestamp(new Date().getTime()))\n-            .cohortId(cohortWithoutEHRData.getCohortId());\n-    reviewWithoutEHRData = cohortReviewDao.save(reviewWithoutEHRData);\n-\n-    DbParticipantCohortStatusKey key =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID)\n-            .cohortReviewId(reviewWithoutEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key));\n-\n-    DbParticipantCohortStatusKey key2 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID2)\n-            .cohortReviewId(reviewWithoutEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key2));\n-\n-    reviewWithEHRData =\n-        new DbCohortReview()\n-            .cdrVersionId(cdrVersion.getCdrVersionId())\n-            .matchedParticipantCount(212)\n-            .creationTime(new Timestamp(new Date().getTime()))\n-            .lastModifiedTime(new Timestamp(new Date().getTime()))\n-            .cohortId(cohortWithEHRData.getCohortId());\n-    reviewWithEHRData = cohortReviewDao.save(reviewWithEHRData);\n-\n-    DbParticipantCohortStatusKey key3 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID)\n-            .cohortReviewId(reviewWithEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key3));\n-\n-    DbParticipantCohortStatusKey key4 =\n-        new DbParticipantCohortStatusKey()\n-            .participantId(PARTICIPANT_ID2)\n-            .cohortReviewId(reviewWithEHRData.getCohortReviewId());\n-    participantCohortStatusDao.save(new DbParticipantCohortStatus().participantKey(key4));\n+    reviewWithoutEHRData = createCohortReview(cohortWithoutEHRData);\n+\n+    participantCohortStatusDao.save(\n+        new DbParticipantCohortStatus()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjYxMjM1OA=="}, "originalCommit": {"oid": "76c4747185b64d39387de7b864d121521efa374a"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2510, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}