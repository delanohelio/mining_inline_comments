{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNzQ0MzUz", "number": 3658, "title": "[risk=no] Refactor docker-compose to leverage anchors", "bodyText": "Behavioral change:\n\nIn a few cases, this adds the GOOGLE_APPLICATION_CREDENTIALS. Based on manual testing of commands, this looks like it had no effect, so I'll prefer just making the configs consistent.\nRemove some unused services: mysql-cloud, cloud-sql-proxy. @freemabd in case you're aware of some reason we still need these\n\nManually tested:\n\nRan ./project.rb commands with coverage of the various docker-compose services\n\nFuture work:\n\nSeveral of these services are redundant and could be further merged / removed", "createdAt": "2020-06-10T23:00:44Z", "url": "https://github.com/all-of-us/workbench/pull/3658", "merged": true, "mergeCommit": {"oid": "6ffa0b4041753a6dc4e19c23bb444be2535e2192"}, "closed": true, "closedAt": "2020-06-11T22:17:19Z", "author": {"login": "calbach"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqBzZqgH2gAyNDMyNzQ0MzUzOmM1ZTU5ODJhYzY4MDY5NTEyYjE0OTJkMmZkMzczNDc3OTJhMDk0Yjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqR8NRgH2gAyNDMyNzQ0MzUzOjMxMTdiMDU1ZDJjZTE3ODVlNTYyOTZkOWEzMzg1YjM3ZjkwMWE1NTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/c5e5982ac68069512b1492d2fd37347792a094b8", "committedDate": "2020-06-10T22:56:57Z", "message": "Refactor docker-compose to leverage anchors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4ODY0MTA4", "url": "https://github.com/all-of-us/workbench/pull/3658#pullrequestreview-428864108", "createdAt": "2020-06-11T12:35:57Z", "commit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMjozNTo1N1rOGibJ6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzoxMTo0NlrOGicZIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc0OTY3NQ==", "bodyText": "Is the version change necessary for the other changes? If not, it might be nice to test that independently before or after.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438749675", "createdAt": "2020-06-11T12:35:57Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MDMyNg==", "bodyText": "I've started to use workbench-api instead of api for clarity, as pretty much everything has an api.\nAlso, it sounds like this anchor is more generic than just API tasks, so maybe there's a more generic name. Not a huge deal, but it can be difficult to get your bearings here if you haven't used docker-compose much.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438750326", "createdAt": "2020-06-11T12:37:09Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc1MTMzNQ==", "bodyText": "I do use cloud_sql_proxy locally  with the, but I've never done so from docker-compose. @freemabd set me up with a named account on the test db, and I've been doing the same command locally to connect to it in IntelliJ:\n./cloud_sql_proxy -instances all-of-us-workbench-test:us-central1:workbenchmaindb=tcp:0.0.0.0:3307 -credential_file=/Users/jaycarlton/repos/workbench/api/sa-key.json\n\nOf course, as written this wouldn't work locally, unless I want to mount /w.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438751335", "createdAt": "2020-06-11T12:39:03Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   api-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db/vars.env\n \n   cdr-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db-cdr\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-make-bq-tables:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db-cdr/vars.env\n+    env_file: db-cdr/vars.env\n \n   db-cloudsql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/cloudsql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n \n   db-local-mysql-import:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n+    <<: *api-defaults\n     working_dir: /w/db-cdr\n-    volumes:\n-      - gradle-cache:/.gradle\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-\n     entrypoint: [\"./generate-cdr/local-mysql-import.sh\"]\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/sa-key.json\n-    env_file:\n-      - db/vars.env\n-\n-  cloud-sql-proxy:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w\n-    volumes:\n-      - .:/w:cached\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n-    command: |\n-      cloud_sql_proxy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDU0MQ==", "bodyText": "can we name this workbench_app_db instead, since we're a multi-db project? I feel like we're starting to need a distinct name for the MySQL DB, like \"Workbench Backend DB\" or \"Application DB\". Though maybe it's obvious that we're not launching BQ databases inside Docker.\nI suppose that would break compatibility and require doc updates.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760541", "createdAt": "2020-06-11T12:55:37Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n+  env_file:\n+    - db/vars.env\n+  volumes:\n+    - src-sync:/w:nocopy\n+    - gradle-cache:/.gradle\n+    - ~/.config:/.config:cached\n+    - ~/.gsutil:/.gsutil:cached\n services:\n   scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2MDc4Mg==", "bodyText": "Can we simply include this line in the envs file?", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438760782", "createdAt": "2020-06-11T12:56:01Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -1,16 +1,22 @@\n-version: \"3\"\n+version: \"3.4\"\n+x-api-defaults: &api-defaults\n+  build:\n+    context: ./src/dev/server\n+  image: allofustest/workbench-dev-api:local\n+  user: ${UID}\n+  working_dir: /w/api\n+  environment:\n+    - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODEwMA==", "bodyText": "Maybe parameterize the port number and timeout?", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768100", "createdAt": "2020-06-11T13:08:49Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081\n       - 127.0.0.1:8001:8001\n   es-scripts:\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n+    <<: *api-defaults\n   db-scripts:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n     working_dir: /w/api/db\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n     entrypoint: ['with-uid.sh', 'wait-for-it', 'db:3306', '-t', '30', --]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2ODk3NA==", "bodyText": "Maybe make a named constant for the two different port numbers 8081 and 8001. If order is arbitrary, maybe list them alphabetically.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438768974", "createdAt": "2020-06-11T13:10:15Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults\n     depends_on:\n       - db\n-    build:\n-      context: ./src/dev/server\n-    image: allofustest/workbench-dev-api:local\n-    user: ${UID}\n-    working_dir: /w/api\n-    volumes:\n-      - src-sync:/w:nocopy\n-      - gradle-cache:/.gradle\n-      - ~/.config:/.config:cached\n-      - ~/.gsutil:/.gsutil:cached\n     command: ./project.rb start-api-and-incremental-build\n-    environment:\n-      - GOOGLE_APPLICATION_CREDENTIALS=/w/api/sa-key.json\n-    env_file:\n-      - db/vars.env\n     ports:\n       - 127.0.0.1:8081:8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc2OTk1Mg==", "bodyText": "I'm a bit surprised you need to use an anchor. I would've expected docker-compose to have a high-level concept for this kind of reuse.", "url": "https://github.com/all-of-us/workbench/pull/3658#discussion_r438769952", "createdAt": "2020-06-11T13:11:46Z", "author": {"login": "jaycarlton"}, "path": "api/docker-compose.yaml", "diffHunk": "@@ -20,165 +26,52 @@ services:\n     ports:\n       - 127.0.0.1:3306:3306\n   api:\n+    <<: *api-defaults", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5e5982ac68069512b1492d2fd37347792a094b8"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3117b055d2ce1785e56296d9a3385b37f901a558", "author": {"user": {"login": "calbach", "name": "CH Albach"}}, "url": "https://github.com/all-of-us/workbench/commit/3117b055d2ce1785e56296d9a3385b37f901a558", "committedDate": "2020-06-11T17:45:03Z", "message": "comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4854, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}