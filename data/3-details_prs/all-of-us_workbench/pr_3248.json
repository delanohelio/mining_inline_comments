{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MzQ0Mjg4", "number": 3248, "title": "[RW-4506][risk=no] keep elastic at pace with CB changes", "bodyText": "Not sure if Elastic will see the light of day in AoU, but I'm trying to keep it up to date with all CB changes. CB changes(feature flagged):\n\n\nCB can now search by Current Age, Age at Consent and Age at CDR.\n\n\n\nCB graphs will allow you to refresh graphs based on Age Range(Current, Consent or CDR), Gender or Sex at Birth and Race.", "createdAt": "2020-03-12T16:32:11Z", "url": "https://github.com/all-of-us/workbench/pull/3248", "merged": true, "mergeCommit": {"oid": "e013e2d395679e232324c4a5a6addb47b65eacaf"}, "closed": true, "closedAt": "2020-03-18T16:21:29Z", "author": {"login": "freemabd"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM-n6cgH2gAyMzg3MzQ0Mjg4Ojk1OGNmYmIxYjE3MDBiODQyN2ZkN2Q0ZTMyNzc0ZGEzM2QzM2ZjODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO4oBMgH2gAyMzg3MzQ0Mjg4OjhkYmI4ZDljNDRiOTRjYWViNzA0NTRjMmM1MTYwMDJjN2JmNWI3OGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "958cfbb1b1700b8427fd7d4e32774da33d33fc83", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/958cfbb1b1700b8427fd7d4e32774da33d33fc83", "committedDate": "2020-03-12T16:50:53Z", "message": "RW-4506 added sex at birth, age at consent and age at cdr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/b076ec4849272d4e1979211d6a2edbdad843dfd4", "committedDate": "2020-03-12T16:50:53Z", "message": "RW-4506 added sex at birth, age at consent and age at cdr"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "31776f93414c549e2f185892fafbeb1673032b6e", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/31776f93414c549e2f185892fafbeb1673032b6e", "committedDate": "2020-03-12T16:36:48Z", "message": "RW-4506 added sex at birth, age at consent and age at cdr"}, "afterCommit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/b076ec4849272d4e1979211d6a2edbdad843dfd4", "committedDate": "2020-03-12T16:50:53Z", "message": "RW-4506 added sex at birth, age at consent and age at cdr"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NTQyMjY5", "url": "https://github.com/all-of-us/workbench/pull/3248#pullrequestreview-376542269", "createdAt": "2020-03-18T03:30:20Z", "commit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMzozMDoyMFrOF31O2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMzozNjozOFrOF31UgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4ODE1Mw==", "bodyText": "nit: fix newline", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394088153", "createdAt": "2020-03-18T03:30:20Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/elasticsearch/AggregationUtils.java", "diffHunk": "@@ -10,50 +10,64 @@\n import org.elasticsearch.search.aggregations.bucket.range.ParsedDateRange;\n import org.elasticsearch.search.aggregations.bucket.range.Range;\n import org.elasticsearch.search.aggregations.bucket.terms.Terms;\n+import org.elasticsearch.search.aggregations.bucket.terms.TermsAggregationBuilder;\n+import org.pmiops.workbench.model.AgeType;\n import org.pmiops.workbench.model.DemoChartInfo;\n+import org.pmiops.workbench.model.GenderOrSexType;\n \n public class AggregationUtils {\n \n   public static final String RANGE_18_44 = \"18-44\";\n   public static final String RANGE_45_64 = \"45-64\";\n   public static final String RANGE_GT_65 = \"65\";\n   public static final String DATE = \"d_\";\n-  public static final String GENDER = \"g_\";\n+  public static final String GENDER_OR_SEX = \"g_or_s_\";\n   public static final String RACE = \"r_\";\n \n   /**\n    * Build aggregations for demographic charting based on date range, gender and race. The bucket\n    * aggregations compute and return the number of documents that \"fell into\" each bucket.\n    */\n-  public static AggregationBuilder buildDemoChartAggregation(String ageRange) {\n+  public static AggregationBuilder buildDemoChartAggregation(\n+      GenderOrSexType genderOrSexType, AgeType ageType, String ageRange) {\n     String[] ages = ageRange.split(\"-\");\n-    LocalDate start = null;\n-    // use the low end of the age range to calculate the end of the date range\n-    LocalDate end = ElasticUtils.todayMinusYears(Integer.parseInt(ages[0]));\n-    if (ages.length > 1) {\n-      // use high end of the age range to calculate the start of the date range\n-      // need to add 1 year to adjust the start date to beginning of age range\n-      start = ElasticUtils.todayMinusYears(Integer.parseInt(ages[1]) + 1);\n-    }\n+    // use Integer values of age ranges when calculating age at consent or age at cdr\n+    Integer lo = Integer.valueOf(ages[0]);\n+    Integer hi = (ages.length > 1) ? Integer.valueOf(ages[1]) : null;\n+\n+    // use high endDate of the age range to calculate the startDate of the date range\n+    // need to add 1 year to adjust the startDate date to beginning of age range\n+    LocalDate startDate = (hi != null) ? ElasticUtils.todayMinusYears(hi + 1) : null;\n+    // use the low endDate of the age range to calculate the endDate of the date range\n+    // when calculating age from date of birth\n+    LocalDate endDate = ElasticUtils.todayMinusYears(lo);\n \n-    // Added order to gender and race buckets. Therefore the UI code can expect consistent results\n-    // between BQ(sql ordered by gender, race, age) and elastic\n-    return AggregationBuilders.dateRange(DATE + ageRange)\n-        .field(\"birth_datetime\")\n-        .format(\"yyyy-MM-dd\")\n-        .addRange((start == null) ? null : start.toString(), end.toString())\n-        .subAggregation(\n-            AggregationBuilders.terms(GENDER + ageRange)\n-                .field(\"gender_concept_name\")\n-                .order(BucketOrder.key(true))\n-                .subAggregation(\n-                    AggregationBuilders.terms(RACE + ageRange)\n-                        .field(\"race_concept_name\")\n-                        .order(BucketOrder.key(true))\n-                        // This eliminates the race buckets with 0 counts. Without this param\n-                        // elastic\n-                        // returns all race buckets regardless of count.\n-                        .minDocCount(1)));\n+    boolean isGender = GenderOrSexType.GENDER.equals(genderOrSexType);\n+    boolean isAgeAtConsent = AgeType.AGE_AT_CONSENT.equals(ageType);\n+    // Added order to gender/sex and race buckets. Therefore the UI code can expect consistent\n+    // results\n+    // between BQ(sql ordered by gender/sex, race, age) and elastic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTI0OQ==", "bodyText": "Hm - did this change? Or was this a bug?", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394089249", "createdAt": "2020-03-18T03:35:04Z", "author": {"login": "calbach"}, "path": "api/src/test/java/org/pmiops/workbench/elasticsearch/ElasticFiltersTest.java", "diffHunk": "@@ -925,18 +927,50 @@ public void testAgeQuery() {\n             new SearchRequest()\n                 .addIncludesItem(\n                     new SearchGroup()\n-                        .addItemsItem(new SearchGroupItem().addSearchParametersItem(ethParam))));\n+                        .addItemsItem(new SearchGroupItem().addSearchParametersItem(ageParam))));\n     BoolQueryBuilder ageBuilder =\n         QueryBuilders.boolQuery()\n             .filter(QueryBuilders.termQuery(\"is_deceased\", false))\n             .filter(\n                 QueryBuilders.rangeQuery(\"birth_datetime\")\n-                    .gt(left)\n+                    .gte(left)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA4OTYwMQ==", "bodyText": "Owch. Will check for an update on synthetic data this week. We need to be able to rerun the latest curation pipeline at a bare minimum even if we can't easily make data improvements yet.", "url": "https://github.com/all-of-us/workbench/pull/3248#discussion_r394089601", "createdAt": "2020-03-18T03:36:38Z", "author": {"login": "calbach"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/elastic/ElasticSearchIndexer.java", "diffHunk": "@@ -306,9 +306,11 @@ private void createIndex(CommandLine opts) throws IOException, InterruptedExcept\n   }\n \n   private String getPersonBigQuerySQL(String bqDataset, int inverseProb) throws IOException {\n+    // Synth dataset doesn't contain sex_at_birth, so we use gender as a fix", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b076ec4849272d4e1979211d6a2edbdad843dfd4"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dbb8d9c44b94caeb70454c2c516002c7bf5b78c", "author": {"user": {"login": "freemabd", "name": "Brian Freeman"}}, "url": "https://github.com/all-of-us/workbench/commit/8dbb8d9c44b94caeb70454c2c516002c7bf5b78c", "committedDate": "2020-03-18T14:59:25Z", "message": "RW-4506 remove newline on comment."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3465, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}