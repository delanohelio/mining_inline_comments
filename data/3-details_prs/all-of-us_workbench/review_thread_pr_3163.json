{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTAxNTg1", "number": 3163, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODowMzozMFrODh9vSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODo1NTowNlrODh-n1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQxMTI5OnYy", "diffSide": "LEFT", "path": "api/src/main/java/org/pmiops/workbench/config/WebMvcConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODowMzozMFrOFs_uHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODoxMjo0MlrOFs_9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyNTY2Mg==", "bodyText": "questions is RequestTimeMetricInterceptor just a new rename for  ElapsedTimeDistributionInterceptor ? i cannot see it being removed as a file in this PR.", "url": "https://github.com/all-of-us/workbench/pull/3163#discussion_r382725662", "createdAt": "2020-02-21T18:03:30Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/config/WebMvcConfig.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.pmiops.workbench.interceptors.CloudTaskInterceptor;\n import org.pmiops.workbench.interceptors.CorsInterceptor;\n import org.pmiops.workbench.interceptors.CronInterceptor;\n-import org.pmiops.workbench.interceptors.ElapsedTimeDistributionInterceptor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a41098f39b07de915a08390bb5b1484991c7f5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyOTY2Mg==", "bodyText": "Good catch. Somehow I wound up adding instead of renaming.", "url": "https://github.com/all-of-us/workbench/pull/3163#discussion_r382729662", "createdAt": "2020-02-21T18:12:42Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/config/WebMvcConfig.java", "diffHunk": "@@ -9,7 +9,7 @@\n import org.pmiops.workbench.interceptors.CloudTaskInterceptor;\n import org.pmiops.workbench.interceptors.CorsInterceptor;\n import org.pmiops.workbench.interceptors.CronInterceptor;\n-import org.pmiops.workbench.interceptors.ElapsedTimeDistributionInterceptor;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyNTY2Mg=="}, "originalCommit": {"oid": "90a41098f39b07de915a08390bb5b1484991c7f5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTU1NjA3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/interceptors/RequestTimeMetricInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODo1NTowNlrOFtBKKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODo1NTowNlrOFtBKKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0OTIyNw==", "bodyText": "Also it will be good to  add comments to explain whats happening in this method", "url": "https://github.com/all-of-us/workbench/pull/3163#discussion_r382749227", "createdAt": "2020-02-21T18:55:06Z", "author": {"login": "NehaBroad"}, "path": "api/src/main/java/org/pmiops/workbench/interceptors/RequestTimeMetricInterceptor.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.pmiops.workbench.interceptors;\n+\n+import com.google.api.client.http.HttpMethods;\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.Optional;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.pmiops.workbench.monitoring.LogsBasedMetricService;\n+import org.pmiops.workbench.monitoring.MeasurementBundle;\n+import org.pmiops.workbench.monitoring.labels.MetricLabel;\n+import org.pmiops.workbench.monitoring.views.DistributionMetric;\n+import org.springframework.stereotype.Service;\n+import org.springframework.web.method.HandlerMethod;\n+import org.springframework.web.servlet.ModelAndView;\n+import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;\n+\n+@Service\n+public class RequestTimeMetricInterceptor extends HandlerInterceptorAdapter {\n+\n+  private final LogsBasedMetricService logsBasedMetricService;\n+  private Clock clock;\n+\n+  public RequestTimeMetricInterceptor(LogsBasedMetricService logsBasedMetricService, Clock clock) {\n+    this.logsBasedMetricService = logsBasedMetricService;\n+    this.clock = clock;\n+  }\n+\n+  @Override\n+  public boolean preHandle(\n+      HttpServletRequest request, HttpServletResponse response, Object handler) {\n+    if (shouldSkip(request, handler)) {\n+      return true;\n+    }\n+    request.setAttribute(RequestAttribute.START_INSTANT.toString(), clock.instant());\n+    return true;\n+  }\n+\n+  private boolean shouldSkip(HttpServletRequest request, Object handler) {\n+    return (request.getMethod().equals(HttpMethods.OPTIONS))\n+        || (!(handler instanceof HandlerMethod));\n+  }\n+\n+  @Override\n+  public void postHandle(\n+      HttpServletRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90a41098f39b07de915a08390bb5b1484991c7f5"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3380, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}