{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2OTg0MDk2", "number": 3040, "title": "[RW-4277][risk=low] Users can set workspace billing account back to free tier", "bodyText": "Description:\nFollow up to RW-3175.\nThe additional complexity around setting workspaces to the free tier billing account is that the user does not have sufficient permissions to make the call. Instead, we use the service account's credentials. Most of the logic is around choosing the correct Cloudbilling API depending on the incoming request.\n\nPR checklist\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-01-24T19:35:38Z", "url": "https://github.com/all-of-us/workbench/pull/3040", "merged": true, "mergeCommit": {"oid": "493cf02523762a18af9ae279a57c8041452866e5"}, "closed": true, "closedAt": "2020-01-30T18:22:46Z", "author": {"login": "ericsong"}, "timelineItems": {"totalCount": 63, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6B38kgH2gAyMzY2OTg0MDk2OjRlNzc4YzdkYTczNDlkNjg2MGRlOTEyMzc1ZDQ3MzMzZGFhODZmMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_eDZMgFqTM1MTAwODc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4e778c7da7349d6860de912375d47333daa86f31", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/4e778c7da7349d6860de912375d47333daa86f31", "committedDate": "2020-01-13T19:53:33Z", "message": "WIP: can make billing list call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fdf233bc4475e01fed6b79fd7c30ff05408631f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/0fdf233bc4475e01fed6b79fd7c30ff05408631f", "committedDate": "2020-01-14T21:34:12Z", "message": "WIP: add dropdown and text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39660aec7e8e7c37dd9ebbffecb4761f867938ff", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/39660aec7e8e7c37dd9ebbffecb4761f867938ff", "committedDate": "2020-01-14T22:27:09Z", "message": "WIP - dynamically load billing accounts in dropdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56a37d1dd3201a86e9a87b8837cae1bbb9d025b9", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/56a37d1dd3201a86e9a87b8837cae1bbb9d025b9", "committedDate": "2020-01-15T17:18:22Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-3175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a8217338f17dce46a36d3b6f5caa7b986613a5f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/6a8217338f17dce46a36d3b6f5caa7b986613a5f", "committedDate": "2020-01-15T20:10:04Z", "message": "fix compilation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "653bed1a58bdfb713c6dedaf16967b8f45622f1a", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/653bed1a58bdfb713c6dedaf16967b8f45622f1a", "committedDate": "2020-01-16T19:37:14Z", "message": "make list billing accounts call from backend"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9e5ba9448bb7cef069fee6ff375b2a514c686d6", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/b9e5ba9448bb7cef069fee6ff375b2a514c686d6", "committedDate": "2020-01-16T19:44:46Z", "message": "add billingAccount to WS api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7bf93bf11313ba7b5277b02b0997d1e365ea3c", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/7e7bf93bf11313ba7b5277b02b0997d1e365ea3c", "committedDate": "2020-01-16T19:51:05Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-3175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a563de70458e0b3ccd7ddfa01a0fb46b439307c1", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/a563de70458e0b3ccd7ddfa01a0fb46b439307c1", "committedDate": "2020-01-16T23:23:09Z", "message": "add field for billing account name to workspace. drop billing account type in favor of account name comparison"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43362f362a5fc89b75a77045ed3ec3dd8eda25bc", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/43362f362a5fc89b75a77045ed3ec3dd8eda25bc", "committedDate": "2020-01-16T23:44:21Z", "message": "send billing account to front end and pick correct one in dropdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee2bc4ea34d11959af6f4dfdc60a914c6efec366", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/ee2bc4ea34d11959af6f4dfdc60a914c6efec366", "committedDate": "2020-01-17T17:56:16Z", "message": "can select billing account in UI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3444331744ffe2c9a7866c09ff2ec8350ccf2085", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/3444331744ffe2c9a7866c09ff2ec8350ccf2085", "committedDate": "2020-01-17T18:17:06Z", "message": "add front end validation for billing account"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0575c9194b2749e09b58c76d4cda8a05ed7d8e36", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/0575c9194b2749e09b58c76d4cda8a05ed7d8e36", "committedDate": "2020-01-17T23:01:13Z", "message": "grant ownership to user on billing project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d96a92106467bf59305b4e36507e7f13cb2ccba", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/7d96a92106467bf59305b4e36507e7f13cb2ccba", "committedDate": "2020-01-22T18:21:21Z", "message": "merging - WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b715a2263985280c7539b71b2b14f5c376a29f15", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/b715a2263985280c7539b71b2b14f5c376a29f15", "committedDate": "2020-01-23T01:11:28Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eab84bb8334be6d7700344e7fb7d579eba8c3001", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/eab84bb8334be6d7700344e7fb7d579eba8c3001", "committedDate": "2020-01-23T05:14:35Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2587e5ad3f3b78740c7ea870af9c3b2b316c63b", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/c2587e5ad3f3b78740c7ea870af9c3b2b316c63b", "committedDate": "2020-01-23T06:19:15Z", "message": "super cool spy test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c332e05615c7fd771c120d1fbfc05a6c9cfac3cb", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/c332e05615c7fd771c120d1fbfc05a6c9cfac3cb", "committedDate": "2020-01-23T06:53:18Z", "message": "add remaining tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3910cfdb967f889bbbfd82667abe5f4ccdc8630a", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/3910cfdb967f889bbbfd82667abe5f4ccdc8630a", "committedDate": "2020-01-23T15:55:46Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-3175"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e80365d8ce3d1098adbf61342e5a15a0378470c", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/5e80365d8ce3d1098adbf61342e5a15a0378470c", "committedDate": "2020-01-23T16:11:42Z", "message": "restore billing account name code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b391b9b7c8345dce04463f275a498f439d34c574", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/b391b9b7c8345dce04463f275a498f439d34c574", "committedDate": "2020-01-23T16:36:48Z", "message": "actually execute update call. works manually"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dfdf81829745ba862240220b01a4620c0f539b6", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/6dfdf81829745ba862240220b01a4620c0f539b6", "committedDate": "2020-01-23T18:54:52Z", "message": "grab billing info on workspace edit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c0c086df427750ec753025f57dd1791af12552", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/70c0c086df427750ec753025f57dd1791af12552", "committedDate": "2020-01-23T18:58:49Z", "message": "fix changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec1e0379fe0302f83ec370fbda5cd21a81501d1a", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/ec1e0379fe0302f83ec370fbda5cd21a81501d1a", "committedDate": "2020-01-23T20:06:05Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1b20fd06b9f92cf76b44d4b39a1f9910c3dd505", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/c1b20fd06b9f92cf76b44d4b39a1f9910c3dd505", "committedDate": "2020-01-23T20:48:30Z", "message": "fix UI tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8843dfe70d7eba04ef7f8c6914f2803c01ef81d8", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/8843dfe70d7eba04ef7f8c6914f2803c01ef81d8", "committedDate": "2020-01-23T22:10:15Z", "message": "add feature flag gating"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbd0076675d2bf7537d19ddf07fb61b587237622", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/fbd0076675d2bf7537d19ddf07fb61b587237622", "committedDate": "2020-01-23T22:12:18Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8bdcbd48aaf4ef94a3d1c3c51bce34ce6e0076", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/ba8bdcbd48aaf4ef94a3d1c3c51bce34ce6e0076", "committedDate": "2020-01-23T22:15:04Z", "message": "ui lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da5eef924a76605fe19c8e6164e0b79107a73849", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/da5eef924a76605fe19c8e6164e0b79107a73849", "committedDate": "2020-01-23T22:42:01Z", "message": "fix cloud api bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2fea88084d43f33c7cd8e2259b0819985d91f58", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/f2fea88084d43f33c7cd8e2259b0819985d91f58", "committedDate": "2020-01-23T22:42:20Z", "message": "prefix free tier back fill with billingAccounts/"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "837ed2b37dacebfcdbaa6f38b67bd9df07d2db8b", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/837ed2b37dacebfcdbaa6f38b67bd9df07d2db8b", "committedDate": "2020-01-23T23:30:44Z", "message": "fix prefix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33d3adfbe6b096f1fce685a61708bc84f193c648", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/33d3adfbe6b096f1fce685a61708bc84f193c648", "committedDate": "2020-01-23T23:42:19Z", "message": "fix api tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb2af41abfed0cac03ce02e03ad780548f3c40d", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/5cb2af41abfed0cac03ce02e03ad780548f3c40d", "committedDate": "2020-01-23T23:59:13Z", "message": "fix UI tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f5017fb481a7d45ccebf79f5098b4cc4648ce1f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/2f5017fb481a7d45ccebf79f5098b4cc4648ce1f", "committedDate": "2020-01-24T00:20:58Z", "message": "add retryer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fa89be9613c68f122e39e246458262a46ee9eff", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/2fa89be9613c68f122e39e246458262a46ee9eff", "committedDate": "2020-01-24T00:25:09Z", "message": "comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c9b03b3234059dcbbeace44d1ee59ba561c312b", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/1c9b03b3234059dcbbeace44d1ee59ba561c312b", "committedDate": "2020-01-24T00:25:41Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22bf17fde17485df992c4066f2028a3ac9850db7", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/22bf17fde17485df992c4066f2028a3ac9850db7", "committedDate": "2020-01-24T05:06:12Z", "message": "ui touch ups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcb09156164e0a8fa4adc098e4f3e07a4249c878", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/bcb09156164e0a8fa4adc098e4f3e07a4249c878", "committedDate": "2020-01-24T05:37:03Z", "message": "reset config local"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8059fbf57a79d320c427d672971477bee8b96c50", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/8059fbf57a79d320c427d672971477bee8b96c50", "committedDate": "2020-01-24T19:34:39Z", "message": "WIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d58f0c8ae959c787bc1d3d8f5f933b51a4a279d", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/0d58f0c8ae959c787bc1d3d8f5f933b51a4a279d", "committedDate": "2020-01-24T22:46:10Z", "message": "add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6a5ad9558fd6dc971fe773e220edb40a553e315", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/f6a5ad9558fd6dc971fe773e220edb40a553e315", "committedDate": "2020-01-24T23:01:10Z", "message": "fix some bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b576105ad1211d549261ade0a089ff04b1d839a", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/5b576105ad1211d549261ade0a089ff04b1d839a", "committedDate": "2020-01-24T23:28:44Z", "message": "add utility for prefixing free tier account id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65d1a8ed2831881ac513bc3c863d1bdb6e26eb1e", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/65d1a8ed2831881ac513bc3c863d1bdb6e26eb1e", "committedDate": "2020-01-24T23:29:11Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b06b147d731543fed526895dbadd7aa7761b2d3", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/3b06b147d731543fed526895dbadd7aa7761b2d3", "committedDate": "2020-01-24T23:45:36Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb829a719287a2c539add9d3e2b7e0bce655617c", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/eb829a719287a2c539add9d3e2b7e0bce655617c", "committedDate": "2020-01-25T00:06:46Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6019cdc4a1accd019299b73df2ca900fb6b0b5", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/6a6019cdc4a1accd019299b73df2ca900fb6b0b5", "committedDate": "2020-01-25T00:19:45Z", "message": "refactor google api config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd898f0f7e346441d97ce15d27f2b0bda45790b", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/1fd898f0f7e346441d97ce15d27f2b0bda45790b", "committedDate": "2020-01-25T00:22:43Z", "message": "no null"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTQ2MTIx", "url": "https://github.com/all-of-us/workbench/pull/3040#pullrequestreview-348946121", "createdAt": "2020-01-27T20:16:17Z", "commit": {"oid": "1fd898f0f7e346441d97ce15d27f2b0bda45790b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDoxNjoxN1rOFiQHhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QyMDoxODozMFrOFiQLdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ1OTk3Mw==", "bodyText": "Why the PROXY language here? Elsewhere we have END_USER_FOO as a token which seems accurate to me. Is there a semantic difference?", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r371459973", "createdAt": "2020-01-27T20:16:17Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "diffHunk": "@@ -57,7 +60,7 @@ public UserController(\n       Provider<WorkbenchConfig> configProvider,\n       FireCloudService fireCloudService,\n       UserService userService,\n-      Provider<Cloudbilling> cloudBillingProvider) {\n+      @Qualifier(USER_PROXY_CLOUD_BILLING) Provider<Cloudbilling> cloudBillingProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd898f0f7e346441d97ce15d27f2b0bda45790b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MDgxMQ==", "bodyText": "nit: existing, but why DEFAULT here? Why not just leave blank?", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r371460811", "createdAt": "2020-01-27T20:18:08Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "diffHunk": "@@ -18,22 +19,42 @@\n @Configuration\n public class GoogleApisConfig {\n \n-  @Bean\n+  public static final String USER_PROXY_CLOUD_BILLING = \"USER_PROXY_CLOUD_BILLING\";\n+  public static final String SERVICE_ACCOUNT_CLOUD_BILLING = \"SERVICE_ACCOUNT_CLOUD_BILLING\";\n+\n+  @Bean(USER_PROXY_CLOUD_BILLING)\n   @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n-  public Cloudbilling googleCloudBillingApi(\n+  public Cloudbilling userProxyGoogleCloudbillingApi(\n       UserAuthentication userAuthentication,\n       JsonFactory jsonFactory,\n       Provider<WorkbenchConfig> workbenchConfigProvider) {\n-    GoogleCredential credential =\n-        new GoogleCredential()\n-            .setAccessToken(userAuthentication.getCredentials())\n-            .createScoped(\n-                Collections.singletonList(\"https://www.googleapis.com/auth/cloud-platform\"));\n+    return createCloudbillingClient(\n+        userAuthentication.getCredentials(), jsonFactory, workbenchConfigProvider.get());\n+  }\n+\n+  @Bean(SERVICE_ACCOUNT_CLOUD_BILLING)\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd898f0f7e346441d97ce15d27f2b0bda45790b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ2MDk4MA==", "bodyText": "nit: Per other  PR comments, would just let the exception propagate", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r371460980", "createdAt": "2020-01-27T20:18:30Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "diffHunk": "@@ -18,22 +19,42 @@\n @Configuration\n public class GoogleApisConfig {\n \n-  @Bean\n+  public static final String USER_PROXY_CLOUD_BILLING = \"USER_PROXY_CLOUD_BILLING\";\n+  public static final String SERVICE_ACCOUNT_CLOUD_BILLING = \"SERVICE_ACCOUNT_CLOUD_BILLING\";\n+\n+  @Bean(USER_PROXY_CLOUD_BILLING)\n   @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n-  public Cloudbilling googleCloudBillingApi(\n+  public Cloudbilling userProxyGoogleCloudbillingApi(\n       UserAuthentication userAuthentication,\n       JsonFactory jsonFactory,\n       Provider<WorkbenchConfig> workbenchConfigProvider) {\n-    GoogleCredential credential =\n-        new GoogleCredential()\n-            .setAccessToken(userAuthentication.getCredentials())\n-            .createScoped(\n-                Collections.singletonList(\"https://www.googleapis.com/auth/cloud-platform\"));\n+    return createCloudbillingClient(\n+        userAuthentication.getCredentials(), jsonFactory, workbenchConfigProvider.get());\n+  }\n+\n+  @Bean(SERVICE_ACCOUNT_CLOUD_BILLING)\n+  @RequestScope(proxyMode = ScopedProxyMode.DEFAULT)\n+  public Cloudbilling serviceAccountGoogleCloudbillingApi(\n+      JsonFactory jsonFactory, Provider<WorkbenchConfig> workbenchConfigProvider) {\n+    String accessToken;\n+    try {\n+      accessToken =\n+          ServiceAccounts.getScopedServiceAccessToken(\n+              Collections.singletonList(\"https://www.googleapis.com/auth/cloud-platform\"));\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Could not create service account access token for cloud billing\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd898f0f7e346441d97ce15d27f2b0bda45790b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a356b996bd3f74c6947a526ec93ec7b48cf0be8f", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/a356b996bd3f74c6947a526ec93ec7b48cf0be8f", "committedDate": "2020-01-28T18:00:18Z", "message": "merge master (many conflicts)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2134ba29b79991778f17a3b5cf55324849295742", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/2134ba29b79991778f17a3b5cf55324849295742", "committedDate": "2020-01-28T18:01:20Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f573ef20aaac8636b4d7c626ed258c01553691ac", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/f573ef20aaac8636b4d7c626ed258c01553691ac", "committedDate": "2020-01-28T18:03:32Z", "message": "lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a731f94faf59522ada0f9bddcb6e8ccacbd08545", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/a731f94faf59522ada0f9bddcb6e8ccacbd08545", "committedDate": "2020-01-28T18:05:32Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-4277"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00245e03361b8d6532b4cfae4edb7431971a0045", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/00245e03361b8d6532b4cfae4edb7431971a0045", "committedDate": "2020-01-28T18:15:41Z", "message": "stuff missed in the merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43b5a48c4cbdad743549bd661723093be593c2de", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/43b5a48c4cbdad743549bd661723093be593c2de", "committedDate": "2020-01-28T18:26:23Z", "message": "userProxy -> endUser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "664cfcc6e517c0d426ad2c4c6ac1be1c51992aa3", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/664cfcc6e517c0d426ad2c4c6ac1be1c51992aa3", "committedDate": "2020-01-28T18:27:04Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f8f45c701f0e6acf3c2eb47cec94a039ccab7ac", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/8f8f45c701f0e6acf3c2eb47cec94a039ccab7ac", "committedDate": "2020-01-28T18:52:16Z", "message": "small rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/46a9cf3a34b5db8bb8acec5552d3b2a99528a15e", "committedDate": "2020-01-28T18:54:49Z", "message": "add request scope"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5ODAxMTk0", "url": "https://github.com/all-of-us/workbench/pull/3040#pullrequestreview-349801194", "createdAt": "2020-01-29T00:42:17Z", "commit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDo0MjoxN1rOFi5biw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMjozNjowN1rOFi7BwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzNjg0Mw==", "bodyText": "What's the reason for this change? If it was necessary, it deserves  a comment here.", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372136843", "createdAt": "2020-01-29T00:42:17Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/auth/ServiceAccounts.java", "diffHunk": "@@ -39,33 +39,36 @@\n    * @return\n    * @throws IOException\n    */\n-  private static GoogleCredentials getScopedServiceCredentials(List<String> scopes)\n+  public static GoogleCredentials getScopedServiceCredentials(List<String> scopes)\n       throws IOException {\n \n+    GoogleCredentials credentials;\n     if (SystemProperty.environment.value().equals(SystemProperty.Environment.Value.Development)) {\n       // When running in a local dev environment, we simply get the application default credentials.\n       //\n       // TODO(gjuggler): it may be possible to remove this branch point altogether, and use the\n       // AppIdentityService approach even when running a local app engine server. I tested this\n       // out locally and it *seemed* to work, but it needs a bit more careful vetting.\n-      return GoogleCredentials.getApplicationDefault().createScoped(scopes);\n+      credentials = GoogleCredentials.getApplicationDefault().createScoped(scopes);\n     } else {\n       AppIdentityService appIdentityService = AppIdentityServiceFactory.getAppIdentityService();\n-      return AppEngineCredentials.newBuilder()\n-          .setScopes(scopes)\n-          .setAppIdentityService(appIdentityService)\n-          .build();\n+      credentials =\n+          AppEngineCredentials.newBuilder()\n+              .setScopes(scopes)\n+              .setAppIdentityService(appIdentityService)\n+              .build();\n     }\n+\n+    credentials.refreshIfExpired();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzNjk1OA==", "bodyText": "nit: cloud-billing is a tighter scope and should probably be preferred here", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372136958", "createdAt": "2020-01-29T00:42:50Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/billing/GoogleApisConfig.java", "diffHunk": "@@ -36,4 +40,21 @@ public Cloudbilling googleCloudBillingApi(\n         .setApplicationName(workbenchConfigProvider.get().server.projectId)\n         .build();\n   }\n+\n+  @Bean(SERVICE_ACCOUNT_CLOUD_BILLING)\n+  @RequestScope\n+  public Cloudbilling serviceAccountGoogleCloudbilling(\n+      JsonFactory jsonFactory, Provider<WorkbenchConfig> workbenchConfigProvider)\n+      throws IOException, GeneralSecurityException {\n+    GoogleCredentials credentials =\n+        ServiceAccounts.getScopedServiceCredentials(\n+            Collections.singletonList(\"https://www.googleapis.com/auth/cloud-platform\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEzNzc2NQ==", "bodyText": "Why would we want to retry a 403? I think I see the reason below, but would add a comment here for clarity", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372137765", "createdAt": "2020-01-29T00:46:05Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -645,6 +668,61 @@ public boolean maybeDeleteRecentWorkspace(long workspaceId) {\n     }\n   }\n \n+  private Retryer<ProjectBillingInfo> cloudBillingRetryer =\n+      RetryerBuilder.<ProjectBillingInfo>newBuilder()\n+          .retryIfException(\n+              e ->\n+                  e instanceof GoogleJsonResponseException\n+                      && ((GoogleJsonResponseException) e).getStatusCode() == 403)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MDYxMw==", "bodyText": "nit: I'd prefer ServerException to a RuntimeException, here and below", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372160613", "createdAt": "2020-01-29T02:24:14Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -645,6 +668,61 @@ public boolean maybeDeleteRecentWorkspace(long workspaceId) {\n     }\n   }\n \n+  private Retryer<ProjectBillingInfo> cloudBillingRetryer =\n+      RetryerBuilder.<ProjectBillingInfo>newBuilder()\n+          .retryIfException(\n+              e ->\n+                  e instanceof GoogleJsonResponseException\n+                      && ((GoogleJsonResponseException) e).getStatusCode() == 403)\n+          .withWaitStrategy(WaitStrategies.exponentialWait())\n+          .withStopStrategy(StopStrategies.stopAfterDelay(60, TimeUnit.SECONDS))\n+          .build();\n+\n+  @Override\n+  public void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBillingAccountName) {\n+    if (!workbenchConfigProvider.get().featureFlags.enableBillingLockout\n+        || newBillingAccountName.equals(workspace.getBillingAccountName())) {\n+      return;\n+    }\n+\n+    Cloudbilling cloudbilling;\n+    if (newBillingAccountName.equals(\n+        workbenchConfigProvider.get().billing.freeTierBillingAccountName())) {\n+      cloudbilling = serviceAccountCloudbillingProvider.get();\n+    } else {\n+      cloudbilling = endUserCloudbillingProvider.get();\n+    }\n+\n+    UpdateBillingInfo request;\n+    try {\n+      request =\n+          cloudbilling\n+              .projects()\n+              .updateBillingInfo(\n+                  \"projects/\" + workspace.getWorkspaceNamespace(),\n+                  new ProjectBillingInfo().setBillingAccountName(newBillingAccountName));\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Could not create Google Cloud updateBillingInfo request\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MDk2MQ==", "bodyText": "Ah... unfortunate.", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372160961", "createdAt": "2020-01-29T02:25:51Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspaceServiceImpl.java", "diffHunk": "@@ -645,6 +668,61 @@ public boolean maybeDeleteRecentWorkspace(long workspaceId) {\n     }\n   }\n \n+  private Retryer<ProjectBillingInfo> cloudBillingRetryer =\n+      RetryerBuilder.<ProjectBillingInfo>newBuilder()\n+          .retryIfException(\n+              e ->\n+                  e instanceof GoogleJsonResponseException\n+                      && ((GoogleJsonResponseException) e).getStatusCode() == 403)\n+          .withWaitStrategy(WaitStrategies.exponentialWait())\n+          .withStopStrategy(StopStrategies.stopAfterDelay(60, TimeUnit.SECONDS))\n+          .build();\n+\n+  @Override\n+  public void updateWorkspaceBillingAccount(DbWorkspace workspace, String newBillingAccountName) {\n+    if (!workbenchConfigProvider.get().featureFlags.enableBillingLockout\n+        || newBillingAccountName.equals(workspace.getBillingAccountName())) {\n+      return;\n+    }\n+\n+    Cloudbilling cloudbilling;\n+    if (newBillingAccountName.equals(\n+        workbenchConfigProvider.get().billing.freeTierBillingAccountName())) {\n+      cloudbilling = serviceAccountCloudbillingProvider.get();\n+    } else {\n+      cloudbilling = endUserCloudbillingProvider.get();\n+    }\n+\n+    UpdateBillingInfo request;\n+    try {\n+      request =\n+          cloudbilling\n+              .projects()\n+              .updateBillingInfo(\n+                  \"projects/\" + workspace.getWorkspaceNamespace(),\n+                  new ProjectBillingInfo().setBillingAccountName(newBillingAccountName));\n+    } catch (IOException e) {\n+      throw new RuntimeException(\"Could not create Google Cloud updateBillingInfo request\", e);\n+    }\n+\n+    ProjectBillingInfo response;\n+    try {\n+      // this is necessary because the grant ownership call in create/clone", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MTI2NQ==", "bodyText": "Makes sense to me", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372161265", "createdAt": "2020-01-29T02:27:09Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -233,6 +229,11 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace dbWorkspace = new DbWorkspace();\n+    // A little unintuitive but setting this here reflects the current state of the workspace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MTYxMw==", "bodyText": "It would probably be ideal here if the value were carried through on the billing project buffer table, rather than pulled from the config, since the billing account could change while projects are still in the buffer.\nI think that's probably fine to just note this distinction and account for it when we're doing the free tier backfill. I'll make a note there.", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372161613", "createdAt": "2020-01-29T02:29:07Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -233,6 +229,11 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n     DbWorkspace dbWorkspace = new DbWorkspace();\n+    // A little unintuitive but setting this here reflects the current state of the workspace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MjI4Mw==", "bodyText": "Yeah we should definitely have some cron cleanup for orphans here. Do you mind filing a ticket for later?\nFor example, if this request times out (but actually succeeds on the backend), we wind up with a defunct project attached to the user's billing account.", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372162283", "createdAt": "2020-01-29T02:32:48Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -252,7 +253,13 @@ private FirecloudWorkspace attemptFirecloudWorkspaceCreation(FirecloudWorkspaceI\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    updateWorkspaceBillingAccount(dbWorkspace, workspace.getBillingAccountName());\n+    try {\n+      workspaceService.updateWorkspaceBillingAccount(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MjU5NA==", "bodyText": "The PATCH API is only supposed to include fields that have actually been modified. See all the other conditional checks above. This should mirror that behvaior", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372162594", "createdAt": "2020-01-29T02:34:14Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -425,15 +379,22 @@ private void setDbWorkspaceFields(\n       dbWorkspace.setReviewRequested(researchPurpose.getReviewRequested());\n     }\n \n-    updateWorkspaceBillingAccount(dbWorkspace, request.getWorkspace().getBillingAccountName());\n+    try {\n+      workspaceService.updateWorkspaceBillingAccount(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE2MzAwOA==", "bodyText": "Eventually we'll also want some validation here that the creator still has free tier credit available. Do you know whether this is tracked?", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372163008", "createdAt": "2020-01-29T02:36:07Z", "author": {"login": "calbach"}, "path": "api/src/main/java/org/pmiops/workbench/workspaces/WorkspacesController.java", "diffHunk": "@@ -545,14 +510,20 @@ private void setDbWorkspaceFields(\n \n     dbWorkspace.setBillingMigrationStatusEnum(BillingMigrationStatus.NEW);\n \n-    updateWorkspaceBillingAccount(dbWorkspace, body.getWorkspace().getBillingAccountName());\n+    try {\n+      workspaceService.updateWorkspaceBillingAccount(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMjM5MTAw", "url": "https://github.com/all-of-us/workbench/pull/3040#pullrequestreview-350239100", "createdAt": "2020-01-29T16:20:27Z", "commit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjoyMDoyN1rOFjOrKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNjoyMDoyN1rOFjOrKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQ4NDkwNQ==", "bodyText": "nice", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r372484905", "createdAt": "2020-01-29T16:20:27Z", "author": {"login": "jmthibault79"}, "path": "api/src/main/java/org/pmiops/workbench/api/UserController.java", "diffHunk": "@@ -136,7 +139,7 @@ private BillingAccount freeTierBillingAccount() {\n     return new BillingAccount()\n         .isFreeTier(true)\n         .displayName(\"Use All of Us free credits\")\n-        .name(\"billingAccounts/\" + configProvider.get().billing.accountId)\n+        .name(configProvider.get().billing.freeTierBillingAccountName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a9cf3a34b5db8bb8acec5552d3b2a99528a15e"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb7800b6464872f887abc3d132d4e953d0b5d9fa", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/fb7800b6464872f887abc3d132d4e953d0b5d9fa", "committedDate": "2020-01-30T16:16:14Z", "message": "code review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ba90c390ee314413217784802c90f1fc8215892", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/7ba90c390ee314413217784802c90f1fc8215892", "committedDate": "2020-01-30T17:05:11Z", "message": "Merge branch 'master' of github.com:all-of-us/workbench into songe/RW-4277"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4eb55e7433172fcf93a207e24cd7ecec9c5cc15", "author": {"user": {"login": "ericsong", "name": "Eric Song"}}, "url": "https://github.com/all-of-us/workbench/commit/d4eb55e7433172fcf93a207e24cd7ecec9c5cc15", "committedDate": "2020-01-30T17:05:37Z", "message": "turn on feature flag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDA4Nzcx", "url": "https://github.com/all-of-us/workbench/pull/3040#pullrequestreview-351008771", "createdAt": "2020-01-30T17:30:53Z", "commit": {"oid": "d4eb55e7433172fcf93a207e24cd7ecec9c5cc15"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozMDo1M1rOFjzlgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzozMDo1M1rOFjzlgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA4OTY2NA==", "bodyText": "is this intentional?", "url": "https://github.com/all-of-us/workbench/pull/3040#discussion_r373089664", "createdAt": "2020-01-30T17:30:53Z", "author": {"login": "jmthibault79"}, "path": "api/config/config_test.json", "diffHunk": "@@ -90,7 +90,7 @@\n     \"enableVpcServicePerimeter\": true,\n     \"enableNewAccountCreation\": true,\n     \"enableRdrExport\": true,\n-    \"enableBillingLockout\": false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4eb55e7433172fcf93a207e24cd7ecec9c5cc15"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3738, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}