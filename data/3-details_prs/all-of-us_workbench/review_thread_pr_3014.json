{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0ODU1NTE3", "number": 3014, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzo1MVrODZQ87w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzo1MVrODZQ87w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE4NzM1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/org/pmiops/workbench/concept/ConceptService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzo1MlrOFfjtfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjo1Njo0OVrOFfkiyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTI2MA==", "bodyText": "nit: It's a bit difficult to read ternary statements where each branch is a method call with a bunch of parameters (and only one different). Rather than put the ternary operator in the return statement, I'd probably declare final matchExpression = StringUtils.isBlank(keyword) ? conceptTypes : keyword; Then you can return the same statement either way.", "url": "https://github.com/all-of-us/workbench/pull/3014#discussion_r368635260", "createdAt": "2020-01-20T16:27:52Z", "author": {"login": "jaycarlton"}, "path": "api/src/main/java/org/pmiops/workbench/concept/ConceptService.java", "diffHunk": "@@ -165,7 +165,7 @@ public long countSurveys() {\n     Pageable pageable = new PageRequest(page, limit, new Sort(Direction.DESC, \"countValue\"));\n     ImmutableList<String> conceptTypes = getConceptTypes(standardConceptFilter);\n     if (domainIds.contains(CommonStorageEnums.domainToDomainId(Domain.PHYSICALMEASUREMENT))) {\n-      ImmutableList domains =\n+      ImmutableList<String> domains =\n           ImmutableList.of(CommonStorageEnums.domainToDomainId(Domain.MEASUREMENT));\n       return StringUtils.isBlank(keyword)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e270791a8250ee29081c3c09ab7e6b4362fafcac"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY0ODkwNA==", "bodyText": "I might be misunderstanding your statement, but conceptTypes and keyword are not mutually exclusive. If keyword is blank then call:\nconceptDao.findConcepts(conceptTypes, ...) otherwise call:\nconceptDao.findConcepts(keyword, conceptTypes, ...)", "url": "https://github.com/all-of-us/workbench/pull/3014#discussion_r368648904", "createdAt": "2020-01-20T16:56:49Z", "author": {"login": "freemabd"}, "path": "api/src/main/java/org/pmiops/workbench/concept/ConceptService.java", "diffHunk": "@@ -165,7 +165,7 @@ public long countSurveys() {\n     Pageable pageable = new PageRequest(page, limit, new Sort(Direction.DESC, \"countValue\"));\n     ImmutableList<String> conceptTypes = getConceptTypes(standardConceptFilter);\n     if (domainIds.contains(CommonStorageEnums.domainToDomainId(Domain.PHYSICALMEASUREMENT))) {\n-      ImmutableList domains =\n+      ImmutableList<String> domains =\n           ImmutableList.of(CommonStorageEnums.domainToDomainId(Domain.MEASUREMENT));\n       return StringUtils.isBlank(keyword)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTI2MA=="}, "originalCommit": {"oid": "e270791a8250ee29081c3c09ab7e6b4362fafcac"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3452, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}