{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3OTYwNzA3", "number": 3167, "title": "[RW-3918][RISK=NO] DevOps & Monitoring framework", "bodyText": "The first deliver has several features,  described in detail in the markdown file:\n\nsupport. for running over multiple projects cleanly with one command\nsets up key files in a random temp directory instead of the run directory\nuses a standard logger\n*. handles local vs test environments in a safe way\nhas no dependencies. on any existing AoU code or processes, and. can be plucked from. this project and reused elsewhere easily\n\nThe JSON input file is in the other repo here.\nThere's a single, read-only task at the moment, which lists custom things and counts other things.  It demonstrates authenticating and targeting each environment in turn. The output is here.\nI'm treating specifics about projects & service account names as non-public in this project, so the input file is located in a PR against workbench-devops. This is important for operational security on the one hand, but more importantly, to keep application-specific things separate from the reusable. framework. and tasks.\nTIL:\n\ngot reminded that state management in Ruby can be painful if you let it. We do. not want a bag of scripts, but rather one entry point and task runners that do the right thing\nCommon isn't a builtin library\nService. Accounts. aren't about privilege escalation, but really privilege restriction\nsome of the argument lists for the services take in a hash, but it's hard to see that at a glance\ngetting comfortable with do & yield is important\nIntelliJ gets confused if you try to rename a method with a common name like count on one of your classes\nthere's really no need to buy RubyMine if you have IJ, though some things are broken. in IJ.\nPR checklist\n\n\n This PR meets the Acceptance Criteria in the JIRA story\n The JIRA story has been moved to Dev Review\n This PR includes appropriate unit tests\n I have run and tested this change locally\n If this includes an API change, I have updated the appropriate Swagger definitions and notified API consumers\n If this includes a new feature flag, I have created and linked new JIRA tickets to (a) turn on the feature flag and (b) remove it later", "createdAt": "2020-02-20T20:34:59Z", "url": "https://github.com/all-of-us/workbench/pull/3167", "merged": true, "mergeCommit": {"oid": "7658b349b7d4aac22b61e8e8663db8d80a00c8ec"}, "closed": true, "closedAt": "2020-02-27T22:39:14Z", "author": {"login": "jaycarlton"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6U9jMAH2gAyMzc3OTYwNzA3OmRhOGE3MjVmMDU5OTc3NzAxOGFkNGJmOGVmMTRiY2I3NGYzODAyNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIjMjgAFqTM2NjA1MDI0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da8a725f0599777018ad4bf8ef14bcb74f380262", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/da8a725f0599777018ad4bf8ef14bcb74f380262", "committedDate": "2020-01-14T18:07:52Z", "message": "cleaning some things up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2607b3d80c59dbaa905ce7da8cb015b4ac4e135", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c2607b3d80c59dbaa905ce7da8cb015b4ac4e135", "committedDate": "2020-01-14T20:17:44Z", "message": "more fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f35c8f5ee2594fda1f1752ac591ff2f11d38595", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/6f35c8f5ee2594fda1f1752ac591ff2f11d38595", "committedDate": "2020-01-14T21:47:44Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9805b747141f43e7ec5be4b8e06c6c4eec7e99d5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9805b747141f43e7ec5be4b8e06c6c4eec7e99d5", "committedDate": "2020-01-14T22:26:06Z", "message": "make string format thinner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd1a1ad35ab1c54753ad36947f640dea9432dbf", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7dd1a1ad35ab1c54753ad36947f640dea9432dbf", "committedDate": "2020-01-14T22:26:33Z", "message": "restore logging level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "414905cd08fe8154f83451638aef23032c63f55e", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/414905cd08fe8154f83451638aef23032c63f55e", "committedDate": "2020-01-14T23:18:44Z", "message": "Fox in mocks our game is done sir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9020032cc65f7e0fed788de49c36e3b80a015d5b", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/9020032cc65f7e0fed788de49c36e3b80a015d5b", "committedDate": "2020-01-15T02:30:34Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be70469b636474e31867c108b5c8cd7b86d103eb", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/be70469b636474e31867c108b5c8cd7b86d103eb", "committedDate": "2020-01-15T17:05:46Z", "message": "merge master && switch set to list to match view.create signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8a8c6c85d4ba54a996f29e462bdcc0c866c4acd4", "committedDate": "2020-01-15T17:47:17Z", "message": "test tweak"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfab77676c8621f7efa687f8cd53afd5d77861a9", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/dfab77676c8621f7efa687f8cd53afd5d77861a9", "committedDate": "2020-01-16T17:54:31Z", "message": "initial stab at ruby script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c7fd01b59d929d7ea7e9c3e463dc339eb361b85", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/3c7fd01b59d929d7ea7e9c3e463dc339eb361b85", "committedDate": "2020-01-16T20:15:18Z", "message": "Merge branch 'master' into jaycarlton/RW-3918"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462a8e9707fc9141f714b34fe676b2a0a22ecc66", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/462a8e9707fc9141f714b34fe676b2a0a22ecc66", "committedDate": "2020-02-20T18:58:57Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12b278eef8be7555e829f636ab2246e4a7fd4800", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/12b278eef8be7555e829f636ab2246e4a7fd4800", "committedDate": "2020-02-20T19:03:55Z", "message": "move"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fab456c2b640ea1f4c29a7fda6e201e8205535ee", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/fab456c2b640ea1f4c29a7fda6e201e8205535ee", "committedDate": "2020-02-20T20:33:52Z", "message": "moved from other repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55c35fa8f7808db436afa9680e7bf71c145fb8a2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/55c35fa8f7808db436afa9680e7bf71c145fb8a2", "committedDate": "2020-02-20T20:50:46Z", "message": "add .gitignore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7791bc21a73a43d4cfdd018020b52283ec91c718", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7791bc21a73a43d4cfdd018020b52283ec91c718", "committedDate": "2020-02-20T23:04:11Z", "message": "progress...not quite right I don't think"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54be97b7698762dd9f595b2c3074e6b05555e9bc", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/54be97b7698762dd9f595b2c3074e6b05555e9bc", "committedDate": "2020-02-23T16:21:56Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1da257512bc0ff75926ff893e1ef0f9b42b1d61", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/a1da257512bc0ff75926ff893e1ef0f9b42b1d61", "committedDate": "2020-02-23T16:22:15Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25c165657a3c93cb8082d5fe2ce5b76825521ae0", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/25c165657a3c93cb8082d5fe2ce5b76825521ae0", "committedDate": "2020-02-23T16:22:30Z", "message": "credentials path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72364a5d9a15aa4b647084de7ab04509d7335279", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/72364a5d9a15aa4b647084de7ab04509d7335279", "committedDate": "2020-02-23T16:33:59Z", "message": "removing common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5220146e0c95e3fdd239d9b1dd101fd2e880df", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/6a5220146e0c95e3fdd239d9b1dd101fd2e880df", "committedDate": "2020-02-24T01:45:13Z", "message": "first mostly working version, setting all the SA's and not depending on any utils or project.rb code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17af8716fa0aef07d6a2689afdd22bce3a638338", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/17af8716fa0aef07d6a2689afdd22bce3a638338", "committedDate": "2020-02-24T01:50:30Z", "message": "fixes & updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa61a0defade2f4053ed1e263a20936c345fadd5", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/aa61a0defade2f4053ed1e263a20936c345fadd5", "committedDate": "2020-02-24T02:24:24Z", "message": "more counting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef4bf5d87f4edcf9c3f2079ae991a3935fa94004", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/ef4bf5d87f4edcf9c3f2079ae991a3935fa94004", "committedDate": "2020-02-24T14:08:43Z", "message": "remove stuff for later and organize a bit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d4393d093b4653b0a7eccebade7544e17248682", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/0d4393d093b4653b0a7eccebade7544e17248682", "committedDate": "2020-02-24T14:26:55Z", "message": "only one script in whole framework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "044747dc026e5f2a1bebc92560f086a8de219469", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/044747dc026e5f2a1bebc92560f086a8de219469", "committedDate": "2020-02-24T15:35:42Z", "message": "docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b9ace2651ce543e2f2c6f1336de1ca46ad9cbfb", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/2b9ace2651ce543e2f2c6f1336de1ca46ad9cbfb", "committedDate": "2020-02-24T15:39:39Z", "message": "link to devops docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7931e1620905967ddcd3d3d55a9c4cf05a61d4ce", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/7931e1620905967ddcd3d3d55a9c4cf05a61d4ce", "committedDate": "2020-02-24T15:48:31Z", "message": "gem reqs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTAwNzM3", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-363500737", "createdAt": "2020-02-24T16:00:00Z", "commit": {"oid": "7931e1620905967ddcd3d3d55a9c4cf05a61d4ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowMDowMFrOFtmBtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjowMDowMFrOFtmBtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MzI2OA==", "bodyText": "Options parsing is coming in the next PR.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383353268", "createdAt": "2020-02-24T16:00:00Z", "author": {"login": "jaycarlton"}, "path": "ops/ruby/devops-framework/devops.rb", "diffHunk": "@@ -0,0 +1,13 @@\n+require 'logger'\n+require_relative 'tasks/count_monitoring_assets.rb'\n+\n+# Single entry point for the devops framework. This is the only true Ruby Script file. The\n+# rest are classes.\n+#\n+# Based on input commands, this script delegates the work to  a task class, which should not need to\n+# know anything about environment variables such as ARGV, the run directory,  etc. Tasks should also avoid\n+# global variables like `logger`, so that we can control logging preferences from the top level.\n+\n+logger = Logger.new(STDOUT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7931e1620905967ddcd3d3d55a9c4cf05a61d4ce"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ab076f6089b515d3a5f916eb3959393409dc3b2", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/2ab076f6089b515d3a5f916eb3959393409dc3b2", "committedDate": "2020-02-24T20:20:48Z", "message": "add options parser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/91172c58e451a63ba540de6ee1fd23aa73198e84", "committedDate": "2020-02-24T20:31:27Z", "message": "handle missing  parameters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzA0ODQw", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-363704840", "createdAt": "2020-02-24T21:14:14Z", "commit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "state": "APPROVED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMToxNDoxNFrOFtwEfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo0MjowNlrOFtw6Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUxNzgyMQ==", "bodyText": "typos\n(how soon until the keyboard is fixed?)", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383517821", "createdAt": "2020-02-24T21:14:14Z", "author": {"login": "jmthibault79"}, "path": "README.md", "diffHunk": "@@ -585,6 +585,9 @@ To run tests in IntelliJ, go to your preferences, click plugins, and make sure y\n \n Once you have JUnit installed, go to the test file you want to run, right click on the test file, and select `Run` or `Debug` to run or debug the tests. To run or debug on a specific test class or method, open the file, and test running options should appear as green triangles pointing right on the side bar. Clicking that will open a dialog allowing you to run that specific class or method.\n \n+## DevOps\n+The `devops` frramework is describe [here](ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md). Other", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUxODg1MA==", "bodyText": "?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383518850", "createdAt": "2020-02-24T21:16:21Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUxOTA1NQ==", "bodyText": "Where is the format of this file specified?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383519055", "createdAt": "2020-02-24T21:16:43Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyMDE5OQ==", "bodyText": "sp: standard", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383520199", "createdAt": "2020-02-24T21:18:58Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library\n+\n+## Design Decisions\n+I should justify some of the  directions I've taken here, since they're departures to varying\n+degrees from how we've traditionally done things.\n+\n+### A New Ruby Application\n+I wrestled a bit with this actually. I haven't seen anything that Ruby can do that Python can't,\n+for example, and in general the latter language has much more documentation, a more active\n+community, and many more programmers. Ultimately, it would've  been a big reset to change\n+code bases and languages all at once, so I'll continue to write the first  version in Ruby until\n+I get ~~an excuse~~ a requirement to port to Python. One such requirement could come in the form\n+of other teams we depend  on and wish to integrate tightly with using some other language.\n+\n+### Task Classes Instead of Scripts\n+I  decided to make the tasks full  Ruby classes instead of stand-alone scripts for a couple  of reasons.\n+First, it ensures that we can minimize usage of global state (which can get away from you easily\n+in Ruby). Second, we can now configure things  like log levels in one place.\n+\n+### Independence of All Things All of Us\n+There are no dependencies on any AoU application or build/release code, or anything in\n+the utils repository. This allows us to avoid refactoring the legacy Ruby stack, and ensures\n+that this framework can be reused externally. Some notably absent things:\n+* `project.rb` System: This system depends on and is depended on by our  build & release framework, \n+which means we would be in danger of holding up a release if we needed to make a quick change.\n+* `ServiceAccountContext`: This system was a  major source of inspiration  for the new\n+ `ServiceAccountManager`, but had some customizations and legacy assumptions that were not compatible with the goals\n+ of this project.\n+* `Common.rb`: There are a number of useful snippets and  functions in this class, and I decided to steal\n+selectively and adapt rather than try to reuse it. It isn't a standard package, isn't actively maintained,\n+and it's not laid out in such a way that I can only bring in the  pieces I want. Logging  uses the\n+standnard Ruby logger, and I'm re-evaluating how we do subprocesses.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyMDUyNQ==", "bodyText": "sp: specific", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383520525", "createdAt": "2020-02-24T21:19:37Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library\n+\n+## Design Decisions\n+I should justify some of the  directions I've taken here, since they're departures to varying\n+degrees from how we've traditionally done things.\n+\n+### A New Ruby Application\n+I wrestled a bit with this actually. I haven't seen anything that Ruby can do that Python can't,\n+for example, and in general the latter language has much more documentation, a more active\n+community, and many more programmers. Ultimately, it would've  been a big reset to change\n+code bases and languages all at once, so I'll continue to write the first  version in Ruby until\n+I get ~~an excuse~~ a requirement to port to Python. One such requirement could come in the form\n+of other teams we depend  on and wish to integrate tightly with using some other language.\n+\n+### Task Classes Instead of Scripts\n+I  decided to make the tasks full  Ruby classes instead of stand-alone scripts for a couple  of reasons.\n+First, it ensures that we can minimize usage of global state (which can get away from you easily\n+in Ruby). Second, we can now configure things  like log levels in one place.\n+\n+### Independence of All Things All of Us\n+There are no dependencies on any AoU application or build/release code, or anything in\n+the utils repository. This allows us to avoid refactoring the legacy Ruby stack, and ensures\n+that this framework can be reused externally. Some notably absent things:\n+* `project.rb` System: This system depends on and is depended on by our  build & release framework, \n+which means we would be in danger of holding up a release if we needed to make a quick change.\n+* `ServiceAccountContext`: This system was a  major source of inspiration  for the new\n+ `ServiceAccountManager`, but had some customizations and legacy assumptions that were not compatible with the goals\n+ of this project.\n+* `Common.rb`: There are a number of useful snippets and  functions in this class, and I decided to steal\n+selectively and adapt rather than try to reuse it. It isn't a standard package, isn't actively maintained,\n+and it's not laid out in such a way that I can only bring in the  pieces I want. Logging  uses the\n+standnard Ruby logger, and I'm re-evaluating how we do subprocesses.\n+\n+### Use of Google Client Libraries Instead of `gcloud` Tool\n+`gcloud` is certainly a handy and indespensible tool for daily use for one-off tasks,\n+and has the advantage of working in the Cloud Shell. I don't propose to replace it for the\n+semi-manual tasks to which it is well suited.\n+\n+However, I do want to avoid making  system calls just to use `gcloud` when there is an equivalent\n+library method already provided. This will make the framework feel more like an application\n+(which most experienced programmers have an idea how to scale) than a collection of scripts.\n+\n+Ideally, we would not depend on `gcloud` being installed locally at all for someone to use\n+these tools.\n+\n+### Use of a Limited Service Account\n+The framework supports a bring-you-own-service-account model. I.e. any evaluation of permissions\n+is left up to GCP. I requested new  monitoring-speicic service accounts for this framework so", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNTEzMw==", "bodyText": "is there a way to do this generically, or error on any missing?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383525133", "createdAt": "2020-02-24T21:28:46Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/devops.rb", "diffHunk": "@@ -0,0 +1,43 @@\n+require 'logger'\n+require 'optparse'\n+require_relative 'tasks/count_monitoring_assets.rb'\n+\n+# Single entry point for the devops framework. This is the only true Ruby Script file. The\n+# rest are classes.\n+#\n+# Based on input commands, this script delegates the work to  a task class, which should not need to\n+# know anything about environment variables such as ARGV, the run directory,  etc. Tasks should also avoid\n+# global variables like `logger`, so that we can control logging preferences from the top level.\n+\n+# TODO(jaycarlton): work out a scheme for task-specific options (i.e. subcommands)\n+def parse_options\n+  options = {}\n+  OptionParser.new do |parser|\n+    parser.on('-t', '--task [TASK]', String, 'Task to be in in each environment')\n+    parser.on('-e', '--envs-file [ENVS]', String, 'Path to environments JSON file.')\n+  end.parse!({into: options})\n+\n+  #Now raise an exception if we have not found a required arg\n+  raise OptionParser::MissingArgument.new('task') if options[:task].nil?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUyNjc1Nw==", "bodyText": "rm", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383526757", "createdAt": "2020-02-24T21:32:06Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/tasks/lib/gcp_environment_info.rb", "diffHunk": "@@ -0,0 +1,32 @@\n+class GcpEnvironmentInfo\n+  # def initialize(short_name, project_id, project_number, service_account)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzMDYwNQ==", "bodyText": "sp: environments", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383530605", "createdAt": "2020-02-24T21:40:15Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/tasks/count_monitoring_assets.rb", "diffHunk": "@@ -0,0 +1,66 @@\n+require \"google/cloud/monitoring\"\n+require 'logger'\n+\n+require_relative \"./lib/service_account_manager\"\n+require_relative './lib/gcp_environment_visitor'\n+\n+CUSTOM_METRIC_FILTER = \"metric.type = starts_with(\\\"custom.googleapis.com/\\\")\"\n+LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/\\\")\"\n+USER_LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/user/\\\")\"\n+\n+logger = Logger.new(STDOUT)\n+class MonitoringAssets\n+  def initialize(envrionments_path_json, logger = Logger.new(STDOUT))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzMTUzMQ==", "bodyText": "sp: \"baed\" a few times in this file", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383531531", "createdAt": "2020-02-24T21:42:06Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/tasks/count_monitoring_assets.rb", "diffHunk": "@@ -0,0 +1,66 @@\n+require \"google/cloud/monitoring\"\n+require 'logger'\n+\n+require_relative \"./lib/service_account_manager\"\n+require_relative './lib/gcp_environment_visitor'\n+\n+CUSTOM_METRIC_FILTER = \"metric.type = starts_with(\\\"custom.googleapis.com/\\\")\"\n+LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/\\\")\"\n+USER_LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/user/\\\")\"\n+\n+logger = Logger.new(STDOUT)\n+class MonitoringAssets\n+  def initialize(envrionments_path_json, logger = Logger.new(STDOUT))\n+    @visitor = GcpEnvironmentVisitor.new(envrionments_path_json, logger)\n+    @logger = logger\n+  end\n+\n+  # Demonstrate a simple usage of the AouEnvironmentVisitor with a few read-only operations\n+  # on monitoring things in all the environments.\n+  def inventory\n+    @visitor.visit do |env|\n+      counts  = {}\n+      metric_client = Google::Cloud::Monitoring::Metric.new\n+      metric_project_path = Google::Cloud::Monitoring::V3::MetricServiceClient.project_path(env.project_id)\n+\n+      resources = metric_client.list_monitored_resource_descriptors(metric_project_path)\n+      @logger.info(\"found #{resources.count} monitored resources\")\n+      counts['monitored_resources'] = resources.count\n+\n+      all_metrics = metric_client.list_metric_descriptors(metric_project_path)\n+      counts['metric_descriptors'] =  all_metrics.count\n+      @logger.info(\"found #{all_metrics.count} metric descriptors\")\n+\n+      custom_metrics = metric_client.list_metric_descriptors(metric_project_path, {filter: CUSTOM_METRIC_FILTER})\n+      @logger.info(\"found  #{custom_metrics.count} custom metrics\")\n+      counts['custom_metrics'] = custom_metrics.count\n+      custom_metrics.each do |metric|\n+        @logger.info(\"\\t#{metric.name}: #{metric.description}\")\n+      end\n+\n+      user_logs_based_metrics = metric_client.list_metric_descriptors(metric_project_path, {filter: USER_LOGS_BASED_METRIC_FILTER})\n+      counts['user_logs_based_metrics'] = user_logs_based_metrics.count\n+      @logger.info(\"found  #{user_logs_based_metrics.count} user-defined  logs-baed metrics\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzIzOTI1", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-363723925", "createdAt": "2020-02-24T21:45:43Z", "commit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo0NTo0M1rOFtxBFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQyMTo0NTo0M1rOFtxBFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzUzMzMzNQ==", "bodyText": "what an interesting pattern", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383533335", "createdAt": "2020-02-24T21:45:43Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/tasks/lib/service_account_manager.rb", "diffHunk": "@@ -0,0 +1,81 @@\n+require \"json\"\n+require 'tmpdir'\n+require 'fileutils'\n+require 'logger'\n+\n+# Entering a service account context ensures that a keyfile exists at the given\n+# path for the given service account, and that GOOGLE_APPLICATION_CREDENTIALS is\n+# pointing to it (for application default credentials). Creates this SA key and\n+# file if necessary, and destroys it when leaving the context.\n+#\n+# Nested service account contexts are not supported.\n+class ServiceAccountManager\n+\n+  SERVICE_ACCOUNT_KEY_FILE_NAME = \"sa-key.json\"\n+\n+  def initialize(project, service_account, logger = Logger.new(STDOUT))\n+    @logger = logger\n+    @project = project\n+    @service_account = service_account\n+  end\n+\n+  attr_reader :project\n+  attr_reader :service_account\n+  attr_reader :credentials_path\n+\n+  def run()\n+    @logger.info(\"service_account = #{@service_account}\")\n+    credentials_path = create_credentials_file\n+\n+    @logger.info(\"Setting environment variable GOOGLE_APPLICATION_CREDENTIALS to #{credentials_path}\")\n+    ENV[\"GOOGLE_APPLICATION_CREDENTIALS\"] = credentials_path\n+\n+    begin\n+      yield self", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODI1MTY0", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-363825164", "createdAt": "2020-02-25T01:58:10Z", "commit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTo1ODoxMVrOFt2PNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwMTo1ODoxMVrOFt2PNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxODg3MA==", "bodyText": "First attempt: you don't have permission to write to your gems folder\nSecond attempt: install ruby via Homebrew and update paths\nERROR:  Error installing google-cloud-monitoring:\n        The last version of grpc (~> 1.24) to support your Ruby & RubyGems was 1.27.0. Try installing it with `gem install grpc -v 1.27.0` and then running the current command again\n        grpc requires Ruby version >= 2.3, < 2.7.dev. The current ruby version is 2.7.0.0.\n\n$ ruby --version\nruby 2.7.0p0 (2019-12-25 revision 647ee6f091) [x86_64-darwin18]\n\n$ gem install grpc -v 1.27.0\nERROR:  Error installing grpc:\n        The last version of grpc (= 1.27.0) to support your Ruby & RubyGems was 1.27.0. Try installing it with `gem install grpc -v 1.27.0`\n        grpc requires Ruby version >= 2.3, < 2.7.dev. The current ruby version is 2.7.0.0.\n\nThird attempt: downgrade Homebrew ruby to 2.6 ... nope.  not available!  2.5 then.\n$ brew install ruby@2.5\n\nupdate my PATH again\n$ ruby --version\nruby 2.5.5p157 (2019-03-15 revision 67260) [x86_64-darwin18]\n$ gem install google-cloud-monitoring\n\nSuccess, finally.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r383618870", "createdAt": "2020-02-25T01:58:11Z", "author": {"login": "jmthibault79"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzY5ODE1", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-364369815", "createdAt": "2020-02-25T19:01:51Z", "commit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowMTo1MVrOFuRWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOToyOTozMlrOFuSPrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2MzExNg==", "bodyText": "nit: Should this file just be called README.md? the file path looks a bit redundant", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384063116", "createdAt": "2020-02-25T19:01:51Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NDkyOQ==", "bodyText": "The command given here also failed. This worked for me:\ngem install --user google-cloud-monitoring\n\nWe should probably use a Gemfile if we're going to start requiring gem installation, rather than trying to keep this README up to date.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384064929", "createdAt": "2020-02-25T19:05:22Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzYxODg3MA=="}, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NTM2Mg==", "bodyText": "What does \"externally\" mean? I'm not sure I understand what you're intending to use this for which you couldn't use the existing framework for.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384065362", "createdAt": "2020-02-25T19:06:11Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library\n+\n+## Design Decisions\n+I should justify some of the  directions I've taken here, since they're departures to varying\n+degrees from how we've traditionally done things.\n+\n+### A New Ruby Application\n+I wrestled a bit with this actually. I haven't seen anything that Ruby can do that Python can't,\n+for example, and in general the latter language has much more documentation, a more active\n+community, and many more programmers. Ultimately, it would've  been a big reset to change\n+code bases and languages all at once, so I'll continue to write the first  version in Ruby until\n+I get ~~an excuse~~ a requirement to port to Python. One such requirement could come in the form\n+of other teams we depend  on and wish to integrate tightly with using some other language.\n+\n+### Task Classes Instead of Scripts\n+I  decided to make the tasks full  Ruby classes instead of stand-alone scripts for a couple  of reasons.\n+First, it ensures that we can minimize usage of global state (which can get away from you easily\n+in Ruby). Second, we can now configure things  like log levels in one place.\n+\n+### Independence of All Things All of Us\n+There are no dependencies on any AoU application or build/release code, or anything in\n+the utils repository. This allows us to avoid refactoring the legacy Ruby stack, and ensures\n+that this framework can be reused externally. Some notably absent things:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NjQ2OQ==", "bodyText": "How does this relate to the workbench-devops repo?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384066469", "createdAt": "2020-02-25T19:08:19Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NjYxNw==", "bodyText": "Is the proposal to move entirely to this new framework, including for our development scripts?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384066617", "createdAt": "2020-02-25T19:08:34Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NzM2OQ==", "bodyText": "Repeatability and consistency are mentioned here, yet a large divergence between this and the previous system is the lack of docker usage. Was docker considered?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384067369", "createdAt": "2020-02-25T19:10:02Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MDM2Nw==", "bodyText": "Was there some kind of consensus that the existing utils stuff is now legacy? Or is this PR the proposal to make this canon?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384070367", "createdAt": "2020-02-25T19:15:53Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.\n+```\n+\n+##  Installation\n+We need a newish version of Ruby. I'm running 2.6.5 as of this writing, but haven't gone\n+back and tested with older versions. We also currently need the `gcloud` tools and an account with\n+sufficient privilege account to create service account tokens.\n+\n+Additionally, you'll need to install a gem or two. Right now, it's\n+\n+`gem install google-cloud-monitoring` for the monitoring library\n+\n+## Design Decisions\n+I should justify some of the  directions I've taken here, since they're departures to varying\n+degrees from how we've traditionally done things.\n+\n+### A New Ruby Application\n+I wrestled a bit with this actually. I haven't seen anything that Ruby can do that Python can't,\n+for example, and in general the latter language has much more documentation, a more active\n+community, and many more programmers. Ultimately, it would've  been a big reset to change\n+code bases and languages all at once, so I'll continue to write the first  version in Ruby until\n+I get ~~an excuse~~ a requirement to port to Python. One such requirement could come in the form\n+of other teams we depend  on and wish to integrate tightly with using some other language.\n+\n+### Task Classes Instead of Scripts\n+I  decided to make the tasks full  Ruby classes instead of stand-alone scripts for a couple  of reasons.\n+First, it ensures that we can minimize usage of global state (which can get away from you easily\n+in Ruby). Second, we can now configure things  like log levels in one place.\n+\n+### Independence of All Things All of Us\n+There are no dependencies on any AoU application or build/release code, or anything in\n+the utils repository. This allows us to avoid refactoring the legacy Ruby stack, and ensures", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3MzMwNw==", "bodyText": "I'd have a slight preference for a positional arg rather than a flag for a task/command name, especially if there will be alternate flags for subcommands. This is pretty typical for CLIs with subcommands.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384073307", "createdAt": "2020-02-25T19:21:20Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NjYyMA==", "bodyText": "Not to throw a wrench into things, but did you look at whether Terraform could work for applying these? https://www.terraform.io/docs/providers/google/r/monitoring_group.html\n(surface-level assessment as fine, there would be a lot of questions to answer here such as how we could run it and  how we'd do state tracking)", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384076620", "createdAt": "2020-02-25T19:27:30Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/tasks/count_monitoring_assets.rb", "diffHunk": "@@ -0,0 +1,66 @@\n+require \"google/cloud/monitoring\"\n+require 'logger'\n+\n+require_relative \"./lib/service_account_manager\"\n+require_relative './lib/gcp_environment_visitor'\n+\n+CUSTOM_METRIC_FILTER = \"metric.type = starts_with(\\\"custom.googleapis.com/\\\")\"\n+LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/\\\")\"\n+USER_LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/user/\\\")\"\n+\n+logger = Logger.new(STDOUT)\n+class MonitoringAssets\n+  def initialize(envrionments_path_json, logger = Logger.new(STDOUT))\n+    @visitor = GcpEnvironmentVisitor.new(envrionments_path_json, logger)\n+    @logger = logger\n+  end\n+\n+  # Demonstrate a simple usage of the AouEnvironmentVisitor with a few read-only operations\n+  # on monitoring things in all the environments.\n+  def inventory\n+    @visitor.visit do |env|\n+      counts  = {}\n+      metric_client = Google::Cloud::Monitoring::Metric.new\n+      metric_project_path = Google::Cloud::Monitoring::V3::MetricServiceClient.project_path(env.project_id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3Nzc0MA==", "bodyText": "Is this effectively a per-environment config JSON file which is tracked in source?", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r384077740", "createdAt": "2020-02-25T19:29:32Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/DEVOPS_FRAMEWORK.md", "diffHunk": "@@ -0,0 +1,78 @@\n+# DevOps Framework\n+\n+## Purpose\n+This is a small but flexible framework for automating DevOps actions and ensuring they are\n+taken in a traceable, repeatable, and consistent way. It operates by  communicating to Google Cloud Platform\n+directly, independently of the existing build, operations, and deployment pipeline(s).\n+\n+## Usage\n+The entry point to all functionality is `devops.rb`, which provides command line and environment\n+loading and dispatches to Task classes (not scripts) that do the real work.\n+`./devops.rb  -t <task_name> -e <env_file> --task-option-1 value1`\n+\n+There is also a dynamically-generated help file from the descriptions given in the options.\n+```\n+$ ruby ./devops.rb  --help\n+Usage: devops [options]\n+    -t, --task [TASK]                Task to be in in each environment\n+    -e, --envs-file [ENVS_FILE]      Path to environments JSON file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891e9a6e60b61d5d8324745026e1c393ec2680a4", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/891e9a6e60b61d5d8324745026e1c393ec2680a4", "committedDate": "2020-02-25T23:44:24Z", "message": "help stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "538dcfb8e73530e132cd73d34592363de6ea5294", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/538dcfb8e73530e132cd73d34592363de6ea5294", "committedDate": "2020-02-26T13:40:01Z", "message": "PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDA5NzQ5", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-366009749", "createdAt": "2020-02-27T21:25:47Z", "commit": {"oid": "538dcfb8e73530e132cd73d34592363de6ea5294"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMToyNTo0N1rOFvhv0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMTozMjo1OVrOFvh9Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4MDMwNg==", "bodyText": "RE log-based metrics:\nThis? https://www.terraform.io/docs/providers/google/r/logging_metric.html\nRE Terraform:\nWhile Terra is technically a prefix of Terraform, and there are usages of Terraform by Terra, it is an entirely independent and unrelated tool: https://www.terraform.io .\nRE Feedback:\nI'm sure the Stackdriver team also has an interest in receiving feedback/usage on their Terraform provider.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r385380306", "createdAt": "2020-02-27T21:25:47Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/tasks/count_monitoring_assets.rb", "diffHunk": "@@ -0,0 +1,66 @@\n+require \"google/cloud/monitoring\"\n+require 'logger'\n+\n+require_relative \"./lib/service_account_manager\"\n+require_relative './lib/gcp_environment_visitor'\n+\n+CUSTOM_METRIC_FILTER = \"metric.type = starts_with(\\\"custom.googleapis.com/\\\")\"\n+LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/\\\")\"\n+USER_LOGS_BASED_METRIC_FILTER = \"metric.type = starts_with(\\\"logging.googleapis.com/user/\\\")\"\n+\n+logger = Logger.new(STDOUT)\n+class MonitoringAssets\n+  def initialize(envrionments_path_json, logger = Logger.new(STDOUT))\n+    @visitor = GcpEnvironmentVisitor.new(envrionments_path_json, logger)\n+    @logger = logger\n+  end\n+\n+  # Demonstrate a simple usage of the AouEnvironmentVisitor with a few read-only operations\n+  # on monitoring things in all the environments.\n+  def inventory\n+    @visitor.visit do |env|\n+      counts  = {}\n+      metric_client = Google::Cloud::Monitoring::Metric.new\n+      metric_project_path = Google::Cloud::Monitoring::V3::MetricServiceClient.project_path(env.project_id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NjYyMA=="}, "originalCommit": {"oid": "91172c58e451a63ba540de6ee1fd23aa73198e84"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTM4Mzc4Mg==", "bodyText": "Please update this to reflect what we discussed today. My takeaway understanding was:\nThis is an experiment in an approach to a devops framework. The rationale for it coexisting with the other devops tooling is that the current framework has many issues, and it would be a large undertaking to refactor the entirety of the existing system in one go. At a later point we will evaluate whether we want to switch our existing devops tooling to follow this model, or merge these models, or move to a separate third (e.g. non-Ruby) model.", "url": "https://github.com/all-of-us/workbench/pull/3167#discussion_r385383782", "createdAt": "2020-02-27T21:32:59Z", "author": {"login": "calbach"}, "path": "ops/ruby/devops-framework/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+# DevOps Framework\n+\n+## Purpose", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "538dcfb8e73530e132cd73d34592363de6ea5294"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eed990cac0e38e773dd5508ce9ff75b2718c5b1", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/8eed990cac0e38e773dd5508ce9ff75b2718c5b1", "committedDate": "2020-02-27T21:40:44Z", "message": "codacy fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c20ec0e384e257d2cff6b55d7b8767887816732a", "author": {"user": {"login": "jaycarlton", "name": "Jay Carlton"}}, "url": "https://github.com/all-of-us/workbench/commit/c20ec0e384e257d2cff6b55d7b8767887816732a", "committedDate": "2020-02-27T21:53:21Z", "message": "update readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDUwMjQy", "url": "https://github.com/all-of-us/workbench/pull/3167#pullrequestreview-366050242", "createdAt": "2020-02-27T22:37:52Z", "commit": {"oid": "c20ec0e384e257d2cff6b55d7b8767887816732a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3624, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}