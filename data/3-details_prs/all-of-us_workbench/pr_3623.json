{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0ODUwMTU0", "number": 3623, "title": "[RW-4383][risk=no] Puppeteer Cohort test case", "bodyText": "", "createdAt": "2020-05-29T02:34:22Z", "url": "https://github.com/all-of-us/workbench/pull/3623", "merged": true, "mergeCommit": {"oid": "8f29274b8c457fb8182329f421380f7e1198039d"}, "closed": true, "closedAt": "2020-06-01T15:50:56Z", "author": {"login": "aweng98"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmDvUKAH2gAyNDI0ODUwMTU0OmQ5NjJjMzlhZDFlYjhlMjhmMDdlYWQ2ZDk5MjM5MzgyZGRlODM1OWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnB-4ZgFqTQyMTk0OTAxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d962c39ad1eb8e28f07ead6d99239382dde8359f", "committedDate": "2020-05-29T14:56:36Z", "message": "new add-cohorts test case\n\nsaving\n\nworking\n\nsaving"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f38de3e9b8346c1b15827d8115c6930146d071e6", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/f38de3e9b8346c1b15827d8115c6930146d071e6", "committedDate": "2020-05-29T14:55:12Z", "message": "saving"}, "afterCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/d962c39ad1eb8e28f07ead6d99239382dde8359f", "committedDate": "2020-05-29T14:56:36Z", "message": "new add-cohorts test case\n\nsaving\n\nworking\n\nsaving"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDM0NTU2", "url": "https://github.com/all-of-us/workbench/pull/3623#pullrequestreview-421034556", "createdAt": "2020-05-29T14:58:42Z", "commit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNDo1ODo0MlrOGcgcWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToxMDowMVrOGcg3FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NDg1Nw==", "bodyText": "Use PascalCase!", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432544857", "createdAt": "2020-05-29T14:58:42Z", "author": {"login": "aweng98"}, "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -1,28 +1,38 @@\n-import {Page} from 'puppeteer';\n import ClrIconLink from 'app/element/clr-icon-link';\n import {ElementType} from 'app/xpath-options';\n-import Dialog from './dialog';\n+import {Page} from 'puppeteer';\n+import {waitForNumericalString} from 'utils/waits-utils';\n+import {xPathOptionToXpath} from 'app/element/xpath-defaults';\n+import Dialog, {ButtonLabel} from './dialog';\n+import SelectMenu from './select-menu';\n \n const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class), \" \"), \" crit-modal-container \")]';\n \n export enum PhysicalMeasurementsCriteria {\n+  BloodPressure = 'Blood Pressure',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0NjgyNQ==", "bodyText": "Removing this check because the Add Criteria dialog has input fields which don't have labels. \ud83e\udd37\u200d\u2642\ufe0f\nMinor tweaking for xpath expressions to accommodate new type of UI fields in Add Criteria dialog.", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432546825", "createdAt": "2020-05-29T15:01:53Z", "author": {"login": "aweng98"}, "path": "e2e/app/element/xpath-defaults.ts", "diffHunk": "@@ -14,56 +14,47 @@ export function xPathOptionToXpath(xOpts: XPathOptions, container?: Container):\n     if (iconShape === undefined) {\n       throw new Error(`Incorrect XPathOptions configuration for Icon: set \"iconShape\" value.`);\n     }\n-  } else {\n-    if (name === undefined && normalizeSpace === undefined && containsText === undefined) {\n-      throw new Error(`Incorrect XPathOptions configuration for label name: \n-      Cannot find a text parameter: set \"name\", \"containsText\" or \"normalizeSpace\" value.`);\n-    }\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0OTIxNw==", "bodyText": "rename selectTab to openTab because I think select word can be confused with menu select.", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432549217", "createdAt": "2020-05-29T15:05:56Z", "author": {"login": "aweng98"}, "path": "e2e/app/page/data-page.ts", "diffHunk": "@@ -38,27 +38,27 @@ export default class DataPage extends AuthenticatedPage {\n     }\n   }\n \n-  async selectWorkspaceAction(action: WorkspaceAction) {\n+  async selectWorkspaceAction(action: WorkspaceAction): Promise<void> {\n     const ellipsisMenu = new EllipsisMenu(this.page, './/*[@data-test-id=\"workspace-menu-button\"]');\n-    await ellipsisMenu.selectAction(action);\n+    return ellipsisMenu.selectAction(action);\n   }\n \n   /**\n    * Select DATA, ANALYSIS or ABOUT page tab.\n    * @param tabName\n    */\n-  async selectTab(tabName: PageTab): Promise<void> {\n-    const selector = '//*[@aria-selected and @role=\"button\"]';\n-    await this.page.waitForXPath(selector, {visible: true});\n-    const tabs = await this.page.$x(selector);\n-    for (const tab of tabs) {\n-      const contentProp = await tab.getProperty('textContent');\n-      if (await contentProp.jsonValue() === tabName) {\n-        return tab.click();\n-      }\n-      await tab.dispose();\n-    }\n-    throw new Error(`Failed to find page tab with name ${tabName}`);\n+  async openTab(tabName: LabelAlias): Promise<void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTcwMQ==", "bodyText": "Cohort build page is not ready until Participants Count is calculated after adding new criterias. Participants Count numbers contain comma character(s). This function waits until Participants Count changes to a digits string with comma(s). It is used to get Counts and to indicate page is ready for next actions.", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432551701", "createdAt": "2020-05-29T15:10:01Z", "author": {"login": "aweng98"}, "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -75,6 +75,23 @@ export async function waitForPropertyEquality(\n   }\n }\n \n+export async function waitForNumericalString(page: Page, xpath: string): Promise<string> {\n+  await page.waitForXPath(xpath, {visible: true});\n+\n+  const numbers =  await page.waitForFunction( xpathSelector => {\n+    const node = document.evaluate(xpathSelector, document.body, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n+    if (node !== null) {\n+      const txt = node.textContent.trim();\n+      const re = new RegExp(/^\\d{1,3}(,\\d{3})*(\\.\\d+)?$/);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMDUyMTE5", "url": "https://github.com/all-of-us/workbench/pull/3623#pullrequestreview-421052119", "createdAt": "2020-05-29T15:19:51Z", "commit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNToxOTo1MVrOGchPjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxODozODo0NVrOGcn-Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1Nzk2Ng==", "bodyText": "Icons don't have labels - why is this called forLabel? What does this method really do?", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432557966", "createdAt": "2020-05-29T15:19:51Z", "author": {"login": "als364"}, "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1OTU1MQ==", "bodyText": "Same forLabel question. It seems like this is getting the SelectMenu. Why isn't this function called SelectMenu.get?", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432559551", "createdAt": "2020-05-29T15:22:24Z", "author": {"login": "als364"}, "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);\n+  }\n+\n+  /**\n+   * Add single Physical Measurements Criteria.\n+   * @param {PhysicalMeasurementsCriteria} criteriaName\n+   * @param {FilterSign}  filterSign\n+   * @param {number} filterValue\n+   */\n+  async filterPhysicalMeasurementValue(\n+     criteriaName: PhysicalMeasurementsCriteria,\n+     filterSign: FilterSign,\n+     filterValue: number): Promise<string> {\n+\n+    const link = await this.waitForPhysicalMeasurementCriteriaLink(criteriaName);\n+    await link.click();\n+\n+    const selectMenu = await SelectMenu.forLabel(this.page, {ancestorLevel: 2});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY0NTUwMw==", "bodyText": "nit: participlant -> participant. also, make the plurality consistent between the variable and the function - is it participantResults or participantsResult?", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432645503", "createdAt": "2020-05-29T17:52:35Z", "author": {"login": "als364"}, "path": "e2e/app/component/create-criteria-modal.ts", "diffHunk": "@@ -31,7 +41,53 @@ export default class CreateCriteriaModal extends Dialog {\n   }\n \n   async waitForPhysicalMeasurementCriteriaLink(criteriaType: PhysicalMeasurementsCriteria): Promise<ClrIconLink> {\n-    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider'}, this);\n+    return ClrIconLink.forLabel(this.page, {type: ElementType.Icon, name: criteriaType, iconShape: 'slider', ancestorLevel: 2}, this);\n+  }\n+\n+  /**\n+   * Add single Physical Measurements Criteria.\n+   * @param {PhysicalMeasurementsCriteria} criteriaName\n+   * @param {FilterSign}  filterSign\n+   * @param {number} filterValue\n+   */\n+  async filterPhysicalMeasurementValue(\n+     criteriaName: PhysicalMeasurementsCriteria,\n+     filterSign: FilterSign,\n+     filterValue: number): Promise<string> {\n+\n+    const link = await this.waitForPhysicalMeasurementCriteriaLink(criteriaName);\n+    await link.click();\n+\n+    const selectMenu = await SelectMenu.forLabel(this.page, {ancestorLevel: 2});\n+    await selectMenu.select(filterSign);\n+\n+    const numberField = await this.page.waitForXPath(`${this.xpath}//input[@type=\"number\"]`, {visible: true});\n+    await numberField.type('30');\n+\n+    await this.clickButton(ButtonLabel.Calculate);\n+    const participlantResults = await this.getParticipantsResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY1MjYwMw==", "bodyText": "It looks like what this function does is to find and click all items in a list of items - can you change the name of the function to indicate that that is what it does?", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432652603", "createdAt": "2020-05-29T18:07:01Z", "author": {"login": "als364"}, "path": "e2e/app/component/tiered-menu.ts", "diffHunk": "@@ -1,12 +1,42 @@\n import Container from 'app/container';\n-import {Page} from 'puppeteer';\n+import {ElementHandle, Page} from 'puppeteer';\n \n-const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class), \" \"), \" p-tieredmenu \")]';\n+const defaultXpath = '//*[contains(concat(\" \", normalize-space(@class)), \" p-tieredmenu\") ' +\n+   'and contains(concat(\" \", normalize-space(@class)), \" p-menu-overlay-visible\")]';\n \n export default class TieredMenu extends Container {\n \n   constructor(page: Page, xpath: string = defaultXpath) {\n     super(page, xpath);\n   }\n \n+  /**\n+   * Select menu item(s).\n+   * @param {ElementHandle} menuParentElement\n+   * @param {string | string[]} selectMenuItems\n+   */\n+  async select(selectMenuItems: string[]): Promise<void> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjY2ODE4Mw==", "bodyText": "This seems fragile. Participant counts may not always be over 1000. Could you instead check that the content changes?", "url": "https://github.com/all-of-us/workbench/pull/3623#discussion_r432668183", "createdAt": "2020-05-29T18:38:45Z", "author": {"login": "als364"}, "path": "e2e/utils/waits-utils.ts", "diffHunk": "@@ -75,6 +75,23 @@ export async function waitForPropertyEquality(\n   }\n }\n \n+export async function waitForNumericalString(page: Page, xpath: string): Promise<string> {\n+  await page.waitForXPath(xpath, {visible: true});\n+\n+  const numbers =  await page.waitForFunction( xpathSelector => {\n+    const node = document.evaluate(xpathSelector, document.body, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n+    if (node !== null) {\n+      const txt = node.textContent.trim();\n+      const re = new RegExp(/^\\d{1,3}(,\\d{3})*(\\.\\d+)?$/);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU1MTcwMQ=="}, "originalCommit": {"oid": "d962c39ad1eb8e28f07ead6d99239382dde8359f"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c3f2072c0511d64d9ead0b5280a9997a332aa7", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/70c3f2072c0511d64d9ead0b5280a9997a332aa7", "committedDate": "2020-05-29T19:57:19Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb6a7f40550118bdbbdbc5a1a59ba31ae2248f0f", "author": {"user": {"login": "aweng98", "name": null}}, "url": "https://github.com/all-of-us/workbench/commit/eb6a7f40550118bdbbdbc5a1a59ba31ae2248f0f", "committedDate": "2020-06-01T15:24:38Z", "message": "PR feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTQ5MDEw", "url": "https://github.com/all-of-us/workbench/pull/3623#pullrequestreview-421949010", "createdAt": "2020-06-01T15:27:43Z", "commit": {"oid": "eb6a7f40550118bdbbdbc5a1a59ba31ae2248f0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4801, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}