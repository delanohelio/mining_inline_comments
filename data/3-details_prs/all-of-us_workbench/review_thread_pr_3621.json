{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Nzc4NzU3", "number": 3621, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoxMzoxMlrOEDDUfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MTo0M1rOEDc-lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjM1NTgyOnYy", "diffSide": "RIGHT", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoxMzoxMlrOGf4k5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODozNDozM1rOGf5RGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NTk4OQ==", "bodyText": "nit: I'd prefer the nullable/map/orElse pattern here but I'm not gonna block on that", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436085989", "createdAt": "2020-06-05T18:13:12Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java", "diffHunk": "@@ -230,11 +238,34 @@ private WorkspaceExportRow toWorkspaceExportRow(DbWorkspace workspace) {\n   }\n \n   private WorkspaceExportRow toWorkspaceExportRow(DbUser user) {\n+    String verifiedInstitutionName =\n+        verifiedInstitutionalAffiliationDao\n+            .findFirstByUser(user)\n+            .map(via -> via.getInstitution().getDisplayName())\n+            .orElse(\"\");\n+\n     WorkspaceExportRow row = new WorkspaceExportRow();\n     row.setCreatorContactEmail(user.getContactEmail());\n     row.setCreatorUsername(user.getUsername());\n+    row.setInstitution(verifiedInstitutionName);\n     row.setCreatorFirstSignIn(\n         user.getFirstSignInTime() == null ? \"\" : dateFormat.format(user.getFirstSignInTime()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4806ce3f990ef1ecb4e865d7988f9920108831"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA5NzMwNQ==", "bodyText": "Agreed, done", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436097305", "createdAt": "2020-06-05T18:34:33Z", "author": {"login": "calbach"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/ExportWorkspaceData.java", "diffHunk": "@@ -230,11 +238,34 @@ private WorkspaceExportRow toWorkspaceExportRow(DbWorkspace workspace) {\n   }\n \n   private WorkspaceExportRow toWorkspaceExportRow(DbUser user) {\n+    String verifiedInstitutionName =\n+        verifiedInstitutionalAffiliationDao\n+            .findFirstByUser(user)\n+            .map(via -> via.getInstitution().getDisplayName())\n+            .orElse(\"\");\n+\n     WorkspaceExportRow row = new WorkspaceExportRow();\n     row.setCreatorContactEmail(user.getContactEmail());\n     row.setCreatorUsername(user.getUsername());\n+    row.setInstitution(verifiedInstitutionName);\n     row.setCreatorFirstSignIn(\n         user.getFirstSignInTime() == null ? \"\" : dateFormat.format(user.getFirstSignInTime()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NTk4OQ=="}, "originalCommit": {"oid": "ef4806ce3f990ef1ecb4e865d7988f9920108831"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjM2MTE5OnYy", "diffSide": "RIGHT", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxODoxNDoyMVrOGf4ojg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MDo0OFrOGgemag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg==", "bodyText": "welp this is certainly tedious.  assuming there's no better way or you'd have done it?", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436086926", "createdAt": "2020-06-05T18:14:21Z", "author": {"login": "jmthibault79"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -38,7 +50,7 @@ public void setCreatorFirstSignIn(String creatorFirstSignIn) {\n   }\n \n   @CsvBindByName(column = \"First Sign In\")\n-  @CsvBindByPosition(position = 2)\n+  @CsvBindByPosition(position = 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4806ce3f990ef1ecb4e865d7988f9920108831"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA5OTA5Nw==", "bodyText": "Indeed - I didn't do the initial implementation or review, but from a quick scan around some of the documentation, it seems that custom names + custom ordering is not very well supported by this CSV library. I would not be surprised if this is the best way (at least, for this library). Will consider digging deeper if we decide to extend the lifespan of this tool further - it may be going away soon'ish with new metrics export plans.", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436099097", "createdAt": "2020-06-05T18:38:09Z", "author": {"login": "calbach"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -38,7 +50,7 @@ public void setCreatorFirstSignIn(String creatorFirstSignIn) {\n   }\n \n   @CsvBindByName(column = \"First Sign In\")\n-  @CsvBindByPosition(position = 2)\n+  @CsvBindByPosition(position = 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg=="}, "originalCommit": {"oid": "ef4806ce3f990ef1ecb4e865d7988f9920108831"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwODk3MA==", "bodyText": "FWIW, this was not intended to be a long-lived implementation.", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436708970", "createdAt": "2020-06-08T13:40:48Z", "author": {"login": "jaycarlton"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -38,7 +50,7 @@ public void setCreatorFirstSignIn(String creatorFirstSignIn) {\n   }\n \n   @CsvBindByName(column = \"First Sign In\")\n-  @CsvBindByPosition(position = 2)\n+  @CsvBindByPosition(position = 3)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4NjkyNg=="}, "originalCommit": {"oid": "ef4806ce3f990ef1ecb4e865d7988f9920108831"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDU1OTU2OnYy", "diffSide": "RIGHT", "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MTo0M1rOGgepBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzo0MTo0M1rOGgepBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwOTYzNw==", "bodyText": "One option is to just write an array of JSON objects and use an off-the-shelf json->csv converter.", "url": "https://github.com/all-of-us/workbench/pull/3621#discussion_r436709637", "createdAt": "2020-06-08T13:41:43Z", "author": {"login": "jaycarlton"}, "path": "api/tools/src/main/java/org/pmiops/workbench/tools/WorkspaceExportRow.java", "diffHunk": "@@ -62,7 +122,7 @@ public void setProjectId(String projectId) {\n   }\n \n   @CsvBindByName(column = \"Workspace Project ID\")\n-  @CsvBindByPosition(position = 4)\n+  @CsvBindByPosition(position = 9)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43a021888f0cff8771501ba404c8d75787e2086a"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2731, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}