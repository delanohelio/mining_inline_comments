{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODUyNDU4", "number": 6135, "title": " fix: wrong value schema being registered for unwrapped primitives ", "bodyText": "Description\nfixes: #6134\nFixes an issue where the wrong schema is registered for unwrapped primitive values. The registered schema  incorrectly still has the value column wrapping in a record.\nAs part of this work AvroSchemas is now package private, and AvroFormat is used in its place in the code.\nTesting done\nusual\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-09-02T14:16:18Z", "url": "https://github.com/confluentinc/ksql/pull/6135", "merged": true, "mergeCommit": {"oid": "a9b6a8dad41ccbfdbfac516550ec3316f004d185"}, "closed": true, "closedAt": "2020-09-02T21:40:09Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE8qtOgH2gAyNDc3ODUyNDU4OjUxYzUxMzlmYjU1MzQzZWYxNjMxNjk2NWVkZjc5OThhYzBmYTEyYTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE-b1dgFqTQ4MDk4MTUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "51c5139fb55343ef16316965edf7998ac0fa12a7", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/51c5139fb55343ef16316965edf7998ac0fa12a7", "committedDate": "2020-09-02T14:13:53Z", "message": "fix: wrong value schema being registered for unwrapped primitives\n\nfixes: https://github.com/confluentinc/ksql/issues/6134\n\nFixes an issue where the wrong schema is registered for unwrapped primitive values. The registered schema  incorrectly still has the value column wrapping in a record."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "338d0d2b03773021d9693011f935e65af2810b3f", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/338d0d2b03773021d9693011f935e65af2810b3f", "committedDate": "2020-09-02T14:15:03Z", "message": "test: qtt test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/8927ae9cc4ec537040b0637fbcfb041aa672e099", "committedDate": "2020-09-02T14:15:14Z", "message": "test: historic plans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODcxNDQx", "url": "https://github.com/confluentinc/ksql/pull/6135#pullrequestreview-480871441", "createdAt": "2020-09-02T14:22:09Z", "commit": {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoyMjowOVrOHLxjgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoyMjowOVrOHLxjgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwODI4OA==", "bodyText": "Adding a validator here removes the need for a null check later.", "url": "https://github.com/confluentinc/ksql/pull/6135#discussion_r482108288", "createdAt": "2020-09-02T14:22:09Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConfig.java", "diffHunk": "@@ -523,6 +523,7 @@ private static ConfigDef buildConfigDef(final ConfigGeneration generation) {\n             SCHEMA_REGISTRY_URL_PROPERTY,\n             ConfigDef.Type.STRING,\n             \"\",\n+            new ConfigDef.NonNullValidator(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwOTgxNTEw", "url": "https://github.com/confluentinc/ksql/pull/6135#pullrequestreview-480981510", "createdAt": "2020-09-02T16:11:50Z", "commit": {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjoxMTo1MFrOHL2uJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNjoxMTo1MFrOHL2uJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE5MjkzNA==", "bodyText": "Add two more tests to validate the negative cases?\nif (unwrapSingle && !singleField) {\n      throw new KsqlException(\"'\" + CommonCreateConfigs.WRAP_SINGLE_VALUE + \"' \"\n          + \"is only valid for single-field value schemas\");\n    }", "url": "https://github.com/confluentinc/ksql/pull/6135#discussion_r482192934", "createdAt": "2020-09-02T16:11:50Z", "author": {"login": "spena"}, "path": "ksqldb-serde/src/test/java/io/confluent/ksql/serde/connect/ConnectFormatTest.java", "diffHunk": "@@ -95,6 +105,26 @@ public void shouldConvertTransformedConnectSchemaToColumns() {\n     assertThat(result.get(1).type(), is(SqlTypes.BIGINT));\n   }\n \n+  @Test\n+  public void shouldSupportPrimitiveSchemas() {\n+    // When:\n+    format.toParsedSchema(\n+        ImmutableList.of(column(\"bob\", SqlTypes.INTEGER)),\n+        SerdeOptions.of(SerdeOption.UNWRAP_SINGLE_VALUES),\n+        formatInfo\n+    );\n+\n+    // Then:\n+    assertThat(capturedConnectSchema, is(SchemaBuilder.int32().optional().build()));\n+  }\n+\n+  private static SimpleColumn column(final String name, final SqlType sqlType) {\n+    final SimpleColumn column = mock(SimpleColumn.class);\n+    when(column.name()).thenReturn(ColumnName.of(name));\n+    when(column.type()).thenReturn(sqlType);\n+    return column;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8927ae9cc4ec537040b0637fbcfb041aa672e099"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4750, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}