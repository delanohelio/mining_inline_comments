{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjYwOTEy", "number": 4357, "title": "feat: Use AbstractConfig for API server config", "bodyText": "Description\nIssue: #4330\nThis PR introduces a new config based on AbstractConfig for configuring the API server.\nThe current config param names and docs are kind of provisional as they're likely to change a fair bit as the server is integrated into the ksqlDB back end, so don't read too much into them right now.\nTesting done\nAPI tests pass\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-01-21T11:42:46Z", "url": "https://github.com/confluentinc/ksql/pull/4357", "merged": true, "mergeCommit": {"oid": "457b3cda5dfbe86a96a7104c3fd8b0c34014bfac"}, "closed": true, "closedAt": "2020-01-24T20:40:38Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9GuShABqjI5NzI5NjM4Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9kcLOABqjI5Nzg0MDYwOTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da49b989703adad7497bc1b1789ae68bbd155267", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/da49b989703adad7497bc1b1789ae68bbd155267", "committedDate": "2020-01-21T13:39:34Z", "message": "checkstyle"}, "afterCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/6525176eb2929af3428fda87a9cbeff126d7ccbc", "committedDate": "2020-01-23T09:13:52Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzY3MTg3", "url": "https://github.com/confluentinc/ksql/pull/4357#pullrequestreview-347367187", "createdAt": "2020-01-23T15:04:48Z", "commit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTowNDo0OFrOFhBdog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTowOTowN1rOFhBoFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3MTI5OA==", "bodyText": "Can we add  a ksql. prefix to this please?", "url": "https://github.com/confluentinc/ksql/pull/4357#discussion_r370171298", "createdAt": "2020-01-23T15:04:48Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import io.confluent.common.config.AbstractConfig;\n+import io.confluent.common.config.ConfigDef;\n+import io.confluent.common.config.ConfigDef.Importance;\n+import io.confluent.common.config.ConfigDef.Type;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.vertx.core.json.JsonObject;\n+import java.util.Map;\n+\n+/**\n+ * Config for the API server\n+ */\n+public class ApiServerConfig extends AbstractConfig {\n+\n+  private static final String PROPERTY_PREFIX = \"apiserver.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3MTg5Mg==", "bodyText": "I think using originalsWithPrefix will mean the returned JsonObject won't pick up any defaults defined in the config.   A unit test would check this.", "url": "https://github.com/confluentinc/ksql/pull/4357#discussion_r370171892", "createdAt": "2020-01-23T15:05:44Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import io.confluent.common.config.AbstractConfig;\n+import io.confluent.common.config.ConfigDef;\n+import io.confluent.common.config.ConfigDef.Importance;\n+import io.confluent.common.config.ConfigDef.Type;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.vertx.core.json.JsonObject;\n+import java.util.Map;\n+\n+/**\n+ * Config for the API server\n+ */\n+public class ApiServerConfig extends AbstractConfig {\n+\n+  private static final String PROPERTY_PREFIX = \"apiserver.\";\n+\n+  public static final String VERTICLE_INSTANCES = propertyName(\"verticle-instances\");\n+  public static final int DEFAULT_VERTICLE_INSTANCES =\n+      2 * Runtime.getRuntime().availableProcessors();\n+  public static final String VERTICLE_INSTANCES_DOC =\n+      \"The number of server verticle instances to start. Usually you want at least many instances\"\n+          + \" as there are cores you want to use, as each instance is single threaded.\";\n+\n+  public static final String LISTEN_HOST = propertyName(\"listen-host\");\n+  public static final String DEFAULT_LISTEN_HOST = \"0.0.0.0\";\n+  public static final String LISTEN_HOST_DOC =\n+      \"The hostname to listen on\";\n+\n+  public static final String LISTEN_PORT = propertyName(\"listen-port\");\n+  public static final int DEFAULT_LISTEN_PORT = 8089;\n+  public static final String LISTEN_PORT_DOC =\n+      \"The port to listen on\";\n+\n+  public static final String KEY_PATH = propertyName(\"key-path\");\n+  public static final String KEY_PATH_DOC =\n+      \"Path to key file\";\n+\n+  public static final String CERT_PATH = propertyName(\"cert-path\");\n+  public static final String CERT_PATH_DOC =\n+      \"Path to cert file\";\n+\n+  private static String propertyName(final String name) {\n+    return KsqlConfig.KSQL_CONFIG_PROPERTY_PREFIX + PROPERTY_PREFIX + name;\n+  }\n+\n+  private static final ConfigDef CONFIG_DEF = new ConfigDef()\n+      .define(\n+          VERTICLE_INSTANCES,\n+          Type.INT,\n+          DEFAULT_VERTICLE_INSTANCES,\n+          Importance.LOW,\n+          VERTICLE_INSTANCES_DOC)\n+      .define(\n+          LISTEN_HOST,\n+          Type.STRING,\n+          DEFAULT_LISTEN_HOST,\n+          Importance.MEDIUM,\n+          LISTEN_HOST_DOC)\n+      .define(\n+          LISTEN_PORT,\n+          Type.INT,\n+          DEFAULT_LISTEN_PORT,\n+          Importance.MEDIUM,\n+          LISTEN_PORT_DOC)\n+      .define(\n+          KEY_PATH,\n+          Type.STRING,\n+          null,\n+          Importance.MEDIUM,\n+          KEY_PATH_DOC)\n+      .define(\n+          CERT_PATH,\n+          Type.STRING,\n+          null,\n+          Importance.MEDIUM,\n+          CERT_PATH_DOC);\n+\n+  public ApiServerConfig(final Map<?, ?> map) {\n+    super(CONFIG_DEF, map);\n+  }\n+\n+  public ApiServerConfig(final JsonObject jsonObject) {\n+    super(CONFIG_DEF, jsonObject.getMap());\n+  }\n+\n+  public JsonObject toJsonObject() {\n+    return new JsonObject(originalsWithPrefix(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3Mjc0OQ==", "bodyText": "I would of thought we'd want ssl to be optional... could drive it off the presence or absence of ApiServerConfig.KEY_PATH?", "url": "https://github.com/confluentinc/ksql/pull/4357#discussion_r370172749", "createdAt": "2020-01-23T15:07:07Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -36,48 +36,56 @@\n  * This class represents the API server. On start-up it deploys multiple server verticles to spread\n  * the load across available cores.\n  */\n+// CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling\n public class Server {\n+  // CHECKSTYLE_RULES.ON: ClassDataAbstractionCoupling\n \n   private static final Logger log = LoggerFactory.getLogger(Server.class);\n \n   private final Vertx vertx;\n-  private final JsonObject config;\n+  private final ApiServerConfig config;\n   private final Endpoints endpoints;\n-  private final HttpServerOptions httpServerOptions;\n   private final Map<ApiQueryID, QuerySubscriber> queries = new ConcurrentHashMap<>();\n   private final Set<HttpConnection> connections = new ConcurrentHashSet<>();\n   private String deploymentID;\n \n-  public Server(final Vertx vertx, final JsonObject config, final Endpoints endpoints,\n-      final HttpServerOptions httpServerOptions) {\n+  public Server(final Vertx vertx, final ApiServerConfig config, final Endpoints endpoints) {\n     this.vertx = Objects.requireNonNull(vertx);\n     this.config = Objects.requireNonNull(config);\n     this.endpoints = Objects.requireNonNull(endpoints);\n-    this.httpServerOptions = Objects.requireNonNull(httpServerOptions);\n+  }\n+\n+  private HttpServerOptions createHttpServerOptions(final ApiServerConfig apiServerConfig) {\n+    return\n+        new HttpServerOptions().setHost(apiServerConfig.getString(ApiServerConfig.LISTEN_HOST))\n+            .setPort(apiServerConfig.getInt(ApiServerConfig.LISTEN_PORT))\n+            .setUseAlpn(true)\n+            .setSsl(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3Mzk3NQ==", "bodyText": "FYI, you can set Validators on these, e.g. to fail early if the port is negative etc.\nWhile on the subject of ports - Jetty supports auto-port assignment if port is zero. Does vert.x have something similar?  I've run into bind exceptions locally when doing multiple things - build servers could run into the same issue...", "url": "https://github.com/confluentinc/ksql/pull/4357#discussion_r370173975", "createdAt": "2020-01-23T15:09:07Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import io.confluent.common.config.AbstractConfig;\n+import io.confluent.common.config.ConfigDef;\n+import io.confluent.common.config.ConfigDef.Importance;\n+import io.confluent.common.config.ConfigDef.Type;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.vertx.core.json.JsonObject;\n+import java.util.Map;\n+\n+/**\n+ * Config for the API server\n+ */\n+public class ApiServerConfig extends AbstractConfig {\n+\n+  private static final String PROPERTY_PREFIX = \"apiserver.\";\n+\n+  public static final String VERTICLE_INSTANCES = propertyName(\"verticle-instances\");\n+  public static final int DEFAULT_VERTICLE_INSTANCES =\n+      2 * Runtime.getRuntime().availableProcessors();\n+  public static final String VERTICLE_INSTANCES_DOC =\n+      \"The number of server verticle instances to start. Usually you want at least many instances\"\n+          + \" as there are cores you want to use, as each instance is single threaded.\";\n+\n+  public static final String LISTEN_HOST = propertyName(\"listen-host\");\n+  public static final String DEFAULT_LISTEN_HOST = \"0.0.0.0\";\n+  public static final String LISTEN_HOST_DOC =\n+      \"The hostname to listen on\";\n+\n+  public static final String LISTEN_PORT = propertyName(\"listen-port\");\n+  public static final int DEFAULT_LISTEN_PORT = 8089;\n+  public static final String LISTEN_PORT_DOC =\n+      \"The port to listen on\";\n+\n+  public static final String KEY_PATH = propertyName(\"key-path\");\n+  public static final String KEY_PATH_DOC =\n+      \"Path to key file\";\n+\n+  public static final String CERT_PATH = propertyName(\"cert-path\");\n+  public static final String CERT_PATH_DOC =\n+      \"Path to cert file\";\n+\n+  private static String propertyName(final String name) {\n+    return KsqlConfig.KSQL_CONFIG_PROPERTY_PREFIX + PROPERTY_PREFIX + name;\n+  }\n+\n+  private static final ConfigDef CONFIG_DEF = new ConfigDef()\n+      .define(\n+          VERTICLE_INSTANCES,\n+          Type.INT,\n+          DEFAULT_VERTICLE_INSTANCES,\n+          Importance.LOW,\n+          VERTICLE_INSTANCES_DOC)\n+      .define(\n+          LISTEN_HOST,\n+          Type.STRING,\n+          DEFAULT_LISTEN_HOST,\n+          Importance.MEDIUM,\n+          LISTEN_HOST_DOC)\n+      .define(\n+          LISTEN_PORT,\n+          Type.INT,\n+          DEFAULT_LISTEN_PORT,\n+          Importance.MEDIUM,\n+          LISTEN_PORT_DOC)\n+      .define(\n+          KEY_PATH,\n+          Type.STRING,\n+          null,\n+          Importance.MEDIUM,\n+          KEY_PATH_DOC)\n+      .define(\n+          CERT_PATH,\n+          Type.STRING,\n+          null,\n+          Importance.MEDIUM,\n+          CERT_PATH_DOC);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc"}, "originalPosition": 92}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6525176eb2929af3428fda87a9cbeff126d7ccbc", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/6525176eb2929af3428fda87a9cbeff126d7ccbc", "committedDate": "2020-01-23T09:13:52Z", "message": "checkstyle"}, "afterCommit": {"oid": "63656728932b986b302173edf6cec2446ffca195", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/63656728932b986b302173edf6cec2446ffca195", "committedDate": "2020-01-24T18:15:06Z", "message": "checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0cd7580326a37a087692c2817f15c104478f03f", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/e0cd7580326a37a087692c2817f15c104478f03f", "committedDate": "2020-01-24T19:49:05Z", "message": "review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce23e591d5fe31963d9f19cc8a4148f4d0482137", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/ce23e591d5fe31963d9f19cc8a4148f4d0482137", "committedDate": "2020-01-24T19:51:04Z", "message": "checkstyle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63656728932b986b302173edf6cec2446ffca195", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/63656728932b986b302173edf6cec2446ffca195", "committedDate": "2020-01-24T18:15:06Z", "message": "checkstyle"}, "afterCommit": {"oid": "ce23e591d5fe31963d9f19cc8a4148f4d0482137", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/ce23e591d5fe31963d9f19cc8a4148f4d0482137", "committedDate": "2020-01-24T19:51:04Z", "message": "checkstyle"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}