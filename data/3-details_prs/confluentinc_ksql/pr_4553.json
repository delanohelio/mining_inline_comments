{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTY0NzEw", "number": 4553, "title": "docs: copy new serialization content to 5.5.x branch (DOCS-3399)", "bodyText": "This PR copies over the new serialization content from PR #4478 that belongs in v0.7.0 docs, which are published out of the 5.5.x branch (for tools support). The content that hasn't been copied stays in master and will be published in v0.8.0.", "createdAt": "2020-02-13T16:24:18Z", "url": "https://github.com/confluentinc/ksql/pull/4553", "merged": true, "mergeCommit": {"oid": "8f3fe5abb0c947b58a4841a022167d149de020d7"}, "closed": true, "closedAt": "2020-02-14T16:53:23Z", "author": {"login": "JimGalasyn"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD9aTwAH2gAyMzc0OTY0NzEwOmUwNTQ3MTM4ZTQ1YmIzYzlkY2Q0NjI4OGI0YTE4ZjJkNzBlODA4OGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcESKIOAFqTM1OTA2NTIwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e0547138e45bb3c9dcd46288b4a18f2d70e8088d", "author": {"user": {"login": "JimGalasyn", "name": "Jim Galasyn"}}, "url": "https://github.com/confluentinc/ksql/commit/e0547138e45bb3c9dcd46288b4a18f2d70e8088d", "committedDate": "2020-02-13T16:20:48Z", "message": "docs: copy new serialization content to 5.5.x branch (DOCS-3399)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "author": {"user": {"login": "JimGalasyn", "name": "Jim Galasyn"}}, "url": "https://github.com/confluentinc/ksql/commit/89c2ec7411d3108af6e3e384f1f8d19af3a5988f", "committedDate": "2020-02-13T16:26:29Z", "message": "docs: add newline to schemas topic to prevent future merge conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDYyMTk3", "url": "https://github.com/confluentinc/ksql/pull/4553#pullrequestreview-359062197", "createdAt": "2020-02-14T16:26:03Z", "commit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyNjowM1rOFp8TKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyNjowM1rOFp8TKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzg4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            can have any name.\n          \n          \n            \n            can have any [name](#valid-identifiers).", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379523881", "createdAt": "2020-02-14T16:26:03Z", "author": {"login": "big-andy-coates"}, "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r\n+and possibly a namespace.\r\n+\r\n+Key columns have a `KEY` namespace suffix. Key columns have the following restrictions:\r\n+  * The can only be a single key column, currently.\r\n+  * The key column must be named `ROWKEY` in the KSQL schema.\r\n+\r\n+Value columns have no namespace suffix. There can be one or more value columns amd the value columns\r\n+can have any name.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDY0MzQz", "url": "https://github.com/confluentinc/ksql/pull/4553#pullrequestreview-359064343", "createdAt": "2020-02-14T16:29:03Z", "commit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyOTowM1rOFp8ZZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyOTowM1rOFp8ZZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNTQ3Nw==", "bodyText": "I added this, but forgot to test that it renders the backticks correctly... it doesn't!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            back-tick quotes, for example ``col0``.\n          \n          \n            \n            back-tick quotes, for example `` `col0` ``.", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379525477", "createdAt": "2020-02-14T16:29:03Z", "author": {"login": "big-andy-coates"}, "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r\n+and possibly a namespace.\r\n+\r\n+Key columns have a `KEY` namespace suffix. Key columns have the following restrictions:\r\n+  * The can only be a single key column, currently.\r\n+  * The key column must be named `ROWKEY` in the KSQL schema.\r\n+\r\n+Value columns have no namespace suffix. There can be one or more value columns amd the value columns\r\n+can have any name.\r\n+\r\n+For example, the following declares a schema with a single `INT` key column and several value\r\n+columns:\r\n+\r\n+```sql\r\n+ROWKEY INT KEY, ID BIGINT, STRING NAME, ADDRESS ADDRESS_TYPE\r\n+```\r\n+\r\n+## Valid Identifiers\r\n+\r\n+Column and field names must be valid identifiers.\r\n+\r\n+Unquoted identifiers will be treated as upper-case, for example `col0` is equivalent to `COL0`, and\r\n+must contain only alpha-numeric and underscore characters.\r\n+\r\n+Identifiers containing invalid character, or where case needs to be preserved, can be quoted using\r\n+back-tick quotes, for example ``col0``.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5MDY1MjAx", "url": "https://github.com/confluentinc/ksql/pull/4553#pullrequestreview-359065201", "createdAt": "2020-02-14T16:30:17Z", "commit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjozMDoxN1rOFp8b6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjozMDoxN1rOFp8b6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNjEyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\n          \n          \n            \n            A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-types),", "url": "https://github.com/confluentinc/ksql/pull/4553#discussion_r379526120", "createdAt": "2020-02-14T16:30:17Z", "author": {"login": "big-andy-coates"}, "path": "docs-md/concepts/schemas.md", "diffHunk": "@@ -1,17 +1,190 @@\n ---\r\n layout: page\r\n title: Schemas in ksqlDB\r\n-tagline: Use schemas in your queries \r\n+tagline: Defining the structure of your data\r\n description: Learn how schemas work with ksqlDB\r\n keywords: ksqldb, schema, evolution, avro\r\n ---\r\n \r\n+Data sources like streams and tables have an associated schema. This schema defines the columns\r\n+available in the data, just like a the columns in a traditional SQL database table.\r\n+\r\n+## Key vs Value columns\r\n+\r\n+KsqlDB supports both key and value columns. These map to the data held in the keys and values of the\r\n+underlying {{ site.ak }} topic.\r\n+\r\n+A column is defined by a combination of its [name](#valid-identifiers), its [SQL data type](#sql-data-type),\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89c2ec7411d3108af6e3e384f1f8d19af3a5988f"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 22, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}