{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTM5MDc0", "number": 5368, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMToyOTowOVrOD9MzDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMTozMTowOFrOD9Mzmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDk5NDA0OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/CloseQueryArgs.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMToyOTowOVrOGWjtaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwODoxMzoyNVrOGWsGJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNjkyMQ==", "bodyText": "Why do we need to add this? I thought the point in setting .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES) in ApiJsonMapper was precisely so that we wouldn't have to individually set @JsonIgnoreProperties(ignoreUnknown = true) on each of the request and response types.", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426306921", "createdAt": "2020-05-17T21:29:09Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/CloseQueryArgs.java", "diffHunk": "@@ -13,17 +13,18 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package io.confluent.ksql.api.server.protocol;\n+package io.confluent.ksql.rest.entity;\n \n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.errorprone.annotations.Immutable;\n-import io.confluent.ksql.api.server.PushQueryId;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to a close query request\n  */\n @Immutable\n+@JsonIgnoreProperties(ignoreUnknown = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ0NDMyNA==", "bodyText": "This an old test in rest-model which tests that all the classes there have this.", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426444324", "createdAt": "2020-05-18T08:13:25Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/CloseQueryArgs.java", "diffHunk": "@@ -13,17 +13,18 @@\n  * specific language governing permissions and limitations under the License.\n  */\n \n-package io.confluent.ksql.api.server.protocol;\n+package io.confluent.ksql.rest.entity;\n \n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.google.errorprone.annotations.Immutable;\n-import io.confluent.ksql.api.server.PushQueryId;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to a close query request\n  */\n @Immutable\n+@JsonIgnoreProperties(ignoreUnknown = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNjkyMQ=="}, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDk5NDIyOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMToyOTo0M1rOGWjtiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwODoxNzo0OFrOGWsQGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNjk1Mw==", "bodyText": "This looks like it was meant to be removed.", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426306953", "createdAt": "2020-05-17T21:29:43Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "diffHunk": "@@ -63,6 +69,23 @@\n   public static final int ERROR_CODE_SERVER_ERROR =\n       toErrorCode(INTERNAL_SERVER_ERROR.code());\n \n+  /*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ0Njg3Mg==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426446872", "createdAt": "2020-05-18T08:17:48Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "diffHunk": "@@ -63,6 +69,23 @@\n   public static final int ERROR_CODE_SERVER_ERROR =\n       toErrorCode(INTERNAL_SERVER_ERROR.code());\n \n+  /*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNjk1Mw=="}, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDk5NTQ2OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QyMTozMTowOFrOGWjuHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwODoxNDo1NlrOGWsJmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNzEwMw==", "bodyText": "This PR is a breaking change since some of the error codes for the new API endpoints have changed. Can we mark it as a breaking change in the PR and commit description? Do we need to make updates to any of the examples that use the new API endpoints (e.g., the Javascript ride-sharing app)?", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426307103", "createdAt": "2020-05-17T21:31:08Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "diffHunk": "@@ -40,13 +40,19 @@\n   public static final int ERROR_CODE_BAD_STATEMENT = toErrorCode(BAD_REQUEST.code()) + 1;\n   private static final int ERROR_CODE_QUERY_ENDPOINT = toErrorCode(BAD_REQUEST.code()) + 2;\n \n+  public static final int ERROR_CODE_MAX_PUSH_QUERIES_EXCEEDED =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQ0NTIxMQ==", "bodyText": "We haven't released the new API yet, so I think it is ok :)", "url": "https://github.com/confluentinc/ksql/pull/5368#discussion_r426445211", "createdAt": "2020-05-18T08:14:56Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/Errors.java", "diffHunk": "@@ -40,13 +40,19 @@\n   public static final int ERROR_CODE_BAD_STATEMENT = toErrorCode(BAD_REQUEST.code()) + 1;\n   private static final int ERROR_CODE_QUERY_ENDPOINT = toErrorCode(BAD_REQUEST.code()) + 2;\n \n+  public static final int ERROR_CODE_MAX_PUSH_QUERIES_EXCEEDED =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjMwNzEwMw=="}, "originalCommit": {"oid": "b698eaed0d4eed6c228a0e58cff594e29718ac5b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3426, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}