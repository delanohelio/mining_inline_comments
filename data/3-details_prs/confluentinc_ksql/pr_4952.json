{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTYyMjM3", "number": 4952, "title": "Support aliases in PARTITION BY and GROUP BY", "bodyText": "Description\nfixes: #4881\nfixes: #4813\nThe commit adds support for aliases in GROUP BY and PARTITION BY clauses. For example:\n-- input schema: A -> B, C\nCREATE STREAM OUTPUT AS \n   SELECT A, B FROM INPUT \n   PARTITION BY C AS D;\n-- output schema: D -> A, B.  (where D contains same data as C from input)\n\n-- input schema: A -> B, C\nCREATE STREAM TABLE AS \n   SELECT COUNT(1) AS COUNT FROM INPUT\n   GROUP BY C AS D;\n-- output schema: D -> COUNT.  (where D contains same data as C from input)\nThis is particularly useful where the new key column name would be generated, e.g.\n-- without alias:\n-- input schema: A -> B, C\nCREATE STREAM OUTPUT AS \n   SELECT A, B FROM INPUT \n   PARTITION BY UDF(C);\n-- output schema: KSQL_COL_0 -> A, B\n\n-- with alias:\n-- input schema: A -> B, C\nCREATE STREAM OUTPUT AS \n   SELECT A, B FROM INPUT \n   PARTITION BY UDF(C) AS D;\n-- output schema: D -> A, B\nPARTITION BY only supports a single value expression, so aliasing on this is as you'd expect PARTITION BY X as Y.\nGROUP BY supports multiple value expressions, e.g. GROUP BY X, Y.  This will currently create a new STRING KEY with a generated name e.g. KSQL_COL_0.  The commit allows the full set of columns to be aliased, e.g. GROUP BY (X, Y) AS Z.  This is an interim solution. Once ksqlDB supports multiple key columns, the ability to alias the set of columns will be removed, and instead support will be added to alias each expression in the GROUP BY e.g. GROUP BY W as X, Y as Z.\nTesting done\nusual\nHow to review.\nReview the first commit which:\n\nupdates the grammar to support aliases on GROUP BY and PARTITION BY\nadds a PartitionBy much like the existing GroupBy AstNode.\n\nReview the second commit which wires in the aliases. Flow is:\n\ntweaks the grammar to support aliasing of single GROUP BY.\nAdds an optional alias to GroupBy and PartitionBy.\nUpdates SqlFormatter to know about aliases.\nChanges Analysis to take the whole GroupBy and PartitionBy nodes, rather than extract info out of them.\nChanges the LogicalPlanner to use the alias when building schemas and to pass it along where needed.\nChanges the existing StreamsSelectKey query plan step, used for PARTITION BY, to have an optional alias. (Backwards compatible as its optional)\nChanges the existing StreamsGroupBy and TableGroupBy query plan steps, used by GROUP BY, to have an optional alias.  (Backwards compatible as its optional)\nUpdates the builders for the above steps to do the right thing with regards to the new optional alias.\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-04-01T12:26:14Z", "url": "https://github.com/confluentinc/ksql/pull/4952", "merged": true, "mergeCommit": {"oid": "7abab48f88095dd3584a253cad6c142475086fc0"}, "closed": true, "closedAt": "2020-04-08T17:29:55Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTFXwZgH2gAyMzk2OTYyMjM3OmM2YWMwMzE3YThiNDk3MTg2ODY1NjA5OTI2ZjQwYWUwYjU2NjEyNTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVXa0UAFqTM4OTM1ODgwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c6ac0317a8b497186865609926f40ae0b5661259", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/c6ac0317a8b497186865609926f40ae0b5661259", "committedDate": "2020-03-31T16:06:07Z", "message": "chore: add PartitionBy type ready for aliasing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c55d8475f846707c4cb94e535fb898e23cf915", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d0c55d8475f846707c4cb94e535fb898e23cf915", "committedDate": "2020-04-01T12:14:16Z", "message": "chore: wire up aliasing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3abb2ab148d2b1a99bf563e6db04f4ea50dd9f09", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/3abb2ab148d2b1a99bf563e6db04f4ea50dd9f09", "committedDate": "2020-04-07T10:07:09Z", "message": "chore: merge from master\n\nConflicting files\nksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java\nksqldb-engine/src/main/java/io/confluent/ksql/structured/SchemaKStream.java\nksqldb-engine/src/test/java/io/confluent/ksql/structured/SchemaKStreamTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d8872db4236ba72efc50c1ba348ba54466452f9", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/3d8872db4236ba72efc50c1ba348ba54466452f9", "committedDate": "2020-04-07T10:29:15Z", "message": "chore: fix merge issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebaa005b99ea2aa0387803b1c4530421eea3ec0e", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/ebaa005b99ea2aa0387803b1c4530421eea3ec0e", "committedDate": "2020-04-07T16:24:39Z", "message": "chore: merge from master\n\nConflicting files\nksqldb-engine/src/main/java/io/confluent/ksql/engine/rewrite/AstSanitizer.java\nksqldb-engine/src/main/java/io/confluent/ksql/planner/LogicalPlanner.java\nksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/GroupByParamsFactory.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MzU4ODAz", "url": "https://github.com/confluentinc/ksql/pull/4952#pullrequestreview-389358803", "createdAt": "2020-04-07T17:57:18Z", "commit": {"oid": "d0c55d8475f846707c4cb94e535fb898e23cf915"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1NzoxOFrOGCPgJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1NzoxOFrOGCPgJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNDMyNw==", "bodyText": "just wondering, why not just go through with it?", "url": "https://github.com/confluentinc/ksql/pull/4952#discussion_r405004327", "createdAt": "2020-04-07T17:57:18Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/rewrite/AstSanitizer.java", "diffHunk": "@@ -159,6 +163,56 @@ public static Statement sanitize(final Statement node, final MetaStore metaStore\n       );\n     }\n \n+    @Override\n+    protected Optional<AstNode> visitGroupBy(\n+        final GroupBy node,\n+        final StatementRewriter.Context<Void> context\n+    ) {\n+      final List<Expression> groupingExpressions = node.getGroupingExpressions();\n+\n+      if (node.getAlias().isPresent()\n+          && groupingExpressions.size() == 1\n+          && groupingExpressions.get(0) instanceof ColumnReferenceExp) {\n+\n+        final ColumnName groupByColName = ((ColumnReferenceExp) groupingExpressions.get(0))\n+            .getColumnName();\n+\n+        if (node.getAlias().get().equals(groupByColName)) {\n+          // Alias is a no-op - remove it:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0c55d8475f846707c4cb94e535fb898e23cf915"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}