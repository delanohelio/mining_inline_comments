{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5NDcxOTQ5", "number": 5563, "title": "feat: new split_to_map udf", "bodyText": "Description\nNew UDF  split_to_map(input, entryDelimiter, kvDelimiter) to build a map from a string.\nUseful for taking messages from upstream systems and converting them into a more structured and usable format.\nTesting done\nNew Unit & QTT tests.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-06-06T22:11:43Z", "url": "https://github.com/confluentinc/ksql/pull/5563", "merged": true, "mergeCommit": {"oid": "7e9e4d1439bc89293b58d476e8388665c3364ad1"}, "closed": true, "closedAt": "2020-06-11T20:36:09Z", "author": {"login": "blueedgenick"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcousN7gH2gAyNDI5NDcxOTQ5OjUzMmRkOWM2YmRlM2JjMTdiN2NjZWU0YzJkMTc3MjQ4MTAwNTg1MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqRgpmgFqTQyOTEyMDA1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "532dd9c6bde3bc17b7ccee4c2d17724810058512", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/532dd9c6bde3bc17b7ccee4c2d17724810058512", "committedDate": "2020-06-06T22:06:59Z", "message": "initial commit new split_to_map udf"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cadab2bfffce5b32a367dbfce8ac01a42de8043f", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/cadab2bfffce5b32a367dbfce8ac01a42de8043f", "committedDate": "2020-06-07T01:40:32Z", "message": "missed a 'final'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62da1e8bac4db51671be9c9772cb15a8f7938995", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/62da1e8bac4db51671be9c9772cb15a8f7938995", "committedDate": "2020-06-07T18:24:03Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/638132435b096f3f01a5878be896006dad45922e", "committedDate": "2020-06-07T22:50:57Z", "message": "fix checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2Mzg1Njk3", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-426385697", "createdAt": "2020-06-08T15:58:50Z", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1ODo1MFrOGglMjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNTo1OTozMVrOGglOXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzAzOA==", "bodyText": "by the way, guava Splitter has support for withKeyValueSeparator to simplify exactly this :)\nFrom the docs:\n    /*\n     * For example, {@code\n     * Splitter.on(';').trimResults().withKeyValueSeparator(\"=>\").split(\"a=>b ; c=>b\")} will return\n     * a mapping from {@code \"a\"} to {@code \"b\"} and {@code \"c\"} to {@code \"b\"}.", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436817038", "createdAt": "2020-06-08T15:58:50Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/SplitToMap.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import com.google.common.base.Splitter;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+@UdfDescription(\n+    name = \"split_to_map\",\n+    description = \"Splits a string into key-value pairs and creates a map from them. The \"\n+        + \"'entryDelimiter' splits the string into key-value pairs which are then split by \"\n+        + \"'kvDelimiter'. If the same key is present multiple times in the input, the latest \"\n+        + \"value for that key is returned. Returns NULL f the input text or either of the \"\n+        + \"delimiters is NULL.\")\n+public class SplitToMap {\n+  @Udf\n+  public Map<String, String> splitToMap(\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String input,\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String entryDelimiter,\n+      @UdfParameter(\n+          description = \"Separator string and values to join\") final String kvDelimiter) {\n+\n+    if (input == null || entryDelimiter == null || kvDelimiter == null) {\n+      return null;\n+    }\n+\n+    if (entryDelimiter.isEmpty() || kvDelimiter.isEmpty() || entryDelimiter.equals(kvDelimiter)) {\n+      return null;\n+    }\n+\n+    final Iterable<String> entries = Splitter.on(entryDelimiter).omitEmptyStrings().split(input);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjgxNzUwMw==", "bodyText": "We may also want to have EncodeMap(map, entry_delim, kv_delim) which encodes a map into a string", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436817503", "createdAt": "2020-06-08T15:59:31Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/SplitToMap.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import com.google.common.base.Splitter;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+@UdfDescription(\n+    name = \"split_to_map\",\n+    description = \"Splits a string into key-value pairs and creates a map from them. The \"\n+        + \"'entryDelimiter' splits the string into key-value pairs which are then split by \"\n+        + \"'kvDelimiter'. If the same key is present multiple times in the input, the latest \"\n+        + \"value for that key is returned. Returns NULL f the input text or either of the \"\n+        + \"delimiters is NULL.\")\n+public class SplitToMap {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTQyOTI0", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-426542924", "createdAt": "2020-06-08T19:10:08Z", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxMDowOVrOGgsZYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxMDowOVrOGgsZYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkzNTAwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            'entryDelimiter' splits the string into key-value pairs which are then split by 'kvDelimiter'. If the same key is present multiple times in the input, the latest value for that key is returned. \n          \n          \n            \n            `entryDelimiter` splits the string into key-value pairs which are then split by `kvDelimiter`. If the same key is present multiple times in the input, the latest value for that key is returned.", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436935008", "createdAt": "2020-06-08T19:10:09Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -701,6 +701,23 @@ If the delimiter is found at the beginning or end\n of the string, or there are contiguous delimiters,\n then an empty space is added to the array.\n \n+### `SPLIT_TO_MAP`\n+\n+```sql\n+SPLIT_TO_MAP(input, entryDelimiter, kvDelimiter)\n+```\n+\n+Splits a string into key-value pairs and creates a map from them. The \n+'entryDelimiter' splits the string into key-value pairs which are then split by 'kvDelimiter'. If the same key is present multiple times in the input, the latest value for that key is returned. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTQzMDcx", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-426543071", "createdAt": "2020-06-08T19:10:23Z", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxMDoyM1rOGgsacg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxMDoyM1rOGgsacg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkzNTI4Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Returns NULL f the input text is NULL.\n          \n          \n            \n            Returns NULL if the input text is NULL.", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r436935282", "createdAt": "2020-06-08T19:10:23Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -701,6 +701,23 @@ If the delimiter is found at the beginning or end\n of the string, or there are contiguous delimiters,\n then an empty space is added to the array.\n \n+### `SPLIT_TO_MAP`\n+\n+```sql\n+SPLIT_TO_MAP(input, entryDelimiter, kvDelimiter)\n+```\n+\n+Splits a string into key-value pairs and creates a map from them. The \n+'entryDelimiter' splits the string into key-value pairs which are then split by 'kvDelimiter'. If the same key is present multiple times in the input, the latest value for that key is returned. \n+\n+Returns NULL f the input text is NULL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTQzMzA4", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-426543308", "createdAt": "2020-06-08T19:10:44Z", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjE3NzE0", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-428217714", "createdAt": "2020-06-10T16:12:23Z", "commit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMjoyM1rOGh8Z9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxMjoyM1rOGh8Z9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0NTg3Ng==", "bodyText": "can you add a test with whitespace? what do we want the behavior to be when there is whitespace (e.g. foo := bar)", "url": "https://github.com/confluentinc/ksql/pull/5563#discussion_r438245876", "createdAt": "2020-06-10T16:12:23Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/test/java/io/confluent/ksql/function/udf/string/SplitToMapTest.java", "diffHunk": "@@ -0,0 +1,123 @@\n+/*\n+ * Copyright 2018 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+package io.confluent.ksql.function.udf.string;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.hasEntry;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.Matchers.nullValue;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import org.junit.Test;\n+\n+public class SplitToMapTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638132435b096f3f01a5878be896006dad45922e"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e24cc4c79fce9432e8f3c56032694bf8ef32b7a", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/2e24cc4c79fce9432e8f3c56032694bf8ef32b7a", "committedDate": "2020-06-10T20:52:59Z", "message": "add new test-case from Almog's feedback. doc updates from Jim"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTIwMDUx", "url": "https://github.com/confluentinc/ksql/pull/5563#pullrequestreview-429120051", "createdAt": "2020-06-11T17:14:57Z", "commit": {"oid": "2e24cc4c79fce9432e8f3c56032694bf8ef32b7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4721, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}