{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjE4NjYz", "number": 6067, "title": "feat: Support IF EXISTS keyword on DROP CONNECTOR", "bodyText": "Description\nFixes #5988\nAdded IF EXISTS keyword to the DROP CONNECTOR command.\nPreviously, this error message would have shown if the connector does not exist:\n Error                                   \n-----------------------------------------\n {\n  \"error_code\" : 404,\n  \"message\" : \"Connector FOO not found\"\n} \n-----------------------------------------\n\nWith this change, if the IF EXISTS keyword is used, the response is:\n Message                         \n---------------------------------\n Connector 'FOO' does not exist. \n---------------------------------\n\nIf the IF EXISTS keyword is not used, the response is the original error response.\nI added a new Entity class called WarningEntity that prints a message without the Error header. It could also be used in other similar situations, such as #5992.\nTesting done\nAdded tests to DropConnectorExecutorTest.java\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-08-20T20:16:31Z", "url": "https://github.com/confluentinc/ksql/pull/6067", "merged": true, "mergeCommit": {"oid": "2c99df9104c562385fe93cef13340e5be716928a"}, "closed": true, "closedAt": "2020-08-24T21:57:55Z", "author": {"login": "jzaralim"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdA1p7YAH2gAyNDcxMjE4NjYzOjQ5MjJjNmExNzQyZTJhMjY4Nzk1MDc0YTEzNTQwYzFmZmI5ZDk4MGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA3xC1gH2gAyNDcxMjE4NjYzOjQ1MzEyNWM4N2Y4NTM4ZjgwMDI5Mjc4ZjMyM2MyYzE5Mzg3MGZhODU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a", "author": {"user": null}, "url": "https://github.com/confluentinc/ksql/commit/4922c6a1742e2a268795074a13540c1ffb9d980a", "committedDate": "2020-08-20T19:48:00Z", "message": "feat: Support IF EXISTS keyword on DROP CONNECTOR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTY0MzM2", "url": "https://github.com/confluentinc/ksql/pull/6067#pullrequestreview-471964336", "createdAt": "2020-08-20T20:32:07Z", "commit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMjowN1rOHESRWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMjowN1rOHESRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1NTcwNw==", "bodyText": "I think you mean WarningEntity here", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474255707", "createdAt": "2020-08-20T20:32:07Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/WarningEntity.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.errorprone.annotations.Immutable;\n+\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@Immutable\n+public class WarningEntity extends KsqlEntity {\n+  private final String message;\n+\n+  @JsonCreator\n+  public WarningEntity(\n+       @JsonProperty(\"statementText\") final String statementText,\n+       @JsonProperty(\"message\") final String message\n+  ) {\n+    super(statementText);\n+    this.message = Objects.requireNonNull(message, \"message\");\n+  }\n+\n+  public String getMessage() {\n+    return message;\n+  }\n+\n+  @Override\n+  public boolean equals(final Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    final WarningEntity that = (WarningEntity) o;\n+    return Objects.equals(message, that.message);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(message);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"ErrorEntity{\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTY5NTY0", "url": "https://github.com/confluentinc/ksql/pull/6067#pullrequestreview-471969564", "createdAt": "2020-08-20T20:40:22Z", "commit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDo0MDoyMlrOHEShag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDo0MDoyMlrOHEShag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1OTgxOA==", "bodyText": "Is there a reason why we're switching to using this toStringHelper function now? There seems to be a mix of using this method vs defining out manually what the string representation looks like for different AstNodes.", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474259818", "createdAt": "2020-08-20T20:40:22Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/tree/DropConnector.java", "diffHunk": "@@ -41,18 +53,19 @@ public boolean equals(final Object o) {\n       return false;\n     }\n     final DropConnector that = (DropConnector) o;\n-    return Objects.equals(connectorName, that.connectorName);\n+    return Objects.equals(connectorName, that.connectorName) && ifExists == that.ifExists;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(connectorName);\n+    return Objects.hash(ifExists, connectorName);\n   }\n \n   @Override\n   public String toString() {\n-    return \"DropConnector{\"\n-        + \"connectorName='\" + connectorName + '\\''\n-        + '}';\n+    return toStringHelper(this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDA2NjAz", "url": "https://github.com/confluentinc/ksql/pull/6067#pullrequestreview-472006603", "createdAt": "2020-08-20T21:43:11Z", "commit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0MzoxMVrOHEUUTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0MzoxMVrOHEUUTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTIyOA==", "bodyText": "You may want to use HttpStatus.SC_NOT_FOUND instead of just 404.", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474289228", "createdAt": "2020-08-20T21:43:11Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/DropConnectorExecutor.java", "diffHunk": "@@ -37,11 +38,17 @@ private DropConnectorExecutor() { }\n       final ServiceContext serviceContext\n   ) {\n     final String connectorName = statement.getStatement().getConnectorName();\n+    final boolean ifExists = statement.getStatement().getIfExists();\n     final ConnectResponse<String> response =\n         serviceContext.getConnectClient().delete(connectorName);\n \n     if (response.error().isPresent()) {\n-      return Optional.of(new ErrorEntity(statement.getStatementText(), response.error().get()));\n+      if (ifExists && response.httpCode() == 404) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDA4MjAx", "url": "https://github.com/confluentinc/ksql/pull/6067#pullrequestreview-472008201", "createdAt": "2020-08-20T21:46:14Z", "commit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "453125c87f8538f80029278f323c2c193870fa85", "author": {"user": null}, "url": "https://github.com/confluentinc/ksql/commit/453125c87f8538f80029278f323c2c193870fa85", "committedDate": "2020-08-20T22:15:35Z", "message": "fix: review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4720, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}