{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTE0MjQ2", "number": 5808, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNDowNFrOENFqwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODo1MFrOEQv9sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTU5ODA4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNDowNFrOGvk-kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNDowNFrOGvk-kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MjA5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Monitoring and monitoring\n          \n          \n            \n            # Monitoring and metrics", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452542096", "createdAt": "2020-07-09T23:24:04Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTU5ODYxOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNDoxOVrOGvk-5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNDoxOVrOGvk-5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MjE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## Enabling monitoring\n          \n          \n            \n            ## Enable monitoring", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452542182", "createdAt": "2020-07-09T23:24:19Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwMDkwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNToxNVrOGvlAMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNToxNVrOGvlAMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MjUxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To illustrate how that should look, take a look at this Docker Compose\n          \n          \n            \n            The following Docker Compose", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452542515", "createdAt": "2020-07-09T23:25:15Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwMjY1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNjowNlrOGvlBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNjowNlrOGvlBNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0Mjc3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            snippet. This is an example of how ksqlDB server can be configured for\n          \n          \n            \n            example shows how you can configure monitoring for ksqlDB server.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452542773", "createdAt": "2020-07-09T23:26:06Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwMzE4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNjoxOFrOGvlBdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNjoxOFrOGvlBdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MjgzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            monitoring. The surrounding components, like the broker and CLI, are\n          \n          \n            \n            The surrounding components, like the broker and CLI, are", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452542838", "createdAt": "2020-07-09T23:26:18Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for\n+monitoring. The surrounding components, like the broker and CLI, are", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwNDgwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzowMVrOGvlCZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzowMVrOGvlCZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MzA3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              `KSQL_JMX_OPTS` configuration. This allows remote monitoring tools\n          \n          \n            \n              `KSQL_JMX_OPTS` configuration. This enables remote monitoring tools", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452543079", "createdAt": "2020-07-09T23:27:01Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for\n+monitoring. The surrounding components, like the broker and CLI, are\n+omitted for brevity. You can see an example of a complete setup in the\n+[quickstart](https://ksqldb.io/quickstart.html).\n+\n+```yaml\n+ksqldb-server:\n+  image: confluentinc/ksqldb-server:0.10.1\n+  hostname: ksqldb-server\n+  container_name: ksqldb-server\n+  depends_on:\n+    - broker\n+    - schema-registry\n+  ports:\n+    - \"8088:8088\"\n+    - \"1099:1099\"\n+  environment:\n+    KSQL_LISTENERS: \"http://0.0.0.0:8088\"\n+    KSQL_BOOTSTRAP_SERVERS: \"broker:9092\"\n+    KSQL_KSQL_SCHEMA_REGISTRY_URL: \"http://schema-registry:8081\"\n+    KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: \"true\"\n+    KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: \"true\"\n+    KSQL_JMX_OPTS: >\n+      -Djava.rmi.server.hostname=localhost\n+      -Dcom.sun.management.jmxremote\n+      -Dcom.sun.management.jmxremote.port=1099\n+      -Dcom.sun.management.jmxremote.authenticate=false\n+      -Dcom.sun.management.jmxremote.ssl=false\n+      -Dcom.sun.management.jmxremote.rmi.port=1099\n+```\n+\n+With respect to monitoring, here it what this does:\n+\n+- The environment variable `KSQL_JMX_OPTS` is supplied to the server\n+  with various arguments. The `>` character lets you write a\n+  multi-line string in Yaml, which makes this long argument easier to\n+  read. The advertised hostname, port, and security settings are\n+  configured. JMX has a wide range of [configuration\n+  options](https://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html),\n+  and you can set these however you like.\n+\n+- Port `1099` is exposed, which corresponds to the JMX port set in the\n+  `KSQL_JMX_OPTS` configuration. This allows remote monitoring tools", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwNTUwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzoyNVrOGvlC2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzoyNVrOGvlC2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MzE5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            On your host machine, simply run the command:\n          \n          \n            \n            On your host machine, run the command:", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452543193", "createdAt": "2020-07-09T23:27:25Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for\n+monitoring. The surrounding components, like the broker and CLI, are\n+omitted for brevity. You can see an example of a complete setup in the\n+[quickstart](https://ksqldb.io/quickstart.html).\n+\n+```yaml\n+ksqldb-server:\n+  image: confluentinc/ksqldb-server:0.10.1\n+  hostname: ksqldb-server\n+  container_name: ksqldb-server\n+  depends_on:\n+    - broker\n+    - schema-registry\n+  ports:\n+    - \"8088:8088\"\n+    - \"1099:1099\"\n+  environment:\n+    KSQL_LISTENERS: \"http://0.0.0.0:8088\"\n+    KSQL_BOOTSTRAP_SERVERS: \"broker:9092\"\n+    KSQL_KSQL_SCHEMA_REGISTRY_URL: \"http://schema-registry:8081\"\n+    KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: \"true\"\n+    KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: \"true\"\n+    KSQL_JMX_OPTS: >\n+      -Djava.rmi.server.hostname=localhost\n+      -Dcom.sun.management.jmxremote\n+      -Dcom.sun.management.jmxremote.port=1099\n+      -Dcom.sun.management.jmxremote.authenticate=false\n+      -Dcom.sun.management.jmxremote.ssl=false\n+      -Dcom.sun.management.jmxremote.rmi.port=1099\n+```\n+\n+With respect to monitoring, here it what this does:\n+\n+- The environment variable `KSQL_JMX_OPTS` is supplied to the server\n+  with various arguments. The `>` character lets you write a\n+  multi-line string in Yaml, which makes this long argument easier to\n+  read. The advertised hostname, port, and security settings are\n+  configured. JMX has a wide range of [configuration\n+  options](https://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html),\n+  and you can set these however you like.\n+\n+- Port `1099` is exposed, which corresponds to the JMX port set in the\n+  `KSQL_JMX_OPTS` configuration. This allows remote monitoring tools\n+  to communicate into ksqlDB's process.\n+\n+## Verifying your monitoring setup\n+\n+An easy way to check that ksqlDB is properly emitting metrics is by\n+using `jconsole`. JConsole is a graphical monitoring tool to monitor\n+the JVM, and it ships with by default with Oracle JDK installations.\n+\n+On your host machine, simply run the command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwNjM1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzozNlrOGvlDRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzozNlrOGvlDRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MzMwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ```\n          \n          \n            \n            ```bash", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452543300", "createdAt": "2020-07-09T23:27:36Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for\n+monitoring. The surrounding components, like the broker and CLI, are\n+omitted for brevity. You can see an example of a complete setup in the\n+[quickstart](https://ksqldb.io/quickstart.html).\n+\n+```yaml\n+ksqldb-server:\n+  image: confluentinc/ksqldb-server:0.10.1\n+  hostname: ksqldb-server\n+  container_name: ksqldb-server\n+  depends_on:\n+    - broker\n+    - schema-registry\n+  ports:\n+    - \"8088:8088\"\n+    - \"1099:1099\"\n+  environment:\n+    KSQL_LISTENERS: \"http://0.0.0.0:8088\"\n+    KSQL_BOOTSTRAP_SERVERS: \"broker:9092\"\n+    KSQL_KSQL_SCHEMA_REGISTRY_URL: \"http://schema-registry:8081\"\n+    KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: \"true\"\n+    KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: \"true\"\n+    KSQL_JMX_OPTS: >\n+      -Djava.rmi.server.hostname=localhost\n+      -Dcom.sun.management.jmxremote\n+      -Dcom.sun.management.jmxremote.port=1099\n+      -Dcom.sun.management.jmxremote.authenticate=false\n+      -Dcom.sun.management.jmxremote.ssl=false\n+      -Dcom.sun.management.jmxremote.rmi.port=1099\n+```\n+\n+With respect to monitoring, here it what this does:\n+\n+- The environment variable `KSQL_JMX_OPTS` is supplied to the server\n+  with various arguments. The `>` character lets you write a\n+  multi-line string in Yaml, which makes this long argument easier to\n+  read. The advertised hostname, port, and security settings are\n+  configured. JMX has a wide range of [configuration\n+  options](https://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html),\n+  and you can set these however you like.\n+\n+- Port `1099` is exposed, which corresponds to the JMX port set in the\n+  `KSQL_JMX_OPTS` configuration. This allows remote monitoring tools\n+  to communicate into ksqlDB's process.\n+\n+## Verifying your monitoring setup\n+\n+An easy way to check that ksqlDB is properly emitting metrics is by\n+using `jconsole`. JConsole is a graphical monitoring tool to monitor\n+the JVM, and it ships with by default with Oracle JDK installations.\n+\n+On your host machine, simply run the command:\n+\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTYwNzE5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzo1M1rOGvlDrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzoyNzo1M1rOGvlDrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU0MzQwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            configuration, `localhost:1099` will establish the connection. You\n          \n          \n            \n            configuration, `localhost:1099` establishes the connection. You", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452543407", "createdAt": "2020-07-09T23:27:53Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring-and-metrics.md", "diffHunk": "@@ -0,0 +1,88 @@\n+# Monitoring and monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive set of metrics are published, including number of rows\n+processed, throughput, throughput distribution, and error rate.\n+\n+## Enabling monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable\n+it in a Docker-based deployment, export an environment variable named\n+`KSQL_JMX_OPTS` with your JMX configuration and expose the port that\n+JMX will communicate over.\n+\n+To illustrate how that should look, take a look at this Docker Compose\n+snippet. This is an example of how ksqlDB server can be configured for\n+monitoring. The surrounding components, like the broker and CLI, are\n+omitted for brevity. You can see an example of a complete setup in the\n+[quickstart](https://ksqldb.io/quickstart.html).\n+\n+```yaml\n+ksqldb-server:\n+  image: confluentinc/ksqldb-server:0.10.1\n+  hostname: ksqldb-server\n+  container_name: ksqldb-server\n+  depends_on:\n+    - broker\n+    - schema-registry\n+  ports:\n+    - \"8088:8088\"\n+    - \"1099:1099\"\n+  environment:\n+    KSQL_LISTENERS: \"http://0.0.0.0:8088\"\n+    KSQL_BOOTSTRAP_SERVERS: \"broker:9092\"\n+    KSQL_KSQL_SCHEMA_REGISTRY_URL: \"http://schema-registry:8081\"\n+    KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: \"true\"\n+    KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: \"true\"\n+    KSQL_JMX_OPTS: >\n+      -Djava.rmi.server.hostname=localhost\n+      -Dcom.sun.management.jmxremote\n+      -Dcom.sun.management.jmxremote.port=1099\n+      -Dcom.sun.management.jmxremote.authenticate=false\n+      -Dcom.sun.management.jmxremote.ssl=false\n+      -Dcom.sun.management.jmxremote.rmi.port=1099\n+```\n+\n+With respect to monitoring, here it what this does:\n+\n+- The environment variable `KSQL_JMX_OPTS` is supplied to the server\n+  with various arguments. The `>` character lets you write a\n+  multi-line string in Yaml, which makes this long argument easier to\n+  read. The advertised hostname, port, and security settings are\n+  configured. JMX has a wide range of [configuration\n+  options](https://docs.oracle.com/javase/8/docs/technotes/guides/management/agent.html),\n+  and you can set these however you like.\n+\n+- Port `1099` is exposed, which corresponds to the JMX port set in the\n+  `KSQL_JMX_OPTS` configuration. This allows remote monitoring tools\n+  to communicate into ksqlDB's process.\n+\n+## Verifying your monitoring setup\n+\n+An easy way to check that ksqlDB is properly emitting metrics is by\n+using `jconsole`. JConsole is a graphical monitoring tool to monitor\n+the JVM, and it ships with by default with Oracle JDK installations.\n+\n+On your host machine, simply run the command:\n+\n+```\n+jconsole\n+```\n+\n+You will be prompted for a host and port. If you used the example\n+configuration, `localhost:1099` will establish the connection. You", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f9493eb6b921d63625bc56019cc80cddbf98ce"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzc4NDc5OnYy", "diffSide": "RIGHT", "path": "docs/reference/metrics.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyODoxNFrOGv5jGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDozMTo1NlrOGw4vmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3OTEzMA==", "bodyText": "I realize this part is within a TODO, but I am curious if this means that ksqlDB server directly provides the kafka.streams:* MBeans listed on the linked page. For instance, should I expect thread and task metrics to be provided directly by ksqlDB's JMX endpoint, or would I have to gather them from JMX on the broker?", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452879130", "createdAt": "2020-07-10T14:28:14Z", "author": {"login": "colinhicks"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,115 @@\n+# Metrics\n+\n+TODO: intro text.\n+\n+TODO: move - Because ksqlDB persistent queries directly compile into {{\n+site.kstreams }} topologies, many ksqlDB metrics correspond to [Kafka\n+Streams metrics](https://docs.confluent.io/current/streams/monitoring.html).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2058d9288beb98f1efa97d18d71756dc2cc84587"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkwMDk1NQ==", "bodyText": "I'm going to dig in and find out. :)", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r452900955", "createdAt": "2020-07-10T15:04:07Z", "author": {"login": "MichaelDrogalis"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,115 @@\n+# Metrics\n+\n+TODO: intro text.\n+\n+TODO: move - Because ksqlDB persistent queries directly compile into {{\n+site.kstreams }} topologies, many ksqlDB metrics correspond to [Kafka\n+Streams metrics](https://docs.confluent.io/current/streams/monitoring.html).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3OTEzMA=="}, "originalCommit": {"oid": "2058d9288beb98f1efa97d18d71756dc2cc84587"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxNDUyMA==", "bodyText": "I am curious if this means that ksqlDB server directly provides the kafka.streams:*\n\nIt does.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r453914520", "createdAt": "2020-07-13T20:31:56Z", "author": {"login": "MichaelDrogalis"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,115 @@\n+# Metrics\n+\n+TODO: intro text.\n+\n+TODO: move - Because ksqlDB persistent queries directly compile into {{\n+site.kstreams }} topologies, many ksqlDB metrics correspond to [Kafka\n+Streams metrics](https://docs.confluent.io/current/streams/monitoring.html).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3OTEzMA=="}, "originalCommit": {"oid": "2058d9288beb98f1efa97d18d71756dc2cc84587"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk2NDQ0OnYy", "diffSide": "RIGHT", "path": "docs/reference/metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMzowMlrOG1Ey0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMzowMlrOG1Ey0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNjI1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Metrics that describe the health of the CommandRunner thread, which\n          \n          \n            \n            Metrics that describe the health of the `CommandRunner` thread, which", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458306256", "createdAt": "2020-07-21T18:33:02Z", "author": {"login": "JimGalasyn"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,332 @@\n+# Metrics\n+\n+ksqlDB emits a variety of JMX metrics to help you understand\n+[monitor](../operate-and-deploy/monitoring.md) what its servers are\n+doing. This reference describes each metric and grouping.\n+\n+## All persistent queries\n+\n+Metrics that describe the full set of persistent queries on a given server.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-engine-query-stats\n+```\n+\n+### Attributes\n+\n+**Number of persistent queries**\n+\n+`_confluent-ksql-default_num-persistent-queries`\n+\n+The current number of persistent queries running in this engine.\n+\n+**Number of active queries**\n+\n+`_confluent-ksql-default_num-active-queries`\n+\n+The current number of active queries running in this engine.\n+\n+**Number of running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-RUNNING-queries`\n+\n+Count of queries in `RUNNING` state.\n+\n+**Number of idle queries**\n+\n+`_confluent-ksql-default_num-idle-queries`\n+\n+Number of inactive queries.\n+\n+**Number of not running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-NOT_RUNNING-queries`\n+\n+Count of queries in `NOT_RUNNING` state.\n+\n+**Number of rebalancing queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-REBALANCING-queries`\n+\n+Count of queries in `REBALANCING` state.\n+\n+**Number of created queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-CREATED-queries`\n+\n+Count of queries in `CREATED` state.\n+\n+**Number of pending shutdown queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-PENDING_SHUTDOWN-queries`\n+\n+Count of queries in `PENDING_SHUTDOWN` state.\n+\n+**Number of error queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-ERROR-queries`\n+\n+Count of queries in `ERROR` state.\n+\n+**Total bytes consumed**\n+\n+`_confluent-ksql-default_bytes-consumed-total`\n+\n+The total number of bytes consumed across all queries.\n+\n+**Minimum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-min`\n+\n+Min msgs consumed by query.\n+\n+**Maximum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-max`\n+\n+Max msgs consumed by query.\n+\n+**Average messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-avg`\n+\n+Mean msgs consumed by query.\n+\n+**Messages consumed per second**\n+\n+`_confluent-ksql-default_messages-consumed-per-sec`\n+\n+The number of messages consumed per second across all queries.\n+\n+**Messages consumed total**\n+\n+`_confluent-ksql-default_messages-consumed-total`\n+\n+The total number of messages consumed across all queries.\n+\n+**Messages produced per second**\n+\n+`_confluent-ksql-default_messages-produced-per-sec`\n+\n+The number of messages produced per second across all queries.\n+\n+**Error rate**\n+\n+`_confluent-ksql-default_error-rate`\n+\n+The number of messages which were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed messages may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.\n+\n+**Liveness indicator**\n+\n+`_confluent-ksql-default_liveness-indicator`\n+\n+A metric with constant value `1` indicating the server is up and emitting metrics.\n+\n+## Persistent query status\n+\n+Metrics that describe the health of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-queries\n+```\n+\n+### Attributes\n+\n+**Query status**\n+\n+`query-status`\n+\n+The current status of the given query.\n+\n+**Error status**\n+\n+`error-status`\n+\n+The current error status of the given query, if the state is in ERROR state.\n+\n+## Persistent query production\n+\n+Metrics that describe the producer activity of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=producer-metrics\n+```\n+\n+### Attributes\n+\n+**Total messages**\n+\n+`total-messages`\n+\n+The total number of messages produced.\n+\n+**Messages per second**\n+\n+`messages-per-sec`\n+\n+The total number of messages produced per second.\n+\n+## Persistent query consumption\n+\n+Metrics that describe the consumer activity of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=consumer-metrics\n+```\n+\n+### Attributes\n+\n+**Total messages**\n+\n+`consumer-total-messages`\n+\n+The total number of messages consumed.\n+\n+**Messages per second**\n+\n+`consumer-messages-per-sec`\n+\n+The total number of messages consumed per second.\n+\n+**Total bytes**\n+\n+`consumer-total-bytes`\n+\n+The total number of bytes consumed.\n+\n+## Runtime\n+\n+Because ksqlDB persistent queries directly compile into {{\n+site.kstreams }} topologies, many useful [{{ site.kstreams }}\n+metrics](https://docs.confluent.io/current/streams/monitoring.html)\n+are emitted for each persistent query. These metrics are omitted from\n+this reference to avoid redundancy.\n+\n+## HTTP server\n+\n+ksqlDB's REST API is built ontop of Vert, and consequentially exposes\n+many [Vert.x\n+metrics](https://vertx.io/docs/vertx-dropwizard-metrics/java/)\n+directly. These metrics are omitted from this reference to avoid redundancy.\n+\n+\n+## Pull queries\n+\n+Metrics that describe the activity of pull queries on each server.\n+\n+```\n+io.confluent.ksql.metrics:type=_confluent-ksql-default_pull-query\n+```\n+\n+!!! info\n+    Note that pull query metrics must explicitly be enabled by setting\n+    the `ksql.query.pull.metrics.enabled` server configuration to `true`.\n+\n+### Attributes\n+\n+**Pull query total requests**\n+\n+`pull-query-requests-total`\n+\n+Total number of pull query requests.\n+\n+**Pull query request rate**\n+\n+`pull-query-requests-rate`\n+\n+Rate of pull query requests per second.\n+\n+**Pull query requests error count**\n+\n+`pull-query-requests-error-total`\n+\n+Total number of erroneous pull query requests.\n+\n+**Pull query request error rate**\n+\n+`pull-query-requests-error-rate`\n+\n+Rate of erroneous pull query requests per second.\n+\n+**Local pull query requests count**\n+\n+`pull-query-requests-local`\n+\n+Count of local pull query requests.\n+\n+**Local pull query requests rate**\n+\n+`pull-query-requests-local-rate`\n+\n+Rate of local pull query requests per second.\n+\n+**Remote pull query requests count**\n+\n+`pull-query-requests-remote`\n+\n+Count of remote pull query requests.\n+\n+**Remote pull query requests rate**\n+\n+`pull-query-requests-remote-rate`\n+\n+Rate of remote pull query requests per second.\n+\n+**Pull query minimum request latency**\n+\n+`pull-query-requests-latency-latency-min`\n+\n+Average time for a pull query request.\n+\n+**Pull query maximum request latency**\n+\n+`pull-query-requests-latency-latency-max`\n+\n+Max time for a pull query request.\n+\n+**Pull query average request latency**\n+\n+`pull-query-requests-latency-latency-avg`\n+\n+Average time for a pull query request.\n+\n+**Pull query latency 50th percentile**\n+\n+`pull-query-requests-latency-distribution-50`\n+\n+Latency distribution of the 50th percentile.\n+\n+**Pull query latency 75th percentile**\n+\n+`pull-query-requests-latency-distribution-75`\n+\n+Latency distribution of the 75th percentile.\n+\n+**Pull query latency 75th percentile**\n+\n+`pull-query-requests-latency-distribution-90`\n+\n+Latency distribution of the 90th percentile.\n+\n+**Pull query latency 99th percentile**\n+\n+`pull-query-requests-latency-distribution-99`\n+\n+Latency distribution of the 99th percentile.\n+\n+## Command runner\n+\n+Metrics that describe the health of the CommandRunner thread, which", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 319}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk2NjUyOnYy", "diffSide": "RIGHT", "path": "docs/reference/metrics.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMzo0MVrOG1E0LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozMzo0MVrOG1E0LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNjYwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Note that pull query metrics must explicitly be enabled by setting\n          \n          \n            \n                Pull query metrics must be enabled explicitly by setting", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458306605", "createdAt": "2020-07-21T18:33:41Z", "author": {"login": "JimGalasyn"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,332 @@\n+# Metrics\n+\n+ksqlDB emits a variety of JMX metrics to help you understand\n+[monitor](../operate-and-deploy/monitoring.md) what its servers are\n+doing. This reference describes each metric and grouping.\n+\n+## All persistent queries\n+\n+Metrics that describe the full set of persistent queries on a given server.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-engine-query-stats\n+```\n+\n+### Attributes\n+\n+**Number of persistent queries**\n+\n+`_confluent-ksql-default_num-persistent-queries`\n+\n+The current number of persistent queries running in this engine.\n+\n+**Number of active queries**\n+\n+`_confluent-ksql-default_num-active-queries`\n+\n+The current number of active queries running in this engine.\n+\n+**Number of running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-RUNNING-queries`\n+\n+Count of queries in `RUNNING` state.\n+\n+**Number of idle queries**\n+\n+`_confluent-ksql-default_num-idle-queries`\n+\n+Number of inactive queries.\n+\n+**Number of not running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-NOT_RUNNING-queries`\n+\n+Count of queries in `NOT_RUNNING` state.\n+\n+**Number of rebalancing queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-REBALANCING-queries`\n+\n+Count of queries in `REBALANCING` state.\n+\n+**Number of created queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-CREATED-queries`\n+\n+Count of queries in `CREATED` state.\n+\n+**Number of pending shutdown queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-PENDING_SHUTDOWN-queries`\n+\n+Count of queries in `PENDING_SHUTDOWN` state.\n+\n+**Number of error queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-ERROR-queries`\n+\n+Count of queries in `ERROR` state.\n+\n+**Total bytes consumed**\n+\n+`_confluent-ksql-default_bytes-consumed-total`\n+\n+The total number of bytes consumed across all queries.\n+\n+**Minimum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-min`\n+\n+Min msgs consumed by query.\n+\n+**Maximum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-max`\n+\n+Max msgs consumed by query.\n+\n+**Average messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-avg`\n+\n+Mean msgs consumed by query.\n+\n+**Messages consumed per second**\n+\n+`_confluent-ksql-default_messages-consumed-per-sec`\n+\n+The number of messages consumed per second across all queries.\n+\n+**Messages consumed total**\n+\n+`_confluent-ksql-default_messages-consumed-total`\n+\n+The total number of messages consumed across all queries.\n+\n+**Messages produced per second**\n+\n+`_confluent-ksql-default_messages-produced-per-sec`\n+\n+The number of messages produced per second across all queries.\n+\n+**Error rate**\n+\n+`_confluent-ksql-default_error-rate`\n+\n+The number of messages which were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed messages may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.\n+\n+**Liveness indicator**\n+\n+`_confluent-ksql-default_liveness-indicator`\n+\n+A metric with constant value `1` indicating the server is up and emitting metrics.\n+\n+## Persistent query status\n+\n+Metrics that describe the health of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-queries\n+```\n+\n+### Attributes\n+\n+**Query status**\n+\n+`query-status`\n+\n+The current status of the given query.\n+\n+**Error status**\n+\n+`error-status`\n+\n+The current error status of the given query, if the state is in ERROR state.\n+\n+## Persistent query production\n+\n+Metrics that describe the producer activity of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=producer-metrics\n+```\n+\n+### Attributes\n+\n+**Total messages**\n+\n+`total-messages`\n+\n+The total number of messages produced.\n+\n+**Messages per second**\n+\n+`messages-per-sec`\n+\n+The total number of messages produced per second.\n+\n+## Persistent query consumption\n+\n+Metrics that describe the consumer activity of each persistent query.\n+\n+```\n+io.confluent.ksql.metrics:type=consumer-metrics\n+```\n+\n+### Attributes\n+\n+**Total messages**\n+\n+`consumer-total-messages`\n+\n+The total number of messages consumed.\n+\n+**Messages per second**\n+\n+`consumer-messages-per-sec`\n+\n+The total number of messages consumed per second.\n+\n+**Total bytes**\n+\n+`consumer-total-bytes`\n+\n+The total number of bytes consumed.\n+\n+## Runtime\n+\n+Because ksqlDB persistent queries directly compile into {{\n+site.kstreams }} topologies, many useful [{{ site.kstreams }}\n+metrics](https://docs.confluent.io/current/streams/monitoring.html)\n+are emitted for each persistent query. These metrics are omitted from\n+this reference to avoid redundancy.\n+\n+## HTTP server\n+\n+ksqlDB's REST API is built ontop of Vert, and consequentially exposes\n+many [Vert.x\n+metrics](https://vertx.io/docs/vertx-dropwizard-metrics/java/)\n+directly. These metrics are omitted from this reference to avoid redundancy.\n+\n+\n+## Pull queries\n+\n+Metrics that describe the activity of pull queries on each server.\n+\n+```\n+io.confluent.ksql.metrics:type=_confluent-ksql-default_pull-query\n+```\n+\n+!!! info\n+    Note that pull query metrics must explicitly be enabled by setting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 222}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk3MDY4OnYy", "diffSide": "RIGHT", "path": "docs/reference/metrics.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNDo1M1rOG1E25g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNToxMFrOG1E3dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNzMwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The number of messages which were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed messages may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.\n          \n          \n            \n            The number of messages that were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed message may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458307302", "createdAt": "2020-07-21T18:34:53Z", "author": {"login": "JimGalasyn"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,332 @@\n+# Metrics\n+\n+ksqlDB emits a variety of JMX metrics to help you understand\n+[monitor](../operate-and-deploy/monitoring.md) what its servers are\n+doing. This reference describes each metric and grouping.\n+\n+## All persistent queries\n+\n+Metrics that describe the full set of persistent queries on a given server.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-engine-query-stats\n+```\n+\n+### Attributes\n+\n+**Number of persistent queries**\n+\n+`_confluent-ksql-default_num-persistent-queries`\n+\n+The current number of persistent queries running in this engine.\n+\n+**Number of active queries**\n+\n+`_confluent-ksql-default_num-active-queries`\n+\n+The current number of active queries running in this engine.\n+\n+**Number of running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-RUNNING-queries`\n+\n+Count of queries in `RUNNING` state.\n+\n+**Number of idle queries**\n+\n+`_confluent-ksql-default_num-idle-queries`\n+\n+Number of inactive queries.\n+\n+**Number of not running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-NOT_RUNNING-queries`\n+\n+Count of queries in `NOT_RUNNING` state.\n+\n+**Number of rebalancing queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-REBALANCING-queries`\n+\n+Count of queries in `REBALANCING` state.\n+\n+**Number of created queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-CREATED-queries`\n+\n+Count of queries in `CREATED` state.\n+\n+**Number of pending shutdown queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-PENDING_SHUTDOWN-queries`\n+\n+Count of queries in `PENDING_SHUTDOWN` state.\n+\n+**Number of error queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-ERROR-queries`\n+\n+Count of queries in `ERROR` state.\n+\n+**Total bytes consumed**\n+\n+`_confluent-ksql-default_bytes-consumed-total`\n+\n+The total number of bytes consumed across all queries.\n+\n+**Minimum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-min`\n+\n+Min msgs consumed by query.\n+\n+**Maximum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-max`\n+\n+Max msgs consumed by query.\n+\n+**Average messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-avg`\n+\n+Mean msgs consumed by query.\n+\n+**Messages consumed per second**\n+\n+`_confluent-ksql-default_messages-consumed-per-sec`\n+\n+The number of messages consumed per second across all queries.\n+\n+**Messages consumed total**\n+\n+`_confluent-ksql-default_messages-consumed-total`\n+\n+The total number of messages consumed across all queries.\n+\n+**Messages produced per second**\n+\n+`_confluent-ksql-default_messages-produced-per-sec`\n+\n+The number of messages produced per second across all queries.\n+\n+**Error rate**\n+\n+`_confluent-ksql-default_error-rate`\n+\n+The number of messages which were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed messages may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNzQ0NA==", "bodyText": "Consider line breaks at col 80.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458307444", "createdAt": "2020-07-21T18:35:10Z", "author": {"login": "JimGalasyn"}, "path": "docs/reference/metrics.md", "diffHunk": "@@ -0,0 +1,332 @@\n+# Metrics\n+\n+ksqlDB emits a variety of JMX metrics to help you understand\n+[monitor](../operate-and-deploy/monitoring.md) what its servers are\n+doing. This reference describes each metric and grouping.\n+\n+## All persistent queries\n+\n+Metrics that describe the full set of persistent queries on a given server.\n+\n+```\n+io.confluent.ksql.metrics:type=ksql-engine-query-stats\n+```\n+\n+### Attributes\n+\n+**Number of persistent queries**\n+\n+`_confluent-ksql-default_num-persistent-queries`\n+\n+The current number of persistent queries running in this engine.\n+\n+**Number of active queries**\n+\n+`_confluent-ksql-default_num-active-queries`\n+\n+The current number of active queries running in this engine.\n+\n+**Number of running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-RUNNING-queries`\n+\n+Count of queries in `RUNNING` state.\n+\n+**Number of idle queries**\n+\n+`_confluent-ksql-default_num-idle-queries`\n+\n+Number of inactive queries.\n+\n+**Number of not running queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-NOT_RUNNING-queries`\n+\n+Count of queries in `NOT_RUNNING` state.\n+\n+**Number of rebalancing queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-REBALANCING-queries`\n+\n+Count of queries in `REBALANCING` state.\n+\n+**Number of created queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-CREATED-queries`\n+\n+Count of queries in `CREATED` state.\n+\n+**Number of pending shutdown queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-PENDING_SHUTDOWN-queries`\n+\n+Count of queries in `PENDING_SHUTDOWN` state.\n+\n+**Number of error queries**\n+\n+`_confluent-ksql-default_ksql-engine-query-stats-ERROR-queries`\n+\n+Count of queries in `ERROR` state.\n+\n+**Total bytes consumed**\n+\n+`_confluent-ksql-default_bytes-consumed-total`\n+\n+The total number of bytes consumed across all queries.\n+\n+**Minimum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-min`\n+\n+Min msgs consumed by query.\n+\n+**Maximum messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-max`\n+\n+Max msgs consumed by query.\n+\n+**Average messages consumed**\n+\n+`_confluent-ksql-default_messages-consumed-avg`\n+\n+Mean msgs consumed by query.\n+\n+**Messages consumed per second**\n+\n+`_confluent-ksql-default_messages-consumed-per-sec`\n+\n+The number of messages consumed per second across all queries.\n+\n+**Messages consumed total**\n+\n+`_confluent-ksql-default_messages-consumed-total`\n+\n+The total number of messages consumed across all queries.\n+\n+**Messages produced per second**\n+\n+`_confluent-ksql-default_messages-produced-per-sec`\n+\n+The number of messages produced per second across all queries.\n+\n+**Error rate**\n+\n+`_confluent-ksql-default_error-rate`\n+\n+The number of messages which were consumed but not processed. Messages may not be processed if, for instance, the message contents could not be deserialized due to an incompatible schema. Alternately, a consumed messages may not have been produced, hence being effectively dropped. Such messages would also be counted toward the error rate.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwNzMwMg=="}, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk3NjAzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNjoxOFrOG1E6BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNjoxOFrOG1E6BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwODEwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You must explictly enable monitoring on each ksqlDB server. To enable\n          \n          \n            \n            You must enable monitoring explicitly on each ksqlDB server. To enable", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458308100", "createdAt": "2020-07-21T18:36:18Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive [set of metrics](../reference/metrics.md) are published,\n+including number of rows processed, throughput,\n+throughput distribution, and error rate.\n+\n+## Enable monitoring\n+\n+You must explictly enable monitoring on each ksqlDB server. To enable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk4MDQxOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNzoyNlrOG1E8rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozNzoyNlrOG1E8rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwODc4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which help you monitor what is happening inside of ksqlDB's servers. A\n          \n          \n            \n            which help you monitor what is happening inside of ksqlDB's servers. For a", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458308781", "createdAt": "2020-07-21T18:37:26Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk4Mjg2OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODowOFrOG1E-Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODowOFrOG1E-Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwOTE1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            comprehensive [set of metrics](../reference/metrics.md) are published,\n          \n          \n            \n            comprehensive list of metrics, including number of rows processed, throughput,", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458309155", "createdAt": "2020-07-21T18:38:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive [set of metrics](../reference/metrics.md) are published,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk4NDU3OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODo0MFrOG1E_Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODo0MFrOG1E_Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwOTQzNQ==", "bodyText": "throughput distribution, and error rate, see Metrics.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458309435", "createdAt": "2020-07-21T18:38:40Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive [set of metrics](../reference/metrics.md) are published,\n+including number of rows processed, throughput,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTk4NTE1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/monitoring.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODo1MFrOG1E_ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxODozODo1MFrOG1E_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMwOTUzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            throughput distribution, and error rate.", "url": "https://github.com/confluentinc/ksql/pull/5808#discussion_r458309534", "createdAt": "2020-07-21T18:38:50Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/monitoring.md", "diffHunk": "@@ -0,0 +1,81 @@\n+# Monitoring\n+\n+## Context\n+\n+ksqlDB publishes metrics via JMX ([Java Management\n+Extensions](https://www.oracle.com/java/technologies/javase/javamanagement.html))\n+which help you monitor what is happening inside of ksqlDB's servers. A\n+comprehensive [set of metrics](../reference/metrics.md) are published,\n+including number of rows processed, throughput,\n+throughput distribution, and error rate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2433ea94e571173942e74f9f0a04dbfee2559eb4"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3118, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}