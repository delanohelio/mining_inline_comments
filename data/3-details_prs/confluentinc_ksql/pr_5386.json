{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTU3NjU5", "number": 5386, "title": "fix: Block writer thread if response output buffer is full", "bodyText": "Description\nPreviously there was no back pressure on writes from the legacy streaming API to the response. This could mean that writes buffered in memory if the client was slow which could lead to unbounded memory usage.\nThis PR blocks the writer thread if the response is full and unblocks it when it is drained to provide some synchronous back pressure to the caller.\nTesting done\nManually tested.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-05-18T14:58:10Z", "url": "https://github.com/confluentinc/ksql/pull/5386", "merged": true, "mergeCommit": {"oid": "0edda40c04f25d26a60cb135a3827198f4d5c684"}, "closed": true, "closedAt": "2020-05-19T08:07:28Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcigfqNgH2gAyNDE5NTU3NjU5OjQyMjMxODc4ODg0ZTliZmM4YWEyY2Y4YWU4NGVkYWU0ZDQwZmMzM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcixHQhgFqTQxNDI2OTQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42231878884e9bfc8aa2cf8ae84edae4d40fc33c", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/42231878884e9bfc8aa2cf8ae84edae4d40fc33c", "committedDate": "2020-05-18T14:11:03Z", "message": "fix: block on write if write queue full"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3982d67d35db415dc5bc220fb55f8799465e5c2", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/a3982d67d35db415dc5bc220fb55f8799465e5c2", "committedDate": "2020-05-18T14:54:38Z", "message": "use cf for blocking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/c0b06549f9407fe13e7a1428a99dd6e02441995a", "committedDate": "2020-05-18T15:32:02Z", "message": "tweaks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTA4NTgx", "url": "https://github.com/confluentinc/ksql/pull/5386#pullrequestreview-414108581", "createdAt": "2020-05-19T05:19:22Z", "commit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNToxOToyM1rOGXQNGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNToyMjowOVrOGXQQDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNTkzMA==", "bodyText": "Should we add a more informative error message?", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427035930", "createdAt": "2020-05-19T05:19:23Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -55,13 +59,29 @@ public void write(final @NotNull byte[] bytes, final int offset, final int lengt\n     final byte[] bytesToWrite = new byte[length];\n     System.arraycopy(bytes, offset, bytesToWrite, 0, length);\n     final Buffer buffer = Buffer.buffer(bytesToWrite);\n+    blockIfWriteQueueFull();\n     response.write(buffer);\n   }\n \n   @Override\n   public void close() {\n     response.end();\n   }\n+\n+  private void blockIfWriteQueueFull() {\n+    VertxUtils.checkIsWorker();\n+    if (response.writeQueueFull()) {\n+      final CompletableFuture<Void> cf = new CompletableFuture<>();\n+      response.drainHandler(v -> cf.complete(null));\n+      try {\n+        cf.get(60, TimeUnit.SECONDS);\n+      } catch (Exception e) {\n+        // Very slow consumers will result in a timeout, this will cause the push query to be closed\n+        throw new KsqlException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjE0NQ==", "bodyText": "Should we check explicitly for TimeoutException? Since we don't expect ExecutionException to be thrown here.", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427036145", "createdAt": "2020-05-19T05:20:09Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -55,13 +59,29 @@ public void write(final @NotNull byte[] bytes, final int offset, final int lengt\n     final byte[] bytesToWrite = new byte[length];\n     System.arraycopy(bytes, offset, bytesToWrite, 0, length);\n     final Buffer buffer = Buffer.buffer(bytesToWrite);\n+    blockIfWriteQueueFull();\n     response.write(buffer);\n   }\n \n   @Override\n   public void close() {\n     response.end();\n   }\n+\n+  private void blockIfWriteQueueFull() {\n+    VertxUtils.checkIsWorker();\n+    if (response.writeQueueFull()) {\n+      final CompletableFuture<Void> cf = new CompletableFuture<>();\n+      response.drainHandler(v -> cf.complete(null));\n+      try {\n+        cf.get(60, TimeUnit.SECONDS);\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzNjY4NQ==", "bodyText": "ResponseOutputStream is only written to by a single thread anyway, right? (Trying to check my understanding.)", "url": "https://github.com/confluentinc/ksql/pull/5386#discussion_r427036685", "createdAt": "2020-05-19T05:22:09Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ResponseOutputStream.java", "diffHunk": "@@ -41,7 +45,7 @@ public void write(final int b) {\n   }\n \n   @Override\n-  public void write(final @NotNull byte[] bytes, final int offset, final int length) {\n+  public synchronized void write(final @NotNull byte[] bytes, final int offset, final int length) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjY5NDc3", "url": "https://github.com/confluentinc/ksql/pull/5386#pullrequestreview-414269477", "createdAt": "2020-05-19T09:32:47Z", "commit": {"oid": "c0b06549f9407fe13e7a1428a99dd6e02441995a"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4782, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}