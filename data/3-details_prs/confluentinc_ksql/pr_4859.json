{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzg5NDEx", "number": 4859, "title": "fix: Filter out hosts with no lag info by default", "bodyText": "Description\nPreviously, this would include hosts with no lag information.  This reverses that.  This means that there will be a couple seconds of downtime for a host when it starts up.  We're taking other efforst to fix this.\nAlso, makes PullQueryRoutingFunctionalTest more reliable by waiting on the lag report request to finish.\nFixes: #4832\nTesting done\nDescribe the testing strategy. Unit and integration tests are expected for any behavior changes.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-21T00:23:55Z", "url": "https://github.com/confluentinc/ksql/pull/4859", "merged": true, "mergeCommit": {"oid": "e10bbcede42f209765e96b2b2bb392f4d83b2560"}, "closed": true, "closedAt": "2020-03-23T19:15:50Z", "author": {"login": "AlanConfluent"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPp3R3AH2gAyMzkxNzg5NDExOjAzNThlYjlkYjY2YmMwNDgzY2MwMzFlNWM4N2IzZjRlZjVjYTgwMDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQiewNAH2gAyMzkxNzg5NDExOmQzNmM4MWFlMWI5MDkwOGMxZjA4ZjJiZTBlZjY0MzgxMjRhYTY2YWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/0358eb9db66bc0483cc031e5c87b3f4ef5ca8004", "committedDate": "2020-03-21T00:21:26Z", "message": "fix: Make the default behavior when there's no lag information to filter hosts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTc1MDMz", "url": "https://github.com/confluentinc/ksql/pull/4859#pullrequestreview-379575033", "createdAt": "2020-03-23T16:02:11Z", "commit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjowMjoxMlrOF6MXlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjowMzowNFrOF6MaWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2NDM3NQ==", "bodyText": "lol - which one's conservative: including or excluding? ;)", "url": "https://github.com/confluentinc/ksql/pull/4859#discussion_r396564375", "createdAt": "2020-03-23T16:02:12Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/MaximumLagFilter.java", "diffHunk": "@@ -66,8 +66,8 @@ public boolean filter(final KsqlHostInfo hostInfo) {\n           final long offsetLag = Math.max(endOffset - hostLag.getCurrentOffsetPosition(), 0);\n           return offsetLag <= allowedOffsetLag;\n         })\n-        // If we don't have lag info, we'll be conservative and include the host\n-        .orElse(true);\n+        // If we don't have lag info, we'll be conservative and not include the host", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2NTA4MQ==", "bodyText": "Catching and swallowing in a test util...  are we sure this is the right approach?", "url": "https://github.com/confluentinc/ksql/pull/4859#discussion_r396565081", "createdAt": "2020-03-23T16:03:04Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/HighAvailabilityTestUtil.java", "diffHunk": "@@ -181,7 +182,10 @@ public static void sendLagReportingRequest(\n           .exceptionally(t -> {\n             LOG.error(\"Unexpected exception in async request\", t);\n             return null;\n-          });\n+          })\n+      .get();\n+    } catch (Exception e) {\n+      LOG.error(\"Error waiting on lag report\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTkzOTY1", "url": "https://github.com/confluentinc/ksql/pull/4859#pullrequestreview-379593965", "createdAt": "2020-03-23T16:21:46Z", "commit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjoyMTo0N1rOF6NRpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNjozMTowOFrOF6NtMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU3OTIzOQ==", "bodyText": ":).In addition would be good to capture the intent here.", "url": "https://github.com/confluentinc/ksql/pull/4859#discussion_r396579239", "createdAt": "2020-03-23T16:21:47Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/MaximumLagFilter.java", "diffHunk": "@@ -66,8 +66,8 @@ public boolean filter(final KsqlHostInfo hostInfo) {\n           final long offsetLag = Math.max(endOffset - hostLag.getCurrentOffsetPosition(), 0);\n           return offsetLag <= allowedOffsetLag;\n         })\n-        // If we don't have lag info, we'll be conservative and include the host\n-        .orElse(true);\n+        // If we don't have lag info, we'll be conservative and not include the host", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2NDM3NQ=="}, "originalCommit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4Mjc1NQ==", "bodyText": "should the test name change given the semantics are inverted now? might be good to rename in the same shouldXXX form", "url": "https://github.com/confluentinc/ksql/pull/4859#discussion_r396582755", "createdAt": "2020-03-23T16:26:23Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/MaximumLagFilterTest.java", "diffHunk": "@@ -94,7 +94,7 @@ public void filter_hostNoLag() {\n         PARTITION).get();\n \n     // Then:\n-    assertTrue(filter.filter(HOST1));\n+    assertFalse(filter.filter(HOST1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU4NjI5MA==", "bodyText": "whats the new error? could we assert on that still", "url": "https://github.com/confluentinc/ksql/pull/4859#discussion_r396586290", "createdAt": "2020-03-23T16:31:08Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/PullQueryRoutingFunctionalTest.java", "diffHunk": "@@ -336,8 +336,6 @@ public void shouldFilterLaggyServers() {\n     KsqlErrorMessage errorMessage = makePullQueryRequestWithError(clusterFormation.router.right,\n         sql, LAG_FILTER_25);\n     Assert.assertEquals(40001, errorMessage.getErrorCode());\n-    Assert.assertTrue(errorMessage.getMessage()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0358eb9db66bc0483cc031e5c87b3f4ef5ca8004"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d36c81ae1b90908c1f08f2be0ef6438124aa66ab", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/d36c81ae1b90908c1f08f2be0ef6438124aa66ab", "committedDate": "2020-03-23T18:19:14Z", "message": "Feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4897, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}