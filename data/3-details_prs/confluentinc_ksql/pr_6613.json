{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTA0ODQ5", "number": 6613, "title": "docs: klip-41: ksqlDB .Net Client", "bodyText": "Description\nA proposal for a .Net client\nTesting done\nN/A\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-11-13T23:49:02Z", "url": "https://github.com/confluentinc/ksql/pull/6613", "merged": true, "mergeCommit": {"oid": "2b80379f62113e722893723d5182c0ab1445ee03"}, "closed": true, "closedAt": "2020-11-24T23:28:26Z", "author": {"login": "alex-basiuk"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcPuB3AH2gAyNTIwOTA0ODQ5OjBiNmU3ODg0YWFkZmE4NzNjYWVkOGNiMTFhNzUwYzIwMGQ1MDcyYWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfyVaqAFqTUzODA0NzgwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0b6e7884aadfa873caed8cb11a750c200d5072ad", "author": {"user": null}, "url": "https://github.com/confluentinc/ksql/commit/0b6e7884aadfa873caed8cb11a750c200d5072ad", "committedDate": "2020-11-13T23:25:58Z", "message": "KLIP-41 design proposal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "211ef4ada25d8a074e4df08ebe11a97fba081de1", "author": {"user": null}, "url": "https://github.com/confluentinc/ksql/commit/211ef4ada25d8a074e4df08ebe11a97fba081de1", "committedDate": "2020-11-16T21:29:51Z", "message": "Merge branch 'master' into klip-41-proposal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d2a59f997693cf7e4108d8927f0bee32782ec22", "author": {"user": null}, "url": "https://github.com/confluentinc/ksql/commit/3d2a59f997693cf7e4108d8927f0bee32782ec22", "committedDate": "2020-11-16T21:36:26Z", "message": "Adding links to the design-proposals/README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1", "author": {"user": {"login": "alex-basiuk", "name": "Alex Basiuk"}}, "url": "https://github.com/confluentinc/ksql/commit/7bb25f481a63b579c97ec6f79b83f225517555a1", "committedDate": "2020-11-19T14:04:57Z", "message": "Merge branch 'master' into klip-41-proposal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODE1OTQz", "url": "https://github.com/confluentinc/ksql/pull/6613#pullrequestreview-537815943", "createdAt": "2020-11-24T18:57:31Z", "commit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo1NzozMlrOH5Q7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo1NzozMlrOH5Q7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwODIwNg==", "bodyText": "I'm not versed in .NET, but one thing I'm wondering is how support for multiple versions will look over time. Any ideas about how to manage that workflow?", "url": "https://github.com/confluentinc/ksql/pull/6613#discussion_r529808206", "createdAt": "2020-11-24T18:57:32Z", "author": {"login": "MichaelDrogalis"}, "path": "design-proposals/klip-41-ksqldb-.net-client.md", "diffHunk": "@@ -0,0 +1,72 @@\n+# KLIP 41 - ksqlDB .NET Client\n+\n+**Author**: Alex Basiuk (@alex-basiuk) | \n+**Release Target**: TBD | \n+**Status**: _In Discussion_ | \n+**Discussion**: TBD\n+\n+**tl;dr:** _Create a ksqlDB client for .NET which is on par with the existing Java client.\n+The .NET community will benefit from the this project. The goal is to provide first class developer experience and \n+simplify writing event streaming applications in .NET._\n+\n+## Motivation and background\n+\n+Basically, it's similar to [KLIP 15](./klip-15-new-api-and-client.md).\n+It should lower the barrier for .NET developers and increase adoption of ksqlDB by the community.\n+The library should offer the same feature set as the Java library and should follow common .NET conventions and patterns.  \n+\n+## What is in scope\n+\n+* A new client implemented in C#.\n+* Initially, the client will be targeted at .NET Core 3 and .NET Framework 5. Support of older versions will be added later.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODE2NDAx", "url": "https://github.com/confluentinc/ksql/pull/6613#pullrequestreview-537816401", "createdAt": "2020-11-24T18:58:08Z", "commit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo1ODowOFrOH5Q8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODo1ODo0OFrOH5Q-Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwODU1OQ==", "bodyText": "Super. :) If this is going to live inside of a repo owned by you for a while, we can put the documentation in a README there so it is self-contained.", "url": "https://github.com/confluentinc/ksql/pull/6613#discussion_r529808559", "createdAt": "2020-11-24T18:58:08Z", "author": {"login": "MichaelDrogalis"}, "path": "design-proposals/klip-41-ksqldb-.net-client.md", "diffHunk": "@@ -0,0 +1,72 @@\n+# KLIP 41 - ksqlDB .NET Client\n+\n+**Author**: Alex Basiuk (@alex-basiuk) | \n+**Release Target**: TBD | \n+**Status**: _In Discussion_ | \n+**Discussion**: TBD\n+\n+**tl;dr:** _Create a ksqlDB client for .NET which is on par with the existing Java client.\n+The .NET community will benefit from the this project. The goal is to provide first class developer experience and \n+simplify writing event streaming applications in .NET._\n+\n+## Motivation and background\n+\n+Basically, it's similar to [KLIP 15](./klip-15-new-api-and-client.md).\n+It should lower the barrier for .NET developers and increase adoption of ksqlDB by the community.\n+The library should offer the same feature set as the Java library and should follow common .NET conventions and patterns.  \n+\n+## What is in scope\n+\n+* A new client implemented in C#.\n+* Initially, the client will be targeted at .NET Core 3 and .NET Framework 5. Support of older versions will be added later.\n+* The client will support execution and streaming of queries (both push and pull), inserting of rows into streams, DDL operations and admin operations\n+such as list and describe.\n+* The client will utilise C# [async streams](https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/generate-consume-asynchronous-stream) feature.\n+* The client will also support a direct / synchronous interaction style.\n+* High-quality documentation and examples.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTgwODk3MA==", "bodyText": "Do any CI providers make dual Windows tests easy? Been a while since I've tested much on Windows.", "url": "https://github.com/confluentinc/ksql/pull/6613#discussion_r529808970", "createdAt": "2020-11-24T18:58:48Z", "author": {"login": "MichaelDrogalis"}, "path": "design-proposals/klip-41-ksqldb-.net-client.md", "diffHunk": "@@ -0,0 +1,72 @@\n+# KLIP 41 - ksqlDB .NET Client\n+\n+**Author**: Alex Basiuk (@alex-basiuk) | \n+**Release Target**: TBD | \n+**Status**: _In Discussion_ | \n+**Discussion**: TBD\n+\n+**tl;dr:** _Create a ksqlDB client for .NET which is on par with the existing Java client.\n+The .NET community will benefit from the this project. The goal is to provide first class developer experience and \n+simplify writing event streaming applications in .NET._\n+\n+## Motivation and background\n+\n+Basically, it's similar to [KLIP 15](./klip-15-new-api-and-client.md).\n+It should lower the barrier for .NET developers and increase adoption of ksqlDB by the community.\n+The library should offer the same feature set as the Java library and should follow common .NET conventions and patterns.  \n+\n+## What is in scope\n+\n+* A new client implemented in C#.\n+* Initially, the client will be targeted at .NET Core 3 and .NET Framework 5. Support of older versions will be added later.\n+* The client will support execution and streaming of queries (both push and pull), inserting of rows into streams, DDL operations and admin operations\n+such as list and describe.\n+* The client will utilise C# [async streams](https://docs.microsoft.com/en-us/dotnet/csharp/tutorials/generate-consume-asynchronous-stream) feature.\n+* The client will also support a direct / synchronous interaction style.\n+* High-quality documentation and examples.\n+\n+## What is not in scope\n+\n+No plans to provide more functional API for F#. However, it will be possible to use the client in F#.\n+\n+## Value/Return\n+\n+Ideas of event sourcing / CQRS / DDD style apps are popular in the .NET community but ksqlDB is often perceived as a Java-specific technology.\n+A native client will make it easier to try and hopefully adopt ksqlDB by .NET developers.\n+\n+## Public APIS\n+\n+N/A\n+\n+## Design\n+\n+* The client will target multiple [target frameworks](https://docs.microsoft.com/en-us/dotnet/standard/frameworks).\n+Initially it will be netcoreapp3.0 and net5.0. Support of older versions e.g. netstandard2.0 will be added at later stage.\n+* The client will provide an API based on async streams for streaming and async methods for the rest.\n+* The client will support injectable [Polly policies](https://github.com/App-vNext/Polly) to enable users to use custom resilience policies. However, out of the box, it should use sensible default retry policies.\n+* The client will expose convenience builder extension methods for ASP.NET Core. It should be easy to add and configure the client in ASP.NET Core idiomatic way. \n+  But the mechanism will be optional. Users won't be required to use it or another DI. \n+* The client will have minimal dependencies on third party libraries.\n+* The client will follow performance best practices.\n+* The client will be thread-safe.\n+\n+## Test plan\n+\n+Unit and integration test will be mandatory. Performance benchmarks are desirable but unlikely be the first priority.\n+Ideally, tests should be executed on both Windows and Linux platforms.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDQ3ODA5", "url": "https://github.com/confluentinc/ksql/pull/6613#pullrequestreview-538047809", "createdAt": "2020-11-24T23:27:32Z", "commit": {"oid": "7bb25f481a63b579c97ec6f79b83f225517555a1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4540, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}