{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI5Mjg1NDU0", "number": 5559, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxNTo1N1rOEDl6Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxNTo1N1rOEDl6Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjAyMzM5OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOToxNTo1N1rOGgsywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowNjowNVrOGipA0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk0MTUwNQ==", "bodyText": "Can these be single-backticks? Tab", "url": "https://github.com/confluentinc/ksql/pull/5559#discussion_r436941505", "createdAt": "2020-06-08T19:15:57Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -382,6 +382,26 @@ include both endpoints.\n \n ## Strings\n \n+### `CHR`\n+\n+```sql\n+CHR(decimal_code | utf_string)\n+```\n+\n+Returns a single-character string representing the Unicode code-point described by the input. The input parameter can be either a decimal character code or a string representation of a UTF code.\n+\n+Returns NULL if the input is NULL or does not represent a valid code-point.\n+\n+Commonly used to insert control characters such as ```Tab``` (9), ```Line Feed``` (10), or ```Carriage Return``` (13) into strings.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e057a48d19f94df8ffd26bdd8867b4e909e17dba"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NjcyMg==", "bodyText": "yeah, that totally makes sense. not sure what i was thinking when i put triple-backticks there", "url": "https://github.com/confluentinc/ksql/pull/5559#discussion_r438976722", "createdAt": "2020-06-11T18:06:05Z", "author": {"login": "blueedgenick"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -382,6 +382,26 @@ include both endpoints.\n \n ## Strings\n \n+### `CHR`\n+\n+```sql\n+CHR(decimal_code | utf_string)\n+```\n+\n+Returns a single-character string representing the Unicode code-point described by the input. The input parameter can be either a decimal character code or a string representation of a UTF code.\n+\n+Returns NULL if the input is NULL or does not represent a valid code-point.\n+\n+Commonly used to insert control characters such as ```Tab``` (9), ```Line Feed``` (10), or ```Carriage Return``` (13) into strings.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk0MTUwNQ=="}, "originalCommit": {"oid": "e057a48d19f94df8ffd26bdd8867b4e909e17dba"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3361, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}