{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNDM2NjE1", "number": 5212, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1Mzo1M1rOD3sR5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzoyNDoyMlrOD8WpLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzIzNzUwOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/AbstractServerVerticle.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1Mzo1M1rOGOFmBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjoxNzoyMFrOGOTD2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNDkwMQ==", "bodyText": "Not great to be disabling complexity rules in a new class. The rules are there for a reason, not just to be disabled when they're hit ;). I realize you've only moved this code from another class, but maybe you could have a stab at refactoring this oversized class?\nThis class is big and could do with breaking up.  The two things that jump out that could be refactored into their own classes are the failure handling and the auth handling.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417424901", "createdAt": "2020-04-29T15:53:53Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/AbstractServerVerticle.java", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import static io.netty.handler.codec.http.HttpResponseStatus.FORBIDDEN;\n+import static io.netty.handler.codec.http.HttpResponseStatus.UNAUTHORIZED;\n+\n+import io.confluent.ksql.api.auth.AuthenticationPlugin;\n+import io.confluent.ksql.api.auth.AuthenticationPluginHandler;\n+import io.confluent.ksql.api.auth.JaasAuthProvider;\n+import io.confluent.ksql.api.auth.KsqlAuthorizationProviderHandler;\n+import io.confluent.ksql.api.server.protocol.ErrorResponse;\n+import io.confluent.ksql.rest.server.KsqlRestConfig;\n+import io.confluent.ksql.security.KsqlSecurityExtension;\n+import io.vertx.core.AbstractVerticle;\n+import io.vertx.core.Handler;\n+import io.vertx.core.Promise;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.HttpHeaders;\n+import io.vertx.core.http.HttpServer;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.core.http.HttpServerResponse;\n+import io.vertx.core.json.JsonObject;\n+import io.vertx.ext.auth.AuthProvider;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.AuthHandler;\n+import io.vertx.ext.web.handler.BasicAuthHandler;\n+import java.util.Objects;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The server deploys multiple server verticles. This is where the HTTP2 requests are handled. The\n+ * actual implementation of the endpoints is provided by an implementation of {@code Endpoints}.\n+ */\n+// CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY0NTUzMQ==", "bodyText": "Sure, split up, so things are much more modular now.\nI agree about these rules.  I was initially just trying to minimize the chance of breaking something  during the refactor, but it's pretty straightforward and low risk.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417645531", "createdAt": "2020-04-29T22:17:20Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/AbstractServerVerticle.java", "diffHunk": "@@ -0,0 +1,237 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import static io.netty.handler.codec.http.HttpResponseStatus.FORBIDDEN;\n+import static io.netty.handler.codec.http.HttpResponseStatus.UNAUTHORIZED;\n+\n+import io.confluent.ksql.api.auth.AuthenticationPlugin;\n+import io.confluent.ksql.api.auth.AuthenticationPluginHandler;\n+import io.confluent.ksql.api.auth.JaasAuthProvider;\n+import io.confluent.ksql.api.auth.KsqlAuthorizationProviderHandler;\n+import io.confluent.ksql.api.server.protocol.ErrorResponse;\n+import io.confluent.ksql.rest.server.KsqlRestConfig;\n+import io.confluent.ksql.security.KsqlSecurityExtension;\n+import io.vertx.core.AbstractVerticle;\n+import io.vertx.core.Handler;\n+import io.vertx.core.Promise;\n+import io.vertx.core.buffer.Buffer;\n+import io.vertx.core.http.HttpHeaders;\n+import io.vertx.core.http.HttpServer;\n+import io.vertx.core.http.HttpServerOptions;\n+import io.vertx.core.http.HttpServerResponse;\n+import io.vertx.core.json.JsonObject;\n+import io.vertx.ext.auth.AuthProvider;\n+import io.vertx.ext.web.Router;\n+import io.vertx.ext.web.RoutingContext;\n+import io.vertx.ext.web.handler.AuthHandler;\n+import io.vertx.ext.web.handler.BasicAuthHandler;\n+import java.util.Objects;\n+import java.util.Optional;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The server deploys multiple server verticles. This is where the HTTP2 requests are handled. The\n+ * actual implementation of the endpoints is provided by an implementation of {@code Endpoints}.\n+ */\n+// CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNDkwMQ=="}, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzI0MDA3OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1NDoyMlrOGOFnhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMzowNDozNlrOGOUHKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNTI4NQ==", "bodyText": "Again, these rules are here for a reason - can we refactor this method so its not breaking all these complexity rules?", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417425285", "createdAt": "2020-04-29T15:54:22Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -65,26 +66,32 @@\n   private final Set<HttpConnection> connections = new ConcurrentHashSet<>();\n   private final int maxPushQueryCount;\n   private final Set<String> deploymentIds = new HashSet<>();\n+  private final InternalEndpoints internalEndpoints;\n   private final KsqlSecurityExtension securityExtension;\n   private final Optional<AuthenticationPlugin> authenticationPlugin;\n   private final ServerState serverState;\n   private final List<URI> listeners = new ArrayList<>();\n   private WorkerExecutor workerExecutor;\n \n-  public Server(final Vertx vertx, final KsqlRestConfig config, final Endpoints endpoints,\n+  public Server(final Vertx vertx, final KsqlRestConfig config,\n+      final Endpoints endpoints,\n+      final InternalEndpoints internalEndpoints,\n       final KsqlSecurityExtension securityExtension,\n       final Optional<AuthenticationPlugin> authenticationPlugin,\n       final ServerState serverState) {\n     this.vertx = Objects.requireNonNull(vertx);\n     this.config = Objects.requireNonNull(config);\n     this.endpoints = Objects.requireNonNull(endpoints);\n+    this.internalEndpoints = Objects.requireNonNull(internalEndpoints);\n     this.securityExtension = Objects.requireNonNull(securityExtension);\n     this.authenticationPlugin = Objects.requireNonNull(authenticationPlugin);\n     this.serverState = Objects.requireNonNull(serverState);\n     this.maxPushQueryCount = config.getInt(KsqlRestConfig.MAX_PUSH_QUERIES);\n   }\n \n+  // CHECKSTYLE_RULES.OFF: CyclomaticComplexity|NPathComplexity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY2Mjc2Mw==", "bodyText": "Split up the method and removed the disabling.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417662763", "createdAt": "2020-04-29T23:04:36Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -65,26 +66,32 @@\n   private final Set<HttpConnection> connections = new ConcurrentHashSet<>();\n   private final int maxPushQueryCount;\n   private final Set<String> deploymentIds = new HashSet<>();\n+  private final InternalEndpoints internalEndpoints;\n   private final KsqlSecurityExtension securityExtension;\n   private final Optional<AuthenticationPlugin> authenticationPlugin;\n   private final ServerState serverState;\n   private final List<URI> listeners = new ArrayList<>();\n   private WorkerExecutor workerExecutor;\n \n-  public Server(final Vertx vertx, final KsqlRestConfig config, final Endpoints endpoints,\n+  public Server(final Vertx vertx, final KsqlRestConfig config,\n+      final Endpoints endpoints,\n+      final InternalEndpoints internalEndpoints,\n       final KsqlSecurityExtension securityExtension,\n       final Optional<AuthenticationPlugin> authenticationPlugin,\n       final ServerState serverState) {\n     this.vertx = Objects.requireNonNull(vertx);\n     this.config = Objects.requireNonNull(config);\n     this.endpoints = Objects.requireNonNull(endpoints);\n+    this.internalEndpoints = Objects.requireNonNull(internalEndpoints);\n     this.securityExtension = Objects.requireNonNull(securityExtension);\n     this.authenticationPlugin = Objects.requireNonNull(authenticationPlugin);\n     this.serverState = Objects.requireNonNull(serverState);\n     this.maxPushQueryCount = config.getInt(KsqlRestConfig.MAX_PUSH_QUERIES);\n   }\n \n+  // CHECKSTYLE_RULES.OFF: CyclomaticComplexity|NPathComplexity", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNTI4NQ=="}, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzI0MDk5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1NDozM1rOGOFoGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDowMTowOFrOGRMAZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNTQzNQ==", "bodyText": "I'm guessing this is not intentional? Do we want different counts for internal vs external?", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417425435", "createdAt": "2020-04-29T15:54:33Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -95,8 +102,13 @@ public synchronized void start() {\n     log.debug(\"Deploying \" + options.getInstances() + \" instances of server verticle\");\n \n     final List<URI> listenUris = parseListeners(config);\n+    final Optional<URI> internalListenUri = parseInternalListener(config, listenUris);\n+    // If there's no special internal endpoint listen URI, then just bind them with the rest of the\n+    // endpoints.\n+    final Optional<InternalEndpoints> combinedInternalEndpointsOptional =\n+        Optional.ofNullable(!internalListenUri.isPresent() ? internalEndpoints : null);\n \n-    final int instances = config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);\n+    final int instances = 2; //config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1MDMyMA==", "bodyText": "Not intentional.\nFor any of these async handlers, I would set the number of instances to be some multiple times the number of cpus, since it should't be proportional to the amount of traffic.  So, it seems they should be be all the same.  If we think there's a reason internal would be different, I'll make another config.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417650320", "createdAt": "2020-04-29T22:30:03Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -95,8 +102,13 @@ public synchronized void start() {\n     log.debug(\"Deploying \" + options.getInstances() + \" instances of server verticle\");\n \n     final List<URI> listenUris = parseListeners(config);\n+    final Optional<URI> internalListenUri = parseInternalListener(config, listenUris);\n+    // If there's no special internal endpoint listen URI, then just bind them with the rest of the\n+    // endpoints.\n+    final Optional<InternalEndpoints> combinedInternalEndpointsOptional =\n+        Optional.ofNullable(!internalListenUri.isPresent() ? internalEndpoints : null);\n \n-    final int instances = config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);\n+    final int instances = 2; //config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNTQzNQ=="}, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY3NTY4Ng==", "bodyText": "I'm not vertx, so can't really comment. @purplefox may have a view.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420675686", "createdAt": "2020-05-06T10:01:08Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -95,8 +102,13 @@ public synchronized void start() {\n     log.debug(\"Deploying \" + options.getInstances() + \" instances of server verticle\");\n \n     final List<URI> listenUris = parseListeners(config);\n+    final Optional<URI> internalListenUri = parseInternalListener(config, listenUris);\n+    // If there's no special internal endpoint listen URI, then just bind them with the rest of the\n+    // endpoints.\n+    final Optional<InternalEndpoints> combinedInternalEndpointsOptional =\n+        Optional.ofNullable(!internalListenUri.isPresent() ? internalEndpoints : null);\n \n-    final int instances = config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);\n+    final int instances = 2; //config.getInt(KsqlRestConfig.VERTICLE_INSTANCES);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyNTQzNQ=="}, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzI2MDIzOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNTo1ODo1MVrOGOF0Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMjozOTozOVrOGOTlKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyODU4Mw==", "bodyText": "This likely should refer to the same port as advertised listener, if set.\n\nNot sure what you mean by this - why should it be the same port? Seems normally for an internal endpoint to have a different port. And wouldn't that cause a port clash on startup?\n\nIf set, the internal endpoints don't use authentication.\n\nAside from the questionable English ;), the internal endpoints should definitely support authentication, otherwise its a security hole. It should be possible to configure that auth differently to the main endpoint. Yes, sometimes the internal endpoints can be locked down by other means, but not always, and some places will want the additional layer of protection that authentication brings regardless.  Security is like Ogres.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417428583", "createdAt": "2020-04-29T15:58:51Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -137,6 +137,16 @@\n           + \"Unlike listeners, it is not valid to use the 0.0.0.0 (IPv4) or [::] (IPv6) \"\n           + \"wildcard addresses.\";\n \n+  public static final String INTERNAL_LISTENER_CONFIG =\n+      KSQL_CONFIG_PREFIX + \"internal.listener\";\n+  private static final String INTERNAL_LISTENER_DOC =\n+      \"The listener used for binding internal endpoints, if different to the '\"\n+          + LISTENERS_CONFIG + \"' config property. \"\n+          + \"This likely should refer to the same port as advertised listener, if set. \"\n+          + \"In IaaS environments, this may need to be different from the interface to which\"\n+          + \"the server binds. If this is not set, the first value from listeners will be used. \"\n+          + \"If set, the internal endpoints don't use authentication.\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY1NDA1Nw==", "bodyText": "This likely should refer to the same port as advertised listener, if set.\n\nNot sure what you mean by this - why should it be the same port? Seems normally for an internal endpoint to have a different port. And wouldn't that cause a port clash on startup?\n\nI explained this much better when talking with Tim in comments.   In practice, we want the ksql.advertised.listener to refer to the thing bound by ksql.internal.listener, since this advertising is only for inter-node internal requests.  Even if we wanted to call an existing, publicly facing endpoint, I think it's useful to differentiate where it's coming from and actually create an internal version of the endpoint (which can of course, delegate to the same logic, if necessary).  The alternative is to have a ksql.advertised.listener and ksql.advertised.internal.listener, but this seems overly complex and would not accomplish the differentiation.\nksql.advertised.listener is just a way of explicitly stating whatever is already listened on, it doesn't actually bind any ports, so there should be no port clash.  ksql.internal.listener is more analogous to listeners.  If those are set to the same port, it will attempt to do the combined setup.\nI can see my description is poor.  Let me take another try at it.\n\n\nIf set, the internal endpoints don't use authentication.\n\nAside from the questionable English ;), the internal endpoints should definitely support authentication, otherwise its a security hole. It should be possible to configure that auth differently to the main endpoint. Yes, sometimes the internal endpoints can be locked down by other means, but not always, and some places will want the additional layer of protection that authentication brings regardless. Security is like Ogres.\n\nFor many internal calls, they're not being done on behalf of a user.  Pull queries are the exception.  Do we have any mechanism for these system types of requests at the moment?", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r417654057", "createdAt": "2020-04-29T22:39:39Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -137,6 +137,16 @@\n           + \"Unlike listeners, it is not valid to use the 0.0.0.0 (IPv4) or [::] (IPv6) \"\n           + \"wildcard addresses.\";\n \n+  public static final String INTERNAL_LISTENER_CONFIG =\n+      KSQL_CONFIG_PREFIX + \"internal.listener\";\n+  private static final String INTERNAL_LISTENER_DOC =\n+      \"The listener used for binding internal endpoints, if different to the '\"\n+          + LISTENERS_CONFIG + \"' config property. \"\n+          + \"This likely should refer to the same port as advertised listener, if set. \"\n+          + \"In IaaS environments, this may need to be different from the interface to which\"\n+          + \"the server binds. If this is not set, the first value from listeners will be used. \"\n+          + \"If set, the internal endpoints don't use authentication.\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQyODU4Mw=="}, "originalCommit": {"oid": "a764488cce19a687f4b368d9fc91d54045dc57e0"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3MTg2OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0Mjo0OFrOGRBd9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0Mjo0OFrOGRBd9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzAyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            {{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n          \n          \n            \n            {{ site.kstreams }} and shared with other ksqlDB nodes that make up the cluster.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420503028", "createdAt": "2020-05-06T01:42:48Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3NDY0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NDozM1rOGRBfkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NDozM1rOGRBfkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzQ0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `ksql.advertised.listener` setting controls the address advertised within\n          \n          \n            \n            The `ksql.advertised.listener` setting controls the address that is advertised within", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420503442", "createdAt": "2020-05-06T01:44:33Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3NjE1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NTozMlrOGRBgZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NTozMlrOGRBgZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzY1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If not set, the system will use the first of `listeners` to advertise and if this\n          \n          \n            \n            If not set, the system will use the first hostname in `listeners` to advertise, and if this", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420503652", "createdAt": "2020-05-06T01:45:32Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first of `listeners` to advertise and if this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3NjkwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NjowMlrOGRBg0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NjowMlrOGRBg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzc2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            is set to a wildcard address, then the system hostname is used.\n          \n          \n            \n            is set to a wildcard address, the system hostname is used.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420503763", "createdAt": "2020-05-06T01:46:02Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first of `listeners` to advertise and if this\n+is set to a wildcard address, then the system hostname is used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3Nzk4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NjozN1rOGRBhcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NjozN1rOGRBhcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwMzkyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n          \n          \n            \n            intra-cluster endpoints, which include forwarded pull queries, heartbeating, and lag reporting.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420503923", "createdAt": "2020-05-06T01:46:37Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first of `listeners` to advertise and if this\n+is set to a wildcard address, then the system hostname is used.\n+\n+This setting is most often useful when other nodes in the cluster should use\n+a different endpoint from the one used in `listeners` to initiate a request\n+to a node in the cluster.\n+\n+### ksql.internal.listener\n+\n+The `ksql.internal.listener ` setting controls the address bound for use by internal,\n+intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY3ODgzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NzowOFrOGRBh6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0NzowOFrOGRBh6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDA0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If not set, the system will use `listeners` to expose internal endpoints.\n          \n          \n            \n            If not set, the system will use `listeners` to expose internal endpoints.\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If not set, the system will use `listeners` to expose internal endpoints.\n          \n          \n            \n            If not set, the system uses `listeners` to expose internal endpoints.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420504042", "createdAt": "2020-05-06T01:47:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first of `listeners` to advertise and if this\n+is set to a wildcard address, then the system hostname is used.\n+\n+This setting is most often useful when other nodes in the cluster should use\n+a different endpoint from the one used in `listeners` to initiate a request\n+to a node in the cluster.\n+\n+### ksql.internal.listener\n+\n+The `ksql.internal.listener ` setting controls the address bound for use by internal,\n+intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+\n+If not set, the system will use `listeners` to expose internal endpoints.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzY4MzA5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0OTo1N1rOGRBkRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMTo0OTo1N1rOGRBkRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUwNDY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This setting is most often useful in a IaaS environment to separate external-facing\n          \n          \n            \n            This setting is most often useful in an IaaS environment to separate external-facing", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420504647", "createdAt": "2020-05-06T01:49:57Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address advertised within\n+{{ site.kstreams }}, and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first of `listeners` to advertise and if this\n+is set to a wildcard address, then the system hostname is used.\n+\n+This setting is most often useful when other nodes in the cluster should use\n+a different endpoint from the one used in `listeners` to initiate a request\n+to a node in the cluster.\n+\n+### ksql.internal.listener\n+\n+The `ksql.internal.listener ` setting controls the address bound for use by internal,\n+intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+\n+If not set, the system will use `listeners` to expose internal endpoints.\n+\n+This setting is most often useful in a IaaS environment to separate external-facing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODg3NjE1OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDoyODo0N1rOGRM2Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMjo1M1rOGU9XNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4OTUwMw==", "bodyText": "Personally, I think we should reword this AND reword the help for the advertised listener. Maybe something like:\n  private static final String INTERNAL_LISTENER_DOC =\n      \"The listener used for inter-node communication, if different to the '\"\n          + LISTENERS_CONFIG + \"' config. \"\n          + \"The \" + ADVERTISED_LISTENER_CONFIG + \" config can be set to provide an \"\n          + \"externally routable name for this listener, if required\";\n\n\nprivate static final String ADVERTISED_LISTENER_DOC =\n      \"The listener this node will share with other ksqlDB nodes in the cluster for internal communication. \"\n          + \"In IaaS environments, this may need to be different from the interface to which \"\n          + \"the server binds. \"\n          + \"If this is not set, the advertised listener will either default to \" +  INTERNAL_LISTENER_CONFIG \n          + \", if set, or else the first value from \" +  LISTENERS_CONFIG + \" will be used. \"\n          + \"It is not valid to use the 0.0.0.0 (IPv4) or [::] (IPv6) wildcard addresses.\";\nPlus I think both INTERNAL_LISTENER_DOC and LISTENERS_DOC would benefit from more info on how to secure these listeners.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420689503", "createdAt": "2020-05-06T10:28:47Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -137,6 +137,16 @@\n           + \"Unlike listeners, it is not valid to use the 0.0.0.0 (IPv4) or [::] (IPv6) \"\n           + \"wildcard addresses.\";\n \n+  public static final String INTERNAL_LISTENER_CONFIG =\n+      KSQL_CONFIG_PREFIX + \"internal.listener\";\n+  private static final String INTERNAL_LISTENER_DOC =\n+      \"The listener used for binding internal endpoints, if different to the '\"\n+          + LISTENERS_CONFIG + \"' config property. \"\n+          + \"This is the same endpoint referred to by ksql.advertised.listener, which is also used \"\n+          + \"for internal requests.\"\n+          + \"In IaaS environments, this may need to be different from the interface to which\"\n+          + \"the other endpoints bind.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzMDA3MQ==", "bodyText": "I agree, those previous doc strings were a bit outdated after multiple iterations on this.\nAdopted your suggestions.\nI added more of a security explanation for the internal listener doc, which I think makes it easier to understand the purpose of.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424630071", "createdAt": "2020-05-13T18:02:53Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -137,6 +137,16 @@\n           + \"Unlike listeners, it is not valid to use the 0.0.0.0 (IPv4) or [::] (IPv6) \"\n           + \"wildcard addresses.\";\n \n+  public static final String INTERNAL_LISTENER_CONFIG =\n+      KSQL_CONFIG_PREFIX + \"internal.listener\";\n+  private static final String INTERNAL_LISTENER_DOC =\n+      \"The listener used for binding internal endpoints, if different to the '\"\n+          + LISTENERS_CONFIG + \"' config property. \"\n+          + \"This is the same endpoint referred to by ksql.advertised.listener, which is also used \"\n+          + \"for internal requests.\"\n+          + \"In IaaS environments, this may need to be different from the interface to which\"\n+          + \"the other endpoints bind.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY4OTUwMw=="}, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODkzODUwOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDo0Nzo1NlrOGRNc7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjowOTo1MlrOGU5D_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5OTM3NQ==", "bodyText": "Can there be more than one?  I thought there was only a single internal listener...\nIs this empty if internal listeners config is not set, or does it contain the first value from listeners?  It seems to me to be empty if internal listeners is not set - which will likely mean each caller of this method will need to duplicate logic to handle the 'if empty' case.   Might be better to have this method know to return the first non-internal listener if internal listeners is not set.\nAlso, it would be much cleaner IMHO if internalListeners (and listeners), where immutable. Yes, they're only set once start has been called, but then they should be immutable, i.e. ImmutableList in the case of listeners and either ImmutableList or just a URI in the case of the internal.  This means the field can't be final, but I'd rather  a mutable field to an immutable object than an immutable field to a mutable object.  The latter doesn't require the synchronized call you have here.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r420699375", "createdAt": "2020-05-06T10:47:56Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -224,6 +277,10 @@ public int queryConnectionCount() {\n     return ImmutableList.copyOf(listeners);\n   }\n \n+  public synchronized List<URI> getInternalListeners() {\n+    return ImmutableList.copyOf(internalListeners);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1OTYxMg==", "bodyText": "You're right.  I was originally considering allowing for more than one, though I didn't do it this way.  I changed the return type to an Optional which is immutable.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424559612", "createdAt": "2020-05-13T16:09:52Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -224,6 +277,10 @@ public int queryConnectionCount() {\n     return ImmutableList.copyOf(listeners);\n   }\n \n+  public synchronized List<URI> getInternalListeners() {\n+    return ImmutableList.copyOf(internalListeners);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5OTM3NQ=="}, "originalCommit": {"oid": "6632e394b933e5024092e9661125b19a481d047c"}, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE3NjIwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1MDo1OVrOGUA_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoyOTo1OFrOGUdfwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MTA3Mw==", "bodyText": "kstreams is an implementation detail. I wouldn't expose it in the docs. I'd remove the reference.\nAll this needs to say is:\n\nthis setting does not create a listener.\nthis is the url used for inter-node comms.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423641073", "createdAt": "2020-05-12T10:50:59Z", "author": {"login": "big-andy-coates"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address that is advertised within\n+{{ site.kstreams }} and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNzk2OA==", "bodyText": "Done", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424107968", "createdAt": "2020-05-13T00:29:58Z", "author": {"login": "AlanConfluent"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address that is advertised within\n+{{ site.kstreams }} and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MTA3Mw=="}, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE4MDc5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1MjozMlrOGUBC3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoyOTo1MVrOGUdfjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MTgyMw==", "bodyText": "As mentioned in previous review (of a few moments ago), I still think this is wrong. It should default to internal.listener, where internal.listener defaults to listeners[0].", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423641823", "createdAt": "2020-05-12T10:52:32Z", "author": {"login": "big-andy-coates"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address that is advertised within\n+{{ site.kstreams }} and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first hostname in `listeners` to advertise, and if this\n+is set to a wildcard address, the system hostname is used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNzkxOA==", "bodyText": "I made it behave this way and removed this explanation anyway, per your previous comment.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424107918", "createdAt": "2020-05-13T00:29:51Z", "author": {"login": "AlanConfluent"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,6 +415,30 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n+### ksql.advertised.listener\n+\n+The `ksql.advertised.listener` setting controls the address that is advertised within\n+{{ site.kstreams }} and shared with other ksqlDB nodes that make up the cluster.\n+This address is used to initiate intra-cluster requests such as forwarded pull queries,\n+heartbeating, and lag reporting.\n+\n+If not set, the system will use the first hostname in `listeners` to advertise, and if this\n+is set to a wildcard address, the system hostname is used.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MTgyMw=="}, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE4NDU0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1MzozM1rOGUBFLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDozMjozN1rOGUdiUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MjQxNA==", "bodyText": "Again, remove the reference to KS IMHO.  It's enough to say clustering is achieved via a shared Kafka cluster and shared ksql.service.id.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423642414", "createdAt": "2020-05-12T10:53:33Z", "author": {"login": "big-andy-coates"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwODYyNQ==", "bodyText": "Removed.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424108625", "createdAt": "2020-05-13T00:32:37Z", "author": {"login": "AlanConfluent"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0MjQxNA=="}, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODE5Mjc0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMDo1NjowNFrOGUBKbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDozNDoxMFrOGUdjvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0Mzc1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Unsecured Environment\n          \n          \n            \n            ### Secured Environment\n          \n      \n    \n    \n  \n\n???", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423643758", "createdAt": "2020-05-12T10:56:04Z", "author": {"login": "big-andy-coates"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.\n+\n+```properties\n+bootstrap.servers=localhost:9092\n+ksql.service.id=my_application_\n+```\n+\n+Once formed, many operations can be run using the client APIs exposed on `listeners`.\n+\n+In order to utilize pull queries and their high availability functionality,\n+the hosts within the cluster must be configured to speak to each other via their\n+internal endpoints. The following describes how to configure listeners depending on\n+the nature of your environment.\n+\n+### Internal Network\n+\n+For the typical setup within an internal network, you might have just one\n+set of listeners.  This binds all of the client endpoints and internal endpoints on\n+the same interfaces.  Since the address used to access one host in the\n+cluster from another may differ from the bound listener, we can also utilize the\n+config `ksql.advertised.listener` to explicitly specify it.\n+\n+\n+```properties\n+listeners=http://0.0.0.0:8088\n+ksql.advertised.listener=http://host1.internal.example.com:8088\n+```\n+\n+### Unsecured Environment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwODk4OA==", "bodyText": "I think I meant originally that if you have an Untrusted Environment, you should take security measures.  I agree this is rather confusing.\nGoing with your suggestion", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424108988", "createdAt": "2020-05-13T00:34:10Z", "author": {"login": "AlanConfluent"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.\n+\n+```properties\n+bootstrap.servers=localhost:9092\n+ksql.service.id=my_application_\n+```\n+\n+Once formed, many operations can be run using the client APIs exposed on `listeners`.\n+\n+In order to utilize pull queries and their high availability functionality,\n+the hosts within the cluster must be configured to speak to each other via their\n+internal endpoints. The following describes how to configure listeners depending on\n+the nature of your environment.\n+\n+### Internal Network\n+\n+For the typical setup within an internal network, you might have just one\n+set of listeners.  This binds all of the client endpoints and internal endpoints on\n+the same interfaces.  Since the address used to access one host in the\n+cluster from another may differ from the bound listener, we can also utilize the\n+config `ksql.advertised.listener` to explicitly specify it.\n+\n+\n+```properties\n+listeners=http://0.0.0.0:8088\n+ksql.advertised.listener=http://host1.internal.example.com:8088\n+```\n+\n+### Unsecured Environment", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0Mzc1OA=="}, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODIyNzk5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowNzoyNFrOGUBg8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMTozMjowOFrOGUedCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0OTUyMg==", "bodyText": "I'm a bit confused by the 'internal network' terminology, though it could just be me.\n'Internal network' suggests to me that there is an internal and public network, which is more an IaaS setup.  Yet the example is talking more about an example where the listeners config is either using some form of localhost for the listeners config, or where the local host name is not resolvable/routable by other servers running the ksql nodes.\nIs this just me? Or would a better name help here?  It seems we have the following setups:\n\nSingle interface, using resolvable and routable host names, i.e. just using listeners config.\nSingle interface, using unresolvable or unroutable host names, i.e. using listeners and advertised configs.\nDual interface, where internal is resolvable and routable host name, i.e. using listeners and internal.listeners.\nDual interface, where internal is unresolvable or unroutable host name, i.e. using listeners, internal.listeners and advertised.listeners.\n\nI think it would make sense to have a section for each and explain the key part of needing to set advertised config is if either:\n\nthe config used for internal listeners, (either set explicitly or defaulting to listeners[0]), is using wildcards (which defaults to localhost) or explicitly using localhost, i.e. so it's not meaningful to other nodes\nor the explicit host name used for internal listeners, (either set explicitly or defaulting to listeners[0]), is either not resolvable to an IP, or that IP is not routable, from other ksql nodes.\n\nThe choice between these 4 modes doesn't have that much to do with the users choice between running auth or not running auth, (as you've alluded to in the Unsecure Environment section below). After all, they can run each with auth on or off.   However, which of these configurations they're running may affect how they need to configure auth. Maybe not right now, but certainly once/if we allow different auth to be set on the internal endpoints.  Hence I'd probably change the text in this page to say that running over dual network interfaces makes it possible to configure the network such that the inter-node endpoints ksqlDB uses are not accessible on the public listener(s).  If done correctly, this can be a more secure mode of deployment. And then go one to briefly mention and link to the auth docs as a 'Another security feature you can use is Auth'.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423649522", "createdAt": "2020-05-12T11:07:24Z", "author": {"login": "big-andy-coates"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.\n+\n+```properties\n+bootstrap.servers=localhost:9092\n+ksql.service.id=my_application_\n+```\n+\n+Once formed, many operations can be run using the client APIs exposed on `listeners`.\n+\n+In order to utilize pull queries and their high availability functionality,\n+the hosts within the cluster must be configured to speak to each other via their\n+internal endpoints. The following describes how to configure listeners depending on\n+the nature of your environment.\n+\n+### Internal Network\n+\n+For the typical setup within an internal network, you might have just one", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEyMzY1Nw==", "bodyText": "I agree that the previous terminology wasn't great.\nI swapped out what I had for 4 configurations, as you've outlined above.  I also mentioned the fallback sequence, so it should be intuitive what's in use when configurations are unset.  I kept things fairly simple, so I didn't draw the full decision tree, but I think for documentation, we want to keep it somewhat straightforward.\nI also mentioned the dual network interfaces and how this is a similar variation to port filtering.  I agree that this is going to need to be elaborated on a fair amount when we add inter-node auth and this blurb will probably have to be updated as well to at least reference it.", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424123657", "createdAt": "2020-05-13T01:32:08Z", "author": {"login": "AlanConfluent"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,3 +310,60 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n+Configuring Listeners for a ksqlDB Cluster\n+--------------------------------\n+\n+Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n+form a cluster.  ksqlDB utilizes {{ site.kstreams }} to do this and requires all hosts of\n+a cluster to use the same `ksql.service.id`.\n+\n+```properties\n+bootstrap.servers=localhost:9092\n+ksql.service.id=my_application_\n+```\n+\n+Once formed, many operations can be run using the client APIs exposed on `listeners`.\n+\n+In order to utilize pull queries and their high availability functionality,\n+the hosts within the cluster must be configured to speak to each other via their\n+internal endpoints. The following describes how to configure listeners depending on\n+the nature of your environment.\n+\n+### Internal Network\n+\n+For the typical setup within an internal network, you might have just one", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0OTUyMg=="}, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODI1OTkxOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/AuthorizationFunctionalTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMToxNzoyMVrOGUB07A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMToxNzoyMVrOGUB07A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY1NDYzNg==", "bodyText": "perfect - thanks!", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r423654636", "createdAt": "2020-05-12T11:17:21Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/AuthorizationFunctionalTest.java", "diffHunk": "@@ -121,6 +125,33 @@ public void shouldAllowAccess() {\n     assertThat(topics.get(0).getName(), is(TOPIC_1));\n   }\n \n+  @Test\n+  public void shouldDenyAccess_internal() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ed087aab594599cfef0f8b44f2ddaf28dfb350"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjEyMTQzOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/InternalEndpointHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzoyNDoyMlrOGVPQcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzo0ODo0M1rOGVnr-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkyMzI0OQ==", "bodyText": "Best to use constant here HttpResponseStatus.BAD_REQUEST.code()", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r424923249", "createdAt": "2020-05-14T07:24:22Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/InternalEndpointHandler.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.Set;\n+\n+public class InternalEndpointHandler implements Handler<RoutingContext> {\n+  private static final Set<String> INTERNAL_PATHS = ImmutableSet.of(\n+      \"/heartbeat\", \"/lag\");\n+\n+  private final boolean isFromInternalListener;\n+\n+  public InternalEndpointHandler(final boolean isFromInternalListener) {\n+    this.isFromInternalListener = isFromInternalListener;\n+  }\n+\n+\n+  @Override\n+  public void handle(final RoutingContext routingContext) {\n+    if (INTERNAL_PATHS.contains(routingContext.normalisedPath())\n+        && !isFromInternalListener) {\n+      routingContext.fail(400,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58d089f0136847ef3c602b0750f7144d8ca67a99"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzUxMw==", "bodyText": "Done", "url": "https://github.com/confluentinc/ksql/pull/5212#discussion_r425323513", "createdAt": "2020-05-14T17:48:43Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/InternalEndpointHandler.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.server;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.vertx.core.Handler;\n+import io.vertx.ext.web.RoutingContext;\n+import java.util.Set;\n+\n+public class InternalEndpointHandler implements Handler<RoutingContext> {\n+  private static final Set<String> INTERNAL_PATHS = ImmutableSet.of(\n+      \"/heartbeat\", \"/lag\");\n+\n+  private final boolean isFromInternalListener;\n+\n+  public InternalEndpointHandler(final boolean isFromInternalListener) {\n+    this.isFromInternalListener = isFromInternalListener;\n+  }\n+\n+\n+  @Override\n+  public void handle(final RoutingContext routingContext) {\n+    if (INTERNAL_PATHS.contains(routingContext.normalisedPath())\n+        && !isFromInternalListener) {\n+      routingContext.fail(400,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkyMzI0OQ=="}, "originalCommit": {"oid": "58d089f0136847ef3c602b0750f7144d8ca67a99"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3502, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}