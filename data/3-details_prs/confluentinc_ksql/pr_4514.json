{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODUxNTc0", "number": 4514, "title": "docs: update docs for klip-12 configs", "bodyText": "Description\nWhat behavior do you want to change, why, how does your patch achieve the changes?\nTesting done\nDescribe the testing strategy. Unit and integration tests are expected for any behavior changes.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-02-11T19:58:20Z", "url": "https://github.com/confluentinc/ksql/pull/4514", "merged": true, "mergeCommit": {"oid": "d9aabf358f8e6b3c73e6f518fdc667b59cd6bb12"}, "closed": true, "closedAt": "2020-02-11T21:49:18Z", "author": {"login": "vinothchandar"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDXSUkgH2gAyMzczODUxNTc0OmNjYWQ2OGQyZTQwNDdkOTkzOTg4MzI0NzkxYTJiYWQxNjM0NTM0OWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDcXq1gFqTM1NzE0MTMzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccad68d2e4047d993988324791a2bad16345349d", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/ccad68d2e4047d993988324791a2bad16345349d", "committedDate": "2020-02-11T19:55:41Z", "message": "docs: update docs for klip-12 configs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MDIxMzk1", "url": "https://github.com/confluentinc/ksql/pull/4514#pullrequestreview-357021395", "createdAt": "2020-02-11T21:48:35Z", "commit": {"oid": "ccad68d2e4047d993988324791a2bad16345349d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTQxMzMz", "url": "https://github.com/confluentinc/ksql/pull/4514#pullrequestreview-357141333", "createdAt": "2020-02-12T01:48:41Z", "commit": {"oid": "ccad68d2e4047d993988324791a2bad16345349d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo0ODo0MlrOFofVEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTo1MDozMFrOFofW2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwMDY1OQ==", "bodyText": "By default, when we set this to true, with nothing else (no heartbeats, no lag), it will try active first, and fall back to standby, right?", "url": "https://github.com/confluentinc/ksql/pull/4514#discussion_r378000659", "createdAt": "2020-02-12T01:48:42Z", "author": {"login": "AlanConfluent"}, "path": "docs-md/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -314,6 +314,29 @@ statements.\n     `ksql.persistence.ensure.value.is.struct` setting, because it has no\n     concept of an outer record or structure.\n \n+### ksql.query.pull.enable.standby.reads\n+\n+Config to enable/disable forwarding pull queries to standby hosts when the active is dead. This means that stale values may be returned \n+for these queries since standby hosts receive updates from the changelog topic (to which the active writes to) asynchronously.\n+Turning on this configuration, effectively sacrifices consistency for higher availability. \n+\n+Setting to `true` guarantees high availability for pull queries. If set to `false`, pull queries will fail when the active is dead and ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccad68d2e4047d993988324791a2bad16345349d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAwMTExMg==", "bodyText": "\"In order to use this functionality\"", "url": "https://github.com/confluentinc/ksql/pull/4514#discussion_r378001112", "createdAt": "2020-02-12T01:50:30Z", "author": {"login": "AlanConfluent"}, "path": "docs-md/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -314,6 +314,29 @@ statements.\n     `ksql.persistence.ensure.value.is.struct` setting, because it has no\n     concept of an outer record or structure.\n \n+### ksql.query.pull.enable.standby.reads\n+\n+Config to enable/disable forwarding pull queries to standby hosts when the active is dead. This means that stale values may be returned \n+for these queries since standby hosts receive updates from the changelog topic (to which the active writes to) asynchronously.\n+Turning on this configuration, effectively sacrifices consistency for higher availability. \n+\n+Setting to `true` guarantees high availability for pull queries. If set to `false`, pull queries will fail when the active is dead and \n+until a new active is elected. Default value is `false`. \n+\n+For using this functionality, the server must be configured with `ksql.streams.num.standby.replicas` >= `1`, so standbys are actually enabled for the \n+underlying Kafka Streams topologies. We also recommend `ksql.heartbeat.enable=true`, to ensure pull queries quickly route around dead/failed servers, \n+without wastefully attempting to open connections to it (which can be slow & resource in-efficient). \n+\n+### ksql.query.pull.max.allowed.offset.lag\n+\n+Config to control the maximum lag tolerated by a pull query against a table, expressed as the number of messages a given table-partition is behind, compared to the \n+changelog topic. This is applied to all servers, both active and standbys included. This can be overridden per query, from the CLI (using `SET` command) or \n+the pull query REST endpoint (by including it in the request e.g: `\"streamsProperties\": {\"ksql.query.pull.max.allowed.offset.lag\": \"100\"}`). \n+\n+By default, any amount of lag is allowed. For using this functionality, the server must be configured with `ksql.heartbeat.enable=true` and ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccad68d2e4047d993988324791a2bad16345349d"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 9, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}