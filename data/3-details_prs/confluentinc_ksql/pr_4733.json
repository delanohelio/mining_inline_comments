{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MTIzMDEy", "number": 4733, "title": "feat: support for tunable retention, grace period for windowed tables", "bodyText": "Description\n\nFixes #4157, adding SQL syntax for specifying retention, grace period for all 3 windowed tables (tumbling, hopping, session)\n  ... RETENTION 60 SECONDS, GRACE PERIOD 0 SECONDS ...\n\n\n\nBoth clauses are optional, and will fallback to Kafka streams defaults if unspecified.\nTesting done\n\n Functional tests\n Unit tests\n Deploy in a real cluster, and test for retention\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-07T08:58:08Z", "url": "https://github.com/confluentinc/ksql/pull/4733", "merged": true, "mergeCommit": {"oid": "30d49b336322c6d527b98a4c4094f3e299a92f97"}, "closed": true, "closedAt": "2020-03-14T00:29:16Z", "author": {"login": "vinothchandar"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMCdingBqjMxMTE5NTEyNDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNY0t4AH2gAyMzg1MTIzMDEyOmU4M2IwOGMwNWVlYmRkMTExMWU4YjY0MTUxMGJjZjc3MGU5NDZiOGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b2a0b8151a93c1d2a76906e5b856489162f73c2", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/7b2a0b8151a93c1d2a76906e5b856489162f73c2", "committedDate": "2020-03-07T08:50:22Z", "message": "feat: support for tunable retention, grace period for windowed tables\n\n - Fixes #4157, adding SQL syntax for specifying retention, grace period\n - Added functional tests\n\nfeat: initial commit for tunable retention\n\nfeat: hacky test now works"}, "afterCommit": {"oid": "ae1de49115a35845aa43baaa8f566ad8642ebc67", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/ae1de49115a35845aa43baaa8f566ad8642ebc67", "committedDate": "2020-03-09T18:44:58Z", "message": "feat: support for tunable retention, grace period for windowed tables\n\n - Fixes #4157, adding SQL syntax for specifying retention, grace period\n - Added functional tests\n\nfeat: initial commit for tunable retention\n\nfeat: hacky test now works"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0815e460690c08538a2b00962e71ffa36db5a68a", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/0815e460690c08538a2b00962e71ffa36db5a68a", "committedDate": "2020-03-10T17:56:07Z", "message": "refactor: introduce abstraction for passing window's time clauses"}, "afterCommit": {"oid": "bc6bc8dd0c41ad6ceb3322b58b083783f4300383", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/bc6bc8dd0c41ad6ceb3322b58b083783f4300383", "committedDate": "2020-03-10T18:51:12Z", "message": "refactor: introduce abstraction for passing window's time clauses"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc6bc8dd0c41ad6ceb3322b58b083783f4300383", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/bc6bc8dd0c41ad6ceb3322b58b083783f4300383", "committedDate": "2020-03-10T18:51:12Z", "message": "refactor: introduce abstraction for passing window's time clauses"}, "afterCommit": {"oid": "810072c3c80f2dea118890d13fa3b361c6951686", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/810072c3c80f2dea118890d13fa3b361c6951686", "committedDate": "2020-03-10T20:10:24Z", "message": "refactor: introduce abstraction for passing window's time clauses"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc59d6ec3a22ac1d407a1385a5ac54314215858c", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/bc59d6ec3a22ac1d407a1385a5ac54314215858c", "committedDate": "2020-03-11T23:31:37Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "091043edfc6bd93fc58d784f08fdd9be7d61c125", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/091043edfc6bd93fc58d784f08fdd9be7d61c125", "committedDate": "2020-03-12T00:12:53Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "091043edfc6bd93fc58d784f08fdd9be7d61c125", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/091043edfc6bd93fc58d784f08fdd9be7d61c125", "committedDate": "2020-03-12T00:12:53Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "65cde4873a350a72a572afdfbaaff909c1b39eb1", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/65cde4873a350a72a572afdfbaaff909c1b39eb1", "committedDate": "2020-03-13T15:33:11Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ed68718d934caf2dc3462343ec1bcb55847e416", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/5ed68718d934caf2dc3462343ec1bcb55847e416", "committedDate": "2020-03-13T17:16:10Z", "message": "feat: support for tunable retention, grace period for windowed tables\n\n - Fixes #4157, adding SQL syntax for specifying retention, grace period\n - Added functional tests\n\nfeat: initial commit for tunable retention\n\nfeat: hacky test now works"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "724b2bb8bac81f6d0db2f63bd41871bad1bcfb8c", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/724b2bb8bac81f6d0db2f63bd41871bad1bcfb8c", "committedDate": "2020-03-13T17:16:10Z", "message": "refactor: add an overload in MaterializedFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d70e8b86fbc9afe027c09d251a3d65b8f0a80e8a", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/d70e8b86fbc9afe027c09d251a3d65b8f0a80e8a", "committedDate": "2020-03-13T17:16:11Z", "message": "refactor: introduce abstraction for passing window's time clauses"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f08fe813e5d44fe325e69814574bcb759e57a1b5", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/f08fe813e5d44fe325e69814574bcb759e57a1b5", "committedDate": "2020-03-13T17:16:11Z", "message": "test: enhancing unit tests around retention/grace period parameters"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65cde4873a350a72a572afdfbaaff909c1b39eb1", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/65cde4873a350a72a572afdfbaaff909c1b39eb1", "committedDate": "2020-03-13T15:33:11Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "82dd65f83d13adee72c351e1dcddc2e312a7af00", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/82dd65f83d13adee72c351e1dcddc2e312a7af00", "committedDate": "2020-03-13T17:16:11Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82dd65f83d13adee72c351e1dcddc2e312a7af00", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/82dd65f83d13adee72c351e1dcddc2e312a7af00", "committedDate": "2020-03-13T17:16:11Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "73c459c6cd355f6330fd962aae3e70e2570ef63f", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/73c459c6cd355f6330fd962aae3e70e2570ef63f", "committedDate": "2020-03-13T18:22:46Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73c459c6cd355f6330fd962aae3e70e2570ef63f", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/73c459c6cd355f6330fd962aae3e70e2570ef63f", "committedDate": "2020-03-13T18:22:46Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "77276c8f9c823c67a86f2551b09914957c05333e", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/77276c8f9c823c67a86f2551b09914957c05333e", "committedDate": "2020-03-13T18:52:50Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77276c8f9c823c67a86f2551b09914957c05333e", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/77276c8f9c823c67a86f2551b09914957c05333e", "committedDate": "2020-03-13T18:52:50Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/07035ebdebfdda5d0506066e115f634f9013aecb", "committedDate": "2020-03-13T19:13:16Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTY5OTc4", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374569978", "createdAt": "2020-03-13T19:51:36Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MTozNlrOF2QdFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MTozNlrOF2QdFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNzAxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n          \n          \n            \n            Frequently, events that belong to a window can arrive late, for example, over slow networks, and a grace period", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392437015", "createdAt": "2020-03-13T19:51:36Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTcwMjE1", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374570215", "createdAt": "2020-03-13T19:52:01Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MjowMVrOF2Qdww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MjowMVrOF2Qdww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNzE4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n          \n          \n            \n            may be required to ensure the events are accepted into the window. ksqlDB enables configuring this", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392437187", "createdAt": "2020-03-13T19:52:01Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTcwNDI3", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374570427", "createdAt": "2020-03-13T19:52:24Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MjoyNFrOF2QeXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MjoyNFrOF2QeXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNzM0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            behavior, for each of the window types above. \n          \n          \n            \n            behavior, for each of the window types.", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392437342", "createdAt": "2020-03-13T19:52:24Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTcwOTAy", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374570902", "createdAt": "2020-03-13T19:53:19Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MzoxOVrOF2Qf0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1MzoxOVrOF2Qf0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNzcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, to allow events to be accepted upto 2 hours of delay after the window ends, \n          \n          \n            \n            For example, to allow events to be accepted for up to two hours after the window ends,", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392437714", "createdAt": "2020-03-13T19:53:19Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. \n+\n+For example, to allow events to be accepted upto 2 hours of delay after the window ends, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTcxMTY5", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374571169", "createdAt": "2020-03-13T19:53:46Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1Mzo0N1rOF2QgqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1Mzo0N1rOF2QgqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzNzkyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Events that arrive later than the grace period, are dropped and not included in the aggregate result.\n          \n          \n            \n            Events that arrive later than the grace period are dropped and not included in the aggregate result.", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392437928", "createdAt": "2020-03-13T19:53:47Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. \n+\n+For example, to allow events to be accepted upto 2 hours of delay after the window ends, \n+you might run a query like:\n+\n+```sql\n+SELECT orderzip_code, TOPK(order_total, 5) FROM orders\n+  WINDOW TUMBLING (SIZE 1 HOUR, GRACE PERIOD 2 HOURS) \n+  GROUP BY order_zipcode\n+  EMIT CHANGES;\n+```\n+\n+Events that arrive later than the grace period, are dropped and not included in the aggregate result.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTcyMDgy", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374572082", "createdAt": "2020-03-13T19:55:28Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1NToyOFrOF2Qjkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1NToyOFrOF2Qjkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzODY3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ksqlDB supports configuring how many windows in the past to retain for pull and push queries for \n          \n          \n            \n            For each window type, you can configure the number of windows in the past that ksqlDB retains.", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392438675", "createdAt": "2020-03-13T19:55:28Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. \n+\n+For example, to allow events to be accepted upto 2 hours of delay after the window ends, \n+you might run a query like:\n+\n+```sql\n+SELECT orderzip_code, TOPK(order_total, 5) FROM orders\n+  WINDOW TUMBLING (SIZE 1 HOUR, GRACE PERIOD 2 HOURS) \n+  GROUP BY order_zipcode\n+  EMIT CHANGES;\n+```\n+\n+Events that arrive later than the grace period, are dropped and not included in the aggregate result.\n+\n+### Window Retention \n+\n+ksqlDB supports configuring how many windows in the past to retain for pull and push queries for ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTczMDQ0", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374573044", "createdAt": "2020-03-13T19:57:26Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1NzoyNlrOF2Qmeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxOTo1NzoyNlrOF2Qmeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQzOTQxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            each window type. This capability can be very useful for interactive applications that use ksqlDB \n          \n          \n            \n            This capability is useful for interactive applications that use ksqlDB", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392439418", "createdAt": "2020-03-13T19:57:26Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. \n+\n+For example, to allow events to be accepted upto 2 hours of delay after the window ends, \n+you might run a query like:\n+\n+```sql\n+SELECT orderzip_code, TOPK(order_total, 5) FROM orders\n+  WINDOW TUMBLING (SIZE 1 HOUR, GRACE PERIOD 2 HOURS) \n+  GROUP BY order_zipcode\n+  EMIT CHANGES;\n+```\n+\n+Events that arrive later than the grace period, are dropped and not included in the aggregate result.\n+\n+### Window Retention \n+\n+ksqlDB supports configuring how many windows in the past to retain for pull and push queries for \n+each window type. This capability can be very useful for interactive applications that use ksqlDB ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NTc2MjIw", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374576220", "createdAt": "2020-03-13T20:03:54Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/07035ebdebfdda5d0506066e115f634f9013aecb", "committedDate": "2020-03-13T19:13:16Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f", "committedDate": "2020-03-13T20:29:26Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjAwNzM3", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374600737", "createdAt": "2020-03-13T20:27:26Z", "commit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDoyNzoyNlrOF2Rb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMDo0MjoxMVrOF2SBGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ1MzA4NQ==", "bodyText": "commenting here before reading the code - we should make sure that this is enforced in the code (and if it is, we might want to call that out here)\nEDIT: I see that it is, feel free to ignore this comment or clarify the docs. I'm happy either way", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392453085", "createdAt": "2020-03-13T20:27:26Z", "author": {"login": "agavra"}, "path": "docs-md/concepts/time-and-windows-in-ksqldb-queries.md", "diffHunk": "@@ -365,4 +365,42 @@ SELECT o.order_id, o.total_amount, o.customer_name, s.shipment_id, s.warehouse\n For more information on joins, see\n [Join Event Streams with ksqlDB](../developer-guide/joins/join-streams-and-tables.md).\n \n+### Late Arriving Events\n+\n+Often times, events that belong to a window can arrive late (e.g slow networks) and a grace period \n+may be required to ensure the events are accepted into the window. ksqlDB allows configuring this\n+behavior, for each of the window types above. \n+\n+For example, to allow events to be accepted upto 2 hours of delay after the window ends, \n+you might run a query like:\n+\n+```sql\n+SELECT orderzip_code, TOPK(order_total, 5) FROM orders\n+  WINDOW TUMBLING (SIZE 1 HOUR, GRACE PERIOD 2 HOURS) \n+  GROUP BY order_zipcode\n+  EMIT CHANGES;\n+```\n+\n+Events that arrive later than the grace period, are dropped and not included in the aggregate result.\n+\n+### Window Retention \n+\n+ksqlDB supports configuring how many windows in the past to retain for pull and push queries for \n+each window type. This capability can be very useful for interactive applications that use ksqlDB \n+as their primary serving data store.\n+\n+For example, to retain the computed windowed aggregation results for a week, \n+you might run the following query:\n+\n+```sql\n+SELECT regionid, COUNT(*) FROM pageviews\n+  WINDOW HOPPING (SIZE 30 SECONDS, ADVANCE BY 10 SECONDS, RETENTION 7 DAYS, GRACE PERIOD 30 MINUTES)\n+  WHERE UCASE(gender)='FEMALE' AND LCASE (regionid) LIKE '%_6'\n+  GROUP BY regionid\n+  EMIT CHANGES;\n+```\n+\n+Note that the specified retention period should be larger than the sum of window size and any grace\n+period.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07035ebdebfdda5d0506066e115f634f9013aecb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDI0Mw==", "bodyText": "why not java.time.Duration? seems to do the same thing but with more utility methods. Happy either way", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392460243", "createdAt": "2020-03-13T20:38:33Z", "author": {"login": "agavra"}, "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/windows/WindowTimeClause.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.execution.windows;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import com.google.errorprone.annotations.Immutable;\n+import java.time.Duration;\n+import java.util.Objects;\n+import java.util.concurrent.TimeUnit;\n+\n+/**\n+ * Pojo for a time clause added to a window expression\n+ */\n+@Immutable\n+public class WindowTimeClause {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MDc4Ng==", "bodyText": "I think we should add these to nonReservedWords - since these can only occur in the window clause it should be safe for users to use them without backquoting them as columns", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392460786", "createdAt": "2020-03-13T20:39:23Z", "author": {"login": "agavra"}, "path": "ksqldb-parser/src/main/antlr4/io/confluent/ksql/parser/SqlBase.g4", "diffHunk": "@@ -387,6 +395,9 @@ TUMBLING: 'TUMBLING';\n HOPPING: 'HOPPING';\n SIZE: 'SIZE';\n ADVANCE: 'ADVANCE';\n+RETENTION: 'RETENTION';\n+GRACE: 'GRACE';\n+PERIOD: 'PERIOD';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ2MjYxOQ==", "bodyText": "not sure how much extra values these assertions give and they force us to use spys. is there any way we can check that the properties are being set on the table instead?", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392462619", "createdAt": "2020-03-13T20:42:11Z", "author": {"login": "agavra"}, "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/StreamAggregateBuilderTest.java", "diffHunk": "@@ -420,14 +438,17 @@ public void shouldBuildTumblingWindowedAggregateCorrectly() {\n \n     // Then:\n     assertThat(result.getTable(), is(windowedWithWindowBounds));\n+    verify(gracePeriodClause).toDuration();\n+    verify(retentionClause).toDuration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febc520ea4e4e4b0905e0eb4db925cc803aed3dd", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/febc520ea4e4e4b0905e0eb4db925cc803aed3dd", "committedDate": "2020-03-13T21:09:47Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/1f367ac0c8b6d2c83cb3b3dd8edc1c606519228f", "committedDate": "2020-03-13T20:29:26Z", "message": "docs: document retention,grace period for window queries"}, "afterCommit": {"oid": "febc520ea4e4e4b0905e0eb4db925cc803aed3dd", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/febc520ea4e4e4b0905e0eb4db925cc803aed3dd", "committedDate": "2020-03-13T21:09:47Z", "message": "docs: document retention,grace period for window queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjI4NTA0", "url": "https://github.com/confluentinc/ksql/pull/4733#pullrequestreview-374628504", "createdAt": "2020-03-13T21:25:41Z", "commit": {"oid": "febc520ea4e4e4b0905e0eb4db925cc803aed3dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMToyNTo0MVrOF2Tl7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMToyNTo0MVrOF2Tl7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ4ODQzMQ==", "bodyText": "this is what ends up being included in the query plan, do we need to encode the retention and gracePeriod here?", "url": "https://github.com/confluentinc/ksql/pull/4733#discussion_r392488431", "createdAt": "2020-03-13T21:25:41Z", "author": {"login": "agavra"}, "path": "ksqldb-execution/src/main/java/io/confluent/ksql/execution/windows/TumblingWindowExpression.java", "diffHunk": "@@ -21,44 +21,37 @@\n import io.confluent.ksql.model.WindowType;\n import io.confluent.ksql.parser.NodeLocation;\n import io.confluent.ksql.serde.WindowInfo;\n-import java.time.Duration;\n import java.util.Objects;\n import java.util.Optional;\n-import java.util.concurrent.TimeUnit;\n \n @Immutable\n public class TumblingWindowExpression extends KsqlWindowExpression {\n \n-  private final long size;\n-  private final TimeUnit sizeUnit;\n+  private final WindowTimeClause size;\n \n-  public TumblingWindowExpression(final long size, final TimeUnit sizeUnit) {\n-    this(Optional.empty(), size, sizeUnit);\n+  public TumblingWindowExpression(final WindowTimeClause size) {\n+    this(Optional.empty(), size, Optional.empty(), Optional.empty());\n   }\n \n   public TumblingWindowExpression(\n       final Optional<NodeLocation> location,\n-      final long size,\n-      final TimeUnit sizeUnit\n+      final WindowTimeClause size,\n+      final Optional<WindowTimeClause> retention,\n+      final Optional<WindowTimeClause> gracePeriod\n   ) {\n-    super(location);\n-    this.size = size;\n-    this.sizeUnit = requireNonNull(sizeUnit, \"sizeUnit\");\n+    super(location, retention, gracePeriod);\n+    this.size = requireNonNull(size, \"size\");\n   }\n \n   @Override\n   public WindowInfo getWindowInfo() {\n     return WindowInfo.of(\n         WindowType.TUMBLING,\n-        Optional.of(Duration.ofNanos(sizeUnit.toNanos(size)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "febc520ea4e4e4b0905e0eb4db925cc803aed3dd"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e83b08c05eebdd1111e8b641510bcf770e946b8c", "author": {"user": {"login": "vinothchandar", "name": "vinoth chandar"}}, "url": "https://github.com/confluentinc/ksql/commit/e83b08c05eebdd1111e8b641510bcf770e946b8c", "committedDate": "2020-03-13T23:22:24Z", "message": "test: add grace period/retention cases for sql formatter test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4932, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}