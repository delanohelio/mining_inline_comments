{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDA2ODI1", "number": 4459, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo0MDowOVrODd3i1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo0MDowOVrODd3i1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ1MzMzOnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/planner/plan/AggregateNode.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo0MDowOVrOFmt-5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDoyNzo1NVrOFm4t8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MzU5MQ==", "bodyText": "double checking - is there a problem with aggregating on window bounds of the source? e.g. I'm consuming from a windowed stream and performing an aggregation: SELECT COUNT_DISTINCT(source.WINDOW_START) FROM source", "url": "https://github.com/confluentinc/ksql/pull/4459#discussion_r376143591", "createdAt": "2020-02-06T23:40:09Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/planner/plan/AggregateNode.java", "diffHunk": "@@ -404,9 +391,15 @@ private ResolveToInternalRewriter() {\n         }\n \n         final boolean isAggregate = node.getReference().isAggregate();\n+        final boolean windowBounds = SchemaUtil.isWindowBound(node.getReference());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8154f52baa28958014eccd10909d4f3cc7f18a8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxOTQ3NA==", "bodyText": "Yes there is a problem. It's not currently possible.  See #4397 for details.", "url": "https://github.com/confluentinc/ksql/pull/4459#discussion_r376319474", "createdAt": "2020-02-07T10:27:55Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/planner/plan/AggregateNode.java", "diffHunk": "@@ -404,9 +391,15 @@ private ResolveToInternalRewriter() {\n         }\n \n         final boolean isAggregate = node.getReference().isAggregate();\n+        final boolean windowBounds = SchemaUtil.isWindowBound(node.getReference());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0MzU5MQ=="}, "originalCommit": {"oid": "f8154f52baa28958014eccd10909d4f3cc7f18a8"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2085, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}