{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTA2MTg1", "number": 5684, "title": "fix: query w/ scoped all columns, join and where clause", "bodyText": "Description\nfixes: #5503\nThis fixes a regression introduced in 0.10.\nThe implications of this are not that it crashes the command runner thread, as the original ticket states. Instead, the implications are that queries a users could previously run will now fail. Existing running queries will not be affected.\nAffected queries will be any using combining:\n\nA join\nwith a projection using a scoped 'all columns', e.g. a A.*\nwith a where clause\n\ne.g.\nSELECT A.*, B.Id\n   FROM A\n     JOIN B ON A.Id = B.userId\n   WHERE A.x < 10;\nSuch queries now work.\nTesting done\nUsual\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-06-25T15:44:51Z", "url": "https://github.com/confluentinc/ksql/pull/5684", "merged": true, "mergeCommit": {"oid": "304eb0c48530068c02839f216aca0f71fc84f7ca"}, "closed": true, "closedAt": "2020-06-30T11:16:24Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuwk9ugH2gAyNDQwMTA2MTg1OmEzZWJiZjU4ZTI2MTQ2MGUxOGQwZTdiYzEzOTA3OGJkY2Y5ZWI0OWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwEil1gFqTQzOTM1Nzc2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/a3ebbf58e261460e18d0e7bc139078bdcf9eb49c", "committedDate": "2020-06-25T15:42:25Z", "message": "fix: query w/ scoped all columns, join and where clause\n\nhttps://github.com/confluentinc/ksql/issues/5503\n\nThis fixes a regression introduced in 0.10.\n\nThe implications of this are not that it crashes the command runner thread, as the original ticket states. Instead, the implications are that queries a users could previously run will now fail. Existing running queries will not be affected.\n\nAffected queries will be any using combining:\n\n* A join\n* with a projection using a scoped 'all columns', e.g. a A.*\n* with a where clause\n\ne.g.\n\n```\nSELECT A.*, B.Id\n   FROM A\n     JOIN B ON A.Id = B.userId\n   WHERE A.x < 10;\n```"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjM0MjM5", "url": "https://github.com/confluentinc/ksql/pull/5684#pullrequestreview-437634239", "createdAt": "2020-06-25T15:55:34Z", "commit": {"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOGpBJ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOGpBJ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2Mzc0MA==", "bodyText": "To understand the solution, first understand the logical model of the query:\nSource A            Source B\n   |                   |\n   --------Join---------\n             |\n       Where Filter\n             |\n       Final Projection\n\nThe final SELECT / projection node calls its parent to resolve any select stars.  In the case of A.* it passes A as the source name to expand when calling resolveSelectStart.\nThe parent WHERE filter uses the default impl of the resolveSelectStar method, which just looks for a parent node with a matching source name, if one is provided.\nA Join node does not have a source name, i.e. it's neither A or B, so the default resolveSelectStart was ignoring it.\nThe fix is to change the default method to include any parent node that has no source name, thereby including the parent join node.", "url": "https://github.com/confluentinc/ksql/pull/5684#discussion_r445663740", "createdAt": "2020-06-25T15:55:34Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/PlanNode.java", "diffHunk": "@@ -103,7 +103,9 @@ public DataSourceNode getLeftmostSourceNode() {\n       final Optional<SourceName> sourceName\n   ) {\n     return getSources().stream()\n-        .filter(s -> !sourceName.isPresent() || sourceName.equals(s.getSourceName()))\n+        .filter(s -> !sourceName.isPresent()\n+            || !s.getSourceName().isPresent()\n+            || sourceName.equals(s.getSourceName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5MzU3NzY4", "url": "https://github.com/confluentinc/ksql/pull/5684#pullrequestreview-439357768", "createdAt": "2020-06-29T17:31:51Z", "commit": {"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 258, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}