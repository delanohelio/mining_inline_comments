{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMTY1NzM4", "number": 6272, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0Njo1MVrOEmQjpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDoxNlrOEmQ57g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUyNjEyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0Njo1MVrOHWLxEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0Njo1MVrOHWLxEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyMzUwNw==", "bodyText": "Maybe \"Copy all of the password encrypted lines\"?", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493023507", "createdAt": "2020-09-22T20:46:51Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUyNzE4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0NzowOVrOHWLxtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0NzowOVrOHWLxtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyMzY3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The roles names are defined next to the encrypted password. These\n          \n          \n            \n            The role names are defined next to the encrypted password. These", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493023670", "createdAt": "2020-09-22T20:47:09Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUzMTMwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0ODoxMFrOHWL0FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0ODoxMFrOHWL0FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNDI3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n          \n          \n            \n            The `authentication.method` property indicates that ksqlDB authenticates users by using `BASIC`", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493024276", "createdAt": "2020-09-22T20:48:10Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUzMjI0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0ODozMVrOHWL0sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0ODozMVrOHWL0sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNDQzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n          \n          \n            \n            In this example, the `authentication.realm` config is set to `KsqlServer-Props`, which", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493024433", "createdAt": "2020-09-22T20:48:31Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUzNTc1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0OTozNlrOHWL27g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo0OTozNlrOHWL27g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNTAwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles\n          \n          \n            \n            For example, if you define `admin` and `developer` roles, ksqlDB allows access only to users that contain these roles", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493025006", "createdAt": "2020-09-22T20:49:36Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n+was defined in the previous section:\n+\n+```properties\n+authentication.realm=KsqlServer-Props\n+```\n+\n+The `authentication.roles` config defines a comma-separated list of user\n+roles with access to the ksqlDB server. To be authorized to use the ksqlDB Server,\n+an authenticated user must belong to at least one of these roles.\n+\n+For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTUzNzQ4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo1MDowNFrOHWL3-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo1MDowNFrOHWL3-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNTI3NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (see configuration for the password file under the `jaas_config.file` section).\n          \n          \n            \n            For more information, see the configuration for the password file in the `jaas_config.file` section.", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493025275", "createdAt": "2020-09-22T20:50:04Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n+was defined in the previous section:\n+\n+```properties\n+authentication.realm=KsqlServer-Props\n+```\n+\n+The `authentication.roles` config defines a comma-separated list of user\n+roles with access to the ksqlDB server. To be authorized to use the ksqlDB Server,\n+an authenticated user must belong to at least one of these roles.\n+\n+For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles\n+(see configuration for the password file under the `jaas_config.file` section).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTU0OTEwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo1Mzo0M1rOHWL_UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMDo1Mzo0M1rOHWL_UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAyNzE1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Note. You can authorize any role by setting the `authentication.roles` to `**`.\n          \n          \n            \n            !!! note\n          \n          \n            \n                You can authorize any role by setting the `authentication.roles` to `**`.", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493027153", "createdAt": "2020-09-22T20:53:43Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n+was defined in the previous section:\n+\n+```properties\n+authentication.realm=KsqlServer-Props\n+```\n+\n+The `authentication.roles` config defines a comma-separated list of user\n+roles with access to the ksqlDB server. To be authorized to use the ksqlDB Server,\n+an authenticated user must belong to at least one of these roles.\n+\n+For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles\n+(see configuration for the password file under the `jaas_config.file` section).\n+\n+```properties\n+authentication.roles=admin,developer\n+```\n+\n+Note. You can authorize any role by setting the `authentication.roles` to `**`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTU4MjYyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDowNVrOHWMUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDowNVrOHWMUew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMjU3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            user and password credentials found in the password file. But only `fred` and `dick` will\n          \n          \n            \n            user and password credentials found in the password file. But only `fred` and `dick`", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493032571", "createdAt": "2020-09-22T21:04:05Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n+was defined in the previous section:\n+\n+```properties\n+authentication.realm=KsqlServer-Props\n+```\n+\n+The `authentication.roles` config defines a comma-separated list of user\n+roles with access to the ksqlDB server. To be authorized to use the ksqlDB Server,\n+an authenticated user must belong to at least one of these roles.\n+\n+For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles\n+(see configuration for the password file under the `jaas_config.file` section).\n+\n+```properties\n+authentication.roles=admin,developer\n+```\n+\n+Note. You can authorize any role by setting the `authentication.roles` to `**`.\n+\n+###  Example\n+\n+Password file:\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+JAAS config file (`jaas_config.file`):\n+```java\n+KsqlServer-Props {\n+  org.eclipse.jetty.jaas.spi.PropertyFileLoginModule required\n+  file=\"/path/to/password-file\"\n+  debug=\"false\";\n+};\n+```\n+\n+ksqlDB settings:\n+```properties\n+authentication.method=BASIC\n+authentication.realm=KsqlServer-Props\n+authentication.roles=admin\n+```\n+\n+The ksqlDB server authenticates users `fred`, `harry`, `tom`, and `dick` based on the\n+user and password credentials found in the password file. But only `fred` and `dick` will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 175}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NTU4MzE4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/security.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDoxNlrOHWMU0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMTowNDoxNlrOHWMU0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzAzMjY1Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            be authorized to access the server because they're under the `admin` role.\n          \n          \n            \n            authorized to access the server because they're under the `admin` role.", "url": "https://github.com/confluentinc/ksql/pull/6272#discussion_r493032657", "createdAt": "2020-09-22T21:04:16Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/security.md", "diffHunk": "@@ -287,7 +248,86 @@ CRYPT:frd5btY/mvXo6\n ```\n \n Where each line of the output is the password encrypted using different\n-mechanisms, starting with plain text.\n+mechanisms, starting with plain text. Copy any of the password encrypted\n+lines onto the password file.\n+\n+The roles names are defined next to the encrypted password. These\n+are used by the `LoginModule` to map users to roles.\n+\n+Here's an example of the password file:\n+\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+### Configure the ksqlDB server settings\n+\n+Use the following settings in the `ksql-server.properties` file:\n+\n+```properties\n+authentication.method=BASIC\n+authentication.realm=<KsqlServer-Props-in-jaas_config.file>\n+authentication.roles=<user-role1>,<user-role2>,...\n+```\n+\n+The `authentication.method` specifies ksqlDB to authenticate users using `BASIC`\n+user and password credentials.\n+\n+The `authentication.realm` config must match a section within\n+`jaas_config.file`, which provides the login module for authentication.\n+\n+In this example, the `authentication.realm` config is set to the `KsqlServer-Props`, which\n+was defined in the previous section:\n+\n+```properties\n+authentication.realm=KsqlServer-Props\n+```\n+\n+The `authentication.roles` config defines a comma-separated list of user\n+roles with access to the ksqlDB server. To be authorized to use the ksqlDB Server,\n+an authenticated user must belong to at least one of these roles.\n+\n+For example, if you define `admin` and `developer` roles, ksqlDB will allow access to only users that contain these roles\n+(see configuration for the password file under the `jaas_config.file` section).\n+\n+```properties\n+authentication.roles=admin,developer\n+```\n+\n+Note. You can authorize any role by setting the `authentication.roles` to `**`.\n+\n+###  Example\n+\n+Password file:\n+```\n+fred: OBF:1w8t1tvf1w261w8v1w1c1tvn1w8x,user,admin\n+harry: changeme,user,developer\n+tom: MD5:164c88b302622e17050af52c89945d44,user\n+dick: CRYPT:adpexzg3FUZAk,admin,ksql-user\n+```\n+\n+JAAS config file (`jaas_config.file`):\n+```java\n+KsqlServer-Props {\n+  org.eclipse.jetty.jaas.spi.PropertyFileLoginModule required\n+  file=\"/path/to/password-file\"\n+  debug=\"false\";\n+};\n+```\n+\n+ksqlDB settings:\n+```properties\n+authentication.method=BASIC\n+authentication.realm=KsqlServer-Props\n+authentication.roles=admin\n+```\n+\n+The ksqlDB server authenticates users `fred`, `harry`, `tom`, and `dick` based on the\n+user and password credentials found in the password file. But only `fred` and `dick` will\n+be authorized to access the server because they're under the `admin` role.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e3d0c3f7b7c563145604a6fbf0100136de1c24"}, "originalPosition": 176}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2828, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}