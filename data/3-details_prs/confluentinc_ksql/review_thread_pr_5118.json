{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTIyNTQ5", "number": 5118, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTozNVrOD0mCpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzoxMTo1NFrOD0mTDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDc1ODEzOnYy", "diffSide": "LEFT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/ServerMetadataResourceTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowMTozNVrOGJmjzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODozNjoxMlrOGJqbOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMjEyNw==", "bodyText": "Why are these tests being removed?", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412722127", "createdAt": "2020-04-22T07:01:35Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/ServerMetadataResourceTest.java", "diffHunk": "@@ -110,26 +107,5 @@ public void shouldReturnServerClusterId() {\n         equalTo(ServerClusterId.of(KAFKA_CLUSTER_ID, KSQL_SERVICE_ID))\n     );\n   }\n-\n-\n-  @Test\n-  public void shouldGetKafkaClusterIdWithTimeout()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4NTQ2NA==", "bodyText": "Because these tests the memoized version of this class. But it's not memoized any more", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412785464", "createdAt": "2020-04-22T08:36:12Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/ServerMetadataResourceTest.java", "diffHunk": "@@ -110,26 +107,5 @@ public void shouldReturnServerClusterId() {\n         equalTo(ServerClusterId.of(KAFKA_CLUSTER_ID, KSQL_SERVICE_ID))\n     );\n   }\n-\n-\n-  @Test\n-  public void shouldGetKafkaClusterIdWithTimeout()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMjEyNw=="}, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDc3MDIyOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/KsqlExceptionMapperTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzowNDozOFrOGJmqjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODozODo1NVrOGJqi1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMzg1NQ==", "bodyText": "nit: rename this to OldApiExceptionMapperTest to be consistent with the rename of KsqlExceptionMapper to OldApiExceptionMapper.", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412723855", "createdAt": "2020-04-22T07:04:38Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/KsqlExceptionMapperTest.java", "diffHunk": "@@ -15,46 +15,49 @@\n \n package io.confluent.ksql.rest.server.resources;\n \n+import static io.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR;\n import static org.hamcrest.CoreMatchers.equalTo;\n import static org.hamcrest.CoreMatchers.instanceOf;\n import static org.hamcrest.CoreMatchers.sameInstance;\n import static org.hamcrest.MatcherAssert.assertThat;\n \n+import io.confluent.ksql.api.server.OldApiExceptionMapper;\n+import io.confluent.ksql.rest.EndpointResponse;\n import io.confluent.ksql.rest.Errors;\n import io.confluent.ksql.rest.entity.KsqlErrorMessage;\n import javax.ws.rs.WebApplicationException;\n-import javax.ws.rs.core.Response;\n import org.junit.Test;\n \n public class KsqlExceptionMapperTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4NzQxNA==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412787414", "createdAt": "2020-04-22T08:38:55Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/resources/KsqlExceptionMapperTest.java", "diffHunk": "@@ -15,46 +15,49 @@\n \n package io.confluent.ksql.rest.server.resources;\n \n+import static io.netty.handler.codec.http.HttpResponseStatus.INTERNAL_SERVER_ERROR;\n import static org.hamcrest.CoreMatchers.equalTo;\n import static org.hamcrest.CoreMatchers.instanceOf;\n import static org.hamcrest.CoreMatchers.sameInstance;\n import static org.hamcrest.MatcherAssert.assertThat;\n \n+import io.confluent.ksql.api.server.OldApiExceptionMapper;\n+import io.confluent.ksql.rest.EndpointResponse;\n import io.confluent.ksql.rest.Errors;\n import io.confluent.ksql.rest.entity.KsqlErrorMessage;\n import javax.ws.rs.WebApplicationException;\n-import javax.ws.rs.core.Response;\n import org.junit.Test;\n \n public class KsqlExceptionMapperTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyMzg1NQ=="}, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NDgwMDEzOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/EndpointResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzoxMTo1NFrOGJm7VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwODozOTowMFrOGJqjFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyODE0OQ==", "bodyText": "statusMessage is unused.", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412728149", "createdAt": "2020-04-22T07:11:54Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/EndpointResponse.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class EndpointResponse {\n+\n+  private final Map<String, String> headers;\n+  private final int status;\n+  private final Object entity;\n+\n+  private EndpointResponse(final Map<String, String> headers, final int status,\n+      final String statusMessage, final Object entity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjc4NzQ3OA==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5118#discussion_r412787478", "createdAt": "2020-04-22T08:39:00Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/EndpointResponse.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public final class EndpointResponse {\n+\n+  private final Map<String, String> headers;\n+  private final int status;\n+  private final Object entity;\n+\n+  private EndpointResponse(final Map<String, String> headers, final int status,\n+      final String statusMessage, final Object entity) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyODE0OQ=="}, "originalCommit": {"oid": "e50487c0a73a10d7a9229ea43fb62e4e9c78d114"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3603, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}