{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTA2MTg1", "number": 5684, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOEI0oBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOEI0oBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Njg2Mjc5OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/PlanNode.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOGpBJ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNTo1NTozNFrOGpBJ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2Mzc0MA==", "bodyText": "To understand the solution, first understand the logical model of the query:\nSource A            Source B\n   |                   |\n   --------Join---------\n             |\n       Where Filter\n             |\n       Final Projection\n\nThe final SELECT / projection node calls its parent to resolve any select stars.  In the case of A.* it passes A as the source name to expand when calling resolveSelectStart.\nThe parent WHERE filter uses the default impl of the resolveSelectStar method, which just looks for a parent node with a matching source name, if one is provided.\nA Join node does not have a source name, i.e. it's neither A or B, so the default resolveSelectStart was ignoring it.\nThe fix is to change the default method to include any parent node that has no source name, thereby including the parent join node.", "url": "https://github.com/confluentinc/ksql/pull/5684#discussion_r445663740", "createdAt": "2020-06-25T15:55:34Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/planner/plan/PlanNode.java", "diffHunk": "@@ -103,7 +103,9 @@ public DataSourceNode getLeftmostSourceNode() {\n       final Optional<SourceName> sourceName\n   ) {\n     return getSources().stream()\n-        .filter(s -> !sourceName.isPresent() || sourceName.equals(s.getSourceName()))\n+        .filter(s -> !sourceName.isPresent()\n+            || !s.getSourceName().isPresent()\n+            || sourceName.equals(s.getSourceName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ebbf58e261460e18d0e7bc139078bdcf9eb49c"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3217, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}