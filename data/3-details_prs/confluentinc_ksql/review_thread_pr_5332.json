{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MjI1MjY1", "number": 5332, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzowNDowNFrOD7U6AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo0OToxN1rOD7oliA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTM1MTA0OnYy", "diffSide": "RIGHT", "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/DataGen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzowNDowNFrOGTlRdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzowNDowNFrOGTlRdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE4NjgwNw==", "bodyText": "A note: The config is already weird in that it uses both snake case and camel case for arg names :(\nSo I had to choose one. I chose camel case because more properties seem to use that than snake case.", "url": "https://github.com/confluentinc/ksql/pull/5332#discussion_r423186807", "createdAt": "2020-05-11T17:04:04Z", "author": {"login": "purplefox"}, "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/DataGen.java", "diffHunk": "@@ -229,7 +233,7 @@ private static void usage() {\n               .put(\"value-format\", (builder, arg) -> builder.valueFormat = parseFormat(arg))\n               // \"format\" is maintained for backwards compatibility, but should be removed later.\n               .put(\"format\", (builder, argVal) -> builder.valueFormat = parseFormat(argVal))\n-              .put(\"value_delimiter\",\n+              .put(\"valueDelimiter\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e4ba59ae77306f54fc61165c64b6a389a54db74"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNjI4MDk3OnYy", "diffSide": "RIGHT", "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMTo0NTozM1rOGTuhmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMTowNzo1MlrOGUBh3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzODM5NA==", "bodyText": "might want to check valueFormat is delimited before setting this, and throw an error if its not.", "url": "https://github.com/confluentinc/ksql/pull/5332#discussion_r423338394", "createdAt": "2020-05-11T21:45:33Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "diffHunk": "@@ -50,8 +54,13 @@ static DataGenProducer getProducer(\n     final SerializerFactory<Struct> keySerializerFactory =\n         keySerializerFactory(keyFormat, ksqlConfig, srClient);\n \n+    final Map<String, String> formatInfoProperties = new HashMap<>();\n+    if (valueDelimiter != null) {\n+      formatInfoProperties.put(DelimitedFormat.DELIMITER, valueDelimiter.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e4ba59ae77306f54fc61165c64b6a389a54db74"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzY0OTc1OA==", "bodyText": "ack, done", "url": "https://github.com/confluentinc/ksql/pull/5332#discussion_r423649758", "createdAt": "2020-05-12T11:07:52Z", "author": {"login": "purplefox"}, "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "diffHunk": "@@ -50,8 +54,13 @@ static DataGenProducer getProducer(\n     final SerializerFactory<Struct> keySerializerFactory =\n         keySerializerFactory(keyFormat, ksqlConfig, srClient);\n \n+    final Map<String, String> formatInfoProperties = new HashMap<>();\n+    if (valueDelimiter != null) {\n+      formatInfoProperties.put(DelimitedFormat.DELIMITER, valueDelimiter.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzMzODM5NA=="}, "originalCommit": {"oid": "3e4ba59ae77306f54fc61165c64b6a389a54db74"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODU3NTQ0OnYy", "diffSide": "RIGHT", "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMjo0OToxN1rOGUE7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjoxMDo1NFrOGUOPaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwNTUwNQ==", "bodyText": "nite: consider moving this into the if block below that already checks valueDelimiter != null", "url": "https://github.com/confluentinc/ksql/pull/5332#discussion_r423705505", "createdAt": "2020-05-12T12:49:17Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "diffHunk": "@@ -50,8 +54,18 @@ static DataGenProducer getProducer(\n     final SerializerFactory<Struct> keySerializerFactory =\n         keySerializerFactory(keyFormat, ksqlConfig, srClient);\n \n+    if (valueDelimiter != null && !(valueFormat instanceof DelimitedFormat)) {\n+      throw new IllegalArgumentException(\n+          \"valueDelimiter can only be specified with delimited format\");\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81c36b19a86bb9cf1e6e720ef7f7aeac750a789d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1ODAyNw==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5332#discussion_r423858027", "createdAt": "2020-05-12T16:10:54Z", "author": {"login": "purplefox"}, "path": "ksqldb-examples/src/main/java/io/confluent/ksql/datagen/ProducerFactory.java", "diffHunk": "@@ -50,8 +54,18 @@ static DataGenProducer getProducer(\n     final SerializerFactory<Struct> keySerializerFactory =\n         keySerializerFactory(keyFormat, ksqlConfig, srClient);\n \n+    if (valueDelimiter != null && !(valueFormat instanceof DelimitedFormat)) {\n+      throw new IllegalArgumentException(\n+          \"valueDelimiter can only be specified with delimited format\");\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzcwNTUwNQ=="}, "originalCommit": {"oid": "81c36b19a86bb9cf1e6e720ef7f7aeac750a789d"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3394, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}