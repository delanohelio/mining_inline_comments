{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyOTMyMjg2", "number": 5756, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDo1Nzo0NlrOEKqLPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDo1Nzo0NlrOEKqLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjEyMjIwOnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/schema/ksql/inference/SchemaRegisterInjector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMDo1Nzo0NlrOGr1IvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQyMTozNzo0OFrOGr2LYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYxMjU0MA==", "bodyText": "Just to make sure, in which case to we want to overwrite existing schemas?", "url": "https://github.com/confluentinc/ksql/pull/5756#discussion_r448612540", "createdAt": "2020-07-01T20:57:46Z", "author": {"login": "vpapavas"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/schema/ksql/inference/SchemaRegisterInjector.java", "diffHunk": "@@ -96,7 +99,8 @@ private void registerForCreateAs(final ConfiguredStatement<? extends CreateAsSel\n         queryMetadata.getResultTopic().getKafkaTopicName(),\n         queryMetadata.getResultTopic().getValueFormat().getFormatInfo(),\n         cas.getConfig(),\n-        cas.getStatementText()\n+        cas.getStatementText(),\n+        true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b682d6c13d84a3fd231367fba707f22e11f39ef"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYyOTYwMw==", "bodyText": "we want to overwrite existing schemas in the case of CREATE * AS SELECT", "url": "https://github.com/confluentinc/ksql/pull/5756#discussion_r448629603", "createdAt": "2020-07-01T21:37:48Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/schema/ksql/inference/SchemaRegisterInjector.java", "diffHunk": "@@ -96,7 +99,8 @@ private void registerForCreateAs(final ConfiguredStatement<? extends CreateAsSel\n         queryMetadata.getResultTopic().getKafkaTopicName(),\n         queryMetadata.getResultTopic().getValueFormat().getFormatInfo(),\n         cas.getConfig(),\n-        cas.getStatementText()\n+        cas.getStatementText(),\n+        true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODYxMjU0MA=="}, "originalCommit": {"oid": "1b682d6c13d84a3fd231367fba707f22e11f39ef"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3263, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}