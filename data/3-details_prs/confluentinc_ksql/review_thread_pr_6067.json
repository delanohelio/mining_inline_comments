{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMjE4NjYz", "number": 6067, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMjowN1rOEasirg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0MzoxMVrOEat26Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDI4MjA2OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/WarningEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMjowN1rOHESRWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMjowN1rOHESRWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1NTcwNw==", "bodyText": "I think you mean WarningEntity here", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474255707", "createdAt": "2020-08-20T20:32:07Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/WarningEntity.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.errorprone.annotations.Immutable;\n+\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@Immutable\n+public class WarningEntity extends KsqlEntity {\n+  private final String message;\n+\n+  @JsonCreator\n+  public WarningEntity(\n+       @JsonProperty(\"statementText\") final String statementText,\n+       @JsonProperty(\"message\") final String message\n+  ) {\n+    super(statementText);\n+    this.message = Objects.requireNonNull(message, \"message\");\n+  }\n+\n+  public String getMessage() {\n+    return message;\n+  }\n+\n+  @Override\n+  public boolean equals(final Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    final WarningEntity that = (WarningEntity) o;\n+    return Objects.equals(message, that.message);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(message);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"ErrorEntity{\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDMwNzk3OnYy", "diffSide": "RIGHT", "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/tree/DropConnector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDo0MDoyMlrOHEShag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTowMzo0NFrOHETOww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1OTgxOA==", "bodyText": "Is there a reason why we're switching to using this toStringHelper function now? There seems to be a mix of using this method vs defining out manually what the string representation looks like for different AstNodes.", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474259818", "createdAt": "2020-08-20T20:40:22Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/tree/DropConnector.java", "diffHunk": "@@ -41,18 +53,19 @@ public boolean equals(final Object o) {\n       return false;\n     }\n     final DropConnector that = (DropConnector) o;\n-    return Objects.equals(connectorName, that.connectorName);\n+    return Objects.equals(connectorName, that.connectorName) && ifExists == that.ifExists;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(connectorName);\n+    return Objects.hash(ifExists, connectorName);\n   }\n \n   @Override\n   public String toString() {\n-    return \"DropConnector{\"\n-        + \"connectorName='\" + connectorName + '\\''\n-        + '}';\n+    return toStringHelper(this)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3MTQyNw==", "bodyText": "Not particularly, just thought it looked neater especially now that there is more than one field.", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474271427", "createdAt": "2020-08-20T21:03:44Z", "author": {"login": "jzaralim"}, "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/tree/DropConnector.java", "diffHunk": "@@ -41,18 +53,19 @@ public boolean equals(final Object o) {\n       return false;\n     }\n     final DropConnector that = (DropConnector) o;\n-    return Objects.equals(connectorName, that.connectorName);\n+    return Objects.equals(connectorName, that.connectorName) && ifExists == that.ifExists;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(connectorName);\n+    return Objects.hash(ifExists, connectorName);\n   }\n \n   @Override\n   public String toString() {\n-    return \"DropConnector{\"\n-        + \"connectorName='\" + connectorName + '\\''\n-        + '}';\n+    return toStringHelper(this)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1OTgxOA=="}, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDQ5NzY5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/DropConnectorExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0MzoxMVrOHEUUTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo0MzoxMVrOHEUUTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4OTIyOA==", "bodyText": "You may want to use HttpStatus.SC_NOT_FOUND instead of just 404.", "url": "https://github.com/confluentinc/ksql/pull/6067#discussion_r474289228", "createdAt": "2020-08-20T21:43:11Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/DropConnectorExecutor.java", "diffHunk": "@@ -37,11 +38,17 @@ private DropConnectorExecutor() { }\n       final ServiceContext serviceContext\n   ) {\n     final String connectorName = statement.getStatement().getConnectorName();\n+    final boolean ifExists = statement.getStatement().getIfExists();\n     final ConnectResponse<String> response =\n         serviceContext.getConnectClient().delete(connectorName);\n \n     if (response.error().isPresent()) {\n-      return Optional.of(new ErrorEntity(statement.getStatementText(), response.error().get()));\n+      if (ifExists && response.httpCode() == 404) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4922c6a1742e2a268795074a13540c1ffb9d980a"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2920, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}