{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NDc4MzIx", "number": 5879, "title": "fix: create the metastore backups directory if it does not exist", "bodyText": "Description\nCreates the KSQL metastore backups directory if it does not exist. It also checks the existing directory is readable and writeable.\nTesting done\nUnit tests\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-07-24T20:33:02Z", "url": "https://github.com/confluentinc/ksql/pull/5879", "merged": true, "mergeCommit": {"oid": "d77d8b7cadc8bdbf412cd58b0db82ff89a1b5045"}, "closed": true, "closedAt": "2020-07-24T21:58:48Z", "author": {"login": "spena"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4KME8gH2gAyNDU2NDc4MzIxOmM5ZDVlZDc5MmUxNjJmZGVhY2QwNDc0OTlkZmU4ZDdiNjQzYWJhZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4KRQ-gFqTQ1NTE3MTM1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c9d5ed792e162fdeacd047499dfe8d7b643abafa", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/c9d5ed792e162fdeacd047499dfe8d7b643abafa", "committedDate": "2020-07-24T20:38:05Z", "message": "fix: create the metastore backups directory if it does not exist"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9d54734a6827bf92e54e82697463128dcd22d48", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/e9d54734a6827bf92e54e82697463128dcd22d48", "committedDate": "2020-07-24T20:31:52Z", "message": "fix: create the metastore backups directory if it does not exist"}, "afterCommit": {"oid": "c9d5ed792e162fdeacd047499dfe8d7b643abafa", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/c9d5ed792e162fdeacd047499dfe8d7b643abafa", "committedDate": "2020-07-24T20:38:05Z", "message": "fix: create the metastore backups directory if it does not exist"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MTcxMzU5", "url": "https://github.com/confluentinc/ksql/pull/5879#pullrequestreview-455171359", "createdAt": "2020-07-24T20:37:35Z", "commit": {"oid": "e9d54734a6827bf92e54e82697463128dcd22d48"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDozNzozNVrOG29CjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMDo0MToxOVrOG29I8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NjM2NQ==", "bodyText": "nit: can we de-dup this code from enforceStreamStateDirAvailability() in KsqlServerMain? Not required if it's annoying to de-dup (especially since we're trying to keep this patch small in order to cherry-pick) but it's weird to me that we have the same code in two places.", "url": "https://github.com/confluentinc/ksql/pull/5879#discussion_r460276365", "createdAt": "2020-07-24T20:37:35Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -222,4 +225,50 @@ private BackupReplayFile newReplayFile() {\n         ? Optional.of(new BackupReplayFile(latestBakFile))\n         : Optional.empty();\n   }\n+\n+  private void ensureDirectoryExists(final File backupsDir) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9d54734a6827bf92e54e82697463128dcd22d48"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3NzU1Ng==", "bodyText": "Does it make sense to explicitly set permissions here? I see we don't do that for the Kafka Streams state directory. I'm in favor of consistency unless there's a good reason to deviate.", "url": "https://github.com/confluentinc/ksql/pull/5879#discussion_r460277556", "createdAt": "2020-07-24T20:40:22Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -222,4 +222,50 @@ private BackupReplayFile newReplayFile() {\n         ? Optional.of(new BackupReplayFile(latestBakFile))\n         : Optional.empty();\n   }\n+\n+  private void ensureDirectoryExists(final File backupsDir) {\n+    if (!backupsDir.exists()) {\n+      if (!backupsDir.mkdirs()) {\n+        throw new KsqlServerException(\"Couldn't create the backups directory: \"\n+            + backupsDir.getPath()\n+            + \"\\n Make sure the directory exists and is readable/writable for KSQL server \"\n+            + \"\\n or its parent directory is readable/writable by KSQL server\"\n+            + \"\\n or change it to a readable/writable directory by setting '\"\n+            + KsqlConfig.KSQL_METASTORE_BACKUP_LOCATION\n+            + \"' config in the properties file.\"\n+        );\n+      }\n+\n+      try {\n+        Files.setPosixFilePermissions(backupsDir.toPath(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d5ed792e162fdeacd047499dfe8d7b643abafa"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDI3ODAwMA==", "bodyText": "Why do we need execute permissions? I see we have a similar check for the Kafka Streams state directory so I assume there's good reason. Curious what it is.", "url": "https://github.com/confluentinc/ksql/pull/5879#discussion_r460278000", "createdAt": "2020-07-24T20:41:19Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -222,4 +222,50 @@ private BackupReplayFile newReplayFile() {\n         ? Optional.of(new BackupReplayFile(latestBakFile))\n         : Optional.empty();\n   }\n+\n+  private void ensureDirectoryExists(final File backupsDir) {\n+    if (!backupsDir.exists()) {\n+      if (!backupsDir.mkdirs()) {\n+        throw new KsqlServerException(\"Couldn't create the backups directory: \"\n+            + backupsDir.getPath()\n+            + \"\\n Make sure the directory exists and is readable/writable for KSQL server \"\n+            + \"\\n or its parent directory is readable/writable by KSQL server\"\n+            + \"\\n or change it to a readable/writable directory by setting '\"\n+            + KsqlConfig.KSQL_METASTORE_BACKUP_LOCATION\n+            + \"' config in the properties file.\"\n+        );\n+      }\n+\n+      try {\n+        Files.setPosixFilePermissions(backupsDir.toPath(),\n+            PosixFilePermissions.fromString(\"rwx------\"));\n+      } catch (final IOException e) {\n+        throw new KsqlServerException(String.format(\n+            \"Couldn't set POSIX permissions on the backups directory: %s. Error = %s\",\n+            backupsDir.getPath(), e.getMessage()));\n+      }\n+    }\n+\n+    if (!backupsDir.isDirectory()) {\n+      throw new KsqlServerException(backupsDir.getPath()\n+          + \" is not a directory.\"\n+          + \"\\n Make sure the directory exists and is readable/writable for KSQL server \"\n+          + \"\\n or its parent directory is readable/writable by KSQL server\"\n+          + \"\\n or change it to a readable/writable directory by setting '\"\n+          + KsqlConfig.KSQL_METASTORE_BACKUP_LOCATION\n+          + \"' config in the properties file.\"\n+      );\n+    }\n+\n+    if (!backupsDir.canWrite() || !backupsDir.canRead() || !backupsDir.canExecute()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9d5ed792e162fdeacd047499dfe8d7b643abafa"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4757, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}