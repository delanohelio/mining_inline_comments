{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NTY2MTE2", "number": 5680, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNTo0MFrOEIkC5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1MTo1MlrOEIkO_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDE0NjI4OnYy", "diffSide": "RIGHT", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNTo0MFrOGomklA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzozNTo0MFrOGomklA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIyODE4MA==", "bodyText": "Extra parens", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445228180", "createdAt": "2020-06-24T23:35:40Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "diffHunk": "@@ -61,28 +63,35 @@\n   private List<WindowedRow> findSession(\n       final ReadOnlySessionStore<Struct, GenericRow> store,\n       final Struct key,\n-      final Range<Instant> windowStart\n+      final Range<Instant> windowStart,\n+      final Range<Instant> windowEnd\n   ) {\n     try (KeyValueIterator<Windowed<Struct>, GenericRow> it = store.fetch(key)) {\n \n       final Builder<WindowedRow> builder = ImmutableList.builder();\n \n       while (it.hasNext()) {\n         final KeyValue<Windowed<Struct>, GenericRow> next = it.next();\n+        final Window wnd = next.key.window();\n \n-        if (windowStart.contains(next.key.window().startTime())) {\n+        if (!windowStart.contains(wnd.startTime())) {\n+          continue;\n+        }\n+\n+        if (!windowEnd.contains((wnd.endTime()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bfdd0c36a80e4697e7a68caba186d7107958c30"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDE3NzI2OnYy", "diffSide": "RIGHT", "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1MTo1MlrOGom3IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxMDozNzo1NVrOGo1E6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzMjkyOA==", "bodyText": "Just for my own knowledge, why don't we fetch from the store using the same bounds as in KsMaterializedWindowTable.java.  Is it because the window sizes are not uniform in size and therefore we don't know exactly where to stop if all we know is the window start range?  If they provide a window end range now, it seems like we could provide bounds to the store lookup (and could use Long.MAX_VALUE anyway).", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445232928", "createdAt": "2020-06-24T23:51:52Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "diffHunk": "@@ -61,28 +63,35 @@\n   private List<WindowedRow> findSession(\n       final ReadOnlySessionStore<Struct, GenericRow> store,\n       final Struct key,\n-      final Range<Instant> windowStart\n+      final Range<Instant> windowStart,\n+      final Range<Instant> windowEnd\n   ) {\n     try (KeyValueIterator<Windowed<Struct>, GenericRow> it = store.fetch(key)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bfdd0c36a80e4697e7a68caba186d7107958c30"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ2NTgzMw==", "bodyText": "The Streams API for session tables is different.  There is no fetch(key, lower, upper) method.", "url": "https://github.com/confluentinc/ksql/pull/5680#discussion_r445465833", "createdAt": "2020-06-25T10:37:55Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsMaterializedSessionTable.java", "diffHunk": "@@ -61,28 +63,35 @@\n   private List<WindowedRow> findSession(\n       final ReadOnlySessionStore<Struct, GenericRow> store,\n       final Struct key,\n-      final Range<Instant> windowStart\n+      final Range<Instant> windowStart,\n+      final Range<Instant> windowEnd\n   ) {\n     try (KeyValueIterator<Windowed<Struct>, GenericRow> it = store.fetch(key)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzMjkyOA=="}, "originalCommit": {"oid": "3bfdd0c36a80e4697e7a68caba186d7107958c30"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3215, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}