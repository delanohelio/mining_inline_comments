{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDE5MjAz", "number": 4728, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1NDozOFrODnkU7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1OToxNFrODnkbHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODE2MjM4OnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1NDozOFrOF1pPJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1NDozOFrOF1pPJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NDQ2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  @UdfParameter(description = \"The regex pattern.\") final String pattern,\n          \n          \n            \n                  @UdfParameter(description = \"The regex pattern\") final String pattern,\n          \n      \n    \n    \n  \n\nsuper nit \ud83d\ude02 to keep it consistent", "url": "https://github.com/confluentinc/ksql/pull/4728#discussion_r391794469", "createdAt": "2020-03-12T17:54:38Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import io.confluent.ksql.util.KsqlConstants;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+@UdfDescription(\n+    name = \"regexp_extract\",\n+    author = KsqlConstants.CONFLUENT_AUTHOR,\n+    description = \"extract the first subtring matched by a regex pattern\")\n+public class RegexpExtract {\n+  @Udf(description = \"Returns first substring of the input that matches the given regex pattern\")\n+  public String regexpExtract(\n+      @UdfParameter(description = \"The regex pattern.\") final String pattern,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1a29695263160302b2a499213afc45434a40b8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODE3MTUyOnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1NzoxMVrOF1pU8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMDo1OTowN1rOF1vGNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NTk1NQ==", "bodyText": "should we return null or \"\" - I think to be consistent with other UDFs null might be a better option here, and that also differentiates a result that couldn't find it with an empty result", "url": "https://github.com/confluentinc/ksql/pull/4728#discussion_r391795955", "createdAt": "2020-03-12T17:57:11Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import io.confluent.ksql.util.KsqlConstants;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+@UdfDescription(\n+    name = \"regexp_extract\",\n+    author = KsqlConstants.CONFLUENT_AUTHOR,\n+    description = \"extract the first subtring matched by a regex pattern\")\n+public class RegexpExtract {\n+  @Udf(description = \"Returns first substring of the input that matches the given regex pattern\")\n+  public String regexpExtract(\n+      @UdfParameter(description = \"The regex pattern.\") final String pattern,\n+      @UdfParameter(description = \"The input string to apply regex on\") final String input\n+  ) {\n+    if (pattern == null || input == null) {\n+      return null;\n+    }\n+    final Pattern p = Pattern.compile(pattern);\n+    final Matcher m = p.matcher(input);\n+    return m.find() ? m.group(0) : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1a29695263160302b2a499213afc45434a40b8"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5MDQ4NQ==", "bodyText": "sounds good", "url": "https://github.com/confluentinc/ksql/pull/4728#discussion_r391890485", "createdAt": "2020-03-12T20:59:07Z", "author": {"login": "stevenpyzhang"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import io.confluent.ksql.util.KsqlConstants;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+@UdfDescription(\n+    name = \"regexp_extract\",\n+    author = KsqlConstants.CONFLUENT_AUTHOR,\n+    description = \"extract the first subtring matched by a regex pattern\")\n+public class RegexpExtract {\n+  @Udf(description = \"Returns first substring of the input that matches the given regex pattern\")\n+  public String regexpExtract(\n+      @UdfParameter(description = \"The regex pattern.\") final String pattern,\n+      @UdfParameter(description = \"The input string to apply regex on\") final String input\n+  ) {\n+    if (pattern == null || input == null) {\n+      return null;\n+    }\n+    final Pattern p = Pattern.compile(pattern);\n+    final Matcher m = p.matcher(input);\n+    return m.find() ? m.group(0) : \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NTk1NQ=="}, "originalCommit": {"oid": "fd1a29695263160302b2a499213afc45434a40b8"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODE3MzQ2OnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1Nzo0N1rOF1pWSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1Nzo0N1rOF1pWSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NjI5Ng==", "bodyText": "nit: the above method should call this method with 0 as the group", "url": "https://github.com/confluentinc/ksql/pull/4728#discussion_r391796296", "createdAt": "2020-03-12T17:57:47Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/function/udf/string/RegexpExtract.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.function.udf.string;\n+\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n+import io.confluent.ksql.util.KsqlConstants;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n+@UdfDescription(\n+    name = \"regexp_extract\",\n+    author = KsqlConstants.CONFLUENT_AUTHOR,\n+    description = \"extract the first subtring matched by a regex pattern\")\n+public class RegexpExtract {\n+  @Udf(description = \"Returns first substring of the input that matches the given regex pattern\")\n+  public String regexpExtract(\n+      @UdfParameter(description = \"The regex pattern.\") final String pattern,\n+      @UdfParameter(description = \"The input string to apply regex on\") final String input\n+  ) {\n+    if (pattern == null || input == null) {\n+      return null;\n+    }\n+    final Pattern p = Pattern.compile(pattern);\n+    final Matcher m = p.matcher(input);\n+    return m.find() ? m.group(0) : \"\";\n+  }\n+\n+  @Udf(description = \"Returns the first substring of the \"\n+      + \"input that matches the regex pattern and the capturing group number specified\")\n+  public String regexpExtract(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1a29695263160302b2a499213afc45434a40b8"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyODE3ODIxOnYy", "diffSide": "RIGHT", "path": "ksql-functional-tests/src/test/resources/query-validation-tests/regex.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1OToxNFrOF1pZpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNzo1OToxNFrOF1pZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTc5NzE1OA==", "bodyText": "nit: add null tests to both of these cases", "url": "https://github.com/confluentinc/ksql/pull/4728#discussion_r391797158", "createdAt": "2020-03-12T17:59:14Z", "author": {"login": "agavra"}, "path": "ksql-functional-tests/src/test/resources/query-validation-tests/regex.json", "diffHunk": "@@ -0,0 +1,45 @@\n+{\n+  \"comments\": [\n+    \"Tests covering the use of the REGEXP_EXTRACT UDF.\"\n+  ],\n+  \"tests\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd1a29695263160302b2a499213afc45434a40b8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2051, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}