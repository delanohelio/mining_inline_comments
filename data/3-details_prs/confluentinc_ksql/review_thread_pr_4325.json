{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMzkzMzk5", "number": 4325, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo0MDowMFrODYWxXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTozODoyN1rODY6yig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2ODY1NTAwOnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/DefaultSchemaRegistryClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQwMDo0MDowMFrOFeK3QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxODo1Njo0MFrOFekDQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3OTU4NA==", "bodyText": "Maybe make this more informative? \"KSQL is not configured to use a schema registry. To enable it, please set ksql.schema.registry.url\"", "url": "https://github.com/confluentinc/ksql/pull/4325#discussion_r367179584", "createdAt": "2020-01-16T00:40:00Z", "author": {"login": "rodesai"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/DefaultSchemaRegistryClient.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.schema.registry;\n+\n+import io.confluent.kafka.schemaregistry.ParsedSchema;\n+import io.confluent.kafka.schemaregistry.client.SchemaMetadata;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.apache.kafka.common.config.ConfigException;\n+\n+/** \n+ * Implements the SchemaRegistryClient interface. Used as default when the Schema Registry URL isn't\n+ * specified in {@link io.confluent.ksql.util.KsqlConfig}\n+ */\n+public class DefaultSchemaRegistryClient implements SchemaRegistryClient {\n+\n+  private static final ConfigException CONFIG_EXCEPTION =\n+      new ConfigException(\"Schema Registry URL not set\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b71111eed4b580b364b842b64790d6e3ef29b540"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU5MjI1OQ==", "bodyText": "done", "url": "https://github.com/confluentinc/ksql/pull/4325#discussion_r367592259", "createdAt": "2020-01-16T18:56:40Z", "author": {"login": "stevenpyzhang"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/DefaultSchemaRegistryClient.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.schema.registry;\n+\n+import io.confluent.kafka.schemaregistry.ParsedSchema;\n+import io.confluent.kafka.schemaregistry.client.SchemaMetadata;\n+import io.confluent.kafka.schemaregistry.client.SchemaRegistryClient;\n+import io.confluent.kafka.schemaregistry.client.rest.entities.SchemaReference;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.apache.kafka.common.config.ConfigException;\n+\n+/** \n+ * Implements the SchemaRegistryClient interface. Used as default when the Schema Registry URL isn't\n+ * specified in {@link io.confluent.ksql.util.KsqlConfig}\n+ */\n+public class DefaultSchemaRegistryClient implements SchemaRegistryClient {\n+\n+  private static final ConfigException CONFIG_EXCEPTION =\n+      new ConfigException(\"Schema Registry URL not set\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzE3OTU4NA=="}, "originalCommit": {"oid": "b71111eed4b580b364b842b64790d6e3ef29b540"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDM2NDg5OnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/KsqlSchemaRegistryClientFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyMjo1NVrOFea--A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxODo1Njo0OVrOFekDgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0MzcwNA==", "bodyText": "Trim the value before comparing it. If the value is \"   \", then this check will think there is a URL specified. I recommend trimming the value once in the constructor when assigning the string to the schemaRegistryUrl so we don't have to trim it every time we use it.", "url": "https://github.com/confluentinc/ksql/pull/4325#discussion_r367443704", "createdAt": "2020-01-16T14:22:55Z", "author": {"login": "spena"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/KsqlSchemaRegistryClientFactory.java", "diffHunk": "@@ -98,6 +100,10 @@ static void configureSslFactory(final KsqlConfig config, final SslFactory sslFac\n   }\n \n   public SchemaRegistryClient get() {\n+    if (schemaRegistryUrl.equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b71111eed4b580b364b842b64790d6e3ef29b540"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU5MjMyMw==", "bodyText": "done", "url": "https://github.com/confluentinc/ksql/pull/4325#discussion_r367592323", "createdAt": "2020-01-16T18:56:49Z", "author": {"login": "stevenpyzhang"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/schema/registry/KsqlSchemaRegistryClientFactory.java", "diffHunk": "@@ -98,6 +100,10 @@ static void configureSslFactory(final KsqlConfig config, final SslFactory sslFac\n   }\n \n   public SchemaRegistryClient get() {\n+    if (schemaRegistryUrl.equals(\"\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0MzcwNA=="}, "originalCommit": {"oid": "b71111eed4b580b364b842b64790d6e3ef29b540"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NDU1NjI2OnYy", "diffSide": "RIGHT", "path": "config/ksql-server.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTozODoyN1rOFfDRCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxOTozODoyN1rOFfDRCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODEwMzY5MQ==", "bodyText": "This conflicts with / duplicates \n  \n    \n      ksql/config/ksql-server.properties\n    \n    \n         Line 68\n      in\n      86bf190\n    \n    \n    \n    \n\n        \n          \n           #ksql.schema.registry.url=? \n        \n    \n  \n\n and similarly for the production configs in the file above.", "url": "https://github.com/confluentinc/ksql/pull/4325#discussion_r368103691", "createdAt": "2020-01-17T19:38:27Z", "author": {"login": "vcrfxia"}, "path": "config/ksql-server.properties", "diffHunk": "@@ -58,6 +58,9 @@ ksql.logging.processing.stream.auto.create=true\n # The set of Kafka brokers to bootstrap Kafka cluster information from:\n bootstrap.servers=localhost:9092\n \n+# uncomment the below to point to a Schema Registry cluster\n+# ksql.schema.registry.url=http://localhost:8081", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ab7b1dd0cd77914946828ec499d06b6ae5f595"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2235, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}