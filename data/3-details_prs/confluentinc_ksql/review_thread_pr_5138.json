{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MzAxNDEw", "number": 5138, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1NToxOVrOD1kG1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1NzozOVrOD1kI7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDkyNjkzOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1NToxOVrOGLEHTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjoyMTo0M1rOGLfXAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDkyNQ==", "bodyText": "This PR contains breaking changes, such as this config rename from ssl.client.auth to ssl.client.authentication. Can you add a BREAKING CHANGE: description into the PR description and commit message (when merging this PR) with details?\nI think we should also add a check for the old config (ssl.client.auth) and fail startup if the old config is specified, in order to alert users to the breaking change, since the current behavior of silently ignoring the old config and using the default value of the new config does not seem acceptable.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414254925", "createdAt": "2020-04-24T02:55:19Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -90,31 +96,28 @@\n \n   public static final String AUTHENTICATION_ROLES_CONFIG = \"authentication.roles\";\n   public static final String AUTHENTICATION_ROLES_DOC = \"Valid roles to authenticate against.\";\n-  public static final List<String> AUTHENTICATION_ROLES_DEFAULT =\n-      Collections.unmodifiableList(Arrays.asList(\"*\"));\n+  public static final List<String> AUTHENTICATION_ROLES_DEFAULT = Collections.singletonList(\"*\");\n \n-  public static final String SSL_KEYSTORE_LOCATION_CONFIG = \"ssl.keystore.location\";\n-  protected static final String SSL_KEYSTORE_LOCATION_DOC =\n-      \"Location of the keystore file to use for SSL. This is required for HTTPS.\";\n   protected static final String SSL_KEYSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_KEYSTORE_PASSWORD_CONFIG = \"ssl.keystore.password\";\n-  protected static final String SSL_KEYSTORE_PASSWORD_DOC =\n-      \"The store password for the keystore file.\";\n   protected static final String SSL_KEYSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_TRUSTSTORE_LOCATION_CONFIG = \"ssl.truststore.location\";\n-  protected static final String SSL_TRUSTSTORE_LOCATION_DOC =\n-      \"Location of the trust store. Required only to authenticate HTTPS clients.\";\n   protected static final String SSL_TRUSTSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_TRUSTSTORE_PASSWORD_CONFIG = \"ssl.truststore.password\";\n-  protected static final String SSL_TRUSTSTORE_PASSWORD_DOC =\n-      \"The store password for the trust store file.\";\n   protected static final String SSL_TRUSTSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_CLIENT_AUTH_CONFIG = \"ssl.client.auth\";\n-  protected static final String SSL_CLIENT_AUTH_DOC =\n-      \"Whether or not to require the https client to authenticate via the server's trust store.\";\n-  protected static final boolean SSL_CLIENT_AUTH_DEFAULT = false;\n+  public static final String SSL_CLIENT_AUTHENTICATION_CONFIG = \"ssl.client.authentication\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNTI0MA==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414335240", "createdAt": "2020-04-24T06:46:47Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -90,31 +96,28 @@\n \n   public static final String AUTHENTICATION_ROLES_CONFIG = \"authentication.roles\";\n   public static final String AUTHENTICATION_ROLES_DOC = \"Valid roles to authenticate against.\";\n-  public static final List<String> AUTHENTICATION_ROLES_DEFAULT =\n-      Collections.unmodifiableList(Arrays.asList(\"*\"));\n+  public static final List<String> AUTHENTICATION_ROLES_DEFAULT = Collections.singletonList(\"*\");\n \n-  public static final String SSL_KEYSTORE_LOCATION_CONFIG = \"ssl.keystore.location\";\n-  protected static final String SSL_KEYSTORE_LOCATION_DOC =\n-      \"Location of the keystore file to use for SSL. This is required for HTTPS.\";\n   protected static final String SSL_KEYSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_KEYSTORE_PASSWORD_CONFIG = \"ssl.keystore.password\";\n-  protected static final String SSL_KEYSTORE_PASSWORD_DOC =\n-      \"The store password for the keystore file.\";\n   protected static final String SSL_KEYSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_TRUSTSTORE_LOCATION_CONFIG = \"ssl.truststore.location\";\n-  protected static final String SSL_TRUSTSTORE_LOCATION_DOC =\n-      \"Location of the trust store. Required only to authenticate HTTPS clients.\";\n   protected static final String SSL_TRUSTSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_TRUSTSTORE_PASSWORD_CONFIG = \"ssl.truststore.password\";\n-  protected static final String SSL_TRUSTSTORE_PASSWORD_DOC =\n-      \"The store password for the trust store file.\";\n   protected static final String SSL_TRUSTSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_CLIENT_AUTH_CONFIG = \"ssl.client.auth\";\n-  protected static final String SSL_CLIENT_AUTH_DOC =\n-      \"Whether or not to require the https client to authenticate via the server's trust store.\";\n-  protected static final boolean SSL_CLIENT_AUTH_DEFAULT = false;\n+  public static final String SSL_CLIENT_AUTHENTICATION_CONFIG = \"ssl.client.authentication\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDkyNQ=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1MDQ2Mw==", "bodyText": "What I've done is added code so we support the old deprecated client auth and warn in the logs if it's used. Basically the same check that rest-utils does here https://github.com/confluentinc/rest-utils/blob/master/core/src/main/java/io/confluent/rest/ApplicationServer.java#L206\nSo it shouldn't be.a breaking change.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414350463", "createdAt": "2020-04-24T07:17:10Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -90,31 +96,28 @@\n \n   public static final String AUTHENTICATION_ROLES_CONFIG = \"authentication.roles\";\n   public static final String AUTHENTICATION_ROLES_DOC = \"Valid roles to authenticate against.\";\n-  public static final List<String> AUTHENTICATION_ROLES_DEFAULT =\n-      Collections.unmodifiableList(Arrays.asList(\"*\"));\n+  public static final List<String> AUTHENTICATION_ROLES_DEFAULT = Collections.singletonList(\"*\");\n \n-  public static final String SSL_KEYSTORE_LOCATION_CONFIG = \"ssl.keystore.location\";\n-  protected static final String SSL_KEYSTORE_LOCATION_DOC =\n-      \"Location of the keystore file to use for SSL. This is required for HTTPS.\";\n   protected static final String SSL_KEYSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_KEYSTORE_PASSWORD_CONFIG = \"ssl.keystore.password\";\n-  protected static final String SSL_KEYSTORE_PASSWORD_DOC =\n-      \"The store password for the keystore file.\";\n   protected static final String SSL_KEYSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_TRUSTSTORE_LOCATION_CONFIG = \"ssl.truststore.location\";\n-  protected static final String SSL_TRUSTSTORE_LOCATION_DOC =\n-      \"Location of the trust store. Required only to authenticate HTTPS clients.\";\n   protected static final String SSL_TRUSTSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_TRUSTSTORE_PASSWORD_CONFIG = \"ssl.truststore.password\";\n-  protected static final String SSL_TRUSTSTORE_PASSWORD_DOC =\n-      \"The store password for the trust store file.\";\n   protected static final String SSL_TRUSTSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_CLIENT_AUTH_CONFIG = \"ssl.client.auth\";\n-  protected static final String SSL_CLIENT_AUTH_DOC =\n-      \"Whether or not to require the https client to authenticate via the server's trust store.\";\n-  protected static final boolean SSL_CLIENT_AUTH_DEFAULT = false;\n+  public static final String SSL_CLIENT_AUTHENTICATION_CONFIG = \"ssl.client.authentication\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDkyNQ=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcwMTMxMg==", "bodyText": "Sounds good, though we should update the docs to introduce the new config and say the old one is deprecated.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414701312", "createdAt": "2020-04-24T16:21:43Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestConfig.java", "diffHunk": "@@ -90,31 +96,28 @@\n \n   public static final String AUTHENTICATION_ROLES_CONFIG = \"authentication.roles\";\n   public static final String AUTHENTICATION_ROLES_DOC = \"Valid roles to authenticate against.\";\n-  public static final List<String> AUTHENTICATION_ROLES_DEFAULT =\n-      Collections.unmodifiableList(Arrays.asList(\"*\"));\n+  public static final List<String> AUTHENTICATION_ROLES_DEFAULT = Collections.singletonList(\"*\");\n \n-  public static final String SSL_KEYSTORE_LOCATION_CONFIG = \"ssl.keystore.location\";\n-  protected static final String SSL_KEYSTORE_LOCATION_DOC =\n-      \"Location of the keystore file to use for SSL. This is required for HTTPS.\";\n   protected static final String SSL_KEYSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_KEYSTORE_PASSWORD_CONFIG = \"ssl.keystore.password\";\n-  protected static final String SSL_KEYSTORE_PASSWORD_DOC =\n-      \"The store password for the keystore file.\";\n   protected static final String SSL_KEYSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_TRUSTSTORE_LOCATION_CONFIG = \"ssl.truststore.location\";\n-  protected static final String SSL_TRUSTSTORE_LOCATION_DOC =\n-      \"Location of the trust store. Required only to authenticate HTTPS clients.\";\n   protected static final String SSL_TRUSTSTORE_LOCATION_DEFAULT = \"\";\n-  public static final String SSL_TRUSTSTORE_PASSWORD_CONFIG = \"ssl.truststore.password\";\n-  protected static final String SSL_TRUSTSTORE_PASSWORD_DOC =\n-      \"The store password for the trust store file.\";\n   protected static final String SSL_TRUSTSTORE_PASSWORD_DEFAULT = \"\";\n \n-  public static final String SSL_CLIENT_AUTH_CONFIG = \"ssl.client.auth\";\n-  protected static final String SSL_CLIENT_AUTH_DOC =\n-      \"Whether or not to require the https client to authenticate via the server's trust store.\";\n-  protected static final boolean SSL_CLIENT_AUTH_DEFAULT = false;\n+  public static final String SSL_CLIENT_AUTHENTICATION_CONFIG = \"ssl.client.authentication\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NDkyNQ=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDkzMDQ3OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1Njo0M1rOGLEJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNjo0ODozMFrOGLJEBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTM5MA==", "bodyText": "Do we need a null check on keyStorePassword here (and on trustStorePassword below)? The old code had a null check that's been removed. Haven't looked into whether it's actually needed or not.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414255390", "createdAt": "2020-04-24T02:56:43Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -240,30 +243,32 @@ private static HttpServerOptions createHttpServerOptions(final ApiServerConfig a\n     if (tls) {\n       options.setUseAlpn(true).setSsl(true);\n \n-      final String keyStorePath = apiServerConfig.getString(ApiServerConfig.TLS_KEY_STORE_PATH);\n-      final String keyStorePassword = apiServerConfig\n-          .getString(ApiServerConfig.TLS_KEY_STORE_PASSWORD);\n+      final String keyStorePath = ksqlRestConfig\n+          .getString(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG);\n+      final Password keyStorePassword = ksqlRestConfig\n+          .getPassword(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG);\n       if (keyStorePath != null && !keyStorePath.isEmpty()) {\n         options.setKeyStoreOptions(\n-            new JksOptions().setPath(keyStorePath).setPassword(keyStorePassword));\n+            new JksOptions().setPath(keyStorePath).setPassword(keyStorePassword.value()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNjAwNw==", "bodyText": "I don't think it can be null as the default is \"\".", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414336007", "createdAt": "2020-04-24T06:48:30Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -240,30 +243,32 @@ private static HttpServerOptions createHttpServerOptions(final ApiServerConfig a\n     if (tls) {\n       options.setUseAlpn(true).setSsl(true);\n \n-      final String keyStorePath = apiServerConfig.getString(ApiServerConfig.TLS_KEY_STORE_PATH);\n-      final String keyStorePassword = apiServerConfig\n-          .getString(ApiServerConfig.TLS_KEY_STORE_PASSWORD);\n+      final String keyStorePath = ksqlRestConfig\n+          .getString(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG);\n+      final Password keyStorePassword = ksqlRestConfig\n+          .getPassword(SslConfigs.SSL_KEYSTORE_PASSWORD_CONFIG);\n       if (keyStorePath != null && !keyStorePath.isEmpty()) {\n         options.setKeyStoreOptions(\n-            new JksOptions().setPath(keyStorePath).setPassword(keyStorePassword));\n+            new JksOptions().setPath(keyStorePath).setPassword(keyStorePassword.value()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTM5MA=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NDkzMjI5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMjo1NzozOVrOGLEKHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxNDoxOFrOGLJ2WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTY0Nw==", "bodyText": "nit: can we use KsqlRestConfig.SSL_KEYSTORE_LOCATION_CONFIG instead? And similarly for the other appearances of SslConfigs in this file, and in ListenersTest.java and TlsTest.java.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414255647", "createdAt": "2020-04-24T02:57:39Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -273,7 +278,8 @@ private static HttpServerOptions createHttpServerOptions(final ApiServerConfig a\n           throw new ConfigException(\"Invalid URI scheme should be http or https: \" + listenerName);\n         }\n         if (\"https\".equalsIgnoreCase(scheme)) {\n-          final String keyStoreLocation = config.getString(ApiServerConfig.TLS_KEY_STORE_PATH);\n+          final String keyStoreLocation = config\n+              .getString(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMzNjA1OQ==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414336059", "createdAt": "2020-04-24T06:48:37Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -273,7 +278,8 @@ private static HttpServerOptions createHttpServerOptions(final ApiServerConfig a\n           throw new ConfigException(\"Invalid URI scheme should be http or https: \" + listenerName);\n         }\n         if (\"https\".equalsIgnoreCase(scheme)) {\n-          final String keyStoreLocation = config.getString(ApiServerConfig.TLS_KEY_STORE_PATH);\n+          final String keyStoreLocation = config\n+              .getString(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTY0Nw=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0ODg4OA==", "bodyText": "We don't redefine these constants in KsqlRestConfig - as there doesn't seem to be any point - and we want them to be the same anyway.", "url": "https://github.com/confluentinc/ksql/pull/5138#discussion_r414348888", "createdAt": "2020-04-24T07:14:18Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/Server.java", "diffHunk": "@@ -273,7 +278,8 @@ private static HttpServerOptions createHttpServerOptions(final ApiServerConfig a\n           throw new ConfigException(\"Invalid URI scheme should be http or https: \" + listenerName);\n         }\n         if (\"https\".equalsIgnoreCase(scheme)) {\n-          final String keyStoreLocation = config.getString(ApiServerConfig.TLS_KEY_STORE_PATH);\n+          final String keyStoreLocation = config\n+              .getString(SslConfigs.SSL_KEYSTORE_LOCATION_CONFIG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI1NTY0Nw=="}, "originalCommit": {"oid": "13dc84c3ade5d71e18fa5372d4f922377f8ecb3c"}, "originalPosition": 130}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3626, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}