{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNzE1OTcz", "number": 6549, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMTo0OVrOEz1f-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo1MjozM1rOEz4Etw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg5MzcwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMTo0OVrOHrTelQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozOTo0NVrOHv8TMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2OTk0MQ==", "bodyText": "def newPomFile = pomFile.replaceFirst(parentVersionPattern, \"\\$1${config.cp_version}\\$2\")\n\nIs the \\$1 groovy syntax to reference matched groups?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515169941", "createdAt": "2020-10-30T15:11:49Z", "author": {"login": "andrewegel"}, "path": "Jenkinsfile", "diffHunk": "@@ -208,12 +210,22 @@ def job = {\n                                 sh \"docker pull ${config.dockerRegistry}${dockerRepo}:${config.cp_version}-latest\"\n                             }\n \n+                            // We need to replace the parent version range before we can run any maven commands\n+                            def pomFile = readFile('pom.xml')\n+                            def parentVersionPattern = Pattern.compile(/(.*<parent>.*<groupId>io.confluent\\S*<\\/groupId>.*<version>)\\[\\d+\\.\\d+\\.\\d+-\\d+\\,\\s+\\d+\\.\\d+\\.\\d+-\\d+\\)(<\\/version>.*<\\/parent>.*)/, Pattern.DOTALL)\n+                            // Groovy regex replaces the groups we didn't match, so we print the beginning of the file, our version, and the rest of the file.\n+                            def newPomFile = pomFile.replaceFirst(parentVersionPattern, \"\\$1${config.cp_version}\\$2\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAzMzA3NQ==", "bodyText": "yes", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r520033075", "createdAt": "2020-11-09T18:39:45Z", "author": {"login": "elismaga"}, "path": "Jenkinsfile", "diffHunk": "@@ -208,12 +210,22 @@ def job = {\n                                 sh \"docker pull ${config.dockerRegistry}${dockerRepo}:${config.cp_version}-latest\"\n                             }\n \n+                            // We need to replace the parent version range before we can run any maven commands\n+                            def pomFile = readFile('pom.xml')\n+                            def parentVersionPattern = Pattern.compile(/(.*<parent>.*<groupId>io.confluent\\S*<\\/groupId>.*<version>)\\[\\d+\\.\\d+\\.\\d+-\\d+\\,\\s+\\d+\\.\\d+\\.\\d+-\\d+\\)(<\\/version>.*<\\/parent>.*)/, Pattern.DOTALL)\n+                            // Groovy regex replaces the groups we didn't match, so we print the beginning of the file, our version, and the rest of the file.\n+                            def newPomFile = pomFile.replaceFirst(parentVersionPattern, \"\\$1${config.cp_version}\\$2\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2OTk0MQ=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg5ODMwOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzowMFrOHrThfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzowMFrOHrThfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3MDY4Ng==", "bodyText": "I think somewhere else in this Jenkinsfile we mark the root pom as an artifact, since we're re-writing it here, should we mark that as the artifact?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515170686", "createdAt": "2020-10-30T15:13:00Z", "author": {"login": "andrewegel"}, "path": "Jenkinsfile", "diffHunk": "@@ -208,12 +210,22 @@ def job = {\n                                 sh \"docker pull ${config.dockerRegistry}${dockerRepo}:${config.cp_version}-latest\"\n                             }\n \n+                            // We need to replace the parent version range before we can run any maven commands\n+                            def pomFile = readFile('pom.xml')\n+                            def parentVersionPattern = Pattern.compile(/(.*<parent>.*<groupId>io.confluent\\S*<\\/groupId>.*<version>)\\[\\d+\\.\\d+\\.\\d+-\\d+\\,\\s+\\d+\\.\\d+\\.\\d+-\\d+\\)(<\\/version>.*<\\/parent>.*)/, Pattern.DOTALL)\n+                            // Groovy regex replaces the groups we didn't match, so we print the beginning of the file, our version, and the rest of the file.\n+                            def newPomFile = pomFile.replaceFirst(parentVersionPattern, \"\\$1${config.cp_version}\\$2\")\n+                            writeFile(file: 'pom.xml', text: newPomFile)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzkwMDc3OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzozOVrOHrTjMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNToxMzozOVrOHrTjMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE3MTEyMw==", "bodyText": "I wonder if we should be factoring this out into function jenkins-common?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515171123", "createdAt": "2020-10-30T15:13:39Z", "author": {"login": "andrewegel"}, "path": "Jenkinsfile", "diffHunk": "@@ -208,12 +210,22 @@ def job = {\n                                 sh \"docker pull ${config.dockerRegistry}${dockerRepo}:${config.cp_version}-latest\"\n                             }\n \n+                            // We need to replace the parent version range before we can run any maven commands\n+                            def pomFile = readFile('pom.xml')\n+                            def parentVersionPattern = Pattern.compile(/(.*<parent>.*<groupId>io.confluent\\S*<\\/groupId>.*<version>)\\[\\d+\\.\\d+\\.\\d+-\\d+\\,\\s+\\d+\\.\\d+\\.\\d+-\\d+\\)(<\\/version>.*<\\/parent>.*)/, Pattern.DOTALL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyODMxNTQzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo1MjozM1rOHrXnlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxODozMDoxOVrOIOid1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg==", "bodyText": "Hey @elismaga (and the rest of the tools team since Eli is OOO), this version bump is a problem for us since the previous version 6.1.0-beta201006024150 has been qualified for our release, but not this new one. Do we have options to release with the old version?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515237782", "createdAt": "2020-10-30T16:52:33Z", "author": {"login": "vcrfxia"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0OTg5Ng==", "bodyText": "Instead of updating the release pipeline to work with nano-versioning (which the PR description suggests requires this version bump), would it work to temporarily back out the nano-versioning changes from the branch we're building against in order to keep the older dependency version?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515249896", "createdAt": "2020-10-30T17:11:48Z", "author": {"login": "vcrfxia"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1MjA1MA==", "bodyText": "(To clarify: I think it makes sense to merge this PR in preparation for future ksqlDB releases, but I'd also like to explore/understand alternatives for the release that's currently in flight since needing to qualify a new beta dependency would delay the release fairly substantially. Ideally we'd find a workaround to accommodate the old dependency for the current release, then merge this PR including the version bump for future releases.)", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515252050", "createdAt": "2020-10-30T17:14:43Z", "author": {"login": "vcrfxia"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1NDU4Mg==", "bodyText": "Stepping back a bit: I don't understand why this version bump is needed in light of the regex replace below that replaces the nanoversion in the pom with the CP version. Is the version bump only needed so that the new properties (for ksql and schema registry versions) are found? If so, can we remove those and not bump the version for now, then bump the version and add those back in in a subsequent PR?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515254582", "createdAt": "2020-10-30T17:18:13Z", "author": {"login": "vcrfxia"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMxNjExNA==", "bodyText": "I'm not familiar with the ksql release process so apologies in advance, but would it be a possibility if we instead cherrypick the nanoversioning rollout changes on top of the old 6.1.0-beta201006024150? Or would qualifying that take just as long as qualifying the newer version?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515316114", "createdAt": "2020-10-30T19:01:25Z", "author": {"login": "gracechensd"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTMyNTMzNA==", "bodyText": "6.1.0-beta201006024150 is a beta packaging build produced by the tools team. Someone from your team can probably comment more authoritatively than I can on how difficult it is to cherry-pick and reproduce beta artifacts?", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515325334", "createdAt": "2020-10-30T19:22:25Z", "author": {"login": "vcrfxia"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM3NTY4Mw==", "bodyText": "I do not image that would be easy to cherrypick nanoversion change to the old beta version, I guess we could try just add the regex part and removed the version bump part.", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r515375683", "createdAt": "2020-10-30T20:47:18Z", "author": {"login": "xli1996"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNTY2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build\n          \n          \n            \n                cp_version = \"6.2.0-beta201122193350\"  // must be a beta version from the packaging build", "url": "https://github.com/confluentinc/ksql/pull/6549#discussion_r552115669", "createdAt": "2021-01-05T18:30:19Z", "author": {"login": "rodesai"}, "path": "Jenkinsfile", "diffHunk": "@@ -1,8 +1,10 @@\n+import java.util.regex.Pattern\n+\n def baseConfig = {\n     owner = 'ksql'\n     slackChannel = '#ksql-alerts'\n     ksql_db_version = \"0.14.0\"  // next version to be released\n-    cp_version = \"6.1.0-beta201006024150\"  // must be a beta version from the packaging build\n+    cp_version = \"6.1.0-beta201020194508\"  // must be a beta version from the packaging build", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzNzc4Mg=="}, "originalCommit": {"oid": "64d36a0f284c83efc0ee47778a179f67ff8164b0"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2600, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}