{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNzE3ODU2", "number": 6437, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTowNjo1NVrOEtvRcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTowNjo1NVrOEtvRcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2Mzk1ODg5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTowNjo1NVrOHhtN2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMDo0Nzo1NVrOHjPXCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNTg4MA==", "bodyText": "We could actually call this before the command is registered right? If something throws between generating the command id and enqueueing?", "url": "https://github.com/confluentinc/ksql/pull/6437#discussion_r505105880", "createdAt": "2020-10-15T01:06:55Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandStore.java", "diffHunk": "@@ -303,6 +303,21 @@ public void ensureConsumedPast(final long seqNum, final Duration timeout)\n     );\n   }\n \n+  @Override\n+  public void abortCommand(final CommandId commandId) {\n+    commandStatusMap.compute(\n+        commandId,\n+        (k, v) -> {\n+          if (v == null) {\n+            throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2707ca06155463f0ee8428cea0aae22a1f76be04"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxMzg2Nw==", "bodyText": "That's true, it is possible.\nOk, now I just log when something is being aborted, but throw no error either way.", "url": "https://github.com/confluentinc/ksql/pull/6437#discussion_r506713867", "createdAt": "2020-10-16T20:47:55Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandStore.java", "diffHunk": "@@ -303,6 +303,21 @@ public void ensureConsumedPast(final long seqNum, final Duration timeout)\n     );\n   }\n \n+  @Override\n+  public void abortCommand(final CommandId commandId) {\n+    commandStatusMap.compute(\n+        commandId,\n+        (k, v) -> {\n+          if (v == null) {\n+            throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTEwNTg4MA=="}, "originalCommit": {"oid": "2707ca06155463f0ee8428cea0aae22a1f76be04"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2706, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}