{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0Mjc0MTEy", "number": 6307, "title": "Refactor: remove `SerdeOption`", "bodyText": "Description\nStacked on top of #6302.\nFirst off....\nDON'T PANIC!\nThis PR is not a massive as it looks.. honest!\nSerdeOption and SerdeFeature serve pretty much the same function. Formats define what features they support using the SerdeFeature enum, i.e. it operates at the format level. Conversely, SerdeOption operates at the topic level. It holds the serde features required for both the key and value formats. It's just code bloat, in there for historical reasons.\nRemoving SerdeOptions now will clean up the code and remove confusion. Doing it later will be much much harder... i.e it'll never happen. So... biting that bullet hard...\nThis commit removes SerdeOption from the code base, replacing it use with direct use of SerdeFeature.\nChanges:\n\nRemoved SerdeOption enum and SerdeOptions class.\nRenamed EnabledSerdeFeatures -> SerdeFeatures.  This class is just a validated set of features. You can't build an instance with conflicting features, e.g. both WRAP_SINGLES and UNWRAPE_SINGLES.\nSplit the SerdeOptions attribute of DataSource into SerdeFeatures attributes of the KeyFormat and ValueFormat classes, which are attributes of the KsqlTopic class, which itself is an attribute of the DataSource.\n\n// Previously:\ndataSource->serdeOptions   <-- stored SerdeOptions for both key and value\n\n// Now:\ndataSource->ksqlTopic->keyFormat->features  <-- stores SerdeFeatures for the key\n                     ->valueFormat->features  <-- stores SerdeFeatures for the value\n\n\nC* statements simply construct the KsqlTopic with the serde features set on the key and value format.\nC*AS are slightly more complex. Previously the Analyser was constructing the KsqlTopic, and the Logical Plan was constructing the SerdeOption.  Now the Analsyser can't construct the KsqlTopic as the SerdeFeatures are unknown at this point.  Hence it creates a NewTopic, which the Logical Plan uses to build the KsqlTopic once its constructed the SerdeFeatures.\nSchemaKStream.into and SchemaKTable.into now just take the KsqlTopic, rather than lots of individual params.\nSerdeOptionsFactory, the class responsible for building the SerdeOptions has been renamed to SerdeFeaturesFactory and now has separate methods for building key and value features.\nPhysicalSchema no longer stores SerdeOptions, as the key and value PersistenceSchemas already track the SerdeFeatures.\nEach SerdeFeature now defines any other features it is not compatible with - making this more data driven.\nCommand Topic change:\n\nThe Formats type is used to serialize format information to the command topic. Previously, it stored the key and value FormatInfo and the SerdeOptions.  Now it stores key and value FormatInfo and key and value SerdeFeatures.  To enable backwards compatibility with older plans the factory method used by Jackson when deserializing the plans accepts both old and new attributes and converts the old into the new format.\nNew plans will be written with valueFeatures and keyFeatures, but old plans can continue to have options.  This is necessary to maintain backwards compatibility.\n\n\nQTT changes\n\nNot historic query plans need to change because of this change!\nHistoric query specs have been changed: places that stored the serde options have been changed to store the serde features.  This is fine, as its just the test data that's changing.\nValueFormat was being serialized as a value type, but now has a SerdeFeatures attribute, so the type now exposes the format name and properties of its inner FormatInfo manually. (So the JSON is clean).\nKeyFormat was being serialized with an inner formatInfo field. This was out of whack with ValueFormat, so this has been changed to follow the same pattern as ValueFormat.\nA few QTT changes have been updated to use the new layout.\n\n\n\nReviewing notes:\nA LOT of files needed to change for this work, but not much functionality. Focus your review on the functionality!\nTo make things easier, I've broken the PR down into the following commits:\n\n(ignore): c95f9c0: This is the commit for #6302, upon which this PR is stacked.\nProduction code: Main functionality changes\nTest code: Main functionality changes\nProduction code: Minor stuff, e.g. changes due to renames, switch SerdeOption to SerdeFeature, or other slight API changes - not interesting.\nTest code: Minor stuff\nQTT test changes\nHistorical Plans changes - definitely don't review all of this!  Take a look at how one or two files have changed to get an idea of the change if you want.\n\nTesting done\nusual\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-09-28T16:47:17Z", "url": "https://github.com/confluentinc/ksql/pull/6307", "merged": true, "mergeCommit": {"oid": "f97c9a64cf9386ab7467091d15c8aae94dc04ccc"}, "closed": true, "closedAt": "2020-09-29T14:28:27Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMVPB8gH2gAyNDk0Mjc0MTEyOmM5NWY5YzA2NThiYWRiNDJlZjE0NGQ1ZDI4MWEwZDRkYmFhNzczNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNpDPhAH2gAyNDk0Mjc0MTEyOmE5YjIzMmI2OGQyN2Q2OWM1YTNlNDY5ZGE2Y2M4Zjk1YTQyMWU1YzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c95f9c0658badb42ef144d5d281a0d4dbaa7734d", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/c95f9c0658badb42ef144d5d281a0d4dbaa7734d", "committedDate": "2020-09-25T12:48:45Z", "message": "chore: unwrap single keys on internal topics\n\nfixes: https://github.com/confluentinc/ksql/issues/6209\n\nEnsure internal changelog and repartition topics set `SerdeFeature.UNWRAP_SINGLES` if the key format supports both unwrapping and wrapping.  This is done to avoid ambiguity, which may cause compatibility issues once wrapped keys are supported."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/2b58bed63f1200aa2cfe3325c59f6411d437d003", "committedDate": "2020-09-28T16:11:29Z", "message": "refactor: remove `SerdeOption`\n\n`SerdeOption` and `SerdeFeature` serve pretty much the same function. Formats define what features they support using the `SerdeFeature` enum, i.e. it operates at the _format_ level. Conversely, `SerdeOption` operates at the _topic_ level. It holds the serde features required for both the key and value formats. It's just code bloat, in there for historical reasons.\n\nThis commit removes `SerdeOption` from the code base, replacing it with `SerdeFeature`.\n\nChanges:\n\n1. Removed `SerdeOption` enum and `SerdeOptions` class.\n1. Renamed `EnabledSerdeFeatures` -> `SerdeFeatures`.  This class is just a validated set of features. You can't build an instance with conflicting features, e.g. both `WRAP_SINGLES` and `UNWRAPE_SINGLES`.\n1. Split the `SerdeOptions` attribute of `DataSource` into `SerdeFeatures` attributes of the `KeyFormat` and `ValueFormat` classes, which are attributes of the `KsqlTopic` class, which itself is an attribute of the `DataSource`.\n  ```\n  // Previously:\n  dataSource->serdeOptions   <-- stored SerdeOptions for both key and value\n\n  // Now:\n  dataSource->ksqlTopic->keyFormat->features  <-- stores SerdeFeatures for the key\n                       ->valueFormat->features  <-- stores SerdeFeatures for the value\n  ```\n1. C* statements simply construct the `KsqlTopic` with the serde features set on the key and value format.\n1. C*AS are slightly more complex. Previously the `Analyser` was constructing the `KsqlTopic`, and the Logical Plan was constructing the `SerdeOption`.  Now the `Analsyser` can't construct the `KsqlTopic` as the `SerdeFeatures` are unknown at this point.  Hence it creates a `NewTopic`, which the Logical Plan uses to build the `KsqlTopic` once its constructed the `SerdeFeatures`.\n1. `SchemaKStream.into` and `SchemaKTable.into` now just take the `KsqlTopic`, rather than lots of individual params.\n1. `SerdeOptionsFactory`, the class responsible for building the `SerdeOptions` has been renamed to `SerdeFeaturesFactory` and now has separate methods for building key and value features.\n1. `PhysicalSchema` no longer stores `SerdeOptions`, as the key and value `PersistenceSchema`s already track the `SerdeFeatures`.\n1. Each `SerdeFeature` now defines any other features it is not compatible with - making this more data driven.\n1. *Command Topic change*:\n   1. The `Formats` type is used to serialize format information to the command topic. Previously, it stored the key and value `FormatInfo` and the `SerdeOptions`.  Now it stores key and value `FormatInfo` and key and value `SerdeFeatures`.  To enable backwards compatibility with older plans the factory method used by Jackson when deserializing the plans accepts both old and new attributes and converts the old into the new format.\n1. *QTT changes*\n   1. Not historic query plans need to change because change!\n   1. Historic query _specs_ have been changed: places that stored the serde options have been changed to store the serde features\n   1. `ValueFormat` was being serialized as a value type, but now has a `SerdeFeatures` attribute, so the type now exposes the format name and properties of its inner `FormatInfo` manually. (So the JSON is clean).\n   1. `KeyFormat` was being serialized with an inner `formatInfo` field. This was out of whack with `ValueFormat`, so this has been changed to follow the same pattern as `ValueFormat`.\n   1. A few QTT changes have been updated to use the new layout."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e30cdbb399a56da0723ef5dedcdfc261c44e2f3", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/0e30cdbb399a56da0723ef5dedcdfc261c44e2f3", "committedDate": "2020-09-28T16:12:01Z", "message": "test: major stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acabcfc0ba7c0b9973fc90638970b0e395793c58", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/acabcfc0ba7c0b9973fc90638970b0e395793c58", "committedDate": "2020-09-28T16:13:10Z", "message": "refactor: minor stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59d619fa938f73d211934f497b18a62adf364448", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/59d619fa938f73d211934f497b18a62adf364448", "committedDate": "2020-09-28T16:14:43Z", "message": "test: minor stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22848de7e0b7e54e162ee65d969580298e87da1b", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/22848de7e0b7e54e162ee65d969580298e87da1b", "committedDate": "2020-09-28T16:22:21Z", "message": "test: qtt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c2062a499e9c6e562ecc6caa8461a89b7c917c7", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/0c2062a499e9c6e562ecc6caa8461a89b7c917c7", "committedDate": "2020-09-28T16:27:14Z", "message": "test: historical plans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "869990f5ae096166916c3565ed0fc6cd95e48965", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/869990f5ae096166916c3565ed0fc6cd95e48965", "committedDate": "2020-09-28T16:38:02Z", "message": "chore: merge from master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzE4Nzg3", "url": "https://github.com/confluentinc/ksql/pull/6307#pullrequestreview-497718787", "createdAt": "2020-09-28T16:51:50Z", "commit": {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MTo1MFrOHZHOwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MTo1MFrOHZHOwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NDkxNA==", "bodyText": "Actually a rename from EnabledSerdeFeatures, but git's lost track.", "url": "https://github.com/confluentinc/ksql/pull/6307#discussion_r496094914", "createdAt": "2020-09-28T16:51:50Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeatures.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonValue;\n+import com.google.common.collect.ImmutableSet;\n+import com.google.common.collect.Sets;\n+import com.google.errorprone.annotations.Immutable;\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+import io.confluent.ksql.util.GrammaticalJoiner;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.Set;\n+\n+\n+/**\n+ * Validated set of enabled features\n+ *\n+ * <p>Known to not have conflicting features enabled\n+ */\n+@Immutable\n+public final class SerdeFeatures {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzE5MjI5", "url": "https://github.com/confluentinc/ksql/pull/6307#pullrequestreview-497719229", "createdAt": "2020-09-28T16:52:25Z", "commit": {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MjoyNlrOHZHQFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1MjoyNlrOHZHQFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5NTI1Mw==", "bodyText": "Actually a rename from SerdeOptionsFactory...", "url": "https://github.com/confluentinc/ksql/pull/6307#discussion_r496095253", "createdAt": "2020-09-28T16:52:26Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/serde/SerdeFeaturesFactory.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.google.common.collect.ImmutableSet;\n+import io.confluent.ksql.properties.with.CommonCreateConfigs;\n+import io.confluent.ksql.schema.ksql.LogicalSchema;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.confluent.ksql.util.KsqlException;\n+import java.util.Optional;\n+\n+public final class SerdeFeaturesFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b58bed63f1200aa2cfe3325c59f6411d437d003"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODAxMTMz", "url": "https://github.com/confluentinc/ksql/pull/6307#pullrequestreview-497801133", "createdAt": "2020-09-28T18:43:40Z", "commit": {"oid": "869990f5ae096166916c3565ed0fc6cd95e48965"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "397f8706d354e3f8102d6853f35d56b7d72b6593", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/397f8706d354e3f8102d6853f35d56b7d72b6593", "committedDate": "2020-09-29T13:22:17Z", "message": "chore: fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4b3f42339bb72346d88f1d3b44b33d8512656c1", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d4b3f42339bb72346d88f1d3b44b33d8512656c1", "committedDate": "2020-09-29T13:22:58Z", "message": "Merge branch 'master' into unwrapped_internals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9b232b68d27d69c5a3e469da6cc8f95a421e5c6", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/a9b232b68d27d69c5a3e469da6cc8f95a421e5c6", "committedDate": "2020-09-29T14:27:54Z", "message": "chore: vic's got nits"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4677, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}