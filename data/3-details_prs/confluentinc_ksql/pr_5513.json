{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjc2OTAz", "number": 5513, "title": "fix: update Concat UDF to new framework and make variadic", "bodyText": "Description\nAs per title. Tests and docs updated too.\nFixes #5078\nTesting done\nUnit tests, QTT, and manual testing all ok.", "createdAt": "2020-05-29T19:10:52Z", "url": "https://github.com/confluentinc/ksql/pull/5513", "merged": true, "mergeCommit": {"oid": "cab6a8672f97d86da75a3e5b1e70985146129640"}, "closed": true, "closedAt": "2020-06-02T21:08:00Z", "author": {"login": "blueedgenick"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmHP-FgH2gAyNDI1Mjc2OTAzOjAxOTQxZDY3Y2Y4YTM3ZmRhNjI4NGVkZjE4NTQwMzRkYzZhMjAxYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnbTaRAFqTQyMzA1MjIxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/01941d67cf8a37fda6284edf1854034dc6a201c6", "committedDate": "2020-05-29T19:01:59Z", "message": "update Concat UDF to new framework and make variadic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMjY0MTg5", "url": "https://github.com/confluentinc/ksql/pull/5513#pullrequestreview-421264189", "createdAt": "2020-05-29T20:23:18Z", "commit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMzoxOFrOGcq-cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMzoxOFrOGcq-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw==", "bodyText": "I know this isn't your original code, but does this limitation makes sense? I feel like CONCAT('foo') could reasonably return just 'foo'. I can imagine passing in an array of values and expect it to work (now that we support variadic) even for the cases where there's fewer than 2 (or even if the array is empty, so CONCAT([]) would return \"\")", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432717427", "createdAt": "2020-05-29T20:23:18Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxMzMxODM4", "url": "https://github.com/confluentinc/ksql/pull/5513#pullrequestreview-421331838", "createdAt": "2020-05-29T22:31:32Z", "commit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29e39d2614941ae1700c38a0323a7a4d3d7cefb6", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/29e39d2614941ae1700c38a0323a7a4d3d7cefb6", "committedDate": "2020-05-29T23:16:49Z", "message": "missed file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67af6f16a7ea8e8a3e07ca7a8a24d6ad035f518c", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/67af6f16a7ea8e8a3e07ca7a8a24d6ad035f518c", "committedDate": "2020-06-01T20:02:57Z", "message": "Almog's requested change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9992be2dad0ca948bee72a6592c2b4361e36b5", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/1a9992be2dad0ca948bee72a6592c2b4361e36b5", "committedDate": "2020-06-01T21:44:49Z", "message": "fix typo in test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda1a201ef353fc57e7a352fb1e95dbcd24ddaa9", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/dda1a201ef353fc57e7a352fb1e95dbcd24ddaa9", "committedDate": "2020-06-01T23:53:17Z", "message": "historical plan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2995385fa6333565c7af5a6cfaefb98c6b67651c", "author": {"user": {"login": "blueedgenick", "name": "Nick Dearden"}}, "url": "https://github.com/confluentinc/ksql/commit/2995385fa6333565c7af5a6cfaefb98c6b67651c", "committedDate": "2020-06-02T15:48:08Z", "message": "trivial doc change to trigger build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMDUyMjE1", "url": "https://github.com/confluentinc/ksql/pull/5513#pullrequestreview-423052215", "createdAt": "2020-06-02T20:57:46Z", "commit": {"oid": "2995385fa6333565c7af5a6cfaefb98c6b67651c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4693, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}