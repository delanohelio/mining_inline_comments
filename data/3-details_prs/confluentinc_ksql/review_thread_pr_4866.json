{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzAyNzMz", "number": 4866, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMjo1MVrODqeCIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowNjowNlrODqeHIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODU4ODUxOnYy", "diffSide": "RIGHT", "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMjo1MVrOF6PHAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMjo1MVrOF6PHAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwOTI4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `EXTRACTJSONFIELD(message, '$.log.cloud')` will return the STRING `gcp836Csd`.\n          \n          \n            \n            `EXTRACTJSONFIELD(message, '$.log.cloud')` returns the STRING `gcp836Csd`.", "url": "https://github.com/confluentinc/ksql/pull/4866#discussion_r396609281", "createdAt": "2020-03-23T17:02:51Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -263,27 +253,43 @@ CONCAT\n \r\n `CONCAT(col1, '_hello')`\r\n \r\n-Concatenate two strings.\r\n+Concatenate two or more strings.\r\n \r\n EXTRACTJSONFIELD\r\n ----------------\r\n \r\n `EXTRACTJSONFIELD(message, '$.log.cloud')`\r\n \r\n-Given a string column in JSON format, extract the field that matches.\r\n-For example EXTRACTJSONFIELD is necessary in the following JSON:\r\n+Given a STRING that contains JSON data, extract the value at the specified [JSONPath](https://jsonpath.com/).\r\n+\r\n+For example, given a STRING containing the following JSON:\r\n \r\n ```json\r\n-{\"foo\": \\\"{\\\"bar\\\": \\\"quux\\\"}\\\"}\r\n+{\r\n+   \"log\": {\r\n+      \"cloud\": \"gcp836Csd\",\r\n+      \"app\": \"ksProcessor\",\r\n+      \"instance\": 4\r\n+   }\r\n+}\r\n ```\r\n \r\n-In cases where the column is really an object but declared as a STRING,\r\n-you can use the `STRUCT` type, which is easier to work with. For example,\r\n-`STRUCT` works in the following case:\r\n+`EXTRACTJSONFIELD(message, '$.log.cloud')` will return the STRING `gcp836Csd`.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7059841c616b682eb384ccad03ebae22dc39ce22"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODU5MTk1OnYy", "diffSide": "RIGHT", "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMzo0MlrOF6PJTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowMzo0MlrOF6PJTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYwOTg2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                format, For example a JSON field within an Avro encoded message.\n          \n          \n            \n                format, for example, a JSON field within an Avro-encoded message.", "url": "https://github.com/confluentinc/ksql/pull/4866#discussion_r396609868", "createdAt": "2020-03-23T17:03:42Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -263,27 +253,43 @@ CONCAT\n \r\n `CONCAT(col1, '_hello')`\r\n \r\n-Concatenate two strings.\r\n+Concatenate two or more strings.\r\n \r\n EXTRACTJSONFIELD\r\n ----------------\r\n \r\n `EXTRACTJSONFIELD(message, '$.log.cloud')`\r\n \r\n-Given a string column in JSON format, extract the field that matches.\r\n-For example EXTRACTJSONFIELD is necessary in the following JSON:\r\n+Given a STRING that contains JSON data, extract the value at the specified [JSONPath](https://jsonpath.com/).\r\n+\r\n+For example, given a STRING containing the following JSON:\r\n \r\n ```json\r\n-{\"foo\": \\\"{\\\"bar\\\": \\\"quux\\\"}\\\"}\r\n+{\r\n+   \"log\": {\r\n+      \"cloud\": \"gcp836Csd\",\r\n+      \"app\": \"ksProcessor\",\r\n+      \"instance\": 4\r\n+   }\r\n+}\r\n ```\r\n \r\n-In cases where the column is really an object but declared as a STRING,\r\n-you can use the `STRUCT` type, which is easier to work with. For example,\r\n-`STRUCT` works in the following case:\r\n+`EXTRACTJSONFIELD(message, '$.log.cloud')` will return the STRING `gcp836Csd`.\r\n \r\n-```json\r\n-{\"foo\": {\"bar\": \"quux\"}}.\r\n-```\r\n+If the requested JSONPath does not exist, the function returns NULL.\r\n+\r\n+The result of EXTRACTJSONFIELD is always a STRING. Use `CAST` to convert the result to another\r\n+type. For example, `CAST(EXTRACTJSONFIELD(message, '$.log.instance') AS INT)` will extract the\r\n+instance number from the above JSON object as a INT.\r\n+\r\n+!!! note\r\n+    EXTRACTJSONFIELD is useful for extracting data from JSON where either the schema of the JSON\r\n+    data is not static, or where the JSON data is embedded in a row encoded using a different\r\n+    format, For example a JSON field within an Avro encoded message.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7059841c616b682eb384ccad03ebae22dc39ce22"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODU5ODIyOnYy", "diffSide": "RIGHT", "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowNToyMFrOF6PNbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowNToyMFrOF6PNbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMDkyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Where the whole row is encoded as JSON of a known schema or structure, use the `JSON` format and\n          \n          \n            \n                If the whole row is encoded as JSON with a known schema or structure, use the `JSON` format and", "url": "https://github.com/confluentinc/ksql/pull/4866#discussion_r396610927", "createdAt": "2020-03-23T17:05:20Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -263,27 +253,43 @@ CONCAT\n \r\n `CONCAT(col1, '_hello')`\r\n \r\n-Concatenate two strings.\r\n+Concatenate two or more strings.\r\n \r\n EXTRACTJSONFIELD\r\n ----------------\r\n \r\n `EXTRACTJSONFIELD(message, '$.log.cloud')`\r\n \r\n-Given a string column in JSON format, extract the field that matches.\r\n-For example EXTRACTJSONFIELD is necessary in the following JSON:\r\n+Given a STRING that contains JSON data, extract the value at the specified [JSONPath](https://jsonpath.com/).\r\n+\r\n+For example, given a STRING containing the following JSON:\r\n \r\n ```json\r\n-{\"foo\": \\\"{\\\"bar\\\": \\\"quux\\\"}\\\"}\r\n+{\r\n+   \"log\": {\r\n+      \"cloud\": \"gcp836Csd\",\r\n+      \"app\": \"ksProcessor\",\r\n+      \"instance\": 4\r\n+   }\r\n+}\r\n ```\r\n \r\n-In cases where the column is really an object but declared as a STRING,\r\n-you can use the `STRUCT` type, which is easier to work with. For example,\r\n-`STRUCT` works in the following case:\r\n+`EXTRACTJSONFIELD(message, '$.log.cloud')` will return the STRING `gcp836Csd`.\r\n \r\n-```json\r\n-{\"foo\": {\"bar\": \"quux\"}}.\r\n-```\r\n+If the requested JSONPath does not exist, the function returns NULL.\r\n+\r\n+The result of EXTRACTJSONFIELD is always a STRING. Use `CAST` to convert the result to another\r\n+type. For example, `CAST(EXTRACTJSONFIELD(message, '$.log.instance') AS INT)` will extract the\r\n+instance number from the above JSON object as a INT.\r\n+\r\n+!!! note\r\n+    EXTRACTJSONFIELD is useful for extracting data from JSON where either the schema of the JSON\r\n+    data is not static, or where the JSON data is embedded in a row encoded using a different\r\n+    format, For example a JSON field within an Avro encoded message.\r\n+    Where the whole row is encoded as JSON of a known schema or structure, use the `JSON` format and\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7059841c616b682eb384ccad03ebae22dc39ce22"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODYwMTMxOnYy", "diffSide": "RIGHT", "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowNjowNlrOF6PPaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzowNjowNlrOF6PPaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYxMTQzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                the example above could be defined using something similar to\n          \n          \n            \n                the example above could be defined using a statement similar to this:", "url": "https://github.com/confluentinc/ksql/pull/4866#discussion_r396611433", "createdAt": "2020-03-23T17:06:06Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -263,27 +253,43 @@ CONCAT\n \r\n `CONCAT(col1, '_hello')`\r\n \r\n-Concatenate two strings.\r\n+Concatenate two or more strings.\r\n \r\n EXTRACTJSONFIELD\r\n ----------------\r\n \r\n `EXTRACTJSONFIELD(message, '$.log.cloud')`\r\n \r\n-Given a string column in JSON format, extract the field that matches.\r\n-For example EXTRACTJSONFIELD is necessary in the following JSON:\r\n+Given a STRING that contains JSON data, extract the value at the specified [JSONPath](https://jsonpath.com/).\r\n+\r\n+For example, given a STRING containing the following JSON:\r\n \r\n ```json\r\n-{\"foo\": \\\"{\\\"bar\\\": \\\"quux\\\"}\\\"}\r\n+{\r\n+   \"log\": {\r\n+      \"cloud\": \"gcp836Csd\",\r\n+      \"app\": \"ksProcessor\",\r\n+      \"instance\": 4\r\n+   }\r\n+}\r\n ```\r\n \r\n-In cases where the column is really an object but declared as a STRING,\r\n-you can use the `STRUCT` type, which is easier to work with. For example,\r\n-`STRUCT` works in the following case:\r\n+`EXTRACTJSONFIELD(message, '$.log.cloud')` will return the STRING `gcp836Csd`.\r\n \r\n-```json\r\n-{\"foo\": {\"bar\": \"quux\"}}.\r\n-```\r\n+If the requested JSONPath does not exist, the function returns NULL.\r\n+\r\n+The result of EXTRACTJSONFIELD is always a STRING. Use `CAST` to convert the result to another\r\n+type. For example, `CAST(EXTRACTJSONFIELD(message, '$.log.instance') AS INT)` will extract the\r\n+instance number from the above JSON object as a INT.\r\n+\r\n+!!! note\r\n+    EXTRACTJSONFIELD is useful for extracting data from JSON where either the schema of the JSON\r\n+    data is not static, or where the JSON data is embedded in a row encoded using a different\r\n+    format, For example a JSON field within an Avro encoded message.\r\n+    Where the whole row is encoded as JSON of a known schema or structure, use the `JSON` format and\r\n+    define the structure as the source's columns.  For example, a stream of JSON objects similar to\r\n+    the example above could be defined using something similar to\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7059841c616b682eb384ccad03ebae22dc39ce22"}, "originalPosition": 176}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3640, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}