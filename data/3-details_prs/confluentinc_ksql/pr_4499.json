{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMDE4MTI0", "number": 4499, "title": "docs: Bring KLIP-15 up to date", "bodyText": "Description\nUpdate KLIP to bring up to date wrt current development and latest PR comments\nTesting done\nN/A\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-02-10T09:09:21Z", "url": "https://github.com/confluentinc/ksql/pull/4499", "merged": true, "mergeCommit": {"oid": "ddf0701358a3f59f2fb19abae846eef044492283"}, "closed": true, "closedAt": "2020-02-14T07:43:16Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDVS1ZAFqTM1Njg1NjM3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEKlvPgH2gAyMzczMDE4MTI0Ojc2Mzk5ODUyNzJlNmZlOWZiMTcxNWQzNzllYWE1NGYyMTQwOGY4MGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODU2Mzc1", "url": "https://github.com/confluentinc/ksql/pull/4499#pullrequestreview-356856375", "createdAt": "2020-02-11T17:36:16Z", "commit": {"oid": "7e3b4b954aaa94f70b12b7d617f064508d23ae51"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzozNjoxNlrOFoSc6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNzozNjoxNlrOFoSc6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4OTY3Mg==", "bodyText": "Not part of the review changes, but above:\n\n(newlines have been added here for the sake of clarity but the real JSON must not contain newlines)\n\nwe might want to clarify \"real JSON must not contain unescaped newlines\"", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r377789672", "createdAt": "2020-02-11T17:36:16Z", "author": {"login": "colinhicks"}, "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -89,8 +93,6 @@ operation (newlines have been added here for the sake of clarity but the real JS\n ````", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e3b4b954aaa94f70b12b7d617f064508d23ae51"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a2cd62a4bdb2ec2835540e0c374f64f701faf0", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/35a2cd62a4bdb2ec2835540e0c374f64f701faf0", "committedDate": "2020-02-12T11:30:58Z", "message": "Bring klip up to date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "185a28de0bc67ba55e5aba39d03dcc073d1eb841", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/185a28de0bc67ba55e5aba39d03dcc073d1eb841", "committedDate": "2020-02-12T11:30:58Z", "message": "more updates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfac08d4bf2055ad8c18c00959d6b392a6f56c15", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/bfac08d4bf2055ad8c18c00959d6b392a6f56c15", "committedDate": "2020-02-12T07:52:33Z", "message": "more updates"}, "afterCommit": {"oid": "185a28de0bc67ba55e5aba39d03dcc073d1eb841", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/185a28de0bc67ba55e5aba39d03dcc073d1eb841", "committedDate": "2020-02-12T11:30:58Z", "message": "more updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/88e322a396270e1523faf6edfcaef22a9868cb3b", "committedDate": "2020-02-12T12:57:53Z", "message": "tweak"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NjQ5Mzgz", "url": "https://github.com/confluentinc/ksql/pull/4499#pullrequestreview-358649383", "createdAt": "2020-02-14T00:41:06Z", "commit": {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMDo0MTowNlrOFpoXow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMDo0Mzo1MFrOFpoamg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5NzM0Nw==", "bodyText": "It's close-query and not query-close, right?\nAlso, what does \"(this can be configurable)\" mean?", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379197347", "createdAt": "2020-02-14T00:41:06Z", "author": {"login": "vcrfxia"}, "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -133,14 +132,14 @@ Push queries can be explicitly terminated by the client by making a request to t\n \n The request method will be a POST.\n \n-Requests will be made to a specific URL, e.g. \"/query-terminate\" (this can be configurable)\n+Requests will be made to a specific URL, e.g. \"/query-close\" (this can be configurable)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5Nzc0MQ==", "bodyText": "Should this be \"the third 2\" instead of \"the third 3\", because of the 0-indexing?", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379197741", "createdAt": "2020-02-14T00:42:29Z", "author": {"login": "vcrfxia"}, "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -176,23 +174,35 @@ Each JSON object will be separated by a new line.\n \n To terminate the insert stream the client should end the request.\n \n-If acks are requested then the response will be written to the response when each row has been\n+Acks will be written to the response when each row has been\n successfully committed to the underlying topic. Rows are committed in the order they are provided.\n-Each ack in the response is just an empty JSON object, separated by newlines:\n+Each ack in the response is a JSON object, separated by newlines:\n \n ````\n-{}\n-{}\n-{}\n-{}\n+{\"status\":\"ok\",\"seq\":0}\n+{\"status\":\"ok\",\"seq\":2}\n+{\"status\":\"ok\",\"seq\":1}\n+{\"status\":\"ok\",\"seq\":3}\n ````\n \n+A successful ack will contain a field `status` with value `ok`.\n+\n+All ack responses also contain a field `seq` with a 64 bit signed integer value. This number\n+corresponds to the sequence of the insert on the request. The first send has sequence `0`, the second\n+`1`, the third `3`, etc. It allows the client to correlate the ack to the corresponding send.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE5ODEwNg==", "bodyText": "Do we guarantee the order of the inserts, even if the order of the acks are not guaranteed, or is the order of the inserts not guaranteed either? Is this because of a limitation of the streaming protocol or something else?", "url": "https://github.com/confluentinc/ksql/pull/4499#discussion_r379198106", "createdAt": "2020-02-14T00:43:50Z", "author": {"login": "vcrfxia"}, "path": "design-proposals/klip-15-new-api-and-client.md", "diffHunk": "@@ -176,23 +174,35 @@ Each JSON object will be separated by a new line.\n \n To terminate the insert stream the client should end the request.\n \n-If acks are requested then the response will be written to the response when each row has been\n+Acks will be written to the response when each row has been\n successfully committed to the underlying topic. Rows are committed in the order they are provided.\n-Each ack in the response is just an empty JSON object, separated by newlines:\n+Each ack in the response is a JSON object, separated by newlines:\n \n ````\n-{}\n-{}\n-{}\n-{}\n+{\"status\":\"ok\",\"seq\":0}\n+{\"status\":\"ok\",\"seq\":2}\n+{\"status\":\"ok\",\"seq\":1}\n+{\"status\":\"ok\",\"seq\":3}\n ````\n \n+A successful ack will contain a field `status` with value `ok`.\n+\n+All ack responses also contain a field `seq` with a 64 bit signed integer value. This number\n+corresponds to the sequence of the insert on the request. The first send has sequence `0`, the second\n+`1`, the third `3`, etc. It allows the client to correlate the ack to the corresponding send.\n+\n+In case of error, an error response (see below) will be sent. For an error response for a send, the\n+`seq` field will also be included. \n+\n+Please note that acks can be returned in a different sequence to which the inserts were submitted. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e322a396270e1523faf6edfcaef22a9868cb3b"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7639985272e6fe9fb1715d379eaa54f21408f80b", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/7639985272e6fe9fb1715d379eaa54f21408f80b", "committedDate": "2020-02-14T07:42:03Z", "message": "tweaks"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4996, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}