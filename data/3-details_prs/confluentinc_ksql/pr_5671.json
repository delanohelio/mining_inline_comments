{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4ODYzNjY0", "number": 5671, "title": "feat(client): support admin operations in Java client", "bodyText": "Description\nFixes #4286\nAdds support for listing streams, tables, and topics to the Java client.\nDocs will come in a follow-up PR. Javadocs on the new methods and interfaces are included in this one.\nTesting done\nAdded unit and integration tests.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-06-23T22:49:03Z", "url": "https://github.com/confluentinc/ksql/pull/5671", "merged": true, "mergeCommit": {"oid": "7d0079ad2354e994d3eaf1a08527c83bae8eb348"}, "closed": true, "closedAt": "2020-06-24T23:17:50Z", "author": {"login": "vcrfxia"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcskj73gH2gAyNDM4ODYzNjY0OjM3YWYzZDQ5NzI5YmVmNGQ3NGM4OWVhNWI5Y2RjNDkzOGVlOWNmNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuhdFZAFqTQzNzAzNjg2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37af3d49729bef4d74c89ea5b9cdc4938ee9cf53", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/37af3d49729bef4d74c89ea5b9cdc4938ee9cf53", "committedDate": "2020-06-18T20:34:35Z", "message": "feat: support listing streams/table from Java client (wip)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b67a6f0cf414510074f1836195a9e99861009268", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/b67a6f0cf414510074f1836195a9e99861009268", "committedDate": "2020-06-22T22:25:37Z", "message": "chore: finish implementing list streams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8e50185302c71835a5068a9f735c2a3fc80488", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/5a8e50185302c71835a5068a9f735c2a3fc80488", "committedDate": "2020-06-22T22:43:41Z", "message": "refactor: prep for other methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e54185549e2fb7915be6778e2c6909dbddf171a4", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/e54185549e2fb7915be6778e2c6909dbddf171a4", "committedDate": "2020-06-22T23:34:11Z", "message": "test: add tests for list streams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf8e8862b26b6cbd9c140b21ed8340654012a201", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/bf8e8862b26b6cbd9c140b21ed8340654012a201", "committedDate": "2020-06-23T05:16:48Z", "message": "feat: support list tables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6ee218dd8ddad625a9a73598dddb65081ddcfc2", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/d6ee218dd8ddad625a9a73598dddb65081ddcfc2", "committedDate": "2020-06-23T22:21:07Z", "message": "feat: support list topics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7466c72d322f53fb4a907424d4534a32d440808d", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/7466c72d322f53fb4a907424d4534a32d440808d", "committedDate": "2020-06-23T22:30:40Z", "message": "test: add error response test for list topics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e2c67bf156c1587240148e40b88de2f8fffc5d", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/33e2c67bf156c1587240148e40b88de2f8fffc5d", "committedDate": "2020-06-23T22:35:50Z", "message": "chore: checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5dbc344f0ffec141670c7401a5fd0b181cc3bca", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/d5dbc344f0ffec141670c7401a5fd0b181cc3bca", "committedDate": "2020-06-23T22:44:40Z", "message": "docs: javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/2456569ee6be275416e81a49be0a4cff46ca588f", "committedDate": "2020-06-23T22:45:32Z", "message": "Merge branch 'master' into java-client-admin-operations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjIzNjYw", "url": "https://github.com/confluentinc/ksql/pull/5671#pullrequestreview-436223660", "createdAt": "2020-06-23T23:19:40Z", "commit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzoxOTo0MFrOGn9ycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzo0MDo1NFrOGn-Kpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1OTk4NA==", "bodyText": "might be worth adding some documentation as to why this is different than listStreams and listTopic - maybe (if I'm understand what you're saying correctly):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n          \n          \n            \n               * failed.\n          \n          \n            \n               * <p>If the ksqlDb server receives a non-200 response is received from the kafka broker, the {@code CompletableFuture} will be\n          \n          \n            \n               * failed.", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444559984", "createdAt": "2020-06-23T23:19:40Z", "author": {"login": "agavra"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java", "diffHunk": "@@ -92,6 +93,30 @@\n    */\n   CompletableFuture<Void> terminatePushQuery(String queryId);\n \n+  /**\n+   * Returns the list of ksqlDB streams from the ksqlDB server's metastore.\n+   *\n+   * @return list of streams\n+   */\n+  CompletableFuture<List<StreamInfo>> listStreams();\n+\n+  /**\n+   * Returns the list of ksqlDB tables from the ksqlDB server's metastore\n+   *\n+   * @return list of tables\n+   */\n+  CompletableFuture<List<TableInfo>> listTables();\n+\n+  /**\n+   * Returns the list of Kafka topics available for use with ksqlDB.\n+   *\n+   * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n+   * failed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MDIwMA==", "bodyText": "nit, my personal preference is just to have @return the name of this stream as one line if it's a simple getter", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444560200", "createdAt": "2020-06-23T23:20:24Z", "author": {"login": "agavra"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/StreamInfo.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.client;\n+\n+/**\n+ * Metadata for a ksqlDB stream.\n+ */\n+public interface StreamInfo {\n+\n+  /**\n+   * Returns the name of this stream.\n+   *\n+   * @return stream name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzEwMg==", "bodyText": "nit: might want to add some constants for the endpoints", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444563102", "createdAt": "2020-06-23T23:29:52Z", "author": {"login": "agavra"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -149,6 +154,51 @@ public BatchedQueryResult executeQuery(\n     return cf;\n   }\n \n+  @Override\n+  public CompletableFuture<List<StreamInfo>> listStreams() {\n+    final CompletableFuture<List<StreamInfo>> cf = new CompletableFuture<>();\n+\n+    makeRequest(\n+        \"/ksql\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ==", "bodyText": "generally worth having equals/hashcode/tostring on externally exposed classes so that people can leverage them if they want to", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444563599", "createdAt": "2020-06-23T23:31:38Z", "author": {"login": "agavra"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/StreamInfoImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.client.impl;\n+\n+import io.confluent.ksql.api.client.StreamInfo;\n+import java.util.Objects;\n+\n+public class StreamInfoImpl implements StreamInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NjE4Mg==", "bodyText": "would we need this if we implemented .equals()?", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r444566182", "createdAt": "2020-06-23T23:40:54Z", "author": {"login": "agavra"}, "path": "ksqldb-api-client/src/test/java/io/confluent/ksql/api/client/integration/ClientIntegrationTest.java", "diffHunk": "@@ -770,4 +813,97 @@ private static void verifyPullQueryRow(final Row row) {\n     }\n     return expectedRows;\n   }\n+\n+  private static Matcher<? super StreamInfo> streamForProvider(\n+      final TestDataProvider<?> testDataProvider\n+  ) {\n+    return streamInfo(testDataProvider.kstreamName(), testDataProvider.topicName(), \"JSON\");\n+  }\n+\n+  private static Matcher<? super StreamInfo> streamInfo(\n+      final String streamName, final String topicName, final String format\n+  ) {\n+    return new TypeSafeDiagnosingMatcher<StreamInfo>() {\n+      @Override\n+      protected boolean matchesSafely(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97e17f680141acd80111b69295df889fe8257218", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/97e17f680141acd80111b69295df889fe8257218", "committedDate": "2020-06-24T22:00:18Z", "message": "chore: feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDM2ODYx", "url": "https://github.com/confluentinc/ksql/pull/5671#pullrequestreview-437036861", "createdAt": "2020-06-24T22:00:15Z", "commit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjowMDoxNVrOGoknTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjowNDo1MlrOGokuRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NjExMA==", "bodyText": "It's actually listStreams and listTables that were different from all the rest of the methods (if you look at the other Client methods, you'll see they all have the same note as listTopics), since if ksqlDB is operating correctly, those shouldn't ever fail. However, it occurs to me that those requests can still fail if, e.g., ksqlDB is unavailable, or because of misconfigurations in the client, so I've added the note to those methods as well.", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445196110", "createdAt": "2020-06-24T22:00:15Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/Client.java", "diffHunk": "@@ -92,6 +93,30 @@\n    */\n   CompletableFuture<Void> terminatePushQuery(String queryId);\n \n+  /**\n+   * Returns the list of ksqlDB streams from the ksqlDB server's metastore.\n+   *\n+   * @return list of streams\n+   */\n+  CompletableFuture<List<StreamInfo>> listStreams();\n+\n+  /**\n+   * Returns the list of ksqlDB tables from the ksqlDB server's metastore\n+   *\n+   * @return list of tables\n+   */\n+  CompletableFuture<List<TableInfo>> listTables();\n+\n+  /**\n+   * Returns the list of Kafka topics available for use with ksqlDB.\n+   *\n+   * <p>If a non-200 response is received from the server, the {@code CompletableFuture} will be\n+   * failed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU1OTk4NA=="}, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5NzE4MQ==", "bodyText": "To make sure I understand correctly: you're suggesting we add equals/hashcode/tostring methods to each of the implementation classes, not the interfaces, right? This makes sense to me, though I'm not sure whether it makes more sense for the toString method to say StreamInfoImpl{...} or StreamInfo{...} since the former is an implementation detail, but the latter is a bit misleading.", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445197181", "createdAt": "2020-06-24T22:03:02Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/StreamInfoImpl.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.api.client.impl;\n+\n+import io.confluent.ksql.api.client.StreamInfo;\n+import java.util.Objects;\n+\n+public class StreamInfoImpl implements StreamInfo {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2MzU5OQ=="}, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5Nzg5NA==", "bodyText": "I think so, for two reasons:\n\nI think it's useful for the test to validate the StreamInfo methods (getName, getTopic, getFormat) explicitly, since they're external APIs, rather than simply perform a comparison.\nStreamInfoImpl is package-private so the test can't even create StreamInfo instances for comparison, without exposing StreamInfoImpl which doesn't seem great.", "url": "https://github.com/confluentinc/ksql/pull/5671#discussion_r445197894", "createdAt": "2020-06-24T22:04:52Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/test/java/io/confluent/ksql/api/client/integration/ClientIntegrationTest.java", "diffHunk": "@@ -770,4 +813,97 @@ private static void verifyPullQueryRow(final Row row) {\n     }\n     return expectedRows;\n   }\n+\n+  private static Matcher<? super StreamInfo> streamForProvider(\n+      final TestDataProvider<?> testDataProvider\n+  ) {\n+    return streamInfo(testDataProvider.kstreamName(), testDataProvider.topicName(), \"JSON\");\n+  }\n+\n+  private static Matcher<? super StreamInfo> streamInfo(\n+      final String streamName, final String topicName, final String format\n+  ) {\n+    return new TypeSafeDiagnosingMatcher<StreamInfo>() {\n+      @Override\n+      protected boolean matchesSafely(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NjE4Mg=="}, "originalCommit": {"oid": "2456569ee6be275416e81a49be0a4cff46ca588f"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 252, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}