{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTQxMDAz", "number": 4717, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDoyNDoyOVrODmUa4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDozMTowM1rODmUmeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTA3MDQwOnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/engine/QueryEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDoyNDoyOVrOFzqxSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozNzozN1rOFzwTsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMjQ0MA==", "bodyText": "I don't think we should make this public.  It's an internal impl detail of the engine and should IMHO remain that way.\nIf you just parse, prepare + execute the query against a sandbox of the engine, (as the rest api normally does), then you'll get back a query, and you can get the schema from that query.\nYes, this is executing some bits we don't need. But it maintains better decoupling in the code IMHO.\nIf we really want to expose logical plans, then we should expose them through the engine.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389722440", "createdAt": "2020-03-09T14:24:29Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/engine/QueryEngine.java", "diffHunk": "@@ -42,7 +42,7 @@\n import org.slf4j.LoggerFactory;\n \n // CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling\n-class QueryEngine {\n+public class QueryEngine {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxMzE2OA==", "bodyText": "I'm happy with your suggestion and will do that.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389813168", "createdAt": "2020-03-09T16:37:37Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/engine/QueryEngine.java", "diffHunk": "@@ -42,7 +42,7 @@\n import org.slf4j.LoggerFactory;\n \n // CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling\n-class QueryEngine {\n+public class QueryEngine {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMjQ0MA=="}, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTA3NDYxOnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDoyNToyN1rOFzqzyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjozOToyNFrOFzwYAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMzA4MQ==", "bodyText": "I'd personally handle this as a separate injector.  Keep this injector focused on topic creation.\nI can see that topic creation is related to schema creation - but the injectors are chained anyway.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389723081", "createdAt": "2020-03-09T14:25:27Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -53,18 +63,25 @@\n \n   private final KafkaTopicClient topicClient;\n   private final MetaStore metaStore;\n+  private final SchemaRegistryClient srClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxNDI3NQ==", "bodyText": "At first I had tried doing that and now I can't remember why I didn't end up going that route. I'll go ahead and do that.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389814275", "createdAt": "2020-03-09T16:39:24Z", "author": {"login": "agavra"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -53,18 +63,25 @@\n \n   private final KafkaTopicClient topicClient;\n   private final MetaStore metaStore;\n+  private final SchemaRegistryClient srClient;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMzA4MQ=="}, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTEwMDA4OnYy", "diffSide": "RIGHT", "path": "ksql-engine/src/test/java/io/confluent/ksql/topic/TopicCreateInjectorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDozMTowM1rOFzrDOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDozMTowM1rOFzrDOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyNzAzMg==", "bodyText": "I think this is missing some tests around what happens if schema registration fails...", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389727032", "createdAt": "2020-03-09T14:31:03Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/test/java/io/confluent/ksql/topic/TopicCreateInjectorTest.java", "diffHunk": "@@ -425,6 +440,74 @@ public void shouldCreateMissingTopicWithDefaultCleanupPolicyForWindowedTables()\n         ImmutableMap.of());\n   }\n \n+  @Test\n+  public void shouldNotRegisterSchemaIfSchemaRegistryIsDisabled() {\n+    // Given:\n+    config = new KsqlConfig(ImmutableMap.of());\n+    givenStatement(\"CREATE STREAM x (f1 VARCHAR) WITH(kafka_topic='expectedName', value_format='AVRO', partitions=1);\");\n+    when(builder.build()).thenReturn(new TopicProperties(\"expectedName\", 10, (short) 10));\n+\n+    // When:\n+    injector.inject(statement, builder);\n+\n+    // Then:\n+    verifyNoMoreInteractions(schemaRegistryClient);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2045, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}