{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5Njg3ODcz", "number": 5392, "title": "feat: Pull Queries: QPS check utilizes internal API flag to determine if forwarded", "bodyText": "Description\nWhen doing pull queries, we do a QPS check.  At the moment, we only check at the initial client request, regardless of whether it gets forwarded.  This makes it easy to reason about the total cluster QPS.\nTo do this, we utilize a request property, request.ksql.query.pull.skip.forwarding.  This PR adds the additional requirement that if ksql.internal.listener is in use, the request must be internal to be considered a forwarded request.\nThis prevents a user from setting request.ksql.query.pull.skip.forwarding explicitly.\nTesting done\nmvn package.  Also tested manually.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-05-18T19:08:09Z", "url": "https://github.com/confluentinc/ksql/pull/5392", "merged": true, "mergeCommit": {"oid": "08b428f368a6f6238f9ffd9caab9f27afad9d1b9"}, "closed": true, "closedAt": "2020-05-20T00:46:08Z", "author": {"login": "AlanConfluent"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcikpmuAH2gAyNDE5Njg3ODczOjhiY2Y2MzEyY2IzYzJiMDdkZGQyMWMxOGMzMWY4YjM4MWZjNDU1ZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci8z_eAH2gAyNDE5Njg3ODczOmU5MjYzYzkzYTQ1NTcyZDMzMjc2NDdhM2Q5NzA0NjU3MDEyMjdkMmE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8bcf6312cb3c2b07ddd21c18c31f8b381fc455f3", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/8bcf6312cb3c2b07ddd21c18c31f8b381fc455f3", "committedDate": "2020-05-18T19:01:32Z", "message": "feat: For Pull Query QPS check trust internal API if used"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODg4OTU3", "url": "https://github.com/confluentinc/ksql/pull/5392#pullrequestreview-413888957", "createdAt": "2020-05-18T19:43:52Z", "commit": {"oid": "8bcf6312cb3c2b07ddd21c18c31f8b381fc455f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo0Mzo1MlrOGXFIOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo0Mzo1MlrOGXFIOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg1NDQ1Nw==", "bodyText": "In which scenarios would isInternalRequest not be available? Don't we want these two variables (skipForwardRequest and  isInternalRequest) to always either both be true or both be false? Which makes me question whether we need both.", "url": "https://github.com/confluentinc/ksql/pull/5392#discussion_r426854457", "createdAt": "2020-05-18T19:43:52Z", "author": {"login": "vpapavas"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/PullQueryExecutor.java", "diffHunk": "@@ -178,7 +179,11 @@ public TableRowsEntity execute(\n     try {\n       final RoutingOptions routingOptions = new ConfigRoutingOptions(\n           statement.getConfig(), statement.getConfigOverrides(), statement.getRequestProperties());\n-      final boolean isAlreadyForwarded = routingOptions.skipForwardRequest();\n+      // If internal listeners are in use, we require the request to come from that listener to\n+      // treat it as having been forwarded.\n+      final boolean isAlreadyForwarded = routingOptions.skipForwardRequest() &&\n+          // Trust the forward request option if isInternalRequest isn't available.\n+          isInternalRequest.orElse(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bcf6312cb3c2b07ddd21c18c31f8b381fc455f3"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40f8de1b5f413da22b57873fc85bfc0a0e0b733d", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/40f8de1b5f413da22b57873fc85bfc0a0e0b733d", "committedDate": "2020-05-18T20:14:02Z", "message": "For APIs that are only client facing, hardcoded internal as false"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16c385b16398cbe891503d86a7060b0319aae738", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/16c385b16398cbe891503d86a7060b0319aae738", "committedDate": "2020-05-18T20:17:56Z", "message": "Fixes style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTUwMjE4", "url": "https://github.com/confluentinc/ksql/pull/5392#pullrequestreview-413950218", "createdAt": "2020-05-18T21:26:12Z", "commit": {"oid": "16c385b16398cbe891503d86a7060b0319aae738"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9263c93a45572d3327647a3d970465701227d2a", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/e9263c93a45572d3327647a3d970465701227d2a", "committedDate": "2020-05-19T23:10:36Z", "message": "Fix tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4784, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}