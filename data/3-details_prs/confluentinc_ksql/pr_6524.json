{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzIzNjUw", "number": 6524, "title": "feat: update ksql restore command to skip incompatible commands if flag set", "bodyText": "Description\n#6305\nAdded a -s flag for skipping commands when restoring. If the flag isn't present, the restore command program will exit if it encounters errors deserializing commands from the command topic backup file. If it is present and true, it'll skip over the incompatible command instead. The program then prints out the number of skipped commands and tries to clean up any left over KafkaStreams internal topics and state stores if the skipped command was a query.\nTesting done\nAdded integration test\nLocal manual test\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-10-26T21:39:22Z", "url": "https://github.com/confluentinc/ksql/pull/6524", "merged": true, "mergeCommit": {"oid": "4d0c997ad2f2889941fa6dcc8dd2e9d3e4e27d7d"}, "closed": true, "closedAt": "2020-11-12T19:53:17Z", "author": {"login": "stevenpyzhang"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWbbN2AFqTUxNzE5Njk3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb4CMMAFqTUyOTQ0MDc0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTk2OTcz", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-517196973", "createdAt": "2020-10-26T21:40:44Z", "commit": {"oid": "3a63a3b7f7323aa059387239625a5dfe0d1313cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MDo0NFrOHojdbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MDo0NFrOHojdbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4NjA2Mg==", "bodyText": "We should be returning the record even if it isn't backed up. The CommandRunner has logic to detect when the command topic and backup are out of sync/the command is incompatible.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r512286062", "createdAt": "2020-10-26T21:40:44Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopic.java", "diffHunk": "@@ -90,7 +90,6 @@ public void start() {\n           log.warn(\"Backup is out of sync with the current command topic. \"\n               + \"Backups will not work until the previous command topic is \"\n               + \"restored or all backup files are deleted.\", e);\n-          return records;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a63a3b7f7323aa059387239625a5dfe0d1313cc"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a63a3b7f7323aa059387239625a5dfe0d1313cc", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/3a63a3b7f7323aa059387239625a5dfe0d1313cc", "committedDate": "2020-10-26T21:37:12Z", "message": "feat: update ksql restore command to skip incompatible commands if flag set"}, "afterCommit": {"oid": "64a2ccc1b8cbc5e1e2eb7cac8a70b14056b3b3c9", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/64a2ccc1b8cbc5e1e2eb7cac8a70b14056b3b3c9", "committedDate": "2020-10-26T21:41:34Z", "message": "feat: update ksql restore command to skip incompatible commands if flag set"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64a2ccc1b8cbc5e1e2eb7cac8a70b14056b3b3c9", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/64a2ccc1b8cbc5e1e2eb7cac8a70b14056b3b3c9", "committedDate": "2020-10-26T21:41:34Z", "message": "feat: update ksql restore command to skip incompatible commands if flag set"}, "afterCommit": {"oid": "6c54d4a913c312ba17892f10ccdd245b4f76d181", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/6c54d4a913c312ba17892f10ccdd245b4f76d181", "committedDate": "2020-10-26T21:47:14Z", "message": "feat: update ksql restore command to skip incompatible commands if flag set"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NzIzNzY4", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-517723768", "createdAt": "2020-10-27T13:50:02Z", "commit": {"oid": "6c54d4a913c312ba17892f10ccdd245b4f76d181"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo1MDowMlrOHo9Lcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNDowMDozM1rOHo9uUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwNzQ0Mg==", "bodyText": "Doesn't this need the @SuppressWarnings(\"unused\") // Accessed via reflection too?", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r512707442", "createdAt": "2020-10-27T13:50:02Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/RestoreOptions.java", "diffHunk": "@@ -42,8 +42,16 @@\n \n   @SuppressWarnings(\"unused\") // Accessed via reflection\n   @Option(\n-      name = {\"--yes\", \"-y\"},\n-      description = \"Automatic \\\"yes\\\" as answer to prompt and run non-interactively.\")\n+      name = {\"--skip-incompatible-commands\", \"-s\"},\n+      description = \"This restore command can restore command topic commands that \"\n+          + \"are of version (\" + io.confluent.ksql.rest.server.computation.Command.VERSION + \") \"\n+          + \"or lower. If true, the restore command will skip all incompatible commands.\"\n+          + \"If false, the restore command will restore the backup file as is.\")\n+  private boolean skipIncompatibleCommands = false;\n+\n+  @Option(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c54d4a913c312ba17892f10ccdd245b4f76d181"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxMTI4Mg==", "bodyText": "should we call throwOnInvalidRecords when skip is false? That way the restore will fail if a command is invalid, thus avoiding re-creating the command topic and writing partial commands.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r512711282", "createdAt": "2020-10-27T13:54:41Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopic.java", "diffHunk": "@@ -67,17 +70,26 @@ private static KsqlConfig loadServerConfig(final File configFile) {\n     return new KsqlConfig(serverProps);\n   }\n \n-  public static List<Pair<byte[], byte[]>> loadBackup(final File file) throws IOException {\n+  public static List<Pair<byte[], byte[]>> loadBackup(\n+      final File file,\n+      final RestoreOptions options\n+  ) throws IOException {\n     final BackupReplayFile commandTopicBackupFile = BackupReplayFile.readOnly(file);\n+    List<Pair<byte[], byte[]>> records = commandTopicBackupFile.readRecords();\n \n-    final List<Pair<byte[], byte[]>> records = commandTopicBackupFile.readRecords();\n-    throwOnInvalidRecords(records);\n+    if (options.isSkipIncompatibleCommands()) {\n+      records = removeIncompatibleCommands(records);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c54d4a913c312ba17892f10ccdd245b4f76d181"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcxNjM3MQ==", "bodyText": "This looks like what the BackupReplayFile does. Can it be reused?\n // Just create another write() that accept the key and value instead of a consumer\nBackupReplayFile.writable(backupFileLocation.toFile())\n    .write(commandIdInBytes, commandInBytes);", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r512716371", "createdAt": "2020-10-27T14:00:33Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/api/integration/RestoreCommandTopicIntegrationTest.java", "diffHunk": "@@ -173,4 +256,27 @@ private boolean isDegradedState() {\n   private List<KsqlEntity> makeKsqlRequest(final String sql) {\n     return RestIntegrationTestUtil.makeKsqlRequest(REST_APP, sql);\n   }\n+\n+  public static void writeToBackupFile(\n+      final CommandId commandId,\n+      final Command command,\n+      final Path backUpFileLocation\n+  ) throws IOException {\n+    FileOutputStream writer;\n+    try {\n+      writer = new FileOutputStream(new File(String.valueOf(backUpFileLocation)), true);\n+    } catch (final FileNotFoundException e) {\n+      throw new KsqlException(\n+          String.format(\"Failed to open backup file: %s\", backUpFileLocation), e);\n+    }\n+\n+    final byte[] keyValueSeparator = \":\".getBytes(StandardCharsets.UTF_8);\n+    final byte[] newLine = \"/n\".getBytes(StandardCharsets.UTF_8);\n+\n+    writer.write(InternalTopicSerdes.serializer().serialize(\"\", commandId));\n+    writer.write(keyValueSeparator);\n+    writer.write(InternalTopicSerdes.serializer().serialize(\"\", command));\n+    writer.write(newLine);\n+    writer.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c54d4a913c312ba17892f10ccdd245b4f76d181"}, "originalPosition": 218}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95fa2c8028f9d75c044d60ea66dfb5f2b86e6519", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/95fa2c8028f9d75c044d60ea66dfb5f2b86e6519", "committedDate": "2020-10-28T04:29:29Z", "message": "comments"}, "afterCommit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/ce2a9b59ff2969eae089529d399140fe8e11d309", "committedDate": "2020-10-28T04:30:50Z", "message": "comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MzQ3MDA5", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-518347009", "createdAt": "2020-10-28T06:06:52Z", "commit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNjowNjo1M1rOHpbQIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNjoxMzowOVrOHpbXAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMDE2MA==", "bodyText": "We need to make the above exception more specific. We shouldn't just ignore any exception. Ditto for the other place this is used. I know this isn't part of your patch, but might as well do this now.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r513200160", "createdAt": "2020-10-28T06:06:53Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopic.java", "diffHunk": "@@ -117,7 +116,6 @@ public void start() {\n           log.warn(\"Backup is out of sync with the current command topic. \"\n               + \"Backups will not work until the previous command topic is \"\n               + \"restored or all backup files are deleted.\", e);\n-          return restoreCommands;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIwMTkyMA==", "bodyText": "this check detects the case where the backup and the command topic are inconsistent (have different contents). in that case we shouldn't return the command here, otherwise the command runner will try to execute it.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r513201920", "createdAt": "2020-10-28T06:13:09Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopic.java", "diffHunk": "@@ -90,7 +90,6 @@ public void start() {\n           log.warn(\"Backup is out of sync with the current command topic. \"\n               + \"Backups will not work until the previous command topic is \"\n               + \"restored or all backup files are deleted.\", e);\n-          return records;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4NjA2Mg=="}, "originalCommit": {"oid": "3a63a3b7f7323aa059387239625a5dfe0d1313cc"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NjUxMzMx", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-518651331", "createdAt": "2020-10-28T13:21:29Z", "commit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4OTA0NzM2", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-518904736", "createdAt": "2020-10-28T17:16:33Z", "commit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce2a9b59ff2969eae089529d399140fe8e11d309", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/ce2a9b59ff2969eae089529d399140fe8e11d309", "committedDate": "2020-10-28T04:30:50Z", "message": "comments"}, "afterCommit": {"oid": "9da539955e73d75fd308bd8c4e86fa7fedf3d582", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/9da539955e73d75fd308bd8c4e86fa7fedf3d582", "committedDate": "2020-11-02T23:54:26Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9da539955e73d75fd308bd8c4e86fa7fedf3d582", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/9da539955e73d75fd308bd8c4e86fa7fedf3d582", "committedDate": "2020-11-02T23:54:26Z", "message": "cleanup streams internal topics and state store"}, "afterCommit": {"oid": "c5d2249bd4c1e93ec6792a8d44570d4d29c0cda8", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/c5d2249bd4c1e93ec6792a8d44570d4d29c0cda8", "committedDate": "2020-11-03T00:06:17Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5d2249bd4c1e93ec6792a8d44570d4d29c0cda8", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/c5d2249bd4c1e93ec6792a8d44570d4d29c0cda8", "committedDate": "2020-11-03T00:06:17Z", "message": "cleanup streams internal topics and state store"}, "afterCommit": {"oid": "5205813d94cb183793dfe5a1a0b324731b8cbf00", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/5205813d94cb183793dfe5a1a0b324731b8cbf00", "committedDate": "2020-11-03T06:01:33Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5205813d94cb183793dfe5a1a0b324731b8cbf00", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/5205813d94cb183793dfe5a1a0b324731b8cbf00", "committedDate": "2020-11-03T06:01:33Z", "message": "cleanup streams internal topics and state store"}, "afterCommit": {"oid": "ab3b4970e01e9a09af4be52fa63adb18ccd8f69a", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/ab3b4970e01e9a09af4be52fa63adb18ccd8f69a", "committedDate": "2020-11-03T20:22:08Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab3b4970e01e9a09af4be52fa63adb18ccd8f69a", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/ab3b4970e01e9a09af4be52fa63adb18ccd8f69a", "committedDate": "2020-11-03T20:22:08Z", "message": "cleanup streams internal topics and state store"}, "afterCommit": {"oid": "29202f2d3301dbc54bf939cf7a788a74942d24c0", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/29202f2d3301dbc54bf939cf7a788a74942d24c0", "committedDate": "2020-11-03T22:59:02Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "29202f2d3301dbc54bf939cf7a788a74942d24c0", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/29202f2d3301dbc54bf939cf7a788a74942d24c0", "committedDate": "2020-11-03T22:59:02Z", "message": "cleanup streams internal topics and state store"}, "afterCommit": {"oid": "507fe96761258996e2d51a4e7458e77080796e41", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/507fe96761258996e2d51a4e7458e77080796e41", "committedDate": "2020-11-04T19:15:45Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTgxNDU3", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-523981457", "createdAt": "2020-11-05T07:24:07Z", "commit": {"oid": "507fe96761258996e2d51a4e7458e77080796e41"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzoyNDowOFrOHt2UsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzozMzowNVrOHt2izw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzODAwMQ==", "bodyText": "we should define a new exception type for this case. this is a very specific error condition, and it should have its own exception class.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r517838001", "createdAt": "2020-11-05T07:24:08Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopic.java", "diffHunk": "@@ -86,7 +89,9 @@ public void start() {\n       for (ConsumerRecord<byte[], byte[]> record : iterable) {\n         try {\n           backupRecord(record);\n-        } catch (final Exception e) {\n+        } catch (final KsqlException e) {\n+          log.warn(\"Error encountered while backing up command.\", e);\n+        } catch (final KsqlServerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507fe96761258996e2d51a4e7458e77080796e41"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg0MDU5Mw==", "bodyText": "again - this should be a very specific exception indicating a deserialization error. Also, why are we even trying to deserialize the command from the backup logic (cc @spena)? It doesn't look like we're using any of the fields.", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r517840593", "createdAt": "2020-11-05T07:30:29Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopic.java", "diffHunk": "@@ -86,7 +89,9 @@ public void start() {\n       for (ConsumerRecord<byte[], byte[]> record : iterable) {\n         try {\n           backupRecord(record);\n-        } catch (final Exception e) {\n+        } catch (final KsqlException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507fe96761258996e2d51a4e7458e77080796e41"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg0MTYxNQ==", "bodyText": "nit: try and use the same variable name for the same thing everywhere (so either options or restoreOptions", "url": "https://github.com/confluentinc/ksql/pull/6524#discussion_r517841615", "createdAt": "2020-11-05T07:33:05Z", "author": {"login": "rodesai"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopic.java", "diffHunk": "@@ -65,17 +79,42 @@ private static KsqlConfig loadServerConfig(final File configFile) {\n     return new KsqlConfig(serverProps);\n   }\n \n-  public static List<Pair<byte[], byte[]>> loadBackup(final File file) throws IOException {\n+  public static List<Pair<byte[], byte[]>> loadBackup(\n+      final File file,\n+      final RestoreOptions options,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507fe96761258996e2d51a4e7458e77080796e41"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd76ebf8d89f65faa1de0191e5d9116afd45ed6", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/edd76ebf8d89f65faa1de0191e5d9116afd45ed6", "committedDate": "2020-11-06T20:33:19Z", "message": "feat: update ksql restore command to skip incompatible commands if flag set"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d954970641ad6c5bd99c90965adf8bfc4fce0d6", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/3d954970641ad6c5bd99c90965adf8bfc4fce0d6", "committedDate": "2020-11-06T20:33:19Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4fcf11c116599688c9f4a85ae41f141ec3a3dd5", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/f4fcf11c116599688c9f4a85ae41f141ec3a3dd5", "committedDate": "2020-11-06T20:33:19Z", "message": "cleanup streams internal topics and state store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7f4ae94a2b73468daa96d0ef52676160cbd51f", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/7e7f4ae94a2b73468daa96d0ef52676160cbd51f", "committedDate": "2020-11-06T20:33:19Z", "message": "remove deserialization from backup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0a5d16096a993a0fa58f2df05203f6df724535e", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/d0a5d16096a993a0fa58f2df05203f6df724535e", "committedDate": "2020-11-06T20:33:20Z", "message": "add specific exception for corruption, also fixed a typo"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75a4ec6afe32a106623cfb75e356b4f5ca91515c", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/75a4ec6afe32a106623cfb75e356b4f5ca91515c", "committedDate": "2020-11-06T19:48:46Z", "message": "add specific exception for corruption, also fixed a typo"}, "afterCommit": {"oid": "d0a5d16096a993a0fa58f2df05203f6df724535e", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/d0a5d16096a993a0fa58f2df05203f6df724535e", "committedDate": "2020-11-06T20:33:20Z", "message": "add specific exception for corruption, also fixed a typo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NDQwNzQ4", "url": "https://github.com/confluentinc/ksql/pull/6524#pullrequestreview-529440748", "createdAt": "2020-11-12T19:50:16Z", "commit": {"oid": "d0a5d16096a993a0fa58f2df05203f6df724535e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4592, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}