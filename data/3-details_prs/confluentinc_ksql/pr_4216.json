{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MTM5MTMz", "number": 4216, "title": "perf: Improves pull query performance by making the default schema service a singleton", "bodyText": "Using this singleton, locally on my Mac I'm able to increase the performance in a simple benchmark we have from 10k qps to about 14.5k qps.\nDescription\nI factored the context to be a singleton because the call to the constructor of KsqlSchemaRegistryClientFactory calls sslFactory.configure() which is an expensive operation.  By doing this, sslFactory.configure isn't done for every request, which saves a lot of work.\nFixes #4305\nTesting done\nRan mvn clean package integration-test\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-01-03T22:11:07Z", "url": "https://github.com/confluentinc/ksql/pull/4216", "merged": true, "mergeCommit": {"oid": "f9917529b4a0d6eff44c36c6f04aea4268f5381a"}, "closed": true, "closedAt": "2020-01-09T19:02:04Z", "author": {"login": "AlanConfluent"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb3vAcNgFqTMzODc0OTk1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4tISUAFqTM0MDY3OTc4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NzQ5OTUx", "url": "https://github.com/confluentinc/ksql/pull/4216#pullrequestreview-338749951", "createdAt": "2020-01-06T16:34:52Z", "commit": {"oid": "f38dff4a83f0e03a2597b33307ce142458842598"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozNDo1MlrOFaijHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjozNzo1NVrOFaioRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3MzM0Mg==", "bodyText": "If we're adding a factory method, can we make the constructor private or package private?", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r363373342", "createdAt": "2020-01-06T16:34:52Z", "author": {"login": "big-andy-coates"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/context/KsqlRestServiceContextBinder.java", "diffHunk": "@@ -31,9 +35,19 @@\n public class KsqlRestServiceContextBinder extends AbstractBinder {\n   public KsqlRestServiceContextBinder(\n       final KsqlConfig ksqlConfig,\n-      final KsqlSecurityExtension securityExtension\n+      final KsqlSecurityExtension securityExtension,\n+      final Supplier<SchemaRegistryClient> schemaRegistryClientSupplier\n   ) {\n-    KsqlRestServiceContextFactory.configure(ksqlConfig, securityExtension);\n+    KsqlRestServiceContextFactory.configure(ksqlConfig, securityExtension,\n+        schemaRegistryClientSupplier);\n+  }\n+\n+  public static BiFunction<KsqlConfig, KsqlSecurityExtension, Binder> createFactory(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38dff4a83f0e03a2597b33307ce142458842598"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NDY2MA==", "bodyText": "nit: add null check please", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r363374660", "createdAt": "2020-01-06T16:37:55Z", "author": {"login": "big-andy-coates"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/streaming/WSQueryEndpoint.java", "diffHunk": "@@ -178,7 +184,8 @@ public WSQueryEndpoint(\n     this.defaultServiceContextFactory =\n         Objects.requireNonNull(defaultServiceContextFactory, \"defaultServiceContextFactory\");\n     this.serverState = Objects.requireNonNull(serverState, \"serverState\");\n-    this.errorHandler = Objects.requireNonNull(errorHandler, \"errorHandler\");;\n+    this.errorHandler = Objects.requireNonNull(errorHandler, \"errorHandler\");\n+    this.schemaRegistryClientSupplier = schemaRegistryClientSupplier;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38dff4a83f0e03a2597b33307ce142458842598"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f38dff4a83f0e03a2597b33307ce142458842598", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/f38dff4a83f0e03a2597b33307ce142458842598", "committedDate": "2020-01-03T22:00:02Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}, "afterCommit": {"oid": "7f17c6186bf1ebf2e2ce4383c8c67f36ec8a19ed", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/7f17c6186bf1ebf2e2ce4383c8c67f36ec8a19ed", "committedDate": "2020-01-08T01:29:57Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f17c6186bf1ebf2e2ce4383c8c67f36ec8a19ed", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/7f17c6186bf1ebf2e2ce4383c8c67f36ec8a19ed", "committedDate": "2020-01-08T01:29:57Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}, "afterCommit": {"oid": "fb0d936f2c5850e0c2e825181faccdad9dd0a73e", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/fb0d936f2c5850e0c2e825181faccdad9dd0a73e", "committedDate": "2020-01-08T21:06:51Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb0d936f2c5850e0c2e825181faccdad9dd0a73e", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/fb0d936f2c5850e0c2e825181faccdad9dd0a73e", "committedDate": "2020-01-08T21:06:51Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}, "afterCommit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b", "committedDate": "2020-01-08T21:49:44Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMTc0NzA4", "url": "https://github.com/confluentinc/ksql/pull/4216#pullrequestreview-340174708", "createdAt": "2020-01-08T22:03:51Z", "commit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjowMzo1MlrOFblO0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMjoxMjoyNlrOFblbQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2NTg3NA==", "bodyText": "I can't add a comment in the dispose method. But you have to make sure not to close this default serviceContext on the dispose. The dispose is called after a REST request finished.\nBtw, could you rename this variable to defaultServiceContext or serverServiceContext? so we know this is used as the default.", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r364465874", "createdAt": "2020-01-08T22:03:52Z", "author": {"login": "spena"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/context/KsqlSecurityContextBinderFactory.java", "diffHunk": "@@ -89,10 +88,7 @@ public KsqlSecurityContext provide() {\n         Optional.ofNullable(request.getHeader(HttpHeaders.AUTHORIZATION));\n \n     if (!securityExtension.getUserContextProvider().isPresent()) {\n-      return new KsqlSecurityContext(\n-          Optional.ofNullable(principal),\n-          defaultServiceContextFactory.create(ksqlConfig, authHeader)\n-      );\n+      return new KsqlSecurityContext(Optional.ofNullable(principal), serviceContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2ODQ5OA==", "bodyText": "I think this createFactory method is not necessary. The default serviceContext is passed to the KsqlRestApplication in the previous line. With that, you can configure the KsqlSecurityContextBinder in the configureBaseApplication method like:\nconfig.register(serviceContextBinderFactory.apply(ksqlConfigNoPort, securityExtension, serviceContext));", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r364468498", "createdAt": "2020-01-08T22:10:58Z", "author": {"login": "spena"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestApplication.java", "diffHunk": "@@ -469,7 +470,7 @@ static KsqlRestApplication buildApplication(\n         versionCheckerFactory,\n         Integer.MAX_VALUE,\n         serviceContext,\n-        KsqlSecurityContextBinder::new);\n+        KsqlSecurityContextBinder.createFactory(serviceContext));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ2OTA1OA==", "bodyText": "Is this necessary if we you pass all the require parameters during the construction of the class?", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r364469058", "createdAt": "2020-01-08T22:12:26Z", "author": {"login": "spena"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/context/KsqlSecurityContextBinder.java", "diffHunk": "@@ -31,9 +34,17 @@\n public class KsqlSecurityContextBinder extends AbstractBinder {\n   public KsqlSecurityContextBinder(\n       final KsqlConfig ksqlConfig,\n-      final KsqlSecurityExtension securityExtension\n+      final KsqlSecurityExtension securityExtension,\n+      final ServiceContext serviceContext\n   ) {\n-    KsqlSecurityContextBinderFactory.configure(ksqlConfig, securityExtension);\n+    KsqlSecurityContextBinderFactory.configure(ksqlConfig, securityExtension, serviceContext);\n+  }\n+\n+  public static BiFunction<KsqlConfig, KsqlSecurityExtension, Binder> createFactory(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "683907bb46feec3cc00605417f0b54f963087977", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/683907bb46feec3cc00605417f0b54f963087977", "committedDate": "2020-01-08T22:47:26Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/e00cbe4e15635d0d5a7852c45d0e20ca5774bf4b", "committedDate": "2020-01-08T21:49:44Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}, "afterCommit": {"oid": "683907bb46feec3cc00605417f0b54f963087977", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/683907bb46feec3cc00605417f0b54f963087977", "committedDate": "2020-01-08T22:47:26Z", "message": "perf: Improves pull query performance by making the schema registry client a singleton."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjAyMzMw", "url": "https://github.com/confluentinc/ksql/pull/4216#pullrequestreview-340202330", "createdAt": "2020-01-08T23:04:25Z", "commit": {"oid": "683907bb46feec3cc00605417f0b54f963087977"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzowNDoyNlrOFbmjgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQyMzowNTo1OFrOFbmlaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4NzU1Mw==", "bodyText": "Oops, I didn't mean to remove it. This is the tricky line but easy to fix. The ServiceContext must be closed only when a default is not used (so it is created in the last line of the provide method).\nIt can be fixed by keeping a boolean flag to track if the getServiceContext() can be closed or not. Perhapsa variable like mustClose to False when the defaultServiceContext is used?", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r364487553", "createdAt": "2020-01-08T23:04:26Z", "author": {"login": "spena"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/context/KsqlSecurityContextBinderFactory.java", "diffHunk": "@@ -108,6 +104,5 @@ public KsqlSecurityContext provide() {\n \n   @Override\n   public void dispose(final KsqlSecurityContext ksqlSecurityContext) {\n-    ksqlSecurityContext.getServiceContext().close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683907bb46feec3cc00605417f0b54f963087977"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDQ4ODA0MQ==", "bodyText": "Is this safe to remove? I think it was added to mock some unit tests. If they're passing, then I'm good with this, but if not, then you might need to return it.", "url": "https://github.com/confluentinc/ksql/pull/4216#discussion_r364488041", "createdAt": "2020-01-08T23:05:58Z", "author": {"login": "spena"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/KsqlRestApplication.java", "diffHunk": "@@ -468,18 +464,15 @@ static KsqlRestApplication buildApplication(\n         restConfig,\n         versionCheckerFactory,\n         Integer.MAX_VALUE,\n-        serviceContext,\n-        KsqlSecurityContextBinder::new);\n+        serviceContext);\n   }\n \n   static KsqlRestApplication buildApplication(\n       final String metricsPrefix,\n       final KsqlRestConfig restConfig,\n       final Function<Supplier<Boolean>, VersionCheckerAgent> versionCheckerFactory,\n       final int maxStatementRetries,\n-      final ServiceContext serviceContext,\n-      final BiFunction<KsqlConfig, KsqlSecurityExtension, Binder> serviceContextBinderFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "683907bb46feec3cc00605417f0b54f963087977"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ec856d027ad873643d97f663c447fefde778e2b", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/2ec856d027ad873643d97f663c447fefde778e2b", "committedDate": "2020-01-09T01:50:21Z", "message": "Turned it back to not have singleton ServiceContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a306b10c09b73ab0f1f687bacf5df4851bf1bb", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/f0a306b10c09b73ab0f1f687bacf5df4851bf1bb", "committedDate": "2020-01-09T02:22:55Z", "message": "Reverts it for WSQueryEndpoint too"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNjc5Nzgz", "url": "https://github.com/confluentinc/ksql/pull/4216#pullrequestreview-340679783", "createdAt": "2020-01-09T17:09:28Z", "commit": {"oid": "f0a306b10c09b73ab0f1f687bacf5df4851bf1bb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 187, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}