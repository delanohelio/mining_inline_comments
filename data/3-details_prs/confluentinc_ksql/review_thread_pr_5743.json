{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzcwMDUy", "number": 5743, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjowMDo1M1rOEKkgzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjowMDo1M1rOEKkgzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NTE5NDM3OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNjowMDo1M1rOGrsFyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzowODoxM1rOGu8KNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA==", "bodyText": "it seems that for create stream previously we were using the default for the cluster, but now we've changed that to explicitly specify delete. Is that correct/desired?", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r448464330", "createdAt": "2020-07-01T16:00:53Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ5ODgwMg==", "bodyText": "The default is delete: https://kafka.apache.org/documentation/#cleanup.policy\nI thought explicitly specifying the policy was cleaner than having empty vs non-empty maps, but if there are situations you're concerned about in terms of correctness we should definitely investigate / return to passing empty maps.", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r448498802", "createdAt": "2020-07-01T17:01:15Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA=="}, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUwMzM2Mg==", "bodyText": "Something to check is to see if the CREATE STREAM code path will change the config of a topic to delete if it already exists. Another thing to consider if it's possible (though I wouldn't understand why anyone would do this) to change the default for the cluster for cleanup.policy. If neither of these are a real concern, then I'm happy making it explicit", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r448503362", "createdAt": "2020-07-01T17:10:17Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA=="}, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5Njc2Ng==", "bodyText": "Turns out it's possible to change the default cleanup.policy using the broker config log.cleanup.policy. I've switched this PR back to specifying empty configs in the case of streams in order to avoid a breaking change, but this behavior (using the default for streams and forcing tables to be compacted) feels weird to me. Is it preferable to use the broker default for streams, rather than specifying delete?", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r451196766", "createdAt": "2020-07-07T23:20:55Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA=="}, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE5OTMzMA==", "bodyText": "Good question, there's definitely a strong argument toward forcing delete for streams... I could be convinced either way, perhaps now I'm actually leaning a little bit toward your original code.", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r451199330", "createdAt": "2020-07-07T23:29:00Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA=="}, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MzMzMw==", "bodyText": "OK, I'll go with the original then.\nRegarding your other question:\n\nSomething to check is to see if the CREATE STREAM code path will change the config of a topic to delete if it already exists.\n\nThis never happens since the KafkaTopicClient does not update topics if they exist. (It also doesn't even validate the cleanup policy, only number of replicas and partitions: \n  \n    \n      ksql/ksqldb-engine/src/main/java/io/confluent/ksql/services/KafkaTopicClientImpl.java\n    \n    \n         Line 96\n      in\n      220f7aa\n    \n    \n    \n    \n\n        \n          \n           validateTopicProperties(topic, numPartitions, replicationFactor); \n        \n    \n  \n\n)", "url": "https://github.com/confluentinc/ksql/pull/5743#discussion_r451873333", "createdAt": "2020-07-08T23:08:13Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -175,13 +183,12 @@ public TopicCreateInjector(\n \n   private TopicProperties createTopic(\n       final Builder topicPropertiesBuilder,\n-      final boolean shouldCompactTopic\n+      final String topicCleanUpPolicy\n   ) {\n     final TopicProperties info = topicPropertiesBuilder.build();\n \n-    final Map<String, ?> config = shouldCompactTopic\n-        ? ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_COMPACT)\n-        : Collections.emptyMap();\n+    final Map<String, ?> config =\n+        ImmutableMap.of(TopicConfig.CLEANUP_POLICY_CONFIG, topicCleanUpPolicy);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQ2NDMzMA=="}, "originalCommit": {"oid": "0d656012fa67e01c969db4cb6b7334137832e35c"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3261, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}