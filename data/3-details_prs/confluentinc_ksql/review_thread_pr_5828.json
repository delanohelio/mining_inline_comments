{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTgwMjg2", "number": 5828, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDo0MDowOVrOEOezfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0NDoyM1rOEOvpyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjIwMjIyOnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-clients/java-client.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMDo0MDowOVrOGxqHCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwMDozNTo0N1rOGzBZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzMzOA==", "bodyText": "This example currently suffers from the same issue as the regular (CLI-based) version of the tutorial, and will need the corresponding update applied: #5827", "url": "https://github.com/confluentinc/ksql/pull/5828#discussion_r454723338", "createdAt": "2020-07-15T00:40:09Z", "author": {"login": "vcrfxia"}, "path": "docs/developer-guide/ksqldb-clients/java-client.md", "diffHunk": "@@ -466,6 +740,53 @@ CompletableFuture<Void> allInsertsFuture =\n allInsertsFuture.thenRun(() -> System.out.println(\"Seeded transaction events.\"));\n ```\n \n+Create the anomalies tables:\n+\n+```java\n+String sql = \"CREATE TABLE possible_anomalies WITH (\"\n+             + \"    kafka_topic = 'possible_anomalies',\"\n+             + \"    VALUE_AVRO_SCHEMA_FULL_NAME = 'io.ksqldb.tutorial.PossibleAnomaly'\"\n+             + \")   AS\"\n+             + \"    SELECT card_number AS `card_number_key`,\"\n+             + \"           as_value(card_number) AS `card_number`,\"\n+             + \"           latest_by_offset(email_address) AS `email_address`,\"\n+             + \"           count(*) AS `n_attempts`,\"\n+             + \"           sum(amount) AS `total_amount`,\"\n+             + \"           collect_list(tx_id) AS `tx_ids`,\"\n+             + \"           WINDOWSTART as `start_boundary`,\"\n+             + \"           WINDOWEND as `end_boundary`\"\n+             + \"    FROM transactions\"\n+             + \"    WINDOW TUMBLING (SIZE 30 SECONDS)\"\n+             + \"    GROUP BY card_number\"\n+             + \"    HAVING count(*) >= 3\"\n+             + \"    EMIT CHANGES;\";\n+Map<String, Object> properties = Collections.singletonMap(\"auto.offset.reset\", \"earliest\");\n+client.executeStatement(sql, properties).get();\n+```\n+\n+Check contents of the anomalies table with a push query:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35765c0165874204ac5a9329e45fb164832d696d"}, "originalPosition": 369}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjE1MzM4MQ==", "bodyText": "Updated the PR with the same fix as in #5840, so this is now resolved.", "url": "https://github.com/confluentinc/ksql/pull/5828#discussion_r456153381", "createdAt": "2020-07-17T00:35:47Z", "author": {"login": "vcrfxia"}, "path": "docs/developer-guide/ksqldb-clients/java-client.md", "diffHunk": "@@ -466,6 +740,53 @@ CompletableFuture<Void> allInsertsFuture =\n allInsertsFuture.thenRun(() -> System.out.println(\"Seeded transaction events.\"));\n ```\n \n+Create the anomalies tables:\n+\n+```java\n+String sql = \"CREATE TABLE possible_anomalies WITH (\"\n+             + \"    kafka_topic = 'possible_anomalies',\"\n+             + \"    VALUE_AVRO_SCHEMA_FULL_NAME = 'io.ksqldb.tutorial.PossibleAnomaly'\"\n+             + \")   AS\"\n+             + \"    SELECT card_number AS `card_number_key`,\"\n+             + \"           as_value(card_number) AS `card_number`,\"\n+             + \"           latest_by_offset(email_address) AS `email_address`,\"\n+             + \"           count(*) AS `n_attempts`,\"\n+             + \"           sum(amount) AS `total_amount`,\"\n+             + \"           collect_list(tx_id) AS `tx_ids`,\"\n+             + \"           WINDOWSTART as `start_boundary`,\"\n+             + \"           WINDOWEND as `end_boundary`\"\n+             + \"    FROM transactions\"\n+             + \"    WINDOW TUMBLING (SIZE 30 SECONDS)\"\n+             + \"    GROUP BY card_number\"\n+             + \"    HAVING count(*) >= 3\"\n+             + \"    EMIT CHANGES;\";\n+Map<String, Object> properties = Collections.singletonMap(\"auto.offset.reset\", \"earliest\");\n+client.executeStatement(sql, properties).get();\n+```\n+\n+Check contents of the anomalies table with a push query:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDcyMzMzOA=="}, "originalCommit": {"oid": "35765c0165874204ac5a9329e45fb164832d696d"}, "originalPosition": 369}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODk2MjY1OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-clients/java-client.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0NDoyM1rOGyEPTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTo0NDoyM1rOGyEPTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE1MTQzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Starting with ksqlDB 0.11.0, the `streamInserts()` method allows client apps to insert new rows of\n          \n          \n            \n            Starting with ksqlDB 0.11.0, the `streamInserts()` method enables client apps to insert new rows of", "url": "https://github.com/confluentinc/ksql/pull/5828#discussion_r455151439", "createdAt": "2020-07-15T15:44:23Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-clients/java-client.md", "diffHunk": "@@ -389,12 +398,277 @@ KsqlObject row = new KsqlObject()\n client.insertInto(\"ORDERS\", row).get();\n ```\n \n-Tutorial Examples\n------------------\n+Insert new rows in a streaming fashion (streamInserts())<a name=\"stream-inserts\"></a>\n+-------------------------------------------------------------------------------------\n+\n+Starting with ksqlDB 0.11.0, the `streamInserts()` method allows client apps to insert new rows of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fed99a20f22d3051e03fbe9f96bb01d1a8b6e553"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3133, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}