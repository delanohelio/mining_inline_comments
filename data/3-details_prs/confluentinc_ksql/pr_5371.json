{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzQ4OTY0", "number": 5371, "title": "feat(client): support push query termination in Java client", "bodyText": "Description\n^ via the /close-query endpoint. This PR also adds a test to check that StreamedQueryResult objects are properly completed when the underlying query is terminated.\nTesting done\nUnit tests.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-05-15T03:03:32Z", "url": "https://github.com/confluentinc/ksql/pull/5371", "merged": true, "mergeCommit": {"oid": "62dacca7efc8fc2a4202c69caa58596051c67fee"}, "closed": true, "closedAt": "2020-05-16T23:54:27Z", "author": {"login": "vcrfxia"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchZHi1gH2gAyNDE4MzQ4OTY0OjUyZThhMWQ5ZDIyNTQyYmYzMjFlMGNmZWVmZWNkMjMwMzAwMzgwNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABch74TmgH2gAyNDE4MzQ4OTY0OmNhMjcyYTE5YjI4NmJiODJlZDlmOTFhMTJmYTMzNGU4NTljN2U3NWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/52e8a1d9d22542bf321e0cfeefecd23030038067", "committedDate": "2020-05-15T03:01:27Z", "message": "feat(client): support push query termination in Java client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDM1NTAy", "url": "https://github.com/confluentinc/ksql/pull/5371#pullrequestreview-412435502", "createdAt": "2020-05-15T08:10:28Z", "commit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwODoxMDoyOFrOGV60sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwODoxNjowMlrOGV6_ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzNzA0MA==", "bodyText": "These methods and the one above seem like overkill - I'd probably just put them in the lambda.", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r425637040", "createdAt": "2020-05-15T08:10:28Z", "author": {"login": "purplefox"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -180,6 +205,23 @@ private HttpClientRequest configureBasicAuth(final HttpClientRequest request) {\n     }\n   }\n \n+  private static <T> void handleSuccessfulQueryResponse(\n+      final HttpClientResponse response,\n+      final CompletableFuture<T> cf,\n+      final ResponseHandlerSupplier<T> responseHandlerSupplier) {\n+    final RecordParser recordParser = RecordParser.newDelimited(\"\\n\", response);\n+    final QueryResponseHandler<T> responseHandler =\n+        responseHandlerSupplier.get(Vertx.currentContext(), recordParser, cf);\n+\n+    recordParser.handler(responseHandler::handleBodyBuffer);\n+    recordParser.endHandler(responseHandler::handleBodyEnd);\n+    recordParser.exceptionHandler(responseHandler::handleException);\n+  }\n+\n+  private static void handleSuccessfulCloseQueryResponse(final CompletableFuture<Void> cf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzODI5Mw==", "bodyText": "Seems odd to pass in both a cf and a Handler to signal back both exceptionally and successful results. Can't the cf do both?", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r425638293", "createdAt": "2020-05-15T08:13:01Z", "author": {"login": "purplefox"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -158,15 +188,10 @@ private HttpClientRequest configureBasicAuth(final HttpClientRequest request) {\n   private static <T> void handleResponse(\n       final HttpClientResponse response,\n       final CompletableFuture<T> cf,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzOTg0Mw==", "bodyText": "I don't think you need to pass in successfulResponseHandler here, you can just call cf.thenAccept(this::successfulResponseHandler) (or similar) in this method.", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r425639843", "createdAt": "2020-05-15T08:16:02Z", "author": {"login": "purplefox"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -133,22 +139,46 @@ public void close() {\n       final Map<String, Object> properties,\n       final ResponseHandlerSupplier<T> responseHandlerSupplier\n   ) {\n-\n     final JsonObject requestBody = new JsonObject().put(\"sql\", sql).put(\"properties\", properties);\n \n     final CompletableFuture<T> cf = new CompletableFuture<>();\n+    makeRequest(\n+        \"/query-stream\",\n+        requestBody,\n+        cf,\n+        response -> handleSuccessfulQueryResponse(response, cf, responseHandlerSupplier)\n+    );\n+\n+    return cf;\n+  }\n+\n+  private CompletableFuture<Void> makeCloseQueryRequest(final String queryId) {\n+    final CompletableFuture<Void> cf = new CompletableFuture<>();\n+\n+    makeRequest(\n+        \"/close-query\",\n+        new JsonObject().put(\"queryId\", queryId),\n+        cf,\n+        response -> handleSuccessfulCloseQueryResponse(cf)\n+    );\n+\n+    return cf;\n+  }\n \n+  private <T> void makeRequest(\n+      final String path,\n+      final JsonObject requestBody,\n+      final CompletableFuture<T> cf,\n+      final Handler<HttpClientResponse> successfulResponseHandler) {\n     HttpClientRequest request = httpClient.request(HttpMethod.POST,\n         serverSocketAddress, clientOptions.getPort(), clientOptions.getHost(),\n-        \"/query-stream\",\n-        response -> handleResponse(response, cf, responseHandlerSupplier))\n+        path,\n+        response -> handleResponse(response, cf, successfulResponseHandler))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e49c9f876b551f03e633866fd11a17661886496", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/8e49c9f876b551f03e633866fd11a17661886496", "committedDate": "2020-05-16T04:02:21Z", "message": "refactor: make ClientImpl more readable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDQ1MTEw", "url": "https://github.com/confluentinc/ksql/pull/5371#pullrequestreview-413045110", "createdAt": "2020-05-16T04:03:50Z", "commit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNDowMzo1MFrOGWYBpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwNDowNDozNlrOGWYByA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNTQ5NA==", "bodyText": "Not quite. The CompletableFuture will succeed even if the response status is not 200. The successful response handler is only meant to be called if the response status is 200, else the error handling logic should be called. I realize the way this is currently set up is a bit convoluted, though, so I've refactored it to be more readable.", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r426115494", "createdAt": "2020-05-16T04:03:50Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -133,22 +139,46 @@ public void close() {\n       final Map<String, Object> properties,\n       final ResponseHandlerSupplier<T> responseHandlerSupplier\n   ) {\n-\n     final JsonObject requestBody = new JsonObject().put(\"sql\", sql).put(\"properties\", properties);\n \n     final CompletableFuture<T> cf = new CompletableFuture<>();\n+    makeRequest(\n+        \"/query-stream\",\n+        requestBody,\n+        cf,\n+        response -> handleSuccessfulQueryResponse(response, cf, responseHandlerSupplier)\n+    );\n+\n+    return cf;\n+  }\n+\n+  private CompletableFuture<Void> makeCloseQueryRequest(final String queryId) {\n+    final CompletableFuture<Void> cf = new CompletableFuture<>();\n+\n+    makeRequest(\n+        \"/close-query\",\n+        new JsonObject().put(\"queryId\", queryId),\n+        cf,\n+        response -> handleSuccessfulCloseQueryResponse(cf)\n+    );\n+\n+    return cf;\n+  }\n \n+  private <T> void makeRequest(\n+      final String path,\n+      final JsonObject requestBody,\n+      final CompletableFuture<T> cf,\n+      final Handler<HttpClientResponse> successfulResponseHandler) {\n     HttpClientRequest request = httpClient.request(HttpMethod.POST,\n         serverSocketAddress, clientOptions.getPort(), clientOptions.getHost(),\n-        \"/query-stream\",\n-        response -> handleResponse(response, cf, responseHandlerSupplier))\n+        path,\n+        response -> handleResponse(response, cf, successfulResponseHandler))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzOTg0Mw=="}, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNTUwOA==", "bodyText": "Refactored this to be less convoluted.", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r426115508", "createdAt": "2020-05-16T04:04:06Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -158,15 +188,10 @@ private HttpClientRequest configureBasicAuth(final HttpClientRequest request) {\n   private static <T> void handleResponse(\n       final HttpClientResponse response,\n       final CompletableFuture<T> cf,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzODI5Mw=="}, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjExNTUyOA==", "bodyText": "As above, I've refactored this. Hopefully your concerns have been addressed indirectly.", "url": "https://github.com/confluentinc/ksql/pull/5371#discussion_r426115528", "createdAt": "2020-05-16T04:04:36Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-api-client/src/main/java/io/confluent/ksql/api/client/impl/ClientImpl.java", "diffHunk": "@@ -180,6 +205,23 @@ private HttpClientRequest configureBasicAuth(final HttpClientRequest request) {\n     }\n   }\n \n+  private static <T> void handleSuccessfulQueryResponse(\n+      final HttpClientResponse response,\n+      final CompletableFuture<T> cf,\n+      final ResponseHandlerSupplier<T> responseHandlerSupplier) {\n+    final RecordParser recordParser = RecordParser.newDelimited(\"\\n\", response);\n+    final QueryResponseHandler<T> responseHandler =\n+        responseHandlerSupplier.get(Vertx.currentContext(), recordParser, cf);\n+\n+    recordParser.handler(responseHandler::handleBodyBuffer);\n+    recordParser.endHandler(responseHandler::handleBodyEnd);\n+    recordParser.exceptionHandler(responseHandler::handleException);\n+  }\n+\n+  private static void handleSuccessfulCloseQueryResponse(final CompletableFuture<Void> cf) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTYzNzA0MA=="}, "originalCommit": {"oid": "52e8a1d9d22542bf321e0cfeefecd23030038067"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceeee5b48a18375b115353c1ef83e93b71e63368", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/ceeee5b48a18375b115353c1ef83e93b71e63368", "committedDate": "2020-05-16T06:47:29Z", "message": "Merge branch 'master' into java-client-terminate-query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca272a19b286bb82ed9f91a12fa334e859c7e75f", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/ca272a19b286bb82ed9f91a12fa334e859c7e75f", "committedDate": "2020-05-16T19:31:29Z", "message": "Merge branch 'master' into java-client-terminate-query"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4762, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}