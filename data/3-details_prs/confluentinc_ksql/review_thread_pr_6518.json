{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MjUyODgz", "number": 6518, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToxMVrOExdfsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToyMFrOExdfzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjk4OTI4OnYy", "diffSide": "RIGHT", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToxMVrOHnnjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTozOToxOVrOHoVm2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDQ3MQ==", "bodyText": "Is this just for clarity? this should already refer to PostTopicNode.this here, right?", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304471", "createdAt": "2020-10-24T04:05:11Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java", "diffHunk": "@@ -205,7 +205,7 @@ public PostTopicNode(\n         @Override\n         public void describeTo(final Description description) {\n           try {\n-            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(this));\n+            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(PostTopicNode.this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7afe4f60be13be149390ccd71440394b117905"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1OTA5OQ==", "bodyText": "no, this is within the Matcher anonymous class. I need to use PostTopicNode.this to refer to the outer wrapper (non-anon) class", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r512059099", "createdAt": "2020-10-26T15:39:19Z", "author": {"login": "agavra"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/PostConditionsNode.java", "diffHunk": "@@ -205,7 +205,7 @@ public PostTopicNode(\n         @Override\n         public void describeTo(final Description description) {\n           try {\n-            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(this));\n+            description.appendText(TestJsonMapper.INSTANCE.get().writeValueAsString(PostTopicNode.this));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDQ3MQ=="}, "originalCommit": {"oid": "4f7afe4f60be13be149390ccd71440394b117905"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjk4OTQ1OnYy", "diffSide": "RIGHT", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToxN1rOHnnjOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTozOTo0MlrOHoVoCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUwNA==", "bodyText": "How come we're making JSON_SR available by default, given that AVRO still isn't enabled by default? Aren't both blocked on the same additional testing for joins?\nAlso, what's the point of having \"ksql.key.format.enabled\": true in the new QTTs (with primitive keys) if we're enabling this by default?", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304504", "createdAt": "2020-10-24T04:05:17Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java", "diffHunk": "@@ -25,7 +25,8 @@\n       FormatFactory.NONE,\n       FormatFactory.KAFKA,\n       FormatFactory.DELIMITED,\n-      FormatFactory.JSON\n+      FormatFactory.JSON,\n+      FormatFactory.JSON_SR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7afe4f60be13be149390ccd71440394b117905"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA1OTQwMQ==", "bodyText": "\ud83e\udd26 this is me not being careful. Thank you for checking this", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r512059401", "createdAt": "2020-10-26T15:39:42Z", "author": {"login": "agavra"}, "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/KeyFormatUtils.java", "diffHunk": "@@ -25,7 +25,8 @@\n       FormatFactory.NONE,\n       FormatFactory.KAFKA,\n       FormatFactory.DELIMITED,\n-      FormatFactory.JSON\n+      FormatFactory.JSON,\n+      FormatFactory.JSON_SR", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUwNA=="}, "originalCommit": {"oid": "4f7afe4f60be13be149390ccd71440394b117905"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMjk4OTU4OnYy", "diffSide": "RIGHT", "path": "ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToyMFrOHnnjUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNDowNToyMFrOHnnjUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMwNDUzMQ==", "bodyText": "nit: I'm with @big-andy-coates on preferring tests simply have throws Exception so we don't need to worry about keeping lists of exceptions up to date. I don't think seeing the specific exceptions is insightful either.", "url": "https://github.com/confluentinc/ksql/pull/6518#discussion_r511304531", "createdAt": "2020-10-24T04:05:20Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-serde/src/test/java/io/confluent/ksql/serde/json/KsqlJsonSerializerTest.java", "diffHunk": "@@ -233,7 +236,7 @@ public void shouldHandleNestedStruct() throws IOException {\n   }\n \n   @Test\n-  public void shouldSerializeBoolean() {\n+  public void shouldSerializeBoolean() throws IOException, RestClientException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f7afe4f60be13be149390ccd71440394b117905"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2566, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}