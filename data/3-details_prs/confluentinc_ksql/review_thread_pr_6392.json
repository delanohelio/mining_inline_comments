{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNTc2NzI2", "number": 6392, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1OTowNFrOEsHBDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1OTo0M1rOEsHCIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Njg3NzU3OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1OTowNFrOHfP2_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyNzowNlrOHf6s1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNzc0MQ==", "bodyText": "did you mean to return here?", "url": "https://github.com/confluentinc/ksql/pull/6392#discussion_r502527741", "createdAt": "2020-10-09T15:59:04Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "diffHunk": "@@ -189,6 +191,30 @@ private void analyzeNonStdOutSink(final Sink sink) {\n           .setInto(Into.newSink(sink.getName(), topicName, windowInfo, keyFmtInfo, valueFmtInfo));\n     }\n \n+    private FormatInfo buildKeyFormatInfo(\n+        final Optional<String> explicitFormat,\n+        final Map<String, String> formatProperties,\n+        final FormatInfo sourceFormat\n+    ) {\n+      final boolean partitioningByNull = analysis.getPartitionBy()\n+          .map(pb -> pb.getExpression() instanceof NullLiteral)\n+          .orElse(false);\n+\n+      if (partitioningByNull) {\n+        final boolean nonNoneExplicitFormat = explicitFormat\n+            .map(fmt -> !fmt.equalsIgnoreCase(NoneFormat.NAME))\n+            .orElse(false);\n+\n+        if (nonNoneExplicitFormat) {\n+          throw new KsqlException(\"Key format specified for stream without key columns.\");\n+        }\n+\n+        FormatInfo.of(NoneFormat.NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ea7d17c581cd988cc8cee9b00a76dd0d530021"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyOTY1NQ==", "bodyText": "Yup!", "url": "https://github.com/confluentinc/ksql/pull/6392#discussion_r503229655", "createdAt": "2020-10-12T11:27:06Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "diffHunk": "@@ -189,6 +191,30 @@ private void analyzeNonStdOutSink(final Sink sink) {\n           .setInto(Into.newSink(sink.getName(), topicName, windowInfo, keyFmtInfo, valueFmtInfo));\n     }\n \n+    private FormatInfo buildKeyFormatInfo(\n+        final Optional<String> explicitFormat,\n+        final Map<String, String> formatProperties,\n+        final FormatInfo sourceFormat\n+    ) {\n+      final boolean partitioningByNull = analysis.getPartitionBy()\n+          .map(pb -> pb.getExpression() instanceof NullLiteral)\n+          .orElse(false);\n+\n+      if (partitioningByNull) {\n+        final boolean nonNoneExplicitFormat = explicitFormat\n+            .map(fmt -> !fmt.equalsIgnoreCase(NoneFormat.NAME))\n+            .orElse(false);\n+\n+        if (nonNoneExplicitFormat) {\n+          throw new KsqlException(\"Key format specified for stream without key columns.\");\n+        }\n+\n+        FormatInfo.of(NoneFormat.NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyNzc0MQ=="}, "originalCommit": {"oid": "d5ea7d17c581cd988cc8cee9b00a76dd0d530021"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Njg4MDMyOnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo1OTo0M1rOHfP4mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMToyNjo1MFrOHf6sXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyODE1NQ==", "bodyText": "why is this an error? can't I have null keys with non-NONE formats?", "url": "https://github.com/confluentinc/ksql/pull/6392#discussion_r502528155", "createdAt": "2020-10-09T15:59:43Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "diffHunk": "@@ -189,6 +191,30 @@ private void analyzeNonStdOutSink(final Sink sink) {\n           .setInto(Into.newSink(sink.getName(), topicName, windowInfo, keyFmtInfo, valueFmtInfo));\n     }\n \n+    private FormatInfo buildKeyFormatInfo(\n+        final Optional<String> explicitFormat,\n+        final Map<String, String> formatProperties,\n+        final FormatInfo sourceFormat\n+    ) {\n+      final boolean partitioningByNull = analysis.getPartitionBy()\n+          .map(pb -> pb.getExpression() instanceof NullLiteral)\n+          .orElse(false);\n+\n+      if (partitioningByNull) {\n+        final boolean nonNoneExplicitFormat = explicitFormat\n+            .map(fmt -> !fmt.equalsIgnoreCase(NoneFormat.NAME))\n+            .orElse(false);\n+\n+        if (nonNoneExplicitFormat) {\n+          throw new KsqlException(\"Key format specified for stream without key columns.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ea7d17c581cd988cc8cee9b00a76dd0d530021"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzIyOTUzNA==", "bodyText": "If the key format supports schema inference then it's going to blow up later when trying to build the schema for the key.", "url": "https://github.com/confluentinc/ksql/pull/6392#discussion_r503229534", "createdAt": "2020-10-12T11:26:50Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/analyzer/Analyzer.java", "diffHunk": "@@ -189,6 +191,30 @@ private void analyzeNonStdOutSink(final Sink sink) {\n           .setInto(Into.newSink(sink.getName(), topicName, windowInfo, keyFmtInfo, valueFmtInfo));\n     }\n \n+    private FormatInfo buildKeyFormatInfo(\n+        final Optional<String> explicitFormat,\n+        final Map<String, String> formatProperties,\n+        final FormatInfo sourceFormat\n+    ) {\n+      final boolean partitioningByNull = analysis.getPartitionBy()\n+          .map(pb -> pb.getExpression() instanceof NullLiteral)\n+          .orElse(false);\n+\n+      if (partitioningByNull) {\n+        final boolean nonNoneExplicitFormat = explicitFormat\n+            .map(fmt -> !fmt.equalsIgnoreCase(NoneFormat.NAME))\n+            .orElse(false);\n+\n+        if (nonNoneExplicitFormat) {\n+          throw new KsqlException(\"Key format specified for stream without key columns.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUyODE1NQ=="}, "originalCommit": {"oid": "d5ea7d17c581cd988cc8cee9b00a76dd0d530021"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2683, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}