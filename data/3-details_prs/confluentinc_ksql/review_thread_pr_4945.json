{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MTY5MTY5", "number": 4945, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDozNTozN1rODtVdkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDozNTo1NVrODtVdww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODY0MTQ3OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/auth/AuthenticationPluginHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDozNTozN1rOF-s7Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo0ODowNVrOF--95g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjAzOQ==", "bodyText": "Replace this with String.join(\",\", unauthenticatedPaths)?", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401292039", "createdAt": "2020-04-01T00:35:37Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/auth/AuthenticationPluginHandler.java", "diffHunk": "@@ -40,25 +43,38 @@\n \n   private final Server server;\n   private final AuthenticationPlugin securityHandlerPlugin;\n-  private final Set<String> unauthenticatedPaths = new HashSet<>();\n+\n+  private final Pattern unauthedPathsPattern;\n \n   public AuthenticationPluginHandler(final Server server,\n       final AuthenticationPlugin securityHandlerPlugin) {\n     this.server = Objects.requireNonNull(server);\n     this.securityHandlerPlugin = Objects.requireNonNull(securityHandlerPlugin);\n     // We add in all the paths that don't require authorization from\n     // KsqlAuthorizationProviderHandler\n-    unauthenticatedPaths.addAll(KsqlAuthorizationProviderHandler.PATHS_WITHOUT_AUTHORIZATION);\n+    final Set<String> unauthenticatedPaths = new HashSet<>(\n+        KsqlAuthorizationProviderHandler.PATHS_WITHOUT_AUTHORIZATION);\n     // And then we add anything from the property authentication.skip.paths\n     // This preserves the behaviour from the previous Jetty based implementation\n     final List<String> unauthed = server.getConfig()\n         .getList(ApiServerConfig.AUTHENTICATION_SKIP_PATHS_CONFIG);\n     unauthenticatedPaths.addAll(unauthed);\n+    final StringBuilder pathBuilder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4NzY4Ng==", "bodyText": "I missed have missed this method when it came out in Java 8, nice pointer :)", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401587686", "createdAt": "2020-04-01T12:48:05Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/auth/AuthenticationPluginHandler.java", "diffHunk": "@@ -40,25 +43,38 @@\n \n   private final Server server;\n   private final AuthenticationPlugin securityHandlerPlugin;\n-  private final Set<String> unauthenticatedPaths = new HashSet<>();\n+\n+  private final Pattern unauthedPathsPattern;\n \n   public AuthenticationPluginHandler(final Server server,\n       final AuthenticationPlugin securityHandlerPlugin) {\n     this.server = Objects.requireNonNull(server);\n     this.securityHandlerPlugin = Objects.requireNonNull(securityHandlerPlugin);\n     // We add in all the paths that don't require authorization from\n     // KsqlAuthorizationProviderHandler\n-    unauthenticatedPaths.addAll(KsqlAuthorizationProviderHandler.PATHS_WITHOUT_AUTHORIZATION);\n+    final Set<String> unauthenticatedPaths = new HashSet<>(\n+        KsqlAuthorizationProviderHandler.PATHS_WITHOUT_AUTHORIZATION);\n     // And then we add anything from the property authentication.skip.paths\n     // This preserves the behaviour from the previous Jetty based implementation\n     final List<String> unauthed = server.getConfig()\n         .getList(ApiServerConfig.AUTHENTICATION_SKIP_PATHS_CONFIG);\n     unauthenticatedPaths.addAll(unauthed);\n+    final StringBuilder pathBuilder = new StringBuilder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjAzOQ=="}, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODY0MTU0OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDozNTozOVrOF-s7EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo0OTowNlrOF-_AXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjA0OA==", "bodyText": "typo:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \"Comma separated of paths where authentication is not required. Wildcards are supported.\";\n          \n          \n            \n                  \"Comma separated list of paths where authentication is not required. Wildcards are supported.\";", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401292048", "createdAt": "2020-04-01T00:35:39Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "diffHunk": "@@ -95,7 +95,7 @@\n   public static final String AUTHENTICATION_SKIP_PATHS_CONFIG = propertyName(\n       \"authentication.skip.paths\");\n   public static final String AUTHENTICATION_SKIP_PATHS_DOC =\n-      \"List of paths where authentication is not required.\";\n+      \"Comma separated of paths where authentication is not required. Wildcards are supported.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4ODMxOA==", "bodyText": "ack", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401588318", "createdAt": "2020-04-01T12:49:06Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ApiServerConfig.java", "diffHunk": "@@ -95,7 +95,7 @@\n   public static final String AUTHENTICATION_SKIP_PATHS_CONFIG = propertyName(\n       \"authentication.skip.paths\");\n   public static final String AUTHENTICATION_SKIP_PATHS_DOC =\n-      \"List of paths where authentication is not required.\";\n+      \"Comma separated of paths where authentication is not required. Wildcards are supported.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjA0OA=="}, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODY0MTk1OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/api/AuthTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMDozNTo1NVrOF-s7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1MDoxN1rOF-_DQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjExMA==", "bodyText": "typo:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldAllowQueryWithSecurityPluginRejectingIfInAuthedPathsWithWildcard()\n          \n          \n            \n              public void shouldAllowQueryWithSecurityPluginRejectingIfInUnauthedPathsWithWildcard()", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401292110", "createdAt": "2020-04-01T00:35:55Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/api/AuthTest.java", "diffHunk": "@@ -302,6 +302,14 @@ public void shouldAllowQueryWithSecurityPluginRejectingIfInAuthedPaths() throws\n         super::shouldExecutePullQuery, false, false);\n   }\n \n+  @Test\n+  public void shouldAllowQueryWithSecurityPluginRejectingIfInAuthedPathsWithWildcard()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4OTA1OA==", "bodyText": "Ack", "url": "https://github.com/confluentinc/ksql/pull/4945#discussion_r401589058", "createdAt": "2020-04-01T12:50:17Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/api/AuthTest.java", "diffHunk": "@@ -302,6 +302,14 @@ public void shouldAllowQueryWithSecurityPluginRejectingIfInAuthedPaths() throws\n         super::shouldExecutePullQuery, false, false);\n   }\n \n+  @Test\n+  public void shouldAllowQueryWithSecurityPluginRejectingIfInAuthedPathsWithWildcard()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTI5MjExMA=="}, "originalCommit": {"oid": "1f5de09440be949dc349a8045c57d2821816426a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}