{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODI2OTUx", "number": 5989, "title": "test: capture serde options and all sources in QTT historic plans", "bodyText": "Description\nQTT historic plans currently capture value schemas for sources in the \"schemas\" field of the saved specs, but key schemas are not captured (unless part of the post conditions in the test itself). This PR captures key schemas by adding all sources into the post conditions in the saved spec, and also adding serde options into SourceNode in order to capture not just the logical schema but also how schemas are serialized.\nReview commit by commit:\n\n\"add serde options to QTT SourceNode\": QTT tests can now (optionally) specify the set of expected serde options associated with a source, and the test will fail if the actual set of serde options differs from expected\n\"write all sources into QTT historic plan post conditions\": similar to how all topics are written into the post conditions, all sources are now written in as well\n\"fix PlannedTestLoader to properly filter on whitelist\": if a value was provided for -Dksql.test.files, only the latest version (and no historic tests) were run by QTT due to a bad filter. This minor commit fixes the issue with how the flag was handled for historic tests.\n\"fix model tester to properly catch serialization errors\": JSON serialization of the new serdeOptions field in SourceNode wasn't properly distinguishing between empty Optional and Optional of an empty set. One of the unit tests added passed even though it should have failed. This commit fixes the model tester so the test fails as it should.\n\"fix error exposed from newly failing test after previous commit\": fixes the failing test from above\n\"chore: update historical plan specs\": regenerate existing historic plan specs to include all sources in the post conditions\n\nPartially addresses #4752 -- doesn't include key schemas for intermediary topics, though. Will open another PR for that.\nTesting done\nTests pass.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-08-12T14:57:23Z", "url": "https://github.com/confluentinc/ksql/pull/5989", "merged": true, "mergeCommit": {"oid": "2567d92ddde7bfe149843e6a2449401a07fd985a"}, "closed": true, "closedAt": "2020-08-18T01:38:48Z", "author": {"login": "vcrfxia"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc993oRAH2gAyNDY2ODI2OTUxOjUxMGFlMmNhNzQzOGNkNWZhNTdmM2RmYmEzZDY4YzBjMTYxY2MyYjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_5Cu0gH2gAyNDY2ODI2OTUxOmFlOTc2ZjcwZjA4YTU0ZDQwOWQxNDk2ZDczMDVhZTY0NGY2NDc4MjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "510ae2ca7438cd5fa57f3dfba3d68c0c161cc2b2", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/510ae2ca7438cd5fa57f3dfba3d68c0c161cc2b2", "committedDate": "2020-08-11T21:40:26Z", "message": "test: add serde options to QTT SourceNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02ad827f92f2e42018e4a5e79170c54dd62af6c0", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/02ad827f92f2e42018e4a5e79170c54dd62af6c0", "committedDate": "2020-08-12T02:28:28Z", "message": "test: write all sources into QTT historic plan post conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7bd7db2d44a1a2da174a00d6d24b357681cf154", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/a7bd7db2d44a1a2da174a00d6d24b357681cf154", "committedDate": "2020-08-12T13:00:29Z", "message": "test: fix PlannedTestLoader to properly filter on whitelist"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de7ecb8786086905e5dc59d5060247114403b88", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/4de7ecb8786086905e5dc59d5060247114403b88", "committedDate": "2020-08-12T13:25:53Z", "message": "test: fix model tester to properly catch serialization errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c58b94efcedbd01f04138576df7dad84da2078", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/c8c58b94efcedbd01f04138576df7dad84da2078", "committedDate": "2020-08-12T13:32:38Z", "message": "test: fix error exposed from newly failing test after previous commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250f296157119612a22b9ab2d3c68479d7d489b4", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/250f296157119612a22b9ab2d3c68479d7d489b4", "committedDate": "2020-08-12T14:28:27Z", "message": "chore: update historical plan specs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b3b154ea9ba76ca1f45751248be000bfa198441", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/2b3b154ea9ba76ca1f45751248be000bfa198441", "committedDate": "2020-08-12T14:39:35Z", "message": "chore: checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDA4Mzgy", "url": "https://github.com/confluentinc/ksql/pull/5989#pullrequestreview-466008382", "createdAt": "2020-08-12T15:06:02Z", "commit": {"oid": "c8c58b94efcedbd01f04138576df7dad84da2078"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowNjowM1rOG_lmRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowNjowM1rOG_lmRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyOTQ3OA==", "bodyText": "More normal to put the annotation on the getter when there is a getter method.", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469329478", "createdAt": "2020-08-12T15:06:03Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/SourceNode.java", "diffHunk": "@@ -49,6 +50,7 @@\n   private final String type;\n   private final Optional<String> schema;\n   private final Optional<KeyFormatNode> keyFormat;\n+  @JsonInclude(JsonInclude.Include.NON_EMPTY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c58b94efcedbd01f04138576df7dad84da2078"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDExMTQ2", "url": "https://github.com/confluentinc/ksql/pull/5989#pullrequestreview-466011146", "createdAt": "2020-08-12T15:08:56Z", "commit": {"oid": "2b3b154ea9ba76ca1f45751248be000bfa198441"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowODo1NlrOG_lupg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNTowODo1NlrOG_lupg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMTYyMg==", "bodyText": "It's a bit odd to combine the additional sources (list of all sources from metastore) with the test-provided post condition sources, since the former should be a superset of the latter or else the test will fail. This is the existing pattern for collecting topics into the post conditions, though, so I've maintained it here. cc @big-andy-coates for context on why topics are aggregated like this.", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469331622", "createdAt": "2020-08-12T15:08:56Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/tools/conditions/PostConditions.java", "diffHunk": "@@ -75,29 +77,46 @@ public void verify(\n   }\n \n   public Optional<PostConditionsNode> asNode(\n-      final List<PostTopicNode> additional\n+      final List<PostTopicNode> additionalTopics,\n+      final List<SourceNode> additionalSources\n   ) {\n-    if (this == NONE && additional.isEmpty()) {\n+    if (this == NONE && additionalTopics.isEmpty() && additionalSources.isEmpty()) {\n       return Optional.empty();\n     }\n \n+    return Optional.of(new PostConditionsNode(\n+        withAdditionalSources(additionalSources),\n+        Optional.of(withAdditionalTopics(additionalTopics))\n+    ));\n+  }\n+\n+  private List<SourceNode> withAdditionalSources(final List<SourceNode> additionalSources) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b3b154ea9ba76ca1f45751248be000bfa198441"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDEyNjc3", "url": "https://github.com/confluentinc/ksql/pull/5989#pullrequestreview-466012677", "createdAt": "2020-08-12T15:10:37Z", "commit": {"oid": "250f296157119612a22b9ab2d3c68479d7d489b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMDozN1rOG_lzbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMDozN1rOG_lzbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMjg0Ng==", "bodyText": "I wouldn't expect this serdeOptions to be included if its empty due to the @JsonInclude(JsonInclude.Include.NON_EMPTY annotation.\nDid you maybe generate there before adding annotation?\nMight be worth removing these to avoid changes if someone regenerates later. Plus it will also test the deserialization works when this field is not present.", "url": "https://github.com/confluentinc/ksql/pull/5989#discussion_r469332846", "createdAt": "2020-08-12T15:10:37Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-functional-tests/src/test/resources/historical_plans/array_-_GENERATE_SERIES/5.5.0_1581572083765/spec.json", "diffHunk": "@@ -73,6 +73,23 @@\n     } ],\n     \"statements\" : [ \"CREATE STREAM TEST (F0 INT, F1 INT) WITH (kafka_topic='test_topic', value_format='JSON');\", \"CREATE STREAM OUTPUT AS SELECT GENERATE_SERIES(F0, F1) FROM TEST;\" ],\n     \"post\" : {\n+      \"sources\" : [ {\n+        \"name\" : \"OUTPUT\",\n+        \"type\" : \"STREAM\",\n+        \"schema\" : \"`ROWKEY` STRING KEY, `KSQL_COL_0` ARRAY<INTEGER>\",\n+        \"keyFormat\" : {\n+          \"format\" : \"KAFKA\"\n+        },\n+        \"serdeOptions\" : [ ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "250f296157119612a22b9ab2d3c68479d7d489b4"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDE2Nzc2", "url": "https://github.com/confluentinc/ksql/pull/5989#pullrequestreview-466016776", "createdAt": "2020-08-12T15:15:10Z", "commit": {"oid": "2b3b154ea9ba76ca1f45751248be000bfa198441"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de1af6356428353ff27d55336ef9487f7231bfd", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/9de1af6356428353ff27d55336ef9487f7231bfd", "committedDate": "2020-08-12T20:23:22Z", "message": "test: fix failing unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8aa222564b851a111cbdd5d39d6afed2a2657e", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/9b8aa222564b851a111cbdd5d39d6afed2a2657e", "committedDate": "2020-08-12T20:24:22Z", "message": "chore: feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdfd5f3aa48e1f0f99506045d2356927a270bb83", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/bdfd5f3aa48e1f0f99506045d2356927a270bb83", "committedDate": "2020-08-12T21:10:55Z", "message": "chore: remove unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32697ef9b195da41d6a2a33e80de2230c2ce19c1", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/32697ef9b195da41d6a2a33e80de2230c2ce19c1", "committedDate": "2020-08-12T21:20:08Z", "message": "chore: regenerate specs in light of topic order changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4901db68f0a5efd2d657fd75278be79171deaff0", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/4901db68f0a5efd2d657fd75278be79171deaff0", "committedDate": "2020-08-13T14:32:04Z", "message": "chore: switch back to NON_EMPTY"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f492fbaef2867afedf31c694d5fb16f32fc54fe6", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/f492fbaef2867afedf31c694d5fb16f32fc54fe6", "committedDate": "2020-08-17T16:59:34Z", "message": "Merge branch 'master' into qtt-key-schema-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae976f70f08a54d409d1496d7305ae644f647821", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/ae976f70f08a54d409d1496d7305ae644f647821", "committedDate": "2020-08-17T21:10:53Z", "message": "chore: regenerate specs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4678, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}