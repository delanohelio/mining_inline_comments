{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1NzE4NzY2", "number": 6659, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzozODo0MVrOE8cKqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzozODo0MVrOE8cKqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODExNDk3OnYy", "diffSide": "RIGHT", "path": "ksqldb-udf/src/main/java/io/confluent/ksql/types/KsqlStruct.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzozODo0MVrOH4jqWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0Njo0MFrOH4j2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2NjU4NA==", "bodyText": "I feel like if we're touting efficiency in this class, we should strive not to use optionals to avoid unnecessary wrapping/unwrapping - but that can be change for another time :)", "url": "https://github.com/confluentinc/ksql/pull/6659#discussion_r529066584", "createdAt": "2020-11-23T23:38:41Z", "author": {"login": "agavra"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/types/KsqlStruct.java", "diffHunk": "@@ -35,36 +39,57 @@\n @Immutable\n public final class KsqlStruct {\n \n-  private final SqlStruct schema;\n   @EffectivelyImmutable\n   private final ImmutableList<Optional<?>> values;\n \n   public static Builder builder(final SqlStruct schema) {\n     return new Builder(schema);\n   }\n \n-  private KsqlStruct(\n-      final SqlStruct schema,\n-      final List<Optional<?>> values\n-  ) {\n-    this.schema = Objects.requireNonNull(schema, \"schema\");\n+  private KsqlStruct(final List<Optional<?>> values) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d8afe824f346f700b4febcfb2f51e4604b91e93"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2OTYyMQ==", "bodyText": "I'd be surprised if it made a significant difference.  We'd need to profile to work that out. As you say, one for another day.", "url": "https://github.com/confluentinc/ksql/pull/6659#discussion_r529069621", "createdAt": "2020-11-23T23:46:40Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/types/KsqlStruct.java", "diffHunk": "@@ -35,36 +39,57 @@\n @Immutable\n public final class KsqlStruct {\n \n-  private final SqlStruct schema;\n   @EffectivelyImmutable\n   private final ImmutableList<Optional<?>> values;\n \n   public static Builder builder(final SqlStruct schema) {\n     return new Builder(schema);\n   }\n \n-  private KsqlStruct(\n-      final SqlStruct schema,\n-      final List<Optional<?>> values\n-  ) {\n-    this.schema = Objects.requireNonNull(schema, \"schema\");\n+  private KsqlStruct(final List<Optional<?>> values) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2NjU4NA=="}, "originalCommit": {"oid": "4d8afe824f346f700b4febcfb2f51e4604b91e93"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2446, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}