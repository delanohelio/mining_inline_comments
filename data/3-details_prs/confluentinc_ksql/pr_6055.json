{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTE3Mzc4", "number": 6055, "title": "test: add filters.sql and assert tombstone", "bodyText": "Description\nThis PR does two things:\n\nadd support for tombstone assertions (ASSERT NULL VALUES ... KEY) to the sql testing tool\nadd filters.json to test creating or replacing with regards to filters\n\nTesting done\n\nfilters.json is self-testing\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-08-19T23:45:04Z", "url": "https://github.com/confluentinc/ksql/pull/6055", "merged": true, "mergeCommit": {"oid": "888217a7362f741c3b615dda6a99c8021c3fecd8"}, "closed": true, "closedAt": "2020-08-20T20:10:48Z", "author": {"login": "agavra"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAkamGAH2gAyNDcwNTE3Mzc4OmM3ZGVhYjgwZWI1MDEwNjgxZDRjMWM3NmE4MmU4N2ViMzVhMjhhYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA142dAFqTQ3MTk0NjUzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c7deab80eb5010681d4c1c76a82e87eb35a28ab6", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/c7deab80eb5010681d4c1c76a82e87eb35a28ab6", "committedDate": "2020-08-19T23:42:52Z", "message": "test: add filters.sql and assert tombstone"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/e3f936621b8adc6abba0bbf8d1a071df250f4372", "committedDate": "2020-08-20T00:34:41Z", "message": "chore: remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQyNTM5", "url": "https://github.com/confluentinc/ksql/pull/6055#pullrequestreview-471942539", "createdAt": "2020-08-20T19:58:21Z", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1ODoyMVrOHERPrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1ODoyMVrOHERPrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzODg5NQ==", "bodyText": "Should you assert the value inserted is not available because it does not match the filter? Or, is the insert needed?", "url": "https://github.com/confluentinc/ksql/pull/6055#discussion_r474238895", "createdAt": "2020-08-20T19:58:21Z", "author": {"login": "spena"}, "path": "ksqldb-functional-tests/src/test/resources/sql-tests/query-upgrades/filters.sql", "diffHunk": "@@ -0,0 +1,191 @@\n+-- this file tests adding/removing/changing filters\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: add filter to basic STREAM without filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+ASSERT VALUES b (id, col1) VALUES (1, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, 1);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 1);\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: remove filter from basic STREAM with filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (2, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQzNDc3", "url": "https://github.com/confluentinc/ksql/pull/6055#pullrequestreview-471943477", "createdAt": "2020-08-20T19:59:44Z", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1OTo0NFrOHERSdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTo1OTo0NFrOHERSdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIzOTYwNA==", "bodyText": "Are these really needed if there're no assertions to verify they're not from b?", "url": "https://github.com/confluentinc/ksql/pull/6055#discussion_r474239604", "createdAt": "2020-08-20T19:59:44Z", "author": {"login": "spena"}, "path": "ksqldb-functional-tests/src/test/resources/sql-tests/query-upgrades/filters.sql", "diffHunk": "@@ -0,0 +1,191 @@\n+-- this file tests adding/removing/changing filters\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: add filter to basic STREAM without filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+ASSERT VALUES b (id, col1) VALUES (1, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, 1);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 1);\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: remove filter from basic STREAM with filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (2, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 0);\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: modify filter from basic STREAM with filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQ0NTEz", "url": "https://github.com/confluentinc/ksql/pull/6055#pullrequestreview-471944513", "createdAt": "2020-08-20T20:01:16Z", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQ0ODkz", "url": "https://github.com/confluentinc/ksql/pull/6055#pullrequestreview-471944893", "createdAt": "2020-08-20T20:01:48Z", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDowMTo0OFrOHERWrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDowMTo0OFrOHERWrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI0MDY4NQ==", "bodyText": "is this how it works internally in streams? I didn't know that filtered out values are written as tombstones.", "url": "https://github.com/confluentinc/ksql/pull/6055#discussion_r474240685", "createdAt": "2020-08-20T20:01:48Z", "author": {"login": "spena"}, "path": "ksqldb-functional-tests/src/test/resources/sql-tests/query-upgrades/filters.sql", "diffHunk": "@@ -0,0 +1,191 @@\n+-- this file tests adding/removing/changing filters\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: add filter to basic STREAM without filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+ASSERT VALUES b (id, col1) VALUES (1, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, 1);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 1);\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: remove filter from basic STREAM with filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (2, 0);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 0);\n+\n+----------------------------------------------------------------------------------------------------\n+--@test: modify filter from basic STREAM with filter\n+----------------------------------------------------------------------------------------------------\n+SET 'ksql.create.or.replace.enabled' = 'true';\n+\n+CREATE STREAM a (id INT KEY, col1 INT) WITH (kafka_topic='a', value_format='JSON');\n+CREATE STREAM b AS SELECT * FROM a WHERE col1 > 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, 1);\n+\n+CREATE OR REPLACE STREAM b AS SELECT * FROM a WHERE col1 < 0;\n+\n+INSERT INTO a (id, col1) VALUES (1, 0);\n+INSERT INTO a (id, col1) VALUES (1, -1);\n+\n+ASSERT VALUES b (id, col1) VALUES (1, 1);\n+ASSERT VALUES b (id, col1) VALUES (1, -1);\n+\n+----------------------------------------------------------------------------------------------------\n+-- note that each insert that is filtered out corresponds with a tombstone emitted into\n+-- the topic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxOTQ2NTMw", "url": "https://github.com/confluentinc/ksql/pull/6055#pullrequestreview-471946530", "createdAt": "2020-08-20T20:04:18Z", "commit": {"oid": "e3f936621b8adc6abba0bbf8d1a071df250f4372"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4714, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}