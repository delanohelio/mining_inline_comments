{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMTEzODky", "number": 5730, "title": "fix: make sure old query stream doesn't block on close", "bodyText": "Description\nFixes #5724\nThe ksqlDB CLI currently uses the old query streaming API at /query.\nWhen terminating a query from the CLI, the connection is closed. The close is detected in the QueryStreamWriter poll loop which causes it to flush the OutputStream. This causes a write to be called on the underlying ResponseOutputStream, but because the channel isn't available for writing writeQueueFull() returns true and the thread is blocked until it times out (previously 60 seconds). This means that, previously, if you start and terminate queries quite rapidly, it takes 60 seconds for each ones state to be cleared up on the server.\nThis PR changes the blocking in ResponseOutputStream so it can return more quickly if the stream is closed. It also changes the blocking timeout to 10 minutes, and it changes the server idle timeout to 10 minutes.\nThe old query endpoint had been migrated as is from Jetty to Vert.x. The old code is somewhat complex and this bug arose in the mapping from the synchronous approach taken in the old implementation and the Vert.x asynchronous APIs.\nI'd recommend that the ksqlDB is refactored to use the new query streaming API (e.g. via the new Java client) which does not have these issues, and the old /query API is deprecated.\nTesting done\nNon functional change.\nManually verified.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-06-30T15:34:38Z", "url": "https://github.com/confluentinc/ksql/pull/5730", "merged": true, "mergeCommit": {"oid": "970d19fcfe9cd7a851de7be9972efd4964dff222"}, "closed": true, "closedAt": "2020-07-01T11:48:25Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwXQmsAH2gAyNDQyMTEzODkyOjA3ODlmZGQ0MzVkOGRiNDFlMjQxZjMyYWJjNzljZGIyNTUzM2M0ZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwlMwWAH2gAyNDQyMTEzODkyOjJiYTE2Yjg2YzEzMDg0NDhlYWVhOWQ0NmVhZGRmMmUyYmZjNjI5YjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0789fdd435d8db41e241f32abc79cdb25533c4e6", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/0789fdd435d8db41e241f32abc79cdb25533c4e6", "committedDate": "2020-06-30T15:20:24Z", "message": "fix: make sure old query stream doesn't block on close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bfc8b4b0f6e4305c585e44a03336d02fd7c33ee", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/0bfc8b4b0f6e4305c585e44a03336d02fd7c33ee", "committedDate": "2020-06-30T15:35:12Z", "message": "Change write timeout to 10 mins"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMjA0OTUz", "url": "https://github.com/confluentinc/ksql/pull/5730#pullrequestreview-440204953", "createdAt": "2020-06-30T16:48:20Z", "commit": {"oid": "0bfc8b4b0f6e4305c585e44a03336d02fd7c33ee"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjo0ODoyMVrOGrFfnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjo0ODo0MFrOGrFgag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgzMTk2Nw==", "bodyText": "nit: unnecessary whitespace changes", "url": "https://github.com/confluentinc/ksql/pull/5730#discussion_r447831967", "createdAt": "2020-06-30T16:48:21Z", "author": {"login": "vcrfxia"}, "path": "config/ksql-server.properties", "diffHunk": "@@ -64,11 +64,8 @@ bootstrap.servers=localhost:9092\n compression.type=snappy\n \n #------ Connect -------\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfc8b4b0f6e4305c585e44a03336d02fd7c33ee"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgzMjE3MA==", "bodyText": "Should we only try to fail the promise if it hasn't already been completed?", "url": "https://github.com/confluentinc/ksql/pull/5730#discussion_r447832170", "createdAt": "2020-06-30T16:48:40Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/OldApiUtils.java", "diffHunk": "@@ -113,19 +114,35 @@ static void handleOldApiResponse(final Server server, final RoutingContext routi\n     }\n   }\n \n-  private static void streamEndpointResponse(final Server server, final HttpServerResponse response,\n+  private static void streamEndpointResponse(final Server server,\n+      final RoutingContext routingContext,\n       final StreamingOutput streamingOutput) {\n     final WorkerExecutor workerExecutor = server.getWorkerExecutor();\n     final VertxCompletableFuture<Void> vcf = new VertxCompletableFuture<>();\n     workerExecutor.executeBlocking(promise -> {\n-      try (OutputStream os = new BufferedOutputStream(new ResponseOutputStream(response))) {\n-        streamingOutput.write(os);\n+      final OutputStream ros = new ResponseOutputStream(routingContext.response());\n+      routingContext.request().connection().closeHandler(v -> {\n+        // Close the OutputStream on close of the HTTP connection\n+        closeOutputStream(ros, promise);\n+      });\n+      try {\n+        streamingOutput.write(new BufferedOutputStream(ros));\n       } catch (Exception e) {\n         promise.fail(e);\n+      } finally {\n+        closeOutputStream(ros, promise);\n       }\n     }, vcf);\n   }\n \n+  private static void closeOutputStream(final OutputStream os, final Promise<Void> promise) {\n+    try {\n+      os.close();\n+    } catch (IOException e) {\n+      promise.fail(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bfc8b4b0f6e4305c585e44a03336d02fd7c33ee"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52904238c8b92fa5b110054e2962bc190398c8ba", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/52904238c8b92fa5b110054e2962bc190398c8ba", "committedDate": "2020-07-01T07:25:48Z", "message": "revert whitespace change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba16b86c1308448eaea9d46eaddf2e2bfc629b3", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/2ba16b86c1308448eaea9d46eaddf2e2bfc629b3", "committedDate": "2020-07-01T07:34:52Z", "message": "Improved output stream close logic"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 286, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}