{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTEwOTAy", "number": 4821, "title": "refactor: Process logger", "bodyText": "Description\nThis PR has two changes to the processing logger framework.\n\nFirst commit: The common code used create a ProcessingLogger is moved into KsqlQueryBuilder.  This makes the calling code cleaner and, more importantly, makes it easier for tests to mock the processing logger, (making it easier for people will test its use).\nSecond commit: The ProcessingLogger.error method is changed to accept an object, not a function. Again, the main reason for this is to make it easier for tests to verify what is being logged in unit tests.  (I also moved some classes so that all the processing logger related stuff is in the same package, rather than util package.).\nThird commit: fixes up remaining tests to use KsqlQueryBuilder.getProcessingLogger rather than KsqlQueryBuilder.getProcessingLogContext.  This simplifies the tests.\n\nI recommend reviewing each commit separately.\nWhile working on this I noticed the timestamp extraction was not actually setting an error on the message being logged!\nTesting done\nusual.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-19T10:10:55Z", "url": "https://github.com/confluentinc/ksql/pull/4821", "merged": true, "mergeCommit": {"oid": "c91bb4c9e54ddfd0b3c500683560dc4d8f995749"}, "closed": true, "closedAt": "2020-03-20T14:11:00Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcO8LhvgH2gAyMzkwOTEwOTAyOjNhZWQwOTgyOWYxMzlhODlmODdkZjk5ZmQzYWE5ZDRkYTI5NGU2YzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPfRCogH2gAyMzkwOTEwOTAyOmU2YzZlM2E5YTQ2Y2M2N2Y5ZjcxNDlkYmViZjQ2MzkyYTY3YzA2ODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3aed09829f139a89f87df99fd3aa9d4da294e6c3", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/3aed09829f139a89f87df99fd3aa9d4da294e6c3", "committedDate": "2020-03-18T19:07:55Z", "message": "refactor: easier access/mocking of processing logger\n\nThis commit all the steps needed to access a processing logger into the query builder, (which already knows the query id)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/9515d06b874f073f94cf2f7a9276c8f88382be43", "committedDate": "2020-03-19T10:06:46Z", "message": "refactor: have ProcessingLogger.error accept object not function\n\nThis makes it easier to add unit tests that test _what_ is being logged."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3NTgyNDgy", "url": "https://github.com/confluentinc/ksql/pull/4821#pullrequestreview-377582482", "createdAt": "2020-03-19T10:13:47Z", "commit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoxMzo0N1rOF4n6lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxMDoxMzo0N1rOF4n6lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDkxODU0OQ==", "bodyText": "bug: note how error is never set in the returned message!", "url": "https://github.com/confluentinc/ksql/pull/4821#discussion_r394918549", "createdAt": "2020-03-19T10:13:47Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/timestamp/LoggingTimestampExtractor.java", "diffHunk": "@@ -82,26 +78,4 @@ public long extract(final GenericRow row) {\n   TimestampExtractor getDelegate() {\n     return delegate;\n   }\n-\n-  public Function<ProcessingLogConfig, SchemaAndValue> timestampExtractErroMsg(\n-      final Exception e,\n-      final String row\n-  ) {\n-    return config -> {\n-      final Struct message = new Struct(ProcessingLogMessageSchema.PROCESSING_LOG_SCHEMA);\n-      final Struct error = new Struct(MessageType.RECORD_PROCESSING_ERROR.getSchema());\n-\n-      error.put(ProcessingLogMessageSchema.RECORD_PROCESSING_ERROR_FIELD_MESSAGE, e.getMessage());\n-\n-      if (config.getBoolean(ProcessingLogConfig.INCLUDE_ROWS)) {\n-        error.put(ProcessingLogMessageSchema.RECORD_PROCESSING_ERROR_FIELD_RECORD, row.toString());\n-      }\n-\n-      final List<String> cause = ErrorMessageUtil.getErrorMessages(e);\n-      cause.remove(0);\n-      error.put(ProcessingLogMessageSchema.RECORD_PROCESSING_ERROR_FIELD_CAUSE, cause);\n-\n-      return new SchemaAndValue(ProcessingLogMessageSchema.PROCESSING_LOG_SCHEMA, message);\n-    };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc2d8b3f9526d44a0e8702491f14bd8d481be83d", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/bc2d8b3f9526d44a0e8702491f14bd8d481be83d", "committedDate": "2020-03-19T10:23:39Z", "message": "refactor: remove KsqlQueryBuilder.getProcessingLogContext\n\nAs its only used in tests now - fixed tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4fbcaaa307a5356cd6296c199b6bd2c4f5a0de1", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d4fbcaaa307a5356cd6296c199b6bd2c4f5a0de1", "committedDate": "2020-03-19T11:40:31Z", "message": "chore: fix spotbugs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjQ1ODQw", "url": "https://github.com/confluentinc/ksql/pull/4821#pullrequestreview-378245840", "createdAt": "2020-03-20T05:56:36Z", "commit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNTo1NjozNlrOF5IVVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjoxMjozOVrOF5Ig4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0OTY4NA==", "bodyText": "nit: I think you can just chain the put:\nreturn new Struct(MessageType.PRODUCTION_ERROR.getSchema())\n    .put(ProcessingLogMessageSchema.PRODUCTION_ERROR_FIELD_MESSAGE, errorMsg);", "url": "https://github.com/confluentinc/ksql/pull/4821#discussion_r395449684", "createdAt": "2020-03-20T05:56:36Z", "author": {"login": "rodesai"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/errors/ProductionExceptionHandlerUtil.java", "diffHunk": "@@ -61,19 +61,44 @@ public void configure(final Map<String, ?> configs) {\n     abstract ProductionExceptionHandlerResponse getResponse();\n   }\n \n-  private static Function<ProcessingLogConfig, SchemaAndValue> productionError(\n-      final String errorMsg) {\n-    return (config) -> {\n+  public static final class ProductionError implements ProcessingLogger.ErrorMessage {\n+\n+    private final String errorMsg;\n+\n+    public ProductionError(final String errorMsg) {\n+      this.errorMsg = errorMsg == null ? \"\" : errorMsg;\n+    }\n+\n+    @Override\n+    public SchemaAndValue get(final ProcessingLogConfig config) {\n       final Struct struct = new Struct(ProcessingLogMessageSchema.PROCESSING_LOG_SCHEMA);\n       struct.put(ProcessingLogMessageSchema.TYPE, MessageType.PRODUCTION_ERROR.getTypeId());\n-      final Struct productionError =\n-          new Struct(MessageType.PRODUCTION_ERROR.getSchema());\n-      struct.put(ProcessingLogMessageSchema.PRODUCTION_ERROR, productionError);\n-      productionError.put(\n-          ProcessingLogMessageSchema.PRODUCTION_ERROR_FIELD_MESSAGE,\n-          errorMsg);\n+      struct.put(ProcessingLogMessageSchema.PRODUCTION_ERROR, productionError());\n       return new SchemaAndValue(ProcessingLogMessageSchema.PROCESSING_LOG_SCHEMA, struct);\n-    };\n+    }\n+\n+    @Override\n+    public boolean equals(final Object o) {\n+      if (this == o) {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass()) {\n+        return false;\n+      }\n+      final ProductionError that = (ProductionError) o;\n+      return Objects.equals(errorMsg, that.errorMsg);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+      return Objects.hash(errorMsg);\n+    }\n+\n+    private Struct productionError() {\n+      final Struct productionError = new Struct(MessageType.PRODUCTION_ERROR.getSchema());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1MDIwMA==", "bodyText": "nit: consider adding a recommendation that the implementer should lazy-initialize the error message, particularly if the message is being logged on a performance-critical path on which logging would typically be disabled.", "url": "https://github.com/confluentinc/ksql/pull/4821#discussion_r395450200", "createdAt": "2020-03-20T05:59:22Z", "author": {"login": "rodesai"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/logging/processing/ProcessingLogger.java", "diffHunk": "@@ -15,14 +15,30 @@\n \n package io.confluent.ksql.logging.processing;\n \n-import java.util.function.Function;\n import org.apache.kafka.connect.data.SchemaAndValue;\n \n public interface ProcessingLogger {\n+\n+  /**\n+   * The interface all error message types must implement.\n+   */\n+  interface ErrorMessage {\n+\n+    /**\n+     * Called to convert the error message into a structured message.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1MjY0Mg==", "bodyText": "can we add a test case to LoggingTimestampExtractorTest?", "url": "https://github.com/confluentinc/ksql/pull/4821#discussion_r395452642", "createdAt": "2020-03-20T06:12:39Z", "author": {"login": "rodesai"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/timestamp/LoggingTimestampExtractor.java", "diffHunk": "@@ -70,7 +65,8 @@ public long extract(final GenericRow row) {\n     try {\n       return delegate.extract(row);\n     } catch (final Exception e) {\n-      logger.error(timestampExtractErroMsg(e, row.toString()));\n+      logger.error(RecordProcessingError.recordProcessingError(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9515d06b874f073f94cf2f7a9276c8f88382be43"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c6e3a9a46cc67f9f7149dbebf46392a67c0684", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/e6c6e3a9a46cc67f9f7149dbebf46392a67c0684", "committedDate": "2020-03-20T12:00:37Z", "message": "chore: rohan's changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 34, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}