{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDU3OTY2", "number": 4908, "title": "fix: Don't wait for streams thread to be in running state", "bodyText": "Description\nWhen forwarding to standby is enabled as part of HA, we were still waiting for streams thread to reach running state. I moved the waiting to happen only when forwarding to standby is not enabled.\nTesting done\nConfirmed it works as expected via experiments on EC2 cluster\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-26T22:37:36Z", "url": "https://github.com/confluentinc/ksql/pull/4908", "merged": true, "mergeCommit": {"oid": "ceeead21d32232a2e30d79b84342a0dec3c36fd4"}, "closed": true, "closedAt": "2020-03-27T19:35:31Z", "author": {"login": "vpapavas"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRj6WEAH2gAyMzk0NDU3OTY2OmM1MWQxNWJhN2ExZDg5NjE4NGE1M2UzYTE1ZTI2NWY1ZjU2NDg5ZDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR0s3mAH2gAyMzk0NDU3OTY2OjUzNzI2ZjMzMTM4YWRhODZiNzQ5ZjY0ZmE5MjM4ZGE1NTU1YjBhZjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c51d15ba7a1d896184a53e3a15e265f5f56489d1", "author": {"user": {"login": "vpapavas", "name": "Vicky Papavasileiou"}}, "url": "https://github.com/confluentinc/ksql/commit/c51d15ba7a1d896184a53e3a15e265f5f56489d1", "committedDate": "2020-03-26T22:33:12Z", "message": "don't wait with standby"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDc5MDIw", "url": "https://github.com/confluentinc/ksql/pull/4908#pullrequestreview-382479020", "createdAt": "2020-03-26T23:02:20Z", "commit": {"oid": "c51d15ba7a1d896184a53e3a15e265f5f56489d1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzowMjoyMFrOF8diVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzowNDoyM1rOF8dlBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MjgwNw==", "bodyText": "could we remove this altogether and let it error inside .store()?", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398942807", "createdAt": "2020-03-26T23:02:20Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStore.java", "diffHunk": "@@ -69,15 +72,14 @@ LogicalSchema schema() {\n   }\n \n   <T> T store(final QueryableStoreType<T> queryableStoreType) {\n-    awaitRunning();\n-\n     try {\n       if (ksqlConfig.getBoolean(KsqlConfig.KSQL_QUERY_PULL_ENABLE_STANDBY_READS)) {\n         // True flag allows queries on standby and replica state stores\n         return kafkaStreams.store(\n             StoreQueryParameters.fromNameAndType(stateStoreName, queryableStoreType)\n                 .enableStaleStores());\n       } else {\n+        awaitRunning();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d15ba7a1d896184a53e3a15e265f5f56489d1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk0MzQ5Mg==", "bodyText": "This busy loop could ultimately hold up threads on the server, for tables that may not be rebalancing too.. (Thread.yield() is just a hint).  Let's fail fast? Now that we have the standby routing, looping until RUNNING may not be necessary at all", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r398943492", "createdAt": "2020-03-26T23:04:23Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-streams/src/main/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStore.java", "diffHunk": "@@ -93,6 +95,7 @@ LogicalSchema schema() {\n   }\n \n   private void awaitRunning() {\n+    LOG.debug(\"Waiting for streams thread to be in RUNNING state\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51d15ba7a1d896184a53e3a15e265f5f56489d1"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12d925677fa0fdb1327497ca03529868ab27456f", "author": {"user": {"login": "vpapavas", "name": "Vicky Papavasileiou"}}, "url": "https://github.com/confluentinc/ksql/commit/12d925677fa0fdb1327497ca03529868ab27456f", "committedDate": "2020-03-27T01:30:35Z", "message": "fixed test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTk2ODAw", "url": "https://github.com/confluentinc/ksql/pull/4908#pullrequestreview-382596800", "createdAt": "2020-03-27T05:59:25Z", "commit": {"oid": "12d925677fa0fdb1327497ca03529868ab27456f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo1OToyNVrOF8kHSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNjowMToxMVrOF8kI7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1MDU3MA==", "bodyText": "fix test name?", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r399050570", "createdAt": "2020-03-27T05:59:25Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStoreTest.java", "diffHunk": "@@ -96,43 +82,21 @@ public void shouldThrowNPEs() {\n     new NullPointerTester()\n         .setDefault(KafkaStreams.class, kafkaStreams)\n         .setDefault(LogicalSchema.class, SCHEMA)\n-        .setDefault(Supplier.class, clock)\n         .setDefault(KsqlConfig.class, ksqlConfig)\n         .testConstructors(KsStateStore.class, Visibility.PACKAGE);\n   }\n \n   @Test\n   public void shouldAwaitRunning() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d925677fa0fdb1327497ca03529868ab27456f"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA1MDk5MQ==", "bodyText": "can't understand this change fully", "url": "https://github.com/confluentinc/ksql/pull/4908#discussion_r399050991", "createdAt": "2020-03-27T06:01:11Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/materialization/ks/KsStateStoreTest.java", "diffHunk": "@@ -144,24 +108,20 @@ public void shouldThrowIfNotRunningAfterFailedToGetStore() {\n     when(kafkaStreams.store(any())).thenThrow(new IllegalStateException());\n \n     // When:\n-    expectedException.expect(NotRunningException.class);\n-    expectedException.expectMessage(\"The query was not in a running state. state: NOT_RUNNING\");\n+    expectedException.expect(MaterializationException.class);\n+    expectedException.expectMessage(\"State store currently unavailable: someStore\");\n \n     // When:\n     store.store(QueryableStoreTypes.sessionStore());\n   }\n \n   @Test\n   public void shouldGetStoreOnceRunning() {\n-    // Given:\n-    when(kafkaStreams.state()).thenReturn(State.RUNNING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12d925677fa0fdb1327497ca03529868ab27456f"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53726f33138ada86b749f64fa9238da5555b0af8", "author": {"user": {"login": "vpapavas", "name": "Vicky Papavasileiou"}}, "url": "https://github.com/confluentinc/ksql/commit/53726f33138ada86b749f64fa9238da5555b0af8", "committedDate": "2020-03-27T18:06:52Z", "message": "rename test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4930, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}