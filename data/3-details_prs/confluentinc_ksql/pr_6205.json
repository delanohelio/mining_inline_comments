{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTk1MDIy", "number": 6205, "title": "chore: set auto.offset.reset to none for command topic consumer", "bodyText": "Description\nIf the server is running and we delete the command topic, we should throw an exception from the command consumer when it tries to poll the new command topic. Previously the value was set to LATEST since it was default\nTesting done\nDelete command topic after server is up.\nRecreate the command topic\nException in thread \"CommandRunner\" org.apache.kafka.clients.consumer.OffsetOutOfRangeException: Fetch position FetchPosition{offset=4, offsetEpoch=Optional[0], currentLeader=LeaderAndEpoch{leader=Optional[stevenz-mbp13.lan:9092 (id: 0 rack: null)], epoch=0}} is out of range for partition _confluent-ksql-default__command_topic-0\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.handleOffsetOutOfRange(Fetcher.java:1358)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.initializeCompletedFetch(Fetcher.java:1310)\n\tat org.apache.kafka.clients.consumer.internals.Fetcher.fetchedRecords(Fetcher.java:611)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.pollForFetches(KafkaConsumer.java:1304)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1233)\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.poll(KafkaConsumer.java:1206)\n\tat io.confluent.ksql.rest.server.CommandTopic.getNewCommands(CommandTopic.java:81)\n\tat io.confluent.ksql.rest.server.computation.CommandStore.getNewCommands(CommandStore.java:243)\n\tat io.confluent.ksql.rest.server.computation.CommandRunner.fetchAndRunCommands(CommandRunner.java:243)\n\tat io.confluent.ksql.rest.server.computation.CommandRunner$Runner.run(CommandRunner.java:362)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:748)\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-09-15T21:39:27Z", "url": "https://github.com/confluentinc/ksql/pull/6205", "merged": true, "mergeCommit": {"oid": "48183ee9db3289962d5a0bfd0529023785cef9fa"}, "closed": true, "closedAt": "2020-09-16T17:36:17Z", "author": {"login": "stevenpyzhang"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJOxxFgH2gAyNDg3NTk1MDIyOjg4ZmExYzQxMzQ1NTNkYmNlM2Q3NTMzNzM1N2Y2YjU3Mzc1NjAzMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJfJwYAFqTQ4OTgwODIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88fa1c4134553dbce3d75337357f6b5737560335", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/88fa1c4134553dbce3d75337357f6b5737560335", "committedDate": "2020-09-15T21:35:35Z", "message": "chore: set auto.offset.reset to none for command topic consumer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5ODA4MjIz", "url": "https://github.com/confluentinc/ksql/pull/6205#pullrequestreview-489808223", "createdAt": "2020-09-16T16:40:14Z", "commit": {"oid": "88fa1c4134553dbce3d75337357f6b5737560335"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo0MDoxNFrOHS5WCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo0MDoxNFrOHS5WCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NTk0NA==", "bodyText": "is there a constant somewhere for this?", "url": "https://github.com/confluentinc/ksql/pull/6205#discussion_r489575944", "createdAt": "2020-09-16T16:40:14Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/CommandStore.java", "diffHunk": "@@ -95,6 +95,10 @@ public static CommandStore create(\n           ConsumerConfig.ISOLATION_LEVEL_CONFIG,\n           IsolationLevel.READ_COMMITTED.toString().toLowerCase(Locale.ROOT)\n       );\n+      kafkaConsumerProperties.put(\n+          ConsumerConfig.AUTO_OFFSET_RESET_CONFIG,\n+          \"none\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88fa1c4134553dbce3d75337357f6b5737560335"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4653, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}