{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MDc4NzQ2", "number": 4985, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mjo1NVrODw42pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDo0Nzo1N1rODw5ODg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg5NzM1OnYy", "diffSide": "RIGHT", "path": "ksqldb-execution/src/main/java/io/confluent/ksql/services/DisabledKsqlClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mjo1NVrOGEIgRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo1Mjo1NVrOGEIgRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NjgyMg==", "bodyText": "These debug messages don't look like they're meant to be in this PR.", "url": "https://github.com/confluentinc/ksql/pull/4985#discussion_r406986822", "createdAt": "2020-04-10T23:52:55Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-execution/src/main/java/io/confluent/ksql/services/DisabledKsqlClient.java", "diffHunk": "@@ -34,7 +34,10 @@ public static DisabledKsqlClient instance() {\n     return new DisabledKsqlClient();\n   }\n \n+  private final Exception createStack;\n+\n   private DisabledKsqlClient() {\n+    this.createStack = new Exception();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010eb11585e7ad4e7efea2fd71e18d2883d65d89"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTk1NzI2OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/ShowQueriesMultiNodeFunctionalTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwMDo0Nzo1N1rOGEJBAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODowMzoyMVrOGELWQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NTIwMQ==", "bodyText": "What changed in this PR that this now needs to be specified?", "url": "https://github.com/confluentinc/ksql/pull/4985#discussion_r406995201", "createdAt": "2020-04-11T00:47:57Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/ShowQueriesMultiNodeFunctionalTest.java", "diffHunk": "@@ -59,11 +57,13 @@\n       .builder(TEST_HARNESS::kafkaBootstrapServers)\n       .withProperty(KsqlRestConfig.LISTENERS_CONFIG, \"http://localhost:8088\")\n       .withProperty(KsqlRestConfig.ADVERTISED_LISTENER_CONFIG, \"http://localhost:8088\")\n+      .withEnabledKsqlClient()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010eb11585e7ad4e7efea2fd71e18d2883d65d89"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzMzQwOA==", "bodyText": "This is because after rebasing with master the branch started failing tests. I looked into this and it seems there was a change recently where a DisabledKsqlClient is now used by default in tests, so any tests that do node-node communication are going to fail (i.e. this one). I don't really know why this test didn't fail in master too. Perhaps @AlanConfluent  or @stevenpyzhang has an insight? But explicitly requesting a non disabled KsqlClient seemed to fix things.", "url": "https://github.com/confluentinc/ksql/pull/4985#discussion_r407033408", "createdAt": "2020-04-11T08:03:21Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/ShowQueriesMultiNodeFunctionalTest.java", "diffHunk": "@@ -59,11 +57,13 @@\n       .builder(TEST_HARNESS::kafkaBootstrapServers)\n       .withProperty(KsqlRestConfig.LISTENERS_CONFIG, \"http://localhost:8088\")\n       .withProperty(KsqlRestConfig.ADVERTISED_LISTENER_CONFIG, \"http://localhost:8088\")\n+      .withEnabledKsqlClient()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NTIwMQ=="}, "originalCommit": {"oid": "010eb11585e7ad4e7efea2fd71e18d2883d65d89"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3723, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}