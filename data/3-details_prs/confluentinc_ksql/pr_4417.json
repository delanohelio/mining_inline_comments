{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NzU1NTY5", "number": 4417, "title": "fix: Fixes ImmutabilityTest to run on new types.  Also simplifies lag object structure", "bodyText": "Description\nFixes ImmutabilityTest, which was not being run.  Also simplifies lab object structure, per comments here: #4411\nTesting done\nDescribe the testing strategy. Unit and integration tests are expected for any behavior changes.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-01-31T20:20:21Z", "url": "https://github.com/confluentinc/ksql/pull/4417", "merged": true, "mergeCommit": {"oid": "3677d5f19d507911d5f6e7f8c4d7755c38380280"}, "closed": true, "closedAt": "2020-01-31T22:18:25Z", "author": {"login": "AlanConfluent"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_1AS9gH2gAyMzY5NzU1NTY5OjJhZDBlNzIyNThmNDlmNGYwY2E0NTc1OWE2ZWU0YjgwOGM5N2ZiNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcAqrehgFqTM1MjE2MjM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2ad0e72258f49f4f0ca45759a6ee4b808c97fb6d", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/2ad0e72258f49f4f0ca45759a6ee4b808c97fb6d", "committedDate": "2020-01-31T20:17:27Z", "message": "fix: Fixes ImmutabilityTest to run on new types.  Also simplifies lag object structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5deeeac28b22e046c72d3523e4f80340f7c8cba4", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/5deeeac28b22e046c72d3523e4f80340f7c8cba4", "committedDate": "2020-01-31T20:17:27Z", "message": "Style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f2ef0fb2cb752d796e1cf5c7e36f0f5b4b98278", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/6f2ef0fb2cb752d796e1cf5c7e36f0f5b4b98278", "committedDate": "2020-01-31T20:36:23Z", "message": "Fixes ClusterStatusResourceTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzg0MzE4", "url": "https://github.com/confluentinc/ksql/pull/4417#pullrequestreview-351784318", "createdAt": "2020-01-31T21:20:06Z", "commit": {"oid": "6f2ef0fb2cb752d796e1cf5c7e36f0f5b4b98278"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMDowNlrOFkYQeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToyMDowNlrOFkYQeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5MDQ4OQ==", "bodyText": "nit: remove a", "url": "https://github.com/confluentinc/ksql/pull/4417#discussion_r373690489", "createdAt": "2020-01-31T21:20:06Z", "author": {"login": "vpapavas"}, "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StateStoreLags.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.errorprone.annotations.Immutable;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a the lags associated with a particular state store on a particular host.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2ef0fb2cb752d796e1cf5c7e36f0f5b4b98278"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzg0NjEw", "url": "https://github.com/confluentinc/ksql/pull/4417#pullrequestreview-351784610", "createdAt": "2020-01-31T21:20:43Z", "commit": {"oid": "6f2ef0fb2cb752d796e1cf5c7e36f0f5b4b98278"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d24a74b9c8f9758b82fed420c98a352b42d6b89", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/3d24a74b9c8f9758b82fed420c98a352b42d6b89", "committedDate": "2020-01-31T21:35:52Z", "message": "Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMTYyMzc1", "url": "https://github.com/confluentinc/ksql/pull/4417#pullrequestreview-352162375", "createdAt": "2020-02-03T10:43:37Z", "commit": {"oid": "3d24a74b9c8f9758b82fed420c98a352b42d6b89"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMDo0MzozOFrOFktINw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMDo0ODo1MFrOFktReQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAzMjQzOQ==", "bodyText": "why not more EMPTY_STATE_STORE_LAGS into getStateStoreLags?", "url": "https://github.com/confluentinc/ksql/pull/4417#discussion_r374032439", "createdAt": "2020-02-03T10:43:38Z", "author": {"login": "big-andy-coates"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/LagReportingAgent.java", "diffHunk": "@@ -174,9 +172,9 @@ public void receiveHostLag(final LagReportingMessage lagReportingMessage) {\n       final HostInfo host, final QueryStateStoreId queryStateStoreId, final int partition) {\n     final Set<HostInfo> aliveHosts = aliveHostsRef.get();\n     final LagInfoEntity lagInfo = receivedLagInfo\n-        .getOrDefault(host, EMPTY_HOST_LAG_INFO).getLagInfo()\n-        .getOrDefault(queryStateStoreId, Collections.emptyMap())\n-        .getOrDefault(partition, null);\n+        .getOrDefault(host, EMPTY_HOST_STORE_LAGS)\n+        .getStateStoreLagsOrDefault(queryStateStoreId, EMPTY_STATE_STORE_LAGS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d24a74b9c8f9758b82fed420c98a352b42d6b89"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAzNDExMw==", "bodyText": "don't return null for unknown partition.\nEither:\n\nreturn some kind of empty lag info\nor else encode the fact that the method might not return a value by returning Optional<LagInfoEntity>,\nor throw an exception if this is not expected.", "url": "https://github.com/confluentinc/ksql/pull/4417#discussion_r374034113", "createdAt": "2020-02-03T10:47:17Z", "author": {"login": "big-andy-coates"}, "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/StateStoreLags.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.errorprone.annotations.Immutable;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents the lags associated with a particular state store on a particular host.\n+ */\n+@Immutable\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class StateStoreLags {\n+\n+  private final ImmutableMap<Integer, LagInfoEntity> lagByPartition;\n+\n+  @JsonCreator\n+  public StateStoreLags(\n+      @JsonProperty(\"lagByPartition\") final Map<Integer, LagInfoEntity> lagByPartition) {\n+    this.lagByPartition = ImmutableMap.copyOf(requireNonNull(lagByPartition, \"lagByPartition\"));\n+  }\n+\n+  public LagInfoEntity getLagByPartition(final int partition) {\n+    return lagByPartition.get(partition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d24a74b9c8f9758b82fed420c98a352b42d6b89"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAzNDgwOQ==", "bodyText": "As with the other get method - avoid returning nulls.", "url": "https://github.com/confluentinc/ksql/pull/4417#discussion_r374034809", "createdAt": "2020-02-03T10:48:50Z", "author": {"login": "big-andy-coates"}, "path": "ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/HostStoreLags.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"; you may not use\n+ * this file except in compliance with the License. You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import static com.google.common.base.MoreObjects.toStringHelper;\n+import static java.util.Objects.requireNonNull;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.google.common.collect.ImmutableMap;\n+import com.google.errorprone.annotations.Immutable;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+/**\n+ * Represents a host's lag information, and when the lag information was collected.\n+ */\n+@Immutable\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class HostStoreLags {\n+\n+  private final ImmutableMap<QueryStateStoreId, StateStoreLags> stateStoreLags;\n+  private final long updateTimeMs;\n+\n+  @JsonCreator\n+  public HostStoreLags(\n+      @JsonProperty(\"stateStoreLags\") final Map<QueryStateStoreId, StateStoreLags> stateStoreLags,\n+      @JsonProperty(\"updateTimeMs\") final long updateTimeMs) {\n+    this.stateStoreLags = ImmutableMap.copyOf(requireNonNull(stateStoreLags, \"stateStoreLags\"));\n+    this.updateTimeMs = updateTimeMs;\n+  }\n+\n+  public StateStoreLags getStateStoreLags(final QueryStateStoreId queryStateStoreId) {\n+    return stateStoreLags.get(queryStateStoreId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d24a74b9c8f9758b82fed420c98a352b42d6b89"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 174, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}