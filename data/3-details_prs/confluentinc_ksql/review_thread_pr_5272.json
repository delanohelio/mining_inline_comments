{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjY2ODky", "number": 5272, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyNDo0NVrOD6Y0kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxODoyNFrOD6qCPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTUwNjc0OnYy", "diffSide": "RIGHT", "path": "scripts/changelog/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOToyNDo0NVrOGSM8HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDoyNjowOVrOGSO9OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczOTU0OA==", "bodyText": "the branch name should not match the tag name, no?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            git checkout tags/v0.8.0-ksqldb -b v0.8.0-ksqldb\n          \n          \n            \n            git checkout tags/v0.8.0-ksqldb -b 0.8.0-ksqldb", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r421739548", "createdAt": "2020-05-07T19:24:45Z", "author": {"login": "colinhicks"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb -b v0.8.0-ksqldb", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c3648de40b4243b2ea4b5575ed9c4f72804ceb1"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3MjYwMQ==", "bodyText": "It shouldn't matter? @spena said he was having issues with ambiguous references yesterday but using a different branch name didn't resolve the issue.\nRegardless, I've updated the PR to use @spena 's suggestion of checking out the reference without creating a branch.", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r421772601", "createdAt": "2020-05-07T20:26:09Z", "author": {"login": "vcrfxia"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb -b v0.8.0-ksqldb", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTczOTU0OA=="}, "originalCommit": {"oid": "4c3648de40b4243b2ea4b5575ed9c4f72804ceb1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNTYwMTUxOnYy", "diffSide": "RIGHT", "path": "scripts/changelog/README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOTo1MjowNlrOGSN3NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMDoyNjo0NFrOGSO-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1NDY3Nw==", "bodyText": "This causes ambiguous errors in some environments when running the conventional-changelog. To make it work, I did not create the branch:\n# git checkout tags/v0.9.0-rc294-ksqldb -b v0.9.0-rc294-ksqldb\nSwitched to a new branch 'v0.9.0-rc294-ksqldb'\n[root@ksql-centos ksql]# conventional-changelog -p angular -i new_commits.txt -s -r 0\nError: Error in git-raw-commits: warning: refname 'v0.9.0-rc294-ksqldb' is ambiguous.\n\n$ git checkout tags/v0.7.0-ksqldb\nNote: switching to 'tags/v0.9.0-rc294-ksqldb'.\n...\n$ conventional-changelog -p angular -i new_commits.txt -s -r 0\n(base) sergio@pop-os:~/Development/ksql$", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r421754677", "createdAt": "2020-05-07T19:52:06Z", "author": {"login": "spena"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb -b v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb -b v0.7.0-ksqldb", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c3648de40b4243b2ea4b5575ed9c4f72804ceb1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc3Mjk0Nw==", "bodyText": "I'm still confused where this error is coming from and why it only affects your setup but not mine, but the workaround sounds good so I've updated the doc. Thanks!", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r421772947", "createdAt": "2020-05-07T20:26:44Z", "author": {"login": "vcrfxia"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb -b v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb -b v0.7.0-ksqldb", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1NDY3Nw=="}, "originalCommit": {"oid": "4c3648de40b4243b2ea4b5575ed9c4f72804ceb1"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMyNzAxOnYy", "diffSide": "RIGHT", "path": "scripts/changelog/README.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxODoyNFrOGSnMOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQyMDoxNTo0MVrOGTrvWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTY1Ng==", "bodyText": "I get this error with the script:\n$ python3 scripts/changelog/process_commit_files.py --release_version 0.8.0 --previous_version 0.7.0 --output_file CHANGELOG_additions.md\nTraceback (most recent call last):\n  File \"scripts/changelog/process_commit_files.py\", line 330, in <module>\n    all_commits = parse_changelog(args.new_commits_file)\n  File \"scripts/changelog/process_commit_files.py\", line 59, in parse_changelog\n    fork_name = _get_fork_name(line)\n  File \"scripts/changelog/process_commit_files.py\", line 124, in _get_fork_name\n    start_ind = header.index('https://github.com/')\nValueError: substring not found\n\nI noticed the commits file do not include the fork name:\n# [](/compare/v0.8.0-ksqldb...v) (2020-05-08)\nI don't know why the conventional-changelog does not include the https://github.com. The version I have is 2.0.21.", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r422169656", "createdAt": "2020-05-08T14:18:24Z", "author": {"login": "spena"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb\n+```\n+and generate the list of commits:\n+```\n+conventional-changelog -p angular -i old_commits.txt -s -r 0\n+```\n+\n+### Run the script\n+\n+Now you're ready to run the script that generates a changelog based on the difference between the two lists of commits from above. In other words, the changelog consists of new commits on `NEW_VERSION` not present on `OLD_VERSION`.\n+\n+Switch back to master to ensure you have the latest version of the script:\n+```\n+git checkout master\n+```\n+and run\n+```\n+python3 scripts/changelog/process_commit_files.py --release_version 0.8.0 --previous_version 0.7.0 --output_file CHANGELOG_additions.md", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06f5024216370df2c461bb3691d6d4f9513368aa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzODMzMg==", "bodyText": "What's the output of git remote -v for you?", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r422238332", "createdAt": "2020-05-08T16:24:16Z", "author": {"login": "vcrfxia"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb\n+```\n+and generate the list of commits:\n+```\n+conventional-changelog -p angular -i old_commits.txt -s -r 0\n+```\n+\n+### Run the script\n+\n+Now you're ready to run the script that generates a changelog based on the difference between the two lists of commits from above. In other words, the changelog consists of new commits on `NEW_VERSION` not present on `OLD_VERSION`.\n+\n+Switch back to master to ensure you have the latest version of the script:\n+```\n+git checkout master\n+```\n+and run\n+```\n+python3 scripts/changelog/process_commit_files.py --release_version 0.8.0 --previous_version 0.7.0 --output_file CHANGELOG_additions.md", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTY1Ng=="}, "originalCommit": {"oid": "06f5024216370df2c461bb3691d6d4f9513368aa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjIzODY3NQ==", "bodyText": "Also to double-check, which branch/tag were you on when you generated the commit file (using the conventional-changelog command)?", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r422238675", "createdAt": "2020-05-08T16:24:57Z", "author": {"login": "vcrfxia"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb\n+```\n+and generate the list of commits:\n+```\n+conventional-changelog -p angular -i old_commits.txt -s -r 0\n+```\n+\n+### Run the script\n+\n+Now you're ready to run the script that generates a changelog based on the difference between the two lists of commits from above. In other words, the changelog consists of new commits on `NEW_VERSION` not present on `OLD_VERSION`.\n+\n+Switch back to master to ensure you have the latest version of the script:\n+```\n+git checkout master\n+```\n+and run\n+```\n+python3 scripts/changelog/process_commit_files.py --release_version 0.8.0 --previous_version 0.7.0 --output_file CHANGELOG_additions.md", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTY1Ng=="}, "originalCommit": {"oid": "06f5024216370df2c461bb3691d6d4f9513368aa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzI5Mjc2Mg==", "bodyText": "$ git remote -v\nsergio  git@github.com:spena/ksql (fetch)\nsergio  git@github.com:spena/ksql (push)\nupstream        git@github.com:confluentinc/ksql (fetch)\nupstream        git@github.com:confluentinc/ksql (push)\n\nFor the branch/tag question. I tried different options with same results. For instance:\n\ngit checkout tags/v0.8.0-ksqldb\ngit checkout tags/v0.8.0-ksqldb -b test\n\nThe above two ways allow me to run the conventional-changelog, but the commit files still have the same header. I just tried both.", "url": "https://github.com/confluentinc/ksql/pull/5272#discussion_r423292762", "createdAt": "2020-05-11T20:15:41Z", "author": {"login": "spena"}, "path": "scripts/changelog/README.md", "diffHunk": "@@ -0,0 +1,68 @@\n+# Auto-generate changelog for ksqlDB releases\n+\n+The ksqlDB repo uses conventional commits in order to assist with auto-generation of changelogs.\n+\n+## One-time setup\n+\n+Install the [tool](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli) we use to for generating changelogs:\n+```\n+npm install -g conventional-changelog-cli\n+```\n+\n+## Generate changelog\n+\n+Assuming you've completed the one-time setup above, steps for generating a changelog are as follows.\n+\n+Suppose you're interested in generating a changelog of all changes in ksqlDB 0.8.0 that are new as of ksqlDB 0.7.0. Refer to these versions as `NEW_VERSION` and `OLD_VERSION`, respectively. The same process applies for other new/old ksqlDB version combinations as well (e.g., 0.8.1 and 0.8.0, or 0.8.0 and 0.7.1).\n+\n+These steps assume you're in the root of the `ksql` directory.\n+\n+### List commits on `NEW_VERSION`\n+\n+Start by listing all commits from the `NEW_VERSION`, which requires checking out the relevant branch/tag/commit. If the release tag exists:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.8.0-ksqldb\n+```\n+If the tag hasn't been created yet but a branch has been cut (e.g., if a release is in progress):\n+```\n+git checkout 0.8.x-ksqldb\n+git fetch upstream\n+git merge upstream/0.8.x-ksqldb\n+```\n+If the branch hasn't been cut yet (which could also be the case for a release currently in progress):\n+```\n+git checkout <GIT_SHA>\n+```\n+\n+Once on the relevant branch/tag/commit, fetch the commits and save them to a file:\n+```\n+conventional-changelog -p angular -i new_commits.txt -s -r 0\n+```\n+\n+### List commits on `OLD_VERSION`\n+\n+Next, repeat the process to list commits from the `OLD_VERSION`. A tag for this release should already exist, so check out the tag:\n+```\n+git fetch --all --tags --prune\n+git checkout tags/v0.7.0-ksqldb\n+```\n+and generate the list of commits:\n+```\n+conventional-changelog -p angular -i old_commits.txt -s -r 0\n+```\n+\n+### Run the script\n+\n+Now you're ready to run the script that generates a changelog based on the difference between the two lists of commits from above. In other words, the changelog consists of new commits on `NEW_VERSION` not present on `OLD_VERSION`.\n+\n+Switch back to master to ensure you have the latest version of the script:\n+```\n+git checkout master\n+```\n+and run\n+```\n+python3 scripts/changelog/process_commit_files.py --release_version 0.8.0 --previous_version 0.7.0 --output_file CHANGELOG_additions.md", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTY1Ng=="}, "originalCommit": {"oid": "06f5024216370df2c461bb3691d6d4f9513368aa"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3535, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}