{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzQwMDU2", "number": 5883, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0NzoyN1rOESiFfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0ODoyNFrOESiGow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY4Mjg3OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/OldApiUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0NzoyN1rOG3xCyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo1ODozOVrOG3xaYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODM5NQ==", "bodyText": "did you mean to change this to close?", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461128395", "createdAt": "2020-07-27T19:47:27Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/OldApiUtils.java", "diffHunk": "@@ -89,15 +89,16 @@ static void handleOldApiResponse(final Server server, final RoutingContext routi\n     // a plain String, other times it's an object that needs to be JSON encoded, other times\n     // it represents a stream.\n     if (endpointResponse.getEntity() instanceof StreamingOutput) {\n+      final StreamingOutput streamingOutput = (StreamingOutput) endpointResponse.getEntity();\n       if (routingContext.request().version() == HttpVersion.HTTP_2) {\n         // The old /query endpoint uses chunked encoding which is not supported in HTTP2\n         routingContext.response().setStatusCode(METHOD_NOT_ALLOWED.code())\n             .setStatusMessage(\"The /query endpoint is not available using HTTP2\").end();\n+        streamingOutput.closeWithoutWrite();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzNDQzMw==", "bodyText": "\ud83d\ude05", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461134433", "createdAt": "2020-07-27T19:58:39Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/OldApiUtils.java", "diffHunk": "@@ -89,15 +89,16 @@ static void handleOldApiResponse(final Server server, final RoutingContext routi\n     // a plain String, other times it's an object that needs to be JSON encoded, other times\n     // it represents a stream.\n     if (endpointResponse.getEntity() instanceof StreamingOutput) {\n+      final StreamingOutput streamingOutput = (StreamingOutput) endpointResponse.getEntity();\n       if (routingContext.request().version() == HttpVersion.HTTP_2) {\n         // The old /query endpoint uses chunked encoding which is not supported in HTTP2\n         routingContext.response().setStatusCode(METHOD_NOT_ALLOWED.code())\n             .setStatusMessage(\"The /query endpoint is not available using HTTP2\").end();\n+        streamingOutput.closeWithoutWrite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODM5NQ=="}, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY4NDY2OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/StreamingOutput.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0ODowM1rOG3xD8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMDo1Nzo1MFrOG3zTnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODY4OA==", "bodyText": "nit, we should instead have this implement AutoCloseable", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461128688", "createdAt": "2020-07-27T19:48:03Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/StreamingOutput.java", "diffHunk": "@@ -21,4 +21,7 @@\n public interface StreamingOutput {\n \n   void write(OutputStream output) throws IOException;\n+\n+  void close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzNTUyMw==", "bodyText": "Are you suggesting the classes implement AutoCloseable, or that the interface extends AutoCloseable? The latter makes sense to me but I got a compiler warning:\nWarning:(21, 8) java: auto-closeable resource io.confluent.ksql.api.server.StreamingOutput has a member method close() that could throw InterruptedException\n\nI worked around it with the same workaround we use in ServiceContext.java. LMK if this isn't what you had in mind.", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461135523", "createdAt": "2020-07-27T20:00:38Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/StreamingOutput.java", "diffHunk": "@@ -21,4 +21,7 @@\n public interface StreamingOutput {\n \n   void write(OutputStream output) throws IOException;\n+\n+  void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODY4OA=="}, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2MDI4Mw==", "bodyText": "eh I was suggesting the latter but I'm not entirely sure I understand the warning.", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461160283", "createdAt": "2020-07-27T20:47:52Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/StreamingOutput.java", "diffHunk": "@@ -21,4 +21,7 @@\n public interface StreamingOutput {\n \n   void write(OutputStream output) throws IOException;\n+\n+  void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODY4OA=="}, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE2NTQ2OQ==", "bodyText": "I don't fully understand it either but it seems general consensus is that the warning is bogus and the workaround we've used is fine:\nhttps://bugs.openjdk.java.net/browse/JDK-8155591\nhttps://bugs.openjdk.java.net/browse/JDK-7027157\nhttps://issues.apache.org/jira/browse/CXF-7465\njoyent/java-manta#322\nGoing to leave this as is.", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461165469", "createdAt": "2020-07-27T20:57:50Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/StreamingOutput.java", "diffHunk": "@@ -21,4 +21,7 @@\n public interface StreamingOutput {\n \n   void write(OutputStream output) throws IOException;\n+\n+  void close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODY4OA=="}, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODY4NTc5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/streaming/TopicStreamWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo0ODoyNFrOG3xEqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOTo1ODoyNVrOG3xZ4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODg3NA==", "bodyText": "synchronized?", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461128874", "createdAt": "2020-07-27T19:48:24Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/streaming/TopicStreamWriter.java", "diffHunk": "@@ -137,7 +138,15 @@ public void write(final OutputStream out) {\n       log.error(\"Exception encountered while writing to output stream\", exception);\n       outputException(out, exception);\n     } finally {\n+      close();\n+    }\n+  }\n+\n+  @Override\n+  public void close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEzNDMwNg==", "bodyText": "Argh, yes. Thanks for the catch!", "url": "https://github.com/confluentinc/ksql/pull/5883#discussion_r461134306", "createdAt": "2020-07-27T19:58:25Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/streaming/TopicStreamWriter.java", "diffHunk": "@@ -137,7 +138,15 @@ public void write(final OutputStream out) {\n       log.error(\"Exception encountered while writing to output stream\", exception);\n       outputException(out, exception);\n     } finally {\n+      close();\n+    }\n+  }\n+\n+  @Override\n+  public void close() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTEyODg3NA=="}, "originalCommit": {"oid": "4ed8ba06245de450341bceb817b9ec431b97aaf3"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2986, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}