{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTQ5OTYx", "number": 4591, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODowODoyNlrODhKqzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoxMDozMVrODhKtiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTA0Mzk3OnYy", "diffSide": "LEFT", "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/InsertsStreamArgs.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODowODoyNlrOFrx63A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1OToyMlrOFsSXLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MDk3Mg==", "bodyText": "It would be preferable to have all the protocol model classes immutable.\nAll you need to do is change the JsonObject to ImmutableMap.  This is actually preferable, as exposing properties is currently exposing mutable internal state, which ain't pretty.\n public final ImmutableMap<String, Object> properties;\n\n...   \n\nthis.properties = properties == null \n    ? ImmutableMap.of()\n     : ImmutableMap.copyOf(properties);", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381450972", "createdAt": "2020-02-19T18:08:26Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/InsertsStreamArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n package io.confluent.ksql.api.server.protocol;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.errorprone.annotations.Immutable;\n import io.vertx.core.json.JsonObject;\n import java.util.Map;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to an insert stream request\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU5NTA1Mw==", "bodyText": "Exposing an ImmutableMap doesn't work as it complains that the value (Object) in the Immutable map is not itself Immutable.\nThis all starts to get complicated. I also notice that the current KsqlRequest class which does something similar (has properties) is not marked as Immutable:\nhttps://github.com/confluentinc/ksql/blob/master/ksql-rest-model/src/main/java/io/confluent/ksql/rest/entity/KsqlRequest.java", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381595053", "createdAt": "2020-02-19T22:55:29Z", "author": {"login": "purplefox"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/InsertsStreamArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n package io.confluent.ksql.api.server.protocol;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.errorprone.annotations.Immutable;\n import io.vertx.core.json.JsonObject;\n import java.util.Map;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to an insert stream request\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MDk3Mg=="}, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTYwMTc1NA==", "bodyText": "Using ImmutableMap to take a copy of a map passed into an object is not going to give you the encapsulation you require unless the keys and values in the map are themselves immutable.\nI notice quite a few places in the code we're talking \"immutable\" copies of Map<String, ?> or Map<String, Object> so this pattern currently seems broken anyway.", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381601754", "createdAt": "2020-02-19T23:13:04Z", "author": {"login": "purplefox"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/InsertsStreamArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n package io.confluent.ksql.api.server.protocol;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.errorprone.annotations.Immutable;\n import io.vertx.core.json.JsonObject;\n import java.util.Map;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to an insert stream request\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MDk3Mg=="}, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4MjUxMQ==", "bodyText": "Yep, fair enough.", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381982511", "createdAt": "2020-02-20T12:59:22Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/InsertsStreamArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n package io.confluent.ksql.api.server.protocol;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.errorprone.annotations.Immutable;\n import io.vertx.core.json.JsonObject;\n import java.util.Map;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to an insert stream request\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MDk3Mg=="}, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTA0OTg5OnYy", "diffSide": "LEFT", "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/QueryResponseMetadata.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoxMDoxMlrOFrx-iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoxMDoxMlrOFrx-iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MTkxMg==", "bodyText": "As above.", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381451912", "createdAt": "2020-02-19T18:10:12Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/QueryResponseMetadata.java", "diffHunk": "@@ -15,14 +15,12 @@\n \n package io.confluent.ksql.api.server.protocol;\n \n-import com.google.errorprone.annotations.Immutable;\n import java.util.List;\n import java.util.Objects;\n \n /**\n  * Represents the metadata of a query stream response\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTA1MDk3OnYy", "diffSide": "LEFT", "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/QueryStreamArgs.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoxMDozMVrOFrx_NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoxMDozMVrOFrx_NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ1MjA4NQ==", "bodyText": "As above.", "url": "https://github.com/confluentinc/ksql/pull/4591#discussion_r381452085", "createdAt": "2020-02-19T18:10:31Z", "author": {"login": "big-andy-coates"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/protocol/QueryStreamArgs.java", "diffHunk": "@@ -16,15 +16,13 @@\n package io.confluent.ksql.api.server.protocol;\n \n import com.fasterxml.jackson.annotation.JsonProperty;\n-import com.google.errorprone.annotations.Immutable;\n import io.vertx.core.json.JsonObject;\n import java.util.Map;\n import java.util.Objects;\n \n /**\n  * Represents the arguments to a query stream request\n  */\n-@Immutable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99bdd2052fb150342536cdbb966867298b016d26"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2194, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}