{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzI3NTc4", "number": 4626, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowMzo1NVrODi0JEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOToyMzo0MlrODi0iGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODMyNDY0OnYy", "diffSide": "RIGHT", "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowMzo1NVrOFuRa-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0MDoxOFrOFuX5xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NDI1MQ==", "bodyText": "Is this recommendation Docker-specific? Seems like it would be applicable for native deployments as well.", "url": "https://github.com/confluentinc/ksql/pull/4626#discussion_r384064251", "createdAt": "2020-02-25T19:03:55Z", "author": {"login": "mikebin"}, "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "diffHunk": "@@ -80,4 +80,29 @@ If you're running ksqlDB server in a Docker container, run the\n the `ksql-server` container is `Up`. Check the health of the process in\n the container by running `docker logs <ksql-server-container-id>`.\n \n-Page last revised on: {{ git_revision_date }}\n+Check a headless ksqlDB Server running in a Docker Container ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131017bf9446ef0dafed0340bcb220450efeb5ca"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MDQzOQ==", "bodyText": "@mikebin I reworked this section to be more general.", "url": "https://github.com/confluentinc/ksql/pull/4626#discussion_r384170439", "createdAt": "2020-02-25T22:40:18Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "diffHunk": "@@ -80,4 +80,29 @@ If you're running ksqlDB server in a Docker container, run the\n the `ksql-server` container is `Up`. Check the health of the process in\n the container by running `docker logs <ksql-server-container-id>`.\n \n-Page last revised on: {{ git_revision_date }}\n+Check a headless ksqlDB Server running in a Docker Container ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NDI1MQ=="}, "originalCommit": {"oid": "131017bf9446ef0dafed0340bcb220450efeb5ca"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODM4ODczOnYy", "diffSide": "RIGHT", "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOToyMzo0MlrOFuSDRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMjo0MDo1MFrOFuX6xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NDU2NA==", "bodyText": "Would using the built in script ksql-print-metrics <port=NNNN> be an alternative? Not sure it's any better, but it's an out-of-the-box option to consider.", "url": "https://github.com/confluentinc/ksql/pull/4626#discussion_r384074564", "createdAt": "2020-02-25T19:23:42Z", "author": {"login": "mikebin"}, "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "diffHunk": "@@ -80,4 +80,29 @@ If you're running ksqlDB server in a Docker container, run the\n the `ksql-server` container is `Up`. Check the health of the process in\n the container by running `docker logs <ksql-server-container-id>`.\n \n-Page last revised on: {{ git_revision_date }}\n+Check a headless ksqlDB Server running in a Docker Container \n+------------------------------------------------------------\n+\n+A headless deployment of ksqlDB Server doesn't have a REST server that you can\n+query for health. Instead, you can probe the JMX port for liveness. A JMX probe\n+is the most reliable way to determine readiness of a headless deployment.\n+\n+The following command probes the JMX port by using the Netcat utility.\n+\n+```bash\n+nc -z <ksql-node>:1099", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "131017bf9446ef0dafed0340bcb220450efeb5ca"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE3MDY5NA==", "bodyText": "@mikebin I made this more prominent earlier in the topic.", "url": "https://github.com/confluentinc/ksql/pull/4626#discussion_r384170694", "createdAt": "2020-02-25T22:40:50Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/operate-and-deploy/installation/check-ksqldb-server-health.md", "diffHunk": "@@ -80,4 +80,29 @@ If you're running ksqlDB server in a Docker container, run the\n the `ksql-server` container is `Up`. Check the health of the process in\n the container by running `docker logs <ksql-server-container-id>`.\n \n-Page last revised on: {{ git_revision_date }}\n+Check a headless ksqlDB Server running in a Docker Container \n+------------------------------------------------------------\n+\n+A headless deployment of ksqlDB Server doesn't have a REST server that you can\n+query for health. Instead, you can probe the JMX port for liveness. A JMX probe\n+is the most reliable way to determine readiness of a headless deployment.\n+\n+The following command probes the JMX port by using the Netcat utility.\n+\n+```bash\n+nc -z <ksql-node>:1099", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA3NDU2NA=="}, "originalCommit": {"oid": "131017bf9446ef0dafed0340bcb220450efeb5ca"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1997, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}