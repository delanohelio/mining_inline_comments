{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzI2ODcx", "number": 5645, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MToxOVrOEHLg8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MToxOVrOEHLg8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1OTY0MTQ1OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/ValidatedCommandFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MToxOVrOGmbXKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjo1MToxOVrOGmbXKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0NzM3MQ==", "bodyText": "I suppose this isn't strictly true if the version reading is different than the version writing; but I'm not opposed to the extra safety net \ud83d\ude1b", "url": "https://github.com/confluentinc/ksql/pull/5645#discussion_r442947371", "createdAt": "2020-06-19T16:51:19Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/computation/ValidatedCommandFactory.java", "diffHunk": "@@ -61,19 +57,56 @@ public Command create(\n    * @param context The KSQL engine snapshot to validate the command against.\n    * @return A validated command, which is safe to enqueue onto the command topic.\n    */\n+  @SuppressWarnings(\"MethodMayBeStatic\") // Not static to allow dependency injection\n   public Command create(\n       final ConfiguredStatement<? extends Statement> statement,\n       final ServiceContext serviceContext,\n-      final KsqlExecutionContext context) {\n+      final KsqlExecutionContext context\n+  ) {\n+    return ensureDeserializable(createCommand(statement, serviceContext, context));\n+  }\n+\n+  /**\n+   * Ensure any command written to the command topic can be deserialized.\n+   *\n+   * <p>Any command that can't be deserialized is a bug. However, given a non-deserializable\n+   * command will kill the command runner thread, this is a safety net to ensure commands written to\n+   * the command topic can be deserialzied.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "654b1cc73bc6dc94c1601a55423f22297763c476"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3188, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}