{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzAyMTU2", "number": 5813, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo1MDo1MVrOEN8iug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMTozMzo1MFrOEN_8-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDU4ODc0OnYy", "diffSide": "RIGHT", "path": "docs/concepts/functions.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo1MDo1MVrOGw1bNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODo1MDo1MVrOGw1bNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg2MDE0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | catgory     | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |\n          \n          \n            \n            | category    | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453860149", "createdAt": "2020-07-13T18:50:51Z", "author": {"login": "JimGalasyn"}, "path": "docs/concepts/functions.md", "diffHunk": "@@ -258,6 +258,7 @@ commands.\n |-------------|----------------------------------------------------------------------|----------|\n | name        | The case-insensitive name of the UDF(s) represented by this class.   | Yes      |\n | description | A string describing generally what the function(s) in this class do. | Yes      |\n+| catgory     | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa21d2aa0d1d45d33a587b9ff43b1932a229ce41"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTE0MDUxOnYy", "diffSide": "RIGHT", "path": "docs/concepts/functions.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMTozMToyM1rOGw6n_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzozNDowOFrOGw-X3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NTM0MA==", "bodyText": "there's an approved KLIP (see #5269) that proposes to add group for configuration grouping. Having \"category\" and \"group\" both present for different purposes might be confusing. We might want \"displayGroup\" and \"configGroup\" maybe? Or do we want to reuse the grouping for both?", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453945340", "createdAt": "2020-07-13T21:31:23Z", "author": {"login": "agavra"}, "path": "docs/concepts/functions.md", "diffHunk": "@@ -258,6 +258,7 @@ commands.\n |-------------|----------------------------------------------------------------------|----------|\n | name        | The case-insensitive name of the UDF(s) represented by this class.   | Yes      |\n | description | A string describing generally what the function(s) in this class do. | Yes      |\n+| category    | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk1MzE5Mg==", "bodyText": "hmm, that's interesting - i had forgotten where that particular conversation landed. Seems like composing groups of functions you want to assign certain config values to is more likely to be useful in the arena of user-specific, custom-developed UDFs than it is in the general code-base ? Otherwise you would surely need a way to define the groups themselves in the properties file, not in the source code (and i see that this is mentioned in the klip as a possible future enhancement). Naming aside, I see that as an orthogonal concern to the purpose of this PR. Perhaps if that klip is implemented it would make most sense to explicitly call the new annotation attribute it proposes something like \"configGroup\" to be abundantly clear about what it implies ?\nTo be clear, my goal here is to provide a grouping or categorization which basically mirrors the way you always see functions grouped in database documentation.", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453953192", "createdAt": "2020-07-13T21:47:16Z", "author": {"login": "blueedgenick"}, "path": "docs/concepts/functions.md", "diffHunk": "@@ -258,6 +258,7 @@ commands.\n |-------------|----------------------------------------------------------------------|----------|\n | name        | The case-insensitive name of the UDF(s) represented by this class.   | Yes      |\n | description | A string describing generally what the function(s) in this class do. | Yes      |\n+| category    | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NTM0MA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwNjc0OQ==", "bodyText": "Yup, I totally understand that the intention here is entirely different - but that should be clear from the naming of the attribute. Perhaps we can make it clear but just changing the name of configGroup and leaving this as category", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454006749", "createdAt": "2020-07-13T23:34:08Z", "author": {"login": "agavra"}, "path": "docs/concepts/functions.md", "diffHunk": "@@ -258,6 +258,7 @@ commands.\n |-------------|----------------------------------------------------------------------|----------|\n | name        | The case-insensitive name of the UDF(s) represented by this class.   | Yes      |\n | description | A string describing generally what the function(s) in this class do. | Yes      |\n+| category    | For grouping similar functions in the output of SHOW FUNCTIONS.      | No       |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NTM0MA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTE0NzQ1OnYy", "diffSide": "RIGHT", "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMTozMzo1MFrOGw6sPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNDoxMToxNVrOGxDU_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA==", "bodyText": "it might be better to have these just be strings so that users can categorize their own into whatever categories they want", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453946428", "createdAt": "2020-07-13T21:33:50Z", "author": {"login": "agavra"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk1NTQ0MA==", "bodyText": "i did wonder about that but decided i'd rather be restrictive so that we don't accidentally introduce a plethora of too-similar ones into the codebase over time. Perhaps a good compromise would be to have a \"CUSTOM\" enum value ? Maybe even set that as the default value so that if someone doesn't set a value for this in their own UDF then it just gets set correctly for them ? WDYT ?", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r453955440", "createdAt": "2020-07-13T21:50:27Z", "author": {"login": "blueedgenick"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAwODc2NQ==", "bodyText": "I don't think that should really be a concern if we group all of the values in a constant file just like we have here as an enum - people follow examples that are already there, so they'll tend to look in that file before introducing new ones. In the worst case, we'll have some unnecessary categories - but it would be compatible to change those and clean them up.\nMy preference is to avoid enums in public APIs because they're difficult to extend and impossible to remove.", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454008765", "createdAt": "2020-07-13T23:37:37Z", "author": {"login": "agavra"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAyOTM3OQ==", "bodyText": "gotcha, i'll change that then.\nJust for my own edification, why is it harder to extend or remove enum constants in an API than static strings ? i would naively suppose that removing existing things always has a similar backwards-compatibility problem, however they are defined ? And by \"extending\" here, do you mean adding new values ?", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454029379", "createdAt": "2020-07-14T00:41:42Z", "author": {"login": "blueedgenick"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA3NTc2NQ==", "bodyText": "why is it harder to extend or remove enum constants in an API than static strings\n\nA few reasons. One is logistically if external repos depend on a removed enum they can't just \"add it in\" and keep going (which you can if you depended on a removed string constant). Second is a little bit more philosophical, you shouldn't remove an enum because it changes the ordinals of everything after it - which I've been bit by before (though unlikely it'll fall into play here). I think JSON schema might actually fail compatibility checks if you removed an enum from a schema (not that we use json schema yet...)\n\nAnd by \"extending\" here, do you mean adding new values ?\n\nyeah", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454075765", "createdAt": "2020-07-14T03:24:17Z", "author": {"login": "agavra"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA4NzkzMg==", "bodyText": "got it, that makes sense. thanks for taking the time to share!", "url": "https://github.com/confluentinc/ksql/pull/5813#discussion_r454087932", "createdAt": "2020-07-14T04:11:15Z", "author": {"login": "blueedgenick"}, "path": "ksqldb-udf/src/main/java/io/confluent/ksql/function/FunctionCategory.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright 2019 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use this file except\n+ * in compliance with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software distributed under the License\n+ * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and limitations under the\n+ * License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+public enum FunctionCategory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NjQyOA=="}, "originalCommit": {"oid": "1ec7f061cc2ac852af141758b5429e9e066bde13"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3124, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}