{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyODcyODcx", "number": 4498, "title": "feat: New API - get pull queries plugged into backend", "bodyText": "Description\nImplements #4257\nThis is a stacked commit so please just review the commits after 8f94874\nThis PR plugs pull queries in the new API into the real ksqlDB backend.\nThere are a couple of delegate classes to break cyclic dependencies between rest-app/rest-model/ksql-api - these will go away when KLIP-15 is complete.\nTesting done\nAdded new integration test case.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-02-09T21:01:10Z", "url": "https://github.com/confluentinc/ksql/pull/4498", "merged": true, "mergeCommit": {"oid": "cd7c058edf24d47e0f2eb7dedc217404a66ea8a9"}, "closed": true, "closedAt": "2020-02-11T22:51:07Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDMyZpAFqTM1NjQ1NTk3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDZK7UgBqjMwMjg0MjEzNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDU1OTc1", "url": "https://github.com/confluentinc/ksql/pull/4498#pullrequestreview-356455975", "createdAt": "2020-02-11T07:39:25Z", "commit": {"oid": "5bb65ff798ff73d75842b1331e4ef9a8a79aa611"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzozOToyNVrOFn_bIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzo0MDo1NVrOFn_ckA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ3NzkyMg==", "bodyText": "To check my understanding: the problem with circular dependencies in this PR is that the new ksql-api module wants access to PullQueryExecutor and related files from ksql-rest-app, but that's not possible right now because ksql-rest-app depends on ksql-api, yes? And the reason you say this is temporary is because once the new API work is done, ksql-api and ksql-rest-app will be unified into a single module? Or did you have other plans", "url": "https://github.com/confluentinc/ksql/pull/4498#discussion_r377477922", "createdAt": "2020-02-11T07:39:25Z", "author": {"login": "vcrfxia"}, "path": "ksql-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/PullQueryExecutorDelegate.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.execution;\n+\n+import io.confluent.ksql.api.plugin.PullQueryApiExecutor;\n+import io.confluent.ksql.api.plugin.TableRows;\n+import io.confluent.ksql.parser.tree.Query;\n+import io.confluent.ksql.query.QueryId;\n+import io.confluent.ksql.rest.entity.TableRowsEntity;\n+import io.confluent.ksql.schema.ksql.LogicalSchema;\n+import io.confluent.ksql.services.ServiceContext;\n+import io.confluent.ksql.statement.ConfiguredStatement;\n+import java.util.List;\n+\n+/**\n+ * Wrapper to break circular dependencies between modules. This is temporary until we migrate all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb65ff798ff73d75842b1331e4ef9a8a79aa611"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ3ODI4OA==", "bodyText": "This change to call queryHandle::start in a worker thread is unrelated to the addition of pull query support, right? (Just an improvement from the PR this one builds on?)", "url": "https://github.com/confluentinc/ksql/pull/4498#discussion_r377478288", "createdAt": "2020-02-11T07:40:55Z", "author": {"login": "vcrfxia"}, "path": "ksql-api/src/main/java/io/confluent/ksql/api/server/BlockingQueryPublisher.java", "diffHunk": "@@ -132,7 +128,16 @@ protected void maybeSend() {\n \n   @Override\n   protected void afterSubscribe() {\n-    queryHandle.start();\n+    // Run async as it can block\n+    executeOnWorker(queryHandle::start);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb65ff798ff73d75842b1331e4ef9a8a79aa611"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd104d0bfb9aa714680d7e328fc2a86c038f1d0f", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/cd104d0bfb9aa714680d7e328fc2a86c038f1d0f", "committedDate": "2020-02-11T22:06:07Z", "message": "pull queries"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb65ff798ff73d75842b1331e4ef9a8a79aa611", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/5bb65ff798ff73d75842b1331e4ef9a8a79aa611", "committedDate": "2020-02-10T11:42:04Z", "message": "Added a few more integration test cases"}, "afterCommit": {"oid": "cd104d0bfb9aa714680d7e328fc2a86c038f1d0f", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/cd104d0bfb9aa714680d7e328fc2a86c038f1d0f", "committedDate": "2020-02-11T22:06:07Z", "message": "pull queries"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4994, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}