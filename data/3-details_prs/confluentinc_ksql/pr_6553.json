{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjU5MDM4", "number": 6553, "title": "feat: add WITH clause and QUERY_ID property to INSERT INTO statements", "bodyText": "Description\nImplements #6533\nAdd a WITH clause to the INSERT statement to allow users specify a custom query QUERY_ID.\nFor intance:\nksql> insert into s1 with (query_id='my_insert_id') select * from s1;\n\n Message                            \n------------------------------------\n Created query with ID MY_INSERT_ID \n------------------------------------\n\nksql> show queries;\n\n Query ID     | Query Type | Status    | Sink Name | Sink Kafka Topic | Query String                                              \n----------------------------------------------------------------------------------------------------------------------------------\n MY_INSERT_ID | PERSISTENT | RUNNING:1 | S1        | t1               | insert into s1 with (query_id='my_insert_id') select * from s1; \n----------------------------------------------------------------------------------------------------------------------------------\nFor detailed information on a Query run: EXPLAIN <Query ID>;\n\nksql> terminate my_insert_id;\n\n Message           \n-------------------\n Query terminated. \n-------------------\n\nTesting done\nDescribe the testing strategy. Unit and integration tests are expected for any behavior changes.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-10-30T20:11:17Z", "url": "https://github.com/confluentinc/ksql/pull/6553", "merged": true, "mergeCommit": {"oid": "a344114000095d140bbd76daa1e05c0ac1a88cce"}, "closed": true, "closedAt": "2020-11-06T16:24:15Z", "author": {"login": "spena"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXskf9gFqTUyMTAwMzM4NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZ4LCggBqjM5Njc1NDYyOTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDAzMzg0", "url": "https://github.com/confluentinc/ksql/pull/6553#pullrequestreview-521003384", "createdAt": "2020-10-30T20:13:11Z", "commit": {"oid": "e2f2f6eaa7f811dcd6b86fcb3ea11938906835b6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxMzoxMVrOHrerLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxMzoxMVrOHrerLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MzM4OA==", "bodyText": "I chose ID as the best name for this property. However, if it is confusing with the ID keyword in the schema (i.e. ID id int), then we can consider these options.\nwith (id = 'my_id')\nwith (query_id = 'my_id')\nwith (name = 'my_id')\nwith (alias = 'my_id')", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r515353388", "createdAt": "2020-10-30T20:13:11Z", "author": {"login": "spena"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/properties/with/InsertIntoConfigs.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.properties.with;\n+\n+import org.apache.kafka.common.config.ConfigDef;\n+\n+/**\n+ * 'With Clause' properties for 'INSERT INTO' statements.\n+ */\n+public final class InsertIntoConfigs {\n+  public static final String QUERY_ID_PROPERTY = \"ID\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f2f6eaa7f811dcd6b86fcb3ea11938906835b6"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2f2f6eaa7f811dcd6b86fcb3ea11938906835b6", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/e2f2f6eaa7f811dcd6b86fcb3ea11938906835b6", "committedDate": "2020-10-30T20:06:51Z", "message": "feat: add WITH clause and ID property to INSERT INTO statements"}, "afterCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/0c24324cac724808277d04779ec1b3c1d3802df3", "committedDate": "2020-11-02T16:42:22Z", "message": "feat: add WITH clause and ID property to INSERT INTO statements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTM4ODMy", "url": "https://github.com/confluentinc/ksql/pull/6553#pullrequestreview-522938832", "createdAt": "2020-11-03T23:06:55Z", "commit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNjo1NVrOHtDp2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzoxNDo1OVrOHtD0vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzgzMw==", "bodyText": "I think originally I liked id, but now my preference is query_id \ud83d\ude02 it gives a little bit more clarity into what exactly it is. cc @colinhicks", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517007833", "createdAt": "2020-11-03T23:06:55Z", "author": {"login": "agavra"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/properties/with/InsertIntoConfigs.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.properties.with;\n+\n+import org.apache.kafka.common.config.ConfigDef;\n+\n+/**\n+ * 'With Clause' properties for 'INSERT INTO' statements.\n+ */\n+public final class InsertIntoConfigs {\n+  public static final String QUERY_ID_PROPERTY = \"ID\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MzM4OA=="}, "originalCommit": {"oid": "e2f2f6eaa7f811dcd6b86fcb3ea11938906835b6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNzk3Mg==", "bodyText": "let's have some more detailed documentation here. What is it used for? what happens if it isn't supplied? what are valid values? is it case insensitive?", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517007972", "createdAt": "2020-11-03T23:07:18Z", "author": {"login": "agavra"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/properties/with/InsertIntoConfigs.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.properties.with;\n+\n+import org.apache.kafka.common.config.ConfigDef;\n+\n+/**\n+ * 'With Clause' properties for 'INSERT INTO' statements.\n+ */\n+public final class InsertIntoConfigs {\n+  public static final String QUERY_ID_PROPERTY = \"ID\";\n+\n+  private static final ConfigDef CONFIG_DEF = new ConfigDef()\n+      .define(\n+          QUERY_ID_PROPERTY,\n+          ConfigDef.Type.STRING,\n+          null,\n+          ConfigDef.Importance.LOW,\n+          \"Custom query ID to use for INSERT INTO queries\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwODI5MQ==", "bodyText": "we should make this a ConfigDef.Validator and validate it as part of the config def", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517008291", "createdAt": "2020-11-03T23:08:09Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/QueryIdUtil.java", "diffHunk": "@@ -24,18 +24,62 @@\n import io.confluent.ksql.query.QueryId;\n import io.confluent.ksql.query.id.QueryIdGenerator;\n import io.confluent.ksql.util.KsqlException;\n+\n+import java.util.Arrays;\n+import java.util.Optional;\n import java.util.Set;\n import java.util.concurrent.ThreadLocalRandom;\n+import java.util.regex.Pattern;\n+import java.util.stream.Collectors;\n \n /**\n  * Utility for constructing {@link QueryId}s - separate from {@code EngineExecutor} for\n  * easy access to unit testing.\n  */\n-final class QueryIdUtil {\n+public final class QueryIdUtil {\n+  private static final Pattern VALID_QUERY_ID = Pattern.compile(\"[A-Za-z0-9_]+\");\n+  private static final ReservedQueryIdsPrefixes[] PREFIXES = ReservedQueryIdsPrefixes.values();\n+\n+  public enum ReservedQueryIdsPrefixes {\n+    INSERT(\"INSERTQUERY_\"),\n+    CTAS(\"CTAS_\"),\n+    CSAS(\"CSAS_\");\n+\n+    private final String prefix;\n+    ReservedQueryIdsPrefixes(final String prefix) {\n+      this.prefix = prefix;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return prefix;\n+    }\n+  }\n \n   private QueryIdUtil() {\n   }\n \n+  private static void validateWithQueryId(final String queryId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwOTgzMg==", "bodyText": "should we also validate to make sure they don't register the same queryID twice? (please add a test for this)", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517009832", "createdAt": "2020-11-03T23:12:41Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/QueryIdUtil.java", "diffHunk": "@@ -49,14 +93,21 @@ static QueryId buildId(\n       final MetaStore metaStore,\n       final QueryIdGenerator idGenerator,\n       final OutputNode outputNode,\n-      final boolean createOrReplaceEnabled) {\n+      final boolean createOrReplaceEnabled,\n+      final Optional<String> withQueryId) {\n+    if (withQueryId.isPresent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAxMDI1Nw==", "bodyText": "let's specify here that this is only intended to be used by INSERT INTO - that way we can remove it when we remove INSERT INTO", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517010257", "createdAt": "2020-11-03T23:14:03Z", "author": {"login": "agavra"}, "path": "ksqldb-parser/src/main/java/io/confluent/ksql/parser/tree/QueryContainer.java", "diffHunk": "@@ -33,4 +35,11 @@\n    * @return the sink info.\n    */\n   Sink getSink();\n+\n+  /**\n+   * Return an optional query ID if specified by the user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAxMDYyMw==", "bodyText": "Can we add a test in RecoveryTest to make sure we can recover create/terminate with custom query IDs?", "url": "https://github.com/confluentinc/ksql/pull/6553#discussion_r517010623", "createdAt": "2020-11-03T23:14:59Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/test/java/io/confluent/ksql/engine/KsqlEngineTest.java", "diffHunk": "@@ -347,6 +347,31 @@ public void shouldThrowWhenInsertIntoSchemaDoesNotMatch() {\n         is(\"insert into bar select orderTime, itemid from orders;\")));\n   }\n \n+  @Test\n+  public void shouldExecuteInsertIntoWithCustomQueryId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c24324cac724808277d04779ec1b3c1d3802df3", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/0c24324cac724808277d04779ec1b3c1d3802df3", "committedDate": "2020-11-02T16:42:22Z", "message": "feat: add WITH clause and ID property to INSERT INTO statements"}, "afterCommit": {"oid": "3b669215474ea1c6d10302aca259e262a5029ed6", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/3b669215474ea1c6d10302aca259e262a5029ed6", "committedDate": "2020-11-04T20:19:05Z", "message": "chore: work on PR feedback and Almog's suggestions\n\n- Change ID to QUERY_ID\n- Better comments in InsertIntoConfigs\n- Check if new QueryId already exists\n- Add RecoverTest test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b669215474ea1c6d10302aca259e262a5029ed6", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/3b669215474ea1c6d10302aca259e262a5029ed6", "committedDate": "2020-11-04T20:19:05Z", "message": "chore: work on PR feedback and Almog's suggestions\n\n- Change ID to QUERY_ID\n- Better comments in InsertIntoConfigs\n- Check if new QueryId already exists\n- Add RecoverTest test"}, "afterCommit": {"oid": "f9d7d70a9eedc4377d1411f3c0344194e1447083", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/f9d7d70a9eedc4377d1411f3c0344194e1447083", "committedDate": "2020-11-05T15:40:45Z", "message": "chore: fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f9d7d70a9eedc4377d1411f3c0344194e1447083", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/f9d7d70a9eedc4377d1411f3c0344194e1447083", "committedDate": "2020-11-05T15:40:45Z", "message": "chore: fix test"}, "afterCommit": {"oid": "66ce5e75c60b1234b7f88a59243734ea14fc97aa", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/66ce5e75c60b1234b7f88a59243734ea14fc97aa", "committedDate": "2020-11-05T21:49:19Z", "message": "chore: fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e06547ce5069a84fa4bafc5f30bf54f120a8d33b", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/e06547ce5069a84fa4bafc5f30bf54f120a8d33b", "committedDate": "2020-11-06T14:51:53Z", "message": "feat: add WITH clause and ID property to INSERT INTO statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e6d37e3111114e90318b0bca8e151114efdc256", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/5e6d37e3111114e90318b0bca8e151114efdc256", "committedDate": "2020-11-06T14:51:53Z", "message": "chore: work on PR feedback and Almog's suggestions\n\n- Change ID to QUERY_ID\n- Better comments in InsertIntoConfigs\n- Check if new QueryId already exists\n- Add RecoverTest test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "075bc02f8363e6fda60ba998e25fd047b1b96d31", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/075bc02f8363e6fda60ba998e25fd047b1b96d31", "committedDate": "2020-11-06T14:51:53Z", "message": "chore: fix test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "66ce5e75c60b1234b7f88a59243734ea14fc97aa", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/66ce5e75c60b1234b7f88a59243734ea14fc97aa", "committedDate": "2020-11-05T21:49:19Z", "message": "chore: fix test"}, "afterCommit": {"oid": "075bc02f8363e6fda60ba998e25fd047b1b96d31", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/075bc02f8363e6fda60ba998e25fd047b1b96d31", "committedDate": "2020-11-06T14:51:53Z", "message": "chore: fix test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4600, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}