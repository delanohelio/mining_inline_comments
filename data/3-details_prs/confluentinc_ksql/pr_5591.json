{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMjc0MDQ0", "number": 5591, "title": "fix: make stream and column names case-insensitive in /inserts-stream", "bodyText": "Description\nThe stream name and column names provided to the /inserts-stream endpoint are both currently case-sensitive, meaning an attempted insert into a stream with name foo will fail if the stream actually has name FOO in the metastore (e.g., if the stream were created with create stream foo ...). The same holds for column names as well. This PR updates the /inserts-stream endpoint to be case-insensitive by default, in order to be consistent with the rest of ksqlDB.\nBREAKING CHANGE: Stream name and column names provided to the /inserts-stream endpoint are no longer case-sensitive. Instead, they will be upper-cased by default. To preserve case-sensitivity, surround the names with double-quotes or backticks.\nTesting done\nAdded integration tests.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-06-10T07:57:59Z", "url": "https://github.com/confluentinc/ksql/pull/5591", "merged": true, "mergeCommit": {"oid": "e9e3042f1bdbd6da384146410f866aab6b12b987"}, "closed": true, "closedAt": "2020-06-10T20:00:29Z", "author": {"login": "vcrfxia"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpu6bpAH2gAyNDMyMjc0MDQ0OmQ0MzNlMzczMTI3NDk3YjdkNGZhYWI4YWMxNDYwMjQwNDMyMjdlMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp93V1AH2gAyNDMyMjc0MDQ0OmRhZmFiN2Y0ZDQ2M2JhMDJjMzllNjUwZjI2Y2FkNDA4ZTlhOGMxYzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d433e373127497b7d4faab8ac146024043227e2d", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/d433e373127497b7d4faab8ac146024043227e2d", "committedDate": "2020-06-10T00:56:26Z", "message": "fix: make stream and column names case-insensitive in /inserts-stream"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2588878fc316ba7b6e29d64a5ddbc06a514f2db6", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/2588878fc316ba7b6e29d64a5ddbc06a514f2db6", "committedDate": "2020-06-10T01:04:37Z", "message": "test: add test for case insensitive insert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9943e422da8645546cbb9dab6caf2aed26ce2e2", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/b9943e422da8645546cbb9dab6caf2aed26ce2e2", "committedDate": "2020-06-10T01:26:11Z", "message": "test: tests for case sensitivity when quoted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "905359f44a9378a30d45623453e56c93c431c468", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/905359f44a9378a30d45623453e56c93c431c468", "committedDate": "2020-06-10T07:23:45Z", "message": "test: verify case-insensitivity in client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODAzOTk0", "url": "https://github.com/confluentinc/ksql/pull/5591#pullrequestreview-427803994", "createdAt": "2020-06-10T07:59:55Z", "commit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo1OTo1NVrOGhpXSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzo1OTo1NVrOGhpXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzMzg5Nw==", "bodyText": "It's not great that this logic is repeated here and also in the method of the same name in ParserUtil.java. I couldn't think of a way to combine them, though, since the ParserUtil method is specific to the AST.", "url": "https://github.com/confluentinc/ksql/pull/5591#discussion_r437933897", "createdAt": "2020-06-10T07:59:55Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ServerUtils.java", "diffHunk": "@@ -97,6 +97,20 @@ public static String convertCommaSeparatedWilcardsToRegex(final String csv) {\n     return out.toString();\n   }\n \n+  // See ParserUtil#getIdentifierText()\n+  public static String getIdentifierText(final String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODU1Mjgx", "url": "https://github.com/confluentinc/ksql/pull/5591#pullrequestreview-427855281", "createdAt": "2020-06-10T09:00:27Z", "commit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOToxMTowNFrOGhsDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOToxMzozOFrOGhsI_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3NzkzMA==", "bodyText": "Instead of iterating through the entries again in here and having an extra method, it would be simpler to call ServerUtils.getIdentifierText in the existing extractValues method.", "url": "https://github.com/confluentinc/ksql/pull/5591#discussion_r437977930", "createdAt": "2020-06-10T09:11:04Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/impl/KeyValueExtractor.java", "diffHunk": "@@ -69,6 +71,28 @@ public static GenericRow extractValues(final JsonObject values, final LogicalSch\n     return GenericRow.fromList(vals);\n   }\n \n+  static JsonObject convertColumnNameCase(final JsonObject jsonObjectWithCaseInsensitiveFields) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3ODIzNA==", "bodyText": "Do we really also support double quotes for escaping? Thought it was just backtick.", "url": "https://github.com/confluentinc/ksql/pull/5591#discussion_r437978234", "createdAt": "2020-06-10T09:11:36Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ServerUtils.java", "diffHunk": "@@ -97,6 +97,20 @@ public static String convertCommaSeparatedWilcardsToRegex(final String csv) {\n     return out.toString();\n   }\n \n+  // See ParserUtil#getIdentifierText()\n+  public static String getIdentifierText(final String text) {\n+    if (text.isEmpty()) {\n+      return \"\";\n+    }\n+\n+    final char firstChar = text.charAt(0);\n+    if (firstChar == '`' || firstChar == '\"') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3OTM4OQ==", "bodyText": "What about backtick?", "url": "https://github.com/confluentinc/ksql/pull/5591#discussion_r437979389", "createdAt": "2020-06-10T09:13:38Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/api/integration/ApiIntegrationTest.java", "diffHunk": "@@ -416,6 +417,50 @@ public void shouldInsertWithMissingValueField() {\n     shouldInsert(row);\n   }\n \n+  @Test\n+  public void shouldInsertWithCaseInsensitivity() {\n+\n+    // Given: lowercase fields names and stream name\n+    String target = TEST_STREAM.toLowerCase();\n+    JsonObject row = new JsonObject()\n+        .put(\"str\", \"HELLO\")\n+        .put(\"dec\", 12.21) // JsonObject does not accept BigDecimal\n+        .put(\"array\", new JsonArray().add(\"a\").add(\"b\"))\n+        .put(\"map\", new JsonObject().put(\"k1\", \"v1\").put(\"k2\", \"v2\"));\n+\n+    // Then:\n+    shouldInsert(target, row);\n+  }\n+\n+  @Test\n+  public void shouldTreatInsertTargetAsCaseSensitiveIfQuoted() {\n+    // Given:\n+    String target = \"`\" + TEST_STREAM.toLowerCase() + \"`\";\n+    JsonObject row = new JsonObject()\n+        .put(\"STR\", \"HELLO\")\n+        .put(\"LONG\", 1000L)\n+        .put(\"DEC\", 12.21) // JsonObject does not accept BigDecimal\n+        .put(\"ARRAY\", new JsonArray().add(\"a\").add(\"b\"))\n+        .put(\"MAP\", new JsonObject().put(\"k1\", \"v1\").put(\"k2\", \"v2\"));\n+\n+    // Then: request fails because stream name is invalid\n+    shouldRejectInsertRequest(target, row, \"Cannot insert values into an unknown stream: \" + target);\n+  }\n+\n+  @Test\n+  public void shouldTreatInsertColumnNamesAsCaseSensitiveIfQuoted() {\n+    // Given:\n+    JsonObject row = new JsonObject()\n+        .put(\"\\\"str\\\"\", \"HELLO\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905359f44a9378a30d45623453e56c93c431c468"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e88b870d6057753794a2b3e4c9df15aae2a0dc1", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/9e88b870d6057753794a2b3e4c9df15aae2a0dc1", "committedDate": "2020-06-10T17:33:42Z", "message": "test: test case sensitivity with backticks and double quotes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d695e130ece40f22690481226ee266539b8ccef4", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/d695e130ece40f22690481226ee266539b8ccef4", "committedDate": "2020-06-10T17:42:32Z", "message": "test: fix flake"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dafab7f4d463ba02c39e650f26cad408e9a8c1c4", "author": {"user": {"login": "vcrfxia", "name": "Victoria Xia"}}, "url": "https://github.com/confluentinc/ksql/commit/dafab7f4d463ba02c39e650f26cad408e9a8c1c4", "committedDate": "2020-06-10T18:21:38Z", "message": "Merge branch '6.0.x' into inserts-stream-case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4725, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}