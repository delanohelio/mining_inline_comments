{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDYwMjAy", "number": 6663, "title": "Pull query thread leak", "bodyText": "Description\nThis fixes a leaked executor service with 100 threads that is being created once-per-request for pull queries.\n\nThe first commit fixes the leaked executor.\nThe second enhances RQTT to (hopefully) catch such errors in the future (this is the second such bug in quick succession).\n\nThis bug was stopping RQTT running locally for me, because the JVM was running out of resources.\nIMPORTANT:  It looks to my untrained eye that the current pull query code is creating an executor with 100 threads on each request. (HARouting is created per-request).  Even with the code now closing down the executor, surely this isn't what we want?\nTesting done\nMinimal\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-11-23T23:35:41Z", "url": "https://github.com/confluentinc/ksql/pull/6663", "merged": true, "mergeCommit": {"oid": "1f425f160e683b470a1887f1b802a7ccf9881b38"}, "closed": true, "closedAt": "2020-11-24T09:35:53Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfdwjXAH2gAyNTI2MDYwMjAyOjUzYjk4Y2RhYzMxY2QwM2Q2ZDZjZGIyOWVjOTRmZDI1ZDY5ZTNjMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfeA6PAFqTUzNjkzMTE0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "53b98cdac31cd03d6d6cdb29ec94fd25d69e3c30", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/53b98cdac31cd03d6d6cdb29ec94fd25d69e3c30", "committedDate": "2020-11-23T23:29:10Z", "message": "chore: fix leaked executor service in pull query handling\n\nThis fixes a leaked executor service with 100 threads that is being created once-per-request for pull queries."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0400597448ec04159d8a9bc151856302bb19ca", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/8c0400597448ec04159d8a9bc151856302bb19ca", "committedDate": "2020-11-23T23:30:51Z", "message": "test: enhance test to catch leaked threads next time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTMxMTQ3", "url": "https://github.com/confluentinc/ksql/pull/6663#pullrequestreview-536931147", "createdAt": "2020-11-23T23:42:45Z", "commit": {"oid": "8c0400597448ec04159d8a9bc151856302bb19ca"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0Mjo0NVrOH4jwhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0NDo0OFrOH4jzcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2ODE2Nw==", "bodyText": "This must have accidentally been introduced in the refactor.  I'm surprised it didn't show up in benchmarking if the threads were being leaked.  I think that technically, it would have been eventually garbage collected once the executor was GCed, but it is certainly preferable to shut it down immediately.", "url": "https://github.com/confluentinc/ksql/pull/6663#discussion_r529068167", "createdAt": "2020-11-23T23:42:45Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/EngineExecutor.java", "diffHunk": "@@ -164,10 +164,12 @@ PullQueryResult executePullQuery(\n           ksqlConfig,\n           analysis,\n           statement);\n-      final HARouting routing = new HARouting(\n+\n+      try (HARouting routing = new HARouting(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0400597448ec04159d8a9bc151856302bb19ca"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA2ODkxMw==", "bodyText": "Very useful.  How did you discover the leak without this kind of test in place to begin with?", "url": "https://github.com/confluentinc/ksql/pull/6663#discussion_r529068913", "createdAt": "2020-11-23T23:44:48Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/rest/RestQueryTranslationTest.java", "diffHunk": "@@ -121,6 +127,17 @@ public void tearDown() {\n     REST_APP.closePersistentQueries();\n     REST_APP.dropSourcesExcept();\n     TEST_HARNESS.getKafkaCluster().deleteAllTopics(TestKsqlRestApp.getCommandTopicName());\n+\n+    if (STARTING_THREADS.get() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c0400597448ec04159d8a9bc151856302bb19ca"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4553, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}