{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MzM2NDQx", "number": 5105, "title": "feat: transient queries added to show queries output", "bodyText": "Description\nAddresses #4308\nThere's a known issue where if no persistent queries are running in a multi node environment and a transient query is running on node A, that transient query won't show up in Show queries executed to other nodes.\n#4910\nTesting done\n Query ID                                                            | Query Type | Status    | Sink Name | Sink Kafka Topic | Query String                                                                                                                                  \n---------------------------------------------------------------------------------------------------------------------------------------------\n CSAS_TEST_0                                                         | PUSH       | RUNNING:2 | TEST      | TEST             | CREATE STREAM TEST WITH (KAFKA_TOPIC='TEST', PARTITIONS=1, REPLICAS=1) AS SELECT * FROM KSQL_PROCESSING_LOG KSQL_PROCESSING_LOG EMIT CHANGES; \n _confluent-ksql-default_transient_4363766092250723780_1587488499684 | TRANSIENT  | RUNNING:1 |           |                  | select * from test emit changes;                                                                                                              \n---------------------------------------------------------------------------------------------------------------------------------------------\n\nID                   : _confluent-ksql-default_transient_4363766092250723780_1587488499684\nQuery Type           : TRANSIENT\nSQL                  : select * from test emit changes;\nHost Query Status    : {192.168.1.6:8089=RUNNING}\n\n Field   | Type                                                                                                                                                                                                                                                                                                                                    \n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n ROWTIME | BIGINT                                                                                                                                                                                                                                                                                                                                  \n ROWKEY  | VARCHAR(STRING)                                                                                                                                                                                                                                                                                                                         \n LOGGER  | VARCHAR(STRING)                                                                                                                                                                                                                                                                                                                         \n LEVEL   | VARCHAR(STRING)                                                                                                                                                                                                                                                                                                                         \n TIME    | BIGINT                                                                                                                                                                                                                                                                                                                                  \n MESSAGE | STRUCT<TYPE INTEGER, DESERIALIZATIONERROR STRUCT<ERRORMESSAGE VARCHAR(STRING), RECORDB64 VARCHAR(STRING), CAUSE ARRAY<VARCHAR(STRING)>, topic VARCHAR(STRING)>, RECORDPROCESSINGERROR STRUCT<ERRORMESSAGE VARCHAR(STRING), RECORD VARCHAR(STRING), CAUSE ARRAY<VARCHAR(STRING)>>, PRODUCTIONERROR STRUCT<ERRORMESSAGE VARCHAR(STRING)>> \n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nSources that this query reads from: \n-----------------------------------\nTEST\n\nFor source description please run: DESCRIBE [EXTENDED] <SourceId>\n\nExecution plan      \n--------------      \n > [ PROJECT ] | Schema: ROWKEY STRING KEY, ROWTIME BIGINT, ROWKEY STRING, LOGGER STRING, LEVEL STRING, TIME BIGINT, MESSAGE STRUCT<TYPE INTEGER, DESERIALIZATIONERROR STRUCT<ERRORMESSAGE STRING, RECORDB64 STRING, CAUSE ARRAY<STRING>, `topic` STRING>, RECORDPROCESSINGERROR STRUCT<ERRORMESSAGE STRING, RECORD STRING, CAUSE ARRAY<STRING>>, PRODUCTIONERROR STRUCT<ERRORMESSAGE STRING>> | Logger: 4363766092250723780.Project\n                 > [ SOURCE ] | Schema: ROWKEY STRING KEY, LOGGER STRING, LEVEL STRING, TIME BIGINT, MESSAGE STRUCT<TYPE INTEGER, DESERIALIZATIONERROR STRUCT<ERRORMESSAGE STRING, RECORDB64 STRING, CAUSE ARRAY<STRING>, `topic` STRING>, RECORDPROCESSINGERROR STRUCT<ERRORMESSAGE STRING, RECORD STRING, CAUSE ARRAY<STRING>>, PRODUCTIONERROR STRUCT<ERRORMESSAGE STRING>>, ROWTIME BIGINT, ROWKEY STRING | Logger: 4363766092250723780.KsqlTopic.Source\n\n\nProcessing topology \n------------------- \nTopologies:\n   Sub-topology: 0\n    Source: KSTREAM-SOURCE-0000000000 (topics: [TEST])\n      --> KSTREAM-TRANSFORMVALUES-0000000001\n    Processor: KSTREAM-TRANSFORMVALUES-0000000001 (stores: [])\n      --> Project\n      <-- KSTREAM-SOURCE-0000000000\n    Processor: Project (stores: [])\n      --> KSTREAM-FOREACH-0000000003\n      <-- KSTREAM-TRANSFORMVALUES-0000000001\n    Processor: KSTREAM-FOREACH-0000000003 (stores: [])\n      --> none\n      <-- Project\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-04-17T20:55:59Z", "url": "https://github.com/confluentinc/ksql/pull/5105", "merged": true, "mergeCommit": {"oid": "e8a2a63210219cbac7d979ec0915f1d2016398e2"}, "closed": true, "closedAt": "2020-04-23T16:57:04Z", "author": {"login": "stevenpyzhang"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYprrkgBqjMyNDYyNTc3OTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcafFbdAFqTM5OTI0Nzc1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3de8bc79377b8f46dab6970b185ec8ead738b62f", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/3de8bc79377b8f46dab6970b185ec8ead738b62f", "committedDate": "2020-04-17T22:09:27Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "83f4b6d76d3b1c0d18695c87048199e54094588c", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/83f4b6d76d3b1c0d18695c87048199e54094588c", "committedDate": "2020-04-17T23:13:57Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83f4b6d76d3b1c0d18695c87048199e54094588c", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/83f4b6d76d3b1c0d18695c87048199e54094588c", "committedDate": "2020-04-17T23:13:57Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "05900bb486ae54349db27f5dd4c481934343bd06", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/05900bb486ae54349db27f5dd4c481934343bd06", "committedDate": "2020-04-19T23:48:11Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05900bb486ae54349db27f5dd4c481934343bd06", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/05900bb486ae54349db27f5dd4c481934343bd06", "committedDate": "2020-04-19T23:48:11Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "committedDate": "2020-04-20T07:35:01Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/d7f7f6d434f16a6c07e4a322bf8a8464e54e89bc", "committedDate": "2020-04-20T07:35:01Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "6307b6209b11f066eec6dfaca60adc4ecb3967aa", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/6307b6209b11f066eec6dfaca60adc4ecb3967aa", "committedDate": "2020-04-20T17:33:05Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6307b6209b11f066eec6dfaca60adc4ecb3967aa", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/6307b6209b11f066eec6dfaca60adc4ecb3967aa", "committedDate": "2020-04-20T17:33:05Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "14c89d67d5577f6fed6f06b01631b27177d37a9a", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/14c89d67d5577f6fed6f06b01631b27177d37a9a", "committedDate": "2020-04-21T17:13:40Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14c89d67d5577f6fed6f06b01631b27177d37a9a", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/14c89d67d5577f6fed6f06b01631b27177d37a9a", "committedDate": "2020-04-21T17:13:40Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}, "afterCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/31faf6777c164960f10dfbe4ae1f74445e73d426", "committedDate": "2020-04-21T17:13:54Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTI2ODMx", "url": "https://github.com/confluentinc/ksql/pull/5105#pullrequestreview-397526831", "createdAt": "2020-04-21T17:36:07Z", "commit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjowOFrOGJQNbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjowOFrOGJQNbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NTk0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * `Push`: these queries run on every single node in the cluster.\n          \n          \n            \n            * `Push`: these queries run on every node in the cluster.", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412355948", "createdAt": "2020-04-21T17:36:08Z", "author": {"login": "JimGalasyn"}, "path": "docs-md/developer-guide/ksqldb-reference/show-queries.md", "diffHunk": "@@ -30,15 +30,21 @@ Query Status\n * `ERROR`: the query has entered an error state.\r\n * `UNRESPONSIVE`: the host running the query returned an error when requesting the query status.\r\n \r\n+Query Type\r\n+-----------\r\n+\r\n+* `Push`: these queries run on every single node in the cluster.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTI3MjIx", "url": "https://github.com/confluentinc/ksql/pull/5105#pullrequestreview-397527221", "createdAt": "2020-04-21T17:36:39Z", "commit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTQyODg2", "url": "https://github.com/confluentinc/ksql/pull/5105#pullrequestreview-397542886", "createdAt": "2020-04-21T17:56:36Z", "commit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1NjozNlrOGJRHYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1OTo0MFrOGJRP8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MDc4NA==", "bodyText": "cc @AlanConfluent can you review this section? I think we're standardizing on:\n\npersistent queries run on every node and materialize new state\npush queries are owned by the client and are terminated when the session ends (I don't think we should document that they only run on a single node, that's not the key characteristic)", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412370784", "createdAt": "2020-04-21T17:56:36Z", "author": {"login": "agavra"}, "path": "docs-md/developer-guide/ksqldb-reference/show-queries.md", "diffHunk": "@@ -30,15 +30,21 @@ Query Status\n * `ERROR`: the query has entered an error state.\r\n * `UNRESPONSIVE`: the host running the query returned an error when requesting the query status.\r\n \r\n+Query Type\r\n+-----------\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTI1NQ==", "bodyText": "see the documentation comment above", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412371255", "createdAt": "2020-04-21T17:57:13Z", "author": {"login": "agavra"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/util/KsqlConstants.java", "diffHunk": "@@ -46,6 +46,11 @@ private KsqlConstants() {\n   public static final String DEFAULT_AVRO_SCHEMA_FULL_NAME =\n       AVRO_SCHEMA_NAMESPACE + \".\" + AVRO_SCHEMA_NAME;\n \n+  public enum KsqlQueryType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTc0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return ImmutableList.copyOf(new ArrayList<>(allLiveQueries));\n          \n          \n            \n                return ImmutableList.copyOf(allLiveQueries);\n          \n      \n    \n    \n  \n\nthe new ArrayList is not necesasry, copyOf takes an Iterable", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412371745", "createdAt": "2020-04-21T17:57:58Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/engine/KsqlEngine.java", "diffHunk": "@@ -128,10 +130,16 @@ public int numberOfLiveQueries() {\n     return primaryContext.getPersistentQuery(queryId);\n   }\n \n+  @Override\n   public List<PersistentQueryMetadata> getPersistentQueries() {\n     return ImmutableList.copyOf(primaryContext.getPersistentQueries().values());\n   }\n \n+  @Override\n+  public List<QueryMetadata> getAllLiveQueries() {\n+    return ImmutableList.copyOf(new ArrayList<>(allLiveQueries));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3Mjg4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          System.out.println(\"what is being returned\");", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412372886", "createdAt": "2020-04-21T17:59:31Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/ListQueriesExecutor.java", "diffHunk": "@@ -100,19 +100,36 @@ private ListQueriesExecutor() { }\n   private static Map<QueryId, RunningQuery> getLocalSimple(\n       final KsqlExecutionContext executionContext\n   ) {\n-    return executionContext\n-        .getPersistentQueries()\n+    final Map<QueryId, RunningQuery> persistentQueries =  executionContext\n+        .getAllLiveQueries()\n         .stream()\n         .collect(Collectors.toMap(\n-            PersistentQueryMetadata::getQueryId,\n-            q -> new RunningQuery(\n-                q.getStatementString(),\n-                ImmutableSet.of(q.getSinkName().text()),\n-                ImmutableSet.of(q.getResultTopic().getKafkaTopicName()),\n-                q.getQueryId(),\n-                QueryStatusCount.fromStreamsStateCounts(\n-                    Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)))\n+            QueryMetadata::getQueryId,\n+            q -> {\n+              if (q instanceof PersistentQueryMetadata) {\n+                System.out.println(\"getting local\");\n+                final PersistentQueryMetadata persistentQuery = (PersistentQueryMetadata) q;\n+                return new RunningQuery(\n+                    q.getStatementString(),\n+                    ImmutableSet.of(persistentQuery.getSinkName().text()),\n+                    ImmutableSet.of(persistentQuery.getResultTopic().getKafkaTopicName()),\n+                    q.getQueryId(),\n+                    QueryStatusCount.fromStreamsStateCounts(\n+                        Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)),\n+                    q.getQueryType());\n+              }\n+              System.out.println(\"what is being returned\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3Mjk3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            System.out.println(\"getting local\");", "url": "https://github.com/confluentinc/ksql/pull/5105#discussion_r412372976", "createdAt": "2020-04-21T17:59:40Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/ListQueriesExecutor.java", "diffHunk": "@@ -100,19 +100,36 @@ private ListQueriesExecutor() { }\n   private static Map<QueryId, RunningQuery> getLocalSimple(\n       final KsqlExecutionContext executionContext\n   ) {\n-    return executionContext\n-        .getPersistentQueries()\n+    final Map<QueryId, RunningQuery> persistentQueries =  executionContext\n+        .getAllLiveQueries()\n         .stream()\n         .collect(Collectors.toMap(\n-            PersistentQueryMetadata::getQueryId,\n-            q -> new RunningQuery(\n-                q.getStatementString(),\n-                ImmutableSet.of(q.getSinkName().text()),\n-                ImmutableSet.of(q.getResultTopic().getKafkaTopicName()),\n-                q.getQueryId(),\n-                QueryStatusCount.fromStreamsStateCounts(\n-                    Collections.singletonMap(KafkaStreams.State.valueOf(q.getState()), 1)))\n+            QueryMetadata::getQueryId,\n+            q -> {\n+              if (q instanceof PersistentQueryMetadata) {\n+                System.out.println(\"getting local\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31faf6777c164960f10dfbe4ae1f74445e73d426"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43d927942f73b2c060afb3b52c8593fe59520b15", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/43d927942f73b2c060afb3b52c8593fe59520b15", "committedDate": "2020-04-22T20:46:35Z", "message": "feat: transient queries added to show queries output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877396336f27f10d64986f09a6341e956d0b9c1d", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/877396336f27f10d64986f09a6341e956d0b9c1d", "committedDate": "2020-04-22T20:46:35Z", "message": "ListQueriesExecutor and KsqlExecutionContext changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "committedDate": "2020-04-22T20:46:36Z", "message": "comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4534fa28125b43e68ec84332054f16253946be26", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/4534fa28125b43e68ec84332054f16253946be26", "committedDate": "2020-04-21T18:02:59Z", "message": "comments"}, "afterCommit": {"oid": "b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/b2d48ad6baae1dbba3383bb4dca23452f2a4bc92", "committedDate": "2020-04-22T20:46:36Z", "message": "comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b85d933ff0ff538ef3529a035d8837e75d77b9e", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/0b85d933ff0ff538ef3529a035d8837e75d77b9e", "committedDate": "2020-04-22T22:41:59Z", "message": "rename query types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a92f1772eb0cce5056486ee2cc30d938141334c2", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/a92f1772eb0cce5056486ee2cc30d938141334c2", "committedDate": "2020-04-22T21:40:16Z", "message": "rename query types"}, "afterCommit": {"oid": "0b85d933ff0ff538ef3529a035d8837e75d77b9e", "author": {"user": {"login": "stevenpyzhang", "name": "Steven Zhang"}}, "url": "https://github.com/confluentinc/ksql/commit/0b85d933ff0ff538ef3529a035d8837e75d77b9e", "committedDate": "2020-04-22T22:41:59Z", "message": "rename query types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MjQ3NzU4", "url": "https://github.com/confluentinc/ksql/pull/5105#pullrequestreview-399247758", "createdAt": "2020-04-23T16:01:06Z", "commit": {"oid": "0b85d933ff0ff538ef3529a035d8837e75d77b9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4858, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}