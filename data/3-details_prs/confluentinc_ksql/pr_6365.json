{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4Njg4NzUy", "number": 6365, "title": "Query schemas", "bodyText": "Description\nWhen building a query, the KsqlQueryBuilder captures the schema and serde features used when creating each value serde.  This is later used by QTT to build historical plans that capture this information, giving us confidence that any changes we make aren't changing the schema and serde features being used by historical queries.\nThis commit extends this to capture details from key serde, not just value serde, and to capture full KeyFormat and ValueFormat info.\nThe benefit is two fold:  increased test coverage of historical plans and its a necessary improvement to enable testing of non-KAFKA key formats. A follow up PR will improve the TopicInfoCache to use this more detailed information.\nThe first commit is the code changes, the second the updated historical plans.\nTesting done\nusual\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-10-06T16:41:33Z", "url": "https://github.com/confluentinc/ksql/pull/6365", "merged": true, "mergeCommit": {"oid": "9a136365958cfc63e6cbf072d4423257ccc89142"}, "closed": true, "closedAt": "2020-10-06T20:56:32Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP7CRngH2gAyNDk4Njg4NzUyOjg4NTRkZTdhMmIxMTRkNGQ1YmUzYjFlZTUyNWVjNTFiZjA1NjBhNWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP-JGOgFqTUwMzMyMDAzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/8854de7a2b114d4d5be3b1ee525ec51bf0560a5c", "committedDate": "2020-10-06T16:32:59Z", "message": "test: capture key and value formats as part of `QuerySchemas`\n\nWhen building a query, the `KsqlQueryBuilder` captures the schema and serde features used when creating each value serde.  This is later used by QTT to build historical plans that capture this information, giving us confidence that any changes we make aren't changing the schema and serde features being used by historical queries.\n\nThis commit extends this to capture details from _key_ serde, not just _value_ serde, and to capture full `KeyFormat` and `ValueFormat` info.\n\nThe benefit is two fold:  increased test coverage of historical plans and its a necessary improvement to enable testing of non-KAFKA key formats. A follow up PR will improve the `TopicInfoCache` to use this more detailed information."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "353e90280c6829c34a59193b391da046c5011a46", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/353e90280c6829c34a59193b391da046c5011a46", "committedDate": "2020-10-06T16:38:19Z", "message": "test: historical plans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMzIwMDM0", "url": "https://github.com/confluentinc/ksql/pull/6365#pullrequestreview-503320034", "createdAt": "2020-10-06T20:09:52Z", "commit": {"oid": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowOTo1MlrOHdYIkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMDowOTo1NVrOHdYIsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE2Mg==", "bodyText": "Is it worth adding a unit test to cover the merge() functionality required for tracking both key and value schema for the same logger prefix? I don't see coverage for that at the moment but I also don't feel too strongly since this code is essentially test-only.", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500566162", "createdAt": "2020-10-06T20:09:52Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-execution/src/test/java/io/confluent/ksql/execution/builder/KsqlQueryBuilderTest.java", "diffHunk": "@@ -234,39 +241,44 @@ public void shouldBuildValueSerde() {\n   }\n \n   @Test\n-  public void shouldTrackSchemasUsed() {\n+  public void shouldTrackKeySchemasUsed() {\n     // When:\n-    ksqlQueryBuilder.buildValueSerde(\n+    ksqlQueryBuilder.buildKeySerde(\n         FORMAT_INFO,\n-        SOME_SCHEMA,\n+        PHYSICAL_SCHEMA,\n         queryContext\n     );\n \n     // Then:\n-    final Map<String, PhysicalSchema> schemas = ksqlQueryBuilder.getSchemas().getSchemas();\n+    final Map<String, SchemaInfo> schemas = ksqlQueryBuilder.getSchemas().getSchemas();\n     assertThat(schemas.entrySet(), hasSize(1));\n-    assertThat(schemas.get(\"fred.context\"), is(SOME_SCHEMA));\n+    assertThat(schemas.get(\"fred.context\"), is(new SchemaInfo(\n+        LOGICAL_SCHEMA,\n+        Optional.of(KeyFormat.nonWindowed(\n+            FormatInfo.of(\"AVRO\", ImmutableMap.of(\"fullSchemaName\", \"io.confluent.ksql\")),\n+            SerdeFeatures.of(SerdeFeature.UNWRAP_SINGLES))),\n+        Optional.empty()\n+    )));\n   }\n \n   @Test\n-  public void shouldTrackSchemasTakingIntoAccountSerdeFeatures() {\n-    // Given:\n-    final PhysicalSchema schema = PhysicalSchema.from(\n-        SOME_SCHEMA.logicalSchema(),\n-        SerdeFeatures.of(),\n-        SerdeFeatures.of(SerdeFeature.UNWRAP_SINGLES)\n-    );\n-\n+  public void shouldTrackValueSchemasUsed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjE5Mw==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldRoundNoKeyFormat() {\n          \n          \n            \n              public void shouldRoundTripNoKeyFormat() {\n          \n      \n    \n    \n  \n\nand similarly for the other test below.", "url": "https://github.com/confluentinc/ksql/pull/6365#discussion_r500566193", "createdAt": "2020-10-06T20:09:55Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/test/java/io/confluent/ksql/test/model/SchemaNodeTest.java", "diffHunk": "@@ -39,7 +49,12 @@ public void shouldRoundTrip() {\n   }\n \n   @Test\n-  public void shouldRoundTripWithoutFeatures() {\n-    ModelTester.assertRoundTrip(NO_SERDE_FEATURES);\n+  public void shouldRoundNoKeyFormat() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8854de7a2b114d4d5be3b1ee525ec51bf0560a5c"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4622, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}