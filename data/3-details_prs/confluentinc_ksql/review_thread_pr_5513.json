{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1Mjc2OTAz", "number": 5513, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMzoxOFrOEBBt1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMzoxOFrOEBBt1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTEyMTUxOnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMDoyMzoxOFrOGcq-cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNjozOTo1OVrOGd6eXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw==", "bodyText": "I know this isn't your original code, but does this limitation makes sense? I feel like CONCAT('foo') could reasonably return just 'foo'. I can imagine passing in an array of values and expect it to work (now that we support variadic) even for the cases where there's fewer than 2 (or even if the array is empty, so CONCAT([]) would return \"\")", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432717427", "createdAt": "2020-05-29T20:23:18Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4MDU4OA==", "bodyText": "You make a fair point - and the same thought went through my head while going through the code but i decided not to disturb the status quo too much (for once!).Happy to change it though, i think what you are suggesting makes more intuitive sense, as it would bring the behavior into line with what happens if you pass more than 2 inputs but less than 2 of them are non-null - e.g. concat(null, 'foo', null) is already processed without complaint and returns foo.  WDYT ?", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432780588", "createdAt": "2020-05-29T23:25:55Z", "author": {"login": "blueedgenick"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}, "originalCommit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2ODUzMw==", "bodyText": "+1 that makes a lot of sense (and in line with what we would do today even before this PR if we had CONCAT(null, 'foo'))", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r432868533", "createdAt": "2020-05-30T16:36:46Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}, "originalCommit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAxOTkzNQ==", "bodyText": "Done!", "url": "https://github.com/confluentinc/ksql/pull/5513#discussion_r434019935", "createdAt": "2020-06-02T16:39:59Z", "author": {"login": "blueedgenick"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/udf/string/Concat.java", "diffHunk": "@@ -16,23 +16,31 @@\n package io.confluent.ksql.function.udf.string;\n \n import io.confluent.ksql.function.KsqlFunctionException;\n-import io.confluent.ksql.function.udf.Kudf;\n+import io.confluent.ksql.function.udf.Udf;\n+import io.confluent.ksql.function.udf.UdfDescription;\n+import io.confluent.ksql.function.udf.UdfParameter;\n import java.util.Arrays;\n import java.util.Objects;\n import java.util.stream.Collectors;\n \n-public class ConcatKudf implements Kudf {\n-  public static final String NAME = \"CONCAT\";\n+@UdfDescription(\n+    name = \"concat\",\n+    description = \"Concatenate an arbitrary number of string fields together\")\n+public class Concat {\n \n-  @Override\n-  public String evaluate(final Object... args) {\n-    if (args.length < 2) {\n-      throw new KsqlFunctionException(NAME + \" should have at least two input argument.\");\n+  @Udf\n+  public String concat(@UdfParameter(\n+      description = \"The varchar fields to concatenate\") final String... inputs) {\n+    if (inputs == null) {\n+      return null;\n+    }\n+    if (inputs.length < 2) {\n+      throw new KsqlFunctionException(\"Concat should have at least two input arguments.\");\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxNzQyNw=="}, "originalCommit": {"oid": "01941d67cf8a37fda6284edf1854034dc6a201c6"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3318, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}