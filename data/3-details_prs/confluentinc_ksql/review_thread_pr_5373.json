{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NTk5MjY1", "number": 5373, "reviewThreads": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mjo0N1rOD852IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzo0NFrOD86nEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTg4ODk2OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mjo0N1rOGWIM4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mjo0N1rOGWIM4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1NjIyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If not set, the internal listener default to the first listener defined by `listeners`.\n          \n          \n            \n            If not set, the internal listener defaults to the first listener defined by `listeners`.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425856225", "createdAt": "2020-05-15T14:52:47Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTg5MTg5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1MzoyOVrOGWIOzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1MzoyOVrOGWIOzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1NjcxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n          \n          \n            \n            This is the URL used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425856717", "createdAt": "2020-05-15T14:53:29Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTg5MjgzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mzo0NVrOGWIPag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1Mzo0NVrOGWIPag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1Njg3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n          \n          \n            \n            URL that other ksqlDB nodes will use to communicate with this node. It only needs to be set if", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425856874", "createdAt": "2020-05-15T14:53:45Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTg5NjI0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1NDozNlrOGWIRtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1NDozNlrOGWIRtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1NzQ2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n          \n          \n            \n            If not set, the default behavior is to use the internal listener, which is controlled by `ksql.internal.listener`.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425857463", "createdAt": "2020-05-15T14:54:36Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTkwNDYxOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1NjozNFrOGWIXGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDo1NjozNFrOGWIXGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg1ODg0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n          \n          \n            \n            If `ksql.internal.listener` resolves to a URL that uses `localhost`,  a wildcard IP address, like `0.0.0.0`, or a\n          \n          \n            \n            hostname that other ksqlDB nodes either can't resolve or can't route requests to,", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425858842", "createdAt": "2020-05-15T14:56:34Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTkyNDM0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMToyMVrOGWIjxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMToyMVrOGWIjxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2MjA4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that\n          \n          \n            \n            set `ksql.advertised.listeners` to a URL that ksqlDB nodes can resolve.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425862086", "createdAt": "2020-05-15T15:01:21Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n+url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTkyNTQyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMTozN1rOGWIkfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMTozN1rOGWIkfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2MjI3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            other ksqlDB nodes can either not resolve, or can not route requests to, then", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425862271", "createdAt": "2020-05-15T15:01:37Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n+url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that\n+other ksqlDB nodes can either not resolve, or can not route requests to, then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTkyNjExOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMTo0OFrOGWIk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowMTo0OFrOGWIk9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2MjM4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `ksql.advertised.listeners` should be set to a url that can.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425862388", "createdAt": "2020-05-15T15:01:48Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n+url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that\n+other ksqlDB nodes can either not resolve, or can not route requests to, then\n+`ksql.advertised.listeners` should be set to a url that can.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk0MTM0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNTozN1rOGWIueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNTozN1rOGWIueQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NDgyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            See [Configuring Listeners of a ksqlDB Cluster](./index.md#configuringlisteners-of-a-ksqldb-cluster)\n          \n          \n            \n            For more information, see [Configuring Listeners of a ksqlDB Cluster](./index.md#configuring-listeners-of-a-ksqldb-cluster).", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425864825", "createdAt": "2020-05-15T15:05:37Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n+url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that\n+other ksqlDB nodes can either not resolve, or can not route requests to, then\n+`ksql.advertised.listeners` should be set to a url that can.\n+\n+See [Configuring Listeners of a ksqlDB Cluster](./index.md#configuringlisteners-of-a-ksqldb-cluster)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk0MzQzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNjowOFrOGWIvwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNjowOFrOGWIvwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NTE1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            for more info.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425865152", "createdAt": "2020-05-15T15:06:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/config-reference.md", "diffHunk": "@@ -415,19 +418,32 @@ The corresponding environment variable in the\n [ksqlDB Server image](https://hub.docker.com/r/confluentinc/ksqldb-server/)\n is `KSQL_LISTENERS`.\n \n-### ksql.advertised.listener\n-\n-This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`, this configuration doesn't create a listener.\n-\n ### ksql.internal.listener\n \n-The `ksql.internal.listener ` setting controls the address bound for use by internal,\n-intra-cluster endpoints.  These include forwarded pull queries, heartbeating, and lag reporting.\n+The `ksql.internal.listener` setting controls the address bound for use by internal,\n+intra-cluster communication.\n \n-If not set, the system will use `listeners` to expose internal endpoints.\n+If not set, the internal listener default to the first listener defined by `listeners`.\n \n This setting is most often useful in a IaaS environment to separate external-facing\n-trafic from internal traffic.\n+traffic from internal traffic.\n+\n+### ksql.advertised.listener\n+\n+This is the url used for inter-node communication.  Unlike `listeners` or `ksql.internal.listener`,\n+this configuration doesn't create a listener. Instead, it is used to set an externally routable\n+url that other ksqlDB nodes will use to communicate with this node. It only needs to be set if\n+the internal listener is not externally resolvable or routable.\n+\n+If not set, the default is to use the internal listener, as controlled by `ksql.internal.listener`.\n+\n+If the `ksql.internal.listener` resolves, either by being explicitly set or from the default first\n+url in `listeners`, to a url using `localhost`, a wildcard ip such as `0.0.0.0`, or a hostname that\n+other ksqlDB nodes can either not resolve, or can not route requests to, then\n+`ksql.advertised.listeners` should be set to a url that can.\n+\n+See [Configuring Listeners of a ksqlDB Cluster](./index.md#configuringlisteners-of-a-ksqldb-cluster)\n+for more info.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk0NTI1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNjo0NFrOGWIxDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNjo0NFrOGWIxDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NTQ4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            cluster must be able to communication with each other. KsqlDB supports setups with either a single\n          \n          \n            \n            cluster must be able to communicate with each other. ksqlDB supports setups with either a single", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425865486", "createdAt": "2020-05-15T15:06:44Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk0NjgwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzowOFrOGWIyDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzowOFrOGWIyDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NTc0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            following describes how to configure listeners depending on the nature of your environment and\n          \n          \n            \n            following section describes how to configure listeners depending on the nature of your environment and", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425865742", "createdAt": "2020-05-15T15:07:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk0ODYyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzozOFrOGWIzNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzozOFrOGWIzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NjAzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this setup, the node will share the first url in the `listeners` config as its internal\n          \n          \n            \n            In this setup, the node shares the first URL in the `listeners` config as its internal", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425866037", "createdAt": "2020-05-15T15:07:38Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk1MDAyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzo1NlrOGWI0Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowNzo1NlrOGWI0Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NjI2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n          \n          \n            \n            endpoint, which other nodes use for inter-node communication. Inter-node communication", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425866262", "createdAt": "2020-05-15T15:07:56Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk1MDgxOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowODowNlrOGWI0jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowODowNlrOGWI0jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NjM4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            use the same listener as client communication.\n          \n          \n            \n            uses the same listener as client communication.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425866383", "createdAt": "2020-05-15T15:08:06Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk1NDYxOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTowNlrOGWI28w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTowNlrOGWI28w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2Njk5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n          \n          \n            \n            It's common to set up a service using special hostnames, like `localhost`, or wildcard addresses,", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425866995", "createdAt": "2020-05-15T15:09:06Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk1NjM0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTozNVrOGWI4DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTozNVrOGWI4DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NzI3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n          \n          \n            \n            like `0.0.0.0` or `[::]`. These special hostnames have special meanings and are not appropriate for", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425867276", "createdAt": "2020-05-15T15:09:35Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk1NzkzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTo1NlrOGWI47w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTowOTo1NlrOGWI47w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2NzUwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            inter-node communication, as they are not routable from other machines. Similarly, if your\n          \n          \n            \n            inter-node communication, because they're not routable from other machines. This is also the case if your", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425867503", "createdAt": "2020-05-15T15:09:56Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk2OTI4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxMjo0MVrOGWI_6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxMjo0MVrOGWI_6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg2OTI5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            network is setup such that the IP or hostname you bind isn't resolvable or routable.\n          \n          \n            \n            network is set up such that the IP or hostname you bind isn't resolvable or routable.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425869291", "createdAt": "2020-05-15T15:12:41Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk3Njk5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNDo0NlrOGWJFDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNDo0NlrOGWJFDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MDYwNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n          \n          \n            \n            URL that is externally accessible and which resolves to an endpoint defined in `listeners`.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425870605", "createdAt": "2020-05-15T15:14:46Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk3ODQ0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNTowOFrOGWJF_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNTowOFrOGWJF_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MDg0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n          \n          \n            \n            If you choose to use a non-routable listener, you must set `ksql.advertised.listener` and specify a", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425870847", "createdAt": "2020-05-15T15:15:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk4MTg1OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNTo1M1rOGWJIFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNTo1M1rOGWJIFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MTM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # External accessible name that will resolve to the IP of the machine:\n          \n          \n            \n            # Externally accessible name that resolves to the IP of the machine:", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425871381", "createdAt": "2020-05-15T15:15:53Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk4NDIwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjoyN1rOGWJJlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjoyN1rOGWJJlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MTc2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n          \n          \n            \n            In this setup, the node shares the URL in the `ksql.advertised.listener` config as its", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425871766", "createdAt": "2020-05-15T15:16:27Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk4NDk5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjozOFrOGWJKHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjozOFrOGWJKHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MTkwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            internal endpoint, which other nodes will use for inter-node communication. Inter-node\n          \n          \n            \n            internal endpoint, which other nodes use for inter-node communication. Inter-node", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425871900", "createdAt": "2020-05-15T15:16:38Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk4NjEyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjo1MlrOGWJKxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNjo1MlrOGWJKxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjA2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            communication will use the same listener as client communication.\n          \n          \n            \n            communication use the same listener as client communication.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425872069", "createdAt": "2020-05-15T15:16:52Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk4ODY2OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzoyNFrOGWJMVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxNzoyNFrOGWJMVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MjQ3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n          \n          \n            \n            communication, which enables port filtering rules to deny clients access the internal listener or", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425872471", "createdAt": "2020-05-15T15:17:24Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk5MzM4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxODoyNVrOGWJPKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxODoyNVrOGWJPKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MzE5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            listener that will exclusively used for inter-node communication.\n          \n          \n            \n            listener that is used exclusively for inter-node communication.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425873192", "createdAt": "2020-05-15T15:18:25Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk5NDU0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxODo0MVrOGWJP2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxODo0MVrOGWJP2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MzM3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If running dual listeners to improve security, you may also wish to enable\n          \n          \n            \n            If you're running dual listeners to improve security, you may also wish to enable", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425873371", "createdAt": "2020-05-15T15:18:41Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk5NjE5OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxOTowOVrOGWJQ5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxOTowOVrOGWJQ5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3MzYzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n          \n          \n            \n            If the internal IP address or hostname used in the `ksql.internal.listener` configuration is externally", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425873638", "createdAt": "2020-05-15T15:19:09Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTk5ODI0OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxOTo0M1rOGWJSPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToxOTo0M1rOGWJSPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3Mzk4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n          \n          \n            \n            resolvable and routable, you only need to configure `ksql.internal.listener` to set the internal", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425873981", "createdAt": "2020-05-15T15:19:43Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwMDAyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDowOFrOGWJTQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDowOFrOGWJTQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDI0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n          \n          \n            \n                nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, because", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425874243", "createdAt": "2020-05-15T15:20:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwMTIwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDoyOFrOGWJUBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDoyOFrOGWJUBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDQzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                clients' can connect using whatever url you choose.\n          \n          \n            \n                clients can connect using whatever URL you choose.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425874439", "createdAt": "2020-05-15T15:20:28Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwMjMwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDo0NVrOGWJUwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDo0NVrOGWJUwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDYyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this setup, the node will share the url in the `ksql.internal.listener` config as its\n          \n          \n            \n            In this setup, the node shares the URL in the `ksql.internal.listener` config as its", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425874624", "createdAt": "2020-05-15T15:20:45Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwMzAyOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDo1NlrOGWJVKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMDo1NlrOGWJVKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDczMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            internal endpoint, which other nodes will use for inter-node communication. Inter-node\n          \n          \n            \n            internal endpoint, which other nodes use for inter-node communication. Inter-node", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425874730", "createdAt": "2020-05-15T15:20:56Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwMzc2OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMTowOFrOGWJVkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMTowOFrOGWJVkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NDgzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            communication will use a different listener to client communication.\n          \n          \n            \n            communication uses a different listener to client communication.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425874833", "createdAt": "2020-05-15T15:21:08Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwNTEzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMToyOVrOGWJWZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMToyOVrOGWJWZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NTA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n          \n          \n            \n            If the internal IP address or hostname used in the `ksql.internal.listener` configuration is not", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425875045", "createdAt": "2020-05-15T15:21:29Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwNzg3OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMjoxM1rOGWJYHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMjoxM1rOGWJYHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NTQ4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n          \n          \n            \n            `0.0.0.0` or `[::]`, you must configure both `ksql.internal.listener` and `ksql.advertised.listener`", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425875485", "createdAt": "2020-05-15T15:22:13Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAwOTUzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMjozNVrOGWJZIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMjozNVrOGWJZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NTc0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # Url that other nodes can resolve and use to route requests to this node:\n          \n          \n            \n            # URL that other nodes can resolve and use to route requests to this node:", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425875745", "createdAt": "2020-05-15T15:22:35Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n+to set the internal listener:\n \n ```properties\n+# Client listener:\n listeners=https://0.0.0.0:8088\n-# Port 8099 is available only to the trusted internal network\n+\n+# Inter-node listener on wildcard address and different port:\n+# Note: port 8099 could be locked down using port forward or other network tools.\n ksql.internal.listener=https://0.0.0.0:8099\n+\n+# Url that other nodes can resolve and use to route requests to this node:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 154}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAxMTgwOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzowNVrOGWJadA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzowNVrOGWJadA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NjA4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                as clients' can connect using whatever url you choose, and `ksql.internal.listener` is only used\n          \n          \n            \n                because clients can connect using whatever URL you choose, and `ksql.internal.listener` is only used", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425876084", "createdAt": "2020-05-15T15:23:05Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n+to set the internal listener:\n \n ```properties\n+# Client listener:\n listeners=https://0.0.0.0:8088\n-# Port 8099 is available only to the trusted internal network\n+\n+# Inter-node listener on wildcard address and different port:\n+# Note: port 8099 could be locked down using port forward or other network tools.\n ksql.internal.listener=https://0.0.0.0:8099\n+\n+# Url that other nodes can resolve and use to route requests to this node:\n ksql.advertised.listener=http://host1.internal.example.com:8099\n ```\n+\n+!!! note\n+    Only the `ksql.advertised.listener` needs to be resolvable and routable from servers running\n+    other nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable,\n+    as clients' can connect using whatever url you choose, and `ksql.internal.listener` is only used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAxMjg4OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzoxOVrOGWJbCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzoxOVrOGWJbCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NjIzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n          \n          \n            \n            In this setup, the node shares the url in the `ksql.advertised.listener` config as its", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425876235", "createdAt": "2020-05-15T15:23:19Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n+to set the internal listener:\n \n ```properties\n+# Client listener:\n listeners=https://0.0.0.0:8088\n-# Port 8099 is available only to the trusted internal network\n+\n+# Inter-node listener on wildcard address and different port:\n+# Note: port 8099 could be locked down using port forward or other network tools.\n ksql.internal.listener=https://0.0.0.0:8099\n+\n+# Url that other nodes can resolve and use to route requests to this node:\n ksql.advertised.listener=http://host1.internal.example.com:8099\n ```\n+\n+!!! note\n+    Only the `ksql.advertised.listener` needs to be resolvable and routable from servers running\n+    other nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable,\n+    as clients' can connect using whatever url you choose, and `ksql.internal.listener` is only used\n+    to start the listener.\n+\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAxMzUzOnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzozMVrOGWJbaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzozMVrOGWJbaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NjMyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            internal endpoint, which other nodes will use for inter-node communication. Inter-node\n          \n          \n            \n            internal endpoint, which other nodes use for inter-node communication. Inter-node", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425876328", "createdAt": "2020-05-15T15:23:31Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n+to set the internal listener:\n \n ```properties\n+# Client listener:\n listeners=https://0.0.0.0:8088\n-# Port 8099 is available only to the trusted internal network\n+\n+# Inter-node listener on wildcard address and different port:\n+# Note: port 8099 could be locked down using port forward or other network tools.\n ksql.internal.listener=https://0.0.0.0:8099\n+\n+# Url that other nodes can resolve and use to route requests to this node:\n ksql.advertised.listener=http://host1.internal.example.com:8099\n ```\n+\n+!!! note\n+    Only the `ksql.advertised.listener` needs to be resolvable and routable from servers running\n+    other nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable,\n+    as clients' can connect using whatever url you choose, and `ksql.internal.listener` is only used\n+    to start the listener.\n+\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjAxNDI3OnYy", "diffSide": "RIGHT", "path": "docs/operate-and-deploy/installation/server-config/index.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzo0NFrOGWJb5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNToyMzo0NFrOGWJb5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg3NjQ1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            communication will use a different listener to client communication.\n          \n          \n            \n            communication uses a different listener to client communication.", "url": "https://github.com/confluentinc/ksql/pull/5373#discussion_r425876452", "createdAt": "2020-05-15T15:23:44Z", "author": {"login": "JimGalasyn"}, "path": "docs/operate-and-deploy/installation/server-config/index.md", "diffHunk": "@@ -310,83 +310,126 @@ Start the ksqlDB server with the configuration file specified.\n <path-to-confluent>/bin/ksql-server-start <path-to-confluent>/etc/ksqldb/ksql-server.properties\n ```\n \n-Configuring Listeners for a ksqlDB Cluster\n---------------------------------\n+Configuring Listeners of a ksqlDB Cluster\n+------------------------------------------\n \n Multiple hosts are required to scale ksqlDB processing power and to do that, they must\n form a cluster.  ksqlDB requires all hosts of a cluster to use the same `ksql.service.id`.\n \n ```properties\n-bootstrap.servers=localhost:9092\n+bootstrap.servers=kafkaBroker1:9092,kafkaBroker2:9092\n ksql.service.id=my_application_\n ```\n \n Once formed, many operations can be run using the client APIs exposed on `listeners`.\n \n-In order to utilize pull queries and their high availability functionality,\n-the hosts within the cluster must be configured to speak to each other via their\n-internal endpoints. The following describes how to configure listeners depending on\n-the nature of your environment.\n+In order to utilize pull queries and their high availability functionality, the nodes within the\n+cluster must be able to communication with each other. KsqlDB supports setups with either a single\n+shared listener for both client and internal communication, or dual single-purpose listeners. The\n+following describes how to configure listeners depending on the nature of your environment and\n+requirements.\n \n-### Listener Uses a Routable IP Address\n+### Single listener\n \n-If you want to configure your listener with an expicit IP address that is reachable\n-within the cluster, you might do the following:\n+#### Single routable listener\n+\n+If you want to configure your listener with an IP address or hostname that is resolvable and\n+routable from within the cluster, you might do the following:\n \n ```properties\n-listeners=http://192.168.1.101:8088\n+# Hostname that other nodes can resolve to an routable IP:\n+listeners=https://ksqlHost56:8088\n+\n+# Or, routable IP address:\n+listeners=https://192.168.1.101:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address, which\n-will also be utilized by inter-node communication.\n+In this setup, the node will share the first url in the `listeners` config as its internal\n+endpoint, which other nodes will use for inter-node communication. Inter-node communication will\n+use the same listener as client communication.\n+\n+#### Single non-routable listener\n \n-### Listener Uses a Special or Unroutable Address\n+It's common to setup a service using special hostnames such as `localhost` or wildcard addresses\n+such as `0.0.0.0` or `[::]`. These have special meanings and are not appropriate for\n+inter-node communication, as they are not routable from other machines. Similarly, if your\n+network is setup such that the IP or hostname you bind isn't resolvable or routable.\n \n-It's common to setup a service using special hostnames such as `localhost` or special\n-addresses such as `0.0.0.0`.  Both have special meanings and are not appropriate for\n-inter-node commmunication.  Similarly, if your network is setup such that the IP you\n-bind isn't routeable, it's also not appropriate.  If you choose to use such a listener,\n-you must set `ksql.advertised.listener` specifying which address to use:\n+If you choose to use a non-routable listener, you must set `ksql.advertised.listener`, specifying a\n+url that is externally accessible and which will resolve to an endpoint defined in `listeners`.\n \n ```properties\n+# Non-routable wildcard ip:\n listeners=http://0.0.0.0:8088\n+\n+# External accessible name that will resolve to the IP of the machine:\n ksql.advertised.listener=http://host1.internal.example.com:8088\n ```\n \n-This listener will bind the client and internal endpoints to the given address.  Now\n-inter-node communication will explicity use the other address \n-`http://host1.internal.example.com:8088`.\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use the same listener as client communication.\n+\n+### Dual listeners\n \n-### Listener Binds Client and Internal Listeners Separately\n+You may choose to configure internal communication to use a different listener to client\n+ommunication, which allows for port filtering rules to deny clients access the internal listener, or\n+the use of a different network interface for internal communication, for security or QoS reasons.\n \n-If ksqlDB is being run in an environment where you require more security, you first\n-want to enable [authentication and other security measures](security.md).  Secondly,\n-you may choose to configure internal endpoints to be bound using a separate listener\n-from the client endpoints. This allows for port filtering, to make internal endpoints\n-unreachable beyond the internal network of the cluster, based on the port bound.\n-Similarly, it allows for the use of dual network interfaces where one is public facing,\n-and the other is cluster facing.  Both measures can used to add additional security to\n-your configuration.  To do this, you can set a separate listener for inter-node\n-communication `ksql.internal.listener`:\n+This can be achieved by setting the `ksql.internal.listener` configuration to start a second\n+listener that will exclusively used for inter-node communication.\n+\n+If running dual listeners to improve security, you may also wish to enable\n+[authentication and other security measures](security.md).\n+\n+#### Dual routable listeners\n+\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is externally\n+resolvable and routable, only `ksql.internal.listener` needs to configured to set the internal\n+listener, for example:\n \n ```properties\n+# Client listener:\n listeners=https://192.168.1.101:8088\n-# Port 8099 is available only to the trusted internal network\n-ksql.internal.listener=https://192.168.1.101:8099\n+\n+# Inter-node listener on different NIC:\n+ksql.internal.listener=https://192.168.1.102:8088\n ```\n \n-Now, `listener` will bind the client endpoints, while `ksql.internal.listener` binds\n-the internal ones.  Also, inter-node communication will now utilize the addess from \n-`ksql.internal.listener`.\n+!!! note\n+    Only the `ksql.internal.listener` needs to be resolvable and routable from servers running other\n+    nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable, as\n+    clients' can connect using whatever url you choose.\n \n+In this setup, the node will share the url in the `ksql.internal.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.\n \n-### Listener Binds Client and Internal Listeners Separately With Special Addresses\n+#### Dual non-routable listeners\n \n-This combines two of the previous configurations:\n+Where the internal IP or hostname used in the `ksql.internal.listener` configuration is not\n+externally resolvable and routable, for example where it uses `localhost` or wildcard IPs such as\n+`0.0.0.0` or `[::]`, both `ksql.internal.listener` and `ksql.advertised.listener` need to configured\n+to set the internal listener:\n \n ```properties\n+# Client listener:\n listeners=https://0.0.0.0:8088\n-# Port 8099 is available only to the trusted internal network\n+\n+# Inter-node listener on wildcard address and different port:\n+# Note: port 8099 could be locked down using port forward or other network tools.\n ksql.internal.listener=https://0.0.0.0:8099\n+\n+# Url that other nodes can resolve and use to route requests to this node:\n ksql.advertised.listener=http://host1.internal.example.com:8099\n ```\n+\n+!!! note\n+    Only the `ksql.advertised.listener` needs to be resolvable and routable from servers running\n+    other nodes in the cluster. The `listener` configuration can be non-resolvable and non-routable,\n+    as clients' can connect using whatever url you choose, and `ksql.internal.listener` is only used\n+    to start the listener.\n+\n+In this setup, the node will share the url in the `ksql.advertised.listener` config as its\n+internal endpoint, which other nodes will use for inter-node communication. Inter-node\n+communication will use a different listener to client communication.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eb209aa89be0702e9ffc7bdd81516ad537af353"}, "originalPosition": 166}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3442, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}