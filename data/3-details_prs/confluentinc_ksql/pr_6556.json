{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTk2MzA5", "number": 6556, "title": "chore: fix findbugs errors", "bodyText": "Description\nFix four findbugs (and clean up code a little)\nquestion is... why is our build not failing, given we have findbugs errors?  Could it be that spotbugs is missing this check?\nUpdate:\nRan mvn spotbugs:check locally without this fix and spotbugs did not report any issues... which is bad!\nHere's an example of the error in question:\n    throw new KsqlException(String.format(\n            \"Invalid CommandId string (line %d): %s\",\n            n, new String(record.getLeft(), StandardCharsets.UTF_8), e\n        ));\nNote how e is unintentionally being passed as a third parameter to String.format rather than as a second parameter to the exception constructor.\nFindbugs does find this error.", "createdAt": "2020-11-02T17:01:47Z", "url": "https://github.com/confluentinc/ksql/pull/6556", "merged": true, "mergeCommit": {"oid": "16f58289d86077734d530f13a7a983b28071287b"}, "closed": true, "closedAt": "2020-11-02T18:02:47Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYnlbmAH2gAyNTE0MTk2MzA5OjIxZDJlYjViNjRjZTVmNzUzYTQxMTQ2MGU4MWY5MWE2NTU0Y2QyNjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYn2QvgFqTUyMTgzODU5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "21d2eb5b64ce5f753a411460e81f91a6554cd262", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/21d2eb5b64ce5f753a411460e81f91a6554cd262", "committedDate": "2020-11-02T16:58:36Z", "message": "chore: fix spotbugs errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/c12aee6504452b7b71273bcae3eee4a57acd8d0a", "committedDate": "2020-11-02T17:00:32Z", "message": "chore: fix spotbugs errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI0ODI2", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521824826", "createdAt": "2020-11-02T17:03:16Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzoxN1rOHsNeIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzoxN1rOHsNeIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDA5OA==", "bodyText": "No need to use Ticker here.\na) Ticker is marked as unstable\nb) Ticker.read()'s java docs say it returns nanoseconds, not milliseconds as this impl does\nc) A simple Supplier<Long> does what is needed.", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120098", "createdAt": "2020-11-02T17:03:17Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -46,18 +46,13 @@\n  * complete backup of the command_topic is created.\n  */\n public class CommandTopicBackupImpl implements CommandTopicBackup {\n+\n   private static final Logger LOG = LoggerFactory.getLogger(CommandTopicBackupImpl.class);\n-  private static final Ticker CURRENT_MILLIS_TICKER = new Ticker() {\n-    @Override\n-    public long read() {\n-      return System.currentTimeMillis();\n-    }\n-  };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1MTY3", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825167", "createdAt": "2020-11-02T17:03:39Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo0MFrOHsNfJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo0MFrOHsNfJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDM1Ng==", "bodyText": "Findbugs error no 1.", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120356", "createdAt": "2020-11-02T17:03:40Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -133,23 +129,22 @@ private boolean isRecordInLatestReplay(final ConsumerRecord<byte[], byte[]> reco\n     return false;\n   }\n \n-  private void throwIfInvalidRecord(final ConsumerRecord<byte[], byte[]> record) {\n+  private static void throwIfInvalidRecord(final ConsumerRecord<byte[], byte[]> record) {\n     try {\n       InternalTopicSerdes.deserializer(CommandId.class).deserialize(record.topic(), record.key());\n     } catch (final Exception e) {\n       throw new KsqlException(String.format(\n           \"Failed to backup record because it cannot deserialize key: %s\",\n-          new String(record.key(), StandardCharsets.UTF_8), e\n-      ));\n+          new String(record.key(), StandardCharsets.UTF_8)), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1Mjgz", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825283", "createdAt": "2020-11-02T17:03:48Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo0OFrOHsNfeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo0OFrOHsNfeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDQ0Mg==", "bodyText": "Findbugs error no 2.", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120442", "createdAt": "2020-11-02T17:03:48Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -133,23 +129,22 @@ private boolean isRecordInLatestReplay(final ConsumerRecord<byte[], byte[]> reco\n     return false;\n   }\n \n-  private void throwIfInvalidRecord(final ConsumerRecord<byte[], byte[]> record) {\n+  private static void throwIfInvalidRecord(final ConsumerRecord<byte[], byte[]> record) {\n     try {\n       InternalTopicSerdes.deserializer(CommandId.class).deserialize(record.topic(), record.key());\n     } catch (final Exception e) {\n       throw new KsqlException(String.format(\n           \"Failed to backup record because it cannot deserialize key: %s\",\n-          new String(record.key(), StandardCharsets.UTF_8), e\n-      ));\n+          new String(record.key(), StandardCharsets.UTF_8)), e);\n     }\n \n     try {\n       InternalTopicSerdes.deserializer(Command.class).deserialize(record.topic(), record.value());\n     } catch (final Exception e) {\n       throw new KsqlException(String.format(\n           \"Failed to backup record because it cannot deserialize value: %s\",\n-          new String(record.value(), StandardCharsets.UTF_8), e\n-      ));\n+          new String(record.value(), StandardCharsets.UTF_8)), e\n+      );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1NDAy", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825402", "createdAt": "2020-11-02T17:03:56Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo1NlrOHsNfxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowMzo1NlrOHsNfxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDUxOQ==", "bodyText": "simplified", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120519", "createdAt": "2020-11-02T17:03:56Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -193,18 +188,14 @@ public boolean commandTopicCorruption() {\n \n   @VisibleForTesting\n   BackupReplayFile openOrCreateReplayFile() {\n-    final Optional<BackupReplayFile> latestFile = latestReplayFile();\n-    if (latestFile.isPresent()) {\n-      return latestFile.get();\n-    }\n-\n-    return newReplayFile();\n+    return latestReplayFile()\n+        .orElseGet(this::newReplayFile);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1NTMz", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825533", "createdAt": "2020-11-02T17:04:05Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDowNlrOHsNgNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDowNlrOHsNgNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDYyOA==", "bodyText": "warning fixed", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120628", "createdAt": "2020-11-02T17:04:06Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -216,12 +207,11 @@ private BackupReplayFile newReplayFile() {\n     File latestBakFile = null;\n     if (files != null) {\n       long latestTs = 0;\n-      for (int i = 0; i < files.length; i++) {\n-        final File bakFile = files[i];\n+      for (final File bakFile : files) {\n         final String bakTimestamp = bakFile.getName().substring(prefixFilename.length());\n \n         try {\n-          final Long ts = Long.valueOf(bakTimestamp);\n+          final long ts = Long.parseLong(bakTimestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1NjA3", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825607", "createdAt": "2020-11-02T17:04:10Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoxMVrOHsNgYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoxMVrOHsNgYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDY3NQ==", "bodyText": "warning fixed", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120675", "createdAt": "2020-11-02T17:04:11Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -216,12 +207,11 @@ private BackupReplayFile newReplayFile() {\n     File latestBakFile = null;\n     if (files != null) {\n       long latestTs = 0;\n-      for (int i = 0; i < files.length; i++) {\n-        final File bakFile = files[i];\n+      for (final File bakFile : files) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1Njg4", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825688", "createdAt": "2020-11-02T17:04:17Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoxN1rOHsNguA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoxN1rOHsNguA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDc2MA==", "bodyText": "simpified", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120760", "createdAt": "2020-11-02T17:04:17Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/CommandTopicBackupImpl.java", "diffHunk": "@@ -230,17 +220,15 @@ private BackupReplayFile newReplayFile() {\n           LOG.warn(\n               \"Invalid timestamp '{}' found in backup replay file (file ignored): {}\",\n               bakTimestamp, bakFile.getName());\n-          continue;\n         }\n       }\n     }\n \n-    return (latestBakFile != null)\n-        ? Optional.of(BackupReplayFile.writable(latestBakFile))\n-        : Optional.empty();\n+    return Optional.ofNullable(latestBakFile)\n+        .map(BackupReplayFile::writable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 146}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1ODYx", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825861", "createdAt": "2020-11-02T17:04:29Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoyOVrOHsNhWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDoyOVrOHsNhWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDkyMQ==", "bodyText": "Findbugs error no 3.", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120921", "createdAt": "2020-11-02T17:04:29Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopic.java", "diffHunk": "@@ -88,8 +86,9 @@ private static void throwOnInvalidRecords(final List<Pair<byte[], byte[]>> recor\n       } catch (final Exception e) {\n         throw new KsqlException(String.format(\n             \"Invalid CommandId string (line %d): %s\",\n-            n, new String(record.getLeft(), StandardCharsets.UTF_8), e\n-        ));\n+            n, new String(record.getLeft(), StandardCharsets.UTF_8)),\n+            e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI1OTYx", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521825961", "createdAt": "2020-11-02T17:04:36Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDozNlrOHsNhmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDozNlrOHsNhmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMDk4Ng==", "bodyText": "Findbugs error no 4.", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516120986", "createdAt": "2020-11-02T17:04:36Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopic.java", "diffHunk": "@@ -98,8 +97,9 @@ private static void throwOnInvalidRecords(final List<Pair<byte[], byte[]>> recor\n       } catch (final Exception e) {\n         throw new KsqlException(String.format(\n             \"Invalid Command string (line %d): %s\",\n-            n, new String(record.getRight(), StandardCharsets.UTF_8), e\n-        ));\n+            n, new String(record.getRight(), StandardCharsets.UTF_8)),\n+            e", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODI2MDUw", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521826050", "createdAt": "2020-11-02T17:04:42Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDo0MlrOHsNhzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzowNDo0MlrOHsNhzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEyMTAzOQ==", "bodyText": "simplified", "url": "https://github.com/confluentinc/ksql/pull/6556#discussion_r516121039", "createdAt": "2020-11-02T17:04:42Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopic.java", "diffHunk": "@@ -135,12 +135,7 @@ private static boolean promptQuestion() {\n     final Console console = System.console();\n     final String decision = console.readLine();\n \n-    switch (decision.toLowerCase()) {\n-      case \"yes\":\n-        return true;\n-      default:\n-        return false;\n-    }\n+    return \"yes\".equals(decision.toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxODM4NTk1", "url": "https://github.com/confluentinc/ksql/pull/6556#pullrequestreview-521838595", "createdAt": "2020-11-02T17:16:59Z", "commit": {"oid": "c12aee6504452b7b71273bcae3eee4a57acd8d0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4601, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}