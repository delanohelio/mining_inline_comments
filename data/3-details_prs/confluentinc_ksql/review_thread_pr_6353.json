{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTQ2ODMx", "number": 6353, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMToyOTozMlrOEq7aaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyODo0NVrOEsM8gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDQ5MDY3OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/ConfigResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMToyOTozMlrOHdaoxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMToyOTozMlrOHdaoxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYwNzE3NA==", "bodyText": "Even if this is immutable, it's good practice to use the interface Map here when declaring the variable.", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r500607174", "createdAt": "2020-10-06T21:29:32Z", "author": {"login": "spena"}, "path": "ksqldb-rest-model/src/main/java/io/confluent/ksql/rest/entity/ConfigResponse.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.entity;\n+\n+import static java.util.Objects.requireNonNull;\n+\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.annotation.JsonSubTypes;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+@JsonSubTypes({})\n+public class ConfigResponse {\n+  private final ImmutableMap<String, Object> configs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDU1ODc1OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1Mzo1MFrOHdbSqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMTo1Mzo1MFrOHdbSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDYxNzg5OQ==", "bodyText": "Perhaps use visibleConfigs instead. Just to provide more meaning to what these configs are.", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r500617899", "createdAt": "2020-10-06T21:53:50Z", "author": {"login": "spena"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.resources;\n+\n+import io.confluent.ksql.rest.EndpointResponse;\n+import io.confluent.ksql.rest.entity.ConfigResponse;\n+import io.confluent.ksql.util.KsqlConfig;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class ConfigResource {\n+  private final Map<String, Object> allowedConfigs = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b5a92a44c3569f6c2435d2b0b3aa41e7174ba56"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg0NzQyOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyODowM1rOHfZF5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyODowM1rOHfZF5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTAxNQ==", "bodyText": "nit: generally good practice to avoid a double lookup. Obviously not so important here as it's not a perf critical area, but figured I'd drop the comment so it's top of mind next time :)\nObject value = visibleConfigs.get(config);\nif (value != null) {\n  configs.put(config, value)\n}", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r502679015", "createdAt": "2020-10-09T21:28:03Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/resources/ConfigResource.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.resources;\n+\n+import io.confluent.ksql.rest.EndpointResponse;\n+import io.confluent.ksql.rest.entity.ConfigResponse;\n+import io.confluent.ksql.util.KsqlConfig;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class ConfigResource {\n+  private final Map<String, Object> visibleConfigs = new HashMap<>();\n+\n+  public ConfigResource(final KsqlConfig ksqlConfig) {\n+    setVisibleConfigs(ksqlConfig);\n+  }\n+\n+  private void setVisibleConfigs(final KsqlConfig ksqlConfig) {\n+    visibleConfigs.put(\n+        KsqlConfig.KSQL_ACTIVE_PERSISTENT_QUERY_LIMIT_CONFIG,\n+        ksqlConfig.getInt(KsqlConfig.KSQL_ACTIVE_PERSISTENT_QUERY_LIMIT_CONFIG)\n+    );\n+  }\n+\n+  public EndpointResponse getConfigs(final List<String> requestedConfigs) {\n+    final Map<String, Object> configs = new HashMap<>();\n+    for (String config : requestedConfigs) {\n+      if (visibleConfigs.containsKey(config)) {\n+        configs.put(config, visibleConfigs.get(config));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "851222a2390cc25a2e9825872addcaf9dd37e8b3"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg0ODk4OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/RestApiTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyODo0NVrOHfZG0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyODo0NVrOHfZG0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTI0OA==", "bodyText": "we should add tests to make sure that we don't accidentally leak any config that isn't in the allowed list of configs", "url": "https://github.com/confluentinc/ksql/pull/6353#discussion_r502679248", "createdAt": "2020-10-09T21:28:45Z", "author": {"login": "agavra"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/RestApiTest.java", "diffHunk": "@@ -289,6 +291,28 @@ public void shouldExecuteServerMetadataIdRequest() {\n     assertThat(response, is(notNullValue()));\n   }\n \n+  @Test\n+  public void shouldExecuteAllConfigsRequest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "851222a2390cc25a2e9825872addcaf9dd37e8b3"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2656, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}