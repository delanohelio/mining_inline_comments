{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTE4NjU0", "number": 4829, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1MzoyN1rODpouKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzoyMzoyNFrODqekLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTg1Mzg1OnYy", "diffSide": "RIGHT", "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxODo1MzoyN1rOF48G9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxMDoyNzo1OVrOF5OYOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0OTM5OQ==", "bodyText": "sorry, i realize i should have seen this array_length function going in separately but adding the docs here has called it to my attention :)   - not sure we should return zero for a null input array, that conflicts with the result for an empty array. I would expect that array_length(null) returns NULL.  From what i can see in a quick google around, that looks to be more common but it's not well documented in many places.", "url": "https://github.com/confluentinc/ksql/pull/4829#discussion_r395249399", "createdAt": "2020-03-19T18:53:27Z", "author": {"login": "blueedgenick"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -186,6 +189,15 @@ The square root of a value.\n Collections\r\n ===========\r\n \r\n+ARRAY_LENGTH\r\n+------------\r\n+\r\n+`ARRAY_LENGTH(ARRAY[1, 2, 3])`\r\n+\r\n+Given an array, return the number of elements in the array.\r\n+\r\n+If the supplied parameter is null the method returns 0.\r\n+\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b46930c4ac099bbabb930b82d0c1e0b9890805f"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU0NDYzMA==", "bodyText": "not sure we should return zero for a null input array,\n\nI was mulling this over myself.  As you've raised it to... consider it done!", "url": "https://github.com/confluentinc/ksql/pull/4829#discussion_r395544630", "createdAt": "2020-03-20T10:19:41Z", "author": {"login": "big-andy-coates"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -186,6 +189,15 @@ The square root of a value.\n Collections\r\n ===========\r\n \r\n+ARRAY_LENGTH\r\n+------------\r\n+\r\n+`ARRAY_LENGTH(ARRAY[1, 2, 3])`\r\n+\r\n+Given an array, return the number of elements in the array.\r\n+\r\n+If the supplied parameter is null the method returns 0.\r\n+\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0OTM5OQ=="}, "originalCommit": {"oid": "4b46930c4ac099bbabb930b82d0c1e0b9890805f"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTU0ODcyOA==", "bodyText": "Pull the ARRAY_LENGTH stuff out into different PR now that it's growing:\n#4848", "url": "https://github.com/confluentinc/ksql/pull/4829#discussion_r395548728", "createdAt": "2020-03-20T10:27:59Z", "author": {"login": "big-andy-coates"}, "path": "docs-md/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -186,6 +189,15 @@ The square root of a value.\n Collections\r\n ===========\r\n \r\n+ARRAY_LENGTH\r\n+------------\r\n+\r\n+`ARRAY_LENGTH(ARRAY[1, 2, 3])`\r\n+\r\n+Given an array, return the number of elements in the array.\r\n+\r\n+If the supplied parameter is null the method returns 0.\r\n+\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI0OTM5OQ=="}, "originalCommit": {"oid": "4b46930c4ac099bbabb930b82d0c1e0b9890805f"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODY3NTY3OnYy", "diffSide": "RIGHT", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/null.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzoyMzoyNFrOF6P_Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzozMTozMFrOF6QVkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMzY0Nw==", "bodyText": "can we add a test for COALESCE(some_column) (e.g. no constants)", "url": "https://github.com/confluentinc/ksql/pull/4829#discussion_r396623647", "createdAt": "2020-03-23T17:23:24Z", "author": {"login": "agavra"}, "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/null.json", "diffHunk": "@@ -76,6 +76,42 @@\n         \"type\": \"io.confluent.ksql.util.KsqlStatementException\",\n         \"message\": \"Comparison with NULL not supported: NULL <> NULL\"\n       }\n+    },\n+    {\n+      \"name\": \"coalesce\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (COL0 INT KEY, COL1 STRING, COL2 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT COALESCE(COL0, 10, 20) AS A, COALESCE(COL1, 'x') AS B, COALESCE(COL2, ARRAY[10, 20]) AS C FROM INPUT;\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8090246ce25791c44acc94fb9003b5476f0f0d7"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyOTM5NA==", "bodyText": "done", "url": "https://github.com/confluentinc/ksql/pull/4829#discussion_r396629394", "createdAt": "2020-03-23T17:31:30Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/null.json", "diffHunk": "@@ -76,6 +76,42 @@\n         \"type\": \"io.confluent.ksql.util.KsqlStatementException\",\n         \"message\": \"Comparison with NULL not supported: NULL <> NULL\"\n       }\n+    },\n+    {\n+      \"name\": \"coalesce\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (COL0 INT KEY, COL1 STRING, COL2 ARRAY<INT>) WITH (kafka_topic='test_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT COALESCE(COL0, 10, 20) AS A, COALESCE(COL1, 'x') AS B, COALESCE(COL2, ARRAY[10, 20]) AS C FROM INPUT;\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjYyMzY0Nw=="}, "originalCommit": {"oid": "f8090246ce25791c44acc94fb9003b5476f0f0d7"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3800, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}