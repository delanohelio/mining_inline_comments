{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODM0MjQ4", "number": 6206, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo1Mjo0NFrOEj9L3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo1Mjo0NFrOEj9L3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTM4MDc5OnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/impl/InsertsSubscriber.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo1Mjo0NFrOHSm7FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwODo1Mjo0NFrOHSm7FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI3NDEzMg==", "bodyText": "Fixes issue flagged in previous PR review by caching the key's Connect schema: #6200 (comment)", "url": "https://github.com/confluentinc/ksql/pull/6206#discussion_r489274132", "createdAt": "2020-09-16T08:52:44Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/impl/InsertsSubscriber.java", "diffHunk": "@@ -107,15 +115,19 @@ public static InsertsSubscriber createInsertsSubscriber(final ServiceContext ser\n         valueSerde.serializer(), acksPublisher, workerExecutor);\n   }\n \n-  private InsertsSubscriber(final Context context,\n-      final Producer<byte[], byte[]> producer, final DataSource dataSource,\n+  private InsertsSubscriber(\n+      final Context context,\n+      final Producer<byte[], byte[]> producer,\n+      final DataSource dataSource,\n       final Serializer<Struct> keySerializer,\n       final Serializer<GenericRow> valueSerializer,\n       final BufferedPublisher<InsertResult> acksPublisher,\n-      final WorkerExecutor workerExecutor) {\n+      final WorkerExecutor workerExecutor\n+  ) {\n     super(context);\n     this.producer = Objects.requireNonNull(producer);\n     this.dataSource = Objects.requireNonNull(dataSource);\n+    this.keySchema = ConnectSchemas.columnsToConnectSchema(dataSource.getSchema().key());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d037f26c291433a684b1b5e5543288e386461f3e"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2787, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}