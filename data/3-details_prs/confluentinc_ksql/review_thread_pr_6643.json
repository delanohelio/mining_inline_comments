{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNjY5MzQ1", "number": 6643, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNjo0NlrOE_1ffQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo1NjozMFrOFB4XPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzcyMTU3OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNjo0NlrOH9wu7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzowMDo0MVrOH9xutw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzYyOQ==", "bodyText": "Why are we changing the name and group for legacy metric here?", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r534523629", "createdAt": "2020-12-02T22:26:46Z", "author": {"login": "harinirajendran"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -298,15 +307,19 @@ private void configureMetric(\n       final KsqlMetric metric) {\n     // legacy\n     sensor.add(\n-        metrics.metricName(ksqlServiceId + metric.name(), metricGroupName, metric.description()),\n+        metrics.metricName(\n+            metric.name(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUzOTIwNg==", "bodyText": "In master there are currently 2 sets of metrics, legacy ones with the service id in the metric name and \"new\" metrics with the service id in the metric group name. The legacy ones are from a while ago and we should be able to remove them now, so now the metrics with the service id in the metric group name are considered legacy and the metrics with the service id in the metric tag is \"new\"", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r534539206", "createdAt": "2020-12-02T22:58:59Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -298,15 +307,19 @@ private void configureMetric(\n       final KsqlMetric metric) {\n     // legacy\n     sensor.add(\n-        metrics.metricName(ksqlServiceId + metric.name(), metricGroupName, metric.description()),\n+        metrics.metricName(\n+            metric.name(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzYyOQ=="}, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUzOTk1OQ==", "bodyText": "Ah I see! Gotcha.. Thanks @stevenpyzhang", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r534539959", "createdAt": "2020-12-02T23:00:41Z", "author": {"login": "harinirajendran"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -298,15 +307,19 @@ private void configureMetric(\n       final KsqlMetric metric) {\n     // legacy\n     sensor.add(\n-        metrics.metricName(ksqlServiceId + metric.name(), metricGroupName, metric.description()),\n+        metrics.metricName(\n+            metric.name(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyMzYyOQ=="}, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzcyNDE1OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNzozMVrOH9wwag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoyNzozMVrOH9wwag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUyNDAxMA==", "bodyText": "Why are we changing the name and group for legacy metric here?", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r534524010", "createdAt": "2020-12-02T22:27:31Z", "author": {"login": "harinirajendran"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -346,16 +359,16 @@ private void configureNumActiveQueriesForGivenState(\n     final String name = state + \"-queries\";\n     // legacy\n     configureGaugeForState(\n-        ksqlServiceId + metricGroupName + \"-\" + name,\n-        metricGroupName,\n-        Collections.emptyMap(),\n+        name,\n+        ksqlServiceIdLegacyPrefix + metricGroupName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NTE2MzUxOnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNjo1NjozMFrOIAwg6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMDoyNjo1MFrOIA5PwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2NTc2OQ==", "bodyText": "Could this be more efficient as it does 1 copy instead of 2?.\nthis.newCustomMetricsTags = ImmutableMap.<String, String>builder()\n       .putAll(customMetricsTags)\n       .put(KsqlConstants.KSQL_SERVICE_ID_METRICS_TAG, ksqlEngine.getServiceId())\n       .build();", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r537665769", "createdAt": "2020-12-07T16:56:30Z", "author": {"login": "spena"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -88,13 +92,18 @@ public KsqlEngineMetrics(\n       final Optional<KsqlMetricsExtension> metricsExtension\n   ) {\n     this.ksqlEngine = ksqlEngine;\n-    this.ksqlServiceId = ReservedInternalTopics.KSQL_INTERNAL_TOPIC_PREFIX\n+    this.ksqlServiceIdLegacyPrefix = ReservedInternalTopics.KSQL_INTERNAL_TOPIC_PREFIX\n         + ksqlEngine.getServiceId();\n+    this.ksqlServicePrefix = ReservedInternalTopics.CONFLUENT_PREFIX;\n     this.sensors = new ArrayList<>();\n     this.countMetrics = new ArrayList<>();\n     this.metricGroupPrefix = Objects.requireNonNull(metricGroupPrefix, \"metricGroupPrefix\");\n     this.metricGroupName = metricGroupPrefix + METRIC_GROUP_POST_FIX;\n     this.customMetricsTags = customMetricsTags;\n+\n+    final Map<String, String> metricsTags = new HashMap<>(customMetricsTags);\n+    metricsTags.put(KsqlConstants.KSQL_SERVICE_ID_METRICS_TAG, ksqlEngine.getServiceId());\n+    this.newCustomMetricsTags = ImmutableMap.copyOf(metricsTags);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzgwODgzMw==", "bodyText": "done", "url": "https://github.com/confluentinc/ksql/pull/6643#discussion_r537808833", "createdAt": "2020-12-07T20:26:50Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/internal/KsqlEngineMetrics.java", "diffHunk": "@@ -88,13 +92,18 @@ public KsqlEngineMetrics(\n       final Optional<KsqlMetricsExtension> metricsExtension\n   ) {\n     this.ksqlEngine = ksqlEngine;\n-    this.ksqlServiceId = ReservedInternalTopics.KSQL_INTERNAL_TOPIC_PREFIX\n+    this.ksqlServiceIdLegacyPrefix = ReservedInternalTopics.KSQL_INTERNAL_TOPIC_PREFIX\n         + ksqlEngine.getServiceId();\n+    this.ksqlServicePrefix = ReservedInternalTopics.CONFLUENT_PREFIX;\n     this.sensors = new ArrayList<>();\n     this.countMetrics = new ArrayList<>();\n     this.metricGroupPrefix = Objects.requireNonNull(metricGroupPrefix, \"metricGroupPrefix\");\n     this.metricGroupName = metricGroupPrefix + METRIC_GROUP_POST_FIX;\n     this.customMetricsTags = customMetricsTags;\n+\n+    final Map<String, String> metricsTags = new HashMap<>(customMetricsTags);\n+    metricsTags.put(KsqlConstants.KSQL_SERVICE_ID_METRICS_TAG, ksqlEngine.getServiceId());\n+    this.newCustomMetricsTags = ImmutableMap.copyOf(metricsTags);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzY2NTc2OQ=="}, "originalCommit": {"oid": "de1c557de0b7e93fa49851ca3f783769c9c574a2"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2435, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}