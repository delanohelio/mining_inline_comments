{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NTQxMDAz", "number": 4717, "title": "fix: create schemas at topic creation", "bodyText": "fixes #4219\nDescription\nTo be honest, I don't love the way this problem is solved in this PR but I can't come up with anything better. Basically, when we create a new topic in the TopicCreateInjector we also register the schema with schema registry. This is easy for C* statements but is much more difficult for C*AS statements as we don't actually know the schema until we build the logical plan.\nIt is important, however, to create the schema before we enqueue onto the command topic so that we don't get into the situation where we re-create schemas while replaying the command topic.\nTesting done\nUnit test and local testing (note no data running through):\nksql> CREATE STREAM foo (id VARCHAR) WITH (value_format='avro', partitions=1, kafka_topic='foo');\n\n Message\n----------------\n Stream created\n----------------\nksql> CREATE STREAM bar WITH (value_format='avro', kafka_topic='foo');\n\n Message\n----------------\n Stream created\n----------------\nksql> DESCRIBE bar;\n\nName                 : BAR\n Field   | Type\n-------------------------------------\n ROWTIME | BIGINT           (system)\n ROWKEY  | VARCHAR(STRING)  (system)\n ID      | VARCHAR(STRING)\n-------------------------------------\nFor runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-05T22:53:45Z", "url": "https://github.com/confluentinc/ksql/pull/4717", "merged": true, "mergeCommit": {"oid": "514025de32acb9ed077cd901fa19dafc74d2aa41"}, "closed": true, "closedAt": "2020-03-10T23:42:07Z", "author": {"login": "agavra"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK1mu6ABqjMxMDM0ODEyNDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMaN3ZgH2gAyMzg0NTQxMDAzOjQ5NzBkMDYzNGIyMmRjYzE2ZjQyNTE0YzFlNzk4ODJiNmJiNWYxNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e12981b073b9de3fcc4638ff2f8996b95de787fe", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/e12981b073b9de3fcc4638ff2f8996b95de787fe", "committedDate": "2020-03-05T22:50:16Z", "message": "fix: create schemas at topic creation"}, "afterCommit": {"oid": "fe23730e722a6d3f1d9cfac1480f76d12d882123", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/fe23730e722a6d3f1d9cfac1480f76d12d882123", "committedDate": "2020-03-06T01:12:28Z", "message": "fix: create schemas at topic creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932", "committedDate": "2020-03-06T17:52:50Z", "message": "fix: create schemas at topic creation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe23730e722a6d3f1d9cfac1480f76d12d882123", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/fe23730e722a6d3f1d9cfac1480f76d12d882123", "committedDate": "2020-03-06T01:12:28Z", "message": "fix: create schemas at topic creation"}, "afterCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932", "committedDate": "2020-03-06T17:52:50Z", "message": "fix: create schemas at topic creation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjI2NDg3", "url": "https://github.com/confluentinc/ksql/pull/4717#pullrequestreview-371226487", "createdAt": "2020-03-09T14:24:28Z", "commit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDoyNDoyOVrOFzqxSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDozMTowM1rOFzrDOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMjQ0MA==", "bodyText": "I don't think we should make this public.  It's an internal impl detail of the engine and should IMHO remain that way.\nIf you just parse, prepare + execute the query against a sandbox of the engine, (as the rest api normally does), then you'll get back a query, and you can get the schema from that query.\nYes, this is executing some bits we don't need. But it maintains better decoupling in the code IMHO.\nIf we really want to expose logical plans, then we should expose them through the engine.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389722440", "createdAt": "2020-03-09T14:24:29Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/engine/QueryEngine.java", "diffHunk": "@@ -42,7 +42,7 @@\n import org.slf4j.LoggerFactory;\n \n // CHECKSTYLE_RULES.OFF: ClassDataAbstractionCoupling\n-class QueryEngine {\n+public class QueryEngine {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyMzA4MQ==", "bodyText": "I'd personally handle this as a separate injector.  Keep this injector focused on topic creation.\nI can see that topic creation is related to schema creation - but the injectors are chained anyway.", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389723081", "createdAt": "2020-03-09T14:25:27Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/main/java/io/confluent/ksql/topic/TopicCreateInjector.java", "diffHunk": "@@ -53,18 +63,25 @@\n \n   private final KafkaTopicClient topicClient;\n   private final MetaStore metaStore;\n+  private final SchemaRegistryClient srClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyNzAzMg==", "bodyText": "I think this is missing some tests around what happens if schema registration fails...", "url": "https://github.com/confluentinc/ksql/pull/4717#discussion_r389727032", "createdAt": "2020-03-09T14:31:03Z", "author": {"login": "big-andy-coates"}, "path": "ksql-engine/src/test/java/io/confluent/ksql/topic/TopicCreateInjectorTest.java", "diffHunk": "@@ -425,6 +440,74 @@ public void shouldCreateMissingTopicWithDefaultCleanupPolicyForWindowedTables()\n         ImmutableMap.of());\n   }\n \n+  @Test\n+  public void shouldNotRegisterSchemaIfSchemaRegistryIsDisabled() {\n+    // Given:\n+    config = new KsqlConfig(ImmutableMap.of());\n+    givenStatement(\"CREATE STREAM x (f1 VARCHAR) WITH(kafka_topic='expectedName', value_format='AVRO', partitions=1);\");\n+    when(builder.build()).thenReturn(new TopicProperties(\"expectedName\", 10, (short) 10));\n+\n+    // When:\n+    injector.inject(statement, builder);\n+\n+    // Then:\n+    verifyNoMoreInteractions(schemaRegistryClient);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f0b1f5f9f7aaa6627bfa2a3cdb8866669bad932"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313c30fd1b58c4d8471d153ecc9645961d5059a6", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/313c30fd1b58c4d8471d153ecc9645961d5059a6", "committedDate": "2020-03-09T18:56:12Z", "message": "refactor: apply andys requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODIyMDY2", "url": "https://github.com/confluentinc/ksql/pull/4717#pullrequestreview-371822066", "createdAt": "2020-03-10T10:12:04Z", "commit": {"oid": "313c30fd1b58c4d8471d153ecc9645961d5059a6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMTM3Mjg1", "url": "https://github.com/confluentinc/ksql/pull/4717#pullrequestreview-372137285", "createdAt": "2020-03-10T16:49:55Z", "commit": {"oid": "313c30fd1b58c4d8471d153ecc9645961d5059a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4970d0634b22dcc16f42514c1e79882b6bb5f174", "author": {"user": {"login": "agavra", "name": "Almog Gavra"}}, "url": "https://github.com/confluentinc/ksql/commit/4970d0634b22dcc16f42514c1e79882b6bb5f174", "committedDate": "2020-03-10T22:25:51Z", "message": "chore: uncomment sr url"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4917, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}