{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjA5Mjgx", "number": 5960, "title": "fix: NPE when udf metrics enabled", "bodyText": "Description\nfixes: #5890\nFixes an NPE thrown when the second instance of a UDAF is initialized. The NPE was being thrown due to a bug in the code that failed to initialise the sensor fields in the UdafAggregateFunction class if the sensor already existed.\nThe commit also refactors the code used to add function invocation metrics such that all three function types: UDF, UDTF and UDAF, use the same function to register metrics.\nUnit tests added to ensure this single code path doesn't throw an NPE or return null on the subsequent invocation.\nAlso added ksql.udf.collect.metrics metric to the server config file, so users are more likely to be able to find it and try it out.\nMoved UDTF functions out of the ksql-udf group and into ksql-udtf group. Having them in the former was another bug.\nTesting done\nAdded unit tests plus manual validation that metric names didn't change with new code, (except intentional move of UDTF metrics into own group).\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-08-06T19:00:46Z", "url": "https://github.com/confluentinc/ksql/pull/5960", "merged": true, "mergeCommit": {"oid": "e32183fb4d77371ed3f4b610f5abf68d888c65f4"}, "closed": true, "closedAt": "2020-08-10T10:27:05Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8UkdoAH2gAyNDY0MjA5MjgxOmMyMDgxYmZlNmRiZDNlYTM4MjU4ODMzZTBhZTcxYmY2ZWU2NjRlNjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8mCZegH2gAyNDY0MjA5MjgxOjZmOTE4MGE0MWI5YjZkMWM1NzFkN2FhN2ZkNWUyMDk0OGIzOTQ3MWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c2081bfe6dbd3ea38258833e0ae71bf6ee664e60", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/c2081bfe6dbd3ea38258833e0ae71bf6ee664e60", "committedDate": "2020-08-06T18:59:28Z", "message": "fix: NPE when udf metrics enabled\n\nfixes: https://github.com/confluentinc/ksql/issues/5890\n\nFixes an NPE thrown when the second instance of a UDAF is initialized. The NPE was being thrown due to a bug in the code that failed to initialise the sensor fields in the `UdafAggregateFunction` class if the sensor already existed.\n\nThe commit also refactors the code used to add function invocation metrics such that all three function types: UDF, UDTF and UDAF, use the same function to register metrics.\n\nUnit tests added to ensure this single code path doesn't throw an NPE or return null on the subsequent invocation.\n\nAlso added `ksql.udf.collect.metrics` metric to the server config file, so users are more likely to be able to find it and try it out.\n\nMoved UDTF functions out of the `ksql-udf` group and into `ksql-udtf` group. Having them in the former was another bug."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODMxOTkw", "url": "https://github.com/confluentinc/ksql/pull/5960#pullrequestreview-462831990", "createdAt": "2020-08-06T19:55:38Z", "commit": {"oid": "c2081bfe6dbd3ea38258833e0ae71bf6ee664e60"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOTo1NTozOFrOG9CKIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxOTo1ODowN1rOG9COwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1MTY4Mg==", "bodyText": "there's a race here that is possible here where two calls for the same metrics.getSensor(sensorName) don't find the sensor and they both end up registering the extra metrics. I don't know of a good way around it...", "url": "https://github.com/confluentinc/ksql/pull/5960#discussion_r466651682", "createdAt": "2020-08-06T19:55:38Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/FunctionMetrics.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.function;\n+\n+import java.util.Optional;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.BiFunction;\n+import org.apache.kafka.common.MetricName;\n+import org.apache.kafka.common.metrics.Metrics;\n+import org.apache.kafka.common.metrics.Sensor;\n+import org.apache.kafka.common.metrics.stats.Avg;\n+import org.apache.kafka.common.metrics.stats.Max;\n+import org.apache.kafka.common.metrics.stats.Rate;\n+import org.apache.kafka.common.metrics.stats.WindowedCount;\n+\n+public final class FunctionMetrics {\n+\n+  static final String AVG_DESC = \"Average time for invocations of the %s\";\n+  static final String MAX_DESC = \"Max time for invocations of the %s\";\n+  static final String COUNT_DESC = \"Total number of invocations of the %s\";\n+  static final String RATE_DESC = \"The rate of invocations (invocations per second) of the %s\";\n+\n+  private FunctionMetrics() {\n+  }\n+\n+  /**\n+   * Gets an existing invocation sensor, or creates one if needed.\n+   *\n+   * <p>Sensor created with avg, max, count and rate metrics.\n+   *\n+   * @param metrics the metrics service.\n+   * @param sensorName the name of the sensor\n+   * @param groupName the name of the group\n+   * @param functionDescription the description of the function.\n+   */\n+  public static void initInvocationSensor(\n+      final Optional<Metrics> metrics,\n+      final String sensorName,\n+      final String groupName,\n+      final String functionDescription\n+  ) {\n+    metrics.ifPresent(m -> getInvocationSensor(m, sensorName, groupName, functionDescription));\n+  }\n+\n+  /**\n+   * Gets an existing invocation sensor, or creates one if needed.\n+   *\n+   * <p>Sensor created with avg, max, count and rate metrics.\n+   *\n+   * @param metrics the metrics service.\n+   * @param sensorName the name of the sensor\n+   * @param groupName the name of the group\n+   * @param functionDescription the description of the function.\n+   */\n+  public static Sensor getInvocationSensor(\n+      final Metrics metrics,\n+      final String sensorName,\n+      final String groupName,\n+      final String functionDescription\n+  ) {\n+    final Sensor existing = metrics.getSensor(sensorName);\n+    if (existing != null) {\n+      return existing;\n+    }\n+\n+    final Sensor newSensor = metrics.sensor(sensorName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2081bfe6dbd3ea38258833e0ae71bf6ee664e60"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY1Mjg2Ng==", "bodyText": "if anyone was relying on the old metrics, their alerts for udtfs will break with this change. probably ok as I'd be shocked if anyone was actually writing their own UDTFs and using metrics on them at this point but something to call out \ud83d\ude09", "url": "https://github.com/confluentinc/ksql/pull/5960#discussion_r466652866", "createdAt": "2020-08-06T19:58:07Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/UdtfLoader.java", "diffHunk": "@@ -67,7 +68,8 @@ public void loadUdtfFromClass(\n     }\n     final String functionName = udtfDescriptionAnnotation.name();\n     final String sensorName = \"ksql-udtf-\" + functionName;\n-    FunctionLoaderUtils.addSensor(sensorName, functionName, metrics);\n+\n+    FunctionMetrics.initInvocationSensor(metrics, sensorName, \"ksql-udtf\", functionName + \" udtf\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2081bfe6dbd3ea38258833e0ae71bf6ee664e60"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9180a41b9b6d1c571d7aa7fd5e20948b39471c", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/6f9180a41b9b6d1c571d7aa7fd5e20948b39471c", "committedDate": "2020-08-07T15:20:33Z", "message": "chore: fix race condition"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4790, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}