{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0Mzg1MTQ3", "number": 5079, "title": "refactor: Migrate /query endpoint", "bodyText": "Description\nThis PR migrates the /query endpoint from Jetty to Vert.x\nTesting done\nNon functional change - previous integration tests will run against the same endpoint.\nI have also added a new test to test streaming chunked queries can't be accessed over HTTP2 (HTTP2 doesn't support chunked encoding)\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-04-16T13:51:06Z", "url": "https://github.com/confluentinc/ksql/pull/5079", "merged": true, "mergeCommit": {"oid": "f571a50529fea9ca77c697b3586e78385c005f16"}, "closed": true, "closedAt": "2020-04-22T08:11:44Z", "author": {"login": "purplefox"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYbwQygFqTM5NTIwNTgzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaDFwdgFqTM5Nzg5MjAzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjA1ODM5", "url": "https://github.com/confluentinc/ksql/pull/5079#pullrequestreview-395205839", "createdAt": "2020-04-17T07:00:25Z", "commit": {"oid": "5f497d1f32609368e67a7f2e1b43deba8d59e6f4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2dfbbab8844d40b2fb8f8a13e249f46dc48f297", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/b2dfbbab8844d40b2fb8f8a13e249f46dc48f297", "committedDate": "2020-04-22T07:13:43Z", "message": "migrate query endpoint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a352ccc63d3f547540683f03f6aa4c4db0154b03", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/a352ccc63d3f547540683f03f6aa4c4db0154b03", "committedDate": "2020-04-20T07:45:10Z", "message": "fixed test"}, "afterCommit": {"oid": "b2dfbbab8844d40b2fb8f8a13e249f46dc48f297", "author": {"user": {"login": "purplefox", "name": "Tim Fox"}}, "url": "https://github.com/confluentinc/ksql/commit/b2dfbbab8844d40b2fb8f8a13e249f46dc48f297", "committedDate": "2020-04-22T07:13:43Z", "message": "migrate query endpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3ODkyMDM4", "url": "https://github.com/confluentinc/ksql/pull/5079#pullrequestreview-397892038", "createdAt": "2020-04-22T06:54:28Z", "commit": {"oid": "a352ccc63d3f547540683f03f6aa4c4db0154b03"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1NDoyOFrOGJmTrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjo1NDoyOFrOGJmTrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcxNzk5Ng==", "bodyText": "It's interesting that we choose to fail HTTP2 requests to the /query endpoint when the response is being returned, rather than when the request is received. What's the reasoning for this?", "url": "https://github.com/confluentinc/ksql/pull/5079#discussion_r412717996", "createdAt": "2020-04-22T06:54:28Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/PortedEndpoints.java", "diffHunk": "@@ -113,28 +142,59 @@ void handleTerminateRequest(final RoutingContext routingContext) {\n         .apply(requestObject, DefaultApiSecurityContext.create(routingContext));\n     completableFuture.thenAccept(endpointResponse -> {\n \n-      final Buffer responseBody;\n-      try {\n-        final byte[] bytes = OBJECT_MAPPER.writeValueAsBytes(endpointResponse.getResponseBody());\n-        responseBody = Buffer.buffer(bytes);\n-      } catch (JsonProcessingException e) {\n-        // This is an internal error as it's a bug in the server\n-        routingContext.fail(HttpStatus.SC_INTERNAL_SERVER_ERROR, e);\n-        return;\n-      }\n-\n       response.putHeader(CONTENT_TYPE_HEADER, JSON_CONTENT_TYPE);\n \n       response.setStatusCode(endpointResponse.getStatusCode())\n-          .setStatusMessage(endpointResponse.getStatusMessage())\n-          .end(responseBody);\n-\n+          .setStatusMessage(endpointResponse.getStatusMessage());\n+\n+      // What the old API returns in it's response is something of a mishmash - sometimes it's\n+      // a plain String, other times it's an object that needs to be JSON encoded, other times\n+      // it represents a stream.\n+      if (endpointResponse instanceof StreamedEndpointResponse) {\n+        if (routingContext.request().version() == HttpVersion.HTTP_2) {\n+          // The old /query endpoint uses chunked encoding which is not supported in HTTP2\n+          routingContext.response().setStatusCode(HttpStatus.SC_METHOD_NOT_ALLOWED)\n+              .setStatusMessage(\"The /query endpoint is not available using HTTP2\").end();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a352ccc63d3f547540683f03f6aa4c4db0154b03"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4842, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}