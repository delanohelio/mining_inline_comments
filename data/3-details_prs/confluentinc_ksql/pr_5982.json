{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjkwMzYx", "number": 5982, "title": "feat: support UDAFs with and without init Args with same param type", "bodyText": "Description\nAs well as an expression, UDAFs support constants being passed. However, prior to this change it was not possible to register a UDAF that have variants that have no constants and constants, or indeed with different constant types.  For example:\n@UdafDescription(\n    name = \"LATEST_BY_OFFSET\",\n    description = LatestByOffset.DESCRIPTION,\n    author = KsqlConstants.CONFLUENT_AUTHOR\n)\npublic final class LatestByOffset {\n\n  ...\n\n  // Version taking no constants:\n  @UdafFactory(description = \"return the latest value of an integer column\",\n      aggregateSchema = \"STRUCT<SEQ BIGINT, VAL INT>\")\n  public static Udaf<Integer, Struct, Integer> latestInteger() {\n    return latest(STRUCT_INTEGER);\n  }\n\n  // Version taking one constant:\n  @UdafFactory(description = \"return the last N values of an integer column\",\n      aggregateSchema = \"ARRAY<STRUCT<SEQ BIGINT, VAL INT>>\")\n  public static Udaf<Integer, List<Struct>, List<Integer>> latestIntegers(final int topNSize) {\n    return latestN(STRUCT_INTEGER, topNSize);\n  }\nThe above would previously have thrown an error on start up, complaining that \"A function with the same name and parameter types is already registered\" when latestIntegers was being registered, as it incorrectly only took the runtime INTEGER parameter, ignoring the INTEGER constant parameter.\nWith this change all parameters are taken into account.\nTesting done\nUsual\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-08-11T18:49:42Z", "url": "https://github.com/confluentinc/ksql/pull/5982", "merged": true, "mergeCommit": {"oid": "0bf3296b51cd85bc8736c76be87f5e7a5d387492"}, "closed": true, "closedAt": "2020-08-12T15:55:58Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc97apZAH2gAyNDY2MjkwMzYxOmY0ODFhM2MzODNiY2Y5ZWFlOTMzNTkzZTM5MTVjYTMxMzc4YWZlYmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-NiCkAFqTQ2NjA1NDQ5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f481a3c383bcf9eae933593e3915ca31378afebc", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/f481a3c383bcf9eae933593e3915ca31378afebc", "committedDate": "2020-08-11T18:48:58Z", "message": "feat: support UDAFs with and without init Args with same param type\n\nAs well as an expression, UDAFs support constants being passed. However, prior to this change it was not possible to register a UDAF that have variants that too no constants and constants.  For example:\n\n```java\n@UdafDescription(\n    name = \"LATEST_BY_OFFSET\",\n    description = LatestByOffset.DESCRIPTION,\n    author = KsqlConstants.CONFLUENT_AUTHOR\n)\npublic final class LatestByOffset {\n\n  ...\n\n  // Version taking no constants:\n  @UdafFactory(description = \"return the latest value of an integer column\",\n      aggregateSchema = \"STRUCT<SEQ BIGINT, VAL INT>\")\n  public static Udaf<Integer, Struct, Integer> latestInteger() {\n    return latest(STRUCT_INTEGER);\n  }\n\n  // Version taking one constant:\n  @UdafFactory(description = \"return the last N values of an integer column\",\n      aggregateSchema = \"ARRAY<STRUCT<SEQ BIGINT, VAL INT>>\")\n  public static Udaf<Integer, List<Struct>, List<Integer>> latestIntegers(final int topNSize) {\n    return latestN(STRUCT_INTEGER, topNSize);\n  }\n```\n\nThe above would previously have thrown an error on start up, complaining that \"A function with the same name and parameter types is already registered\" when `latestIntegers` was being registered, as it incorrectly only took the runtime `INTEGER` parameter, ignoring the `INTEGER` constant parameter.\n\nWith this change all parameters are taken into account."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzk0MjE4", "url": "https://github.com/confluentinc/ksql/pull/5982#pullrequestreview-465394218", "createdAt": "2020-08-11T20:13:47Z", "commit": {"oid": "f481a3c383bcf9eae933593e3915ca31378afebc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoxMzo0N1rOG_Hktw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyNzozMVrOG_IAjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzNzU1OQ==", "bodyText": "nit: not your code, but since you're already changing this can we call type.getActualTypeArguments() just once (and also check that the size is exactly three)", "url": "https://github.com/confluentinc/ksql/pull/5982#discussion_r468837559", "createdAt": "2020-08-11T20:13:47Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/UdafTypes.java", "diffHunk": "@@ -54,38 +56,43 @@\n   private final Type inputType;\n   private final Type aggregateType;\n   private final Type outputType;\n-  private final String functionInfo;\n+  private final List<ParameterInfo> literalParams;\n   private final String invalidClassErrorMsg;\n   private final SqlTypeParser sqlTypeParser;\n \n   UdafTypes(\n       final Method method,\n-      final String functionInfo,\n+      final FunctionName functionName,\n       final SqlTypeParser sqlTypeParser\n   ) {\n-    Objects.requireNonNull(method);\n-    this.functionInfo = Objects.requireNonNull(functionInfo);\n     this.invalidClassErrorMsg = \"class='%s'\"\n         + \" is not supported by UDAFs. Valid types are: \" + SUPPORTED_TYPES + \" \"\n-        + functionInfo;\n+        + Objects.requireNonNull(functionName, \"functionName\");\n     final AnnotatedParameterizedType annotatedReturnType\n         = (AnnotatedParameterizedType) method.getAnnotatedReturnType();\n     final ParameterizedType type = (ParameterizedType) annotatedReturnType.getType();\n     this.sqlTypeParser = Objects.requireNonNull(sqlTypeParser);\n \n-    inputType = type.getActualTypeArguments()[0];\n-    aggregateType = type.getActualTypeArguments()[1];\n-    outputType = type.getActualTypeArguments()[2];\n+    this.inputType = type.getActualTypeArguments()[0];\n+    this.aggregateType = type.getActualTypeArguments()[1];\n+    this.outputType = type.getActualTypeArguments()[2];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f481a3c383bcf9eae933593e3915ca31378afebc"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0NDY4NQ==", "bodyText": "this doesn't sit right with me. The initialization literals are not part of the parameters, they are something separate that initialize the aggregator itself. I'm wondering how this will bite us in the future - one place that comes to mind is when we describe the function I think it'll now include the initialization parameters when it shouldn't.\nAnother problem might come from handling of the schema provider annotations, which currently take in a list of the parameters (not including the initialization literals). I don't know whether they should or shouldn't, but it seems wrong to lump them in together.", "url": "https://github.com/confluentinc/ksql/pull/5982#discussion_r468844685", "createdAt": "2020-08-11T20:27:31Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/function/UdafFactoryInvoker.java", "diffHunk": "@@ -63,13 +62,12 @@\n     if (!Modifier.isStatic(method.getModifiers())) {\n       throw new KsqlException(\"UDAF factory methods must be static \" + method);\n     }\n-    final UdafTypes types = new UdafTypes(method, functionName.text(), typeParser);\n+    final UdafTypes types = new UdafTypes(method, functionName, typeParser);\n     this.functionName = Objects.requireNonNull(functionName);\n     this.aggregateArgType = Objects.requireNonNull(types.getAggregateSchema(aggregateSchema));\n     this.aggregateReturnType = Objects.requireNonNull(types.getOutputSchema(outputSchema));\n     this.metrics = Objects.requireNonNull(metrics);\n-    this.params =\n-        Collections.singletonList(types.getInputSchema(Objects.requireNonNull(inputSchema)));\n+    this.params = types.getInputSchema(Objects.requireNonNull(inputSchema));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f481a3c383bcf9eae933593e3915ca31378afebc"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5231494751de980fc4df3d653e773d951ec4df3a", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/5231494751de980fc4df3d653e773d951ec4df3a", "committedDate": "2020-08-12T14:54:33Z", "message": "Merge branch 'master' into udaf_differentiate_by_initParams"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDU0NDk0", "url": "https://github.com/confluentinc/ksql/pull/5982#pullrequestreview-466054494", "createdAt": "2020-08-12T15:55:20Z", "commit": {"oid": "5231494751de980fc4df3d653e773d951ec4df3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4804, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}