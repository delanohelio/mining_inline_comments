{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MDkxNjM2", "number": 5363, "title": "feat: drop WITH(KEY) syntax", "bodyText": "Description\nfixes: #3537\nimplements: See KLIP-25\nThis change removes the WITH(KEY) syntax which previously allowed users to specify a value column that could act as an alias for the key column. This allowed a more user friendly name to be used for the key column, at the expense of requiring a copy of the key data in the value.\nWith the new 'any key name' feature, the key columns themselves can be given appropriate names, removing the need for this aliasing functionality.  See KLIP-25 for more details.\nReviewing notes:\nCommits split to give:\n\nProd code changes - which is mainly just removing the KeyField stuff - deleting code!\nTest code changes - a lot of tests to change. Needed to change TestDataProvider to not rely on key fields too, which meant changing the schema. Also MetastoreFixture changed to not used key fields.\nTest historical test plans - new test plans for any changed tests.\nDocs - updated docs @JimGalasyn, rather than 10s of suggested changes I need to apply (generally blindly), how  do you feel about making any changes in a follow up PR that I can then review?\n\nTesting done\nusual.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-05-14T15:58:41Z", "url": "https://github.com/confluentinc/ksql/pull/5363", "merged": true, "mergeCommit": {"oid": "bb43d23ad36ec3519a06d05c25ca99f726244ad0"}, "closed": true, "closedAt": "2020-05-18T13:07:44Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchPiamgH2gAyNDE4MDkxNjM2OmE4MDdmODNmOTExMzc0YzM3NDM1YmI4OGM0MDVlZjBlMGJiNjVmNWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcie3RjAH2gAyNDE4MDkxNjM2OmViYzgwNTM0ZTNhYTU1Njc4OTI0NmFhNzA2NzJlYTQzZjEyOWUxODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a807f83f911374c37435bb88c405ef0e0bb65f5b", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/a807f83f911374c37435bb88c405ef0e0bb65f5b", "committedDate": "2020-05-14T15:51:45Z", "message": "feat: drop WITH(KEY) syntax\n\nfixes: https://github.com/confluentinc/ksql/issues/3537\n\nimplements: See [KLIP-25](https://github.com/confluentinc/ksql/blob/master/design-proposals/klip-25-removal-of-with-key-syntax.md)\n\nThis change removes the `WITH(KEY)` syntax which previously allowed users to specify a value column that could act as an alias for the key column. This allowed a more user friendly name to be used for the key column, at the expense of requiring a copy of the key data in the value.\n\nWith the new 'any key name' feature, the key columns themselves can be given appropriate names, removing the need for this aliasing functionality.  See [KLIP-25](https://github.com/confluentinc/ksql/blob/master/design-proposals/klip-25-removal-of-with-key-syntax.md) for more details."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d5f1be4f5ed9f6938368e9ada92a62063568ba", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/a9d5f1be4f5ed9f6938368e9ada92a62063568ba", "committedDate": "2020-05-14T15:53:15Z", "message": "test: test updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283679aff44c0935f2527c588c3ceda1b2cbba90", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/283679aff44c0935f2527c588c3ceda1b2cbba90", "committedDate": "2020-05-14T15:53:36Z", "message": "test: historic plans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d4c7d684e8a3526232c015828bd1845c065048e8", "committedDate": "2020-05-14T15:54:13Z", "message": "docs: doc updates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg0ODA0", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412084804", "createdAt": "2020-05-14T18:39:48Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozOTo0OFrOGVpd9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODozOTo0OFrOGVpd9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MjY5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This is the default key column added if you do not provide one.\n          \n          \n            \n            This is the default key column that ksqlDB adds if you don't provide one.", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425352694", "createdAt": "2020-05-14T18:39:48Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg1MTcy", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412085172", "createdAt": "2020-05-14T18:40:17Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MDoxN1rOGVpfLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MDoxN1rOGVpfLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MzAwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If your data does not contain a Kafka serialized\n          \n          \n            \n            If your data doesn't contain a {{ site.ak }} serialized", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425353006", "createdAt": "2020-05-14T18:40:17Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg1NzMx", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412085731", "createdAt": "2020-05-14T18:41:01Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MTowMVrOGVphBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MTowMVrOGVphBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MzQ3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n          \n          \n            \n            `STRING` in the {{ site.ak }} message key, don't use `ROWKEY` in your SQL statements,", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425353478", "createdAt": "2020-05-14T18:41:01Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg2MTU0", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412086154", "createdAt": "2020-05-14T18:41:35Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MTozNlrOGVpiUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MTozNlrOGVpiUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1MzgxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            as the behaviour will be undefined.\n          \n          \n            \n            because this may cause unexpected results.", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425353811", "createdAt": "2020-05-14T18:41:36Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg2NTA4", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412086508", "createdAt": "2020-05-14T18:42:04Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MjowNFrOGVpjYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MjowNFrOGVpjYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NDA4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The previous SQL statement does not define a column to represent the data in the\n          \n          \n            \n            The previous SQL statement doesn't define a column to represent the data in the", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425354081", "createdAt": "2020-05-14T18:42:04Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.\n+\n ### Create a Stream with a Specified Key\n \n-The previous SQL statement makes no assumptions about the Kafka message\n-key in the underlying Kafka topic. If the value of the message key in\n-the topic is the same as one of the columns defined in the stream, you\n-can specify the key in the WITH clause of the CREATE STREAM statement.\n-If you use this column name later to perform a join or a repartition, ksqlDB\n-knows that no repartition is needed. In effect, the named column becomes an\n-alias for ROWKEY.\n+The previous SQL statement does not define a column to represent the data in the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg3MjI3", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412087227", "createdAt": "2020-05-14T18:43:02Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MzowMlrOGVplrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0MzowMlrOGVplrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NDY3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Kafka message key in the underlying Kafka topic. The system therefore added a\n          \n          \n            \n            {{ site.ak }} message key in the underlying {{ site.ak }} topic, so the system adds a", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425354671", "createdAt": "2020-05-14T18:43:02Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.\n+\n ### Create a Stream with a Specified Key\n \n-The previous SQL statement makes no assumptions about the Kafka message\n-key in the underlying Kafka topic. If the value of the message key in\n-the topic is the same as one of the columns defined in the stream, you\n-can specify the key in the WITH clause of the CREATE STREAM statement.\n-If you use this column name later to perform a join or a repartition, ksqlDB\n-knows that no repartition is needed. In effect, the named column becomes an\n-alias for ROWKEY.\n+The previous SQL statement does not define a column to represent the data in the\n+Kafka message key in the underlying Kafka topic. The system therefore added a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg4MDI4", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412088028", "createdAt": "2020-05-14T18:44:11Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NDoxMVrOGVpoJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NDoxMVrOGVpoJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NTMwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Where the Kafka message key is serialized in a key format ksqlDB supports, (currently only `KAFKA`),\n          \n          \n            \n            If the {{ site.ak }} message key is serialized in a key format that ksqlDB supports (currently `KAFKA`),", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425355300", "createdAt": "2020-05-14T18:44:11Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.\n+\n ### Create a Stream with a Specified Key\n \n-The previous SQL statement makes no assumptions about the Kafka message\n-key in the underlying Kafka topic. If the value of the message key in\n-the topic is the same as one of the columns defined in the stream, you\n-can specify the key in the WITH clause of the CREATE STREAM statement.\n-If you use this column name later to perform a join or a repartition, ksqlDB\n-knows that no repartition is needed. In effect, the named column becomes an\n-alias for ROWKEY.\n+The previous SQL statement does not define a column to represent the data in the\n+Kafka message key in the underlying Kafka topic. The system therefore added a\n+`ROWKEY` column with type `STRING`.\n+\n+Where the Kafka message key is serialized in a key format ksqlDB supports, (currently only `KAFKA`),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg4NjM1", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412088635", "createdAt": "2020-05-14T18:45:03Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NTowM1rOGVpqBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NTowM1rOGVpqBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NTc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            For example, the Kafka message key of the pageviews topic is a `BIGINT` containing the `viewtime`.\n          \n          \n            \n            For example, the {{ site.ak }}  message key of the `pageviews` topic is a `BIGINT` containing the `viewtime`,", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425355780", "createdAt": "2020-05-14T18:45:03Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.\n+\n ### Create a Stream with a Specified Key\n \n-The previous SQL statement makes no assumptions about the Kafka message\n-key in the underlying Kafka topic. If the value of the message key in\n-the topic is the same as one of the columns defined in the stream, you\n-can specify the key in the WITH clause of the CREATE STREAM statement.\n-If you use this column name later to perform a join or a repartition, ksqlDB\n-knows that no repartition is needed. In effect, the named column becomes an\n-alias for ROWKEY.\n+The previous SQL statement does not define a column to represent the data in the\n+Kafka message key in the underlying Kafka topic. The system therefore added a\n+`ROWKEY` column with type `STRING`.\n+\n+Where the Kafka message key is serialized in a key format ksqlDB supports, (currently only `KAFKA`),\n+you can specify the key in the column list of the CREATE STREAM statement.\n \n-For example, if the Kafka message key has the same value as the `pageid`\n-column, you can write the CREATE STREAM statement like this:\n+For example, the Kafka message key of the pageviews topic is a `BIGINT` containing the `viewtime`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg5MDA0", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412089004", "createdAt": "2020-05-14T18:45:34Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NTozNFrOGVprPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NTozNFrOGVprPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NjA5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            So, you can write the CREATE STREAM statement like this:\n          \n          \n            \n            so you can write the CREATE STREAM statement like this:", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425356094", "createdAt": "2020-05-14T18:45:34Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/create-a-stream.md", "diffHunk": "@@ -98,30 +98,34 @@ Name                 : PAGEVIEWS\n For runtime statistics and query details run: DESCRIBE EXTENDED <Stream,Table>;\n ```\n \n+You may notice that ksqlDB has added a key column named `ROWKEY`.\n+This is the default key column added if you do not provide one.\n+If your data does not contain a Kafka serialized\n+`STRING` in the Kafka message key you should not use `ROWKEY` in your SQL statements,\n+as the behaviour will be undefined.\n+\n ### Create a Stream with a Specified Key\n \n-The previous SQL statement makes no assumptions about the Kafka message\n-key in the underlying Kafka topic. If the value of the message key in\n-the topic is the same as one of the columns defined in the stream, you\n-can specify the key in the WITH clause of the CREATE STREAM statement.\n-If you use this column name later to perform a join or a repartition, ksqlDB\n-knows that no repartition is needed. In effect, the named column becomes an\n-alias for ROWKEY.\n+The previous SQL statement does not define a column to represent the data in the\n+Kafka message key in the underlying Kafka topic. The system therefore added a\n+`ROWKEY` column with type `STRING`.\n+\n+Where the Kafka message key is serialized in a key format ksqlDB supports, (currently only `KAFKA`),\n+you can specify the key in the column list of the CREATE STREAM statement.\n \n-For example, if the Kafka message key has the same value as the `pageid`\n-column, you can write the CREATE STREAM statement like this:\n+For example, the Kafka message key of the pageviews topic is a `BIGINT` containing the `viewtime`.\n+So, you can write the CREATE STREAM statement like this:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDg5ODE5", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412089819", "createdAt": "2020-05-14T18:46:39Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NjozOVrOGVptsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NjozOVrOGVptsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NjcyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Be aware that Kafka guarantees the relative order of any two messages from\n          \n          \n            \n                {{ site.ak }} guarantees the relative order of any two messages from", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425356721", "createdAt": "2020-05-14T18:46:39Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/joins/partition-data.md", "diffHunk": "@@ -25,61 +25,71 @@ of tables, so you can only use a table's primary key as a join column.\n \n Streams, on the other hand, may not have a defined key or may have a key that\n differs from the join column. In these cases, ksqlDB internally repartitions\n-the stream, which implicitly defines a key for it.\n+the stream, which implicitly defines the correct key for it.\n+\n+!!! important\n+    Be aware that Kafka guarantees the relative order of any two messages from", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDkwMDgy", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412090082", "createdAt": "2020-05-14T18:47:03Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NzowM1rOGVpuig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NzowM1rOGVpuig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NjkzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                one source partition only if they are also both in the same partition\n          \n          \n            \n                one source partition only if they are both in the same partition", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425356938", "createdAt": "2020-05-14T18:47:03Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/joins/partition-data.md", "diffHunk": "@@ -25,61 +25,71 @@ of tables, so you can only use a table's primary key as a join column.\n \n Streams, on the other hand, may not have a defined key or may have a key that\n differs from the join column. In these cases, ksqlDB internally repartitions\n-the stream, which implicitly defines a key for it.\n+the stream, which implicitly defines the correct key for it.\n+\n+!!! important\n+    Be aware that Kafka guarantees the relative order of any two messages from\n+    one source partition only if they are also both in the same partition", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDkwMzQy", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412090342", "createdAt": "2020-05-14T18:47:23Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NzoyM1rOGVpvVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0NzoyM1rOGVpvVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NzE0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                after the repartition. Otherwise, Kafka is likely to interleave messages.\n          \n          \n            \n                after the repartition. Otherwise, {{ site.ak }} is likely to interleave messages.", "url": "https://github.com/confluentinc/ksql/pull/5363#discussion_r425357143", "createdAt": "2020-05-14T18:47:23Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/joins/partition-data.md", "diffHunk": "@@ -25,61 +25,71 @@ of tables, so you can only use a table's primary key as a join column.\n \n Streams, on the other hand, may not have a defined key or may have a key that\n differs from the join column. In these cases, ksqlDB internally repartitions\n-the stream, which implicitly defines a key for it.\n+the stream, which implicitly defines the correct key for it.\n+\n+!!! important\n+    Be aware that Kafka guarantees the relative order of any two messages from\n+    one source partition only if they are also both in the same partition\n+    after the repartition. Otherwise, Kafka is likely to interleave messages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDkxMTQ5", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412091149", "createdAt": "2020-05-14T18:48:27Z", "commit": {"oid": "d4c7d684e8a3526232c015828bd1845c065048e8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b95f8748740ddd7157d9899fd6881c9bec5f6bd", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/3b95f8748740ddd7157d9899fd6881c9bec5f6bd", "committedDate": "2020-05-14T19:28:44Z", "message": "Update docs/developer-guide/joins/partition-data.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa7f7022f089b09ef158a7f28c5bfecc00d6343", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/6aa7f7022f089b09ef158a7f28c5bfecc00d6343", "committedDate": "2020-05-14T19:28:52Z", "message": "Update docs/developer-guide/joins/partition-data.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a74a3051887284fa8d628bca325b809688f13e7", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/3a74a3051887284fa8d628bca325b809688f13e7", "committedDate": "2020-05-14T19:29:03Z", "message": "Update docs/developer-guide/joins/partition-data.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e616ffe5ca0178d8c32351a77cc786e08153219", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/0e616ffe5ca0178d8c32351a77cc786e08153219", "committedDate": "2020-05-14T19:29:11Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c1534009e93041e321e64ef9a03d9104c1abb1a", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/7c1534009e93041e321e64ef9a03d9104c1abb1a", "committedDate": "2020-05-14T19:29:18Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc85949c87234df683a3ba71e8f7e323b415579", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/adc85949c87234df683a3ba71e8f7e323b415579", "committedDate": "2020-05-14T19:29:24Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a7322c849ad3f9758806786f9d0a70a4448da74", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/4a7322c849ad3f9758806786f9d0a70a4448da74", "committedDate": "2020-05-14T19:29:31Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2da5eba15f0d8ec964d887c0e944fee6fc4e72f", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d2da5eba15f0d8ec964d887c0e944fee6fc4e72f", "committedDate": "2020-05-14T19:29:39Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7390a3477c7ac050f021db6f25c356440baf6365", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/7390a3477c7ac050f021db6f25c356440baf6365", "committedDate": "2020-05-14T19:29:49Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbf96779360a378a2f09e1f2b0f09aa6af841fed", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/dbf96779360a378a2f09e1f2b0f09aa6af841fed", "committedDate": "2020-05-14T19:29:56Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5acab89da37f840e61d7663f8df5ba0ff3d9e800", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/5acab89da37f840e61d7663f8df5ba0ff3d9e800", "committedDate": "2020-05-14T19:30:03Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "058bfd3111f778f746642663360994e2ab7c649d", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/058bfd3111f778f746642663360994e2ab7c649d", "committedDate": "2020-05-14T19:30:14Z", "message": "Update docs/developer-guide/create-a-stream.md\n\nCo-authored-by: Jim Galasyn <jim.galasyn@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2559bc7060c299259010d5ae97e920bf42c72729", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/2559bc7060c299259010d5ae97e920bf42c72729", "committedDate": "2020-05-15T10:35:12Z", "message": "chore: merge from master\n\nConflicting files\nksqldb-rest-app/src/test/java/io/confluent/ksql/rest/integration/LagReportingAgentFunctionalTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10f1b9af1fe0c732c315262b2cfbd153a8ac1af5", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/10f1b9af1fe0c732c315262b2cfbd153a8ac1af5", "committedDate": "2020-05-15T13:43:41Z", "message": "Merge branch 'remove_key_field' of github.com:big-andy-coates/ksql into remove_key_field"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzk4NDIy", "url": "https://github.com/confluentinc/ksql/pull/5363#pullrequestreview-412798422", "createdAt": "2020-05-15T16:32:14Z", "commit": {"oid": "10f1b9af1fe0c732c315262b2cfbd153a8ac1af5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b809e306c26b672a38a5cf84382c0b8117a4eda", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/2b809e306c26b672a38a5cf84382c0b8117a4eda", "committedDate": "2020-05-15T21:56:12Z", "message": "Merge branch 'master' into remove_key_field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0362ad13370bc399c24f69209b68b67c5033c53c", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/0362ad13370bc399c24f69209b68b67c5033c53c", "committedDate": "2020-05-18T11:15:45Z", "message": "chore: merge from master\n\nConflicting files\nksqldb-rest-app/src/test/java/io/confluent/ksql/api/integration/ApiIntegrationTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebc80534e3aa556789246aa70672ea43f129e180", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/ebc80534e3aa556789246aa70672ea43f129e180", "committedDate": "2020-05-18T12:17:02Z", "message": "chore: disable spotbugs red herring"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}