{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzE3Njkw", "number": 6285, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo0MzowNlrOEmktYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo0MzowNlrOEmktYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODgyNzg0OnYy", "diffSide": "RIGHT", "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/TestCaseNode.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo0MzowNlrOHWrhUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozMjowNlrOHWuc7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU0Mzc2MQ==", "bodyText": "How come we only require one of inputs or outputs to be present? Under what scenario would it make sense to provide one and not the other?", "url": "https://github.com/confluentinc/ksql/pull/6285#discussion_r493543761", "createdAt": "2020-09-23T12:43:06Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/TestCaseNode.java", "diffHunk": "@@ -133,12 +134,22 @@ public VersionBoundsNode versionBounds() {\n   }\n \n   private void validate() {\n-    if (this.name.isEmpty()) {\n+    if (name.isEmpty()) {\n       throw new MissingFieldException(\"name\");\n     }\n \n-    if (this.statements.isEmpty()) {\n-      throw new InvalidFieldException(\"statements\", \"was empty\");\n+    try {\n+      if (statements.isEmpty()) {\n+        throw new InvalidFieldException(\"statements\", \"was empty\");\n+      }\n+\n+      if (!expectedException.isPresent() && inputs.isEmpty() && outputs.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d088ecaea56f8e16c91fc4fde824e6d18f04786f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1NjA3Mw==", "bodyText": "I now understand why the input file may be null: we might have tests that start with no inputs and instead use INSERT VALUES to insert data, but I still don't understand why it'd be useful to have a test where the output file is null. FWIW it looks like the testing tool requires the output file to be present: \n  \n    \n      ksql/ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/tools/KsqlTestingTool.java\n    \n    \n         Line 55\n      in\n      c5d6b56\n    \n    \n    \n    \n\n        \n          \n           && testOptions.getOutputFile() != null) {", "url": "https://github.com/confluentinc/ksql/pull/6285#discussion_r493556073", "createdAt": "2020-09-23T12:56:20Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/TestCaseNode.java", "diffHunk": "@@ -133,12 +134,22 @@ public VersionBoundsNode versionBounds() {\n   }\n \n   private void validate() {\n-    if (this.name.isEmpty()) {\n+    if (name.isEmpty()) {\n       throw new MissingFieldException(\"name\");\n     }\n \n-    if (this.statements.isEmpty()) {\n-      throw new InvalidFieldException(\"statements\", \"was empty\");\n+    try {\n+      if (statements.isEmpty()) {\n+        throw new InvalidFieldException(\"statements\", \"was empty\");\n+      }\n+\n+      if (!expectedException.isPresent() && inputs.isEmpty() && outputs.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU0Mzc2MQ=="}, "originalCommit": {"oid": "d088ecaea56f8e16c91fc4fde824e6d18f04786f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3MzQzNw==", "bodyText": "A test where a filter filters everything out.  Weird... yes... do we have such tests... yes.", "url": "https://github.com/confluentinc/ksql/pull/6285#discussion_r493573437", "createdAt": "2020-09-23T13:13:59Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/TestCaseNode.java", "diffHunk": "@@ -133,12 +134,22 @@ public VersionBoundsNode versionBounds() {\n   }\n \n   private void validate() {\n-    if (this.name.isEmpty()) {\n+    if (name.isEmpty()) {\n       throw new MissingFieldException(\"name\");\n     }\n \n-    if (this.statements.isEmpty()) {\n-      throw new InvalidFieldException(\"statements\", \"was empty\");\n+    try {\n+      if (statements.isEmpty()) {\n+        throw new InvalidFieldException(\"statements\", \"was empty\");\n+      }\n+\n+      if (!expectedException.isPresent() && inputs.isEmpty() && outputs.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU0Mzc2MQ=="}, "originalCommit": {"oid": "d088ecaea56f8e16c91fc4fde824e6d18f04786f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU5MTc4OA==", "bodyText": "But shouldn't a test like that require an empty outputs node rather than a missing outputs node? Having a missing outputs node is counterintuitive since missing nodes in other parts of the test specification indicate that nothing should be checked, whereas in a test like that we would still want to verify that no outputs were produced.", "url": "https://github.com/confluentinc/ksql/pull/6285#discussion_r493591788", "createdAt": "2020-09-23T13:32:06Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-functional-tests/src/main/java/io/confluent/ksql/test/model/TestCaseNode.java", "diffHunk": "@@ -133,12 +134,22 @@ public VersionBoundsNode versionBounds() {\n   }\n \n   private void validate() {\n-    if (this.name.isEmpty()) {\n+    if (name.isEmpty()) {\n       throw new MissingFieldException(\"name\");\n     }\n \n-    if (this.statements.isEmpty()) {\n-      throw new InvalidFieldException(\"statements\", \"was empty\");\n+    try {\n+      if (statements.isEmpty()) {\n+        throw new InvalidFieldException(\"statements\", \"was empty\");\n+      }\n+\n+      if (!expectedException.isPresent() && inputs.isEmpty() && outputs.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU0Mzc2MQ=="}, "originalCommit": {"oid": "d088ecaea56f8e16c91fc4fde824e6d18f04786f"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2835, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}