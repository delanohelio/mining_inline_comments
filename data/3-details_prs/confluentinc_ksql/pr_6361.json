{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDUxNjk2", "number": 6361, "title": "feat: new command to restore ksqlDB command topic backups", "bodyText": "Description\nWhat behavior do you want to change, why, how does your patch achieve the changes?\nFixes #6286\nThis is a new command that helps to restore command topic backups:\nNAME\n        ksql-restore-metadata - KSQL Restore Metadata\n\nSYNOPSIS\n        ksql-restore-metadata --config-file <configFile> [ {-h | --help} ]\n                [ {--yes | -y} ] [--] <backup-file>\n\nOPTIONS\n        --config-file <configFile>\n            A file specifying configs for the KSQL Server, KSQL, and its\n            underlying Kafka Streams instance(s). Refer to KSQL documentation\n            for a list of available configs.\n\n        -h, --help\n            Display help information\n\n        --yes, -y\n            Automatic \"yes\" as answer to prompt and run non-interactively.\n\n        --\n            This option can be used to separate command-line options from the\n            list of arguments (useful when arguments might be mistaken for\n            command-line options)\n\n        <backup-file>\n            A file specifying the file that contains the metadata backup.\n\nWith default options, the command prompts the user to answer if continuing with the restore process or not. This is required to avoid an accidental restore process (the option -y will assume \"yes\" as the answer).\n./bin/ksql-restore-command-topic --config-file <config-file> <backup-file>\nRestoring the command topic will DELETE your actual metadata.\nContinue [yes or no] (default: no)? \n\nThe restoration process displays timing information in the console to let the user know how much time it took to restore the command topic:\n./bin/ksql-restore-command-topic --config-file <config-file> <backup-file> --yes\nLoading backup file ...\nBackup (1 records) loaded in memory in 347 ms.\n\nRestoring command topic ...\nRestore process completed in 1164 ms.\n\nYou need to restart the ksqlDB server to re-load the command topic.\n\nTesting done\nDescribe the testing strategy. Unit and integration tests are expected for any behavior changes.\nAdded unit tests\nVerified manually\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-10-05T18:57:15Z", "url": "https://github.com/confluentinc/ksql/pull/6361", "merged": true, "mergeCommit": {"oid": "036df2075f97f561edc44575d564e4bd983abea4"}, "closed": true, "closedAt": "2020-10-21T01:55:38Z", "author": {"login": "spena"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPvPg7gFqTUwMjU0NzcxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUfYa1gBqjM5MDA4MDkwNDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTQ3NzEy", "url": "https://github.com/confluentinc/ksql/pull/6361#pullrequestreview-502547712", "createdAt": "2020-10-06T02:48:35Z", "commit": {"oid": "20b7cc56e16f17cff64aecbd01381e36fe639b68"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjQzMTc3", "url": "https://github.com/confluentinc/ksql/pull/6361#pullrequestreview-503243177", "createdAt": "2020-10-06T18:23:46Z", "commit": {"oid": "20b7cc56e16f17cff64aecbd01381e36fe639b68"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjQ1Mzcx", "url": "https://github.com/confluentinc/ksql/pull/6361#pullrequestreview-503245371", "createdAt": "2020-10-06T18:26:25Z", "commit": {"oid": "20b7cc56e16f17cff64aecbd01381e36fe639b68"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODoyNjoyNVrOHdUoOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODoyNjoyNVrOHdUoOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUwODcyOQ==", "bodyText": "nit: we shouldn't check these in if this is a specific checkstyle error to your local environment", "url": "https://github.com/confluentinc/ksql/pull/6361#discussion_r500508729", "createdAt": "2020-10-06T18:26:25Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-streams/src/test/java/io/confluent/ksql/execution/streams/StreamAggregateBuilderTest.java", "diffHunk": "@@ -431,6 +431,7 @@ public void shouldBuildAggregatorParamsCorrectlyForUnwindowedAggregate() {\n   }\n \n   @Test\n+  @SuppressWarnings(\"RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b7cc56e16f17cff64aecbd01381e36fe639b68"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20b7cc56e16f17cff64aecbd01381e36fe639b68", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/20b7cc56e16f17cff64aecbd01381e36fe639b68", "committedDate": "2020-10-05T18:56:48Z", "message": "feat: new ksql-restore-command-topic to restore backups"}, "afterCommit": {"oid": "a6dfc9893755b546b3553aa5f03c466117c3f367", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/a6dfc9893755b546b3553aa5f03c466117c3f367", "committedDate": "2020-10-15T16:51:03Z", "message": "fix: use transactions to restore the commands"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODAyMTk5", "url": "https://github.com/confluentinc/ksql/pull/6361#pullrequestreview-509802199", "createdAt": "2020-10-15T20:56:09Z", "commit": {"oid": "a6dfc9893755b546b3553aa5f03c466117c3f367"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMDo1NjowOVrOHiaKYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjoyMToyOVrOHidg9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg0MjI3Mg==", "bodyText": "For the verify statements in this file, can you use InOrder to verify the calls are being made properly? (we're enqueueing a record, then committing before moving onto the next record.", "url": "https://github.com/confluentinc/ksql/pull/6361#discussion_r505842272", "createdAt": "2020-10-15T20:56:09Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-rest-app/src/test/java/io/confluent/ksql/rest/server/restore/KsqlRestoreCommandTopicTest.java", "diffHunk": "@@ -0,0 +1,308 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.rest.server.restore;\n+\n+import com.google.common.collect.ImmutableMap;\n+import io.confluent.ksql.services.KafkaTopicClient;\n+import io.confluent.ksql.util.KsqlConfig;\n+import io.confluent.ksql.util.KsqlException;\n+import io.confluent.ksql.util.Pair;\n+import org.apache.kafka.clients.producer.Producer;\n+import org.apache.kafka.clients.producer.ProducerRecord;\n+import org.apache.kafka.clients.producer.RecordMetadata;\n+import org.apache.kafka.common.config.TopicConfig;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.Future;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsString;\n+import static org.junit.Assert.assertThrows;\n+import static org.mockito.Mockito.doThrow;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoMoreInteractions;\n+import static org.mockito.Mockito.verifyZeroInteractions;\n+import static org.mockito.Mockito.when;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class KsqlRestoreCommandTopicTest {\n+  private static final String COMMAND_TOPIC_NAME = \"command_topic_name\";\n+\n+  private static final int INTERNAL_TOPIC_PARTITION_COUNT = 1;\n+  private static final short INTERNAL_TOPIC_REPLICAS_COUNT = 1;\n+\n+  private static final ImmutableMap<String, ?> INTERNAL_TOPIC_CONFIG = ImmutableMap.of(\n+      TopicConfig.RETENTION_MS_CONFIG, -1L,\n+      TopicConfig.CLEANUP_POLICY_CONFIG, TopicConfig.CLEANUP_POLICY_DELETE,\n+      TopicConfig.UNCLEAN_LEADER_ELECTION_ENABLE_CONFIG, false,\n+      TopicConfig.MIN_IN_SYNC_REPLICAS_CONFIG, INTERNAL_TOPIC_REPLICAS_COUNT\n+  );\n+\n+  private static final Pair<byte[], byte[]> COMMAND_1 = createStreamCommand(\"stream1\");\n+  private static final Pair<byte[], byte[]> COMMAND_2 = createStreamCommand(\"stream2\");\n+  private static final Pair<byte[], byte[]> COMMAND_3 = createStreamCommand(\"stream3\");\n+\n+  private static final ProducerRecord<byte[], byte[]> RECORD_1 = newRecord(COMMAND_1);\n+  private static final ProducerRecord<byte[], byte[]> RECORD_2 = newRecord(COMMAND_2);\n+  private static final ProducerRecord<byte[], byte[]> RECORD_3 = newRecord(COMMAND_3);\n+\n+  private static final List<Pair<byte[], byte[]>> BACKUP_COMMANDS =\n+      Arrays.asList(COMMAND_1, COMMAND_2, COMMAND_3);\n+\n+  private static Pair<byte[], byte[]> createStreamCommand(final String streamName) {\n+    return Pair.of(\n+        String.format(\"\\\"stream/%s/create\\\"\", streamName).getBytes(StandardCharsets.UTF_8),\n+        String.format(\"{\\\"statement\\\":\\\"CREATE STREAM %s (id INT) WITH (kafka_topic='%s')\\\",\"\n+                + \"\\\"streamsProperties\\\":{},\\\"originalProperties\\\":{},\\\"plan\\\":null}\",\n+            streamName, streamName).getBytes(StandardCharsets.UTF_8)\n+    );\n+  }\n+\n+  private static ProducerRecord<byte[], byte[]> newRecord(final Pair<byte[], byte[]> command) {\n+    return new ProducerRecord<>(\n+        COMMAND_TOPIC_NAME,\n+        0,\n+        command.getLeft(),\n+        command.getRight());\n+  }\n+\n+  @Mock\n+  private KafkaTopicClient topicClient;\n+  @Mock\n+  private Producer<byte[], byte[]> kafkaProducer;\n+  @Mock\n+  private Future<RecordMetadata> future1;\n+  @Mock\n+  private Future<RecordMetadata> future2;\n+  @Mock\n+  private Future<RecordMetadata> future3;\n+\n+  private KsqlRestoreCommandTopic restoreCommandTopic;\n+\n+\n+  @Before\n+  public void setup() {\n+    final KsqlConfig serverConfig = new KsqlConfig(ImmutableMap.of(\n+        KsqlConfig.KSQL_INTERNAL_TOPIC_REPLICAS_PROPERTY, INTERNAL_TOPIC_REPLICAS_COUNT,\n+        KsqlConfig.KSQL_INTERNAL_TOPIC_MIN_INSYNC_REPLICAS_PROPERTY, INTERNAL_TOPIC_REPLICAS_COUNT\n+    ));\n+\n+    restoreCommandTopic = new KsqlRestoreCommandTopic(\n+        serverConfig,\n+        COMMAND_TOPIC_NAME,\n+        topicClient,\n+        () -> kafkaProducer\n+    );\n+\n+    when(kafkaProducer.send(RECORD_1)).thenReturn(future1);\n+    when(kafkaProducer.send(RECORD_2)).thenReturn(future2);\n+    when(kafkaProducer.send(RECORD_3)).thenReturn(future3);\n+  }\n+\n+  @Test\n+  public void shouldCreateAndRestoreCommandTopic() throws ExecutionException, InterruptedException {\n+    // Given:\n+    when(topicClient.isTopicExists(COMMAND_TOPIC_NAME)).thenReturn(false);\n+\n+    // When:\n+    restoreCommandTopic.restore(BACKUP_COMMANDS);\n+\n+    // Then:\n+    verifyCreateTopic(COMMAND_TOPIC_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6dfc9893755b546b3553aa5f03c466117c3f367"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTg5NzIwNg==", "bodyText": "Do we need to actually split this into two classes? BackupReplayFile and BackupInputFile\nIt doesn't really look like there's much difference between the two so it's not clear to me why having both is necessary.", "url": "https://github.com/confluentinc/ksql/pull/6361#discussion_r505897206", "createdAt": "2020-10-15T22:21:29Z", "author": {"login": "stevenpyzhang"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/BackupReplayFile.java", "diffHunk": "@@ -16,36 +16,21 @@\n package io.confluent.ksql.rest.server;\n \n import io.confluent.ksql.util.KsqlException;\n-import io.confluent.ksql.util.Pair;\n import java.io.Closeable;\n import java.io.File;\n import java.io.FileNotFoundException;\n import java.io.FileOutputStream;\n import java.io.IOException;\n-import java.nio.charset.StandardCharsets;\n-import java.nio.file.Files;\n-import java.util.ArrayList;\n-import java.util.List;\n-import java.util.Objects;\n import org.apache.kafka.clients.consumer.ConsumerRecord;\n \n /**\n  * A file that is used by the backup service to replay command_topic commands.\n  */\n-public final class BackupReplayFile implements Closeable {\n-  private static final String KEY_VALUE_SEPARATOR_STR = \":\";\n-  private static final String NEW_LINE_SEPARATOR_STR = \"\\n\";\n-\n-  private static final byte[] KEY_VALUE_SEPARATOR_BYTES =\n-      KEY_VALUE_SEPARATOR_STR.getBytes(StandardCharsets.UTF_8);\n-  private static final byte[] NEW_LINE_SEPARATOR_BYTES =\n-      NEW_LINE_SEPARATOR_STR.getBytes(StandardCharsets.UTF_8);\n-\n-  private final File file;\n+public final class BackupReplayFile extends BackupInputFile implements Closeable {\n   private final FileOutputStream writer;\n \n   public BackupReplayFile(final File file) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6dfc9893755b546b3553aa5f03c466117c3f367"}, "originalPosition": 33}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6dfc9893755b546b3553aa5f03c466117c3f367", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/a6dfc9893755b546b3553aa5f03c466117c3f367", "committedDate": "2020-10-15T16:51:03Z", "message": "fix: use transactions to restore the commands"}, "afterCommit": {"oid": "e7cb9ef4b880410f019242e7615e69228081555d", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/e7cb9ef4b880410f019242e7615e69228081555d", "committedDate": "2020-10-19T23:31:09Z", "message": "test: add integration test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97f89595851d10fc7b6b053557e17ead03428dfa", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/97f89595851d10fc7b6b053557e17ead03428dfa", "committedDate": "2020-10-20T01:40:51Z", "message": "refactor: revert BackupInputFile split"}, "afterCommit": {"oid": "d443f436e7f32eece93a17f5ff43b516c3bbef54", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/d443f436e7f32eece93a17f5ff43b516c3bbef54", "committedDate": "2020-10-20T13:12:34Z", "message": "refactor: revert BackupInputFile split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d443f436e7f32eece93a17f5ff43b516c3bbef54", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/d443f436e7f32eece93a17f5ff43b516c3bbef54", "committedDate": "2020-10-20T13:12:34Z", "message": "refactor: revert BackupInputFile split"}, "afterCommit": {"oid": "33d6831b852c755599e81837fdda66c6b0f48322", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/33d6831b852c755599e81837fdda66c6b0f48322", "committedDate": "2020-10-20T14:41:42Z", "message": "refactor: revert BackupInputFile split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33d6831b852c755599e81837fdda66c6b0f48322", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/33d6831b852c755599e81837fdda66c6b0f48322", "committedDate": "2020-10-20T14:41:42Z", "message": "refactor: revert BackupInputFile split"}, "afterCommit": {"oid": "75cc9913207f545f8875a847ba303e53dfcd9b80", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/75cc9913207f545f8875a847ba303e53dfcd9b80", "committedDate": "2020-10-20T19:01:27Z", "message": "refactor: revert BackupInputFile split"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "586fc817eafaa76368f40161fcb781c519eeefca", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/586fc817eafaa76368f40161fcb781c519eeefca", "committedDate": "2020-10-20T21:09:15Z", "message": "feat: new ksql-restore-command-topic to restore backups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a61d963f1f25e1e4ec8ada845a9709394d3702b", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/4a61d963f1f25e1e4ec8ada845a9709394d3702b", "committedDate": "2020-10-20T21:09:15Z", "message": "fix: use transactions to restore the commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a3c664e8423ee62c37f92fecf0c6c6dd8aa1212", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/1a3c664e8423ee62c37f92fecf0c6c6dd8aa1212", "committedDate": "2020-10-20T21:09:15Z", "message": "fix: address feedback\n\n- use inOrder on unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ca99e5c210349eba5a8a3281b7840e739a1650f", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/8ca99e5c210349eba5a8a3281b7840e739a1650f", "committedDate": "2020-10-20T21:09:16Z", "message": "test: add integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db06da3cc5d2a1e38ec949430655b10dd09f289", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/4db06da3cc5d2a1e38ec949430655b10dd09f289", "committedDate": "2020-10-20T21:09:16Z", "message": "refactor: revert BackupInputFile split"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75cc9913207f545f8875a847ba303e53dfcd9b80", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/75cc9913207f545f8875a847ba303e53dfcd9b80", "committedDate": "2020-10-20T19:01:27Z", "message": "refactor: revert BackupInputFile split"}, "afterCommit": {"oid": "4db06da3cc5d2a1e38ec949430655b10dd09f289", "author": {"user": {"login": "spena", "name": "Sergio Pe\u00f1a"}}, "url": "https://github.com/confluentinc/ksql/commit/4db06da3cc5d2a1e38ec949430655b10dd09f289", "committedDate": "2020-10-20T21:09:16Z", "message": "refactor: revert BackupInputFile split"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4620, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}