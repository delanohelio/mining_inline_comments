{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTI2MDY0", "number": 4809, "title": "fix: Removes unnecessary error logging for heartbeat since this is ex\u2026", "bodyText": "\u2026pected\nDescription\nDisables error logging for heartbeat requests since these happen quite often and deliberately are done with nodes that might be down.  During startup especially (and possibly other situations as well) this leads to tons of log spam.  Since we have other mechanisms like the hearbeatAgent which log periodically when hosts are considered down, this isn't necessary.\nFixes #4807\nTesting done\nRan tests.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-03-17T23:15:33Z", "url": "https://github.com/confluentinc/ksql/pull/4809", "merged": true, "mergeCommit": {"oid": "fa845763d8c52c54a65a7618a044300e8f0043f6"}, "closed": true, "closedAt": "2020-03-19T17:48:13Z", "author": {"login": "AlanConfluent"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOrAWFgH2gAyMzkwMTI2MDY0OjQ5OTI3NTA2NjUyMDc3MGM5OGUyNTU1MWVkZmMwMzMyMjdkMmNhZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO-NQegFqTM3NzI0OTA0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "499275066520770c98e25551edfc033227d2caed", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/499275066520770c98e25551edfc033227d2caed", "committedDate": "2020-03-17T23:07:19Z", "message": "fix: Removes unnecessary error logging for heartbeat since this is expected"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDcxMjc4", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-376471278", "createdAt": "2020-03-17T23:25:27Z", "commit": {"oid": "499275066520770c98e25551edfc033227d2caed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzoyNToyN1rOF3xgSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzoyNToyN1rOF3xgSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyNzA4Mg==", "bodyText": "This precedes even this change, but I feel we should throw an exception instead of returning null? and let the caller decide whether to log or not.. I am wondering if we should pass a flag down into a common class like KsqlTarget", "url": "https://github.com/confluentinc/ksql/pull/4809#discussion_r394027082", "createdAt": "2020-03-17T23:25:27Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-client/src/main/java/io/confluent/ksql/rest/client/KsqlTarget.java", "diffHunk": "@@ -195,11 +199,16 @@ private KsqlRequest createKsqlRequest(\n \n   private void executeRequestAsync(\n       final String path,\n-      final Object jsonEntity\n+      final Object jsonEntity,\n+      final boolean expectFailures\n   ) {\n     execute(HttpMethod.POST, path, jsonEntity, (resp, vcf) -> {\n     }).exceptionally(t -> {\n-      log.error(\"Unexpected exception in async request\", t);\n+      if (expectFailures) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "499275066520770c98e25551edfc033227d2caed"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDcxNzQz", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-376471743", "createdAt": "2020-03-17T23:26:47Z", "commit": {"oid": "499275066520770c98e25551edfc033227d2caed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzoyNjo0N1rOF3xhwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMzoyNjo0N1rOF3xhwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAyNzQ1Ng==", "bodyText": "We can rely on the IDE to annotate the argument instead of comment? :)", "url": "https://github.com/confluentinc/ksql/pull/4809#discussion_r394027456", "createdAt": "2020-03-17T23:26:47Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-client/src/main/java/io/confluent/ksql/rest/client/KsqlTarget.java", "diffHunk": "@@ -118,7 +121,8 @@ public void postAsyncLagReportingRequest(\n   ) {\n     executeRequestAsync(\n         LAG_REPORT_PATH,\n-        lagReportingMessage\n+        lagReportingMessage,\n+        false /* expectFailures */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "499275066520770c98e25551edfc033227d2caed"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/ef6fd65934a3559e71dfed35955f11a2dc97a403", "committedDate": "2020-03-18T19:16:50Z", "message": "Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTg3MjQz", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-377187243", "createdAt": "2020-03-18T19:52:18Z", "commit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo1MjoxOFrOF4UjmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo1MjoxOFrOF4UjmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMTM2OA==", "bodyText": "Is thenApply asynchronous? We don't want to block for the response. In fact, HeartbeatAgent doesn't even care about the response.", "url": "https://github.com/confluentinc/ksql/pull/4809#discussion_r394601368", "createdAt": "2020-03-18T19:52:18Z", "author": {"login": "vpapavas"}, "path": "ksqldb-rest-client/src/main/java/io/confluent/ksql/rest/client/KsqlTarget.java", "diffHunk": "@@ -255,6 +261,18 @@ private void executeRequestAsync(\n     return KsqlClientUtil.toRestResponse(response, path, mapper);\n   }\n \n+  private <T> CompletableFuture<RestResponse<T>> executeAsync(\n+      final HttpMethod httpMethod,\n+      final String path,\n+      final Object requestBody,\n+      final Function<ResponseWithBody, T> mapper,\n+      final BiConsumer<HttpClientResponse, CompletableFuture<ResponseWithBody>> responseHandler\n+  ) {\n+    final CompletableFuture<ResponseWithBody> vcf =\n+        execute(httpMethod, path, requestBody, responseHandler);\n+    return vcf.thenApply(response -> KsqlClientUtil.toRestResponse(response, path, mapper));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTkwMDg3", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-377190087", "createdAt": "2020-03-18T19:56:32Z", "commit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo1NjozMlrOF4UsEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTo1NjozMlrOF4UsEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYwMzUzNw==", "bodyText": "nit: async heartbeat request?", "url": "https://github.com/confluentinc/ksql/pull/4809#discussion_r394603537", "createdAt": "2020-03-18T19:56:32Z", "author": {"login": "vinothchandar"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/services/DefaultKsqlClient.java", "diffHunk": "@@ -103,7 +107,13 @@ public void makeAsyncHeartbeatRequest(\n         .target(serverEndPoint);\n \n     getTarget(target, authHeader)\n-        .postAsyncHeartbeatRequest(new KsqlHostInfoEntity(host.host(), host.port()), timestamp);\n+        .postAsyncHeartbeatRequest(new KsqlHostInfoEntity(host.host(), host.port()), timestamp)\n+        .exceptionally(t -> {\n+          // We send heartbeat requests quite frequently and to nodes that might be down.  We don't\n+          // want to fill the logs with spam, so we debug log exceptions.\n+          LOG.debug(\"Exception in async request\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjAyNjU3", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-377202657", "createdAt": "2020-03-18T20:16:04Z", "commit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNjowNFrOF4VStA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxNjowNFrOF4VStA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxMzQyOA==", "bodyText": "Don't we want to debug log this as well?", "url": "https://github.com/confluentinc/ksql/pull/4809#discussion_r394613428", "createdAt": "2020-03-18T20:16:04Z", "author": {"login": "vpapavas"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/rest/server/services/DefaultKsqlClient.java", "diffHunk": "@@ -122,7 +132,11 @@ public void makeAsyncLagReportRequest(\n     final KsqlTarget target = sharedClient\n         .target(serverEndPoint);\n \n-    getTarget(target, authHeader).postAsyncLagReportingRequest(lagReportingMessage);\n+    getTarget(target, authHeader).postAsyncLagReportingRequest(lagReportingMessage)\n+        .exceptionally(t -> {\n+          LOG.error(\"Unexpected exception in async request\", t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef6fd65934a3559e71dfed35955f11a2dc97a403"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60271594ec0876a46dbc972e7fa49e080471fb1e", "author": {"user": {"login": "AlanConfluent", "name": "Alan Sheinberg"}}, "url": "https://github.com/confluentinc/ksql/commit/60271594ec0876a46dbc972e7fa49e080471fb1e", "committedDate": "2020-03-18T20:43:55Z", "message": "More Feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MjQ5MDQ0", "url": "https://github.com/confluentinc/ksql/pull/4809#pullrequestreview-377249044", "createdAt": "2020-03-18T21:29:37Z", "commit": {"oid": "60271594ec0876a46dbc972e7fa49e080471fb1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 26, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}