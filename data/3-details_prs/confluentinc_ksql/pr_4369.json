{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY1Nzg5", "number": 4369, "title": "chore: get push queries working with windowed primitive keys", "bodyText": "Description\nFixes: #4095\nThe main issue here was that things like DataSourceNode and StepSchemaResolver were incorrectly copying ROWKEY into the value schema as-is for windowed keys. This was out of line with what the transformer for windowed keys was doing in SourceBuilder. The transformer was converting the windowed key into a STRING in the form: <key> : Window:{start=<start>, end=<end>}. Hence the SqlType of the ROWKEY in the value schema should be STRING for windowed sources.\nNOTE: this means that the type of ROWKEY can not be different in the key and value schema, e.g. a windowed source with a BIGINT key will have ROWKEY BIGINT KEY as the key schema, but the copy of ROWKEY added to the source schema as it passes through the Streams topology will be ROWKEY STRING to reflect that fact its stored as a STRING, e.g. \"11 :  Window:{start=149532753000, end=-}\".\nThis disconnect between the Sql types of ROWKEY in the key and value schema should be temporary. Once we support truly structured keys this will go.\nThis commit makes this change.\n\nLogicalSchema.withMetaAndKeyColsInValue now takes a boolean to indicate if the source is windowed or not.\nAs the type of ROWKEY can not be different in the key and value schem ExpressionTypeManager needs to get the type from the value schema for push queries (or actually anything not a pull query).\n\nTesting done\nSuitable QTT test cases and unit tests added.\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-01-23T16:57:18Z", "url": "https://github.com/confluentinc/ksql/pull/4369", "merged": true, "mergeCommit": {"oid": "f13cff1a8b8bf27576d4482a1a695daff066f98e"}, "closed": true, "closedAt": "2020-01-27T13:12:03Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9NUUSAH2gAyMzY2NDY1Nzg5OjJhYzgxZjQ5NTBiNTg1MmFkYmVmMzUxNzcwZmM0ZWJjOTIxNmVkOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-chErAH2gAyMzY2NDY1Nzg5OjY0NWNhNTAyOTI3YzFmMjNlYTRkZTYzNzk1NjgxYzM2MGU5MGNkZjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2ac81f4950b5852adbef351770fc4ebc9216ed9f", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/2ac81f4950b5852adbef351770fc4ebc9216ed9f", "committedDate": "2020-01-23T16:55:16Z", "message": "chore: get push queries working with windowed primitive keys\n\nThe main issue here was that things like `DataSourceNode` and `StepSchemaResolver` were incorrectly copying `ROWKEY` into the value schema as-is for windowed keys. This was out of line with what the transformer for windowed keys was doing in `SourceBuilder`. The transformer was converting the windowed key into a `STRING` in the form: `<key> : Window:{start=<start>, end=<end>}`. Hence the SqlType of the `ROWKEY` in the value schema should be `STRING` for windowed sources.\n\nNOTE: this means that the type of `ROWKEY` can not be different in the key and value schema, e.g. a windowed source with a `BIGINT` key will have `ROWKEY BIGINT KEY` as the key schema, but the copy of `ROWKEY` added to the source schema as it passes through the Streams topology will be `ROWKEY STRING` to reflect that fact its stored as a STRING, e.g. `\"11 :  Window:{start=149532753000, end=-}\"`.\n\nThis disconnect between the Sql types of `ROWKEY` in the key and value schema should be temporary. Once we support truly structured keys this will go.\n\nThis commit makes this change.\n\n* `LogicalSchema.withMetaAndKeyColsInValue` now takes a `boolean` to indicate if the source is windowed or not.\n* As the type of `ROWKEY` can not be different in the key and value schem `ExpressionTypeManager` needs to get the type from the value schema for push queries (or actually anything not a pull query)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzUwODE1", "url": "https://github.com/confluentinc/ksql/pull/4369#pullrequestreview-347750815", "createdAt": "2020-01-24T04:55:20Z", "commit": {"oid": "2ac81f4950b5852adbef351770fc4ebc9216ed9f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzUxMDY3", "url": "https://github.com/confluentinc/ksql/pull/4369#pullrequestreview-347751067", "createdAt": "2020-01-24T04:57:00Z", "commit": {"oid": "2ac81f4950b5852adbef351770fc4ebc9216ed9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1NzowMFrOFhT7oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1NzowMFrOFhT7oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3Mzg4OQ==", "bodyText": "this is not a windowed stream right?", "url": "https://github.com/confluentinc/ksql/pull/4369#discussion_r370473889", "createdAt": "2020-01-24T04:57:00Z", "author": {"login": "rodesai"}, "path": "ksql-functional-tests/src/test/resources/query-validation-tests/key-schemas.json", "diffHunk": "@@ -350,6 +350,89 @@\n       \"outputs\": [\n         {\"topic\": \"OUTPUT\", \"key\": \"1\", \"value\": {\"ID\": 1, \"KEY\": \"a\"}}\n       ]\n+    },\n+    {\n+      \"name\": \"windowed table explicit non-STRING ROWKEY\",\n+      \"statements\": [\n+        \"CREATE STREAM INPUT (ROWKEY BIGINT KEY, VALUE BIGINT) WITH (kafka_topic='input', value_format='JSON');\",\n+        \"CREATE TABLE OUTPUT as SELECT ROWKEY AS ID, max(value) AS MAX FROM INPUT WINDOW TUMBLING (SIZE 30 SECONDS) group by ROWKEY;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"input\", \"key\": 10, \"value\": {\"value\": 1}},\n+        {\"topic\": \"input\", \"key\": 10, \"value\": {\"value\": 2}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"key\": 10, \"value\": {\"ID\": 10, \"MAX\": 1}, \"window\": {\"start\": 0, \"end\": 30000, \"type\": \"time\"}},\n+        {\"topic\": \"OUTPUT\", \"key\": 10, \"value\": {\"ID\": 10, \"MAX\": 2}, \"window\": {\"start\": 0, \"end\": 30000, \"type\": \"time\"}}\n+      ],\n+      \"post\": {\n+        \"sources\": [\n+          {\n+            \"name\": \"OUTPUT\",\n+            \"type\": \"table\",\n+            \"keyFormat\": {\"format\": \"KAFKA\", \"windowType\": \"TUMBLING\", \"windowSize\": 30000},\n+            \"keyField\": null,\n+            \"schema\": \"`ROWKEY` BIGINT KEY, `ID` BIGINT, `MAX` BIGINT\"\n+          }\n+        ]\n+      }\n+    },\n+    {\n+      \"name\": \"windowed stream explicit non-STRING ROWKEY udf\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ac81f4950b5852adbef351770fc4ebc9216ed9f"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "077172f4d79e7bb0524ee8926066a3ba1567beb4", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/077172f4d79e7bb0524ee8926066a3ba1567beb4", "committedDate": "2020-01-27T11:29:56Z", "message": "Merge branch 'master' into windowed_prim_key_tests\n\n# Conflicts:\n#\tksql-common/src/main/java/io/confluent/ksql/schema/ksql/LogicalSchema.java\n#\tksql-common/src/test/java/io/confluent/ksql/schema/ksql/LogicalSchemaTest.java\n#\tksql-engine/src/main/java/io/confluent/ksql/planner/LogicalPlanner.java\n#\tksql-engine/src/main/java/io/confluent/ksql/planner/plan/DataSourceNode.java\n#\tksql-engine/src/test/java/io/confluent/ksql/planner/plan/DataSourceNodeTest.java\n#\tksql-engine/src/test/java/io/confluent/ksql/planner/plan/JoinNodeTest.java\n#\tksql-execution/src/main/java/io/confluent/ksql/execution/codegen/CodeGenRunner.java\n#\tksql-execution/src/main/java/io/confluent/ksql/execution/util/ExpressionTypeManager.java\n#\tksql-execution/src/test/java/io/confluent/ksql/execution/transform/select/SelectionTest.java\n#\tksql-rest-app/src/main/java/io/confluent/ksql/rest/server/execution/PullQueryExecutor.java\n#\tksql-streams/src/main/java/io/confluent/ksql/execution/streams/SourceBuilder.java\n#\tksql-streams/src/main/java/io/confluent/ksql/execution/streams/StepSchemaResolver.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/JoinParamsFactoryTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/SourceBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StepSchemaResolverTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StreamGroupByBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StreamSelectBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StreamSelectKeyBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StreamStreamJoinBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/StreamTableJoinBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/TableGroupByBuilderTest.java\n#\tksql-streams/src/test/java/io/confluent/ksql/execution/streams/TableTableJoinBuilderTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "645ca502927c1f23ea4de63795681c360e90cdf3", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/645ca502927c1f23ea4de63795681c360e90cdf3", "committedDate": "2020-01-27T13:11:42Z", "message": "chore: rohan's requested changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 132, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}