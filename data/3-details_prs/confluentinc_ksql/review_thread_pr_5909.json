{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4ODA2NDAz", "number": 5909, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxOTo0NVrOETxdcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyMjo0M1rOETxh0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTY4NzU0OnYy", "diffSide": "LEFT", "path": "ksqldb-engine/src/main/java/io/confluent/ksql/util/ExecutorUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoxOTo0NVrOG5sixw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyNDoyM1rOG5stag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MTgxNQ==", "bodyText": "Was this log message deleted intentionally?", "url": "https://github.com/confluentinc/ksql/pull/5909#discussion_r463151815", "createdAt": "2020-07-30T17:19:45Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/util/ExecutorUtil.java", "diffHunk": "@@ -73,9 +91,7 @@ public static void executeWithRetries(\n         return executable.call();\n       } catch (final Exception e) {\n         final Throwable cause = e instanceof ExecutionException ? e.getCause() : e;\n-        if (cause instanceof RetriableException\n-            || (cause instanceof Exception && retryBehaviour == RetryBehaviour.ALWAYS)) {\n-          log.info(\"Retrying request. Retry no: \" + retries, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905dfff90980a7d8aa5c8277583ce9880527ad5d"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1NDUzOA==", "bodyText": "ah good catch!", "url": "https://github.com/confluentinc/ksql/pull/5909#discussion_r463154538", "createdAt": "2020-07-30T17:24:23Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/util/ExecutorUtil.java", "diffHunk": "@@ -73,9 +91,7 @@ public static void executeWithRetries(\n         return executable.call();\n       } catch (final Exception e) {\n         final Throwable cause = e instanceof ExecutionException ? e.getCause() : e;\n-        if (cause instanceof RetriableException\n-            || (cause instanceof Exception && retryBehaviour == RetryBehaviour.ALWAYS)) {\n-          log.info(\"Retrying request. Retry no: \" + retries, e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MTgxNQ=="}, "originalCommit": {"oid": "905dfff90980a7d8aa5c8277583ce9880527ad5d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTY5MjA5OnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/util/ExecutorUtilTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyMDo1MlrOG5slfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyMDo1MlrOG5slfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MjUwOQ==", "bodyText": "nit:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // Expect\n          \n          \n            \n                // Given", "url": "https://github.com/confluentinc/ksql/pull/5909#discussion_r463152509", "createdAt": "2020-07-30T17:20:52Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/test/java/io/confluent/ksql/util/ExecutorUtilTest.java", "diffHunk": "@@ -102,6 +103,30 @@ public void shouldNotRetryOnNonRetriableException() throws Exception {\n     assertThat(e.getMessage(), containsString(\"First non-retry exception\"));\n   }\n \n+  @Test\n+  public void shouldNotRetryOnCustomRetryableDenied() throws Exception {\n+    // Expect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905dfff90980a7d8aa5c8277583ce9880527ad5d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTY5ODczOnYy", "diffSide": "RIGHT", "path": "ksqldb-engine/src/test/java/io/confluent/ksql/util/ExecutorUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyMjo0M1rOG5spuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzoyMjo0M1rOG5spuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE1MzU5Mg==", "bodyText": "The expectation is that we get the UnknownTopicOrPartitionException rather than RuntimeException(\"Test should not retry\") right? Can we change this to UnknownTopicOrPartitionException.class to disambiguate?", "url": "https://github.com/confluentinc/ksql/pull/5909#discussion_r463153592", "createdAt": "2020-07-30T17:22:43Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-engine/src/test/java/io/confluent/ksql/util/ExecutorUtilTest.java", "diffHunk": "@@ -102,6 +103,30 @@ public void shouldNotRetryOnNonRetriableException() throws Exception {\n     assertThat(e.getMessage(), containsString(\"First non-retry exception\"));\n   }\n \n+  @Test\n+  public void shouldNotRetryOnCustomRetryableDenied() throws Exception {\n+    // Expect\n+    final AtomicBoolean firstCall = new AtomicBoolean(true);\n+    final Callable<Object> throwsException = () -> {\n+      if (firstCall.get()) {\n+        firstCall.set(false);\n+        // this is a retryable exception usually\n+        throw new UnknownTopicOrPartitionException(\"First non-retry exception\");\n+      } else {\n+        throw new RuntimeException(\"Test should not retry\");\n+      }\n+    };\n+\n+    // When:\n+    final RuntimeException e = assertThrows(\n+        RuntimeException.class,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905dfff90980a7d8aa5c8277583ce9880527ad5d"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3008, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}