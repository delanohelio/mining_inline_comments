{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MjEwMDMx", "number": 4777, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNTo1NjowN1rODoMfiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNTo1NjowN1rODoMfiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNDc0MzEyOnYy", "diffSide": "RIGHT", "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ProxyHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNTo1NjowN1rOF2mS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwODowMjowNlrOF2pC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc5NDg1MQ==", "bodyText": "Is the response actually formatted as if it were a chunked response (length of current chunk followed by carriage return, newline, content, etc.)? It's not, right? Then how come this workaround doesn't result in issues decoding the server response from the client that made the request?", "url": "https://github.com/confluentinc/ksql/pull/4777#discussion_r392794851", "createdAt": "2020-03-16T05:56:07Z", "author": {"login": "vcrfxia"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ProxyHandler.java", "diffHunk": "@@ -134,7 +134,18 @@ private static void responseHandler(final HttpClientResponse clientResponse,\n     Pipe.pipe(clientResponse, serverResponse, () -> {\n       final MultiMap trailers = clientResponse.trailers();\n       serverResponse.trailers().setAll(trailers);\n-    });\n+    }, () -> checkFirstWrite(clientResponse, serverResponse));\n+  }\n+\n+  // Vert.x requires that content-length is set if not chunked but Jetty sometimes sends\n+  // response with no content-length and not chunked, so we workaround this by adding a\n+  // tranfer encoding response header with chunked in this case\n+  private static void checkFirstWrite(final HttpClientResponse clientResponse,\n+      final HttpServerResponse serverResponse) {\n+    if (clientResponse.getHeader(\"content-length\") == null\n+        && clientResponse.getHeader(\"transfer-encoding\") == null) {\n+      serverResponse.putHeader(\"transfer-encoding\", \"chunked\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e32d3b4b320b227966a957be334a31256cb0e176"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjgzOTkyMA==", "bodyText": "Chunked transfer encoding must always be acceptable on a client as per spec: (see 14.3.9): https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html", "url": "https://github.com/confluentinc/ksql/pull/4777#discussion_r392839920", "createdAt": "2020-03-16T08:02:06Z", "author": {"login": "purplefox"}, "path": "ksqldb-rest-app/src/main/java/io/confluent/ksql/api/server/ProxyHandler.java", "diffHunk": "@@ -134,7 +134,18 @@ private static void responseHandler(final HttpClientResponse clientResponse,\n     Pipe.pipe(clientResponse, serverResponse, () -> {\n       final MultiMap trailers = clientResponse.trailers();\n       serverResponse.trailers().setAll(trailers);\n-    });\n+    }, () -> checkFirstWrite(clientResponse, serverResponse));\n+  }\n+\n+  // Vert.x requires that content-length is set if not chunked but Jetty sometimes sends\n+  // response with no content-length and not chunked, so we workaround this by adding a\n+  // tranfer encoding response header with chunked in this case\n+  private static void checkFirstWrite(final HttpClientResponse clientResponse,\n+      final HttpServerResponse serverResponse) {\n+    if (clientResponse.getHeader(\"content-length\") == null\n+        && clientResponse.getHeader(\"transfer-encoding\") == null) {\n+      serverResponse.putHeader(\"transfer-encoding\", \"chunked\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc5NDg1MQ=="}, "originalCommit": {"oid": "e32d3b4b320b227966a957be334a31256cb0e176"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3764, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}