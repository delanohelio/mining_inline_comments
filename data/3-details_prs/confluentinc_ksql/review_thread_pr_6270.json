{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMDM2MTQ5", "number": 6270, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowMzo0N1rOEo0Wpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDoxMjoxMlrOEo0kIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMjM2MjYzOnYy", "diffSide": "RIGHT", "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeature.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowMzo0N1rOHaIYQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNToxNDowM1rOHailIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjMwNA==", "bodyText": "\ud83d\udcaf", "url": "https://github.com/confluentinc/ksql/pull/6270#discussion_r497162304", "createdAt": "2020-09-30T00:03:47Z", "author": {"login": "agavra"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeature.java", "diffHunk": "@@ -24,6 +24,15 @@\n  */\n public enum SerdeFeature {\n \n+  /**\n+   * The format supports interaction with the Confluent Schema Registry.\n+   *\n+   * <p>Indicates whether or not a format can support CREATE statements that\n+   * omit the table elements and instead determine the schema from a Confluent Schema Registry\n+   * query.\n+   */\n+  SCHEMA_INFERENCE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7347c0066a4e4ac7c84f58bb8889eddf0331f60f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0Mjg2MA==", "bodyText": "We could even use this to get rid of JSON_SR, or the very least the JsonSchemaFormat class.\nWe could choose to get rid of JSON_SR by adding a WITH property that can be used with the JSON format that indicates it should use the SR, e.g.\nCREATE STREAM FOO WITH (format='json', use_schema_registry=true);\nEven if we don't do that, we can internally translate any use of JSON_SR through to using the JsonFormat class with the SCHEMA_INFERENCE feature set.\nThoughts?", "url": "https://github.com/confluentinc/ksql/pull/6270#discussion_r497342860", "createdAt": "2020-09-30T08:44:08Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeature.java", "diffHunk": "@@ -24,6 +24,15 @@\n  */\n public enum SerdeFeature {\n \n+  /**\n+   * The format supports interaction with the Confluent Schema Registry.\n+   *\n+   * <p>Indicates whether or not a format can support CREATE statements that\n+   * omit the table elements and instead determine the schema from a Confluent Schema Registry\n+   * query.\n+   */\n+  SCHEMA_INFERENCE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjMwNA=="}, "originalCommit": {"oid": "7347c0066a4e4ac7c84f58bb8889eddf0331f60f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU5MTU4Ng==", "bodyText": "We had discussed something like that with @derekjn and @MichaelDrogalis and decided that it would be the lesser of two evils (w.r.t. user confusion) if we just kept them as two separate formats to make it extra \"clear\" what the difference is. I'm always happy reducing the code overhead though if we can use it to get rid of JsonSchemaFormat class", "url": "https://github.com/confluentinc/ksql/pull/6270#discussion_r497591586", "createdAt": "2020-09-30T15:14:03Z", "author": {"login": "agavra"}, "path": "ksqldb-common/src/main/java/io/confluent/ksql/serde/SerdeFeature.java", "diffHunk": "@@ -24,6 +24,15 @@\n  */\n public enum SerdeFeature {\n \n+  /**\n+   * The format supports interaction with the Confluent Schema Registry.\n+   *\n+   * <p>Indicates whether or not a format can support CREATE statements that\n+   * omit the table elements and instead determine the schema from a Confluent Schema Registry\n+   * query.\n+   */\n+  SCHEMA_INFERENCE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjMwNA=="}, "originalCommit": {"oid": "7347c0066a4e4ac7c84f58bb8889eddf0331f60f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMjM5NzE1OnYy", "diffSide": "RIGHT", "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/FormatProperties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDoxMjoxMlrOHaIuxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwODo0MToxNFrOHaTSqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2ODA2OA==", "bodyText": "nit: comment needs to be updated getSupportedProperties() is no longer a method call here", "url": "https://github.com/confluentinc/ksql/pull/6270#discussion_r497168068", "createdAt": "2020-09-30T00:12:12Z", "author": {"login": "agavra"}, "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/FormatProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.google.common.collect.Sets;\n+import com.google.common.collect.Sets.SetView;\n+import io.confluent.ksql.util.KsqlException;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Util class for handling format properties\n+ */\n+public final class FormatProperties {\n+\n+  private FormatProperties() {\n+  }\n+\n+  public static void validateProperties(\n+      final String formatName,\n+      final Map<String, String> properties,\n+      final Set<String> supportedProperties\n+  ) {\n+    // by default, this method ensures that there are no property names\n+    // (case-insensitive) that are not in the getSupportedProperties()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7347c0066a4e4ac7c84f58bb8889eddf0331f60f"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM0MTA5OQ==", "bodyText": "updated.", "url": "https://github.com/confluentinc/ksql/pull/6270#discussion_r497341099", "createdAt": "2020-09-30T08:41:14Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-serde/src/main/java/io/confluent/ksql/serde/FormatProperties.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2020 Confluent Inc.\n+ *\n+ * Licensed under the Confluent Community License (the \"License\"); you may not use\n+ * this file except in compliance with the License.  You may obtain a copy of the\n+ * License at\n+ *\n+ * http://www.confluent.io/confluent-community-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+ * WARRANTIES OF ANY KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations under the License.\n+ */\n+\n+package io.confluent.ksql.serde;\n+\n+import com.google.common.collect.Sets;\n+import com.google.common.collect.Sets.SetView;\n+import io.confluent.ksql.util.KsqlException;\n+import java.util.Map;\n+import java.util.Set;\n+\n+/**\n+ * Util class for handling format properties\n+ */\n+public final class FormatProperties {\n+\n+  private FormatProperties() {\n+  }\n+\n+  public static void validateProperties(\n+      final String formatName,\n+      final Map<String, String> properties,\n+      final Set<String> supportedProperties\n+  ) {\n+    // by default, this method ensures that there are no property names\n+    // (case-insensitive) that are not in the getSupportedProperties()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2ODA2OA=="}, "originalCommit": {"oid": "7347c0066a4e4ac7c84f58bb8889eddf0331f60f"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2819, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}