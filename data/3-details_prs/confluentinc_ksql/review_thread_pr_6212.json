{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3OTM5OTMw", "number": 6212, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyMDo0MVrOEkJtEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyMDo0MVrOEkJtEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzQzMTg2OnYy", "diffSide": "RIGHT", "path": "ksqldb-benchmark/src/main/java/io/confluent/ksql/benchmark/SerdeBenchmark.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzoyMDo0MVrOHS6x5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyOToxOVrOHTZkLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OTQ2Mg==", "bodyText": "The separator is / and you have |.  Also, shouldn't be <schema-name/<format-name> ?", "url": "https://github.com/confluentinc/ksql/pull/6212#discussion_r489599462", "createdAt": "2020-09-16T17:20:41Z", "author": {"login": "spena"}, "path": "ksqldb-benchmark/src/main/java/io/confluent/ksql/benchmark/SerdeBenchmark.java", "diffHunk": "@@ -79,100 +82,166 @@\n   private static final String SCHEMA_FILE_SUFFIX = \".avro\";\n   private static final String TOPIC_NAME = \"serde_benchmark\";\n \n-  @State(Scope.Thread)\n-  public static class SchemaAndGenericRowState {\n-    LogicalSchema schema;\n-    GenericRow row;\n+  private static final String IMPRESSIONS_SCHEMA = \"impressions\";\n+  private static final String METRICS_SCHEMA = \"metrics\";\n+  private static final String SINGLE_KEY_SCHEMA = \"single-key\";\n \n-    @Param({\"impressions\", \"metrics\"})\n-    public String schemaName;\n+  private static final String SEPARATOR = \"/\";\n \n-    @Setup(Level.Iteration)\n-    public void setUp() throws Exception {\n-      final Generator generator = new Generator(getSchemaStream(), new Random());\n+  private static final String JSON_FORMAT = \"JSON\";\n+  private static final String AVRO_FORMAT = \"Avro\";\n+  private static final String PROTOBUF_FORMAT = \"Protobuf\";\n+  private static final String DELIMITED_FORMAT = \"Delimited\";\n+  private static final String KAFKA_FORMAT = \"Kafka\";\n \n-      // choose arbitrary key\n-      final String key = generator.schema().getFields().get(0).name();\n+  private static final class Params {\n \n-      final RowGenerator rowGenerator = new RowGenerator(generator, key, Optional.empty());\n+    final String schemaName;\n+    final String formatName;\n+\n+    static Params parse(final String text) {\n+      final String[] parts = text.split(SEPARATOR);\n+      if (parts.length != 2) {\n+        throw new IllegalArgumentException(\"Param should be in form \"\n+            + \"'<format-name>|<schema-name>', got: \" + text);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df26f163996ff65780ecfdcbbf9841864d857a96"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzg1Mg==", "bodyText": "Good catch. Thanks!", "url": "https://github.com/confluentinc/ksql/pull/6212#discussion_r490103852", "createdAt": "2020-09-17T09:29:19Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-benchmark/src/main/java/io/confluent/ksql/benchmark/SerdeBenchmark.java", "diffHunk": "@@ -79,100 +82,166 @@\n   private static final String SCHEMA_FILE_SUFFIX = \".avro\";\n   private static final String TOPIC_NAME = \"serde_benchmark\";\n \n-  @State(Scope.Thread)\n-  public static class SchemaAndGenericRowState {\n-    LogicalSchema schema;\n-    GenericRow row;\n+  private static final String IMPRESSIONS_SCHEMA = \"impressions\";\n+  private static final String METRICS_SCHEMA = \"metrics\";\n+  private static final String SINGLE_KEY_SCHEMA = \"single-key\";\n \n-    @Param({\"impressions\", \"metrics\"})\n-    public String schemaName;\n+  private static final String SEPARATOR = \"/\";\n \n-    @Setup(Level.Iteration)\n-    public void setUp() throws Exception {\n-      final Generator generator = new Generator(getSchemaStream(), new Random());\n+  private static final String JSON_FORMAT = \"JSON\";\n+  private static final String AVRO_FORMAT = \"Avro\";\n+  private static final String PROTOBUF_FORMAT = \"Protobuf\";\n+  private static final String DELIMITED_FORMAT = \"Delimited\";\n+  private static final String KAFKA_FORMAT = \"Kafka\";\n \n-      // choose arbitrary key\n-      final String key = generator.schema().getFields().get(0).name();\n+  private static final class Params {\n \n-      final RowGenerator rowGenerator = new RowGenerator(generator, key, Optional.empty());\n+    final String schemaName;\n+    final String formatName;\n+\n+    static Params parse(final String text) {\n+      final String[] parts = text.split(SEPARATOR);\n+      if (parts.length != 2) {\n+        throw new IllegalArgumentException(\"Param should be in form \"\n+            + \"'<format-name>|<schema-name>', got: \" + text);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU5OTQ2Mg=="}, "originalCommit": {"oid": "df26f163996ff65780ecfdcbbf9841864d857a96"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2789, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}