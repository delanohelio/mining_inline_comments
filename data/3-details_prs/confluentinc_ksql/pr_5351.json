{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDgxNzk4", "number": 5351, "title": "refactor: unify TransientQuery metadata", "bodyText": "Description\nA change went in a while ago that created a transient query without creating TransientQueryMetadata. Instead is inline-subclassed the abstract QueryMetadata class, and replicated the logic for handling limits.\nThe direct subclassing of QueryMetadata is not ideal. All transient queries should be TransientQueryMetadata.\nThe replication of the limit handling logical is also not ideal.\nThis change fixes both of these issues.\nTesting done\nmvn verify\nReviewer checklist\n\n Ensure docs are updated if necessary. (eg. if a user visible feature is being added or changed).\n Ensure relevant issues are linked (description should include text like \"Fixes #\")", "createdAt": "2020-05-13T16:39:12Z", "url": "https://github.com/confluentinc/ksql/pull/5351", "merged": true, "mergeCommit": {"oid": "b174219811e20b28c58a410ca03dab500d67dfa0"}, "closed": true, "closedAt": "2020-05-13T19:27:24Z", "author": {"login": "big-andy-coates"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg7mrJAH2gAyNDE3NDgxNzk4OjFlZTJiMGEzMjQyMGY2YmQyZGRhNjgzYWQzZDg0ZTM3YzQ3ODg4ZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg8oTVgH2gAyNDE3NDgxNzk4OmQyOWIwYzk5YTFmYzhlYTFjZGRjMmM0NzdjNjRhNzBjYjQyYzc1MDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1ee2b0a32420f6bd2dda683ad3d84e37c47888e6", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/1ee2b0a32420f6bd2dda683ad3d84e37c47888e6", "committedDate": "2020-05-13T16:38:18Z", "message": "refactor: unify TransientQuery metadata\n\nA change went in a while ago that created a transient query without creating `TransientQueryMetadata`. Instead is inline-subclassed the abstract `QueryMetadata` class, and replicated the logic for handling limits.\n\nThe direct subclassing of `QueryMetadata` is not ideal. All transient queries should be `TransientQueryMetadata`.\n\nThe replication of the limit handling logical is also not ideal.\n\nThis change fixes both of these issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTA5Mjky", "url": "https://github.com/confluentinc/ksql/pull/5351#pullrequestreview-411109292", "createdAt": "2020-05-13T16:42:35Z", "commit": {"oid": "1ee2b0a32420f6bd2dda683ad3d84e37c47888e6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0MjozNVrOGU6YKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo0MzoxMVrOGU6ZlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MTE2Mw==", "bodyText": "did we intentionally change the condition to include elements == 0?", "url": "https://github.com/confluentinc/ksql/pull/5351#discussion_r424581163", "createdAt": "2020-05-13T16:42:35Z", "author": {"login": "agavra"}, "path": "ksqldb-api-reactive-streams-tck/src/test/java/io/confluent/ksql/api/tck/BlockingQueryPublisherVerificationTest.java", "diffHunk": "@@ -69,10 +72,14 @@ private GenericRow generateRow(long num) {\n \n   private static class TestQueryHandle implements PushQueryHandle {\n \n-    private final long elements;\n+    private final TransientQueryQueue queue;\n \n     public TestQueryHandle(final long elements) {\n-      this.elements = elements;\n+      final OptionalInt limit = elements == 0 || elements == Long.MAX_VALUE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee2b0a32420f6bd2dda683ad3d84e37c47888e6"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU4MTUyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * Sets the called back that will be called any time a new row is accepted into the queue.\n          \n          \n            \n               * Sets the callback that will be called any time a new row is accepted into the queue.", "url": "https://github.com/confluentinc/ksql/pull/5351#discussion_r424581525", "createdAt": "2020-05-13T16:43:11Z", "author": {"login": "agavra"}, "path": "ksqldb-engine/src/main/java/io/confluent/ksql/query/BlockingRowQueue.java", "diffHunk": "@@ -40,19 +39,36 @@\n   void setLimitHandler(LimitHandler limitHandler);\n \n   /**\n-   * Poll the queue for a single row\n+   * Sets the called back that will be called any time a new row is accepted into the queue.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee2b0a32420f6bd2dda683ad3d84e37c47888e6"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95e82a3577923c3217c4837ebca71ea84b075e3f", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/95e82a3577923c3217c4837ebca71ea84b075e3f", "committedDate": "2020-05-13T17:05:18Z", "message": "Update ksqldb-engine/src/main/java/io/confluent/ksql/query/BlockingRowQueue.java\n\nCo-authored-by: Almog Gavra <almog@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e02fce368d421475193f7f219409c69fa60ccc8", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/0e02fce368d421475193f7f219409c69fa60ccc8", "committedDate": "2020-05-13T17:49:28Z", "message": "test: added test case cover LIMIT 0\n\nThis uncovered a bug - if a user says `LIMIT 0` it throws an `IllegalArgumentException`... fixed!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d29b0c99a1fc8ea1cddc2c477c64a70cb42c7506", "author": {"user": {"login": "big-andy-coates", "name": "Andy Coates"}}, "url": "https://github.com/confluentinc/ksql/commit/d29b0c99a1fc8ea1cddc2c477c64a70cb42c7506", "committedDate": "2020-05-13T17:49:59Z", "message": "Merge branch 'unify_transient' of github.com:big-andy-coates/ksql into unify_transient"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4747, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}