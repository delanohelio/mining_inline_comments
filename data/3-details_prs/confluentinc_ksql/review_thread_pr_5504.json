{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzQ0NTE2", "number": 5504, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMTowNzoxMVrOEBU3pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMTowODowM1rOEBU4kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODI1OTU3OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMTowNzoxMVrOGdGy6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowMjoxNFrOGdbmpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3MzIyNA==", "bodyText": "Document null handling", "url": "https://github.com/confluentinc/ksql/pull/5504#discussion_r433173224", "createdAt": "2020-06-01T11:07:11Z", "author": {"login": "big-andy-coates"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -415,6 +415,14 @@ the entire substring is returned by default.\n For example, `REGEXP_EXTRACT(\"(.*) (.*)\", 'hello there', 2)`\n returns \"there\".\n \n+### `REGEXP_REPLACE`\n+\n+```sql\n+REGEXP_REPLACE(col1, 'a.b+', 'bar')\n+```\n+\n+Replace all matches of a regex in a string with a new string.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916a3e122f3442ce1e8ced50e09f51d3fe195804"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNDE0OA==", "bodyText": "Done", "url": "https://github.com/confluentinc/ksql/pull/5504#discussion_r433514148", "createdAt": "2020-06-01T22:02:14Z", "author": {"login": "AlanConfluent"}, "path": "docs/developer-guide/ksqldb-reference/scalar-functions.md", "diffHunk": "@@ -415,6 +415,14 @@ the entire substring is returned by default.\n For example, `REGEXP_EXTRACT(\"(.*) (.*)\", 'hello there', 2)`\n returns \"there\".\n \n+### `REGEXP_REPLACE`\n+\n+```sql\n+REGEXP_REPLACE(col1, 'a.b+', 'bar')\n+```\n+\n+Replace all matches of a regex in a string with a new string.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3MzIyNA=="}, "originalCommit": {"oid": "916a3e122f3442ce1e8ced50e09f51d3fe195804"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODI2MTkyOnYy", "diffSide": "RIGHT", "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/replace.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMTowODowM1rOGdG0VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMjowNToyOVrOGdbrNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3MzU4OA==", "bodyText": "Would be good if this test case covered nulls being passed to all params.", "url": "https://github.com/confluentinc/ksql/pull/5504#discussion_r433173588", "createdAt": "2020-06-01T11:08:03Z", "author": {"login": "big-andy-coates"}, "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/replace.json", "diffHunk": "@@ -23,6 +23,23 @@\n         {\"topic\": \"OUTPUT\", \"value\": {\"REPLACE\":null, \"REPLACE_NULL\":null, \"REPLACE_W_NULL\":null}},\n         {\"topic\": \"OUTPUT\", \"value\": {\"REPLACE\":\"popcorn\", \"REPLACE_NULL\":null, \"REPLACE_W_NULL\":null}}\n       ]\n+    },\n+    {\n+      \"name\": \"regexp_replace\",\n+      \"statements\": [\n+        \"CREATE STREAM TEST (K STRING KEY, input_string VARCHAR) WITH (kafka_topic='test_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT K, REGEXP_REPLACE(input_string, '(ab)+', 'cat') AS EXTRACTED FROM TEST;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": \"baababaa\"}},\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": \"baabbabaa\"}},\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": null}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": \"bacataa\"}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": \"bacatbcataa\"}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": null}}\n+      ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "916a3e122f3442ce1e8ced50e09f51d3fe195804"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUxNTMxOA==", "bodyText": "Done", "url": "https://github.com/confluentinc/ksql/pull/5504#discussion_r433515318", "createdAt": "2020-06-01T22:05:29Z", "author": {"login": "AlanConfluent"}, "path": "ksqldb-functional-tests/src/test/resources/query-validation-tests/replace.json", "diffHunk": "@@ -23,6 +23,23 @@\n         {\"topic\": \"OUTPUT\", \"value\": {\"REPLACE\":null, \"REPLACE_NULL\":null, \"REPLACE_W_NULL\":null}},\n         {\"topic\": \"OUTPUT\", \"value\": {\"REPLACE\":\"popcorn\", \"REPLACE_NULL\":null, \"REPLACE_W_NULL\":null}}\n       ]\n+    },\n+    {\n+      \"name\": \"regexp_replace\",\n+      \"statements\": [\n+        \"CREATE STREAM TEST (K STRING KEY, input_string VARCHAR) WITH (kafka_topic='test_topic', value_format='JSON');\",\n+        \"CREATE STREAM OUTPUT AS SELECT K, REGEXP_REPLACE(input_string, '(ab)+', 'cat') AS EXTRACTED FROM TEST;\"\n+      ],\n+      \"inputs\": [\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": \"baababaa\"}},\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": \"baabbabaa\"}},\n+        {\"topic\": \"test_topic\", \"value\": {\"input_string\": null}}\n+      ],\n+      \"outputs\": [\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": \"bacataa\"}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": \"bacatbcataa\"}},\n+        {\"topic\": \"OUTPUT\", \"value\": {\"EXTRACTED\": null}}\n+      ]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE3MzU4OA=="}, "originalCommit": {"oid": "916a3e122f3442ce1e8ced50e09f51d3fe195804"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3309, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}