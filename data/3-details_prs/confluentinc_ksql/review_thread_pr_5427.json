{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzI1Mjk2", "number": 5427, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0MzoyMVrOD-Mnqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMTo0NlrOD-RkOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQ1MDY2OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0MzoyMVrOGYJsBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0MzoyMVrOGYJsBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3NzczNA==", "bodyText": "I've changed this from:\n\nPush queries enable you to query a materialized view\n\nAs that would suggest you can only perform push queries on MVs.... which will suggest tables to most users, while ksqlDB supports push queries on streams too.", "url": "https://github.com/confluentinc/ksql/pull/5427#discussion_r427977734", "createdAt": "2020-05-20T12:43:21Z", "author": {"login": "big-andy-coates"}, "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -29,17 +29,23 @@ Description\n \r\n Push a continuous stream of updates to the ksqlDB stream or table. The result of\r\n this statement isn't persisted in a Kafka topic and is printed out only in\r\n-the console. To stop the continuous query in the CLI press Ctrl+C.\r\n-Note that the WINDOW clause can only be used if the `from_item` is a\r\n-stream.\r\n+the console, or returned to the client. To stop a push query started in the CLI press Ctrl+C.\r\n \r\n-Push queries enable you to query a materialized view with a subscription to\r\n-the results. Push queries emit refinements to materialized views, which enable\r\n+Execute a push query via the CLI or by sending an HTTP request to the ksqlDB REST API, and\r\n+the API sends back a chunked response of indefinite length.\r\n+\r\n+Push queries enable you to subscribe to changes, which enable\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9071e97a35e1385d709b914b7b2d2f58e21e18"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjI1NTYzOnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMDoyOVrOGYRi9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMDoyOVrOGYRi9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwNjQ4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            persistent query or when running ad-hoc queries from the CLI. However, unlike persistent queries,\n          \n          \n            \n            persistent query or when running ad-hoc queries from the CLI. But unlike persistent queries,", "url": "https://github.com/confluentinc/ksql/pull/5427#discussion_r428106485", "createdAt": "2020-05-20T15:30:29Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -29,17 +29,23 @@ Description\n \r\n Push a continuous stream of updates to the ksqlDB stream or table. The result of\r\n this statement isn't persisted in a Kafka topic and is printed out only in\r\n-the console. To stop the continuous query in the CLI press Ctrl+C.\r\n-Note that the WINDOW clause can only be used if the `from_item` is a\r\n-stream.\r\n+the console, or returned to the client. To stop a push query started in the CLI press Ctrl+C.\r\n \r\n-Push queries enable you to query a materialized view with a subscription to\r\n-the results. Push queries emit refinements to materialized views, which enable\r\n+Execute a push query via the CLI or by sending an HTTP request to the ksqlDB REST API, and\r\n+the API sends back a chunked response of indefinite length.\r\n+\r\n+Push queries enable you to subscribe to changes, which enable\r\n reacting to new information in real-time. They\u2019re a good fit for asynchronous\r\n application flows. For request/response flows, see [Pull Queries](select-pull-query.md).\r\n \r\n-Execute a push query by sending an HTTP request to the ksqlDB REST API, and\r\n-the API sends back a chunked response of indefinite length.\r\n+Push queries can use all available SQL features, which can be useful when prototyping a\r\n+persistent query or when running ad-hoc queries from the CLI. However, unlike persistent queries,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9071e97a35e1385d709b914b7b2d2f58e21e18"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjI1NjcyOnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMDo0NFrOGYRjtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMDo0NFrOGYRjtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwNjY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            push queries are not shared. If multiple clients submit the same push query ksqlDB will compute\n          \n          \n            \n            push queries are not shared. If multiple clients submit the same push query, ksqlDB computes", "url": "https://github.com/confluentinc/ksql/pull/5427#discussion_r428106678", "createdAt": "2020-05-20T15:30:44Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -29,17 +29,23 @@ Description\n \r\n Push a continuous stream of updates to the ksqlDB stream or table. The result of\r\n this statement isn't persisted in a Kafka topic and is printed out only in\r\n-the console. To stop the continuous query in the CLI press Ctrl+C.\r\n-Note that the WINDOW clause can only be used if the `from_item` is a\r\n-stream.\r\n+the console, or returned to the client. To stop a push query started in the CLI press Ctrl+C.\r\n \r\n-Push queries enable you to query a materialized view with a subscription to\r\n-the results. Push queries emit refinements to materialized views, which enable\r\n+Execute a push query via the CLI or by sending an HTTP request to the ksqlDB REST API, and\r\n+the API sends back a chunked response of indefinite length.\r\n+\r\n+Push queries enable you to subscribe to changes, which enable\r\n reacting to new information in real-time. They\u2019re a good fit for asynchronous\r\n application flows. For request/response flows, see [Pull Queries](select-pull-query.md).\r\n \r\n-Execute a push query by sending an HTTP request to the ksqlDB REST API, and\r\n-the API sends back a chunked response of indefinite length.\r\n+Push queries can use all available SQL features, which can be useful when prototyping a\r\n+persistent query or when running ad-hoc queries from the CLI. However, unlike persistent queries,\r\n+push queries are not shared. If multiple clients submit the same push query ksqlDB will compute\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9071e97a35e1385d709b914b7b2d2f58e21e18"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjI1OTA3OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMToxN1rOGYRlNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMToxN1rOGYRlNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwNzA2Mw==", "bodyText": "If you're using push queries from an application, move all the heavy lifting into a persistent query", "url": "https://github.com/confluentinc/ksql/pull/5427#discussion_r428107063", "createdAt": "2020-05-20T15:31:17Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -29,17 +29,23 @@ Description\n \r\n Push a continuous stream of updates to the ksqlDB stream or table. The result of\r\n this statement isn't persisted in a Kafka topic and is printed out only in\r\n-the console. To stop the continuous query in the CLI press Ctrl+C.\r\n-Note that the WINDOW clause can only be used if the `from_item` is a\r\n-stream.\r\n+the console, or returned to the client. To stop a push query started in the CLI press Ctrl+C.\r\n \r\n-Push queries enable you to query a materialized view with a subscription to\r\n-the results. Push queries emit refinements to materialized views, which enable\r\n+Execute a push query via the CLI or by sending an HTTP request to the ksqlDB REST API, and\r\n+the API sends back a chunked response of indefinite length.\r\n+\r\n+Push queries enable you to subscribe to changes, which enable\r\n reacting to new information in real-time. They\u2019re a good fit for asynchronous\r\n application flows. For request/response flows, see [Pull Queries](select-pull-query.md).\r\n \r\n-Execute a push query by sending an HTTP request to the ksqlDB REST API, and\r\n-the API sends back a chunked response of indefinite length.\r\n+Push queries can use all available SQL features, which can be useful when prototyping a\r\n+persistent query or when running ad-hoc queries from the CLI. However, unlike persistent queries,\r\n+push queries are not shared. If multiple clients submit the same push query ksqlDB will compute\r\n+independent results for each client.\r\n+\r\n+!!! tip\r\n+  If using push queries from an application, move all the heavy lifting into a persistent query\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9071e97a35e1385d709b914b7b2d2f58e21e18"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjI2MTA1OnYy", "diffSide": "RIGHT", "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMTo0NlrOGYRmoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMTo0NlrOGYRmoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwNzQyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              WINDOW clause can only be used if the `from_item` is a stream.\n          \n          \n            \n              You can use the WINDOW clause only if the `from_item` is a stream.", "url": "https://github.com/confluentinc/ksql/pull/5427#discussion_r428107425", "createdAt": "2020-05-20T15:31:46Z", "author": {"login": "JimGalasyn"}, "path": "docs/developer-guide/ksqldb-reference/select-push-query.md", "diffHunk": "@@ -107,6 +113,9 @@ SET 'auto.offset.reset' = 'earliest';\n \r\n #### WINDOW\r\n \r\n+!!! note\r\n+  WINDOW clause can only be used if the `from_item` is a stream.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9071e97a35e1385d709b914b7b2d2f58e21e18"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3472, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}