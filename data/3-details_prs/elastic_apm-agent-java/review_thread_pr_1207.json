{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzOTc0Mjc3", "number": 1207, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzowOFrOEAZuKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzowOFrOEAZuKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODU2ODczOnYy", "diffSide": "RIGHT", "path": "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzowOFrOGbqA2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwODowMzowOFrOGbqA2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTY1MzA4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    try(FileLock ignored = channel.lock()) {\n          \n          \n            \n                                    try (FileLock ignored = channel.lock()) {", "url": "https://github.com/elastic/apm-agent-java/pull/1207#discussion_r431653082", "createdAt": "2020-05-28T08:03:08Z", "author": {"login": "felixbarny"}, "path": "apm-agent-attach/src/main/java/co/elastic/apm/attach/ElasticApmAttacher.java", "diffHunk": "@@ -190,10 +192,17 @@ private static File getAgentJarFile() {\n                 String hash = md5Hash(ElasticApmAttacher.class.getResourceAsStream(\"/elastic-apm-agent.jar\"));\n                 File tempAgentJar = new File(System.getProperty(\"java.io.tmpdir\"), \"elastic-apm-agent-\" + hash + \".jar\");\n                 if (!tempAgentJar.exists()) {\n-                    try (OutputStream out = new FileOutputStream(tempAgentJar)) {\n-                        byte[] buffer = new byte[1024];\n-                        for (int length; (length = agentJar.read(buffer)) != -1;) {\n-                            out.write(buffer, 0, length);\n+                    try (FileOutputStream out = new FileOutputStream(tempAgentJar)) {\n+                        FileChannel channel = out.getChannel();\n+                        // If multiple JVM start on same compute, they can write in same file\n+                        // and this file will be corrupted.\n+                        try(FileLock ignored = channel.lock()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ceeba8a6394430912abaf6de54497d2580cc431c"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 345, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}