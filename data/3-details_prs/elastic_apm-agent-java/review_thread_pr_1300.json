{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NDk1NjIz", "number": 1300, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNToxNlrOEQnftQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNToxNlrOEQnftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODU5NzY1OnYy", "diffSide": "RIGHT", "path": ".ci/release/Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNToxNlrOG03Xmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMzoxNToxNlrOG03Xmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA4NjI5OA==", "bodyText": "NIT: include the version in the commit message?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                sh(script: \"git commit -a -m 'Version bump'\")\n          \n          \n            \n                                sh(script: \"git commit -a -m 'Version bump (${new_version})'\")", "url": "https://github.com/elastic/apm-agent-java/pull/1300#discussion_r458086298", "createdAt": "2020-07-21T13:15:16Z", "author": {"login": "v1v"}, "path": ".ci/release/Jenkinsfile", "diffHunk": "@@ -97,33 +97,35 @@ pipeline {\n         }\n         stage('Review project version') {\n           steps {\n-            script {\n-              def ver = mvnVersion(showQualifiers: true)\n-              def should_continue = input(message: \"Current version is ${ver}\", parameters: [\n-                [\n-                  $class: 'ChoiceParameterDefinition',\n-                  name: \"You are about to release version ${ver - '-SNAPSHOT'}. Do you wish to update the version?\",\n-                  \"choices\": [\"Yes\", \"No\"],\n-                  description: \"Selecting 'Yes' will allow you to select the new version in the next step.\"\n-                ]\n-              ])\n-              if (should_continue == 'Yes'){\n-                def new_version = input(message: \"Please enter version to change to:\", parameters:\n+            dir(\"${BASE_DIR}\"){\n+              script {\n+                def ver = mvnVersion(showQualifiers: true)\n+                def should_continue = input(message: \"Current version is ${ver}\", parameters: [\n                   [\n+                    $class: 'ChoiceParameterDefinition',\n+                    name: \"You are about to release version ${ver - '-SNAPSHOT'}. Do you wish to update the version?\",\n+                    \"choices\": [\"Yes\", \"No\"],\n+                    description: \"Selecting 'Yes' will allow you to select the new version in the next step.\"\n+                  ]\n+                ])\n+                if (should_continue == 'Yes'){\n+                  def new_version = input(message: \"Please enter version to change to:\", parameters:\n                     [\n-                      $class: 'StringParameterDefinition',\n-                      defaultValue: \"${ver}\",\n-                      description: 'We will update the project version in all pom.xml files. Set this to your desired <release-version>-SNAPSHOT (for example 1.2.3-SNAPSHOT if you want to release version 1.2.3).', name: 'New Version'\n+                      [\n+                        $class: 'StringParameterDefinition',\n+                        defaultValue: \"${ver}\",\n+                        description: 'We will update the project version in all pom.xml files. Set this to your desired <release-version>-SNAPSHOT (for example 1.2.3-SNAPSHOT if you want to release version 1.2.3).', name: 'New Version'\n+                      ]\n                     ]\n-                  ]\n-                )\n-                sh(name: \"mavenVersionUpdate\", script: \"mvn --batch-mode release:update-versions -DdevelopmentVersion=${new_version}\")\n-                withGitRelease() {\n-                  sh(script: \"git commit -a -m 'Version bump'\")\n-                  gitPush()\n+                  )\n+                  sh(name: \"mavenVersionUpdate\", script: \"./mvnw --batch-mode release:update-versions -DdevelopmentVersion=${new_version}\")\n+                  withGitRelease() {\n+                    sh(script: \"git commit -a -m 'Version bump'\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ce76903f67e7610ba1fdb9fe91bd279428af2e"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 163, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}