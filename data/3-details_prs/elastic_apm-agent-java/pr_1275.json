{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MDcyODU0", "number": 1275, "title": "Validate that tests don't leaks tracers, scopes and pooled objects", "bodyText": "What does this PR do?\nDepends on #1271\nWith #1270 we have a good foundation to make sure tracers don't leak to other tests classes. This makes GlobalTracer more restrictive so that a tracer can only be set via init that throws if the current tracer is not a noop.\nI have also added the recycling tests on the @AfterEach method of AbstractInstrumentationTest which required some adjustments to tests to make sure all transactions and spans are ended and thus recycled after being reported. It also checks the bookkeeper object pool to make sure all objects have returned. This also implicitly tests for scope leaks as those would prevent objects from being recycled.\nAs a bonus, I've found and fixed a scope leak in the currently unreleased instrumentation of Executor#executeAll.\nChecklist\n\n\n This is an enhancement of existing features, or a new feature in existing plugins\n\n I have updated CHANGELOG.asciidoc\n I have added tests that prove my fix is effective or that my feature works\n Added an API method or config option? Document in which version this will be introduced\n I have made corresponding changes to the documentation\n\n\n This is a bugfix\n\n I have updated CHANGELOG.asciidoc\n I have added tests that would fail without this fix\n\n\n This is a new plugin\n\n I have updated CHANGELOG.asciidoc\n My code follows the style guidelines of this project\n I have made corresponding changes to the documentation\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n I have updated CHANGELOG.asciidoc\n I have updated supported-technologies.asciidoc\n Added an API method or config option? Document in which version this will be introduced\n Added an instrumentation plugin? Describe how you made sure that old, non-supported versions are not instrumented by accident.\n\n\n This is something else: Test improvements\n\n I have updated CHANGELOG.asciidoc", "createdAt": "2020-07-08T08:12:46Z", "url": "https://github.com/elastic/apm-agent-java/pull/1275", "merged": true, "mergeCommit": {"oid": "827450d577ee41b43a6b426ed369e1fec9421f26"}, "closed": true, "closedAt": "2020-07-23T09:00:58Z", "author": {"login": "felixbarny"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy2jmLgBqjM1MjQxODAxNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3q9W-gBqjM1Nzg4ODg1MDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47639c377eba3674873005939085755c51a05dcf", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/47639c377eba3674873005939085755c51a05dcf", "committedDate": "2020-07-08T07:57:27Z", "message": "Make sure tracers don't leak tests\n\nValidate recycling and scope leaks after each test method\nFixes scope leak in Executor#submitAll instrumentation"}, "afterCommit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/881bb149b23c39e31c00b48ed60d6991a2cad441", "committedDate": "2020-07-08T08:55:37Z", "message": "Make sure tracers don't leak tests\n\nValidate recycling and scope leaks after each test method\nFixes scope leak in Executor#submitAll instrumentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NzcxNzE2", "url": "https://github.com/elastic/apm-agent-java/pull/1275#pullrequestreview-444771716", "createdAt": "2020-07-08T13:36:57Z", "commit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozNjo1N1rOGuoaWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxMzozNjo1N1rOGuoaWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU0OTc4Ng==", "bodyText": "why?", "url": "https://github.com/elastic/apm-agent-java/pull/1275#discussion_r451549786", "createdAt": "2020-07-08T13:36:57Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Destination.java", "diffHunk": "@@ -143,7 +143,7 @@ public boolean hasContent() {\n     @Override\n     public void resetState() {\n         address.setLength(0);\n-        port = -1;\n+        port = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Nzk4MjUy", "url": "https://github.com/elastic/apm-agent-java/pull/1275#pullrequestreview-444798252", "createdAt": "2020-07-08T14:03:39Z", "commit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDowMzozOVrOGuppDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDowMzozOVrOGuppDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU2OTkzNQ==", "bodyText": "Test is failing. Maybe revert to happen before the assertion and wait 20ms before asserting.", "url": "https://github.com/elastic/apm-agent-java/pull/1275#discussion_r451569935", "createdAt": "2020-07-08T14:03:39Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-scheduled-annotation-plugin/src/test/java/co/elastic/apm/agent/spring/scheduled/TimerTaskInstrumentationTest.java", "diffHunk": "@@ -56,14 +55,13 @@ void testTimerTask_scheduleWithFixedRate() throws InterruptedException {\n \n     @Test\n     void testTimerTask_scheduleWithFixedDelay() throws InterruptedException {\n-        reporter.reset();\n         TestTimerTask timerTask = new TestTimerTask();\n         Timer timer = new Timer(\"Timer\");\n         timer.schedule(timerTask, 1L, 10L);\n \n         reporter.awaitUntilAsserted(1000L, () -> {\n-            timer.cancel();\n             assertThat(reporter.getTransactions()).isNotEmpty();\n+            timer.cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "881bb149b23c39e31c00b48ed60d6991a2cad441", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/881bb149b23c39e31c00b48ed60d6991a2cad441", "committedDate": "2020-07-08T08:55:37Z", "message": "Make sure tracers don't leak tests\n\nValidate recycling and scope leaks after each test method\nFixes scope leak in Executor#submitAll instrumentation"}, "afterCommit": {"oid": "8968f9bf80425798b5cd32f2ca96669a874d9dfd", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/8968f9bf80425798b5cd32f2ca96669a874d9dfd", "committedDate": "2020-07-08T15:05:43Z", "message": "Make TimerTaskInstrumentationTest more resilient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2035ed75094e05851d957a8ee07a881ea104e618", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/2035ed75094e05851d957a8ee07a881ea104e618", "committedDate": "2020-07-23T08:04:28Z", "message": "Make sure tracers don't leak tests\n\nValidate recycling and scope leaks after each test method\nFixes scope leak in Executor#submitAll instrumentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5842ad6a3d1fcdbc30d53f9619c5cf377a4efeb0", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/5842ad6a3d1fcdbc30d53f9619c5cf377a4efeb0", "committedDate": "2020-07-23T08:13:10Z", "message": "Make TimerTaskInstrumentationTest more resilient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8968f9bf80425798b5cd32f2ca96669a874d9dfd", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/8968f9bf80425798b5cd32f2ca96669a874d9dfd", "committedDate": "2020-07-08T15:05:43Z", "message": "Make TimerTaskInstrumentationTest more resilient"}, "afterCommit": {"oid": "5842ad6a3d1fcdbc30d53f9619c5cf377a4efeb0", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/5842ad6a3d1fcdbc30d53f9619c5cf377a4efeb0", "committedDate": "2020-07-23T08:13:10Z", "message": "Make TimerTaskInstrumentationTest more resilient"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3793, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}