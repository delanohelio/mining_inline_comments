{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTA2MTky", "number": 1467, "title": "Agent load testing", "bodyText": "Summary\nThis adds support for load-testing the Java agent.\nDetails\nThis is a new pipeline which introduces the ability to provision any version of the Java agent, instrument a test application with it, and then apply load to that application in order to test the stability and performance characteristics of the instrumented application over time.\nWhen launching the pipeline, users are presented with the following:\n\nAs you can see, it allows the user to select the version of the agent to deploy, along with the JDK to use. You can also select the duration of the test. Load is generated via Locust and if you wish to specify particulars about how load generation should be conducted, you can do so.\nThe tests runs on bare-metal, with both load-generation and the test application residing on separate bare-metal machines.\n\nAt the conclusion of the test run, a file is produced which shows the performance of the test application as instrumented with JFR.\nIf you wish, you may also enable the metrics collection checkbox, which periodically collects system metrics directly from the operating system. (This is useful if you don't wish to rely on JFR or you simple want the perspective from the OS itself instead of from inside the Java process.)\nDeployment\nThis PR may be merged at any time, but it will not be ready for use until the Bandstand application is also deployed. (This is a separate application developed in conjunction with this one that eases the burden of orchestrating multiple bare-metal machines and handles service discovery, etc.) It is not being released as an OSS application and as such, is not linked from this PR.\nFuture enhancements and caveats\nPresently, this relies on a dedicated machine to receive requests from the agent. Nothing is done with this data, and we would like to find a way to run these tests without requiring a dedicated APM server or perhaps making a version of APM Server which does not require Elasticsearch to run. This is a topic for a follow-up discussion.\nAdditionally, we would like to make the orchestration application something fully managed in the lifetime of the pipeline instead of being a persistent service. This isn't urgent, however, and can be done later.\nFinally, we are interested in potentially gathering metrics from a few other sources which can be displayed with the Elastic Stack. Specifically, it would be nice to include an option to monitor the host with Metricbeat and it would also be nice to find a way to collect and display the load generation metrics. Presently, this requires just looking at the logs and can clearly be improved.", "createdAt": "2020-11-02T14:42:42Z", "url": "https://github.com/elastic/apm-agent-java/pull/1467", "merged": true, "mergeCommit": {"oid": "b0f38540f9644ad047982ce114517ba5d202e02e"}, "closed": true, "closedAt": "2020-11-05T18:53:14Z", "author": {"login": "cachedout"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUmxJuAH2gAyNTE0MTA2MTkyOmNkMWIyMGJmZWRhODJkM2Q3YjRkODg4ODFkMzZhNGUyMGY5YjQ0N2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZkWDqgH2gAyNTE0MTA2MTkyOjcxOWI1ODUxZDdlZDVmNTc1NjE4Y2IwMWFkMGUxNmMwOTc0ZDJiZjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cd1b20bfeda82d3d7b4d88881d36a4e20f9b447b", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/cd1b20bfeda82d3d7b4d88881d36a4e20f9b447b", "committedDate": "2020-10-21T05:45:48Z", "message": "Skeleton of perf Jenkinsfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3e93d2306f8bdbd1ebb17455eebbcd7542bd37e", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/d3e93d2306f8bdbd1ebb17455eebbcd7542bd37e", "committedDate": "2020-10-22T14:10:11Z", "message": "load generation wait script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0521d524ff15327ccc7707eb8f37b061dfa91400", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/0521d524ff15327ccc7707eb8f37b061dfa91400", "committedDate": "2020-10-26T15:50:01Z", "message": "More orch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c979b9a91270bb4cd119fe8c76e1b997898f942", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/6c979b9a91270bb4cd119fe8c76e1b997898f942", "committedDate": "2020-10-27T14:55:23Z", "message": "Working PoC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d725d33606c728279396b886a5ab252fc031d34", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/6d725d33606c728279396b886a5ab252fc031d34", "committedDate": "2020-10-28T12:11:11Z", "message": "Script to generate parameters for the load generation pipeline"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0d25740866a3f6cbaf619ec6c8cbd8af2ff7930", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/a0d25740866a3f6cbaf619ec6c8cbd8af2ff7930", "committedDate": "2020-10-28T14:34:30Z", "message": "Add provisioning for agent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68f3251b429c46e96749d81ad6fda55a05f9b7b4", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/68f3251b429c46e96749d81ad6fda55a05f9b7b4", "committedDate": "2020-10-28T14:36:40Z", "message": "Add licenses for load gen scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96f624ddc39f6dcf8277135b9542859d27fe2861", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/96f624ddc39f6dcf8277135b9542859d27fe2861", "committedDate": "2020-10-28T16:54:40Z", "message": "Dynamic Java provisioning for load testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ab260a0b19222de673ef6827d7f59be922edb0", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/51ab260a0b19222de673ef6827d7f59be922edb0", "committedDate": "2020-10-28T16:54:59Z", "message": "Script for dynamic Java provisioning for load testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c6f52f36c242b3fc29dab073c1fcbf9d10700d4", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/7c6f52f36c242b3fc29dab073c1fcbf9d10700d4", "committedDate": "2020-10-29T13:53:21Z", "message": "Fix terrible bug with JDK selection and add more JDKs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e7cf645fa2b7bee854abd0b73ac1d93ea6b93db", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/8e7cf645fa2b7bee854abd0b73ac1d93ea6b93db", "committedDate": "2020-10-29T13:54:20Z", "message": "Remove TODO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f4b66d28b010a4e11a4e3dc31d9a9c1e5efc1a0", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/7f4b66d28b010a4e11a4e3dc31d9a9c1e5efc1a0", "committedDate": "2020-10-29T15:25:51Z", "message": "Formatting and lint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "148cb63588b480a97c56cf8a4099c53a1d58ee03", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/148cb63588b480a97c56cf8a4099c53a1d58ee03", "committedDate": "2020-10-30T07:20:40Z", "message": "Add agent_config param"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90dd8f6203656ae3d93ce3600c94a5047b63de90", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/90dd8f6203656ae3d93ce3600c94a5047b63de90", "committedDate": "2020-10-30T08:49:33Z", "message": "Add min JDK version and custom config option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "288e566f850cb80a83c8895ab5c001221e4ff36c", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/288e566f850cb80a83c8895ab5c001221e4ff36c", "committedDate": "2020-10-30T08:54:02Z", "message": "Allow concurrent users setting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6898351e5951db441aa33ea1f263dc884e55ac42", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/6898351e5951db441aa33ea1f263dc884e55ac42", "committedDate": "2020-10-30T09:03:26Z", "message": "Disable num_of_runs in rev1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "049d33a2bc437f4791aaf93ada6b76e370b15cf0", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/049d33a2bc437f4791aaf93ada6b76e370b15cf0", "committedDate": "2020-10-30T09:04:58Z", "message": "Use production orchestrator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a80395175e74684ff9afc102a9ffa03a1d02ec", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/72a80395175e74684ff9afc102a9ffa03a1d02ec", "committedDate": "2020-10-30T10:55:49Z", "message": "More documentation and minor changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64643e6ad8d716ca9519e46df8c378c6cb4b7c91", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/64643e6ad8d716ca9519e46df8c378c6cb4b7c91", "committedDate": "2020-10-30T13:48:59Z", "message": "Add bare-metal settings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f080229fcad79d4efbfeb42663d4d8053d210e09", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/f080229fcad79d4efbfeb42663d4d8053d210e09", "committedDate": "2020-11-02T11:26:35Z", "message": "Prep for production"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed86f78167cdb5a2881dac76a882258a26ef4d9", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/eed86f78167cdb5a2881dac76a882258a26ef4d9", "committedDate": "2020-11-02T11:29:09Z", "message": "Add metal tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/7de00455e17722e56ae5b7bf3bde861fff7572c8", "committedDate": "2020-11-02T14:28:28Z", "message": "Add metrics collection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzIxMjQy", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-521721242", "createdAt": "2020-11-02T15:15:47Z", "commit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToxNTo0N1rOHsIsCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToxNzo1MVrOHsIxkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0MTczNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            While the orchestration layer is currently relatively lightweight and simple, it is built to be able to easily extended for more sophisticated needs, such as multiple test runs inside a single test exuection.\n          \n          \n            \n            While the orchestration layer is currently relatively lightweight and simple, it is built to be able to be easily extended for more sophisticated needs, such as multiple test runs inside a single test execution.", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516041736", "createdAt": "2020-11-02T15:15:47Z", "author": {"login": "mdelapenya"}, "path": ".ci/load/README.md", "diffHunk": "@@ -0,0 +1,61 @@\n+# APM Java Agent Load Geneator\n+\n+This directory contains configuration files for load-testing the APM Java Agent.\n+\n+## Load Tests\n+\n+Load tests are run using two bare-metal workers. One worker is dedicated to the role of load generation, which other worker is dedicated to the role of hosting the application under test, which is instrumented by the APM Java Agent.\n+\n+Load generation is performed using [Locust](https://locust.io/) and the application which is instrumented by the APM Java Agent and placed under load is [Spring Petclinic](https://projects.spring.io/spring-petclinic/).\n+\n+## Orchestration\n+\n+Because of the nature of these tests, they require the use of a dedicated orchestration layer. For this project, that orchestrator is called Bandstand. It is an internal project to Elastic.\n+\n+Bandstand performs two primary functions.\n+\n+1. *Service discovery* The pipeline utilizes a load-generation machine and an application server which run in parallel to each other. These machines need to know how to find each other and Bandstand gives them that information.\n+2. *Orchestration* We need to have a system which tells various services when to start an stop based on the state of other services. For example, we can't start load-generation until we are assured that the application is up and in a coherent state. By using an independent orchestrator, we can allow each service to report on its own state. This avoid a number of otherwise difficult-to-maintain dependencies between service state through the lifetime of the load generation.\n+\n+While the orchestration layer is currently relatively lightweight and simple, it is built to be able to easily extended for more sophisticated needs, such as multiple test runs inside a single test exuection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0MjYwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            *Caution*: The following requires access to libraries which are internal to Elastic. Do not attempt to follow these instructions of you are an open-source user\n          \n          \n            \n            *Caution*: The following requires access to libraries which are internal to Elastic. Do not attempt to follow these instructions if you are an open-source user", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516042603", "createdAt": "2020-11-02T15:17:00Z", "author": {"login": "mdelapenya"}, "path": ".ci/load/README.md", "diffHunk": "@@ -0,0 +1,61 @@\n+# APM Java Agent Load Geneator\n+\n+This directory contains configuration files for load-testing the APM Java Agent.\n+\n+## Load Tests\n+\n+Load tests are run using two bare-metal workers. One worker is dedicated to the role of load generation, which other worker is dedicated to the role of hosting the application under test, which is instrumented by the APM Java Agent.\n+\n+Load generation is performed using [Locust](https://locust.io/) and the application which is instrumented by the APM Java Agent and placed under load is [Spring Petclinic](https://projects.spring.io/spring-petclinic/).\n+\n+## Orchestration\n+\n+Because of the nature of these tests, they require the use of a dedicated orchestration layer. For this project, that orchestrator is called Bandstand. It is an internal project to Elastic.\n+\n+Bandstand performs two primary functions.\n+\n+1. *Service discovery* The pipeline utilizes a load-generation machine and an application server which run in parallel to each other. These machines need to know how to find each other and Bandstand gives them that information.\n+2. *Orchestration* We need to have a system which tells various services when to start an stop based on the state of other services. For example, we can't start load-generation until we are assured that the application is up and in a coherent state. By using an independent orchestrator, we can allow each service to report on its own state. This avoid a number of otherwise difficult-to-maintain dependencies between service state through the lifetime of the load generation.\n+\n+While the orchestration layer is currently relatively lightweight and simple, it is built to be able to easily extended for more sophisticated needs, such as multiple test runs inside a single test exuection.\n+\n+The current design uses a persistant orchestator. However, it is a future goal to have a dynamic orchestrator which is unique to each test execution and is spun up and torn down alongside the rest of the services.\n+\n+## Running Load Tests\n+\n+To run a load test, navigate to the [APM Java Agent CI](https://apm-ci.elastic.co/job/apm-agent-java/) and look for the `Load Test` pipeline. Tests can be executed with the following parameters:\n+\n+|Parameter|Description|\n+|:-------:|:---------|\n+|`apm_version`|The version of the APM Java Agent to use. After checking out the agent from source control, this is the git tag that will be used.|\n+|`jvm_version`|The version of the JVM which will be used. This will be used as the version of Java both when building the agent and when launching the application.|\n+|`concurrent_requests`|The number of concurrent, simulated users which will make requests against the test applicaiton.|\n+|`duration`|The duration for the load test. Specify this value using time units: (300s, 20m, 3h, 1h30m, etc.)|\n+|`agent_config`|To override the defaults of the APM Java Agent config, paste a configuration file.|\n+|`locustfile`|A Locust file controls the specifics of how load will be applied to the test application, such as which URLs are requested and at what rate. If this option is not specified, then `.ci/load/scripts/locustfile.py` will be used. For more information on writing a locustfile, [please see the documentation](https://docs.locust.io/en/stable/writing-a-locustfile.html).|\n+\n+\n+After specifying the options, a test run will begin. One can view the progress of the test run by following along in the Jenkins Blue Ocean interface for the given job after it is launched. Typically, it takes several minutes for the machines to be provisioned before tests can begin.\n+\n+## Viewing test results\n+\n+Because the [test application](https://projects.spring.io/spring-petclinic/) is instrumented with [JFR](https://docs.oracle.com/javacomponents/jmc-5-4/jfr-runtime-guide/about.htm#JFRUH170), it is necessary to have a copy of the [JDK Mission Control application](https://www.baeldung.com/java-flight-recorder-monitoring#3-visualize-data) which is distributed with the JDK.\n+\n+The results of the JFR instrumentation are available after a test run is complete by navigating to Jenkins and viewing the job results. A link to `Artifacts` will bring you to a page which shows the files generated by the test run. Download `src/spring-petclinic/flight.jfr` and then view its contents with JDK MIssion Control to examine the moment-by-moment profile of the application under test.\n+\n+To view the load generation output, see the console output in Jenkins for the `Load Generation` step.\n+\n+## Hacking\n+\n+*Caution*: The following requires access to libraries which are internal to Elastic. Do not attempt to follow these instructions of you are an open-source user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0MzE1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            3. In the `apm-pipeline-library` checkout from step 3, create a soft link from `local/jenkins_home` to the your checkout of the `apm-java-agent` codebase.\n          \n          \n            \n            3. In the `apm-pipeline-library` checkout from step 2, create a soft link from `local/jenkins_home` to the your checkout of the `apm-java-agent` codebase.", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516043152", "createdAt": "2020-11-02T15:17:51Z", "author": {"login": "mdelapenya"}, "path": ".ci/load/README.md", "diffHunk": "@@ -0,0 +1,61 @@\n+# APM Java Agent Load Geneator\n+\n+This directory contains configuration files for load-testing the APM Java Agent.\n+\n+## Load Tests\n+\n+Load tests are run using two bare-metal workers. One worker is dedicated to the role of load generation, which other worker is dedicated to the role of hosting the application under test, which is instrumented by the APM Java Agent.\n+\n+Load generation is performed using [Locust](https://locust.io/) and the application which is instrumented by the APM Java Agent and placed under load is [Spring Petclinic](https://projects.spring.io/spring-petclinic/).\n+\n+## Orchestration\n+\n+Because of the nature of these tests, they require the use of a dedicated orchestration layer. For this project, that orchestrator is called Bandstand. It is an internal project to Elastic.\n+\n+Bandstand performs two primary functions.\n+\n+1. *Service discovery* The pipeline utilizes a load-generation machine and an application server which run in parallel to each other. These machines need to know how to find each other and Bandstand gives them that information.\n+2. *Orchestration* We need to have a system which tells various services when to start an stop based on the state of other services. For example, we can't start load-generation until we are assured that the application is up and in a coherent state. By using an independent orchestrator, we can allow each service to report on its own state. This avoid a number of otherwise difficult-to-maintain dependencies between service state through the lifetime of the load generation.\n+\n+While the orchestration layer is currently relatively lightweight and simple, it is built to be able to easily extended for more sophisticated needs, such as multiple test runs inside a single test exuection.\n+\n+The current design uses a persistant orchestator. However, it is a future goal to have a dynamic orchestrator which is unique to each test execution and is spun up and torn down alongside the rest of the services.\n+\n+## Running Load Tests\n+\n+To run a load test, navigate to the [APM Java Agent CI](https://apm-ci.elastic.co/job/apm-agent-java/) and look for the `Load Test` pipeline. Tests can be executed with the following parameters:\n+\n+|Parameter|Description|\n+|:-------:|:---------|\n+|`apm_version`|The version of the APM Java Agent to use. After checking out the agent from source control, this is the git tag that will be used.|\n+|`jvm_version`|The version of the JVM which will be used. This will be used as the version of Java both when building the agent and when launching the application.|\n+|`concurrent_requests`|The number of concurrent, simulated users which will make requests against the test applicaiton.|\n+|`duration`|The duration for the load test. Specify this value using time units: (300s, 20m, 3h, 1h30m, etc.)|\n+|`agent_config`|To override the defaults of the APM Java Agent config, paste a configuration file.|\n+|`locustfile`|A Locust file controls the specifics of how load will be applied to the test application, such as which URLs are requested and at what rate. If this option is not specified, then `.ci/load/scripts/locustfile.py` will be used. For more information on writing a locustfile, [please see the documentation](https://docs.locust.io/en/stable/writing-a-locustfile.html).|\n+\n+\n+After specifying the options, a test run will begin. One can view the progress of the test run by following along in the Jenkins Blue Ocean interface for the given job after it is launched. Typically, it takes several minutes for the machines to be provisioned before tests can begin.\n+\n+## Viewing test results\n+\n+Because the [test application](https://projects.spring.io/spring-petclinic/) is instrumented with [JFR](https://docs.oracle.com/javacomponents/jmc-5-4/jfr-runtime-guide/about.htm#JFRUH170), it is necessary to have a copy of the [JDK Mission Control application](https://www.baeldung.com/java-flight-recorder-monitoring#3-visualize-data) which is distributed with the JDK.\n+\n+The results of the JFR instrumentation are available after a test run is complete by navigating to Jenkins and viewing the job results. A link to `Artifacts` will bring you to a page which shows the files generated by the test run. Download `src/spring-petclinic/flight.jfr` and then view its contents with JDK MIssion Control to examine the moment-by-moment profile of the application under test.\n+\n+To view the load generation output, see the console output in Jenkins for the `Load Generation` step.\n+\n+## Hacking\n+\n+*Caution*: The following requires access to libraries which are internal to Elastic. Do not attempt to follow these instructions of you are an open-source user\n+of the APM Java Agent. Instead, contact the core development team with questions.\n+\n+To set up a local development environment for executing load tests and for developing the test framework, perform the following steps:\n+\n+1. Checkout the Bandstand application and build a docker container from it tagged as `bandstand`.\n+2. Checkout the [fork of the APM Pipeline library](https://github.com/cachedout/apm-pipeline-library-1/tree/perf) which contains the necessary modifications to provision a load-testing environment locally.\n+3. In the `apm-pipeline-library` checkout from step 3, create a soft link from `local/jenkins_home` to the your checkout of the `apm-java-agent` codebase.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d9aa1bf286bb15613ed1d6f3c7eb4d0a46cf265", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/4d9aa1bf286bb15613ed1d6f3c7eb4d0a46cf265", "committedDate": "2020-11-02T15:28:46Z", "message": "Update .ci/load/README.md\n\nCo-authored-by: Manuel de la Pe\u00f1a <social.mdelapenya@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500f89bf7fc09a3bd5246df0db10516e40f917b0", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/500f89bf7fc09a3bd5246df0db10516e40f917b0", "committedDate": "2020-11-02T15:28:54Z", "message": "Update .ci/load/README.md\n\nCo-authored-by: Manuel de la Pe\u00f1a <social.mdelapenya@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61f9670e850341146dde2dd92350623caf2527da", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/61f9670e850341146dde2dd92350623caf2527da", "committedDate": "2020-11-02T15:29:01Z", "message": "Update .ci/load/README.md\n\nCo-authored-by: Manuel de la Pe\u00f1a <social.mdelapenya@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzI0Nzc5", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-521724779", "createdAt": "2020-11-02T15:19:34Z", "commit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToxOTozNFrOHsI2Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToyNzo1NVrOHsJONg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NDM5MA==", "bodyText": "We'll also need to test against Java 7 and 8. Does Spring PetClinic event support such old versions?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516044390", "createdAt": "2020-11-02T15:19:34Z", "author": {"login": "felixbarny"}, "path": ".ci/load/scripts/param_gen/gen_params.py", "diffHunk": "@@ -0,0 +1,126 @@\n+#!/usr/bin/env python\n+\n+# Licensed to Elasticsearch B.V. under one or more contributor\n+# license agreements. See the NOTICE file distributed with\n+# this work for additional information regarding copyright\n+# ownership. Elasticsearch B.V. licenses this file to you under\n+# the Apache License, Version 2.0 (the \"License\"); you may\n+# not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+\"\"\"\n+Description:\n+\n+This is an ad-hoc script used to generate the drop-down selections\n+for the Jenkinsfile to allow users to test against various combinations\n+of JDKs available in the Elastic JVM catalog which is hosted at:\n+https://jvm-catalog.elastic.co.\n+\n+It dymamically generates a list of available JDKs and of APM Java Agent\n+releases. These are returns as a snippet of code which can then be pasted\n+directly into a Jenkinsfile. Below is an example of the kind of output\n+produced by this script:\n+\n+    parameters {\n+    string(name: 'agent_version', defaultValue: 'v1.9.0', description: 'Version of agent. Should correspond to tag, e.g. `v1.9.0`.')\n+    string(name: 'jvm_version', defaultValue: '9.0.4', description: 'Version of JVM.')\n+    string(name: 'concurrent_requests', defaultValue: '100', description: 'The number of concurrent requests to test with.')\n+    string(name: 'duration', defaultValue: '10', description: 'Test duration in minutes. Max: 280')\n+    string(name: 'num_of_runs', defaultValue: '1', description: 'Number of test runs to execute.')\n+    }\n+\n+Author: Mike Place <mike.place@elastic.co>\n+\n+Maintainers: Observability Developer Productivity\n+<observability-robots@elastic.co>\n+\"\"\"\n+\n+import requests\n+import argparse\n+import github\n+from packaging.version import parse as parse_version\n+\n+CATALOG_URL = 'https://jvm-catalog.elastic.co'\n+SUPPORTED_JDKS = ['oracle', 'openjdk', 'adoptopenjdk', 'amazon', 'jdk', 'zulu']\n+MIN_JDK_VERSION = '11'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NjQzMQ==", "bodyText": "Can we make it executing requests at a fixed rate in order to avoid coordinated omission problems?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516046431", "createdAt": "2020-11-02T15:22:25Z", "author": {"login": "felixbarny"}, "path": ".ci/load/scripts/locustfile.py", "diffHunk": "@@ -0,0 +1,13 @@\n+from locust import HttpUser, task, between\n+\n+\n+class QuickstartUser(HttpUser):\n+    wait_time = between(1, 2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA1MDQ4Ng==", "bodyText": "Is it possible to view the Locust results? If so, how?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516050486", "createdAt": "2020-11-02T15:27:55Z", "author": {"login": "felixbarny"}, "path": ".ci/load/README.md", "diffHunk": "@@ -0,0 +1,61 @@\n+# APM Java Agent Load Geneator\n+\n+This directory contains configuration files for load-testing the APM Java Agent.\n+\n+## Load Tests\n+\n+Load tests are run using two bare-metal workers. One worker is dedicated to the role of load generation, which other worker is dedicated to the role of hosting the application under test, which is instrumented by the APM Java Agent.\n+\n+Load generation is performed using [Locust](https://locust.io/) and the application which is instrumented by the APM Java Agent and placed under load is [Spring Petclinic](https://projects.spring.io/spring-petclinic/).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7de00455e17722e56ae5b7bf3bde861fff7572c8"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzkyNzMw", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-521792730", "createdAt": "2020-11-02T16:30:17Z", "commit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjozMDoxN1rOHsL-fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNjo0MToxMVrOHsMeAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NTYxMw==", "bodyText": "OMG!", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516095613", "createdAt": "2020-11-02T16:30:17Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NjA5MA==", "bodyText": "You can set them in the top-level environment closure", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516096090", "createdAt": "2020-11-02T16:30:54Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                        env.LOCUST_RUN_TIME = params.duration\n+                        env.LOCUST_USERS = params.concurrent_requests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NjYyMw==", "bodyText": "Is there any reason to use the returnStdout?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516096623", "createdAt": "2020-11-02T16:31:33Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5NzEwMg==", "bodyText": "If this is a MBP, then I'd suggest to also move the params to env variables to bypass an existing issue with the very first builds.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n                    LOCUST_RUN_TIME = \"$(params.duration}\"\n          \n          \n            \n                    LOCUST_USERS = \"$(params.concurrent_requests}\"", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516097102", "createdAt": "2020-11-02T16:32:07Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA5OTA5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            script {\n          \n          \n            \n                                                if (params.locustfile) {\n          \n          \n            \n                                                    echo 'Using user-supplied plan for load-generation with Locust'\n          \n          \n            \n                                                    sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n          \n          \n            \n                                                }\n          \n          \n            \n                                            }\n          \n          \n            \n                                            whenTrue(params.locustfile) {\n          \n          \n            \n                                                echo 'Using user-supplied plan for load-generation with Locust'\n          \n          \n            \n                                                sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n          \n          \n            \n                                            }", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516099090", "createdAt": "2020-11-02T16:34:45Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                        env.LOCUST_RUN_TIME = params.duration\n+                        env.LOCUST_USERS = params.concurrent_requests\n+                        env.SESSION_TOKEN = sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim()\n+                    }\n+                }\n+            }    \n+        }\n+        stage('Load test') {\n+            parallel {\n+                stage('Load generation') {\n+                    agent { label 'metal' }\n+                    steps {\n+                            withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                                echo 'Preparing load generation..'\n+                                script {\n+                                    if (params.locustfile) {\n+                                        echo 'Using user-supplied plan for load-generation with Locust'\n+                                        sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n+                                    }\n+                                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwMDI4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            script {\n          \n          \n            \n                                                if (params.agent_config) {\n          \n          \n            \n                                                    echo 'Writing user-supplied agent configuration'\n          \n          \n            \n                                                    dir(\"${AGENT_BASE_DIR}\") {\n          \n          \n            \n                                                        sh script: \"echo \\\"${params.agent_config}\\\">custom_config.cfg\"\n          \n          \n            \n                                                    }\n          \n          \n            \n                                                }\n          \n          \n            \n                                            }\n          \n          \n            \n                                            whenTrue(params.agent_config) {\n          \n          \n            \n                                                echo 'Writing user-supplied agent configuration'\n          \n          \n            \n                                                dir(\"${AGENT_BASE_DIR}\") {\n          \n          \n            \n                                                    sh script: \"echo \\\"${params.agent_config}\\\">custom_config.cfg\"\n          \n          \n            \n                                                 }\n          \n          \n            \n                                            }", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516100284", "createdAt": "2020-11-02T16:36:28Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                        env.LOCUST_RUN_TIME = params.duration\n+                        env.LOCUST_USERS = params.concurrent_requests\n+                        env.SESSION_TOKEN = sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim()\n+                    }\n+                }\n+            }    \n+        }\n+        stage('Load test') {\n+            parallel {\n+                stage('Load generation') {\n+                    agent { label 'metal' }\n+                    steps {\n+                            withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                                echo 'Preparing load generation..'\n+                                script {\n+                                    if (params.locustfile) {\n+                                        echo 'Using user-supplied plan for load-generation with Locust'\n+                                        sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n+                                    }\n+                                }\n+                                sh(script: \".ci/load/scripts/load_agent.sh\")\n+                            }\n+                    }\n+                }\n+                stage('Test application') {\n+                    agent { label 'metal' }\n+                    stages{\n+                        stage('Provision Java') {\n+                            steps {\n+                                echo \"Provisioning Java version: ${params.jvm_version}\"\n+                                script {\n+                                    def jdk_home = sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim()\n+                                    env.JAVA_HOME = jdk_home\n+                                    env.JAVACMD = \"${env.JAVA_HOME}/bin/java\"\n+                                    env.PATH = \"${env.JAVA_HOME}/bin:$PATH\"\n+                                }\n+                            }\n+                        }\n+                        stage ('Provision agent') {\n+                            steps {\n+                                echo 'Checking out master branch'\n+                                dir(\"${AGENT_BASE_DIR}\") {\n+                                    gitCheckout(\n+                                        basedir: \"apm-agent-java\",\n+                                        branch: 'master',\n+                                        repo: \"https://github.com/elastic/${REPO}.git\",\n+                                        credentialsId: 'f6c7695a-671e-4f4f-a331-acdce44ff9ba',\n+                                        shallow: false\n+                                    )\n+                                    dir(\"apm-agent-java\"){\n+                                        echo 'Switching to requested version'\n+                                        sh(script: \"git checkout v${params.apm_version}\")\n+                                        echo 'Building agent'\n+                                        sh(script: './mvnw  clean install -DskipTests=true -Dmaven.javadoc.skip=true')\n+                                    }\n+                                }\n+                                script {\n+                                    if (params.agent_config) {\n+                                        echo 'Writing user-supplied agent configuration'\n+                                        dir(\"${AGENT_BASE_DIR}\") {\n+                                            sh script: \"echo \\\"${params.agent_config}\\\">custom_config.cfg\"\n+                                        }\n+                                    }\n+                                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwMjE5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            script {\n          \n          \n            \n                                                def jdk_home = sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim()\n          \n          \n            \n                                                env.JAVA_HOME = jdk_home\n          \n          \n            \n                                                env.JAVACMD = \"${env.JAVA_HOME}/bin/java\"\n          \n          \n            \n                                                env.PATH = \"${env.JAVA_HOME}/bin:$PATH\"\n          \n          \n            \n                                            }\n          \n          \n            \n                                            setEnvVar('JAVA_HOME', sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim())\n          \n          \n            \n                                            setEnvVar('JAVACMD', \"${env.JAVA_HOME}/bin/java\")\n          \n          \n            \n                                            setEnvVar('PATH', \"${env.JAVA_HOME}/bin:$PATH\")", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516102192", "createdAt": "2020-11-02T16:39:01Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                        env.LOCUST_RUN_TIME = params.duration\n+                        env.LOCUST_USERS = params.concurrent_requests\n+                        env.SESSION_TOKEN = sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim()\n+                    }\n+                }\n+            }    \n+        }\n+        stage('Load test') {\n+            parallel {\n+                stage('Load generation') {\n+                    agent { label 'metal' }\n+                    steps {\n+                            withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                                echo 'Preparing load generation..'\n+                                script {\n+                                    if (params.locustfile) {\n+                                        echo 'Using user-supplied plan for load-generation with Locust'\n+                                        sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n+                                    }\n+                                }\n+                                sh(script: \".ci/load/scripts/load_agent.sh\")\n+                            }\n+                    }\n+                }\n+                stage('Test application') {\n+                    agent { label 'metal' }\n+                    stages{\n+                        stage('Provision Java') {\n+                            steps {\n+                                echo \"Provisioning Java version: ${params.jvm_version}\"\n+                                script {\n+                                    def jdk_home = sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim()\n+                                    env.JAVA_HOME = jdk_home\n+                                    env.JAVACMD = \"${env.JAVA_HOME}/bin/java\"\n+                                    env.PATH = \"${env.JAVA_HOME}/bin:$PATH\"\n+                                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjEwMzY4Mw==", "bodyText": "The below will help to get rid of the required script closure\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                script {\n          \n          \n            \n                                    sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n          \n          \n            \n                                    env.LOCUST_RUN_TIME = params.duration\n          \n          \n            \n                                    env.LOCUST_USERS = params.concurrent_requests\n          \n          \n            \n                                    env.SESSION_TOKEN = sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim()\n          \n          \n            \n                                }\n          \n          \n            \n                                sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n          \n          \n            \n                                setEnvVar('SESSION_TOKEN', sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim())", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516103683", "createdAt": "2020-11-02T16:41:11Z", "author": {"login": "v1v"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,179 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    script {\n+                        sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                        env.LOCUST_RUN_TIME = params.duration\n+                        env.LOCUST_USERS = params.concurrent_requests\n+                        env.SESSION_TOKEN = sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim()\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61f9670e850341146dde2dd92350623caf2527da"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e51c8e4bd19a3470cc3c8e32317dcff58b141bab", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/e51c8e4bd19a3470cc3c8e32317dcff58b141bab", "committedDate": "2020-11-02T16:49:32Z", "message": "Update .ci/load/Jenkinsfile\n\nCo-authored-by: Victor Martinez <victormartinezrubio@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c6bb6f56a083c9a082881bd08fa16a6357c68f3", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/9c6bb6f56a083c9a082881bd08fa16a6357c68f3", "committedDate": "2020-11-02T16:49:42Z", "message": "Update .ci/load/Jenkinsfile\n\nCo-authored-by: Victor Martinez <victormartinezrubio@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0939974512b6a3708ca2c9901bdcfe61367cd440", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/0939974512b6a3708ca2c9901bdcfe61367cd440", "committedDate": "2020-11-02T16:50:24Z", "message": "Update .ci/load/Jenkinsfile\n\nCo-authored-by: Victor Martinez <victormartinezrubio@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7012da2c09ad2a5d423b43191ecb24296694c01", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/e7012da2c09ad2a5d423b43191ecb24296694c01", "committedDate": "2020-11-02T16:50:40Z", "message": "Update .ci/load/Jenkinsfile\n\nCo-authored-by: Victor Martinez <victormartinezrubio@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "547e001d254842b04053396c454869d08ea9c5e1", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/547e001d254842b04053396c454869d08ea9c5e1", "committedDate": "2020-11-03T08:47:37Z", "message": "Fixup of review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "090a2596b8d121d2b2bfcb429083ed94a51fc1a2", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/090a2596b8d121d2b2bfcb429083ed94a51fc1a2", "committedDate": "2020-11-03T09:24:05Z", "message": "Set interval to fixed time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzM3NTY2", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522337566", "createdAt": "2020-11-03T09:58:00Z", "commit": {"oid": "090a2596b8d121d2b2bfcb429083ed94a51fc1a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTo1ODowMFrOHsnaJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTo1ODowMFrOHsnaJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0NTA2Mg==", "bodyText": "IIUC, constant is still vulnerable to coordinated omission as it waits one second after the requests has been completed. By using constant_pacing, we can ensure a constant RPS, regardless of how long it takes to serve the request.\nAn example of when this can be problematic: Imagine there's a 1-minute stop-the-world JVM pause due to a major garbage collection. During that time, we'd effectively \"look away\" by waiting for the current requests to execute before executing others. Only by executing pre-defined request/sec rate, no matter how the system under test responds, we can fully include the effect of the long stop-the-world pause in the test results.", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516545062", "createdAt": "2020-11-03T09:58:00Z", "author": {"login": "felixbarny"}, "path": ".ci/load/scripts/locustfile.py", "diffHunk": "@@ -0,0 +1,13 @@\n+from locust import HttpUser, task, constant\n+\n+\n+class QuickstartUser(HttpUser):\n+    wait_time = constant(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090a2596b8d121d2b2bfcb429083ed94a51fc1a2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/8329f488a2909b4b4d73dc227981bb7734a4141b", "committedDate": "2020-11-03T10:39:32Z", "message": "constant pacing for load gen"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzczNTk3", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522373597", "createdAt": "2020-11-03T10:44:02Z", "commit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NDowMlrOHspI6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NDowMlrOHspI6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3MzQxNg==", "bodyText": "Should we mask this SESSION_TOKEN?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516573416", "createdAt": "2020-11-03T10:44:02Z", "author": {"login": "kuisathaverat"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,170 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                    setEnvVar('SESSION_TOKEN', sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzc1MTA0", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522375104", "createdAt": "2020-11-03T10:45:57Z", "commit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NTo1N1rOHspNyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0NTo1N1rOHspNyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NDY2Nw==", "bodyText": "Is correct to call twice the same script?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516574667", "createdAt": "2020-11-03T10:45:57Z", "author": {"login": "kuisathaverat"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,170 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10m\", description: \"Test duration in minutes. Max: 280 minutes\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    sh(script: \".ci/load/scripts/start.sh\", returnStdout: true)\n+                    setEnvVar('SESSION_TOKEN', sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzc2Nzcz", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522376773", "createdAt": "2020-11-03T10:48:12Z", "commit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0ODoxMlrOHspSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo0ODoxMlrOHspSjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NTg4NA==", "bodyText": "we usually put the APM URL and the APM token in a Vault secret", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516575884", "createdAt": "2020-11-03T10:48:12Z", "author": {"login": "kuisathaverat"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,170 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7d53c2b04c553620901218c40cd5b5904e094cb", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/b7d53c2b04c553620901218c40cd5b5904e094cb", "committedDate": "2020-11-03T10:54:11Z", "message": "Fix bad merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzgzMzk5", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522383399", "createdAt": "2020-11-03T10:56:56Z", "commit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo1Njo1N1rOHspmVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDo1Njo1N1rOHspmVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4MDk1MA==", "bodyText": "I think we can make a step in the library that collects all the version from https://jvm-catalog.elastic.co/jdks", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r516580950", "createdAt": "2020-11-03T10:56:57Z", "author": {"login": "kuisathaverat"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,170 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.1+13-linux-aarch64', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+7-linux-aarch64', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.2+9-linux-aarch64', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.3+7-linux-aarch64', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.4+11-linux-aarch64', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.6+10-linux-aarch64', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.7+10-linux-aarch64', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.8+10-linux-aarch64', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-11.0.9+11-linux-aarch64', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.1+12-linux-aarch64', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-12.0.2+10-linux-aarch64', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-13.0.2+8-linux-aarch64', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.1+7-linux-aarch64', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-14.0.2+12-linux-aarch64', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15+36-linux-aarch64', 'adoptopenjdk-15.0.1+9-linux', 'adoptopenjdk-15.0.1+9-linux-aarch64', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux'], name: \"jvm_version\", description: \"JVM\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTYyOTg0", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-522562984", "createdAt": "2020-11-03T14:40:36Z", "commit": {"oid": "b7d53c2b04c553620901218c40cd5b5904e094cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/cbe6351395b22ec5a3892a4430bfb14901fba624", "committedDate": "2020-11-05T13:18:12Z", "message": "Bring number of jdks below 250"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjYxODIw", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-524261820", "createdAt": "2020-11-05T13:33:16Z", "commit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzozMzoxNlrOHuDbpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo0NzowNlrOHuD_1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1Mjc3NA==", "bodyText": "does not seem to be resolved yet? not sure if that's a nice-to-have or a requirement @kuisathaverat?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r518052774", "createdAt": "2020-11-05T13:33:16Z", "author": {"login": "felixbarny"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,170 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU3NTg4NA=="}, "originalCommit": {"oid": "8329f488a2909b4b4d73dc227981bb7734a4141b"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1MzU3Ng==", "bodyText": "[minor] for long running stability tests, we might want to have longer or no timeouts", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r518053576", "createdAt": "2020-11-05T13:34:29Z", "author": {"login": "felixbarny"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,169 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NTY4NQ==", "bodyText": "are the workers guaranteed to be the same run-to-run? how many cpu cores do they have?", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r518055685", "createdAt": "2020-11-05T13:37:40Z", "author": {"login": "felixbarny"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,169 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15.0.1+9-linux', 'openjdk-10+43-linux', 'openjdk-10-linux', 'openjdk-10.0.1-linux', 'openjdk-10.0.2-linux', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'openjdk-9.0.4-linux', 'oracle-10+43-linux', 'oracle-10+46-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'oracle-9.0.4+11-linux', 'zulu-10.0.0-linux', 'zulu-10.0.1-linux', 'zulu-10.0.2-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux', 'zulu-7.0.101-linux', 'zulu-7.0.111-linux', 'zulu-7.0.121-linux', 'zulu-7.0.131-linux', 'zulu-7.0.141-linux', 'zulu-7.0.154-linux', 'zulu-7.0.161-linux', 'zulu-7.0.171-linux', 'zulu-7.0.181-linux', 'zulu-7.0.191-linux', 'zulu-7.0.201-linux', 'zulu-7.0.211-linux', 'zulu-7.0.222-linux', 'zulu-7.0.232-linux', 'zulu-7.0.242-linux', 'zulu-7.0.252-linux', 'zulu-7.0.262-linux', 'zulu-7.0.272-linux', 'zulu-7.0.282-linux', 'zulu-7.0.95-linux', 'zulu-8.0.102-linux', 'zulu-8.0.112-linux', 'zulu-8.0.121-linux', 'zulu-8.0.131-linux', 'zulu-8.0.144-linux', 'zulu-8.0.152-linux', 'zulu-8.0.162-linux', 'zulu-8.0.163-linux', 'zulu-8.0.172-linux', 'zulu-8.0.181-linux', 'zulu-8.0.192-linux', 'zulu-8.0.201-linux', 'zulu-8.0.202-linux', 'zulu-8.0.212-linux', 'zulu-8.0.222-linux', 'zulu-8.0.232-linux', 'zulu-8.0.242-linux', 'zulu-8.0.252-linux', 'zulu-8.0.262-linux', 'zulu-8.0.265-linux', 'zulu-8.0.272-linux', 'zulu-8.0.71-linux', 'zulu-8.0.72-linux', 'zulu-8.0.91-linux', 'zulu-8.0.92-linux', 'zulu-9.0.0-linux', 'zulu-9.0.1-linux', 'zulu-9.0.4-linux', 'zulu-9.0.7-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10\", description: \"Test duration in minutes. Max: 280\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    setEnvVar('SESSION_TOKEN', sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim())\n+                }\n+            }    \n+        }\n+        stage('Load test') {\n+            parallel {\n+                stage('Load generation') {\n+                    agent { label 'metal' }\n+                    steps {\n+                            withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                                echo 'Preparing load generation..'\n+                                whenTrue(Boolean.valueOf(params.locustfile)) {\n+                                    echo 'Using user-supplied plan for load-generation with Locust'\n+                                    sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n+                                }\n+                                sh(script: \".ci/load/scripts/load_agent.sh\")\n+                            }\n+                    }\n+                }\n+                stage('Test application') {\n+                    agent { label 'metal' }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2MjAzOA==", "bodyText": "a likely feature request in the future will be to  checkout specific revisions or master", "url": "https://github.com/elastic/apm-agent-java/pull/1467#discussion_r518062038", "createdAt": "2020-11-05T13:47:06Z", "author": {"login": "felixbarny"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -0,0 +1,169 @@\n+// For documentation on this pipeline, please see the README.md in this directory\n+pipeline {\n+    agent any\n+    environment {\n+        REPO = 'apm-agent-java'\n+        APP = 'spring-petclinic'\n+        APP_BASE_DIR = \"src/${APP}\"\n+        METRICS_BASE_DIR=\"metrics/\"\n+        AGENT_BASE_DIR = \"agent/\"\n+        ORCH_URL = 'obs-load-orch.app.elastic.co:8000'\n+        // Set below for local development\n+        // ORCH_URL='10.0.2.2:8000'\n+        DEBUG_MODE = '0' // set to '0' for production\n+        // This is a placeholder server. This will change to a dummy APM Server when it is available.\n+        APM_SERVER_URL = 'https://2a2bd0e2806a47e5996eeeec6d22e6df.apm.eu-west-3.aws.elastic-cloud.com:443'\n+        LOCUST_RUN_TIME = \"${params.duration}\"\n+        LOCUST_USERS = \"${params.concurrent_requests}\"\n+\n+    }\n+    options {\n+        timeout(time: 3, unit: 'HOURS')\n+        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20', daysToKeepStr: '30'))\n+        timestamps()\n+        ansiColor('xterm')\n+        durabilityHint('PERFORMANCE_OPTIMIZED')\n+\n+    }\n+    parameters {\n+        // The following snippet is auto-generated. To update it, run the script located in .ci/load/scripts/param_gen and copy in the output\n+        choice(choices: ['1.18.1', '1.18.0', '1.18.0.RC1', '1.17.0', '1.16.0', '1.15.0', '1.14.0', '1.13.0', '1.12.0', '1.11.0', '1.10.0', '1.9.0', '1.8.0', '1.7.0', '1.6.1', '1.6.0', '1.5.0', '1.4.0', '1.3.0', '1.2.0', '1.1.0', '1.0.1', '1.0.0', '1.0.0.RC1', '0.7.1', '0.7.0', '0.6.2', '0.6.1', '0.6.0', '0.5.1', '0.1.2', '0.1.1'], name: \"apm_version\", description: \"APM Java Agent version\")\n+        choice(choices: ['adoptopenjdk-11+28-linux', 'adoptopenjdk-11.0.1+13-linux', 'adoptopenjdk-11.0.2+7-linux', 'adoptopenjdk-11.0.2+9-linux', 'adoptopenjdk-11.0.3+7-linux', 'adoptopenjdk-11.0.4+11-linux', 'adoptopenjdk-11.0.5+10-linux', 'adoptopenjdk-11.0.6+10-linux', 'adoptopenjdk-11.0.7+10-linux', 'adoptopenjdk-11.0.8+10-linux', 'adoptopenjdk-11.0.9+11-linux', 'adoptopenjdk-12+33-linux', 'adoptopenjdk-12.0.1+12-linux', 'adoptopenjdk-12.0.2+10-linux', 'adoptopenjdk-13.0.1+9-linux', 'adoptopenjdk-13.0.2+8-linux', 'adoptopenjdk-14.0.1+7-linux', 'adoptopenjdk-14.0.2+12-linux', 'adoptopenjdk-15+36-linux', 'adoptopenjdk-15.0.1+9-linux', 'openjdk-10+43-linux', 'openjdk-10-linux', 'openjdk-10.0.1-linux', 'openjdk-10.0.2-linux', 'openjdk-11+11-linux', 'openjdk-11+12-linux', 'openjdk-11+13-linux', 'openjdk-11+14-linux', 'openjdk-11+15-linux', 'openjdk-11+16-linux', 'openjdk-11+17-linux', 'openjdk-11+18-linux', 'openjdk-11+19-linux', 'openjdk-11+20-linux', 'openjdk-11+21-linux', 'openjdk-11+22-linux', 'openjdk-11+23-linux', 'openjdk-11+24-linux', 'openjdk-11+25-linux', 'openjdk-11+26-linux', 'openjdk-11+27-linux', 'openjdk-11+28-linux', 'openjdk-11+5-linux', 'openjdk-11-linux', 'openjdk-11.0.1-linux', 'openjdk-11.0.2-linux', 'openjdk-12+23-linux', 'openjdk-12+24-linux', 'openjdk-12+25-linux', 'openjdk-12+27-linux', 'openjdk-12+28-linux', 'openjdk-12+29-linux', 'openjdk-12+30-linux', 'openjdk-12+31-linux', 'openjdk-12+32-linux', 'openjdk-12+33-linux', 'openjdk-12-linux', 'openjdk-12.0.1-linux', 'openjdk-12.0.2-linux', 'openjdk-13+14-linux', 'openjdk-13+15-linux', 'openjdk-13+16-linux', 'openjdk-13+17-linux', 'openjdk-13+18-linux', 'openjdk-13+19-linux', 'openjdk-13+20-linux', 'openjdk-13+21-linux', 'openjdk-13+22-linux', 'openjdk-13+23-linux', 'openjdk-13+24-linux', 'openjdk-13+25-linux', 'openjdk-13+26-linux', 'openjdk-13+27-linux', 'openjdk-13+28-linux', 'openjdk-13+29-linux', 'openjdk-13+30-linux', 'openjdk-13+31-linux', 'openjdk-13+32-linux', 'openjdk-13-linux', 'openjdk-13.0.1-linux', 'openjdk-13.0.2-linux', 'openjdk-14+10-linux', 'openjdk-14+11-linux', 'openjdk-14+12-linux', 'openjdk-14+13-linux', 'openjdk-14+14-linux', 'openjdk-14+15-linux', 'openjdk-14+16-linux', 'openjdk-14+17-linux', 'openjdk-14+25-linux', 'openjdk-14+26-linux', 'openjdk-14+27-linux', 'openjdk-14+28-linux', 'openjdk-14+30-linux', 'openjdk-14+31-linux', 'openjdk-14+32-linux', 'openjdk-14+33-linux', 'openjdk-14+34-linux', 'openjdk-14+9-linux', 'openjdk-14-linux', 'openjdk-14.0.1-linux', 'openjdk-14.0.2+12-linux', 'openjdk-14.0.2-linux', 'openjdk-15+10-linux', 'openjdk-15+11-linux', 'openjdk-15+12-linux', 'openjdk-15+13-linux', 'openjdk-15+14-linux', 'openjdk-15+15-linux', 'openjdk-15+16-linux', 'openjdk-15+17-linux', 'openjdk-15+18-linux', 'openjdk-15+19-linux', 'openjdk-15+20-linux', 'openjdk-15+21-linux', 'openjdk-15+22-linux', 'openjdk-15+23-linux', 'openjdk-15+24-linux', 'openjdk-15+25-linux', 'openjdk-15+26-linux', 'openjdk-15+27-linux', 'openjdk-15+28-linux', 'openjdk-15+29-linux', 'openjdk-15+30-linux', 'openjdk-15+31-linux', 'openjdk-15+32-linux', 'openjdk-15+33-linux', 'openjdk-15+34-linux', 'openjdk-15+36-linux', 'openjdk-15+4-linux', 'openjdk-15+5-linux', 'openjdk-15+6-linux', 'openjdk-15+7-linux', 'openjdk-15+8-linux', 'openjdk-15+9-linux', 'openjdk-15-linux', 'openjdk-15.0.1+9-linux', 'openjdk-9.0.4-linux', 'oracle-10+43-linux', 'oracle-10+46-linux', 'oracle-11+11-linux', 'oracle-11+12-linux', 'oracle-11+13-linux', 'oracle-11+14-linux', 'oracle-11+15-linux', 'oracle-11+16-linux', 'oracle-11+17-linux', 'oracle-11+18-linux', 'oracle-11+19-linux', 'oracle-11+20-linux', 'oracle-11+21-linux', 'oracle-11+22-linux', 'oracle-11+23-linux', 'oracle-11+24-linux', 'oracle-11+25-linux', 'oracle-11+26-linux', 'oracle-11+27-linux', 'oracle-11+28-linux', 'oracle-11+5-linux', 'oracle-11.0.2+7-linux', 'oracle-11.0.2+9-linux', 'oracle-11.0.3+12-linux', 'oracle-11.0.4+10-linux', 'oracle-11.0.5+10-linux', 'oracle-11.0.6+8-linux', 'oracle-12+33-linux', 'oracle-12.0.1+12-linux', 'oracle-12.0.2+10-linux', 'oracle-13+33-linux', 'oracle-13.0.1+9-linux', 'oracle-13.0.2+8-linux', 'oracle-9.0.4+11-linux', 'zulu-10.0.0-linux', 'zulu-10.0.1-linux', 'zulu-10.0.2-linux', 'zulu-11.0.1-linux', 'zulu-11.0.2-linux', 'zulu-11.0.3-linux', 'zulu-11.0.4-linux', 'zulu-11.0.5-linux', 'zulu-11.0.6-linux', 'zulu-11.0.7-linux', 'zulu-11.0.8-linux', 'zulu-11.0.9-linux', 'zulu-12-linux', 'zulu-12.0.0-linux', 'zulu-12.0.1-linux', 'zulu-12.0.2-linux', 'zulu-13-linux', 'zulu-13.0.0-linux', 'zulu-13.0.1-linux', 'zulu-13.0.2-linux', 'zulu-13.0.3-linux', 'zulu-13.0.4-linux', 'zulu-13.0.5-linux', 'zulu-14-linux', 'zulu-14.0.0-linux', 'zulu-14.0.1-linux', 'zulu-14.0.2-linux', 'zulu-15.0.0-linux', 'zulu-15.0.1-linux', 'zulu-7.0.101-linux', 'zulu-7.0.111-linux', 'zulu-7.0.121-linux', 'zulu-7.0.131-linux', 'zulu-7.0.141-linux', 'zulu-7.0.154-linux', 'zulu-7.0.161-linux', 'zulu-7.0.171-linux', 'zulu-7.0.181-linux', 'zulu-7.0.191-linux', 'zulu-7.0.201-linux', 'zulu-7.0.211-linux', 'zulu-7.0.222-linux', 'zulu-7.0.232-linux', 'zulu-7.0.242-linux', 'zulu-7.0.252-linux', 'zulu-7.0.262-linux', 'zulu-7.0.272-linux', 'zulu-7.0.282-linux', 'zulu-7.0.95-linux', 'zulu-8.0.102-linux', 'zulu-8.0.112-linux', 'zulu-8.0.121-linux', 'zulu-8.0.131-linux', 'zulu-8.0.144-linux', 'zulu-8.0.152-linux', 'zulu-8.0.162-linux', 'zulu-8.0.163-linux', 'zulu-8.0.172-linux', 'zulu-8.0.181-linux', 'zulu-8.0.192-linux', 'zulu-8.0.201-linux', 'zulu-8.0.202-linux', 'zulu-8.0.212-linux', 'zulu-8.0.222-linux', 'zulu-8.0.232-linux', 'zulu-8.0.242-linux', 'zulu-8.0.252-linux', 'zulu-8.0.262-linux', 'zulu-8.0.265-linux', 'zulu-8.0.272-linux', 'zulu-8.0.71-linux', 'zulu-8.0.72-linux', 'zulu-8.0.91-linux', 'zulu-8.0.92-linux', 'zulu-9.0.0-linux', 'zulu-9.0.1-linux', 'zulu-9.0.4-linux', 'zulu-9.0.7-linux'], name: \"jvm_version\", description: \"JVM\")\n+        string(name: \"concurrent_requests\", defaultValue: \"100\", description: \"The number of concurrent requests to test with\")\n+        string(name: \"duration\", defaultValue: \"10\", description: \"Test duration in minutes. Max: 280\")\n+        // num_of_runs currently unsupported\n+        // string(name: \"num_of_runs\", defaultValue: \"1\", description: \"Number of test runs to execute\")\n+        text(name: \"agent_config\", \"defaultValue\": \"\", description: \"Custom APM Agent configuration. (WARNING: May echo to console. Do not supply sensitive data.)\")\n+        text(name: \"locustfile\", \"defaultValue\": \"\", description: \"Locust load-generator plan\")\n+        booleanParam(name: \"local_metrics\", description: \"Enable local metrics collection?\", defaultValue: false)\n+        // End script auto-generation\n+    }\n+\n+    stages {\n+        stage('Pre-flight'){\n+            steps {\n+                echo 'Getting authentication information from Vault'\n+                withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                    setEnvVar('SESSION_TOKEN', sh(script: \".ci/load/scripts/start.sh\", returnStdout: true).trim())\n+                }\n+            }    \n+        }\n+        stage('Load test') {\n+            parallel {\n+                stage('Load generation') {\n+                    agent { label 'metal' }\n+                    steps {\n+                            withSecretVault(secret: 'secret/apm-team/ci/bandstand', user_var_name: 'APP_TOKEN_TYPE', pass_var_name: 'APP_TOKEN'){\n+                                echo 'Preparing load generation..'\n+                                whenTrue(Boolean.valueOf(params.locustfile)) {\n+                                    echo 'Using user-supplied plan for load-generation with Locust'\n+                                    sh script: \"echo \\\"${params.locustfile}\\\">.ci/load/scripts/locustfile.py\"\n+                                }\n+                                sh(script: \".ci/load/scripts/load_agent.sh\")\n+                            }\n+                    }\n+                }\n+                stage('Test application') {\n+                    agent { label 'metal' }\n+                    stages{\n+                        stage('Provision Java') {\n+                            steps {\n+                                echo \"Provisioning Java version: ${params.jvm_version}\"\n+                                setEnvVar('JAVA_HOME', sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim())\n+                                setEnvVar('JAVACMD', \"${env.JAVA_HOME}/bin/java\")\n+                                setEnvVar('PATH', \"${env.JAVA_HOME}/bin:$PATH\")\n+                            }\n+                        }\n+                        stage ('Provision agent') {\n+                            steps {\n+                                echo 'Checking out master branch'\n+                                dir(\"${AGENT_BASE_DIR}\") {\n+                                    gitCheckout(\n+                                        basedir: \"apm-agent-java\",\n+                                        branch: 'master',\n+                                        repo: \"https://github.com/elastic/${REPO}.git\",\n+                                        credentialsId: 'f6c7695a-671e-4f4f-a331-acdce44ff9ba',\n+                                        shallow: false\n+                                    )\n+                                    dir(\"apm-agent-java\"){\n+                                        echo 'Switching to requested version'\n+                                        sh(script: \"git checkout v${params.apm_version}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ce0452975eb6f1b4e5547558369d0b4b714f66f", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/7ce0452975eb6f1b4e5547558369d0b4b714f66f", "committedDate": "2020-11-05T14:42:43Z", "message": "Increase timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MzMwODcw", "url": "https://github.com/elastic/apm-agent-java/pull/1467#pullrequestreview-524330870", "createdAt": "2020-11-05T14:43:43Z", "commit": {"oid": "cbe6351395b22ec5a3892a4430bfb14901fba624"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b76a251d87c5184de3ca7d644b6a7cd99548a4ba", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/b76a251d87c5184de3ca7d644b6a7cd99548a4ba", "committedDate": "2020-11-05T15:23:54Z", "message": "Hide server URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "719b5851d7ed5f575618cb01ad0e16c0974d2bf7", "author": {"user": {"login": "cachedout", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/719b5851d7ed5f575618cb01ad0e16c0974d2bf7", "committedDate": "2020-11-05T15:46:01Z", "message": "Switch app to benchmark label"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3707, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}