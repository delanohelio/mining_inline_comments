{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjI2NDkx", "number": 1139, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo0NToyM1rODxrgbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo0NToyM1rODxrgbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDE5NjMwOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo0NToyM1rOGFSMrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOToxMDo1MFrOGFwxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDIyMg==", "bodyText": "Enter advice not needed when moving this to exit advice?", "url": "https://github.com/elastic/apm-agent-java/pull/1139#discussion_r408194222", "createdAt": "2020-04-14T14:45:23Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java", "diffHunk": "@@ -413,4 +411,47 @@ public static void onAfterExecute(@Advice.This Statement statement,\n         }\n \n     }\n+\n+\n+    /**\n+     * Instruments:\n+     * <ul>\n+     *     <li>{@link Statement#getUpdateCount()}</li>\n+     * </ul>\n+     */\n+    public static class GetUpdateCountInstrumentation extends StatementInstrumentation {\n+\n+        public GetUpdateCountInstrumentation(ElasticApmTracer tracer) {\n+            super(tracer,\n+                named(\"getUpdateCount\")\n+                    .and(takesArguments(0))\n+                    .and(isPublic())\n+            );\n+        }\n+\n+        @Advice.OnMethodEnter(suppress = Throwable.class)\n+        private static int onEnter(@Advice.This Statement statement) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16846a29f300d63f94b07a71f21c288c1dd447d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY3NzkxOA==", "bodyText": "Good point, there would be no difference to move this to the exit advice.\nHowever, we could bypass the original method call when we have a stored value, just in case there are other side-effects of calling getUpdateCount further in the driver or DB implementation.", "url": "https://github.com/elastic/apm-agent-java/pull/1139#discussion_r408677918", "createdAt": "2020-04-15T08:42:20Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java", "diffHunk": "@@ -413,4 +411,47 @@ public static void onAfterExecute(@Advice.This Statement statement,\n         }\n \n     }\n+\n+\n+    /**\n+     * Instruments:\n+     * <ul>\n+     *     <li>{@link Statement#getUpdateCount()}</li>\n+     * </ul>\n+     */\n+    public static class GetUpdateCountInstrumentation extends StatementInstrumentation {\n+\n+        public GetUpdateCountInstrumentation(ElasticApmTracer tracer) {\n+            super(tracer,\n+                named(\"getUpdateCount\")\n+                    .and(takesArguments(0))\n+                    .and(isPublic())\n+            );\n+        }\n+\n+        @Advice.OnMethodEnter(suppress = Throwable.class)\n+        private static int onEnter(@Advice.This Statement statement) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDIyMg=="}, "originalCommit": {"oid": "16846a29f300d63f94b07a71f21c288c1dd447d5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY5NTE4OA==", "bodyText": "I've finally took the \"move everything to the exit advice\" path, we can still improve this implementation later only if needed, as skipping default method implementation brings some extra complexity, especially on testing side.", "url": "https://github.com/elastic/apm-agent-java/pull/1139#discussion_r408695188", "createdAt": "2020-04-15T09:10:50Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/StatementInstrumentation.java", "diffHunk": "@@ -413,4 +411,47 @@ public static void onAfterExecute(@Advice.This Statement statement,\n         }\n \n     }\n+\n+\n+    /**\n+     * Instruments:\n+     * <ul>\n+     *     <li>{@link Statement#getUpdateCount()}</li>\n+     * </ul>\n+     */\n+    public static class GetUpdateCountInstrumentation extends StatementInstrumentation {\n+\n+        public GetUpdateCountInstrumentation(ElasticApmTracer tracer) {\n+            super(tracer,\n+                named(\"getUpdateCount\")\n+                    .and(takesArguments(0))\n+                    .and(isPublic())\n+            );\n+        }\n+\n+        @Advice.OnMethodEnter(suppress = Throwable.class)\n+        private static int onEnter(@Advice.This Statement statement) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE5NDIyMg=="}, "originalCommit": {"oid": "16846a29f300d63f94b07a71f21c288c1dd447d5"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 277, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}