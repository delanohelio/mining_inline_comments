{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MDQ4NTE3", "number": 1593, "title": "Add bootstrap checks", "bodyText": "What does this PR do?\nAdds the following bootstrap checks:\n\nif -Xverify:none or -noverify flags are set, the agent will log: WARNING: -Xverify:none and -noverify are not supported by Elastic APM Agent. In future versions, the Elastic APM Agent will not start when these flags are set, unless the system property \u2018elastic.apm.disable_bootstrap_checks\u2019 is set to \u2018true\u2019. The intention is to disable the agent a couple of releases following the release that includes this PR.\nif G1GC is used with Java 8 lower than update 181, the agent will issue a warning message, saying that a related issue that is known to cause crashes was fixed in 181.\n\nJust to emphasize that crashes caused by disabled verification is not a hypothetical problem:\nPeople observe crashes in real applications and ask questions on Stack Overflow:\nhttps://stackoverflow.com/questions/40321205/jvm-crash-problematic-frame-canonicalizerdo-if\nhttps://stackoverflow.com/questions/58855063/jvm-exception-access-violation-crash-in-spring-boot-application\nA good blog post on the topic:\nhttps://blogs.oracle.com/buck/never-disable-bytecode-verification-in-a-production-system\nAnd a thread by Alexey Shipilev:\nhttps://twitter.com/shipilev/status/1134422174163505152\nChecklist\n\n\n I have updated CHANGELOG.asciidoc - should be mentioned as a breaking change\n I have added tests that prove my fix is effective or that my feature works\n I have updated the supported Java versions section in supported technologies page to indicate those restrictions\n I have opened an issue with a proper future milestone to disable agent when -Xverify:none or -noverify flags are detected", "createdAt": "2020-12-28T11:09:08Z", "url": "https://github.com/elastic/apm-agent-java/pull/1593", "merged": true, "mergeCommit": {"oid": "96f5115e12f25f6e852f2194924b2f66aaaf9f6b"}, "closed": true, "closedAt": "2021-03-24T08:56:40Z", "author": {"login": "felixbarny"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqVUBmAH2gAyNTQ2MDQ4NTE3OjNlY2E5YzEzMjZmMThhOGRlNTdjOGE1ZjgxOWE1MTYwNzVlNWUyODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeGNuHMAH2gAyNTQ2MDQ4NTE3OjIzNzU0YzAxZDY0YzM4YzFlYjRlMWUwZDMzOWRhMjYwM2JiZjlhYTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3eca9c1326f18a8de57c8a5f819a516075e5e287", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/3eca9c1326f18a8de57c8a5f819a516075e5e287", "committedDate": "2020-12-27T17:51:56Z", "message": "Add bootstrap check for disabled bytecode verification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9822de21c599b91e9409aa93aec60bee1f724020", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/9822de21c599b91e9409aa93aec60bee1f724020", "committedDate": "2020-12-28T11:09:46Z", "message": "Add changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bbad0e18ea9be5e54dd2b77a16558d24b85ec2b", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/2bbad0e18ea9be5e54dd2b77a16558d24b85ec2b", "committedDate": "2020-12-28T11:28:17Z", "message": "Fix Javadoc reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MTIxODYx", "url": "https://github.com/elastic/apm-agent-java/pull/1593#pullrequestreview-559121861", "createdAt": "2020-12-28T12:19:48Z", "commit": {"oid": "2bbad0e18ea9be5e54dd2b77a16558d24b85ec2b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3f5891619fb5cb442344a467fd70c6bc78cdb5", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/bc3f5891619fb5cb442344a467fd70c6bc78cdb5", "committedDate": "2021-02-11T15:23:48Z", "message": "Merge remote-tracking branch 'origin/master' into noverify-bootstrap-check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5978db007a50e0491da18746e08bc5e029f9271f", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/5978db007a50e0491da18746e08bc5e029f9271f", "committedDate": "2021-02-11T15:24:14Z", "message": "Add warning bootstrap checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad4e1b0cd0cc080feb4180cec6d3b2bbffe7b7c", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/cad4e1b0cd0cc080feb4180cec6d3b2bbffe7b7c", "committedDate": "2021-02-11T15:29:52Z", "message": "Fix test, update changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eba135c2f218d2fab4c6a2eac85dca5fc633dbba", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/eba135c2f218d2fab4c6a2eac85dca5fc633dbba", "committedDate": "2021-02-11T15:30:39Z", "message": "Merge remote-tracking branch 'origin/master' into noverify-bootstrap-check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "889bcef769031bbea586ce188bd0f6e2b5604199", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/889bcef769031bbea586ce188bd0f6e2b5604199", "committedDate": "2021-02-15T17:32:25Z", "message": "Fix logic error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94860f15e49ce6ecfef45e82a7445e336960f820", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/94860f15e49ce6ecfef45e82a7445e336960f820", "committedDate": "2021-02-16T06:41:22Z", "message": "Fix javadoc error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjEyMTk1Mzkz", "url": "https://github.com/elastic/apm-agent-java/pull/1593#pullrequestreview-612195393", "createdAt": "2021-03-15T13:34:46Z", "commit": {"oid": "94860f15e49ce6ecfef45e82a7445e336960f820"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzozNDo0NlrOI2zjMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNVQxMzozNzoxNVrOI2zq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDMzODYxMQ==", "bodyText": "[question] so the current state here is that those JVM versions are not supported out of the box in JavaVersionBootstrapCheck, but just in case the bootstraps checks are disabled we still apply the startup delay.\nWould it make sense to have all those per-version checks all done in JavaVersionBootstrapCheck so that everything that is related to JVM version is within the same class ? (Might be enough as static method though).", "url": "https://github.com/elastic/apm-agent-java/pull/1593#discussion_r594338611", "createdAt": "2021-03-15T13:34:46Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/AgentMain.java", "diffHunk": "@@ -130,12 +108,13 @@ public synchronized static void init(String agentArguments, Instrumentation inst\n      * @return {@code true} for any Java 7 and early Java 8 HotSpot JVMs, {@code false} for all others\n      */\n     static boolean shouldDelayOnPremain() {\n-        int majorVersion = JvmRuntimeInfo.getMajorVersion();\n+        JvmRuntimeInfo runtimeInfo = JvmRuntimeInfo.ofCurrentVM();\n+        int majorVersion = runtimeInfo.getMajorVersion();\n         return\n             (majorVersion == 7) ||\n             // In case bootstrap checks were disabled\n-            (majorVersion == 8 && JvmRuntimeInfo.isHpUx() && JvmRuntimeInfo.getUpdateVersion() < 2) ||\n-            (majorVersion == 8 && JvmRuntimeInfo.isHotSpot() && JvmRuntimeInfo.getUpdateVersion() < 40);\n+            (majorVersion == 8 && runtimeInfo.isHotSpot() && runtimeInfo.getUpdateVersion() < 2) ||\n+            (majorVersion == 8 && runtimeInfo.isHotSpot() && runtimeInfo.getUpdateVersion() < 40);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94860f15e49ce6ecfef45e82a7445e336960f820"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM0MDYwMg==", "bodyText": "[minor] could probably be made package-private.", "url": "https://github.com/elastic/apm-agent-java/pull/1593#discussion_r594340602", "createdAt": "2021-03-15T13:37:15Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-premain/src/main/java/co/elastic/apm/agent/premain/JavaVersionBootstrapCheck.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.premain;\n+\n+import java.util.List;\n+\n+/**\n+ * Gracefully abort agent startup is better than unexpected failure down the road when we known a given JVM\n+ * version is not supported. Agent might trigger known JVM bugs causing JVM crashes, notably on early Java 8\n+ * versions (but fixed in later versions), given those versions are obsolete and agent can't have workarounds\n+ * for JVM internals, there is no other option but to use an up-to-date JVM instead.\n+ */\n+public class JavaVersionBootstrapCheck implements BootstrapCheck {\n+\n+    private final JvmRuntimeInfo runtimeInfo;\n+\n+    public JavaVersionBootstrapCheck(JvmRuntimeInfo runtimeInfo) {\n+        this.runtimeInfo = runtimeInfo;\n+    }\n+\n+    @Override\n+    public void doBootstrapCheck(BootstrapCheckResult result) {\n+        if (!isJavaVersionSupported()) {\n+            result.addError(String.format(\"JVM version not supported: %s\", runtimeInfo));\n+        }\n+    }\n+\n+    /**\n+     * Checks if a given version of the JVM is likely supported by this agent.\n+     * <br>\n+     * Supports values provided before and after https://openjdk.java.net/jeps/223, in case parsing fails due to an\n+     * unknown version format, we assume it's supported, thus this method might return false positives, but never false\n+     * negatives.\n+     *\n+     * @return true if the version is supported, false otherwise\n+     */\n+    public boolean isJavaVersionSupported() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94860f15e49ce6ecfef45e82a7445e336960f820"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23754c01d64c38c1eb4e1e0d339da2603bbf9aa3", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/23754c01d64c38c1eb4e1e0d339da2603bbf9aa3", "committedDate": "2021-03-24T08:51:04Z", "message": "Merge branch 'master' into noverify-bootstrap-check"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3647, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}