{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMTgzNDUx", "number": 1349, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOTowNDozMVrOEbeOCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozNjo0MVrOEeShFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjQyMTIyOnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwOTowNDozMVrOHFa9Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDoyNjoxMFrOHJ7EkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ0NjU5NQ==", "bodyText": "[question] why do we have to use raw type here ? maybe add a small comment.", "url": "https://github.com/elastic/apm-agent-java/pull/1349#discussion_r475446595", "createdAt": "2020-08-24T09:04:31Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -448,7 +448,7 @@ private static void validateAdvice(Class<?> adviceClass) {\n         }\n         for (MethodDescription.InDefinedShape exitAdvice : typeDescription.getDeclaredMethods().filter(isStatic().and(isAnnotatedWith(Advice.OnMethodExit.class)))) {\n             validateAdviceReturnAndParameterTypes(exitAdvice);\n-            if (exitAdvice.getReturnType().getTypeName().startsWith(\"co.elastic.apm\")) {\n+            if (exitAdvice.getReturnType().asRawType().getTypeName().startsWith(\"co.elastic.apm\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee04f0d3f7f36378b2680726064ebff5e849b1c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwNTYzNQ==", "bodyText": "This is to avoid that the type gets resolved (leading to exceptions). That part of the code will change once we merge in the changes you made for WebFlux. So adding a comment would make merging trickier.", "url": "https://github.com/elastic/apm-agent-java/pull/1349#discussion_r480105635", "createdAt": "2020-08-31T12:46:12Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -448,7 +448,7 @@ private static void validateAdvice(Class<?> adviceClass) {\n         }\n         for (MethodDescription.InDefinedShape exitAdvice : typeDescription.getDeclaredMethods().filter(isStatic().and(isAnnotatedWith(Advice.OnMethodExit.class)))) {\n             validateAdviceReturnAndParameterTypes(exitAdvice);\n-            if (exitAdvice.getReturnType().getTypeName().startsWith(\"co.elastic.apm\")) {\n+            if (exitAdvice.getReturnType().asRawType().getTypeName().startsWith(\"co.elastic.apm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ0NjU5NQ=="}, "originalCommit": {"oid": "1ee04f0d3f7f36378b2680726064ebff5e849b1c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2NzA1Nw==", "bodyText": "Thank you for taking care of making other's PRs easier to merge !!", "url": "https://github.com/elastic/apm-agent-java/pull/1349#discussion_r480167057", "createdAt": "2020-08-31T14:26:10Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -448,7 +448,7 @@ private static void validateAdvice(Class<?> adviceClass) {\n         }\n         for (MethodDescription.InDefinedShape exitAdvice : typeDescription.getDeclaredMethods().filter(isStatic().and(isAnnotatedWith(Advice.OnMethodExit.class)))) {\n             validateAdviceReturnAndParameterTypes(exitAdvice);\n-            if (exitAdvice.getReturnType().getTypeName().startsWith(\"co.elastic.apm\")) {\n+            if (exitAdvice.getReturnType().asRawType().getTypeName().startsWith(\"co.elastic.apm\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ0NjU5NQ=="}, "originalCommit": {"oid": "1ee04f0d3f7f36378b2680726064ebff5e849b1c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwMTk2MTE4OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/ApacheHttpAsyncClientInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjozNjo0MVrOHJ3BBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxMjo0Njo0MVrOHJ3Vng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwMDYxNA==", "bodyText": "[minor] helper instance might be private", "url": "https://github.com/elastic/apm-agent-java/pull/1349#discussion_r480100614", "createdAt": "2020-08-31T12:36:41Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/ApacheHttpAsyncClientInstrumentation.java", "diffHunk": "@@ -102,12 +84,14 @@ public ApacheHttpAsyncClientInstrumentation(ElasticApmTracer tracer) {\n     }\n \n     public static class ApacheHttpAsyncClientAdvice {\n+        public static ApacheHttpAsyncClientHelper asyncHelper = new ApacheHttpAsyncClientHelper();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ee04f0d3f7f36378b2680726064ebff5e849b1c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwNTg4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static ApacheHttpAsyncClientHelper asyncHelper = new ApacheHttpAsyncClientHelper();\n          \n          \n            \n                    private static ApacheHttpAsyncClientHelper asyncHelper = new ApacheHttpAsyncClientHelper();", "url": "https://github.com/elastic/apm-agent-java/pull/1349#discussion_r480105886", "createdAt": "2020-08-31T12:46:41Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-apache-httpclient-plugin/src/main/java/co/elastic/apm/agent/httpclient/ApacheHttpAsyncClientInstrumentation.java", "diffHunk": "@@ -102,12 +84,14 @@ public ApacheHttpAsyncClientInstrumentation(ElasticApmTracer tracer) {\n     }\n \n     public static class ApacheHttpAsyncClientAdvice {\n+        public static ApacheHttpAsyncClientHelper asyncHelper = new ApacheHttpAsyncClientHelper();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDEwMDYxNA=="}, "originalCommit": {"oid": "1ee04f0d3f7f36378b2680726064ebff5e849b1c"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 211, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}