{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyNjMyNjgx", "number": 1391, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxODozNFrOEhj1iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxODozNFrOEhj1iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjI1NjA5OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/HttpUrlConnectionInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODoxODozNFrOHO8Bcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwODo0MjozMlrOHO8-aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNTUyMw==", "bodyText": "Creating a subclass of ThreadLocal causes leaks. See also https://cwiki.apache.org/confluence/display/TOMCAT/MemoryLeakProtection#MemoryLeakProtection-customThreadLocal.\nEither use no initial value or use CallDepth which seems to be applicable to this case.", "url": "https://github.com/elastic/apm-agent-java/pull/1391#discussion_r485425523", "createdAt": "2020-09-09T08:18:34Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/HttpUrlConnectionInstrumentation.java", "diffHunk": "@@ -51,8 +50,15 @@\n \n public abstract class HttpUrlConnectionInstrumentation extends TracerAwareInstrumentation {\n \n-    @VisibleForAdvice\n-    public static final WeakConcurrentMap<HttpURLConnection, Span> inFlightSpans = WeakMapSupplier.createMap();\n+    private static final WeakConcurrentMap<HttpURLConnection, Span> inFlightSpans = WeakMapSupplier.createMap();\n+\n+    // Used instead of inspecting sun.net.www.protocol.http.HttpURLConnection.connecting which was added in Java 8\n+    private static final ThreadLocal<Boolean> connecting = new ThreadLocal<>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71205a0794ea28df8d895bad4ae5cc1145bf97b2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ0MTEyOA==", "bodyText": "Ahh, the anonymous class...\nThanks!", "url": "https://github.com/elastic/apm-agent-java/pull/1391#discussion_r485441128", "createdAt": "2020-09-09T08:42:32Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-urlconnection-plugin/src/main/java/co/elastic/apm/agent/urlconnection/HttpUrlConnectionInstrumentation.java", "diffHunk": "@@ -51,8 +50,15 @@\n \n public abstract class HttpUrlConnectionInstrumentation extends TracerAwareInstrumentation {\n \n-    @VisibleForAdvice\n-    public static final WeakConcurrentMap<HttpURLConnection, Span> inFlightSpans = WeakMapSupplier.createMap();\n+    private static final WeakConcurrentMap<HttpURLConnection, Span> inFlightSpans = WeakMapSupplier.createMap();\n+\n+    // Used instead of inspecting sun.net.www.protocol.http.HttpURLConnection.connecting which was added in Java 8\n+    private static final ThreadLocal<Boolean> connecting = new ThreadLocal<>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQyNTUyMw=="}, "originalCommit": {"oid": "71205a0794ea28df8d895bad4ae5cc1145bf97b2"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 31, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}