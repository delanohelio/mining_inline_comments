{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjI0MjQ4", "number": 1203, "title": "Jul deadlock workaround", "bodyText": "An alternative workaround for the JULI deadlock reported at #954.\nThe deadlock fix was verified using the following test (where uncommenting the first line eliminates it):\n    public static void main(String[] args) throws InterruptedException {\n        // java.util.logging.Logger.getLogger(\"noop\");\n        ExecutorService executorService = Executors.newFixedThreadPool(2);\n        System.setProperty(\"java.util.logging.config.class\", \"Logging enabled\");\n        executorService.submit(() -> new URL(\"http://www.elastic.co\").openConnection());\n        executorService.submit(ManagementFactory::getPlatformMBeanServer);\n        executorService.shutdown();\n        executorService.awaitTermination(5, TimeUnit.SECONDS);\n    }\n\nNo side effects are expected with this, as this only initializes the Logger manager a bit before it would be initialized anyway.\nCloses #1202", "createdAt": "2020-05-26T13:59:12Z", "url": "https://github.com/elastic/apm-agent-java/pull/1203", "merged": true, "mergeCommit": {"oid": "4067420042466fd20ef704f82d6535c85fd09caa"}, "closed": true, "closedAt": "2020-05-31T08:19:32Z", "author": {"login": "eyalkoren"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckYWgyAH2gAyNDIzMjI0MjQ4OmJmNDlhYmZkOTM3OTNiZDYwZTVkNjBhOGM2MmU0ZDg4N2RiYzk3NmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmnNs2AH2gAyNDIzMjI0MjQ4OjUyNTU5MmY0NmU0MjBiMTg5ZjUwZmMwMWUxYTM1OWFkYTFiMmU0Yzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf49abfd93793bd60e5d60a8c62e4d887dbc976d", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/bf49abfd93793bd60e5d60a8c62e4d887dbc976d", "committedDate": "2020-05-24T09:49:40Z", "message": "Allow non-integer port to support Ingres/Actian"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d02eecb82a9285cf05f3840d1457e78fb82e051", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/6d02eecb82a9285cf05f3840d1457e78fb82e051", "committedDate": "2020-05-24T09:54:42Z", "message": "Test with numeric port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43c35c71b154fc35abf5a1ff832fec14abad2a79", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/43c35c71b154fc35abf5a1ff832fec14abad2a79", "committedDate": "2020-05-24T10:31:34Z", "message": "Make generic and add to chengelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ed16f705f6c8ef6250cbd5e5bf77d163c2596f", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/55ed16f705f6c8ef6250cbd5e5bf77d163c2596f", "committedDate": "2020-05-26T05:10:59Z", "message": "Merge remote-tracking branch 'upstream/master' into ingres-jdbc-port-parsing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86bf6c6b072c7d38c8fe46a59027b9c351d41dc5", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/86bf6c6b072c7d38c8fe46a59027b9c351d41dc5", "committedDate": "2020-05-26T05:11:40Z", "message": "Accept CHANGELOG suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e72ae8e79fd3b2851dbc301cdd6148919082639", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/9e72ae8e79fd3b2851dbc301cdd6148919082639", "committedDate": "2020-05-26T13:54:04Z", "message": "Alternative workaround for the JULI deadlock"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90929f5138a09ce376d7cf5b1cc3eb8ec45c4282", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/90929f5138a09ce376d7cf5b1cc3eb8ec45c4282", "committedDate": "2020-05-26T13:59:43Z", "message": "Merge remote-tracking branch 'upstream/master' into jul-deadlock-workaround"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MzM5MzY5", "url": "https://github.com/elastic/apm-agent-java/pull/1203#pullrequestreview-418339369", "createdAt": "2020-05-26T14:12:17Z", "commit": {"oid": "90929f5138a09ce376d7cf5b1cc3eb8ec45c4282"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxMjoxN1rOGagMrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxMjoxN1rOGagMrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0MzY5NQ==", "bodyText": "I'm pretty sure that this will fail the JBoss integration tests. JBoss needs to be able to set the java.util.logging.manager system property to override the default LogManager.\nSee also\n\n  \n    \n      apm-agent-java/apm-agent-plugins/apm-jmx-plugin/src/main/java/co/elastic/apm/agent/jmx/JmxMetricTracker.java\n    \n    \n        Lines 96 to 144\n      in\n      96b7d60\n    \n    \n    \n    \n\n        \n          \n           private synchronized void tryInit() { \n        \n\n        \n          \n               if (this.server != null || this.logManagerPropertyPoller != null) { \n        \n\n        \n          \n                   return; \n        \n\n        \n          \n               } \n        \n\n        \n          \n               // Avoid creating the platform MBean server, only get it if already initialized \n        \n\n        \n          \n               // otherwise WildFly fails to start with a IllegalStateException: \n        \n\n        \n          \n               // WFLYLOG0078: The logging subsystem requires the log manager to be org.jboss.logmanager.LogManager \n        \n\n        \n          \n               if (setsCustomLogManager()) { \n        \n\n        \n          \n                   if (!MBeanServerFactory.findMBeanServer(null).isEmpty()) { \n        \n\n        \n          \n                       // platform MBean server is already initialized \n        \n\n        \n          \n                       init(MBeanServerFactory.findMBeanServer(null).get(0)); \n        \n\n        \n          \n                   } else { \n        \n\n        \n          \n                       deferInit(); \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                   init(ManagementFactory.getPlatformMBeanServer()); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           private void deferInit() { \n        \n\n        \n          \n               logger.debug(\"Deferring initialization of JMX metric tracking until log manager is initialized\"); \n        \n\n        \n          \n               Thread thread = new Thread(new Runnable() { \n        \n\n        \n          \n            \n        \n\n        \n          \n                   private final long timeout = System.currentTimeMillis() + TimeUnit.MINUTES.toMillis(5); \n        \n\n        \n          \n            \n        \n\n        \n          \n                   @Override \n        \n\n        \n          \n                   public void run() { \n        \n\n        \n          \n                       while (!Thread.currentThread().isInterrupted() || timeout <= System.currentTimeMillis()) { \n        \n\n        \n          \n                           if (System.getProperty(\"java.util.logging.manager\") != null || !MBeanServerFactory.findMBeanServer(null).isEmpty()) { \n        \n\n        \n          \n                               init(ManagementFactory.getPlatformMBeanServer()); \n        \n\n        \n          \n                               return; \n        \n\n        \n          \n                           } \n        \n\n        \n          \n                           try { \n        \n\n        \n          \n                               Thread.sleep(500); \n        \n\n        \n          \n                           } catch (InterruptedException e) { \n        \n\n        \n          \n                               Thread.currentThread().interrupt(); \n        \n\n        \n          \n                           } \n        \n\n        \n          \n                       } \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               }); \n        \n\n        \n          \n               thread.setName(\"elastic-apm-jmx-init\"); \n        \n\n        \n          \n               thread.setDaemon(true); \n        \n\n        \n          \n               thread.start(); \n        \n\n        \n          \n               logManagerPropertyPoller = thread; \n        \n\n        \n          \n           } \n        \n\n        \n          \n            \n        \n\n        \n          \n           private boolean setsCustomLogManager() { \n        \n\n        \n          \n               return ClassLoader.getSystemClassLoader().getResource(\"org/jboss/modules/Main.class\") != null; \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI assume because the health check runs in a background thread, JBoss has enough time to init the log manager. Maybe we can make the above more code more generic and fire the start lifecycle event only after java.util.logging.manager has been set if running on JBoss and fire immediately otherwise.", "url": "https://github.com/elastic/apm-agent-java/pull/1203#discussion_r430443695", "createdAt": "2020-05-26T14:12:17Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracerBuilder.java", "diffHunk": "@@ -153,6 +155,21 @@ public ElasticApmTracer build() {\n         return tracer;\n     }\n \n+    /**\n+     * A noop method aimed for working around the JULI deadlock reported at https://github.com/elastic/apm-agent-java/issues/954.\n+     * The main thread creates an {@link ApmServerClient} and then starts the Tracer, which start the {@link LifecycleListener}s.\n+     * One of the listeners is the JMX metric tracker, that initializes the JUL mechanism. Concurrently, another thread is\n+     * doing healthcheck with the APM server (kicked from the {@link ApmServerClient}), and this may cause a deadlock.\n+     * Calling this method before both, should prevent this deadlock.\n+     */\n+    private void initializeJavaUtilLogging() {\n+        try {\n+            java.util.logging.Logger.getLogger(\"noop\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90929f5138a09ce376d7cf5b1cc3eb8ec45c4282"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71010a8fc91677a020a94b0012523bb032b18066", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/71010a8fc91677a020a94b0012523bb032b18066", "committedDate": "2020-05-27T08:46:41Z", "message": "Synchronizing health check and MBeanServer lookup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d33e48503025039be95fc8d21ef48d55f240aed4", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/d33e48503025039be95fc8d21ef48d55f240aed4", "committedDate": "2020-05-27T08:51:41Z", "message": "Removing Logging initialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MDQ5Mjc5", "url": "https://github.com/elastic/apm-agent-java/pull/1203#pullrequestreview-419049279", "createdAt": "2020-05-27T10:12:25Z", "commit": {"oid": "d33e48503025039be95fc8d21ef48d55f240aed4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5013af0cd9706c62556778949ef29efda75e93e7", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/5013af0cd9706c62556778949ef29efda75e93e7", "committedDate": "2020-05-31T08:11:53Z", "message": "Merge remote-tracking branch 'upstream/master' into jul-deadlock-workaround"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525592f46e420b189f50fc01e1a359ada1b2e4c9", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/525592f46e420b189f50fc01e1a359ada1b2e4c9", "committedDate": "2020-05-31T08:16:28Z", "message": "Add to changelog"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3993, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}