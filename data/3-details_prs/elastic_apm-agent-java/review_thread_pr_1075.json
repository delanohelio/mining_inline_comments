{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzI1ODAy", "number": 1075, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo0ODozN1rODlUbOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzoyNzo1OFrODla-0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDU4NTU1OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo0ODozN1rOFyJOLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo0Njo1MFrOFyKt1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyNDIwNQ==", "bodyText": "One of our Tomcat tests fails due to the version called: 1.8.0_72-internal \ud83d\ude41", "url": "https://github.com/elastic/apm-agent-java/pull/1075#discussion_r388124205", "createdAt": "2020-03-05T07:48:37Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "diffHunk": "@@ -90,6 +98,43 @@ public synchronized static void init(String agentArguments, Instrumentation inst\n         }\n     }\n \n+    /**\n+     * Checks if a given version of the JVM is supported by this agent.\n+     * Supports values provided before and after https://openjdk.java.net/jeps/223\n+     *\n+     * @param javaVersion jvm version, from {@code System.getProperty(\"java.version\")}\n+     * @return true if the version is supported, false otherwise\n+     */\n+    // package-protected for testing\n+    static boolean isJavaVersionSupported(String javaVersion) {\n+        boolean postJsr223 = !javaVersion.startsWith(\"1.\");\n+        // new scheme introduced in java 9, thus we can use it as a shortcut\n+        if (postJsr223) {\n+            return true;\n+        }\n+\n+        char major = javaVersion.charAt(2);\n+        if (major < '7') {\n+            // given code is compiled with java 7, this one is unlikely in practice\n+            return false;\n+        } else if (major == '7' || major > '8') {\n+            return true;\n+        } else {\n+            // java 8\n+            int updateIndex = javaVersion.lastIndexOf(\"_\");\n+            if (updateIndex <= 0) {\n+                return false;\n+            } else {\n+                String updateVersion = javaVersion.substring(updateIndex + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963eed4280724a0a58c3aa9f1cfa96a87ce3df4b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0ODY5Mg==", "bodyText": "fixed in the last commit.", "url": "https://github.com/elastic/apm-agent-java/pull/1075#discussion_r388148692", "createdAt": "2020-03-05T08:46:50Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "diffHunk": "@@ -90,6 +98,43 @@ public synchronized static void init(String agentArguments, Instrumentation inst\n         }\n     }\n \n+    /**\n+     * Checks if a given version of the JVM is supported by this agent.\n+     * Supports values provided before and after https://openjdk.java.net/jeps/223\n+     *\n+     * @param javaVersion jvm version, from {@code System.getProperty(\"java.version\")}\n+     * @return true if the version is supported, false otherwise\n+     */\n+    // package-protected for testing\n+    static boolean isJavaVersionSupported(String javaVersion) {\n+        boolean postJsr223 = !javaVersion.startsWith(\"1.\");\n+        // new scheme introduced in java 9, thus we can use it as a shortcut\n+        if (postJsr223) {\n+            return true;\n+        }\n+\n+        char major = javaVersion.charAt(2);\n+        if (major < '7') {\n+            // given code is compiled with java 7, this one is unlikely in practice\n+            return false;\n+        } else if (major == '7' || major > '8') {\n+            return true;\n+        } else {\n+            // java 8\n+            int updateIndex = javaVersion.lastIndexOf(\"_\");\n+            if (updateIndex <= 0) {\n+                return false;\n+            } else {\n+                String updateVersion = javaVersion.substring(updateIndex + 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyNDIwNQ=="}, "originalCommit": {"oid": "963eed4280724a0a58c3aa9f1cfa96a87ce3df4b"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNDU5MTA5OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo1MDo1OVrOFyJRqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwNzo1MDo1OVrOFyJRqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEyNTA5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        System.err.println(String.format(\"Failed ot start agent - JVM version not supported: %s\", javaVersion));\n          \n          \n            \n                        System.err.println(String.format(\"Failed to start agent - JVM version not supported: %s\", javaVersion));", "url": "https://github.com/elastic/apm-agent-java/pull/1075#discussion_r388125096", "createdAt": "2020-03-05T07:50:59Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "diffHunk": "@@ -72,8 +72,16 @@ public synchronized static void init(String agentArguments, Instrumentation inst\n             // for example, Spring Boot restarts the application in dev mode\n             return;\n         }\n+\n+        String javaVersion = System.getProperty(\"java.version\");\n+        if (!isJavaVersionSupported(javaVersion)) {\n+            // gracefully abort agent startup is better than unexpected failure down the road\n+            System.err.println(String.format(\"Failed ot start agent - JVM version not supported: %s\", javaVersion));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "963eed4280724a0a58c3aa9f1cfa96a87ce3df4b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTY1OTY4OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzoyNzo1OFrOFyTbdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMzoyNzo1OFrOFyTbdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODI5MTQ0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // java 8\n          \n          \n            \n                        // HotSpot 8", "url": "https://github.com/elastic/apm-agent-java/pull/1075#discussion_r388291445", "createdAt": "2020-03-05T13:27:58Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/AgentMain.java", "diffHunk": "@@ -99,43 +105,52 @@ public synchronized static void init(String agentArguments, Instrumentation inst\n     }\n \n     /**\n-     * Checks if a given version of the JVM is supported by this agent.\n-     * Supports values provided before and after https://openjdk.java.net/jeps/223\n+     * Checks if a given version of the JVM is likely supported by this agent.\n+     * <br/>\n+     * Supports values provided before and after https://openjdk.java.net/jeps/223, in case parsing fails due to an\n+     * unknown version format, we assume it's supported, thus this method might return false positives, but never false\n+     * negatives.\n      *\n-     * @param javaVersion jvm version, from {@code System.getProperty(\"java.version\")}\n+     * @param version jvm version, from {@code System.getProperty(\"java.version\")}\n+     * @param vmName  jvm name, from {@code System.getProperty(\"java.vm.name\")}\n      * @return true if the version is supported, false otherwise\n      */\n     // package-protected for testing\n-    static boolean isJavaVersionSupported(String javaVersion) {\n-        boolean postJsr223 = !javaVersion.startsWith(\"1.\");\n+    static boolean isJavaVersionSupported(String version, String vmName) {\n+        boolean postJsr223 = !version.startsWith(\"1.\");\n         // new scheme introduced in java 9, thus we can use it as a shortcut\n         if (postJsr223) {\n             return true;\n         }\n \n-        char major = javaVersion.charAt(2);\n+        char major = version.charAt(2);\n         if (major < '7') {\n             // given code is compiled with java 7, this one is unlikely in practice\n             return false;\n         } else if (major == '7' || major > '8') {\n             return true;\n+        } else if (!vmName.contains(\"HotSpot(TM)\")) {\n+            // non-hotspot JVMs are not concerned (yet)\n+            return true;\n         } else {\n             // java 8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfd9b64878fb7a8285a1f6bedf8c6a8566a6bf07"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 224, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}