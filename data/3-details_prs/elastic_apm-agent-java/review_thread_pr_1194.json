{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTI2NDE5", "number": 1194, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjoyMjowNlrOD-EtPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjoyOTozMlrOD_ibPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDE1NDIwOnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjoyMjowNlrOGX80HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowMTowMFrOGYEUsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjgxMw==", "bodyText": "Better store frameworkName and frameworkVersion  in TransactionContext, as it's only relevant to transactions and doesn't increase the memory footprint for spans.", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427766813", "createdAt": "2020-05-20T06:22:06Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java", "diffHunk": "@@ -242,6 +242,12 @@ public boolean asChildOf(TraceContext child, Object ignore) {\n     @Nullable\n     private String serviceName;\n \n+    @Nullable\n+    private String frameworkName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4OTg0Mg==", "bodyText": "moved to TransactionContext", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427889842", "createdAt": "2020-05-20T10:01:00Z", "author": {"login": "kananindzya"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceContext.java", "diffHunk": "@@ -242,6 +242,12 @@ public boolean asChildOf(TraceContext child, Object ignore) {\n     @Nullable\n     private String serviceName;\n \n+    @Nullable\n+    private String frameworkName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NjgxMw=="}, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDE1NjQ1OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjoyMzowNVrOGX81hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjoyMzowNVrOGX81hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2NzE3Mg==", "bodyText": "\ud83d\udc4f", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427767172", "createdAt": "2020-05-20T06:23:05Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-spring-webmvc-plugin/src/main/java/co/elastic/apm/agent/spring/webmvc/SpringTransactionNameInstrumentation.java", "diffHunk": "@@ -129,6 +132,8 @@ static void setTransactionName(@Advice.Argument(2) Object handler) {\n                     if (logger.isDebugEnabled()) {\n                         logger.debug(\"Set name {} to transaction {}\", transaction.getNameAsString(), transaction.getTraceContext().getId());\n                     }\n+                    transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);\n+                    transaction.getTraceContext().setFrameworkVersion(SpringVersion.getVersion());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDE2ODQ4OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjoyODowNVrOGX89GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODowNToyM1rOGYXtLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg==", "bodyText": "Could we use co.elastic.apm.agent.util.VersionUtils#getVersionFromPomProperties to get the version? Remember to cache the version as this method is quite expensive. Probably best to cache with a WeakConcurrentMap with a class such as javax.ws.rs.GET.class as the key. That's necessary as there could be multiple JAX-RS versions in different wars in an app server.", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427769112", "createdAt": "2020-05-20T06:28:05Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +81,7 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwMDAzNw==", "bodyText": "Great! It's working!", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427900037", "createdAt": "2020-05-20T10:19:28Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +81,7 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg=="}, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNzQwNw==", "bodyText": "added. I added cache into JaxRsTransactionNameInstrumentation.", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r428207407", "createdAt": "2020-05-20T18:05:23Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +81,7 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getTraceContext().setFrameworkName(FRAMEWORK_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2OTExMg=="}, "originalCommit": {"oid": "dbc7eef69df885d3de8edf3cdc47013d58b01413"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1NDgyOnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDoxMVrOGYExvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODowNDoyNlrOGYXq-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzI3OQ==", "bodyText": "Don't forget to include in copyFrom and resetState", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r427897279", "createdAt": "2020-05-20T10:14:11Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java", "diffHunk": "@@ -57,6 +58,12 @@\n      */\n     private final User user = new User();\n \n+    @Nullable\n+    private String frameworkName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fecb0affce119a645aebfa499eab5fa73bbd9cb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwNjg0MQ==", "bodyText": "added", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r428206841", "createdAt": "2020-05-20T18:04:26Z", "author": {"login": "kananindzya"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/TransactionContext.java", "diffHunk": "@@ -57,6 +58,12 @@\n      */\n     private final User user = new User();\n \n+    @Nullable\n+    private String frameworkName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzI3OQ=="}, "originalCommit": {"oid": "1fecb0affce119a645aebfa499eab5fa73bbd9cb"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzQzODA0OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDozMToyNVrOGZ8uRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjozMzoxOFrOGaQWqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA==", "bodyText": "Test that the framework name has been set", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429862470", "createdAt": "2020-05-25T10:31:25Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "diffHunk": "@@ -258,6 +258,16 @@ public void testJaxRsTransactionNameFromPathAnnotationInheritanceEnabledOnResour\n         assertThat(actualTransactions.get(0).getNameAsString()).isEqualTo(\"GET /testInterface/test\");\n     }\n \n+    @Test\n+    public void testJaxRsFrameworkNameAndVersion() throws IOException {\n+        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n+\n+        doRequest(\"test\");\n+\n+        List<Transaction> actualTransactions = reporter.getTransactions();\n+        assertThat(actualTransactions).hasSize(1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NDkyNA==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429874924", "createdAt": "2020-05-25T11:03:22Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "diffHunk": "@@ -258,6 +258,16 @@ public void testJaxRsTransactionNameFromPathAnnotationInheritanceEnabledOnResour\n         assertThat(actualTransactions.get(0).getNameAsString()).isEqualTo(\"GET /testInterface/test\");\n     }\n \n+    @Test\n+    public void testJaxRsFrameworkNameAndVersion() throws IOException {\n+        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n+\n+        doRequest(\"test\");\n+\n+        List<Transaction> actualTransactions = reporter.getTransactions();\n+        assertThat(actualTransactions).hasSize(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1Mzk0Mw==", "bodyText": "added assertion on JaxWsTransactionNameInstrumentationTest", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430053943", "createdAt": "2020-05-25T19:25:05Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "diffHunk": "@@ -258,6 +258,16 @@ public void testJaxRsTransactionNameFromPathAnnotationInheritanceEnabledOnResour\n         assertThat(actualTransactions.get(0).getNameAsString()).isEqualTo(\"GET /testInterface/test\");\n     }\n \n+    @Test\n+    public void testJaxRsFrameworkNameAndVersion() throws IOException {\n+        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n+\n+        doRequest(\"test\");\n+\n+        List<Transaction> actualTransactions = reporter.getTransactions();\n+        assertThat(actualTransactions).hasSize(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4NDEwNg==", "bodyText": "I think I know why previously the framework has been reset. That's because for non-sampled transactions, we don't report the context. See also\n\n  \n    \n      apm-agent-java/apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/Transaction.java\n    \n    \n        Lines 211 to 214\n      in\n      28e6f45\n    \n    \n    \n    \n\n        \n          \n           public void beforeEnd(long epochMicros) { \n        \n\n        \n          \n               if (!isSampled()) { \n        \n\n        \n          \n                   context.resetState(); \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nTherefore, it's problematic to put the framework information into the TransactionContext. I think it's better to put it directly in Transaction.", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430184106", "createdAt": "2020-05-26T06:33:18Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/test/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentationTest.java", "diffHunk": "@@ -258,6 +258,16 @@ public void testJaxRsTransactionNameFromPathAnnotationInheritanceEnabledOnResour\n         assertThat(actualTransactions.get(0).getNameAsString()).isEqualTo(\"GET /testInterface/test\");\n     }\n \n+    @Test\n+    public void testJaxRsFrameworkNameAndVersion() throws IOException {\n+        config.getConfig(CoreConfiguration.class).getSampleRate().update(0.0, SpyConfiguration.CONFIG_SOURCE_NAME);\n+        ElasticApmAgent.initInstrumentation(tracer, ByteBuddyAgent.install());\n+\n+        doRequest(\"test\");\n+\n+        List<Transaction> actualTransactions = reporter.getTransactions();\n+        assertThat(actualTransactions).hasSize(1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2MjQ3MA=="}, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzQ1MDQxOnYy", "diffSide": "RIGHT", "path": "integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDozNTo0OVrOGZ81sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxOToyMTowOVrOGaIWpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2NDM2OQ==", "bodyText": "Doesn't seem to be used", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r429864369", "createdAt": "2020-05-25T10:35:49Z", "author": {"login": "felixbarny"}, "path": "integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java", "diffHunk": "@@ -62,4 +64,21 @@ public String getExpectedServiceName() {\n \n     public abstract void test(AbstractServletContainerIntegrationTest test) throws Exception;\n \n+    /**\n+     * Pretty print JsonNode\n+     *\n+     * @param jsonNode\n+     * @return\n+     */\n+    protected String prettyPrintJsonNode(JsonNode jsonNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA1MzAzMA==", "bodyText": "deleted", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430053030", "createdAt": "2020-05-25T19:21:09Z", "author": {"login": "kananindzya"}, "path": "integration-tests/application-server-integration-tests/src/test/java/co/elastic/apm/servlet/tests/TestApp.java", "diffHunk": "@@ -62,4 +64,21 @@ public String getExpectedServiceName() {\n \n     public abstract void test(AbstractServletContainerIntegrationTest test) throws Exception;\n \n+    /**\n+     * Pretty print JsonNode\n+     *\n+     * @param jsonNode\n+     * @return\n+     */\n+    protected String prettyPrintJsonNode(JsonNode jsonNode) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2NDM2OQ=="}, "originalCommit": {"oid": "803269ee0b4a49108c238fcdb1b288d8719e9ba1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTQ4NjMxOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjoyMDoxNVrOGaQC5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjowMjo0NlrOGbGDng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE3OTA0NA==", "bodyText": "This has to be public, as it needs to be visible from inlined advices", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430179044", "createdAt": "2020-05-26T06:20:15Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.plugin.api;\n+\n+public final class Utils {\n+\n+    private Utils() { }\n+\n+    protected static final String FRAMEWORK_NAME = \"API\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2Mzk2Ng==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r431063966", "createdAt": "2020-05-27T12:02:46Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-api-plugin/src/main/java/co/elastic/apm/agent/plugin/api/Utils.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.plugin.api;\n+\n+public final class Utils {\n+\n+    private Utils() { }\n+\n+    protected static final String FRAMEWORK_NAME = \"API\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE3OTA0NA=="}, "originalCommit": {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTUwOTEwOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNjoyOTozMlrOGaQQ4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMjowMjo0MFrOGbGDaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4MjYyNA==", "bodyText": "VersionUtils may return null. Avoid re-evaluating in this case.", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r430182624", "createdAt": "2020-05-26T06:29:32Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +89,13 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n+                String version = versionsCache.get(javax.ws.rs.GET.class);\n+                if (version == null) {\n+                    version = VersionUtils.getVersionFromPomProperties(javax.ws.rs.GET.class, GROUP_ID, ARTIFACT_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTA2MzkxMw==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1194#discussion_r431063913", "createdAt": "2020-05-27T12:02:40Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-jaxrs-plugin/src/main/java/co/elastic/apm/agent/jaxrs/JaxRsTransactionNameInstrumentation.java", "diffHunk": "@@ -79,6 +89,13 @@ private static void setTransactionName(@SimpleMethodSignature String signature,\n                     }\n                 }\n                 transaction.withName(transactionName, PRIO_HIGH_LEVEL_FRAMEWORK, false);\n+                transaction.getContext().setFrameworkName(FRAMEWORK_NAME);\n+                String version = versionsCache.get(javax.ws.rs.GET.class);\n+                if (version == null) {\n+                    version = VersionUtils.getVersionFromPomProperties(javax.ws.rs.GET.class, GROUP_ID, ARTIFACT_ID);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE4MjYyNA=="}, "originalCommit": {"oid": "4eb0309afff8492ea6117eb930b3bd793c44e829"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 323, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}