{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMDk5NTMz", "number": 1579, "title": "Using body buffer only if writing to it is finished", "bodyText": "What does this PR do?\n\n(hopefully) fixes #1566\nChecklist\n\n\n This is a bugfix\n\n I have updated CHANGELOG.asciidoc\n I have added tests that would fail without this fix", "createdAt": "2020-12-20T17:22:57Z", "url": "https://github.com/elastic/apm-agent-java/pull/1579", "merged": true, "mergeCommit": {"oid": "b12e374e294ad256c3e32bf513934d874f11656f"}, "closed": true, "closedAt": "2020-12-28T05:13:06Z", "author": {"login": "eyalkoren"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoErGPAH2gAyNTQzMDk5NTMzOmVlNWM5MmE5MzE2ZmVkZTk0NjE5YzY4Y2Q0YWUwZDRjZDZlNzQyZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqT9icAH2gAyNTQzMDk5NTMzOjA0NDczMDg1ZTcxYWVkMmNiOWRlODM5MDAwYzlkM2RhZTE2ZmFmNDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ee5c92a9316fede94619c68cd4ae0d4cd6e742de", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/ee5c92a9316fede94619c68cd4ae0d4cd6e742de", "committedDate": "2020-12-20T17:20:54Z", "message": "Using body buffer only if writing to it is finished"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f0d67598dde08576d5ea9b06aaabd63df7e23a4", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/5f0d67598dde08576d5ea9b06aaabd63df7e23a4", "committedDate": "2020-12-20T19:27:40Z", "message": "Reverting JUnit upgrade"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da1f82125e63eed5bb1dcd935e5c09840082ef58", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/da1f82125e63eed5bb1dcd935e5c09840082ef58", "committedDate": "2020-12-21T06:58:31Z", "message": "Restoring JUnit upgrade, it is not it :("}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjI1NjUz", "url": "https://github.com/elastic/apm-agent-java/pull/1579#pullrequestreview-556225653", "createdAt": "2020-12-21T09:03:35Z", "commit": {"oid": "da1f82125e63eed5bb1dcd935e5c09840082ef58"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOTowMzozNVrOIJQ_rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwOToxMjo0MVrOIJRP4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU4NjU0Mg==", "bodyText": "[question] What about returning a CharSequence for reading and an Appendable for writing instead of the CharBuffer itself ? Encapsulating the CharBuffer seems a good option here as it would prevent any call to .flip() when not expected.\nOne bonus here would be to not having to cast to Object in the test assertions.", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546586542", "createdAt": "2020-12-21T09:03:35Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/context/Request.java", "diffHunk": "@@ -187,9 +191,17 @@ public CharBuffer getBodyBuffer() {\n         }\n     }\n \n+    /**\n+     * Returns the body buffer if it was written to and writing to it was finished through {@link Request#endOfBufferInput()}\n+     * @return body buffer if it was written to and writing was finished; returns {@code null} otherwise.\n+     */\n     @Nullable\n     public CharBuffer getBodyBufferForSerialization() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da1f82125e63eed5bb1dcd935e5c09840082ef58"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU5MDY4OA==", "bodyText": "[minor] move comment to assertion description.", "url": "https://github.com/elastic/apm-agent-java/pull/1579#discussion_r546590688", "createdAt": "2020-12-21T09:12:41Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/test/java/org/example/stacktrace/ErrorCaptureTest.java", "diffHunk": "@@ -82,4 +84,34 @@ public NestedException(Throwable cause) {\n         }\n     }\n \n+    @Test\n+    void testTransactionContextTransfer() {\n+        final Transaction transaction = new Transaction(tracer);\n+        Request transactionRequest = transaction.getContext().getRequest()\n+            .withMethod(\"GET\")\n+            .addHeader(\"key\", \"value\");\n+        transactionRequest.withBodyBuffer().append(\"TEST\");\n+        transactionRequest.endOfBufferInput();\n+        final ErrorCapture errorCapture = new ErrorCapture(tracer).asChildOf(transaction);\n+        Request errorRequest = errorCapture.getContext().getRequest();\n+        assertThat(errorRequest.getMethod()).isEqualTo(\"GET\");\n+        assertThat(errorRequest.getHeaders().get(\"key\")).isEqualTo(\"value\");\n+        assertThat((Object)errorRequest.getBodyBufferForSerialization()).isNotNull();\n+        assertThat(errorRequest.getBodyBufferForSerialization().toString()).isEqualTo(\"TEST\");\n+    }\n+\n+    @Test\n+    void testTransactionContextTransferNonFinishedBody() {\n+        final Transaction transaction = new Transaction(tracer);\n+        Request transactionRequest = transaction.getContext().getRequest()\n+            .withMethod(\"GET\")\n+            .addHeader(\"key\", \"value\");\n+        transactionRequest.withBodyBuffer().append(\"TEST\");\n+        final ErrorCapture errorCapture = new ErrorCapture(tracer).asChildOf(transaction);\n+        Request errorRequest = errorCapture.getContext().getRequest();\n+        assertThat(errorRequest.getMethod()).isEqualTo(\"GET\");\n+        assertThat(errorRequest.getHeaders().get(\"key\")).isEqualTo(\"value\");\n+        // Since body capturing was not finished, we shouldn't copy it to the error capture", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da1f82125e63eed5bb1dcd935e5c09840082ef58"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a16d85b7c3286c5aa5b04523158460cfb369af7", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/2a16d85b7c3286c5aa5b04523158460cfb369af7", "committedDate": "2020-12-21T11:33:39Z", "message": "Apply review suggestions and add to CHANGELOG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809e49fee48e0b258a9bd7599f899f8be70d7230", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/809e49fee48e0b258a9bd7599f899f8be70d7230", "committedDate": "2020-12-21T11:37:52Z", "message": "Fix CHANGELOG indentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ebb94e1eef3f484acbfed5ac2df382038b7557b", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/6ebb94e1eef3f484acbfed5ac2df382038b7557b", "committedDate": "2020-12-22T05:15:32Z", "message": "Merge remote-tracking branch 'upstream/master' into body-buffer-handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04473085e71aed2cb9de839000c9d3dae16faf49", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/04473085e71aed2cb9de839000c9d3dae16faf49", "committedDate": "2020-12-27T16:17:28Z", "message": "Merge remote-tracking branch 'upstream/master' into body-buffer-handling"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3641, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}