{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4ODA1NTA2", "number": 1049, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NDozM1rODjIO2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NTo0N1rODjIRBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYxNjI3OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/AbstractLoggingInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NDozM1rOFuw0sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwODo0Njo1MlrOFwM_6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3ODczOA==", "bodyText": "unused import statement.", "url": "https://github.com/elastic/apm-agent-java/pull/1049#discussion_r384578738", "createdAt": "2020-02-26T15:44:33Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/AbstractLoggingInstrumentation.java", "diffHunk": "@@ -35,6 +35,7 @@\n import java.util.Collection;\n \n import static net.bytebuddy.matcher.ElementMatchers.nameContains;\n+import static net.bytebuddy.matcher.ElementMatchers.nameContainsIgnoreCase;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d5abf6220f5363fdc83d508961f8739d240f5a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4ODkzNg==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1049#discussion_r386088936", "createdAt": "2020-03-01T08:46:52Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/AbstractLoggingInstrumentation.java", "diffHunk": "@@ -35,6 +35,7 @@\n import java.util.Collection;\n \n import static net.bytebuddy.matcher.ElementMatchers.nameContains;\n+import static net.bytebuddy.matcher.ElementMatchers.nameContainsIgnoreCase;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3ODczOA=="}, "originalCommit": {"oid": "23d5abf6220f5363fdc83d508961f8739d240f5a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTYyMTgzOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4jLoggingInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo0NTo0N1rOFuw4TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwODo0ODoyMlrOFwNARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTY2MA==", "bodyText": "Probably nitpicking, but use replaceAll('!','.') and add a short comment to explain the 'why' and make it consistent with other place(s) it's done like this.", "url": "https://github.com/elastic/apm-agent-java/pull/1049#discussion_r384579660", "createdAt": "2020-02-26T15:45:47Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4jLoggingInstrumentation.java", "diffHunk": "@@ -37,7 +37,7 @@\n \n     @Override\n     public ElementMatcher<? super TypeDescription> getTypeMatcher() {\n-        return hasSuperType(named(\"org.apache.logging.log4j.Logger\")).and(not(hasSuperType(named(\"org.slf4j.Logger\"))));\n+        return hasSuperType(named(\"org.apache.logging.log4j.Logger\")).and(not(hasSuperType(named(\"org!slf4j!Logger\".replaceAll(\"!\", \".\")))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23d5abf6220f5363fdc83d508961f8739d240f5a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA4OTAzMA==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1049#discussion_r386089030", "createdAt": "2020-03-01T08:48:22Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4jLoggingInstrumentation.java", "diffHunk": "@@ -37,7 +37,7 @@\n \n     @Override\n     public ElementMatcher<? super TypeDescription> getTypeMatcher() {\n-        return hasSuperType(named(\"org.apache.logging.log4j.Logger\")).and(not(hasSuperType(named(\"org.slf4j.Logger\"))));\n+        return hasSuperType(named(\"org.apache.logging.log4j.Logger\")).and(not(hasSuperType(named(\"org!slf4j!Logger\".replaceAll(\"!\", \".\")))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3OTY2MA=="}, "originalCommit": {"oid": "23d5abf6220f5363fdc83d508961f8739d240f5a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 449, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}