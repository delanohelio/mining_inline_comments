{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTE2MzIz", "number": 1083, "title": "Add API keys support  for backend authentication", "bodyText": "What does this PR do?\nThis pull-request adds API keys support for backend authentication.\nAPI keys replace secret_token.\nSpecifications definitions are using Cucumber in order to provide a shared executable specification for all agents stored in https://github.com/elastic/apm/blob/master/tests/agents/gherkin-specs/api_key.feature\nChecklist\n\n My code follows the style guidelines of this project\n I have rebased my changes on top of the latest master branch\n I have made corresponding changes to the documentation\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n I have updated CHANGELOG.asciidoc\nI have updated supported-technologies.asciidoc\nAdded an API method or config option? Document in which version this will be introduced\nAdded an instrumentation plugin? How did you make sure that old, non-supported versions are not instrumented by accident?\n\nAuthor's Checklist\n\n Decide if specs is a proper package name for shared specifications tests\n\nRelated issues\nRelates to elastic/apm#183 (specification)", "createdAt": "2020-03-12T08:55:30Z", "url": "https://github.com/elastic/apm-agent-java/pull/1083", "merged": true, "mergeCommit": {"oid": "72e369e28eee923e94d7abac20fde06bdd95b39d"}, "closed": true, "closedAt": "2020-03-16T10:45:42Z", "author": {"login": "SylvainJuge"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMofJmAH2gAyMzg3MTE2MzIzOmVmYzk1Mzk5ODE1Y2ZlODk1ZjU1YjYyZDJjZjQ3YTIzMDI5MmY5N2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNS8tbAH2gAyMzg3MTE2MzIzOjNhMjU0YTlmZWYxYTY1NmZhOTExOTI4ZTg5NDU1YjM1YThhODFhZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "efc95399815cfe895f55b62d2cf47a230292f97f", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/efc95399815cfe895f55b62d2cf47a230292f97f", "committedDate": "2020-03-11T15:03:24Z", "message": "add shared specs for api keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a6064866cbc565d65bc776c4c02d5d6c421356d", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3a6064866cbc565d65bc776c4c02d5d6c421356d", "committedDate": "2020-03-12T08:47:36Z", "message": "add more steps, but still nothing impl. yet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a47202a8aec390a226fa084425bc1e7d284577", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/96a47202a8aec390a226fa084425bc1e7d284577", "committedDate": "2020-03-12T16:44:16Z", "message": "add test and implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MjMxNzE0", "url": "https://github.com/elastic/apm-agent-java/pull/1083#pullrequestreview-374231714", "createdAt": "2020-03-13T11:35:32Z", "commit": {"oid": "96a47202a8aec390a226fa084425bc1e7d284577"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTozNTozMlrOF2Ag4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMTozODo1NFrOF2AmMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NTg0MA==", "bodyText": "works fine as is but you could alternatively do SpyConfiguration.createSpyConfig().getConfig(ReporterConfiguration.class);.\nThis lets you avoid having to re-specify the default values (the just required to avoid NPEs step)", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392175840", "createdAt": "2020-03-13T11:35:32Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/test/java/specs/ApiKeysStepsDefinitions.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package specs;\n+\n+import co.elastic.apm.agent.configuration.converter.TimeDuration;\n+import co.elastic.apm.agent.report.ApmServerClient;\n+import co.elastic.apm.agent.report.HttpUtils;\n+import co.elastic.apm.agent.report.ReporterConfiguration;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;\n+import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;\n+import io.cucumber.java.After;\n+import io.cucumber.java.Before;\n+import io.cucumber.java.en.And;\n+import io.cucumber.java.en.Given;\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+import org.stagemonitor.configuration.ConfigurationOption;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.Collections;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Fail.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class ApiKeysStepsDefinitions {\n+\n+    // those constants should be provided by the gherkin test, not using hard-coded values\n+    // as it would require to update the test definition, we'll keep it as-is for now.\n+    private static final String SECRET_TOKEN = \"secr3tT0ken\";\n+    private static final String API_KEY = \"@p1Key\";\n+\n+    // so far, only reporter and it's configuration is being tested\n+    private ReporterConfiguration configuration = null;\n+\n+    private WireMockServer server = new WireMockServer(WireMockConfiguration.options()\n+        .extensions(new ResponseTemplateTransformer(false))\n+        .dynamicPort());\n+\n+    @Before\n+    public void init() {\n+        server.stubFor(get(urlEqualTo(\"/\"))\n+            .willReturn(aResponse()\n+                .withTransformers(\"response-template\")\n+                // just send back auth header (if any) for easy parsing on client side\n+                .withBody(\"{{request.headers.Authorization}}\")));\n+\n+        server.start();\n+    }\n+\n+    @After\n+    public void cleanup() {\n+        server.stop();\n+    }\n+\n+    // Init\n+\n+    @Given(\"an agent\")\n+    public void initAgent() {\n+        // we just initialize configuration as reporter is initialized lazily\n+        configuration = mock(ReporterConfiguration.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a47202a8aec390a226fa084425bc1e7d284577"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3NzIwMw==", "bodyText": "The step definitions look very nice and clean!", "url": "https://github.com/elastic/apm-agent-java/pull/1083#discussion_r392177203", "createdAt": "2020-03-13T11:38:54Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/test/java/specs/ApiKeysStepsDefinitions.java", "diffHunk": "@@ -0,0 +1,160 @@\n+package specs;\n+\n+import co.elastic.apm.agent.configuration.converter.TimeDuration;\n+import co.elastic.apm.agent.report.ApmServerClient;\n+import co.elastic.apm.agent.report.HttpUtils;\n+import co.elastic.apm.agent.report.ReporterConfiguration;\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.core.WireMockConfiguration;\n+import com.github.tomakehurst.wiremock.extension.responsetemplating.ResponseTemplateTransformer;\n+import io.cucumber.java.After;\n+import io.cucumber.java.Before;\n+import io.cucumber.java.en.And;\n+import io.cucumber.java.en.Given;\n+import io.cucumber.java.en.Then;\n+import io.cucumber.java.en.When;\n+import org.stagemonitor.configuration.ConfigurationOption;\n+\n+import javax.annotation.Nullable;\n+import java.io.IOException;\n+import java.net.HttpURLConnection;\n+import java.net.MalformedURLException;\n+import java.net.URL;\n+import java.util.Collections;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Fail.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class ApiKeysStepsDefinitions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96a47202a8aec390a226fa084425bc1e7d284577"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a4f04e0e9a626266ebe0354ed5a64efb9192375", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3a4f04e0e9a626266ebe0354ed5a64efb9192375", "committedDate": "2020-03-13T12:36:25Z", "message": "update changelog & doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8865a092c24ae40c35453e8bef70117edbc261e", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/b8865a092c24ae40c35453e8bef70117edbc261e", "committedDate": "2020-03-13T12:43:49Z", "message": "replace mock with a spy to benefit from defaults"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d7a78b24c8c61c37f42c283ce044bdec3e22dc", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/d0d7a78b24c8c61c37f42c283ce044bdec3e22dc", "committedDate": "2020-03-13T12:45:15Z", "message": "Merge branch 'master' into add-licia-keys"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf17fc1bf57b6f610a356c24b2d29dcd820b81b0", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/cf17fc1bf57b6f610a356c24b2d29dcd820b81b0", "committedDate": "2020-03-13T13:48:12Z", "message": "fix typo on maven profile name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9263a4fd421896dd70438eeb7459bebd08dd6265", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/9263a4fd421896dd70438eeb7459bebd08dd6265", "committedDate": "2020-03-13T14:17:42Z", "message": "update after improvement on API keys spec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a254a9fef1a656fa911928e89455b35a8a81af1", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3a254a9fef1a656fa911928e89455b35a8a81af1", "committedDate": "2020-03-13T16:31:42Z", "message": "update shared specs on CI & ensure test fail if mismatch"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3889, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}