{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTAxNTgx", "number": 1172, "title": "Keep spans active during AsyncHandler methods in AsyncHttpClient", "bodyText": "What does this PR do?\nCurrently, when using a custom AsyncHandler with the AsyncHttpClient, there is no active span in the callback methods.\nThis PR makes sure that span are activated when entering those methods making it possible for users to use tracing-context in those methods.\nChecklist\n\n\n My code follows the style guidelines of this project\n I have rebased my changes on top of the latest master branch\n\n\n\n I have made corresponding changes to the documentation\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n\n\n\n I have updated CHANGELOG.asciidoc\n I have updated supported-technologies.asciidoc\n Added an API method or config option? Document in which version this will be introduced\n Added an instrumentation plugin? How did you make sure that old, non-supported versions are not instrumented by accident?", "createdAt": "2020-05-04T18:07:07Z", "url": "https://github.com/elastic/apm-agent-java/pull/1172", "merged": true, "mergeCommit": {"oid": "fddb6457d40c94a66580a77b2faf6e47c7754838"}, "closed": true, "closedAt": "2020-05-08T07:29:37Z", "author": {"login": "milanvdm"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceDbIzAH2gAyNDEzMTAxNTgxOmMyY2Q4OWU5YjhlOGRiZmUxZWIyNmIxMjI4NjJlZWVjZTk5YjFlNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfMwX_AFqTQwODA1NDAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c2cd89e9b8e8dbfe1eb26b122862eeece99b1e79", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/c2cd89e9b8e8dbfe1eb26b122862eeece99b1e79", "committedDate": "2020-05-04T18:03:10Z", "message": "Keep span active in AsyncHandler methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/355f20c82c1619ab38d7ab6a7defef1ed3e14986", "committedDate": "2020-05-04T18:03:25Z", "message": "Add initial attempt for testing custom AsyncHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MjI0NzE3", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-405224717", "createdAt": "2020-05-04T18:07:50Z", "commit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNzo1MFrOGQMACg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODowNzo1MFrOGQMACg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNzAxOA==", "bodyText": "Not sure how to add a proper test making sure the context in the methods are active or not.", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419627018", "createdAt": "2020-05-04T18:07:50Z", "author": {"login": "milanvdm"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +46,32 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assert(tracer.currentTransaction() != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTEyNDIy", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-405512422", "createdAt": "2020-05-05T06:09:36Z", "commit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjowOTozNlrOGQbk9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoxNDo0NlrOGQbrTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjIyOA==", "bodyText": "remove from the map and assign to the span paramenter", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882228", "createdAt": "2020-05-05T06:09:36Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n+            final Span span = handlerSpanMap.getIfPresent(asyncHandler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjM5OA==", "bodyText": "Making sure that wrapped AsyncHandlers work as expected (activate and deactivate only in outer-most AsyncHandler\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n          \n          \n            \n                    private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882398", "createdAt": "2020-05-05T06:10:12Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjYzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler) {\n          \n          \n            \n                        final Span span = handlerSpanMap.remove(asyncHandler);\n          \n          \n            \n                    private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler, @Nullable @Advice.Local(\"span\") Span span) {", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882630", "createdAt": "2020-05-05T06:10:56Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n+            final Span span = handlerSpanMap.getIfPresent(asyncHandler);\n+            if (span != null) {\n+                span.activate();\n+            }\n+        }\n+\n+        @Advice.OnMethodExit(suppress = Throwable.class)\n+        private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler) {\n             final Span span = handlerSpanMap.remove(asyncHandler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4Mzg1Mw==", "bodyText": "Use AssertJ, for consistency\nAdd static import for org.assertj.core.api.Assertions.assertThat\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assert(tracer.currentTransaction() != null);\n          \n          \n            \n                        assertThat(tracer.activeSpan()).isNotNull();\n          \n          \n            \n                        assertThat(tracer.isExit()).isTrue();", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419883853", "createdAt": "2020-05-05T06:14:46Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +46,32 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assert(tracer.currentTransaction() != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8463d41e94ec236f685068dfe295196925f8fe04", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/8463d41e94ec236f685068dfe295196925f8fe04", "committedDate": "2020-05-05T06:50:43Z", "message": "Optimize passing span values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2eb4e5a7626d8e373c651de335e574d48d40d4b", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/b2eb4e5a7626d8e373c651de335e574d48d40d4b", "committedDate": "2020-05-05T06:50:55Z", "message": "Use assertj"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a", "committedDate": "2020-05-05T06:53:52Z", "message": "Add extra assertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTQ4MzYz", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-405548363", "createdAt": "2020-05-05T07:26:53Z", "commit": {"oid": "09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoyNjo1M1rOGQdbXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoyNjo1M1rOGQdbXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw==", "bodyText": "To double-check, do the tests fail when doing isNull()?", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419912543", "createdAt": "2020-05-05T07:26:53Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +47,35 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assertThat(tracer.currentTransaction()).isNotNull();\n+            assertThat(tracer.currentTransaction().isExit()).isTrue();\n+            return State.CONTINUE;\n+        }\n+\n+        @Override\n+        public void onThrowable(Throwable t) {\n+            assertThat(tracer.currentTransaction()).isNotNull();\n+            assertThat(tracer.currentTransaction().isExit()).isTrue();\n+        }\n+\n+        @Override\n+        public Response onCompleted(Response response) {\n+            assertThat(tracer.currentTransaction()).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e577d021e99458eadd574187b7e779a8d2fa4d4", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/2e577d021e99458eadd574187b7e779a8d2fa4d4", "committedDate": "2020-05-05T08:07:25Z", "message": "Update changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d088819d431fa254c434defabf23b30860938cf", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/3d088819d431fa254c434defabf23b30860938cf", "committedDate": "2020-05-05T09:42:56Z", "message": "Fix failing tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjM5MjA0", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-405639204", "createdAt": "2020-05-05T09:47:42Z", "commit": {"oid": "3d088819d431fa254c434defabf23b30860938cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo0Nzo0MlrOGQiDIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo0Nzo0MlrOGQiDIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4ODI1OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419988258", "createdAt": "2020-05-05T09:47:42Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -223,7 +223,7 @@ public AsyncHandlerOnStatusReceivedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span, @Advice.Argument(0) HttpResponseStatus status) {\n-            span = handlerSpanMap.remove(asyncHandler);\n+            span = handlerSpanMap.get(asyncHandler);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d088819d431fa254c434defabf23b30860938cf"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjQwNDY2", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-405640466", "createdAt": "2020-05-05T09:49:39Z", "commit": {"oid": "3d088819d431fa254c434defabf23b30860938cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo0OTozOVrOGQiHSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo0OTozOVrOGQiHSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4OTMyMw==", "bodyText": "Don't forget to deactivate it in all exit advices.", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419989323", "createdAt": "2020-05-05T09:49:39Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -178,8 +178,15 @@ public AsyncHandlerOnCompletedInstrumentation() {\n         }\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n-        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n-            final Span span = handlerSpanMap.remove(asyncHandler);\n+        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {\n+            span = handlerSpanMap.remove(asyncHandler);\n+            if (span != null) {\n+                span.activate();\n+            }\n+        }\n+\n+        @Advice.OnMethodExit(suppress = Throwable.class)\n+        private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler, @Nullable @Advice.Local(\"span\") Span span) {\n             if (span != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d088819d431fa254c434defabf23b30860938cf"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "766688ba75b4e66e685b7a26fbda536c7d4c1c5e", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/766688ba75b4e66e685b7a26fbda536c7d4c1c5e", "committedDate": "2020-05-05T10:00:46Z", "message": "Deactivate spans on exit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8fa295d0fb29f2ecc716f606c83602d87cdd1fb", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/a8fa295d0fb29f2ecc716f606c83602d87cdd1fb", "committedDate": "2020-05-07T14:35:20Z", "message": "Use getActive instead of currentTransaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cf8353ccd144b16652a18e759562b5b5e70c795", "author": {"user": {"login": "milanvdm", "name": "Milan van der Meer"}}, "url": "https://github.com/elastic/apm-agent-java/commit/4cf8353ccd144b16652a18e759562b5b5e70c795", "committedDate": "2020-05-07T14:36:20Z", "message": "Merge remote-tracking branch 'upstream/master' into instrument-on-complete-async-http"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MDU0MDE4", "url": "https://github.com/elastic/apm-agent-java/pull/1172#pullrequestreview-408054018", "createdAt": "2020-05-08T07:29:26Z", "commit": {"oid": "4cf8353ccd144b16652a18e759562b5b5e70c795"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3973, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}