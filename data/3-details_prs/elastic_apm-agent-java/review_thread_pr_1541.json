{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MTE0NTc5", "number": 1541, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NzowOFrOE9r-NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NzowOFrOE9r-NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTE5MDI5OnYy", "diffSide": "RIGHT", "path": ".ci/load/Jenkinsfile", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NzowOFrOH6girA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozMTowNVrOH8F49A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMjYyMA==", "bodyText": "I am worried about this line because I think it has the potential to overwrite the JDK that we download here on L79.", "url": "https://github.com/elastic/apm-agent-java/pull/1541#discussion_r531112620", "createdAt": "2020-11-26T15:47:08Z", "author": {"login": "cachedout"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -75,6 +79,15 @@ pipeline {\n                                 setEnvVar('JAVA_HOME', sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim())\n                                 setEnvVar('JAVACMD', \"${env.JAVA_HOME}/bin/java\")\n                                 setEnvVar('PATH', \"${env.JAVA_HOME}/bin:$PATH\")\n+\n+                                def jdk_major = sh(script: \".ci/load/scripts/java_major.sh ${params.jvm_version}\", returnStdout: true).trim())\n+                                def app_build_jdk = \"${env.JAVA_HOME}\"\n+                                if(jdk_major == '7'){\n+                                    // build application with a more recent JDK that don't have TLS issues\n+                                    app_build_jdk = sh(script: \".ci/load/scripts/fetch_sdk.sh zulu-8.0.272-linux\", returnStdout: true).trim()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "325929e88b12e29b2f77ec684a05a02ca62720f3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwMTEyMw==", "bodyText": "do you think of any better way to handle this ? We could maybe have a java7 folder alongside the java11 that is used to build the agent.", "url": "https://github.com/elastic/apm-agent-java/pull/1541#discussion_r532701123", "createdAt": "2020-11-30T15:53:35Z", "author": {"login": "SylvainJuge"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -75,6 +79,15 @@ pipeline {\n                                 setEnvVar('JAVA_HOME', sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim())\n                                 setEnvVar('JAVACMD', \"${env.JAVA_HOME}/bin/java\")\n                                 setEnvVar('PATH', \"${env.JAVA_HOME}/bin:$PATH\")\n+\n+                                def jdk_major = sh(script: \".ci/load/scripts/java_major.sh ${params.jvm_version}\", returnStdout: true).trim())\n+                                def app_build_jdk = \"${env.JAVA_HOME}\"\n+                                if(jdk_major == '7'){\n+                                    // build application with a more recent JDK that don't have TLS issues\n+                                    app_build_jdk = sh(script: \".ci/load/scripts/fetch_sdk.sh zulu-8.0.272-linux\", returnStdout: true).trim()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMjYyMA=="}, "originalCommit": {"oid": "325929e88b12e29b2f77ec684a05a02ca62720f3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3MzEwOA==", "bodyText": "I wonder if we could just generate have the script generate a randomly generated directory name so we can be (fairly) sure we're avoiding collisions? So, we'd modify the shell script to return java-7-mYRand0mStr? Either way, so long as it's unique, I think we'll be fine.", "url": "https://github.com/elastic/apm-agent-java/pull/1541#discussion_r532773108", "createdAt": "2020-11-30T17:31:05Z", "author": {"login": "cachedout"}, "path": ".ci/load/Jenkinsfile", "diffHunk": "@@ -75,6 +79,15 @@ pipeline {\n                                 setEnvVar('JAVA_HOME', sh(script: \".ci/load/scripts/fetch_sdk.sh ${params.jvm_version}\", returnStdout: true).trim())\n                                 setEnvVar('JAVACMD', \"${env.JAVA_HOME}/bin/java\")\n                                 setEnvVar('PATH', \"${env.JAVA_HOME}/bin:$PATH\")\n+\n+                                def jdk_major = sh(script: \".ci/load/scripts/java_major.sh ${params.jvm_version}\", returnStdout: true).trim())\n+                                def app_build_jdk = \"${env.JAVA_HOME}\"\n+                                if(jdk_major == '7'){\n+                                    // build application with a more recent JDK that don't have TLS issues\n+                                    app_build_jdk = sh(script: \".ci/load/scripts/fetch_sdk.sh zulu-8.0.272-linux\", returnStdout: true).trim()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMjYyMA=="}, "originalCommit": {"oid": "325929e88b12e29b2f77ec684a05a02ca62720f3"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}