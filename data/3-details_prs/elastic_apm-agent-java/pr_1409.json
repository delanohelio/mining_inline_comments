{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzM5NTI3", "number": 1409, "title": "lazy-load jdbc helper", "bodyText": "What does this PR do?\nJDBC instrumentation fails on some environments when active.\nThis appears to be a side-effect of migration to new plugin architecture introduced in version 1.18.0.\nWe haven't been able to reproduce this directly, but changes have been confirmed to work where it used to happen.\nChecklist\n\n This is a bugfix\n\n I have updated CHANGELOG.asciidoc\n I have added tests that would fail without this fix", "createdAt": "2020-09-18T14:07:10Z", "url": "https://github.com/elastic/apm-agent-java/pull/1409", "merged": true, "mergeCommit": {"oid": "2d2057ffdcd4439d6ff7d78c6ec3cf4ff5d5073c"}, "closed": true, "closedAt": "2020-09-29T14:42:25Z", "author": {"login": "SylvainJuge"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKGH4ZgH2gAyNDg5MzM5NTI3OmVmYzMzNjJkZWVhZTM3NzI2ZjJhNTBlM2Q3YWI2OTA2Yzc1ZDM1MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNpPKNgH2gAyNDg5MzM5NTI3OmEzMjAyOTRkNDgzYzNkMTI1NTRmNDAyYzg4NmMwZDcwOTU3OTdlZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "efc3362deeae37726f2a50e3d7ab6906c75d3500", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/efc3362deeae37726f2a50e3d7ab6906c75d3500", "committedDate": "2020-09-18T14:04:31Z", "message": "try to lazy-load jdbc helper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31bee805b5ef8da25a6788ebcca4ea3bd2ed85dc", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/31bee805b5ef8da25a6788ebcca4ea3bd2ed85dc", "committedDate": "2020-09-18T14:06:11Z", "message": "add comment on classloader check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDkzMDIx", "url": "https://github.com/elastic/apm-agent-java/pull/1409#pullrequestreview-493093021", "createdAt": "2020-09-22T02:28:01Z", "commit": {"oid": "31bee805b5ef8da25a6788ebcca4ea3bd2ed85dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoyODowMVrOHVoYvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoyODowMVrOHVoYvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MzgzOA==", "bodyText": "Does this contradict the actual fix of the lazy loading?\nMeaning - the lazy loading assumes that java.sql classes should be available to JDBC code when it is invoked and the problem is that they are not yet in the classpath when the instrumented class is loaded. If that's the case, the tested class loader will be excluded, even though it shouldn't be,", "url": "https://github.com/elastic/apm-agent-java/pull/1409#discussion_r492443838", "createdAt": "2020-09-22T02:28:01Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/JdbcInstrumentation.java", "diffHunk": "@@ -26,18 +26,37 @@\n \n import co.elastic.apm.agent.bci.TracerAwareInstrumentation;\n import co.elastic.apm.agent.jdbc.helper.JdbcHelper;\n+import net.bytebuddy.matcher.ElementMatcher;\n \n+import javax.annotation.Nullable;\n import java.util.Collection;\n import java.util.Collections;\n \n+import static co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass;\n+\n public abstract class JdbcInstrumentation extends TracerAwareInstrumentation {\n \n     private static final Collection<String> JDBC_GROUPS = Collections.singleton(\"jdbc\");\n \n-    protected static JdbcHelper jdbcHelper = new JdbcHelper();\n+    @Nullable\n+    private static JdbcHelper jdbcHelper;\n+\n+    @Override\n+    public ElementMatcher.Junction<ClassLoader> getClassLoaderMatcher() {\n+        return classLoaderCanLoadClass(\"java.sql.Statement\"); // in case java.sql module is not there\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31bee805b5ef8da25a6788ebcca4ea3bd2ed85dc"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4686e8d66e70941b82a720b4117e768b702468f6", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/4686e8d66e70941b82a720b4117e768b702468f6", "committedDate": "2020-09-23T07:06:12Z", "message": "remove useless check on available class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43165c971a0ef7d708e6f2d435b744b7c270e80d", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/43165c971a0ef7d708e6f2d435b744b7c270e80d", "committedDate": "2020-09-28T14:08:15Z", "message": "Merge branch 'master' into try-lazy-load-jdbchelper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NjM3NTU2", "url": "https://github.com/elastic/apm-agent-java/pull/1409#pullrequestreview-497637556", "createdAt": "2020-09-28T15:17:58Z", "commit": {"oid": "43165c971a0ef7d708e6f2d435b744b7c270e80d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxNzo1OFrOHZDSyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToxODo0NlrOHZDWZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzMDQxMA==", "bodyText": "Is that an indication that we should more strictly separate advices from element matches?", "url": "https://github.com/elastic/apm-agent-java/pull/1409#discussion_r496030410", "createdAt": "2020-09-28T15:17:58Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/JdbcInstrumentation.java", "diffHunk": "@@ -26,18 +26,32 @@\n \n import co.elastic.apm.agent.bci.TracerAwareInstrumentation;\n import co.elastic.apm.agent.jdbc.helper.JdbcHelper;\n+import net.bytebuddy.matcher.ElementMatcher;\n \n+import javax.annotation.Nullable;\n import java.util.Collection;\n import java.util.Collections;\n \n+import static co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass;\n+\n public abstract class JdbcInstrumentation extends TracerAwareInstrumentation {\n \n     private static final Collection<String> JDBC_GROUPS = Collections.singleton(\"jdbc\");\n \n-    protected static JdbcHelper jdbcHelper = new JdbcHelper();\n+    @Nullable\n+    private static JdbcHelper jdbcHelper;\n \n     @Override\n     public final Collection<String> getInstrumentationGroupNames() {\n         return JDBC_GROUPS;\n     }\n+\n+    protected synchronized static JdbcHelper getJdbcHelper() {\n+        // lazily initialize helper to prevent trying to load classes in java.sql package with the bootstrap classloader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43165c971a0ef7d708e6f2d435b744b7c270e80d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzMTMzNA==", "bodyText": "Use the double-checked locking pattern to avoid the synchronized overhead", "url": "https://github.com/elastic/apm-agent-java/pull/1409#discussion_r496031334", "createdAt": "2020-09-28T15:18:46Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/main/java/co/elastic/apm/agent/jdbc/JdbcInstrumentation.java", "diffHunk": "@@ -26,18 +26,32 @@\n \n import co.elastic.apm.agent.bci.TracerAwareInstrumentation;\n import co.elastic.apm.agent.jdbc.helper.JdbcHelper;\n+import net.bytebuddy.matcher.ElementMatcher;\n \n+import javax.annotation.Nullable;\n import java.util.Collection;\n import java.util.Collections;\n \n+import static co.elastic.apm.agent.bci.bytebuddy.CustomElementMatchers.classLoaderCanLoadClass;\n+\n public abstract class JdbcInstrumentation extends TracerAwareInstrumentation {\n \n     private static final Collection<String> JDBC_GROUPS = Collections.singleton(\"jdbc\");\n \n-    protected static JdbcHelper jdbcHelper = new JdbcHelper();\n+    @Nullable\n+    private static JdbcHelper jdbcHelper;\n \n     @Override\n     public final Collection<String> getInstrumentationGroupNames() {\n         return JDBC_GROUPS;\n     }\n+\n+    protected synchronized static JdbcHelper getJdbcHelper() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43165c971a0ef7d708e6f2d435b744b7c270e80d"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c046ac2b54126d20ebc6e4eae9a7fc8c291d22ad", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/c046ac2b54126d20ebc6e4eae9a7fc8c291d22ad", "committedDate": "2020-09-28T19:35:11Z", "message": "use double-checked for faster access to jdbc helper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MzgxNjA1", "url": "https://github.com/elastic/apm-agent-java/pull/1409#pullrequestreview-498381605", "createdAt": "2020-09-29T11:45:01Z", "commit": {"oid": "c046ac2b54126d20ebc6e4eae9a7fc8c291d22ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4adf19a44ff2761161f728d5b64ce458964dd9e1", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/4adf19a44ff2761161f728d5b64ce458964dd9e1", "committedDate": "2020-09-29T14:39:01Z", "message": "Merge branch 'master' into try-lazy-load-jdbchelper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a320294d483c3d12554f402c886c0d7095797eee", "author": {"user": {"login": "SylvainJuge", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/a320294d483c3d12554f402c886c0d7095797eee", "committedDate": "2020-09-29T14:40:55Z", "message": "update changelog"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3672, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}