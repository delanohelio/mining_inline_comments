{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDczOTg2", "number": 1117, "title": "Fix parent/child issues with inferred spans", "bodyText": "Inferred spans can track a list of child or successor ids\nWith transitive reduction, the UI can then make regular spans a child of inferred spans\n\nWhat does this PR do?\n\ncloses #1112\nChecklist\n\n\n My code follows the style guidelines of this project\n I have rebased my changes on top of the latest master branch\n\n\n\n[ ] I have made corresponding changes to the documentation\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n\n\n\n I have updated CHANGELOG.asciidoc\n[ ] I have updated supported-technologies.asciidoc\n[ ] Added an API method or config option? Document in which version this will be introduced\n[ ] Added an instrumentation plugin? How did you make sure that old, non-supported versions are not instrumented by accident?", "createdAt": "2020-04-02T09:56:29Z", "url": "https://github.com/elastic/apm-agent-java/pull/1117", "merged": true, "mergeCommit": {"oid": "28e6f4524129e2abc485c375c7cb87c0f06b603f"}, "closed": true, "closedAt": "2020-05-12T10:25:35Z", "author": {"login": "felixbarny"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTpPWXgH2gAyMzk3NDczOTg2OjA1ZDNmZTZhNmQ2MGVmYmJlNWQwZTA1ZmVjZTQ4NmNlMDgwMzIyZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgf5HVAH2gAyMzk3NDczOTg2OjkxNTk3ZmVlYmE4NTZjNTgxMjlhMTljNzk5N2Q2MDg5ZjJlZjQ4ZGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05d3fe6a6d60efbbe5d0e05fece486ce080322d8", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/05d3fe6a6d60efbbe5d0e05fece486ce080322d8", "committedDate": "2020-04-02T09:53:31Z", "message": "Fix parent/child issues with inferred spans\n\nInferred spans can track a list of child or successor ids\nWith transitive reduction, the UI can then make regular spans a child of inferred spans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f9ecc92eddc9d47105e172165c28c5b798662e", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/f0f9ecc92eddc9d47105e172165c28c5b798662e", "committedDate": "2020-04-02T15:14:07Z", "message": "Reduce allocations and improve performance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d68d2c8b8a2545152d4f03552d21dfe74cd2571", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/9d68d2c8b8a2545152d4f03552d21dfe74cd2571", "committedDate": "2020-04-02T20:40:48Z", "message": "Further reducing allocations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a458f4c90e04e01c616905441fda760f0181acb", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/2a458f4c90e04e01c616905441fda760f0181acb", "committedDate": "2020-04-03T06:52:56Z", "message": "Add tests, set default capacity to 16\n\nThis capacity seems to be the most effective in the benchmarks\nBut it's going to depend a lot on the application\n16 still seems like a good default.\nIt grows much quicker if the actual capacity is high\nbut still does not seem wasteful for lower capacity needs.\nIt's also the default for lists in the JDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d38f1f110d49297266ab9f45e62e5b190c594329", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/d38f1f110d49297266ab9f45e62e5b190c594329", "committedDate": "2020-04-03T07:17:05Z", "message": "Serialize successor_ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17e0bbeb47ba8abc6fdcdda92ede133ff95f546d", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/17e0bbeb47ba8abc6fdcdda92ede133ff95f546d", "committedDate": "2020-04-03T07:49:54Z", "message": "Add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "243e2d3b2894f975da5ddca5fb350ac59bb2cba3", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/243e2d3b2894f975da5ddca5fb350ac59bb2cba3", "committedDate": "2020-04-03T10:30:17Z", "message": "Serialize successor_ids as hex string as opposed to a long"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1693c583e22e50b1c80b3ac660fb28c58f2b53ea", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/1693c583e22e50b1c80b3ac660fb28c58f2b53ea", "committedDate": "2020-04-24T14:09:22Z", "message": "Merge remote-tracking branch 'origin/master' into inferred-spans-successor-ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13f01b121806fa09e33003b90df2eb4c7f1d8338", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/13f01b121806fa09e33003b90df2eb4c7f1d8338", "committedDate": "2020-04-24T15:09:50Z", "message": "Rename successor_ids to child_ids\n\n- Add changelog\n- Adjust known issues documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDkyMjMw", "url": "https://github.com/elastic/apm-agent-java/pull/1117#pullrequestreview-400492230", "createdAt": "2020-04-26T11:22:08Z", "commit": {"oid": "13f01b121806fa09e33003b90df2eb4c7f1d8338"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMToyMjowOFrOGMDEBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxMjozMDo1OFrOGMD3tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI4NjI3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @see co.elastic.apm.agent.impl.transaction.Span#childIds\n          \n          \n            \n                 * @see co.elastic.apm.agent.impl.transaction.AbstractSpan#childIds", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r415286278", "createdAt": "2020-04-26T11:22:08Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java", "diffHunk": "@@ -73,12 +73,17 @@\n     private long activationTimestamp = -1;\n     /**\n      * The context of the transaction or span which is the direct parent of this call tree node.\n-     * Used in {@link #spanify(Root, TraceContext)} to override the parent.\n+     * Used in {@link #spanify} to override the parent.\n      */\n     @Nullable\n     private TraceContext activeContextOfDirectParent;\n     private long deactivationTimestamp = -1;\n     private boolean isSpan;\n+    /**\n+     * @see co.elastic.apm.agent.impl.transaction.Span#childIds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f01b121806fa09e33003b90df2eb4c7f1d8338"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI5NjQ2Nw==", "bodyText": "Doesn't worth pooling?", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r415296467", "createdAt": "2020-04-26T12:15:57Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/CallTree.java", "diffHunk": "@@ -391,6 +414,25 @@ public void resetState() {\n         }\n     }\n \n+    public void addChildId(long id) {\n+        if (childIds == null) {\n+            childIds = new LongList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f01b121806fa09e33003b90df2eb4c7f1d8338"}, "originalPosition": 187}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI5OTUwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"   bbbb b      \",\n          \n          \n            \n                        \" a aaaa aa a a \",\n          \n          \n            \n                        \"1 2    2  3 3 1\"\n          \n          \n            \n                        \"   bbbb b      \",\n          \n          \n            \n                        \" a aaaa a a a \",\n          \n          \n            \n                        \"1 2    2 3 3 1\"\n          \n      \n    \n    \n  \n\nJust to make sure that one measurement is enough", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r415299509", "createdAt": "2020-04-26T12:30:58Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/test/java/co/elastic/apm/agent/profiler/CallTreeTest.java", "diffHunk": "@@ -262,6 +265,30 @@ void testDectivationBeforeEnd() throws Exception {\n         });\n     }\n \n+    /*\n+     * [1            ]    [1            ]\n+     *  [a          ]      [a          ]\n+     *   [2   ]  [3]        [b    ] [3]   <- b is supposed to stealChildIdsFom(a)\n+     *    [b   ]            [2   ]           however, it should only steal 2, not 3\n+     */\n+    @Test\n+    void testDectivationBeforeEnd2() throws Exception {\n+        assertCallTree(new String[]{\n+            \"   bbbb b      \",\n+            \" a aaaa aa a a \",\n+            \"1 2    2  3 3 1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13f01b121806fa09e33003b90df2eb4c7f1d8338"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f40721206b8420474d25b7af0a600253835f5ffb", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/f40721206b8420474d25b7af0a600253835f5ffb", "committedDate": "2020-04-27T16:45:15Z", "message": "Fix another edge case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NzI0NDIx", "url": "https://github.com/elastic/apm-agent-java/pull/1117#pullrequestreview-405724421", "createdAt": "2020-05-05T12:07:53Z", "commit": {"oid": "f40721206b8420474d25b7af0a600253835f5ffb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjowNzo1M1rOGQmWOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoyODo1MVrOGQnDEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1ODY4Mg==", "bodyText": "\ud83d\udcaa", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r420058682", "createdAt": "2020-05-05T12:07:53Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/test/java/co/elastic/apm/agent/profiler/CallTreeTest.java", "diffHunk": "@@ -266,29 +272,181 @@ void testDeactivationBeforeEnd() throws Exception {\n     }\n \n     /*\n-     * [1            ]    [1            ]\n-     *  [a          ]      [a          ]\n-     *   [2   ]  [3]        [b    ] [3]   <- b is supposed to stealChildIdsFom(a)\n-     *    [b   ]            [2   ]           however, it should only steal 2, not 3\n+     * [1           ]    [1           ]\n+     *  [a         ]      [a         ]\n+     *   [2   ] [3]        [b    ][3]   <- b is supposed to stealChildIdsFom(a)\n+     *    [b   ]           [2   ]          however, it should only steal 2, not 3\n      */\n     @Test\n     void testDectivationBeforeEnd2() throws Exception {\n         assertCallTree(new String[]{\n-            \"   bbbb b      \",\n-            \" a aaaa aa a a \",\n-            \"1 2    2  3 3 1\"\n+            \"   bbbb b     \",\n+            \" a aaaa a a a \",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40721206b8420474d25b7af0a600253835f5ffb"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA3MDE2Mw==", "bodyText": "How come 2 is not a child of a?", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r420070163", "createdAt": "2020-05-05T12:28:51Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/test/java/co/elastic/apm/agent/profiler/CallTreeTest.java", "diffHunk": "@@ -266,29 +272,181 @@ void testDeactivationBeforeEnd() throws Exception {\n     }\n \n     /*\n-     * [1            ]    [1            ]\n-     *  [a          ]      [a          ]\n-     *   [2   ]  [3]        [b    ] [3]   <- b is supposed to stealChildIdsFom(a)\n-     *    [b   ]            [2   ]           however, it should only steal 2, not 3\n+     * [1           ]    [1           ]\n+     *  [a         ]      [a         ]\n+     *   [2   ] [3]        [b    ][3]   <- b is supposed to stealChildIdsFom(a)\n+     *    [b   ]           [2   ]          however, it should only steal 2, not 3\n      */\n     @Test\n     void testDectivationBeforeEnd2() throws Exception {\n         assertCallTree(new String[]{\n-            \"   bbbb b      \",\n-            \" a aaaa aa a a \",\n-            \"1 2    2  3 3 1\"\n+            \"   bbbb b     \",\n+            \" a aaaa a a a \",\n+            \"1 2    2 3 3 1\"\n         }, new Object[][] {\n-            {\"a\",       9},\n+            {\"a\",       8},\n             {\"  b\",     5},\n         }, new Object[][] {\n-            {\"1\",       14},\n-            {\"  a\",     12},\n+            {\"1\",       13},\n+            {\"  a\",     11},\n             {\"    b\",    6},\n             {\"      2\",  5},\n             {\"    3\",    2},\n         });\n     }\n \n+    /*\n+     * [1       ]\n+     *  [a     ]\n+     *   [b][2]\n+     */\n+    @Test\n+    void testActivationAfterMethodEnds() throws Exception {\n+        assertCallTree(new String[]{\n+            \" bbb      \",\n+            \" aaa aa a \",\n+            \"1   2  2 1\"\n+        }, new Object[][] {\n+            {\"a\",       6},\n+            {\"  b\",     3},\n+        }, new Object[][] {\n+            {\"1\",       9},\n+            {\"  a\",     7},\n+            {\"    b\",   2},\n+            {\"    2\",   3}\n+        });\n+    }\n+\n+    /*\n+     * [1         ]\n+     *  [a][2    ]\n+     *  [b] [3  ]\n+     *       [c]\n+     */\n+    @Test\n+    void testNestedActivationAfterMethodEnds() throws Exception {\n+        Map<String, AbstractSpan<?>> spans = assertCallTree(new String[]{\n+            \" bbb        \",\n+            \" aaa  ccc   \",\n+            \"1   23   321\"\n+        }, new Object[][] {\n+            {\"a\",        3},\n+            {\"  b\",      3},\n+            {\"c\",        3},\n+        }, new Object[][] {\n+            {\"1\",       11},\n+            {\"  b\",      2, List.of(\"a\")},\n+            {\"  2\",      6},\n+            {\"    3\",    4},\n+            {\"      c\",  2}\n+        });\n+        assertThat(spans.get(\"b\").getChildIds().getSize()).isEqualTo(0);\n+    }\n+\n+    /*\n+     * [1           ]\n+     *  [a  ][3    ]\n+     *  [b  ] [4  ]\n+     *   [2]   [c]\n+     */\n+    @Test\n+    void testRegularActivationFollowedByNestedActivationAfterMethodEnds() throws Exception {\n+        assertCallTree(new String[]{\n+            \"   d          \",\n+            \" b b b        \",\n+            \" a a a  ccc   \",\n+            \"1 2 2 34   431\"\n+        }, new Object[][] {\n+            {\"a\",        3},\n+            {\"  b\",      3},\n+            {\"c\",        3},\n+        }, new Object[][] {\n+            {\"1\",       13},\n+            {\"  b\",      4, List.of(\"a\")},\n+            {\"    2\",    2},\n+            {\"  3\",      6},\n+            {\"    4\",    4},\n+            {\"      c\",  2}\n+        });\n+    }\n+\n+    /*\n+     * [1           ]\n+     *  [a         ]\n+     *   [b][2    ]\n+     *       [3  ]\n+     *        [c]\n+     */\n+    @Test\n+    void testNestedActivationAfterMethodEnds2() throws Exception {\n+        Map<String, AbstractSpan<?>> spans = assertCallTree(new String[]{\n+            \"  bbb  ccc    \",\n+            \" aaaa  aaa  a \",\n+            \"1    23   32 1\"\n+        }, new Object[][]{\n+            {\"a\", 8},\n+            {\"  b\", 3},\n+            {\"  c\", 3},\n+        }, new Object[][]{\n+            {\"1\", 13},\n+            {\"  a\", 11},\n+            {\"    b\", 2},\n+            {\"  2\", 6},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40721206b8420474d25b7af0a600253835f5ffb"}, "originalPosition": 159}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c399c57957854319b92b95060210adc77741c653", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/c399c57957854319b92b95060210adc77741c653", "committedDate": "2020-05-06T06:59:08Z", "message": "Search for common ancestors instead of adding to top of stack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d73f9381295d6d754ef229169d96ec86ef894dc", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/1d73f9381295d6d754ef229169d96ec86ef894dc", "committedDate": "2020-05-06T07:00:01Z", "message": "Merge remote-tracking branch 'origin/master' into inferred-spans-successor-ids"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDA2MjQy", "url": "https://github.com/elastic/apm-agent-java/pull/1117#pullrequestreview-406406242", "createdAt": "2020-05-06T08:36:35Z", "commit": {"oid": "1d73f9381295d6d754ef229169d96ec86ef894dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODozNjozNlrOGRJJ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwODozNjozNlrOGRJJ0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDYyODk0Ng==", "bodyText": "This might be problematic for the UI: elastic/kibana#62952 (comment)", "url": "https://github.com/elastic/apm-agent-java/pull/1117#discussion_r420628946", "createdAt": "2020-05-06T08:36:36Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/test/java/co/elastic/apm/agent/profiler/CallTreeTest.java", "diffHunk": "@@ -262,6 +271,210 @@ void testDectivationBeforeEnd() throws Exception {\n         });\n     }\n \n+    /*\n+     * [1           ]    [1           ]\n+     *  [a         ]      [a         ]\n+     *   [2   ] [3]        [b    ][3]   <- b is supposed to stealChildIdsFom(a)\n+     *    [b   ]           [2   ]          however, it should only steal 2, not 3\n+     */\n+    @Test\n+    void testDectivationBeforeEnd2() throws Exception {\n+        assertCallTree(new String[]{\n+            \"   bbbb b     \",\n+            \" a aaaa a a a \",\n+            \"1 2    2 3 3 1\"\n+        }, new Object[][] {\n+            {\"a\",       8},\n+            {\"  b\",     5},\n+        }, new Object[][] {\n+            {\"1\",       13},\n+            {\"  a\",     11},\n+            {\"    b\",    6},\n+            {\"      2\",  5},\n+            {\"    3\",    2},\n+        });\n+    }\n+\n+    /*\n+     * [1       ]\n+     *  [a     ]\n+     *   [b][2]\n+     */\n+    @Test\n+    void testActivationAfterMethodEnds() throws Exception {\n+        assertCallTree(new String[]{\n+            \" bbb      \",\n+            \" aaa aa a \",\n+            \"1   2  2 1\"\n+        }, new Object[][] {\n+            {\"a\",       6},\n+            {\"  b\",     3},\n+        }, new Object[][] {\n+            {\"1\",       9},\n+            {\"  a\",     7},\n+            {\"    b\",   2},\n+            {\"    2\",   3}\n+        });\n+    }\n+\n+    /*\n+     * [1         ]\n+     *  [a][2    ]\n+     *  [b] [3  ]\n+     *       [c]\n+     */\n+    @Test\n+    void testNestedActivationAfterMethodEnds_RootChangesToC() throws Exception {\n+        Map<String, AbstractSpan<?>> spans = assertCallTree(new String[]{\n+            \" bbb        \",\n+            \" aaa  ccc   \",\n+            \"1   23   321\"\n+        }, new Object[][] {\n+            {\"a\",        3},\n+            {\"  b\",      3},\n+            {\"c\",        3},\n+        }, new Object[][] {\n+            {\"1\",       11},\n+            {\"  b\",      2, List.of(\"a\")},\n+            {\"  2\",      6},\n+            {\"    3\",    4},\n+            {\"      c\",  2}\n+        });\n+        assertThat(spans.get(\"b\").getChildIds().getSize()).isEqualTo(0);\n+    }\n+\n+    /*\n+     * [1           ]\n+     *  [a  ][3    ]\n+     *  [b  ] [4  ]\n+     *   [2]   [c]\n+     */\n+    @Test\n+    void testRegularActivationFollowedByNestedActivationAfterMethodEnds() throws Exception {\n+        assertCallTree(new String[]{\n+            \"   d          \",\n+            \" b b b        \",\n+            \" a a a  ccc   \",\n+            \"1 2 2 34   431\"\n+        }, new Object[][] {\n+            {\"a\",        3},\n+            {\"  b\",      3},\n+            {\"c\",        3},\n+        }, new Object[][] {\n+            {\"1\",       13},\n+            {\"  b\",      4, List.of(\"a\")},\n+            {\"    2\",    2},\n+            {\"  3\",      6},\n+            {\"    4\",    4},\n+            {\"      c\",  2}\n+        });\n+    }\n+\n+    /*\n+     * [1           ]\n+     *  [a         ]\n+     *   [b][2    ]\n+     *       [3  ]\n+     *        [c]\n+     */\n+    @Test\n+    void testNestedActivationAfterMethodEnds_CommonAncestorA() throws Exception {\n+        Map<String, AbstractSpan<?>> spans = assertCallTree(new String[]{\n+            \"  bbb  ccc    \",\n+            \" aaaa  aaa  a \",\n+            \"1    23   32 1\"\n+        }, new Object[][]{\n+            {\"a\",   8},\n+            {\"  b\", 3},\n+            {\"  c\", 3},\n+        }, new Object[][]{\n+            {\"1\",        13},\n+            {\"  a\",      11},\n+            {\"    b\",     2},\n+            {\"    2\",     6},\n+            {\"      3\",   4},\n+            {\"        c\", 2}\n+        });\n+\n+        // this is empty but not null because a has stolen the child ids from b\n+        assertThat(spans.get(\"b\").getChildIds().getSize()).isEqualTo(0);\n+        assertThat(spans.get(\"c\").getChildIds()).isNull();\n+        // has both 2 and 3 as child_ids, even though only 2 is a direct child", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d73f9381295d6d754ef229169d96ec86ef894dc"}, "originalPosition": 192}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbba7b99755cdc73e3f64978b53ca5b7918522b9", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/dbba7b99755cdc73e3f64978b53ca5b7918522b9", "committedDate": "2020-05-07T07:30:38Z", "message": "Merge remote-tracking branch 'origin/master' into inferred-spans-successor-ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b4ff72ee80558c5af456b642cff87ec42c2a0ab", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/5b4ff72ee80558c5af456b642cff87ec42c2a0ab", "committedDate": "2020-05-07T08:04:59Z", "message": "Exclude nested activations in child_ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11e4acef691c69c8b2c863fbd6ab2fa5f3546180", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/11e4acef691c69c8b2c863fbd6ab2fa5f3546180", "committedDate": "2020-05-07T10:20:40Z", "message": "Fix test\n\n- speed up stealActiveChildIds by adding a set of active spans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fa34a46acac3373fd4cbee05971dff54ba08c92", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/4fa34a46acac3373fd4cbee05971dff54ba08c92", "committedDate": "2020-05-07T11:19:50Z", "message": "Merge remote-tracking branch 'origin/master' into inferred-spans-successor-ids"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a388c36e695566aa6fb79a2113d30161f1c0b5e", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/9a388c36e695566aa6fb79a2113d30161f1c0b5e", "committedDate": "2020-05-07T11:29:04Z", "message": "Avoid calling Java 8 APIs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca6f7aeb09753a56b3c151448bac9903dcc50b09", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/ca6f7aeb09753a56b3c151448bac9903dcc50b09", "committedDate": "2020-05-07T11:42:06Z", "message": "Delete TraceContextHolder (glitch while merging master)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f10f8b48dcb7d6bb0282eb5f506d93746f2e70", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/47f10f8b48dcb7d6bb0282eb5f506d93746f2e70", "committedDate": "2020-05-11T10:38:08Z", "message": "Fix more edge cases\n\n- Adds internal profiling_inferred_spans_backup_diagnostic_files option\n- Adds SamplingProfilerReplay to diagnose issues when creating inferred spans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62f441ad932a127e1c831ef67c553d2ecc2cfb0", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/d62f441ad932a127e1c831ef67c553d2ecc2cfb0", "committedDate": "2020-05-11T12:26:08Z", "message": "Fix Javadoc error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91597feeba856c58129a19c7997d6089f2ef48dc", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/91597feeba856c58129a19c7997d6089f2ef48dc", "committedDate": "2020-05-12T08:21:06Z", "message": "Merge remote-tracking branch 'origin/master' into inferred-spans-successor-ids"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3909, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}