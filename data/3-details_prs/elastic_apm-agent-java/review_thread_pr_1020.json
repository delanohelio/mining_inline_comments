{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwODYzMTQ3", "number": 1020, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDoyOTozMVrODeVGhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDozNjo1NFrODeVJiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTI5NjA1OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDoyOTozMVrOFnZ-vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDoyOTozMVrOFnZ-vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NDQ0Nw==", "bodyText": "The returned message is not really used, but change it to something generic so that it won't be misleading (same for the comment)", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376864447", "createdAt": "2020-02-10T04:29:31Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-log-correlation-plugin/src/main/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListener.java", "diffHunk": "@@ -41,44 +41,101 @@\n \n public class Slf4JMdcActivationListener implements ActivationListener {\n \n-    // the string concatenation prevents the shade plugin from relocating org.slf4j.MDC to co.elastic.apm.agent.shaded.slf4j.MDC\n-    // the toString prevents constant folding, which would also make the shade plugin relocate\n-    private static final String ORG_SLF4J_MDC = \"org.\" + \"slf4j.MDC\".toString();\n+    // prevents the shade plugin from relocating org.slf4j.MDC to co.elastic.apm.agent.shaded.slf4j.MDC\n+    private static final String SLF4J_MDC = \"org!slf4j!MDC\".replace('!', '.');\n+    private static final String LOG4J_MDC = \"org.apache.log4j.MDC\";\n+    private static final String LOG4J2_MDC = \"org.apache.logging.log4j.ThreadContext\";\n+\n     private static final String TRACE_ID = \"trace.id\";\n     private static final String TRANSACTION_ID = \"transaction.id\";\n     private static final Logger logger = LoggerFactory.getLogger(Slf4JMdcActivationListener.class);\n \n     // Never invoked- only used for caching ClassLoaders that can't load the slf4j MDC class\n     private static final MethodHandle NOOP = MethodHandles.constant(String.class, \"ClassLoader cannot load slf4j API\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f6f6d65b1691f2db2145803f617f9ab7e68463"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTMwMzc2OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNDozNjo1NFrOFnaDAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNzo0ODoxNFrOFnce3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NTUzNw==", "bodyText": "What is this?", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376865537", "createdAt": "2020-02-10T04:36:54Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java", "diffHunk": "@@ -49,12 +53,25 @@\n \n     private LoggingConfiguration loggingConfiguration;\n     private CoreConfiguration coreConfiguration;\n+    private Boolean log4jMdcWorking;\n+    private ExecutorService executorService = Executors.newSingleThreadExecutor();\n \n     @BeforeEach\n-    void setUp() {\n+    void setUp() throws Exception {\n+        org.apache.log4j.MDC.put(\"test\", true);\n+        log4jMdcWorking = (Boolean) org.apache.log4j.MDC.get(\"test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7f6f6d65b1691f2db2145803f617f9ab7e68463"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjkwNTQzOA==", "bodyText": "Log4j thinks that Java 11 is Java 1 and disables ThreadLocals", "url": "https://github.com/elastic/apm-agent-java/pull/1020#discussion_r376905438", "createdAt": "2020-02-10T07:48:14Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-log-correlation-plugin/src/test/java/co/elastic/apm/agent/slf4j/Slf4JMdcActivationListenerTest.java", "diffHunk": "@@ -49,12 +53,25 @@\n \n     private LoggingConfiguration loggingConfiguration;\n     private CoreConfiguration coreConfiguration;\n+    private Boolean log4jMdcWorking;\n+    private ExecutorService executorService = Executors.newSingleThreadExecutor();\n \n     @BeforeEach\n-    void setUp() {\n+    void setUp() throws Exception {\n+        org.apache.log4j.MDC.put(\"test\", true);\n+        log4jMdcWorking = (Boolean) org.apache.log4j.MDC.get(\"test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg2NTUzNw=="}, "originalCommit": {"oid": "a7f6f6d65b1691f2db2145803f617f9ab7e68463"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 417, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}