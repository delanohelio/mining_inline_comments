{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NjMzNDk5", "number": 1081, "title": "Test that SQLExceptions are rethrown", "bodyText": "What does this PR do?\nWe got a bug report that suggests that the agent swallows SQLExceptions.\nI couln't reproduce it so far.", "createdAt": "2020-03-11T11:27:45Z", "url": "https://github.com/elastic/apm-agent-java/pull/1081", "merged": true, "mergeCommit": {"oid": "a8b8cdb1a9df0074196f1df01b9cf7b5a71a5fdd"}, "closed": true, "closedAt": "2020-03-18T13:47:42Z", "author": {"login": "felixbarny"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMlTL4gH2gAyMzg2NjMzNDk5OjliZDkxNDM5NmExMzc5OGY1NGMwZmZmNmIzY2UxMGMwZTkzMzExZGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcO3ktlAFqTM3Njg3Mzk3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9bd914396a13798f54c0fff6b3ce10c0e93311dd", "author": {"user": {"login": "felixbarny", "name": "Felix Barnsteiner"}}, "url": "https://github.com/elastic/apm-agent-java/commit/9bd914396a13798f54c0fff6b3ce10c0e93311dd", "committedDate": "2020-03-11T11:20:37Z", "message": "Test that SQLExceptions are rethrown"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2ODczOTcz", "url": "https://github.com/elastic/apm-agent-java/pull/1081#pullrequestreview-376873973", "createdAt": "2020-03-18T13:43:13Z", "commit": {"oid": "9bd914396a13798f54c0fff6b3ce10c0e93311dd"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo0MzoxM1rOF4FgcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzo0MzoxM1rOF4FgcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM1NDgwMA==", "bodyText": "Nice", "url": "https://github.com/elastic/apm-agent-java/pull/1081#discussion_r394354800", "createdAt": "2020-03-18T13:43:13Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-jdbc-plugin/src/test/java/co/elastic/apm/agent/jdbc/AbstractJdbcInstrumentationTest.java", "diffHunk": "@@ -270,42 +278,46 @@ private void testBatch(boolean isLargeBatch) throws SQLException {\n         assertSpanRecorded(insert, false, 2);\n     }\n \n-    private void testUpdate(boolean isLargeUpdate) throws SQLException {\n-        final String insert = \"INSERT INTO ELASTIC_APM (FOO, BAR) VALUES (42, 'TEST')\";\n+    private interface StatementExecutor<T> {\n+        T withStatement(Statement s, String sql) throws SQLException;\n+    }\n \n+    private void testUpdate(StatementExecutor<Number> statementConsumer) throws SQLException {\n         Statement statement = connection.createStatement();\n+        String insert = \"INSERT INTO ELASTIC_APM (FOO, BAR) VALUES (42, 'TEST')\";\n \n-        if (isLargeUpdate) {\n-            boolean supported = executePotentiallyUnsupportedFeature(() -> statement.executeLargeUpdate(insert));\n-            if (!supported) {\n-                // feature not supported, just ignore test\n-                return;\n-            }\n-\n-        } else {\n-            statement.executeUpdate(insert);\n+        boolean supported = executePotentiallyUnsupportedFeature(() -> assertThat(statementConsumer.withStatement(statement, insert).intValue()).isEqualTo(1));\n+        if (!supported) {\n+            // feature not supported, just ignore test\n+            return;\n         }\n-\n         assertSpanRecorded(insert, false, 1);\n+        reporter.reset();\n+        // unique key violation\n+        assertThatThrownBy(() -> statementConsumer.withStatement(statement, insert)).isInstanceOf(SQLException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bd914396a13798f54c0fff6b3ce10c0e93311dd"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3884, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}