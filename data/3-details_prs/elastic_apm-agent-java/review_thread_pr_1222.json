{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNzQ3NTg4", "number": 1222, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo1Nzo0OFrOEEJoVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo1OTo1MFrOEEJpuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzg3NTQzOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo1Nzo0OFrOGhl4lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODo0OTo1NVrOGhrPOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3Njg4Ng==", "bodyText": "Regex is rather expensive. Better use WildcardMatchers instead. Arrays.asList(WildcardMatcher.valueOf(\"*_search\", ...).\nTo match all, use WildcardMatcher::isAnyMatch", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r437876886", "createdAt": "2020-06-10T05:57:48Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java", "diffHunk": "@@ -49,7 +49,7 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(ElasticsearchRestClientInstrumentationHelperImpl.class);\n \n-    public static final String SEARCH_QUERY_PATH_SUFFIX = \"_search\";\n+    public static final String QUERY_REGEXP = \".*_((search|msearch)(\\\\/template)?|count)$\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NDYwMg==", "bodyText": "done", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r437964602", "createdAt": "2020-06-10T08:49:55Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-common/src/main/java/co/elastic/apm/agent/es/restclient/ElasticsearchRestClientInstrumentationHelperImpl.java", "diffHunk": "@@ -49,7 +49,7 @@\n \n     private static final Logger logger = LoggerFactory.getLogger(ElasticsearchRestClientInstrumentationHelperImpl.class);\n \n-    public static final String SEARCH_QUERY_PATH_SUFFIX = \"_search\";\n+    public static final String QUERY_REGEXP = \".*_((search|msearch)(\\\\/template)?|count)$\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3Njg4Ng=="}, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzg3ODk3OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/test/java/co/elastic/apm/agent/es/restclient/v6_4/AbstractEs6_4ClientInstrumentationTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNTo1OTo1MFrOGhl6-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjoxMjo1NVrOGiPyaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3NzQ5Ng==", "bodyText": "Please test the different endpoints in different test methods.", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r437877496", "createdAt": "2020-06-10T05:59:50Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/test/java/co/elastic/apm/agent/es/restclient/v6_4/AbstractEs6_4ClientInstrumentationTest.java", "diffHunk": "@@ -134,6 +143,99 @@ public void testDocumentScenario() throws Exception {\n         validateDbContextContent(searchSpan, \"{\\\"from\\\":0,\\\"size\\\":5,\\\"query\\\":{\\\"term\\\":{\\\"foo\\\":{\\\"value\\\":\\\"bar\\\",\\\"boost\\\":1.0}}}}\");\n \n         // Now update and re-search\n+        reporter.reset();\n+        // Do CountRequest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2NDcwNA==", "bodyText": "done", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r437964704", "createdAt": "2020-06-10T08:50:03Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/test/java/co/elastic/apm/agent/es/restclient/v6_4/AbstractEs6_4ClientInstrumentationTest.java", "diffHunk": "@@ -134,6 +143,99 @@ public void testDocumentScenario() throws Exception {\n         validateDbContextContent(searchSpan, \"{\\\"from\\\":0,\\\"size\\\":5,\\\"query\\\":{\\\"term\\\":{\\\"foo\\\":{\\\"value\\\":\\\"bar\\\",\\\"boost\\\":1.0}}}}\");\n \n         // Now update and re-search\n+        reporter.reset();\n+        // Do CountRequest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3NzQ5Ng=="}, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3OTkzMQ==", "bodyText": "What I meant was to create multiple @Test annotated methods for each type of query. Better to have multiple simple test cases than one big complex one so that the tests can be executed individually.", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r438079931", "createdAt": "2020-06-10T12:23:53Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/test/java/co/elastic/apm/agent/es/restclient/v6_4/AbstractEs6_4ClientInstrumentationTest.java", "diffHunk": "@@ -134,6 +143,99 @@ public void testDocumentScenario() throws Exception {\n         validateDbContextContent(searchSpan, \"{\\\"from\\\":0,\\\"size\\\":5,\\\"query\\\":{\\\"term\\\":{\\\"foo\\\":{\\\"value\\\":\\\"bar\\\",\\\"boost\\\":1.0}}}}\");\n \n         // Now update and re-search\n+        reporter.reset();\n+        // Do CountRequest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3NzQ5Ng=="}, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MzQzNQ==", "bodyText": "fixed", "url": "https://github.com/elastic/apm-agent-java/pull/1222#discussion_r438563435", "createdAt": "2020-06-11T06:12:55Z", "author": {"login": "kananindzya"}, "path": "apm-agent-plugins/apm-es-restclient-plugin/apm-es-restclient-plugin-6_4/src/test/java/co/elastic/apm/agent/es/restclient/v6_4/AbstractEs6_4ClientInstrumentationTest.java", "diffHunk": "@@ -134,6 +143,99 @@ public void testDocumentScenario() throws Exception {\n         validateDbContextContent(searchSpan, \"{\\\"from\\\":0,\\\"size\\\":5,\\\"query\\\":{\\\"term\\\":{\\\"foo\\\":{\\\"value\\\":\\\"bar\\\",\\\"boost\\\":1.0}}}}\");\n \n         // Now update and re-search\n+        reporter.reset();\n+        // Do CountRequest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg3NzQ5Ng=="}, "originalCommit": {"oid": "70833403e0e78a3e22339989fe5a238836c7cf7c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 97, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}