{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODU0MzQ0", "number": 1262, "title": "Delay init by default in Tomcat and JBoss, only once", "bodyText": "What does this PR do?\nFixes #1246 (main issue is the infamous JUL deadlock, in addition - a bug of multiple delays).\n\nChecklist\n\n\n This is an enhancement of existing features, or a new feature in existing plugins\n\n I have updated CHANGELOG.asciidoc\n I have added tests that prove my fix is effective or that my feature works\n Added an API method or config option? Document in which version this will be introduced\n I have made corresponding changes to the documentation\n\n\n This is a bugfix\n\n I have updated CHANGELOG.asciidoc\n[ ] I have added tests that would fail without this fix This one is tested manually\n\n\n This is a new plugin\n\n I have updated CHANGELOG.asciidoc\n My code follows the style guidelines of this project\n I have made corresponding changes to the documentation\n I have added tests that prove my fix is effective or that my feature works\n New and existing unit tests pass locally with my changes\n I have updated CHANGELOG.asciidoc\n I have updated supported-technologies.asciidoc\n Added an API method or config option? Document in which version this will be introduced\n Added an instrumentation plugin? Describe how you made sure that old, non-supported versions are not instrumented by accident.\n\n\n This is something else\n\n I have updated CHANGELOG.asciidoc", "createdAt": "2020-06-30T08:02:48Z", "url": "https://github.com/elastic/apm-agent-java/pull/1262", "merged": true, "mergeCommit": {"oid": "9d9820bf7d8f5b7a41dd39c395c43352df23e5fd"}, "closed": true, "closedAt": "2020-07-07T06:33:38Z", "author": {"login": "eyalkoren"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwQ-dYgH2gAyNDQxODU0MzQ0OjNjNWM5NzJiZjQ4MDkwYTY5OTZjMmNmZDIyNzViMjZkZjAwZDUxZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyL_lRAFqTQ0MjgyODgwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3c5c972bf48090a6996c2cfd2275b26df00d51da", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3c5c972bf48090a6996c2cfd2275b26df00d51da", "committedDate": "2020-06-30T08:01:09Z", "message": "Delay init only once"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Nzc2NzMx", "url": "https://github.com/elastic/apm-agent-java/pull/1262#pullrequestreview-439776731", "createdAt": "2020-06-30T08:15:51Z", "commit": {"oid": "3c5c972bf48090a6996c2cfd2275b26df00d51da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91d2af7039d2f32cd29ad4a29276bc4e49175813", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/91d2af7039d2f32cd29ad4a29276bc4e49175813", "committedDate": "2020-07-01T12:47:49Z", "message": "Merge remote-tracking branch 'upstream/master' into delay-init-once-only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ae318da0acbd3a7ec361f112218b3f0672d57f", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/a2ae318da0acbd3a7ec361f112218b3f0672d57f", "committedDate": "2020-07-01T14:51:39Z", "message": "Delay init when starting Tomcat using premain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "437615e2c56f0f73a3a38c6738d2e31369b04212", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/437615e2c56f0f73a3a38c6738d2e31369b04212", "committedDate": "2020-07-02T06:10:48Z", "message": "Merge remote-tracking branch 'upstream/master' into delay-init-once-only"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb", "committedDate": "2020-07-02T06:13:48Z", "message": "Fixing Scala test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTU3MjEx", "url": "https://github.com/elastic/apm-agent-java/pull/1262#pullrequestreview-440957211", "createdAt": "2020-07-01T15:05:43Z", "commit": {"oid": "a2ae318da0acbd3a7ec361f112218b3f0672d57f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNTowNTo0M1rOGrp7GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNjo0MToyMlrOGr_Y2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQyODgyNQ==", "bodyText": "Add an info log here", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448428825", "createdAt": "2020-07-01T15:05:43Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2ae318da0acbd3a7ec361f112218b3f0672d57f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDMxMg==", "bodyText": "Can we end the delay once the platform MBean server is initialized (!MBeanServerFactory.findMBeanServer(null).isEmpty())? In that case, it should be guaranteed that JUL is initialized.", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448780312", "createdAt": "2020-07-02T06:40:53Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (premain && shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);\n+        }\n+        if (delayInitMs > 0) {\n+            startWithDelay(delayInitMs);\n         } else {\n             startSync();\n         }\n     }\n \n-    private synchronized void startWithDelay() {\n+    private boolean shouldDelay() {\n+        return ClassLoader.getSystemClassLoader().getResource(\"org/apache/catalina/startup/Bootstrap.class\") != null;\n+    }\n+\n+    private synchronized void startWithDelay(final long delayInitMs) {\n         ThreadPoolExecutor pool = ExecutorUtils.createSingleThreadDeamonPool(\"tracer-initializer\", 1);\n         pool.submit(new Runnable() {\n             @Override\n             public void run() {\n                 try {\n-                    long delayInitMs = coreConfiguration.getDelayInitMs();\n                     logger.info(\"Delaying initialization of tracer for \" + delayInitMs + \"ms\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDUwNA==", "bodyText": "Can we do the delay for specific versions of Java, like only 1.8?", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r448780504", "createdAt": "2020-07-02T06:41:22Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (premain && shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);\n+        }\n+        if (delayInitMs > 0) {\n+            startWithDelay(delayInitMs);\n         } else {\n             startSync();\n         }\n     }\n \n-    private synchronized void startWithDelay() {\n+    private boolean shouldDelay() {\n+        return ClassLoader.getSystemClassLoader().getResource(\"org/apache/catalina/startup/Bootstrap.class\") != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2985ac1b66390300caece79d8f084c54b743a0dc", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/2985ac1b66390300caece79d8f084c54b743a0dc", "committedDate": "2020-07-02T12:44:07Z", "message": "Restricting JUL related delay in Tomcat to Java 1.8"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyODI4ODA1", "url": "https://github.com/elastic/apm-agent-java/pull/1262#pullrequestreview-442828805", "createdAt": "2020-07-06T07:20:17Z", "commit": {"oid": "2985ac1b66390300caece79d8f084c54b743a0dc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzoyMDoxN1rOGtLlew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwNzoyMDoxN1rOGtLlew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDAyODkyMw==", "bodyText": "You'd only wait up to 500ms more than necessary vs waiting up to 5s more than necessary and possibly not waiting long enough. We could use the same mechanism for delay_init and the MBean server polling. Both conditions need to be fulfilled to end the delay.\n\nI think we can live with the 5 seconds delay in Tomcat on 1.8 installed via premain\n\nI think so too, just mentioning for completeness", "url": "https://github.com/elastic/apm-agent-java/pull/1262#discussion_r450028923", "createdAt": "2020-07-06T07:20:17Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/ElasticApmTracer.java", "diffHunk": "@@ -538,28 +539,35 @@ void init(List<LifecycleListener> lifecycleListeners) {\n         }\n     }\n \n-    public synchronized void start() {\n-        if (getConfig(CoreConfiguration.class).getDelayInitMs() > 0) {\n-            startWithDelay();\n+    public synchronized void start(boolean premain) {\n+        long delayInitMs = getConfig(CoreConfiguration.class).getDelayInitMs();\n+        if (premain && shouldDelay()) {\n+            delayInitMs = Math.max(delayInitMs, 5000L);\n+        }\n+        if (delayInitMs > 0) {\n+            startWithDelay(delayInitMs);\n         } else {\n             startSync();\n         }\n     }\n \n-    private synchronized void startWithDelay() {\n+    private boolean shouldDelay() {\n+        return ClassLoader.getSystemClassLoader().getResource(\"org/apache/catalina/startup/Bootstrap.class\") != null;\n+    }\n+\n+    private synchronized void startWithDelay(final long delayInitMs) {\n         ThreadPoolExecutor pool = ExecutorUtils.createSingleThreadDeamonPool(\"tracer-initializer\", 1);\n         pool.submit(new Runnable() {\n             @Override\n             public void run() {\n                 try {\n-                    long delayInitMs = coreConfiguration.getDelayInitMs();\n                     logger.info(\"Delaying initialization of tracer for \" + delayInitMs + \"ms\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MDMxMg=="}, "originalCommit": {"oid": "8652cdd9a801e5d4fe7748269f6e1fd92ea63bdb"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3781, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}