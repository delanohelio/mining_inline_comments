{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MTM1Njc4", "number": 1468, "title": "Override IndyBootstrapDispatcher class module", "bodyText": "What does this PR do?\nCloses #1415\nSupersedes #1465\nChecklist\n\n This is a bugfix\n\n I have updated CHANGELOG.asciidoc\n I have added tests that would fail without this fix - we currently only have integration tests for J9 with Java 8\n I added a unit test for the module override functionality\n I tested manually that the fix works on the adoptopenjdk/openjdk11-openj9:jdk-11.0.1.13-alpine-slim docker image with Spring PetClinic\n I tested manually that the fix works on the adoptopenjdk/openjdk9-openj9:jdk-9.0.4.12_openj9-0.9.0-alpine docker image with Spring PetClinic", "createdAt": "2020-11-02T15:27:12Z", "url": "https://github.com/elastic/apm-agent-java/pull/1468", "merged": true, "mergeCommit": {"oid": "953f8dc7e7d0fa1f211859c732f4a9c20a0440d0"}, "closed": true, "closedAt": "2020-11-05T07:18:02Z", "author": {"login": "eyalkoren"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYTkUYgH2gAyNTE0MTM1Njc4OjM2NjFhOTI5YWRjZmQ2NzFmOWQ0NjNiMmYxZTY5NTdiZDEyMWFhMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZO2EMAH2gAyNTE0MTM1Njc4OmY4YmU3MjZmMjBmMjdjYjlmZDViMjk3NGNkZTBlMTRhMzUxN2FiMWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3661a929adcfd671f9d463b2f1e6957bd121aa36", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3661a929adcfd671f9d463b2f1e6957bd121aa36", "committedDate": "2020-11-01T17:39:17Z", "message": "Override IntyBootstrapDispather class module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40287fcee8ead155acff6a8c35fbf5503c2985b8", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/40287fcee8ead155acff6a8c35fbf5503c2985b8", "committedDate": "2020-11-02T15:22:15Z", "message": "Override IndyBootstrapDispatcher class module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "512d9a4af5017f279641d7afb52c03522c617a0e", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/512d9a4af5017f279641d7afb52c03522c617a0e", "committedDate": "2020-11-03T06:25:25Z", "message": "Merge branch 'java-modules-support' into IndyBootstrapDispatcher-module-override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0e24f223c4a429c5eea360160c494bd5435352f", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/b0e24f223c4a429c5eea360160c494bd5435352f", "committedDate": "2020-11-03T06:29:57Z", "message": "Small merge fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/8432ac24731c7d087cf76cf1a61ddaaecf79a307", "committedDate": "2020-11-03T10:06:05Z", "message": "Doing it the right way"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzEzOTkx", "url": "https://github.com/elastic/apm-agent-java/pull/1468#pullrequestreview-523313991", "createdAt": "2020-11-04T12:27:24Z", "commit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjoyNzoyNVrOHtV92w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjoyNzoyNVrOHtV92w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMwNzg2Nw==", "bodyText": "[minor] make this log message specific to J9 JVM as it won't happen with other JVMs", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517307867", "createdAt": "2020-11-04T12:27:25Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/IndyBootstrap.java", "diffHunk": "@@ -196,14 +203,40 @@ public static Method getIndyBootstrapMethod() {\n     /**\n      * Injects the {@code java.lang.IndyBootstrapDispatcher} class into the bootstrap class loader if it wasn't already.\n      */\n-    private static Class<?> initIndyBootstrap() throws Exception {\n+    private static Class<?> initIndyBootstrap(final Logger logger) throws Exception {\n+        Class<?> indyBootstrapDispatcherClass;\n         try {\n-            return Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n+            indyBootstrapDispatcherClass = Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n         } catch (ClassNotFoundException e) {\n             byte[] bootstrapClass = IOUtils.readToBytes(ClassLoader.getSystemClassLoader().getResourceAsStream(INDY_BOOTSTRAP_RESOURCE));\n             ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(INDY_BOOTSTRAP_CLASS_NAME, bootstrapClass));\n+            indyBootstrapDispatcherClass = Class.forName(INDY_BOOTSTRAP_CLASS_NAME, false, null);\n+        }\n+\n+        if (JvmRuntimeInfo.getMajorVersion() >= 9 && JvmRuntimeInfo.isJ9VM()) {\n+            try {\n+                logger.info(\"Overriding IndyBootstrapDispatcher class's module to java.base module\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzMzE4MTM3", "url": "https://github.com/elastic/apm-agent-java/pull/1468#pullrequestreview-523318137", "createdAt": "2020-11-04T12:33:38Z", "commit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjozMzozOFrOHtWKXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjozOTo1N1rOHtWXeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxMTA3MQ==", "bodyText": "[minor] use assertJ assertions instead of Junit ones", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517311071", "createdAt": "2020-11-04T12:33:38Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.bci;\n+\n+import co.elastic.apm.agent.AbstractInstrumentationTest;\n+import net.bytebuddy.dynamic.loading.ClassInjector;\n+import org.junit.jupiter.api.Test;\n+import org.stagemonitor.util.IOUtils;\n+\n+import java.io.InputStream;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMxNDQyNQ==", "bodyText": "[question] Would it be possible to have an exception thrown with an explicit message when this method is called and IndyBootstrapDispatcherModuleSetter hasn't been loaded from the right classloader ? If yes, that might help to diagnose any unexpected state in the field.", "url": "https://github.com/elastic/apm-agent-java/pull/1468#discussion_r517314425", "createdAt": "2020-11-04T12:39:57Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/bci/IndyBootstrapTest.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*-\n+ * #%L\n+ * Elastic APM Java agent\n+ * %%\n+ * Copyright (C) 2018 - 2020 Elastic and contributors\n+ * %%\n+ * Licensed to Elasticsearch B.V. under one or more contributor\n+ * license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright\n+ * ownership. Elasticsearch B.V. licenses this file to you under\n+ * the Apache License, Version 2.0 (the \"License\"); you may\n+ * not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ * #L%\n+ */\n+package co.elastic.apm.agent.bci;\n+\n+import co.elastic.apm.agent.AbstractInstrumentationTest;\n+import net.bytebuddy.dynamic.loading.ClassInjector;\n+import org.junit.jupiter.api.Test;\n+import org.stagemonitor.util.IOUtils;\n+\n+import java.io.InputStream;\n+import java.util.Collections;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+\n+class IndyBootstrapTest extends AbstractInstrumentationTest {\n+\n+    @Test\n+    void testSetJavaBaseModule() throws Throwable {\n+        Module javaBaseModule = Class.class.getModule();\n+        assertNotEquals(IndyBootstrapTest.class.getModule(), javaBaseModule);\n+\n+        // In order to test this functionality, IndyBootstrapDispatcherModuleSetter needs to be loaded from the Boot CL\n+        InputStream classFileAsStream = IndyBootstrapDispatcherModuleSetter.class.getResourceAsStream(\"IndyBootstrapDispatcherModuleSetter.class\");\n+        byte[] bootstrapClass = IOUtils.readToBytes(classFileAsStream);\n+        ClassInjector.UsingUnsafe.ofBootLoader().injectRaw(Collections.singletonMap(IndyBootstrapDispatcherModuleSetter.class.getName(), bootstrapClass));\n+\n+        IndyBootstrap.setJavaBaseModule(IndyBootstrapTest.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8432ac24731c7d087cf76cf1a61ddaaecf79a307"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc5540845c4d760d2269d7792fbe5115c5a55f9c", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/bc5540845c4d760d2269d7792fbe5115c5a55f9c", "committedDate": "2020-11-04T14:38:57Z", "message": "Merge remote-tracking branch 'upstream/master' into IndyBootstrapDispatcher-module-override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/f8be726f20f27cb9fd5b2974cde0e14a3517ab1b", "committedDate": "2020-11-04T14:43:04Z", "message": "Applying review comments and updating CHANGELOG"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3710, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}