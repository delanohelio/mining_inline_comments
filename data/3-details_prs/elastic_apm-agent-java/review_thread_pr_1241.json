{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NzQ4NDAz", "number": 1241, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNDozN1rOEGSmrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNDozN1rOEGSmrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDMxNzI0OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4j2LoggerErrorCapturingInstrumentation.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDoyNDozN1rOGk_mQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMDo0MjozNVrOGlAKqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0MzkwNg==", "bodyText": "\ud83e\udd26  How come the test passed? We shade the tests as well?", "url": "https://github.com/elastic/apm-agent-java/pull/1241#discussion_r441443906", "createdAt": "2020-06-17T10:24:37Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4j2LoggerErrorCapturingInstrumentation.java", "diffHunk": "@@ -29,18 +29,19 @@\n \n import java.util.Collection;\n \n+import static co.elastic.apm.agent.error.logging.Slf4jLoggerErrorCapturingInstrumentation.SLF4J_LOGGER;\n import static net.bytebuddy.matcher.ElementMatchers.hasSuperType;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n import static net.bytebuddy.matcher.ElementMatchers.not;\n \n-public class Log4jLoggingInstrumentation extends AbstractLoggingInstrumentation {\n+public class Log4j2LoggerErrorCapturingInstrumentation extends AbstractLoggerErrorCapturingInstrumentation {\n \n-    // prevents the shade plugin from relocating org.slf4j.Logger to co.elastic.apm.agent.shaded.slf4j.Logger\n-    private static final String SLF4J_LOGGER = \"org!slf4j!Logger\".replace('!', '.');\n+    // prevents the shade plugin from relocating org.apache.logging.log4j.Logger to co.elastic.apm.agent.shaded.logging.log4j.Logger\n+    static final String LOG4J2_LOGGER = \"org!apache!logging!log4j!Logger\".replace('!', '.');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6adf433eccc2112beda14060e82bae82ac5b278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0ODc5NQ==", "bodyText": "We don\u2019t shade the test, that\u2019s why it succeeded in tests.", "url": "https://github.com/elastic/apm-agent-java/pull/1241#discussion_r441448795", "createdAt": "2020-06-17T10:34:02Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4j2LoggerErrorCapturingInstrumentation.java", "diffHunk": "@@ -29,18 +29,19 @@\n \n import java.util.Collection;\n \n+import static co.elastic.apm.agent.error.logging.Slf4jLoggerErrorCapturingInstrumentation.SLF4J_LOGGER;\n import static net.bytebuddy.matcher.ElementMatchers.hasSuperType;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n import static net.bytebuddy.matcher.ElementMatchers.not;\n \n-public class Log4jLoggingInstrumentation extends AbstractLoggingInstrumentation {\n+public class Log4j2LoggerErrorCapturingInstrumentation extends AbstractLoggerErrorCapturingInstrumentation {\n \n-    // prevents the shade plugin from relocating org.slf4j.Logger to co.elastic.apm.agent.shaded.slf4j.Logger\n-    private static final String SLF4J_LOGGER = \"org!slf4j!Logger\".replace('!', '.');\n+    // prevents the shade plugin from relocating org.apache.logging.log4j.Logger to co.elastic.apm.agent.shaded.logging.log4j.Logger\n+    static final String LOG4J2_LOGGER = \"org!apache!logging!log4j!Logger\".replace('!', '.');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0MzkwNg=="}, "originalCommit": {"oid": "f6adf433eccc2112beda14060e82bae82ac5b278"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ1MzIyNg==", "bodyText": "Ohh, I guess you mean we test with non shaded agent code...", "url": "https://github.com/elastic/apm-agent-java/pull/1241#discussion_r441453226", "createdAt": "2020-06-17T10:42:35Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-error-logging-plugin/src/main/java/co/elastic/apm/agent/error/logging/Log4j2LoggerErrorCapturingInstrumentation.java", "diffHunk": "@@ -29,18 +29,19 @@\n \n import java.util.Collection;\n \n+import static co.elastic.apm.agent.error.logging.Slf4jLoggerErrorCapturingInstrumentation.SLF4J_LOGGER;\n import static net.bytebuddy.matcher.ElementMatchers.hasSuperType;\n import static net.bytebuddy.matcher.ElementMatchers.named;\n import static net.bytebuddy.matcher.ElementMatchers.not;\n \n-public class Log4jLoggingInstrumentation extends AbstractLoggingInstrumentation {\n+public class Log4j2LoggerErrorCapturingInstrumentation extends AbstractLoggerErrorCapturingInstrumentation {\n \n-    // prevents the shade plugin from relocating org.slf4j.Logger to co.elastic.apm.agent.shaded.slf4j.Logger\n-    private static final String SLF4J_LOGGER = \"org!slf4j!Logger\".replace('!', '.');\n+    // prevents the shade plugin from relocating org.apache.logging.log4j.Logger to co.elastic.apm.agent.shaded.logging.log4j.Logger\n+    static final String LOG4J2_LOGGER = \"org!apache!logging!log4j!Logger\".replace('!', '.');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0MzkwNg=="}, "originalCommit": {"oid": "f6adf433eccc2112beda14060e82bae82ac5b278"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 116, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}