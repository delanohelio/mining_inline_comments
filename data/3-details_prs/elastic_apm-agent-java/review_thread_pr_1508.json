{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTk3MzA4", "number": 1508, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwNjowNzo1NVrOE5Iecg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo0MDozOFrOE8OJSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MzQzMTU0OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwNjowNzo1NVrOHzc6hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNVQwNjowNzo1NVrOHzc6hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzcxMzE1OQ==", "bodyText": "We cannot do that - this leaks one TraceState's member (the header field) to another. Given that these are recyclable (reused) objects means it can be a mess.", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r523713159", "createdAt": "2020-11-15T06:07:55Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/transaction/TraceState.java", "diffHunk": "@@ -65,10 +65,15 @@ public void copyFrom(TraceState other) {\n         sampleRate = other.sampleRate;\n         sizeLimit = other.sizeLimit;\n         tracestate.clear();\n-        // copy and make sure we have the immutable variant\n+\n+        // While this is not a deep-copy and we don't explicitly make it immutable by using CharSequence.\n+        // It's not required as entries are never modified once added.\n+        // Doing so allows to bypass any copy for String/StringBuilder in the collection\n         for (int i = 0; i < other.tracestate.size(); i++) {\n-            tracestate.add(other.tracestate.get(i).toString());\n+            //noinspection UseBulkOperation\n+            tracestate.add(other.tracestate.get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fcc9d9a0bd16e58fe846804b241c654d568942"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTc5NTkyOnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozNToxM1rOH4Nr3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozNToxM1rOH4Nr3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNjUyNA==", "bodyText": "We can remove this one I guess\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final String rateString;", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528706524", "createdAt": "2020-11-23T13:35:13Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ConstantSampler.java", "diffHunk": "@@ -36,12 +37,15 @@\n \n     private final boolean decision;\n     private final double rate;\n+\n     private final String rateString;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043679b782da83fe205792b30a910fd7b1ba81e3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTgwOTc4OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozODo0MlrOH4N0Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzozODo0MlrOH4N0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwODY5OQ==", "bodyText": "I didn't get this comment", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528708699", "createdAt": "2020-11-23T13:38:42Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/ProbabilitySampler.java", "diffHunk": "@@ -56,16 +56,16 @@\n     private final double sampleRate;\n \n     // Because header value only contains sampling rate, we can cache it here\n-    private final String rateString;\n+    private final String traceStateHeader;\n \n     private ProbabilitySampler(double samplingRate) {\n-        higherBound = (long) (Long.MAX_VALUE * samplingRate);\n-        lowerBound = -higherBound;\n+        this.higherBound = (long) (Long.MAX_VALUE * samplingRate);\n+        this.lowerBound = -higherBound;\n         this.sampleRate = samplingRate;\n-        rateString = Double.toString(samplingRate);\n+        this.traceStateHeader = TraceState.getHeaderValue(samplingRate);\n     }\n \n-    public static Sampler of(double samplingRate) {\n+    public static Sampler of(double samplingRate) { // use 'Double' here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043679b782da83fe205792b30a910fd7b1ba81e3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNTgxNzY4OnYy", "diffSide": "RIGHT", "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo0MDozOFrOH4N5Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo0MDozOFrOH4N5Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwOTkwNw==", "bodyText": "\ud83d\udc4d  Can be added to the javadoc", "url": "https://github.com/elastic/apm-agent-java/pull/1508#discussion_r528709907", "createdAt": "2020-11-23T13:40:38Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/impl/sampling/Sampler.java", "diffHunk": "@@ -57,8 +57,10 @@\n      */\n     double getSampleRate();\n \n+    // While header is not related to sampler itself, putting this here allows to reuse the same\n+    // String instance as long as the sample rate does not change to minimize allocation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "043679b782da83fe205792b30a910fd7b1ba81e3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4972, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}