{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTUwODYz", "number": 1089, "title": "Make instrumentation tests more robust", "bodyText": "Reusing the same tracer across different instrumentation tests.\nIt's far from being perfect, but it is a step in the right direction and most importantly, it lets us do what we want with the helpers initialization without breaking the tests.", "createdAt": "2020-03-19T17:53:07Z", "url": "https://github.com/elastic/apm-agent-java/pull/1089", "merged": true, "mergeCommit": {"oid": "97a3d763a9468fcbb2e9c8a0241a5afecb5186fe"}, "closed": true, "closedAt": "2020-03-31T06:38:45Z", "author": {"login": "eyalkoren"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPNncsAH2gAyMzkxMTUwODYzOjgxYTNiMmQ3YWMzMWMwNjIzZTdhZmQzMjUxZTE3MWQ0OGRiZWFlZDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSv8S9gH2gAyMzkxMTUwODYzOjI0ZDRhMTQxMjExZmY1OTIwN2I4NWFmYzgyYzhmMDQyNzI0MzZkNTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "81a3b2d7ac31c0623e7afd3251e171d48dbeaed6", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/81a3b2d7ac31c0623e7afd3251e171d48dbeaed6", "committedDate": "2020-03-19T15:26:48Z", "message": "Using same tracer instance across tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77d4cd901713efa55432258c7c02780b99c27581", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/77d4cd901713efa55432258c7c02780b99c27581", "committedDate": "2020-03-19T17:49:05Z", "message": "Merge remote-tracking branch 'upstream/master' into make-instrumentation-tests-more-robust"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d1a33d4976a741b9e79d61ebd71ea5cfe98b052", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/3d1a33d4976a741b9e79d61ebd71ea5cfe98b052", "committedDate": "2020-03-22T10:48:37Z", "message": "Upgrading Mockito version"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec33f636a4ee7092f016931f2f4af431d7df96da", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/ec33f636a4ee7092f016931f2f4af431d7df96da", "committedDate": "2020-03-22T12:38:39Z", "message": "Disabling gRPC tests for analysis"}, "afterCommit": {"oid": "ba80fb2b8b3dfb21781cfcba124b90979e73e8d0", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/ba80fb2b8b3dfb21781cfcba124b90979e73e8d0", "committedDate": "2020-03-22T13:31:23Z", "message": "Disabling gRPC tests for analysis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba80fb2b8b3dfb21781cfcba124b90979e73e8d0", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/ba80fb2b8b3dfb21781cfcba124b90979e73e8d0", "committedDate": "2020-03-22T13:31:23Z", "message": "Disabling gRPC tests for analysis"}, "afterCommit": {"oid": "bd17c123708596cd5b67cda54256dfef0e99b039", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/bd17c123708596cd5b67cda54256dfef0e99b039", "committedDate": "2020-03-22T15:06:21Z", "message": "Disabling gRPC tests for analysis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250bdb65c4f84b77db90e6172bf74539a3c0ae91", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/250bdb65c4f84b77db90e6172bf74539a3c0ae91", "committedDate": "2020-03-22T15:33:58Z", "message": "Disabling gRPC tests for analysis"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd17c123708596cd5b67cda54256dfef0e99b039", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/bd17c123708596cd5b67cda54256dfef0e99b039", "committedDate": "2020-03-22T15:06:21Z", "message": "Disabling gRPC tests for analysis"}, "afterCommit": {"oid": "250bdb65c4f84b77db90e6172bf74539a3c0ae91", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/250bdb65c4f84b77db90e6172bf74539a3c0ae91", "committedDate": "2020-03-22T15:33:58Z", "message": "Disabling gRPC tests for analysis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "886421bdddb98fa24bb9196722963e9c24a4cdaa", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/886421bdddb98fa24bb9196722963e9c24a4cdaa", "committedDate": "2020-03-22T15:58:35Z", "message": "Replace Tracer when closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30950bed436f52293a2901698b55095f7ee415d", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/e30950bed436f52293a2901698b55095f7ee415d", "committedDate": "2020-03-22T16:00:00Z", "message": "Restore gRPC tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f", "committedDate": "2020-03-22T16:55:57Z", "message": "Using same tracer in Spring Boot tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjQyMDY3", "url": "https://github.com/elastic/apm-agent-java/pull/1089#pullrequestreview-379242067", "createdAt": "2020-03-23T09:10:00Z", "commit": {"oid": "77d4cd901713efa55432258c7c02780b99c27581"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QwOToxMDowMFrOF58WRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoyMTo0MlrOF5-9KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTg5Mw==", "bodyText": "What about using 'are assertions enabled' heuristic and throw an exception if this code is used in production ?", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396301893", "createdAt": "2020-03-23T09:10:00Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -369,11 +369,15 @@ private static void logClassLoaderHierarchy(@Nullable ClassLoader classLoader, L\n     /**\n      * Reverts instrumentation of classes and re-transforms them to their state without the agent.\n      * <p>\n-     * This is only to be used for unit tests\n+     * NOTE: THIS IS ONLY TO BE USED FOR UNIT TESTS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d4cd901713efa55432258c7c02780b99c27581"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMjg3Mg==", "bodyText": "[minor] behavior probably worth adding to method javadoc, but not really important since it's not supposed to be used outside tests.", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396302872", "createdAt": "2020-03-23T09:11:47Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -369,11 +369,15 @@ private static void logClassLoaderHierarchy(@Nullable ClassLoader classLoader, L\n     /**\n      * Reverts instrumentation of classes and re-transforms them to their state without the agent.\n      * <p>\n-     * This is only to be used for unit tests\n+     * NOTE: THIS IS ONLY TO BE USED FOR UNIT TESTS\n      * </p>\n      */\n     public static synchronized void reset() {\n-        if (resettableClassFileTransformer == null || instrumentation == null) {\n+        if (instrumentation == null) {\n+            return;\n+        }\n+\n+        if (resettableClassFileTransformer == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d4cd901713efa55432258c7c02780b99c27581"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMzOTkyNg==", "bodyText": "[minor] maybe provide getters for consistency, we don't have much direct field access in our codebase, and this part will be reused extensively into plugin tests.", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396339926", "createdAt": "2020-03-23T10:13:32Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/MockTracer.java", "diffHunk": "@@ -102,4 +146,18 @@ public static ElasticApmTracer create(ConfigurationRegistry configurationRegistr\n         when(tracer.getConfig(any())).thenAnswer(invocation -> configurationRegistry.getConfig(invocation.getArgument(0)));\n         return tracer;\n     }\n+\n+    public static class MockInstrumentationSetup {\n+        public final ElasticApmTracer tracer;\n+        public final MockReporter reporter;\n+        public final ConfigurationRegistry config;\n+        public final TestObjectPoolFactory objectPoolFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0MTY4MQ==", "bodyText": "why does a stopped tracer should trigger creating a new one ? Is that triggered for example if a test leaves the tracer in a stopped state ? Couldn't we just resume it when it's the case ?\nWhat is a bit confusing here is that we have a call to TracerInternalApiUtils.resumeTracer(tracer); in the else block.", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396341681", "createdAt": "2020-03-23T10:16:40Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/MockTracer.java", "diffHunk": "@@ -81,6 +84,47 @@ public static ElasticApmTracer createRealTracer(Reporter reporter, Configuration\n             .build();\n     }\n \n+    /**\n+     * If an instrumentation has already been initialized by some other test, returns the static\n+     * {@link co.elastic.apm.agent.bci.ElasticApmInstrumentation#tracer}.\n+     * Otherwise, Creates a real tracer with a {@link MockReporter} and a mock configuration which returns default\n+     * values that can be customized by mocking the configuration.\n+     */\n+    public static synchronized MockInstrumentationSetup getOrCreateInstrumentationTracer() {\n+\n+        ElasticApmTracer tracer = ElasticApmInstrumentation.tracer;\n+        if (tracer == null || tracer.getState() == ElasticApmTracer.TracerState.STOPPED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0NDYxNw==", "bodyText": "This null-check if statement is \ud83d\ude0d", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396344617", "createdAt": "2020-03-23T10:21:42Z", "author": {"login": "SylvainJuge"}, "path": "apm-agent-plugins/apm-servlet-plugin/src/main/java/co/elastic/apm/agent/servlet/AsyncInstrumentation.java", "diffHunk": "@@ -71,15 +71,12 @@\n \n     public AsyncInstrumentation(ElasticApmTracer tracer) {\n         synchronized (AsyncInstrumentation.class) {\n-            // adding a null-check before setting helper manager reference breaks test execution, which prevents having\n-            // the same code construct we have for other HelperClassManager usages.\n-            //\n-            // This should probably be changed when upgrading this plugin to use HelperClassManager for all helper\n-            // classes.\n-            asyncHelperManager = HelperClassManager.ForSingleClassLoader.of(tracer,\n-                \"co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl\",\n-                \"co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl$ApmAsyncListenerAllocator\",\n-                \"co.elastic.apm.agent.servlet.helper.ApmAsyncListener\");\n+            if (asyncHelperManager == null) {\n+                asyncHelperManager = HelperClassManager.ForSingleClassLoader.of(tracer,\n+                    \"co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl\",\n+                    \"co.elastic.apm.agent.servlet.helper.AsyncContextAdviceHelperImpl$ApmAsyncListenerAllocator\",\n+                    \"co.elastic.apm.agent.servlet.helper.ApmAsyncListener\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDQ5ODYz", "url": "https://github.com/elastic/apm-agent-java/pull/1089#pullrequestreview-379449863", "createdAt": "2020-03-23T13:54:38Z", "commit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMzo1NDozOFrOF6GdVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowNzo0OVrOF6HBQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ2NzU0Mw==", "bodyText": "Do you see a problem with using this method to detach the agent in the future?", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396467543", "createdAt": "2020-03-23T13:54:38Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/main/java/co/elastic/apm/agent/bci/ElasticApmAgent.java", "diffHunk": "@@ -369,11 +369,15 @@ private static void logClassLoaderHierarchy(@Nullable ClassLoader classLoader, L\n     /**\n      * Reverts instrumentation of classes and re-transforms them to their state without the agent.\n      * <p>\n-     * This is only to be used for unit tests\n+     * NOTE: THIS IS ONLY TO BE USED FOR UNIT TESTS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjMwMTg5Mw=="}, "originalCommit": {"oid": "77d4cd901713efa55432258c7c02780b99c27581"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NjczNw==", "bodyText": "Why do we allow tests to leak the tracer? It may be configured to only use certain instrumentations.\nWe could keep a stack trace of where the tracer initialized. That way we can find out which test has leaked the tracer and fix it instead of re-using a tracer that is in an unknown state.", "url": "https://github.com/elastic/apm-agent-java/pull/1089#discussion_r396476737", "createdAt": "2020-03-23T14:07:49Z", "author": {"login": "felixbarny"}, "path": "apm-agent-core/src/test/java/co/elastic/apm/agent/MockTracer.java", "diffHunk": "@@ -81,6 +84,47 @@ public static ElasticApmTracer createRealTracer(Reporter reporter, Configuration\n             .build();\n     }\n \n+    /**\n+     * If an instrumentation has already been initialized by some other test, returns the static", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74a4b0dfbedbcb2d1e328e90f8dec377d4b5871f"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39d9f56210086ad06401dfa3086a06637dba6228", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/39d9f56210086ad06401dfa3086a06637dba6228", "committedDate": "2020-03-30T14:43:54Z", "message": "Merge remote-tracking branch 'upstream/master' into make-instrumentation-tests-more-robust"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24d4a141211ff59207b85afc82c8f04272436d54", "author": {"user": {"login": "eyalkoren", "name": null}}, "url": "https://github.com/elastic/apm-agent-java/commit/24d4a141211ff59207b85afc82c8f04272436d54", "committedDate": "2020-03-30T15:08:07Z", "message": "Applying review suggestions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3896, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}