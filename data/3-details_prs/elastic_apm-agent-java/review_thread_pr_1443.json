{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1OTMwNzM5", "number": 1443, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0MDozMlrOEvUbbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0MTo0MFrOEvUdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDUzMjMxOnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0MDozMlrOHkO4qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0MDozMlrOHkO4qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NDY2NQ==", "bodyText": "Does this binary work for both 64 and 32-bit arm?", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r507754665", "createdAt": "2020-10-19T13:40:32Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDUzODM4OnYy", "diffSide": "RIGHT", "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzo0MTo0MFrOHkO8IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMTo0NDo0OVrOHmdr-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw==", "bodyText": "Does this binary work for both 64 and 32-bit aarch? Is there even a 32-bit version? Throw exception if not 64 bit?", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r507755553", "createdAt": "2020-10-19T13:41:40Z", "author": {"login": "felixbarny"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2OTQyNg==", "bodyText": "It's 64-specific. I believe the value of the os.arch System property for aarch32 should be arm.\n@apangin can you confirm?", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r507769426", "createdAt": "2020-10-19T13:59:00Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw=="}, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NjM0NA==", "bodyText": "Right, os.arch for 32-bit ARM is arm, for 64-bit ARM is aarch64.\nThere was even a fix to make os.arch return arm on systems that report aarch32.", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r507886344", "createdAt": "2020-10-19T16:23:59Z", "author": {"login": "apangin"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw=="}, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE3MjI0Mw==", "bodyText": "Thanks for confirming! Seems like it should be good enough then, but do you think it's better to look for aarch64? Can there be a AArch64 OS where the os.arch contains aarch but not aarch64?", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r508172243", "createdAt": "2020-10-20T02:34:27Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw=="}, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUxNTMxMg==", "bodyText": "IMO, doesn't matter. You may look for aarch or aarch64 - I expect this to be the same set of systems.", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r508515312", "createdAt": "2020-10-20T13:43:56Z", "author": {"login": "apangin"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw=="}, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDA5NDMyOQ==", "bodyText": "There was even a fix to make os.arch return arm on systems that report aarch32\n\nEven though this fix is old, I made it more specific so that we do not fail on such old JDKs.", "url": "https://github.com/elastic/apm-agent-java/pull/1443#discussion_r510094329", "createdAt": "2020-10-22T11:44:49Z", "author": {"login": "eyalkoren"}, "path": "apm-agent-plugins/apm-profiling-plugin/src/main/java/co/elastic/apm/agent/profiler/asyncprofiler/AsyncProfiler.java", "diffHunk": "@@ -102,8 +102,10 @@ private static String getLibraryFileName() {\n         String os = System.getProperty(\"os.name\").toLowerCase();\n         String arch = System.getProperty(\"os.arch\").toLowerCase();\n         if (os.contains(\"linux\")) {\n-            if (arch.contains(\"arm\") || arch.contains(\"aarch\")) {\n+            if (arch.contains(\"arm\")) {\n                 return \"libasyncProfiler-linux-arm\";\n+            } else if (arch.contains(\"aarch\")) {\n+                return \"libasyncProfiler-linux-aarch64\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc1NTU1Mw=="}, "originalCommit": {"oid": "a34312ba0e90c1cf34208d80d182b43b54668e50"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 53, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}