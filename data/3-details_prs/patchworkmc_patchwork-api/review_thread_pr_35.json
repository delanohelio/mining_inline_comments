{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDg0NjE3", "number": 35, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNDozNzo1OVrODarDbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNzowOVrODasb0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Mjk0OTU5OnYy", "diffSide": "RIGHT", "path": ".recommenders/caches/identified-project-coordinates.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNDozNzo1OVrOFhwLhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNDozNzo1OVrOFhwLhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkzNjcxMA==", "bodyText": "I don't think the files in .recommenders should be added.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/35#discussion_r370936710", "createdAt": "2020-01-25T14:37:59Z", "author": {"login": "shedaniel"}, "path": ".recommenders/caches/identified-project-coordinates.json", "diffHunk": "@@ -0,0 +1 @@\n+[[{\"location\":\"C:\\\\Users\\\\mekal\\\\.gradle\\\\caches\\\\modules-2\\\\files-2.1\\\\com.google.guava\\\\guava\\\\21.0\\\\3a3d111be1be1b745edfa7d91678a12d7ed38709\\\\guava-21.0.jar\",\"type\":\"JAR\",\"hints\":{}},\"com.google.guava:guava:21.0.0\"],[{\"location\":\"C:\\\\Program Files\\\\Java\\\\jre1.8.0_201\",\"type\":\"JRE\",\"hints\":{\"EXECUTION_ENVIRONMENT\":\"JavaSE-1.8\"}},\"jre:jre:1.8.0\"],[{\"location\":\"C:\\\\Users\\\\mekal\\\\Desktop\\\\Modding\\\\Patchwork\\\\patchwork-api\\\\patchwork-biomes\",\"type\":\"PROJECT\",\"hints\":{\"PROJECT_NAME\":\"patchwork-biomes\"}},\"ABSENT\"]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68a85d45dcf53ee0d10f0e10319a2a5764fb3456"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzE3NTQ3OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/ForgeBiomeExt.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNjowOVrOFhx8Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNjowOVrOFhx8Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2NTUyMg==", "bodyText": "Maybe just RiverSupplier?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/35#discussion_r370965522", "createdAt": "2020-01-26T00:36:09Z", "author": {"login": "coderbot16"}, "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/ForgeBiomeExt.java", "diffHunk": "@@ -0,0 +1,26 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.biomes;\n+\n+import net.minecraft.world.biome.Biome;\n+\n+public interface ForgeBiomeExt {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9d8d5212baa326738a312a1f37dc48630f703a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzE3NTc5OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/PatchworkBiomes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNjo1MFrOFhx8OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNjo1MFrOFhx8OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2NTU2MQ==", "bodyText": "Could you deduplicate this? Maybe add another util method", "url": "https://github.com/PatchworkMC/patchwork-api/pull/35#discussion_r370965561", "createdAt": "2020-01-26T00:36:50Z", "author": {"login": "coderbot16"}, "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/PatchworkBiomes.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.biomes;\n+\n+import java.util.Iterator;\n+import java.util.Set;\n+\n+import com.google.common.collect.Sets;\n+\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.Biomes;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.biomes.v1.OverworldBiomes;\n+import net.fabricmc.fabric.api.event.registry.RegistryEntryAddedCallback;\n+import net.fabricmc.fabric.api.event.server.ServerStartCallback;\n+\n+public final class PatchworkBiomes implements ModInitializer {\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tRegistry.BIOME.forEach(PatchworkBiomes::addRivers);\n+\t\tRegistryEntryAddedCallback.event(Registry.BIOME).register((rawid, id, biome) -> {\n+\t\t\taddRivers(biome);\n+\t\t\tupdateFailedBiomes();\n+\t\t});\n+\t\tServerStartCallback.EVENT.register(server -> updateFailedBiomes());\n+\t}\n+\n+\tprivate static void addRivers(Biome biome) {\n+\t\tBiome river = ((ForgeBiomeExt) biome).getRiver();\n+\n+\t\tif (river == null) {\n+\t\t\tfailedBiomes.add(biome);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (river != getDefaultRiver(biome)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9d8d5212baa326738a312a1f37dc48630f703a"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzE3NTg2OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/PatchworkBiomes.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMDozNzowOVrOFhx8Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjozNzoxNFrOFhyLpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2NTU3MA==", "bodyText": "would prefer this to be at the top of the class", "url": "https://github.com/PatchworkMC/patchwork-api/pull/35#discussion_r370965570", "createdAt": "2020-01-26T00:37:09Z", "author": {"login": "coderbot16"}, "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/PatchworkBiomes.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.biomes;\n+\n+import java.util.Iterator;\n+import java.util.Set;\n+\n+import com.google.common.collect.Sets;\n+\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.Biomes;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.biomes.v1.OverworldBiomes;\n+import net.fabricmc.fabric.api.event.registry.RegistryEntryAddedCallback;\n+import net.fabricmc.fabric.api.event.server.ServerStartCallback;\n+\n+public final class PatchworkBiomes implements ModInitializer {\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tRegistry.BIOME.forEach(PatchworkBiomes::addRivers);\n+\t\tRegistryEntryAddedCallback.event(Registry.BIOME).register((rawid, id, biome) -> {\n+\t\t\taddRivers(biome);\n+\t\t\tupdateFailedBiomes();\n+\t\t});\n+\t\tServerStartCallback.EVENT.register(server -> updateFailedBiomes());\n+\t}\n+\n+\tprivate static void addRivers(Biome biome) {\n+\t\tBiome river = ((ForgeBiomeExt) biome).getRiver();\n+\n+\t\tif (river == null) {\n+\t\t\tfailedBiomes.add(biome);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (river != getDefaultRiver(biome)) {\n+\t\t\tOverworldBiomes.setRiverBiome(biome, river);\n+\t\t}\n+\t}\n+\n+\tprivate static void updateFailedBiomes() {\n+\t\tif (!failedBiomes.isEmpty()) {\n+\t\t\tIterator<Biome> iterator = failedBiomes.iterator();\n+\n+\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\tBiome biome = iterator.next();\n+\t\t\t\tBiome river = ((ForgeBiomeExt) biome).getRiver();\n+\n+\t\t\t\tif (river == null) {\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\titerator.remove();\n+\n+\t\t\t\tif (river != getDefaultRiver(biome)) {\n+\t\t\t\t\tOverworldBiomes.setRiverBiome(biome, river);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static Biome getDefaultRiver(Biome biome) {\n+\t\tif (biome == Biomes.SNOWY_TUNDRA) {\n+\t\t\treturn Biomes.FROZEN_RIVER;\n+\t\t} else if (biome == Biomes.MUSHROOM_FIELDS || biome == Biomes.MUSHROOM_FIELD_SHORE) {\n+\t\t\treturn Biomes.MUSHROOM_FIELD_SHORE;\n+\t\t}\n+\n+\t\treturn Biomes.RIVER;\n+\t}\n+\n+\tprivate static Set<Biome> failedBiomes = Sets.newHashSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd9d8d5212baa326738a312a1f37dc48630f703a"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTUxMQ==", "bodyText": "I usually put static fields at the bottom of the class, but this isn't my project so ok", "url": "https://github.com/PatchworkMC/patchwork-api/pull/35#discussion_r370969511", "createdAt": "2020-01-26T02:37:14Z", "author": {"login": "valoeghese"}, "path": "patchwork-biomes/src/main/java/com/patchworkmc/impl/biomes/PatchworkBiomes.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.biomes;\n+\n+import java.util.Iterator;\n+import java.util.Set;\n+\n+import com.google.common.collect.Sets;\n+\n+import net.minecraft.util.registry.Registry;\n+import net.minecraft.world.biome.Biome;\n+import net.minecraft.world.biome.Biomes;\n+\n+import net.fabricmc.api.ModInitializer;\n+import net.fabricmc.fabric.api.biomes.v1.OverworldBiomes;\n+import net.fabricmc.fabric.api.event.registry.RegistryEntryAddedCallback;\n+import net.fabricmc.fabric.api.event.server.ServerStartCallback;\n+\n+public final class PatchworkBiomes implements ModInitializer {\n+\t@Override\n+\tpublic void onInitialize() {\n+\t\tRegistry.BIOME.forEach(PatchworkBiomes::addRivers);\n+\t\tRegistryEntryAddedCallback.event(Registry.BIOME).register((rawid, id, biome) -> {\n+\t\t\taddRivers(biome);\n+\t\t\tupdateFailedBiomes();\n+\t\t});\n+\t\tServerStartCallback.EVENT.register(server -> updateFailedBiomes());\n+\t}\n+\n+\tprivate static void addRivers(Biome biome) {\n+\t\tBiome river = ((ForgeBiomeExt) biome).getRiver();\n+\n+\t\tif (river == null) {\n+\t\t\tfailedBiomes.add(biome);\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tif (river != getDefaultRiver(biome)) {\n+\t\t\tOverworldBiomes.setRiverBiome(biome, river);\n+\t\t}\n+\t}\n+\n+\tprivate static void updateFailedBiomes() {\n+\t\tif (!failedBiomes.isEmpty()) {\n+\t\t\tIterator<Biome> iterator = failedBiomes.iterator();\n+\n+\t\t\twhile (iterator.hasNext()) {\n+\t\t\t\tBiome biome = iterator.next();\n+\t\t\t\tBiome river = ((ForgeBiomeExt) biome).getRiver();\n+\n+\t\t\t\tif (river == null) {\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\titerator.remove();\n+\n+\t\t\t\tif (river != getDefaultRiver(biome)) {\n+\t\t\t\t\tOverworldBiomes.setRiverBiome(biome, river);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tpublic static Biome getDefaultRiver(Biome biome) {\n+\t\tif (biome == Biomes.SNOWY_TUNDRA) {\n+\t\t\treturn Biomes.FROZEN_RIVER;\n+\t\t} else if (biome == Biomes.MUSHROOM_FIELDS || biome == Biomes.MUSHROOM_FIELD_SHORE) {\n+\t\t\treturn Biomes.MUSHROOM_FIELD_SHORE;\n+\t\t}\n+\n+\t\treturn Biomes.RIVER;\n+\t}\n+\n+\tprivate static Set<Biome> failedBiomes = Sets.newHashSet();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2NTU3MA=="}, "originalCommit": {"oid": "bd9d8d5212baa326738a312a1f37dc48630f703a"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1492, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}