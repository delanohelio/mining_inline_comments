{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NzQ5MTE0", "number": 83, "title": "Add GuiOpenEvent", "bodyText": "", "createdAt": "2020-06-15T19:57:20Z", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83", "merged": true, "mergeCommit": {"oid": "e1cd10e630c6074c39d01aa6ce264c75cc6b9276"}, "closed": true, "closedAt": "2020-06-23T02:06:49Z", "author": {"login": "rikka0w0"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrmNhJgH2gAyNDM0NzQ5MTE0OjhlY2U1NDk1ZTIxNzI3M2E4ODYzNGJkNWE0MWZlYzg4NjRkNmFkNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABct7tHUgFqTQzNTM5MDE3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8ece5495e217273a88634bd5a41fec8864d6ad55", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/8ece5495e217273a88634bd5a41fec8864d6ad55", "committedDate": "2020-06-15T19:55:59Z", "message": "Add GuiOpenEvent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDE2NTEz", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#pullrequestreview-431016513", "createdAt": "2020-06-15T21:46:55Z", "commit": {"oid": "8ece5495e217273a88634bd5a41fec8864d6ad55"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMTo0Njo1NVrOGkD4GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMjowMDo1NVrOGkEOfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ2NTQzMg==", "bodyText": "Override isCancelable to return true instead of using the annotation", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r440465432", "createdAt": "2020-06-15T21:46:55Z", "author": {"login": "coderbot16"}, "path": "patchwork-gui/src/main/java/net/minecraftforge/client/event/GuiOpenEvent.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.client.event;\n+\n+//import net.minecraftforge.eventbus.api.Cancelable;\n+import net.minecraftforge.eventbus.api.Event;\n+\n+import net.minecraft.client.gui.screen.Screen;\n+\n+/**\n+ * This event is called before any Gui will open. If you don't want this to\n+ * happen, cancel the event. If you want to override this Gui, simply set the\n+ * gui variable to your own Gui.\n+ *\n+ * @author jk-5, Rikka0w0\n+ */\n+//@net.minecraftforge.eventbus.api.Cancelable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ece5495e217273a88634bd5a41fec8864d6ad55"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQ3MTE2Nw==", "bodyText": "I think a ModifyArg injector is much more suited to this purpose: https://jenkins.liteloader.com/view/Other/job/Mixin/javadoc/index.html?org/spongepowered/asm/mixin/injection/ModifyArg.html", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r440471167", "createdAt": "2020-06-15T22:00:55Z", "author": {"login": "coderbot16"}, "path": "patchwork-gui/src/main/java/net/patchworkmc/mixin/gui/MixinMinecraftClient.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.gui;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.ModifyVariable;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import net.minecraftforge.client.event.GuiOpenEvent;\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+@Mixin(MinecraftClient.class)\n+public class MixinMinecraftClient {\n+\tprivate static Screen nextScreen;\n+\n+\t/**\n+\t * Sets the argument Screen as the main (topmost visible) screen.\n+\t * <br>\n+\t * <strong>WARNING</strong>: This method is not thread-safe. Opening GUIs from a\n+\t * thread other than the main thread may cause many different issues, including\n+\t * the GUI being rendered before it has initialized (leading to unusual\n+\t * crashes). If on a thread other than the main thread, use\n+\t * {@link net.minecraft.client.MinecraftClient#executeTask}:\n+\t *\n+\t * <pre>\n+\t * MinecraftClient.getInstance().executeTask(() -> MinecraftClient.getInstance().openScreen(screen));\n+\t * </pre>\n+\t */\n+\t@Inject(at = @At(\"HEAD\"), cancellable = true, method = \"openScreen(Lnet/minecraft/client/gui/screen/Screen;)V\")\n+\tpublic void handleOpenScreen(Screen screen, CallbackInfo info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ece5495e217273a88634bd5a41fec8864d6ad55"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66deeea22726419940d8deaf6ea34e30181460fe", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/66deeea22726419940d8deaf6ea34e30181460fe", "committedDate": "2020-06-16T09:42:36Z", "message": "Override isCancelable to return true instead of using the annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fe0509e80ad39c1c7a655c82a0cf3e1d3298f50", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/4fe0509e80ad39c1c7a655c82a0cf3e1d3298f50", "committedDate": "2020-06-16T20:27:26Z", "message": "coderbot's fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODY5MjI1", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#pullrequestreview-431869225", "createdAt": "2020-06-16T20:32:32Z", "commit": {"oid": "4fe0509e80ad39c1c7a655c82a0cf3e1d3298f50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMjozMlrOGksGVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDozMjozMlrOGksGVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEyNDQzNg==", "bodyText": "Don't merge yet, this does not work in a reobf env\norg.spongepowered.asm.mixin.injection.throwables.InjectionError: Critical injection failure: Variable modifier method patchwork_fireOpenEvent(Lnet/minecraft/class_437;)Lnet/minecraft/class_437; in patchwork-gui.mixins.json:MixinMinecraftClient failed injection check, (0/1) succeeded. Scanned 1 target(s). Using refmap patchwork-gui-refmap.json\n\n\n\tat org.spongepowered.asm.mixin.injection.struct.InjectionInfo.postInject(InjectionInfo.java:400)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1280)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:1042)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:395)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:320)\n\n\n\tat org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:345)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:570)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:351)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:191)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:178)\n\n\n\tat org.spongepowered.asm.mixin.transformer.FabricMixinTransformerProxy.transformClassBytes(FabricMixinTransformerProxy.java:23)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:157)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClassLoader.loadClass(KnotClassLoader.java:143)\n\n\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\n\n\tat net.minecraft.client.main.Main.main(Main.java:155)\n\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\n\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\n\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\n\n\tat net.fabricmc.loader.game.MinecraftGameProvider.launch(MinecraftGameProvider.java:192)\n\n\n\tat net.fabricmc.loader.launch.knot.Knot.init(Knot.java:140)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClient.main(KnotClient.java:26)\n\n\nException in thread \"Client thread\" java.lang.RuntimeException: java.lang.reflect.InvocationTargetException\n\n\n\tat net.fabricmc.loader.game.MinecraftGameProvider.launch(MinecraftGameProvider.java:194)\n\n\n\tat net.fabricmc.loader.launch.knot.Knot.init(Knot.java:140)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClient.main(KnotClient.java:26)\n\n\nCaused by: java.lang.reflect.InvocationTargetException\n\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\n\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\n\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\n\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\n\n\tat net.fabricmc.loader.game.MinecraftGameProvider.launch(MinecraftGameProvider.java:192)\n\n\n\t... 2 more\n\n\nCaused by: org.spongepowered.asm.mixin.transformer.throwables.MixinTransformerError: An unexpected critical error was encountered\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:364)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClass(MixinTransformer.java:191)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTransformer.transformClassBytes(MixinTransformer.java:178)\n\n\n\tat org.spongepowered.asm.mixin.transformer.FabricMixinTransformerProxy.transformClassBytes(FabricMixinTransformerProxy.java:23)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClassDelegate.getPostMixinClassByteArray(KnotClassDelegate.java:157)\n\n\n\tat net.fabricmc.loader.launch.knot.KnotClassLoader.loadClass(KnotClassLoader.java:143)\n\n\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\n\n\n\tat net.minecraft.client.main.Main.main(Main.java:155)\n\n\n\t... 7 more\n\n\nCaused by: org.spongepowered.asm.mixin.injection.throwables.InjectionError: Critical injection failure: Variable modifier method patchwork_fireOpenEvent(Lnet/minecraft/class_437;)Lnet/minecraft/class_437; in patchwork-gui.mixins.json:MixinMinecraftClient failed injection check, (0/1) succeeded. Scanned 1 target(s). Using refmap patchwork-gui-refmap.json\n\n\n\tat org.spongepowered.asm.mixin.injection.struct.InjectionInfo.postInject(InjectionInfo.java:400)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinTargetContext.applyInjections(MixinTargetContext.java:1280)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyInjections(MixinApplicatorStandard.java:1042)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.applyMixin(MixinApplicatorStandard.java:395)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinApplicatorStandard.apply(MixinApplicatorStandard.java:320)\n\n\n\tat org.spongepowered.asm.mixin.transformer.TargetClassContext.applyMixins(TargetClassContext.java:345)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:570)\n\n\n\tat org.spongepowered.asm.mixin.transformer.MixinProcessor.applyMixins(MixinProcessor.java:351)\n\n\n\t... 14 more", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r441124436", "createdAt": "2020-06-16T20:32:32Z", "author": {"login": "rikka0w0"}, "path": "patchwork-gui/src/main/java/net/patchworkmc/mixin/gui/MixinMinecraftClient.java", "diffHunk": "@@ -47,25 +63,33 @@\n \t * MinecraftClient.getInstance().executeTask(() -> MinecraftClient.getInstance().openScreen(screen));\n \t * </pre>\n \t */\n-\t@Inject(at = @At(\"HEAD\"), cancellable = true, method = \"openScreen(Lnet/minecraft/client/gui/screen/Screen;)V\")\n-\tpublic void handleOpenScreen(Screen screen, CallbackInfo info) {\n+\t@ModifyVariable(method = methodOpenScreen, at = @At(value = \"CONSTANT\", args = constTitleScreenClass))\n+\tpublic Screen patchwork_fireOpenEvent(Screen screen) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fe0509e80ad39c1c7a655c82a0cf3e1d3298f50"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/adac5cfa0070864c2acac490f747bc44125dff55", "committedDate": "2020-06-17T18:54:26Z", "message": "Make the code work in both reobf and dev env"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODY3ODk0", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#pullrequestreview-432867894", "createdAt": "2020-06-18T00:47:26Z", "commit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDo0NzoyNlrOGlb8Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDo1MDowMlrOGlb-WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwODIzMA==", "bodyText": "Pretty sure this is just old MCP but please change the \"gui\" names to \"screen\" where they won't change public method signatures", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r441908230", "createdAt": "2020-06-18T00:47:26Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/net/minecraftforge/client/event/GuiOpenEvent.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.client.event;\n+\n+import net.minecraftforge.eventbus.api.Event;\n+\n+import net.minecraft.client.gui.screen.Screen;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwODUxNw==", "bodyText": "I think a quick summary of why this is happening in a comment would be useful if someone else ends up porting this later.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r441908517", "createdAt": "2020-06-18T00:48:34Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/net/patchworkmc/mixin/gui/MixinMinecraftClient.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.gui;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.ModifyVariable;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import net.minecraftforge.client.event.GuiOpenEvent;\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.OutOfMemoryScreen;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+@Mixin(MinecraftClient.class)\n+public class MixinMinecraftClient {\n+\tprivate static final String PATCHWORK_YARN_MTD_OPENSCREEN = \"openScreen(Lnet/minecraft/client/gui/screen/Screen;)V\";\n+\tprivate static final String PATCHWORK_YARN_MTD_SCREEN_REMOVE = \"net/minecraft/client/gui/screen/Screen.removed()V\";\n+\n+\t// net.minecraft.client.gui.TitleScreen --> net.minecraft.class_442\n+\tprivate static final String PATCHWORK_YARN_CLS_TITLESCREEN = \"classValue=net/minecraft/client/gui/screen/TitleScreen\";\n+\tprivate static final String PATCHWORK_REOBF_CLS_TITLESCREEN = \"classValue=net/minecraft/class_442\";\n+\n+\tprivate static final Screen PATCHWORK_GUIOPENEVENT_CANCEL_MAKRER = new OutOfMemoryScreen();\n+\tprivate static Screen patchwork_oldScreen;\n+\n+\t@Shadow\n+\tpublic Screen currentScreen;\n+\n+\t@Redirect(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"INVOKE\", target = PATCHWORK_YARN_MTD_SCREEN_REMOVE))\n+\tprivate void patchwork_suppressScreenRemoved(Screen screen) {\n+\t\t// No-op (handled in patchwork_fireOpenEvent)\n+\t}\n+\n+\t@ModifyVariable(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"CONSTANT\", args = PATCHWORK_YARN_CLS_TITLESCREEN, shift = Shift.BY, by = -2), require = 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwODYxOA==", "bodyText": "Nitpick: fabric style is <p>, use that here.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r441908618", "createdAt": "2020-06-18T00:49:00Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/net/patchworkmc/mixin/gui/MixinMinecraftClient.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.gui;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.ModifyVariable;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import net.minecraftforge.client.event.GuiOpenEvent;\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.OutOfMemoryScreen;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+@Mixin(MinecraftClient.class)\n+public class MixinMinecraftClient {\n+\tprivate static final String PATCHWORK_YARN_MTD_OPENSCREEN = \"openScreen(Lnet/minecraft/client/gui/screen/Screen;)V\";\n+\tprivate static final String PATCHWORK_YARN_MTD_SCREEN_REMOVE = \"net/minecraft/client/gui/screen/Screen.removed()V\";\n+\n+\t// net.minecraft.client.gui.TitleScreen --> net.minecraft.class_442\n+\tprivate static final String PATCHWORK_YARN_CLS_TITLESCREEN = \"classValue=net/minecraft/client/gui/screen/TitleScreen\";\n+\tprivate static final String PATCHWORK_REOBF_CLS_TITLESCREEN = \"classValue=net/minecraft/class_442\";\n+\n+\tprivate static final Screen PATCHWORK_GUIOPENEVENT_CANCEL_MAKRER = new OutOfMemoryScreen();\n+\tprivate static Screen patchwork_oldScreen;\n+\n+\t@Shadow\n+\tpublic Screen currentScreen;\n+\n+\t@Redirect(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"INVOKE\", target = PATCHWORK_YARN_MTD_SCREEN_REMOVE))\n+\tprivate void patchwork_suppressScreenRemoved(Screen screen) {\n+\t\t// No-op (handled in patchwork_fireOpenEvent)\n+\t}\n+\n+\t@ModifyVariable(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"CONSTANT\", args = PATCHWORK_YARN_CLS_TITLESCREEN, shift = Shift.BY, by = -2), require = 0)\n+\tpublic Screen patchwork_yarn_fireOpenEvent(Screen screen) {\n+\t\treturn patchwork_impl_fireOpenEvent(screen);\n+\t}\n+\n+\t@ModifyVariable(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"CONSTANT\", args = PATCHWORK_REOBF_CLS_TITLESCREEN, shift = Shift.BY, by = -2), require = 0)\n+\tpublic Screen patchwork_reobf_fireOpenEvent(Screen screen) {\n+\t\treturn patchwork_impl_fireOpenEvent(screen);\n+\t}\n+\n+\t@Inject(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"CONSTANT\", args = PATCHWORK_YARN_CLS_TITLESCREEN), cancellable = true, require = 0)\n+\tpublic void patchwork_yarn_cancelOpening(Screen screen, CallbackInfo callback) {\n+\t\tpatchwork_impl_cancelOpening(screen, callback);\n+\t}\n+\n+\t@Inject(method = PATCHWORK_YARN_MTD_OPENSCREEN, at = @At(value = \"CONSTANT\", args = PATCHWORK_REOBF_CLS_TITLESCREEN), cancellable = true, require = 0)\n+\tpublic void patchwork_reobf_cancelOpening(Screen screen, CallbackInfo callback) {\n+\t\tpatchwork_impl_cancelOpening(screen, callback);\n+\t}\n+\n+\t/**\n+\t * Sets the argument Screen as the main (topmost visible) screen.\n+\t * <br>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwODgyNQ==", "bodyText": "Please just make a custom noop screen instead of hijacking a vanilla one.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r441908825", "createdAt": "2020-06-18T00:50:02Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/net/patchworkmc/mixin/gui/MixinMinecraftClient.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.gui;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.ModifyVariable;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import net.minecraftforge.client.event.GuiOpenEvent;\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.gui.screen.OutOfMemoryScreen;\n+import net.minecraft.client.gui.screen.Screen;\n+\n+@Mixin(MinecraftClient.class)\n+public class MixinMinecraftClient {\n+\tprivate static final String PATCHWORK_YARN_MTD_OPENSCREEN = \"openScreen(Lnet/minecraft/client/gui/screen/Screen;)V\";\n+\tprivate static final String PATCHWORK_YARN_MTD_SCREEN_REMOVE = \"net/minecraft/client/gui/screen/Screen.removed()V\";\n+\n+\t// net.minecraft.client.gui.TitleScreen --> net.minecraft.class_442\n+\tprivate static final String PATCHWORK_YARN_CLS_TITLESCREEN = \"classValue=net/minecraft/client/gui/screen/TitleScreen\";\n+\tprivate static final String PATCHWORK_REOBF_CLS_TITLESCREEN = \"classValue=net/minecraft/class_442\";\n+\n+\tprivate static final Screen PATCHWORK_GUIOPENEVENT_CANCEL_MAKRER = new OutOfMemoryScreen();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a47dac54ecff64dd5f551e7485d5df54e8cc8419", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/a47dac54ecff64dd5f551e7485d5df54e8cc8419", "committedDate": "2020-06-18T09:55:13Z", "message": "GuiOpenEvent cancel marker"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzE0Mzk1", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#pullrequestreview-434314395", "createdAt": "2020-06-19T20:02:35Z", "commit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDowMjozNVrOGmf7Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMDowMjozNVrOGmf7Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAyMjE0Nw==", "bodyText": "This isn't fixed in the latest commit.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#discussion_r443022147", "createdAt": "2020-06-19T20:02:35Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/net/minecraftforge/client/event/GuiOpenEvent.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.client.event;\n+\n+import net.minecraftforge.eventbus.api.Event;\n+\n+import net.minecraft.client.gui.screen.Screen;\n+\n+/**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwODIzMA=="}, "originalCommit": {"oid": "adac5cfa0070864c2acac490f747bc44125dff55"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13e01c85465496b7c510948915fd4aae22317c9a", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/13e01c85465496b7c510948915fd4aae22317c9a", "committedDate": "2020-06-20T23:51:07Z", "message": "replace gui with screen in comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzkwMTcw", "url": "https://github.com/PatchworkMC/patchwork-api/pull/83#pullrequestreview-435390170", "createdAt": "2020-06-23T02:06:21Z", "commit": {"oid": "13e01c85465496b7c510948915fd4aae22317c9a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1142, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}