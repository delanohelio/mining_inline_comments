{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTg0MzY1", "number": 30, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQyMTo1NDoyN1rODZEfkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToyMTozNlrODce9pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjE0NjEwOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-shearing/src/main/java/com/patchworkmc/impl/extension/shearing/Shearables.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQyMTo1NDoyN1rOFfQ1Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjozNzo1OVrOFfqjHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMyNTkwMw==", "bodyText": "This is an unrelated fix, this package name didn't match the ones used everywhere else.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368325903", "createdAt": "2020-01-19T21:54:27Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-shearing/src/main/java/com/patchworkmc/impl/extension/shearing/Shearables.java", "diffHunk": "@@ -17,7 +17,7 @@\n  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n  */\n \n-package com.patchworkmc.impl.extensions.shearing;\n+package com.patchworkmc.impl.extension.shearing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f43d3eb103633673aec250f0e2409b7bd1210d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0NzI5NQ==", "bodyText": "No? com.patchworkmc.mixin.extensions.shearing is what all of the shearing mixins use, and MinecraftForge uses net.minecraftforge.common.extensions. The only exception is MixinStatusEffect. If you want to rename all of the other patchwork packages, fine, but this is only halfway. I think this refactor makes sense for another PR. I'm still split if extension or extensions makes more sense for the package name: Forge uses extensions, and most of patchwork uses extensions.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368747295", "createdAt": "2020-01-20T22:37:59Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions-shearing/src/main/java/com/patchworkmc/impl/extension/shearing/Shearables.java", "diffHunk": "@@ -17,7 +17,7 @@\n  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n  */\n \n-package com.patchworkmc.impl.extensions.shearing;\n+package com.patchworkmc.impl.extension.shearing;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODMyNTkwMw=="}, "originalCommit": {"oid": "d4f43d3eb103633673aec250f0e2409b7bd1210d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk0NjU4OnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo0OToyMVrOFfqr0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMzozNjozMlrOFfrOnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTUyMw==", "bodyText": "Is the interface needed here? I don't think this is ever accessed externally.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368749523", "createdAt": "2020-01-20T22:49:21Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.mixin.patches.bugfixes;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Implements;\n+import org.spongepowered.asm.mixin.Interface;\n+import org.spongepowered.asm.mixin.Intrinsic;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityCategory;\n+import net.minecraft.entity.EntityDimensions;\n+import net.minecraft.entity.EntityType;\n+\n+import com.patchworkmc.impl.patches.bugfixes.EntityTypeBuilderShim;\n+\n+@Mixin(EntityType.Builder.class)\n+@Implements(@Interface(iface = EntityTypeBuilderShim.class, prefix = \"patchwork$\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1ODQyOA==", "bodyText": "You need the shim for the proxy overwrite thing", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368758428", "createdAt": "2020-01-20T23:36:32Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.mixin.patches.bugfixes;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Implements;\n+import org.spongepowered.asm.mixin.Interface;\n+import org.spongepowered.asm.mixin.Intrinsic;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityCategory;\n+import net.minecraft.entity.EntityDimensions;\n+import net.minecraft.entity.EntityType;\n+\n+import com.patchworkmc.impl.patches.bugfixes.EntityTypeBuilderShim;\n+\n+@Mixin(EntityType.Builder.class)\n+@Implements(@Interface(iface = EntityTypeBuilderShim.class, prefix = \"patchwork$\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTUyMw=="}, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk0OTEyOnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MTowN1rOFfqtWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MTowN1rOFfqtWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTkxNQ==", "bodyText": "I generally put a blank line between headers and content.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368749915", "createdAt": "2020-01-20T22:51:07Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# patchwork-vanilla-patches", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk0OTYwOnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MToyMVrOFfqtnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzoyMjozNFrOFgueGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTk4Mw==", "bodyText": "Generally I use softwrap for markdown, and don't manually wrap lines.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368749983", "createdAt": "2020-01-20T22:51:21Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# patchwork-vanilla-patches\n+A collection of bugfixes and other changes to vanilla behavior that Forge makes.\n+\n+Bugfixes should be put here instead of other modules whenever possible, in order to force those fixes to be done in a way", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg1OTIwNw==", "bodyText": "156 columns seems awful long for editing in IDEA/etc, which lacks soft wrap.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r369859207", "createdAt": "2020-01-22T23:19:59Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-vanilla-patches/src/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# patchwork-vanilla-patches\n+A collection of bugfixes and other changes to vanilla behavior that Forge makes.\n+\n+Bugfixes should be put here instead of other modules whenever possible, in order to force those fixes to be done in a way", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTk4Mw=="}, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2MDEyMQ==", "bodyText": "Either way, a one line wrap does not affect the actual displayed file. (as in, it will still be soft wrapped)", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r369860121", "createdAt": "2020-01-22T23:22:34Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-vanilla-patches/src/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# patchwork-vanilla-patches\n+A collection of bugfixes and other changes to vanilla behavior that Forge makes.\n+\n+Bugfixes should be put here instead of other modules whenever possible, in order to force those fixes to be done in a way", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc0OTk4Mw=="}, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk1MDAwOnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MTozOFrOFfqt4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MTozOFrOFfqt4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1MDA0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Current changes:\n          \n          \n            \n            ## Current changes", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368750048", "createdAt": "2020-01-20T22:51:38Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/README.md", "diffHunk": "@@ -0,0 +1,8 @@\n+# patchwork-vanilla-patches\n+A collection of bugfixes and other changes to vanilla behavior that Forge makes.\n+\n+Bugfixes should be put here instead of other modules whenever possible, in order to force those fixes to be done in a way\n+that it doesn't break other mods.\n+\n+Current changes:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk1MjMwOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/resources/patchwork-extensions.mixins.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MzoxMVrOFfqvOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1MzoxMVrOFfqvOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1MDM5Mg==", "bodyText": "Duplicate entry?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368750392", "createdAt": "2020-01-20T22:53:11Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions/src/main/resources/patchwork-extensions.mixins.json", "diffHunk": "@@ -3,7 +3,10 @@\n   \"package\": \"com.patchworkmc.mixin.extension\",\n   \"compatibilityLevel\": \"JAVA_8\",\n   \"mixins\": [\n-    \"MixinStatusEffect\"\n+    \"MixinEntityType\",\n+    \"MixinEntityTypeBuilder\",\n+    \"MixinStatusEffect\",\n+    \"MixinEntityTypeBuilder\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODk1NDIzOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeExtensions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1NDozMFrOFfqwVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMjo1NDozMFrOFfqwVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODc1MDY3Nw==", "bodyText": "Make this a javadoc of the interface?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r368750677", "createdAt": "2020-01-20T22:54:30Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeExtensions.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+\n+public interface PatchworkEntityTypeExtensions<T extends Entity> {\n+\t// Patchwork: Forge does this through patching the constructor instead", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34f351c9f32fcb7a7c034a1aa6a08ecf112f789c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Mjc3NzE0OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQwNToxOTo1OFrOFhu2vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMzoxNToxMlrOFkfavQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNTAwNg==", "bodyText": "One question? why is this class required? You don't need an interface to add methods iirc.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r370915006", "createdAt": "2020-01-25T05:19:58Z", "author": {"login": "shedaniel"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeBuilderExtensions<T extends Entity> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7df84af809e083268f684b79f9ab06b68c2035a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcxNzc0Ng==", "bodyText": "Maybe not (i'm not sure from the docs), but not including this makes it impossible to reference our added methods with duck typing in Fabric code.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r372717746", "createdAt": "2020-01-30T01:20:38Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeBuilderExtensions<T extends Entity> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNTAwNg=="}, "originalCommit": {"oid": "e7df84af809e083268f684b79f9ab06b68c2035a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwOTY3Ng==", "bodyText": "On one hand we don't need this because we don't use this directly, on the other other mods may want to compile against this. I'm still uncertain whether it's necessary.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373309676", "createdAt": "2020-01-31T04:14:49Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeBuilderExtensions<T extends Entity> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNTAwNg=="}, "originalCommit": {"oid": "e7df84af809e083268f684b79f9ab06b68c2035a"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzgwNQ==", "bodyText": "If we have patchwork-patcher patching source code this is required.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373807805", "createdAt": "2020-02-01T23:15:12Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeBuilderExtensions<T extends Entity> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDkxNTAwNg=="}, "originalCommit": {"oid": "e7df84af809e083268f684b79f9ab06b68c2035a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzIwNjI4OnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjozNTozMFrOFhyLcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQwMjozNTozMFrOFhyLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2OTQ1Nw==", "bodyText": "After some discussion in #mixin, I don't think that this will work in production, since it doesn't get remapped. We'll need another approach perhaps.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r370969457", "createdAt": "2020-01-26T02:35:30Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "diffHunk": "@@ -0,0 +1,83 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2019, 2019\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.mixin.patches.bugfixes;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Implements;\n+import org.spongepowered.asm.mixin.Interface;\n+import org.spongepowered.asm.mixin.Intrinsic;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityCategory;\n+import net.minecraft.entity.EntityDimensions;\n+import net.minecraft.entity.EntityType;\n+\n+import com.patchworkmc.impl.patches.bugfixes.EntityTypeBuilderShim;\n+\n+@Mixin(EntityType.Builder.class)\n+@Implements(@Interface(iface = EntityTypeBuilderShim.class, prefix = \"patchwork$\"))\n+public abstract class MixinEntityTypeBuilder<T extends Entity> {\n+\t@Unique\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t@Shadow\n+\tpublic abstract EntityType<T> build(String id);\n+\n+\t@Shadow\n+\t@Final\n+\tprivate EntityType.EntityFactory<T> factory;\n+\n+\t@Shadow\n+\t@Final\n+\tprivate EntityCategory category;\n+\n+\t@Shadow\n+\tprivate boolean saveable;\n+\n+\t@Shadow\n+\tprivate boolean summonable;\n+\n+\t@Shadow\n+\tprivate boolean fireImmune;\n+\n+\t@Shadow\n+\tprivate boolean field_19424;\n+\n+\t@Shadow\n+\tprivate EntityDimensions size;\n+\n+\t/**\n+\t * Fixes MC-170128: Cannot build an EntityType without a datafixer due to an IllegalArgumentException.\n+\t */\n+\t@Intrinsic(displace = true)\n+\tpublic EntityType<T> patchwork$build(String id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7df84af809e083268f684b79f9ab06b68c2035a"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODI0MjM2OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxNToyNVrOFkBBNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxNToyNVrOFkBBNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwOTc1MA==", "bodyText": "Note that setCustomClientFactory will be handled by the networking module.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373309750", "createdAt": "2020-01-31T04:15:25Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeBuilderExtensions.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeBuilderExtensions<T extends Entity> {\n+\tEntityType.Builder<T> setUpdateInterval(int interval);\n+\n+\tEntityType.Builder<T> setTrackingRange(int range);\n+\n+\tEntityType.Builder<T> setShouldReceiveVelocityUpdates(boolean value);\n+\n+\t// TODO: setCustomClientFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359f42cfd375c5c017c5f6f23b48acb768c7ff38"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODI0MjUwOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeExtensions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxNTozMlrOFkBBTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxNTozMlrOFkBBTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMwOTc3NA==", "bodyText": "Same here", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373309774", "createdAt": "2020-01-31T04:15:32Z", "author": {"login": "coderbot16"}, "path": "patchwork-extensions/src/main/java/com/patchworkmc/impl/extension/PatchworkEntityTypeExtensions.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.impl.extension;\n+\n+import net.minecraft.entity.Entity;\n+\n+/**\n+ * Forge does this through patching the constructor instead, we just add methods with mixins instead.\n+ */\n+public interface PatchworkEntityTypeExtensions<T extends Entity> {\n+\tvoid setUpdateInterval(int interval);\n+\n+\tvoid setTrackingRange(int range);\n+\n+\tvoid setShouldReceiveVelocityUpdates(boolean value);\n+\n+\t// TODO: setCustomClientFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359f42cfd375c5c017c5f6f23b48acb768c7ff38"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODI0NjM4OnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxOTo0N1rOFkBDqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoxOTo0N1rOFkBDqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDM3Nw==", "bodyText": "All of these Shadows appear to be unused....", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373310377", "createdAt": "2020-01-31T04:19:47Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.mixin.patches.bugfixes;\n+\n+import com.mojang.datafixers.DSL;\n+import com.mojang.datafixers.schemas.Schema;\n+import com.mojang.datafixers.types.Type;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityCategory;\n+import net.minecraft.entity.EntityDimensions;\n+import net.minecraft.entity.EntityType;\n+\n+@Mixin(EntityType.Builder.class)\n+public abstract class MixinEntityTypeBuilder<T extends Entity> {\n+\t@Unique\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t@Shadow\n+\t@Final\n+\tprivate EntityType.EntityFactory<T> factory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359f42cfd375c5c017c5f6f23b48acb768c7ff38"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODI0NzEwOnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/main/resources/fabric.mod.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNDoyMDoyNFrOFkBEFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMjowNDo0MFrOFkfPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDQ4Ng==", "bodyText": "Does it depend on patchwork-fml? It's not in the build gradle.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373310486", "createdAt": "2020-01-31T04:20:24Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"patchwork-vanilla-patches\",\n+  \"name\": \"Patchwork Vanilla Patches\",\n+  \"version\": \"${version}\",\n+  \"license\": \"LGPL-2.1-only\",\n+  \"icon\": \"assets/patchwork-vanilla-patches/icon.png\",\n+  \"contact\": {\n+    \"issues\": \"https://github.com/PatchworkMC/patchwork-api/issues\",\n+    \"sources\": \"https://github.com/PatchworkMC/patchwork-api\"\n+  },\n+  \"authors\": [\n+    \"PatchworkMC\"\n+  ],\n+  \"depends\": {\n+    \"fabricloader\": \">=0.6.2\",\n+    \"patchwork-fml\": \"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359f42cfd375c5c017c5f6f23b48acb768c7ff38"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNDk1NQ==", "bodyText": "it's an oversight, will remove it", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373804955", "createdAt": "2020-02-01T22:04:40Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-vanilla-patches/src/main/resources/fabric.mod.json", "diffHunk": "@@ -0,0 +1,27 @@\n+{\n+  \"schemaVersion\": 1,\n+  \"id\": \"patchwork-vanilla-patches\",\n+  \"name\": \"Patchwork Vanilla Patches\",\n+  \"version\": \"${version}\",\n+  \"license\": \"LGPL-2.1-only\",\n+  \"icon\": \"assets/patchwork-vanilla-patches/icon.png\",\n+  \"contact\": {\n+    \"issues\": \"https://github.com/PatchworkMC/patchwork-api/issues\",\n+    \"sources\": \"https://github.com/PatchworkMC/patchwork-api\"\n+  },\n+  \"authors\": [\n+    \"PatchworkMC\"\n+  ],\n+  \"depends\": {\n+    \"fabricloader\": \">=0.6.2\",\n+    \"patchwork-fml\": \"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxMDQ4Ng=="}, "originalCommit": {"oid": "359f42cfd375c5c017c5f6f23b48acb768c7ff38"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTk0MDIyOnYy", "diffSide": "RIGHT", "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToyMTozNlrOFkjH4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxOToyMTozNlrOFkjH4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2ODUxNA==", "bodyText": "build should not get remapped.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t@Redirect(method = \"build\", at = @At(value = \"INVOKE\", target = \"Lcom/mojang/datafixers/schemas/Schema;getChoiceType(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;\"), remap = false)\n          \n          \n            \n            \t@Redirect(method = \"build\", at = @At(value = \"INVOKE\", target = \"Lcom/mojang/datafixers/schemas/Schema;getChoiceType(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;\", remap = false))", "url": "https://github.com/PatchworkMC/patchwork-api/pull/30#discussion_r373868514", "createdAt": "2020-02-02T19:21:36Z", "author": {"login": "coderbot16"}, "path": "patchwork-vanilla-patches/src/main/java/com/patchworkmc/mixin/patches/bugfixes/MixinEntityTypeBuilder.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package com.patchworkmc.mixin.patches.bugfixes;\n+\n+import com.mojang.datafixers.DSL;\n+import com.mojang.datafixers.schemas.Schema;\n+import com.mojang.datafixers.types.Type;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+\n+import net.minecraft.entity.Entity;\n+import net.minecraft.entity.EntityType;\n+\n+@Mixin(EntityType.Builder.class)\n+public abstract class MixinEntityTypeBuilder<T extends Entity> {\n+\t@Unique\n+\tprivate static final Logger LOGGER = LogManager.getLogger();\n+\n+\t/**\n+\t * Fixes MC-170128: Cannot build an EntityType without a datafixer due to an IllegalArgumentException.\n+\t */\n+\t@Redirect(method = \"build\", at = @At(value = \"INVOKE\", target = \"Lcom/mojang/datafixers/schemas/Schema;getChoiceType(Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type;\"), remap = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3b7bc9d54f0d6bda3789fa0388029d84247ab46"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1480, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}