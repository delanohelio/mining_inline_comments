{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjM5NDI5", "number": 41, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoxNToyMVrODctYIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMjo1N1rODctiSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDMwMTc4OnYy", "diffSide": "RIGHT", "path": "patchwork-gui/src/main/java/com/patchworkmc/mixin/gui/MixinKeyboard.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoxNToyMVrOFk5KBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoxNToyMVrOFk5KBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIyOTUxMQ==", "bodyText": "Change all the mixin names in this class to something meaningful, like hookCharTypedEventPre", "url": "https://github.com/PatchworkMC/patchwork-api/pull/41#discussion_r374229511", "createdAt": "2020-02-03T17:15:21Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/com/patchworkmc/mixin/gui/MixinKeyboard.java", "diffHunk": "@@ -74,20 +75,26 @@ private void postKeyEvent(int i, boolean[] bls, ParentElement element, int key,\n \t}\n \n \t@Inject(method = \"method_1458\", at = @At(\"HEAD\"), cancellable = true)\n-\tprivate static void charEvent(Element element, int character, int mods, CallbackInfo info) {\n+\tprivate static void method_1458(Element element, int character, int mods, CallbackInfo info) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08952fc0c33fc18bf4d28ceecd57e176b69140db"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDMyNzc2OnYy", "diffSide": "RIGHT", "path": "patchwork-gui/src/main/java/com/patchworkmc/mixin/gui/MixinKeyboard.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMjo1N1rOFk5Zsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMjo1N1rOFk5Zsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMzUyMw==", "bodyText": "won't this only fire the event if element.charTyped() returns false? Is that intentional?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/41#discussion_r374233523", "createdAt": "2020-02-03T17:22:57Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-gui/src/main/java/com/patchworkmc/mixin/gui/MixinKeyboard.java", "diffHunk": "@@ -74,20 +75,26 @@ private void postKeyEvent(int i, boolean[] bls, ParentElement element, int key,\n \t}\n \n \t@Inject(method = \"method_1458\", at = @At(\"HEAD\"), cancellable = true)\n-\tprivate static void charEvent(Element element, int character, int mods, CallbackInfo info) {\n+\tprivate static void preCharTyped(Element element, int character, int mods, CallbackInfo info) {\n \t\tif (MinecraftForge.EVENT_BUS.post(new GuiScreenEvent.KeyboardCharTypedEvent.Pre((Screen) element, (char) character, mods))) {\n \t\t\tinfo.cancel();\n-\t\t} else if (!element.charTyped((char) character, mods)) {\n-\t\t\tMinecraftForge.EVENT_BUS.post(new GuiScreenEvent.KeyboardCharTypedEvent.Post((Screen) element, (char) character, mods));\n \t\t}\n \t}\n \n+\t@Redirect(method = \"method_1458\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/client/gui/Element;charTyped(CI)Z\"))\n+\tprivate static boolean charTyped(Element element, char character, int mods) {\n+\t\treturn element.charTyped(character, mods) || MinecraftForge.EVENT_BUS.post(new GuiScreenEvent.KeyboardCharTypedEvent.Post((Screen) element, character, mods));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a54a781df33dffafbbb5cf39e8b9d64e5b8ae960"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1498, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}