{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NjAxNDEy", "number": 118, "title": "Impl PlayerChangedDimensionEvent, PlayerRespawnEvent and PlayerLoggedOutEvent", "bodyText": "Implemented PlayerEvents:\n\nItemPickupEvent\nItemCraftedEvent\nItemSmeltedEvent\nPlayerLoggedOutEvent\nPlayerRespawnEvent\nPlayerChangedDimensionEvent\n\nThe rest of PlayerEvents will be implemented in a separate pr.", "createdAt": "2020-07-10T19:11:28Z", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118", "merged": true, "mergeCommit": {"oid": "35cf663d430476558caa65703da8d17d0782c364"}, "closed": true, "closedAt": "2020-07-29T20:05:31Z", "author": {"login": "rikka0w0"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczojKpAH2gAyNDQ3NjAxNDEyOmI4ZTI1NTI1NDdhMGI5Y2FmMTg0MTJlOWVjYzA0NGI1ZmE5YTRiZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5wt77gFqTQ1Nzg1NjMxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b8e2552547a0b9caf18412e9ecc044b5fa9a4bd9", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/b8e2552547a0b9caf18412e9ecc044b5fa9a4bd9", "committedDate": "2020-07-10T19:10:50Z", "message": "Impl PlayerChangedDimensionEvent, PlayerRespawnEvent and\nPlayerLoggedOutEvent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/17f948820f4271ef207fe4c80684b81f4b013add", "committedDate": "2020-07-10T19:55:49Z", "message": "Impl ItemPickupEvent, ItemCraftedEvent, ItemSmeltedEvent in PlayerEvent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwOTIwMDk4", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#pullrequestreview-450920098", "createdAt": "2020-07-17T19:52:49Z", "commit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTo1Mjo0OVrOGzfYHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxOTo1Njo1NVrOGzffDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NDYzOQ==", "bodyText": "This indentation seems a bit odd, but I'm guessing it's correct based on checkstyle passing...", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456644639", "createdAt": "2020-07-17T19:52:49Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinCraftingResultSlot.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+\n+import net.minecraft.container.CraftingResultSlot;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.inventory.CraftingInventory;\n+import net.minecraft.item.ItemStack;\n+\n+import net.patchworkmc.impl.event.entity.PlayerEvents;\n+\n+@Mixin(CraftingResultSlot.class)\n+public abstract class MixinCraftingResultSlot {\n+\t@Shadow\n+\t@Final\n+\tprivate PlayerEntity player;\n+\n+\t@Shadow\n+\t@Final\n+\tprivate CraftingInventory craftingInv;\n+\n+\t@Inject(method = \"onCrafted(Lnet/minecraft/item/ItemStack;)V\",\n+\t\t\tat = @At(\n+\t\t\t\t\tvalue = \"INVOKE\",\n+\t\t\t\t\tshift = Shift.AFTER,\n+\t\t\t\t\tordinal = 0,\n+\t\t\t\t\ttarget = \"net/minecraft/item/ItemStack.onCraft(Lnet/minecraft/world/World;Lnet/minecraft/entity/player/PlayerEntity;I)V\"\n+\t\t\t\t\t)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NDg4Mw==", "bodyText": "This method name is a bit strange. Maybe onStackCrafted?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456644883", "createdAt": "2020-07-17T19:53:26Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinCraftingResultSlot.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+\n+import net.minecraft.container.CraftingResultSlot;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.inventory.CraftingInventory;\n+import net.minecraft.item.ItemStack;\n+\n+import net.patchworkmc.impl.event.entity.PlayerEvents;\n+\n+@Mixin(CraftingResultSlot.class)\n+public abstract class MixinCraftingResultSlot {\n+\t@Shadow\n+\t@Final\n+\tprivate PlayerEntity player;\n+\n+\t@Shadow\n+\t@Final\n+\tprivate CraftingInventory craftingInv;\n+\n+\t@Inject(method = \"onCrafted(Lnet/minecraft/item/ItemStack;)V\",\n+\t\t\tat = @At(\n+\t\t\t\t\tvalue = \"INVOKE\",\n+\t\t\t\t\tshift = Shift.AFTER,\n+\t\t\t\t\tordinal = 0,\n+\t\t\t\t\ttarget = \"net/minecraft/item/ItemStack.onCraft(Lnet/minecraft/world/World;Lnet/minecraft/entity/player/PlayerEntity;I)V\"\n+\t\t\t\t\t)\n+\t)\n+\tprivate void onCrafted_stack_onCraft(ItemStack stack, CallbackInfo ci) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NTQ1OQ==", "bodyText": "See above, maybe onCraftingFinished?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456645459", "createdAt": "2020-07-17T19:54:49Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinFurnaceOutputSlot.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import org.spongepowered.asm.mixin.Final;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.container.FurnaceOutputSlot;\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.item.ItemStack;\n+\n+import net.patchworkmc.impl.event.entity.PlayerEvents;\n+\n+@Mixin(FurnaceOutputSlot.class)\n+public abstract class MixinFurnaceOutputSlot {\n+\t@Shadow\n+\t@Final\n+\tprivate PlayerEntity player;\n+\n+\t@Inject(method = \"onCrafted(Lnet/minecraft/item/ItemStack;)V\",\n+\t\t\tat = @At(\"RETURN\")\n+\t)\n+\tprivate void onCrafted_return(ItemStack stack, CallbackInfo ci) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NTY1OA==", "bodyText": "This indentation is really weird...", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456645658", "createdAt": "2020-07-17T19:55:11Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinItemEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+\n+import net.minecraft.entity.ItemEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+\n+import net.patchworkmc.impl.event.entity.PlayerEvents;\n+\n+@Mixin(ItemEntity.class)\n+public abstract class MixinItemEntity {\n+\t@Inject(method = \"onPlayerCollision\",\n+\t\t\tat = @At(\n+\t\t\t\t\tvalue = \"INVOKE\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NjA5MQ==", "bodyText": "See above, don't have a great idea for this one though. If using underscores is just the style for this kind of inject it's reasonable enough, though it's not very descriptive about what exactly it's doing.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456646091", "createdAt": "2020-07-17T19:56:15Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinItemEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+\n+import net.minecraft.entity.ItemEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+\n+import net.patchworkmc.impl.event.entity.PlayerEvents;\n+\n+@Mixin(ItemEntity.class)\n+public abstract class MixinItemEntity {\n+\t@Inject(method = \"onPlayerCollision\",\n+\t\t\tat = @At(\n+\t\t\t\t\tvalue = \"INVOKE\",\n+\t\t\t\t\tshift = Shift.BEFORE,\n+\t\t\t\t\tordinal = 0,\n+\t\t\t\t\ttarget = \"net/minecraft/item/ItemStack.isEmpty()Z\"\n+\t\t\t\t\t)\n+\t)\n+\tprivate void onPlayerCollision_isEmpty(PlayerEntity player, CallbackInfo ci) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjY0NjQxNQ==", "bodyText": "Does this need to be a thread local?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#discussion_r456646415", "createdAt": "2020-07-17T19:56:55Z", "author": {"login": "leo60228"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinServerPlayerEntity.java", "diffHunk": "@@ -49,4 +58,52 @@ private void hookCopyFromForCloneEvent(ServerPlayerEntity oldPlayer, boolean ali\n \t\tServerPlayerEntity speThis = (ServerPlayerEntity) (Object) this;\n \t\tMinecraftForge.EVENT_BUS.post(new PlayerEvent.Clone(speThis, oldPlayer, !alive));\n \t}\n+\n+\t////////////////////////////////////\n+\t// PlayerChangedDimensionEvent\n+\t////////////////////////////////////\n+\t@Inject(method = \"teleport\",\n+\t\t\tat = @At(\n+\t\t\t\t\tvalue = \"INVOKE\",\n+\t\t\t\t\tshift = Shift.AFTER,\n+\t\t\t\t\tordinal = 0,\n+\t\t\t\t\ttarget = \"net/minecraft/server/PlayerManager.method_14594(Lnet/minecraft/server/network/ServerPlayerEntity;)V\"\n+\t\t\t\t\t),\n+\t\t\tlocals = LocalCapture.CAPTURE_FAILHARD\n+\t) // PlayerManager.method_14594 -> sendInventory\n+\tprivate void teleport_sendInventory(ServerWorld targetWorld, double x, double y, double z, float yaw, float pitch, CallbackInfo info, ServerWorld serverWorld, LevelProperties levelProperties) {\n+\t\tServerPlayerEntity me = (ServerPlayerEntity) (Object) this;\n+\t\tPlayerEvents.firePlayerChangedDimensionEvent(me, serverWorld.dimension.getType(), me.dimension);\n+\t}\n+\n+\t@Unique\n+\tprivate static final ThreadLocal<DimensionType> changeDimension_from = new ThreadLocal<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17f948820f4271ef207fe4c80684b81f4b013add"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "757a8d17f1ac9b3f86eb4d7acdf76eaf80fdedbf", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/757a8d17f1ac9b3f86eb4d7acdf76eaf80fdedbf", "committedDate": "2020-07-22T13:41:46Z", "message": "Merge remote-tracking branch 'origin/master' into feature/playerevent\n\nConflicts:\n\tpatchwork-events-entity/src/main/java/net/patchworkmc/impl/event/entity/EntityEvents.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8241ab25288811009d812151fe84e6577793d025", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/8241ab25288811009d812151fe84e6577793d025", "committedDate": "2020-07-22T13:55:20Z", "message": "Add methods to the god class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1941e941b6006b933cd4c47a0c39a4c898c5d5cb", "author": {"user": {"login": "rikka0w0", "name": "Rikka0_0\u5c0f\u516d\u82b1"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/1941e941b6006b933cd4c47a0c39a4c898c5d5cb", "committedDate": "2020-07-29T08:31:56Z", "message": "Apply leo60228's suggestion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODU2MzEz", "url": "https://github.com/PatchworkMC/patchwork-api/pull/118#pullrequestreview-457856313", "createdAt": "2020-07-29T20:05:23Z", "commit": {"oid": "1941e941b6006b933cd4c47a0c39a4c898c5d5cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 902, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}