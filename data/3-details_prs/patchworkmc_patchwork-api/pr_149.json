{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTY1MDA2", "number": 149, "title": "Use Fabric's world load event.", "bodyText": "Fixes #148.\nMinor point of discussion: how much do we care about the overworld event being fired earlier than Forge does it? I've separated out the workaround for that into the second commit, so that can easily be removed if we want.", "createdAt": "2020-07-24T08:54:24Z", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149", "merged": true, "mergeCommit": {"oid": "8530df3f474e8b8793a637d0db263fade672372c"}, "closed": true, "closedAt": "2020-07-26T21:00:43Z", "author": {"login": "kitlith"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3_5DNgH2gAyNDU2MTY1MDA2OmJmYjRmOTJmNWZhNGE0NmNhZGYxNmUwOGVmN2YwNWFmYjFkMWUwYmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4ztMnAFqTQ1NTM5NDk5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bfb4f92f5fa4a46cadf16e08ef7f05afb1d1e0bd", "author": {"user": {"login": "kitlith", "name": "Kitlith"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/bfb4f92f5fa4a46cadf16e08ef7f05afb1d1e0bd", "committedDate": "2020-07-24T08:38:15Z", "message": "Use World Load event in fabric api introduced by 0.15.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6", "author": {"user": {"login": "kitlith", "name": "Kitlith"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6", "committedDate": "2020-07-24T08:48:35Z", "message": "Workaround: Fire overworld load event later"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mjk0MTE0", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#pullrequestreview-455294114", "createdAt": "2020-07-25T16:11:46Z", "commit": {"oid": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNjoxMTo0N1rOG3Fwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNjoxMTo0N1rOG3Fwig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA==", "bodyText": "Shouldn't the inject target be in Lnet/minecraft/whatever format?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460419210", "createdAt": "2020-07-25T16:11:47Z", "author": {"login": "i509VCB"}, "path": "patchwork-events-world/src/main/java/net/patchworkmc/mixin/event/world/MixinMinecraftServer.java", "diffHunk": "@@ -47,42 +48,10 @@ public MixinMinecraftServer(String name) {\n \t@Final\n \tprivate Map<DimensionType, ServerWorld> worlds;\n \n-\t/*\n-\t// This is a variant of the world load hook that is less likely to break mods and more likely to break on updates.\n-\t// Should get called once per loop, regardless of which if branch it takes.\n-\t@Inject(\n-\t\tmethod = \"createWorlds\",\n-\t\tslice = @Slice(\n-\t\t\tfrom = @At(value = \"INVOKE\", target = \"java/util/Iterator.hasNext ()Z\")\n-\t\t),\n-\t\tat = @At(value = \"JUMP\", opcode = Opcodes.GOTO),\n-\t\tlocals = LocalCapture.CAPTURE_FAILHARD\n-\t)\n-\tprivate void hookCreateWorlds(WorldSaveHandler worldSaveHandler, LevelProperties properties, LevelInfo levelInfo, WorldGenerationProgressListener worldGenerationProgressListener, CallbackInfo ci, ServerWorld serverWorld, ServerWorld serverWorld2, Iterator var7, DimensionType dimensionType) {\n-\t\tWorldEvents.onWorldLoad(this.worlds.get(dimensionType));\n-\t}\n-\n-\t*/\n-\n-\t// This injection gets called at the beginning of each loop, and is used to special case the overworld dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Iterator.next ()Ljava/lang/Object;\"))\n-\tprivate Object proxyNextWorldToSpecialCaseOverworld(Iterator<DimensionType> iterator) {\n-\t\tDimensionType type = iterator.next();\n-\n-\t\tif (type == DimensionType.OVERWORLD) {\n-\t\t\tWorldEvents.onWorldLoad(this.worlds.get(type));\n-\t\t}\n-\n-\t\treturn type;\n-\t}\n-\n-\t// This injection handles every other dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", ordinal = 1))\n-\tprivate Object proxyPutWorld(Map<Object, Object> worlds, Object type, Object world) {\n-\t\tworlds.put(type, world);\n-\t\tWorldEvents.onWorldLoad((ServerWorld) world);\n-\n-\t\treturn world;\n+\t// Fabric usually fires the event much earlier in the method, so this is just picking a point closer to when Forge would fire it.\n+\t@Inject(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"net/minecraft/world/dimension/DimensionType.getAll ()Ljava/lang/Iterable;\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a593473ea40d77d24901b3523ed081d80db377", "author": {"user": {"login": "kitlith", "name": "Kitlith"}}, "url": "https://github.com/PatchworkMC/patchwork-api/commit/49a593473ea40d77d24901b3523ed081d80db377", "committedDate": "2020-07-25T20:09:02Z", "message": "Add dep on fabric api to patchwork-events-world.\n\nTODO: we should go through and accurately state our fabric api\ndependencies for all modules."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1Mzk0OTk5", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#pullrequestreview-455394999", "createdAt": "2020-07-26T21:00:07Z", "commit": {"oid": "49a593473ea40d77d24901b3523ed081d80db377"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMTowMDowN1rOG3PI3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMTowMDowN1rOG3PI3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3Mjg5Mg==", "bodyText": "i con't care about the signature format as long as it's readable and it applies", "url": "https://github.com/PatchworkMC/patchwork-api/pull/149#discussion_r460572892", "createdAt": "2020-07-26T21:00:07Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/patchworkmc/mixin/event/world/MixinMinecraftServer.java", "diffHunk": "@@ -47,42 +48,10 @@ public MixinMinecraftServer(String name) {\n \t@Final\n \tprivate Map<DimensionType, ServerWorld> worlds;\n \n-\t/*\n-\t// This is a variant of the world load hook that is less likely to break mods and more likely to break on updates.\n-\t// Should get called once per loop, regardless of which if branch it takes.\n-\t@Inject(\n-\t\tmethod = \"createWorlds\",\n-\t\tslice = @Slice(\n-\t\t\tfrom = @At(value = \"INVOKE\", target = \"java/util/Iterator.hasNext ()Z\")\n-\t\t),\n-\t\tat = @At(value = \"JUMP\", opcode = Opcodes.GOTO),\n-\t\tlocals = LocalCapture.CAPTURE_FAILHARD\n-\t)\n-\tprivate void hookCreateWorlds(WorldSaveHandler worldSaveHandler, LevelProperties properties, LevelInfo levelInfo, WorldGenerationProgressListener worldGenerationProgressListener, CallbackInfo ci, ServerWorld serverWorld, ServerWorld serverWorld2, Iterator var7, DimensionType dimensionType) {\n-\t\tWorldEvents.onWorldLoad(this.worlds.get(dimensionType));\n-\t}\n-\n-\t*/\n-\n-\t// This injection gets called at the beginning of each loop, and is used to special case the overworld dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Iterator.next ()Ljava/lang/Object;\"))\n-\tprivate Object proxyNextWorldToSpecialCaseOverworld(Iterator<DimensionType> iterator) {\n-\t\tDimensionType type = iterator.next();\n-\n-\t\tif (type == DimensionType.OVERWORLD) {\n-\t\t\tWorldEvents.onWorldLoad(this.worlds.get(type));\n-\t\t}\n-\n-\t\treturn type;\n-\t}\n-\n-\t// This injection handles every other dimension type.\n-\t@Redirect(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"java/util/Map.put (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\", ordinal = 1))\n-\tprivate Object proxyPutWorld(Map<Object, Object> worlds, Object type, Object world) {\n-\t\tworlds.put(type, world);\n-\t\tWorldEvents.onWorldLoad((ServerWorld) world);\n-\n-\t\treturn world;\n+\t// Fabric usually fires the event much earlier in the method, so this is just picking a point closer to when Forge would fire it.\n+\t@Inject(method = \"createWorlds\", at = @At(value = \"INVOKE\", target = \"net/minecraft/world/dimension/DimensionType.getAll ()Ljava/lang/Iterable;\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxOTIxMA=="}, "originalCommit": {"oid": "03a0815a121fd7a392d1d7ef8eb0bdea6bf4eff6"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 929, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}