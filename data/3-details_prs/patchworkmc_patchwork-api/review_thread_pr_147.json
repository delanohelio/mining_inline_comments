{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MDM3MzE1", "number": 147, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMDoyMlrOERv84w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1ODozN1rOESkrIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDQ2ODgzOnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/ItemFishedEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMDoyMlrOG2oH6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwOTowMDoyMlrOG2oH6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkzMzY3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <p>This event is cancellable.\n          \n          \n            \n             * Canceling the event will cause the player to receive no items at all.\n          \n          \n            \n             * The hook will still take the damage specified\n          \n          \n            \n             * <p>This event is cancellable.\n          \n          \n            \n             * Canceling the event will cause the player to receive no items at all.\n          \n          \n            \n             * The hook will still take the damage specified</p>", "url": "https://github.com/PatchworkMC/patchwork-api/pull/147#discussion_r459933672", "createdAt": "2020-07-24T09:00:22Z", "author": {"login": "kitlith"}, "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/ItemFishedEvent.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.entity.player;\n+\n+import java.util.List;\n+\n+import javax.annotation.Nonnegative;\n+\n+import com.google.common.base.Preconditions;\n+\n+import net.minecraft.entity.projectile.FishingBobberEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.DefaultedList;\n+\n+/**\n+ * This event is called when a player fishes an item.\n+ *\n+ * <p>This event is cancellable.\n+ * Canceling the event will cause the player to receive no items at all.\n+ * The hook will still take the damage specified", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfc4f7e2c57acb108ef3dfe6c4e5da7832025291"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTA0NTM5OnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/ItemFishedEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMToyMTozMVrOG3PRGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQyMToyMTozMVrOG3PRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU3NTAwMA==", "bodyText": "This is cancellable in forge but not here", "url": "https://github.com/PatchworkMC/patchwork-api/pull/147#discussion_r460575000", "createdAt": "2020-07-26T21:21:31Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/ItemFishedEvent.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.entity.player;\n+\n+import java.util.List;\n+\n+import javax.annotation.Nonnegative;\n+\n+import com.google.common.base.Preconditions;\n+\n+import net.minecraft.entity.projectile.FishingBobberEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.util.DefaultedList;\n+\n+/**\n+ * This event is called when a player fishes an item.\n+ *\n+ * <p>This event is cancellable.\n+ * Canceling the event will cause the player to receive no items at all.\n+ * The hook will still take the damage specified\n+ */\n+\n+public class ItemFishedEvent extends PlayerEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfc4f7e2c57acb108ef3dfe6c4e5da7832025291"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTEwNDYxOnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinFishingBobberEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1Nzo0NlrOG31EXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1Nzo0NlrOG31EXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NDMzMw==", "bodyText": "This is always -1", "url": "https://github.com/PatchworkMC/patchwork-api/pull/147#discussion_r461194333", "createdAt": "2020-07-27T21:57:46Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinFishingBobberEntity.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import java.util.List;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.ItemFishedEvent;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.entity.projectile.FishingBobberEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.loot.LootTable;\n+import net.minecraft.loot.context.LootContext;\n+\n+@Mixin(FishingBobberEntity.class)\n+public abstract class MixinFishingBobberEntity {\n+\t@Shadow\n+\tprivate boolean field_7176; // is stuck to block\n+\n+\t@Shadow\n+\tpublic abstract void remove();\n+\n+\t@Unique\n+\tprivate final ThreadLocal<Integer> rodDamage = ThreadLocal.withInitial(() -> -1);\n+\n+\t@Inject(method = \"method_6957\", at = @At(value = \"INVOKE\", target = \"Lnet/minecraft/advancement/criterion/FishingRodHookedCriterion;trigger(Lnet/minecraft/server/network/ServerPlayerEntity;Lnet/minecraft/item/ItemStack;Lnet/minecraft/entity/projectile/FishingBobberEntity;Ljava/util/Collection;)V\", ordinal = 1), cancellable = true, locals = LocalCapture.CAPTURE_FAILHARD)\n+\tprivate void onReeledIn(ItemStack itemStack, CallbackInfoReturnable<Integer> cir, int i, LootContext.Builder builder, LootTable lootTable, List<ItemStack> list) {\n+\t\tItemFishedEvent event = new ItemFishedEvent(list, this.field_7176 ? 2 : 1, (FishingBobberEntity) (Object) this);\n+\t\tMinecraftForge.EVENT_BUS.post(event);\n+\n+\t\tif (event.isCanceled()) {\n+\t\t\tthis.remove();\n+\t\t\tcir.setReturnValue(event.getRodDamage());\n+\t\t}\n+\t}\n+\n+\t@Inject(method = \"method_6957\", at = @At(\"RETURN\"), cancellable = true)\n+\tprivate void onRodDamage(ItemStack itemStack, CallbackInfoReturnable<Integer> cir) {\n+\t\tInteger damage = rodDamage.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a3f9a22822cbee0f08ae13b8b21faefac2a21d4"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTEwNjg4OnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinFishingBobberEntity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1ODozN1rOG31Fxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMTo1ODozN1rOG31Fxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTE5NDY5NQ==", "bodyText": "This is never reassigned?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/147#discussion_r461194695", "createdAt": "2020-07-27T21:58:37Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinFishingBobberEntity.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import java.util.List;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.ItemFishedEvent;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+\n+import net.minecraft.entity.projectile.FishingBobberEntity;\n+import net.minecraft.item.ItemStack;\n+import net.minecraft.loot.LootTable;\n+import net.minecraft.loot.context.LootContext;\n+\n+@Mixin(FishingBobberEntity.class)\n+public abstract class MixinFishingBobberEntity {\n+\t@Shadow\n+\tprivate boolean field_7176; // is stuck to block\n+\n+\t@Shadow\n+\tpublic abstract void remove();\n+\n+\t@Unique\n+\tprivate final ThreadLocal<Integer> rodDamage = ThreadLocal.withInitial(() -> -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a3f9a22822cbee0f08ae13b8b21faefac2a21d4"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1423, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}