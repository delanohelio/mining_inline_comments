{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwODMzNzU1", "number": 189, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoxNToxNFrOEg_DCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyMTowNlrOEnwvEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDIyODU4OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/minecraftforge/client/extensions/IForgeBakedModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoxNToxNFrOHOELdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDowMDo1NVrOHc1JEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMDU4Mg==", "bodyText": "what do you mean \"separated package\"?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r484510582", "createdAt": "2020-09-07T16:15:14Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/minecraftforge/client/extensions/IForgeBakedModel.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.client.extensions;\n+\n+import java.util.List;\n+import java.util.Random;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.BakedQuad;\n+import net.minecraft.client.texture.Sprite;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.world.BlockRenderView;\n+\n+/**\n+ * Forge makes every BakeModel including vanilla BakedModels extend this interface.\n+ * The handlePerspective and doesHandlePerspectives callback will be supported in a separated package.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5Mjg0OA==", "bodyText": "handlePerspective callback requires a lot of math classes, which obviously we dont have. \"extensions-bakedmodel\" might not be a good place for them. Furthermore, the internal detail of the way forge handle perspectives changes a lot since 1.15, so I'm still thinking...It might not worth to implement the handlePerspective callback in 1.14.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r499992848", "createdAt": "2020-10-06T04:00:55Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/minecraftforge/client/extensions/IForgeBakedModel.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.client.extensions;\n+\n+import java.util.List;\n+import java.util.Random;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.BakedQuad;\n+import net.minecraft.client.texture.Sprite;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.world.BlockRenderView;\n+\n+/**\n+ * Forge makes every BakeModel including vanilla BakedModels extend this interface.\n+ * The handlePerspective and doesHandlePerspectives callback will be supported in a separated package.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUxMDU4Mg=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjI1MTY5OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBakedModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo1NDoyNFrOHQbzdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0NDo0MlrOHQp3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDgwNA==", "bodyText": "I thought it wasn't valid for a Mixin to extend its target?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r486994804", "createdAt": "2020-09-11T11:54:24Z", "author": {"login": "williambl"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBakedModel.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import net.minecraftforge.client.extensions.IForgeBakedModel;\n+\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.json.ModelTransformation;\n+\n+@Mixin(BakedModel.class)\n+public interface MixinBakedModel extends BakedModel, IForgeBakedModel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3Mjc1OA==", "bodyText": "for interface targets, this is valid.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r487172758", "createdAt": "2020-09-11T16:59:33Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBakedModel.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import net.minecraftforge.client.extensions.IForgeBakedModel;\n+\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.json.ModelTransformation;\n+\n+@Mixin(BakedModel.class)\n+public interface MixinBakedModel extends BakedModel, IForgeBakedModel {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDgwNA=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNTEzNw==", "bodyText": "well, TIL.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r487225137", "createdAt": "2020-09-11T18:44:42Z", "author": {"login": "williambl"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBakedModel.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import net.minecraftforge.client.extensions.IForgeBakedModel;\n+\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.json.ModelTransformation;\n+\n+@Mixin(BakedModel.class)\n+public interface MixinBakedModel extends BakedModel, IForgeBakedModel {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NDgwNA=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NjI2MTk2OnYy", "diffSide": "LEFT", "path": "patchwork-extensions-blockentity/src/main/java/net/minecraftforge/common/extensions/IForgeTileEntity.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo1NzoxOVrOHQb5Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxODo0NDoyOVrOHQp22A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NjI4Nw==", "bodyText": "Is this method not needed?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r486996287", "createdAt": "2020-09-11T11:57:19Z", "author": {"login": "williambl"}, "path": "patchwork-extensions-blockentity/src/main/java/net/minecraftforge/common/extensions/IForgeTileEntity.java", "diffHunk": "@@ -171,30 +173,4 @@ default boolean canRenderBreaking() {\n \tdefault boolean hasFastRenderer() {\n \t\treturn false;\n \t}\n-\n-\t/**\n-\t * Requests a refresh for the model data of your TE\n-\t * Call this every time your {@link #getModelData()} changes.\n-\t */\n-\tdefault void requestModelDataUpdate() {\n-\t\tBlockEntity te = getTileEntity();\n-\t\tWorld world = te.getWorld();\n-\n-\t\tif (world != null && world.isClient) {\n-\t\t//\tModelDataManager.requestModelDataRefresh(te);\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Allows you to return additional model data.\n-\t * This data can be used to provide additional functionality in your {@link net.minecraft.client.renderer.model.IBakedModel}\n-\t * You need to schedule a refresh of you model data via {@link #requestModelDataUpdate()} if the result of this function changes.\n-\t * <b>Note that this method may be called on a chunk render thread instead of the main client thread</b>\n-\t *\n-\t * @return Your model data\n-\t */\n-\t//@Nonnull\n-\t//default IModelData getModelData() {\n-\t//\treturn EmptyModelData.INSTANCE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MzE3NQ==", "bodyText": "It is declared in one of our other classes", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r487173175", "createdAt": "2020-09-11T17:00:15Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-blockentity/src/main/java/net/minecraftforge/common/extensions/IForgeTileEntity.java", "diffHunk": "@@ -171,30 +173,4 @@ default boolean canRenderBreaking() {\n \tdefault boolean hasFastRenderer() {\n \t\treturn false;\n \t}\n-\n-\t/**\n-\t * Requests a refresh for the model data of your TE\n-\t * Call this every time your {@link #getModelData()} changes.\n-\t */\n-\tdefault void requestModelDataUpdate() {\n-\t\tBlockEntity te = getTileEntity();\n-\t\tWorld world = te.getWorld();\n-\n-\t\tif (world != null && world.isClient) {\n-\t\t//\tModelDataManager.requestModelDataRefresh(te);\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Allows you to return additional model data.\n-\t * This data can be used to provide additional functionality in your {@link net.minecraft.client.renderer.model.IBakedModel}\n-\t * You need to schedule a refresh of you model data via {@link #requestModelDataUpdate()} if the result of this function changes.\n-\t * <b>Note that this method may be called on a chunk render thread instead of the main client thread</b>\n-\t *\n-\t * @return Your model data\n-\t */\n-\t//@Nonnull\n-\t//default IModelData getModelData() {\n-\t//\treturn EmptyModelData.INSTANCE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NjI4Nw=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3MzYzMg==", "bodyText": "Need to do this because we want to keep things modular and also helps resolving a circular dependency problem", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r487173632", "createdAt": "2020-09-11T17:01:08Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-blockentity/src/main/java/net/minecraftforge/common/extensions/IForgeTileEntity.java", "diffHunk": "@@ -171,30 +173,4 @@ default boolean canRenderBreaking() {\n \tdefault boolean hasFastRenderer() {\n \t\treturn false;\n \t}\n-\n-\t/**\n-\t * Requests a refresh for the model data of your TE\n-\t * Call this every time your {@link #getModelData()} changes.\n-\t */\n-\tdefault void requestModelDataUpdate() {\n-\t\tBlockEntity te = getTileEntity();\n-\t\tWorld world = te.getWorld();\n-\n-\t\tif (world != null && world.isClient) {\n-\t\t//\tModelDataManager.requestModelDataRefresh(te);\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Allows you to return additional model data.\n-\t * This data can be used to provide additional functionality in your {@link net.minecraft.client.renderer.model.IBakedModel}\n-\t * You need to schedule a refresh of you model data via {@link #requestModelDataUpdate()} if the result of this function changes.\n-\t * <b>Note that this method may be called on a chunk render thread instead of the main client thread</b>\n-\t *\n-\t * @return Your model data\n-\t */\n-\t//@Nonnull\n-\t//default IModelData getModelData() {\n-\t//\treturn EmptyModelData.INSTANCE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NjI4Nw=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzIyNTA0OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r487225048", "createdAt": "2020-09-11T18:44:29Z", "author": {"login": "williambl"}, "path": "patchwork-extensions-blockentity/src/main/java/net/minecraftforge/common/extensions/IForgeTileEntity.java", "diffHunk": "@@ -171,30 +173,4 @@ default boolean canRenderBreaking() {\n \tdefault boolean hasFastRenderer() {\n \t\treturn false;\n \t}\n-\n-\t/**\n-\t * Requests a refresh for the model data of your TE\n-\t * Call this every time your {@link #getModelData()} changes.\n-\t */\n-\tdefault void requestModelDataUpdate() {\n-\t\tBlockEntity te = getTileEntity();\n-\t\tWorld world = te.getWorld();\n-\n-\t\tif (world != null && world.isClient) {\n-\t\t//\tModelDataManager.requestModelDataRefresh(te);\n-\t\t}\n-\t}\n-\n-\t/**\n-\t * Allows you to return additional model data.\n-\t * This data can be used to provide additional functionality in your {@link net.minecraft.client.renderer.model.IBakedModel}\n-\t * You need to schedule a refresh of you model data via {@link #requestModelDataUpdate()} if the result of this function changes.\n-\t * <b>Note that this method may be called on a chunk render thread instead of the main client thread</b>\n-\t *\n-\t * @return Your model data\n-\t */\n-\t//@Nonnull\n-\t//default IModelData getModelData() {\n-\t//\treturn EmptyModelData.INSTANCE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5NjI4Nw=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI3ODY2OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNDoxNlrOHYhfdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDowMToxOVrOHc1Jfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjU5Nw==", "bodyText": "patchworl", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r495476597", "createdAt": "2020-09-26T17:14:16Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.extensions.bakedmodel;\n+\n+import java.util.Random;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockModelRenderer;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockRenderView;\n+\n+public interface ForgeBlockModelRenderer {\n+\tvoid patchwork$tesselate_ModelData(IModelData modelData);\n+\tvoid patchworl$tesselateSmoothFlat_ModelData(IModelData modelData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5Mjk1OA==", "bodyText": "Sorry i didnt notice this", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r499992958", "createdAt": "2020-10-06T04:01:19Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.extensions.bakedmodel;\n+\n+import java.util.Random;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockModelRenderer;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockRenderView;\n+\n+public interface ForgeBlockModelRenderer {\n+\tvoid patchwork$tesselate_ModelData(IModelData modelData);\n+\tvoid patchworl$tesselateSmoothFlat_ModelData(IModelData modelData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjU5Nw=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI3OTIxOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNDo1NVrOHYhftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDowMjoxMlrOHc1KPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjY2Mg==", "bodyText": "Is this getting? setting? an action? Could use some documentation.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r495476662", "createdAt": "2020-09-26T17:14:55Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.extensions.bakedmodel;\n+\n+import java.util.Random;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockModelRenderer;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockRenderView;\n+\n+public interface ForgeBlockModelRenderer {\n+\tvoid patchwork$tesselate_ModelData(IModelData modelData);\n+\tvoid patchworl$tesselateSmoothFlat_ModelData(IModelData modelData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5MzE1MQ==", "bodyText": "These function are used to setup the context, which optionally contains an IModelData param. I will add some comments.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r499993151", "createdAt": "2020-10-06T04:02:12Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockModelRenderer.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.extensions.bakedmodel;\n+\n+import java.util.Random;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockModelRenderer;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockRenderView;\n+\n+public interface ForgeBlockModelRenderer {\n+\tvoid patchwork$tesselate_ModelData(IModelData modelData);\n+\tvoid patchworl$tesselateSmoothFlat_ModelData(IModelData modelData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjY2Mg=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI3OTgzOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockRenderManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNToyMVrOHYhf_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNToyMVrOHYhf_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjczNQ==", "bodyText": "same thing here", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r495476735", "createdAt": "2020-09-26T17:15:21Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/impl/extensions/bakedmodel/ForgeBlockRenderManager.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.extensions.bakedmodel;\n+\n+import java.util.Random;\n+\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockRenderManager;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.world.BlockRenderView;\n+\n+public interface ForgeBlockRenderManager {\n+\tvoid patchwork$tesselateBlock_ModelData(IModelData modelData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI4MTM3OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBlockModelRenderer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNzozOFrOHYhgsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoxNzozOFrOHYhgsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NjkxNA==", "bodyText": "This is really messy, but to be honest I don't understand the code here. Unless someone is able to show how it's done otherwise, though, this is the solution I'll accept for now.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r495476914", "createdAt": "2020-09-26T17:17:38Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinBlockModelRenderer.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import java.util.List;\n+import java.util.Random;\n+\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.Redirect;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfoReturnable;\n+import net.minecraftforge.client.extensions.IForgeBakedModel;\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.block.BlockModelRenderer;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.client.render.model.BakedQuad;\n+import net.minecraft.util.math.BlockPos;\n+import net.minecraft.util.math.Direction;\n+import net.minecraft.world.BlockRenderView;\n+\n+import net.patchworkmc.impl.extensions.bakedmodel.ModelDataParameter;\n+import net.patchworkmc.impl.extensions.bakedmodel.ForgeBlockModelRenderer;\n+\n+/**\n+ * Implements {@link net.minecraftforge.client.extensions.IForgeBakedModel#getQuads(BlockState,Direction,Random,IModelData)} and\n+ * {@link net.minecraftforge.client.extensions.IForgeBakedModel#shouldApplyDiffuseLighting()}.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTI4NDAwOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinChunkRenderer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQxNzoyMTowNlrOHYhh5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNDoxMDo0NFrOHc1RvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NzIyMg==", "bodyText": "This is also extremely messy and breaks Canvas/Sodium compat.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r495477222", "createdAt": "2020-09-26T17:21:06Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinChunkRenderer.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import java.util.Iterator;\n+import java.util.Random;\n+import java.util.Set;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockRenderType;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.RenderLayer;\n+import net.minecraft.client.render.block.BlockRenderManager;\n+import net.minecraft.client.render.chunk.ChunkOcclusionDataBuilder;\n+import net.minecraft.client.render.chunk.ChunkRenderData;\n+import net.minecraft.client.render.chunk.ChunkRenderTask;\n+import net.minecraft.client.render.chunk.ChunkRenderer;\n+import net.minecraft.client.render.chunk.ChunkRendererRegion;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+\n+import net.fabricmc.fabric.api.renderer.v1.model.FabricBakedModel;\n+import net.fabricmc.fabric.impl.client.indigo.Indigo;\n+\n+import net.patchworkmc.impl.extensions.bakedmodel.ForgeBlockRenderManager;\n+import net.patchworkmc.impl.extensions.bakedmodel.ForgeChunkRenderTask;\n+\n+/**\n+ * Mimic calling Forge's IModelData sensitive version of tesselateBlock().\n+ */\n+@Mixin(ChunkRenderer.class)\n+public abstract class MixinChunkRenderer {\n+\t/**\n+\t * This method can be better if we can talk to the Fabric API developer.\n+\t * If the implementation of {@link net.fabricmc.fabric.mixin.client.indigo.renderer.MixinChunkRenderer#hookChunkBuildTesselate}\n+\t * is placed in a separate class, it will be much easier for us.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTk5NTA2OQ==", "bodyText": "It is really hard to find a better workaround. The only solution is to talk to the Fabric team to see if they want to make some change to their code to make their hooks less invasive. I don't think we can solve this on our own, wrapping forge's rendering system using fabric's api is unlikely to give good result, because they almost don't share any feature in common.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/189#discussion_r499995069", "createdAt": "2020-10-06T04:10:44Z", "author": {"login": "rikka0w0"}, "path": "patchwork-extensions-bakedmodel/src/main/java/net/patchworkmc/mixin/extensions/bakedmodel/MixinChunkRenderer.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.bakedmodel;\n+\n+import java.util.Iterator;\n+import java.util.Random;\n+import java.util.Set;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.At.Shift;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+import org.spongepowered.asm.mixin.injection.callback.LocalCapture;\n+import net.minecraftforge.client.model.data.IModelData;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.block.BlockRenderType;\n+import net.minecraft.block.BlockState;\n+import net.minecraft.client.render.BufferBuilder;\n+import net.minecraft.client.render.RenderLayer;\n+import net.minecraft.client.render.block.BlockRenderManager;\n+import net.minecraft.client.render.chunk.ChunkOcclusionDataBuilder;\n+import net.minecraft.client.render.chunk.ChunkRenderData;\n+import net.minecraft.client.render.chunk.ChunkRenderTask;\n+import net.minecraft.client.render.chunk.ChunkRenderer;\n+import net.minecraft.client.render.chunk.ChunkRendererRegion;\n+import net.minecraft.client.render.model.BakedModel;\n+import net.minecraft.util.math.BlockPos;\n+\n+import net.fabricmc.fabric.api.renderer.v1.model.FabricBakedModel;\n+import net.fabricmc.fabric.impl.client.indigo.Indigo;\n+\n+import net.patchworkmc.impl.extensions.bakedmodel.ForgeBlockRenderManager;\n+import net.patchworkmc.impl.extensions.bakedmodel.ForgeChunkRenderTask;\n+\n+/**\n+ * Mimic calling Forge's IModelData sensitive version of tesselateBlock().\n+ */\n+@Mixin(ChunkRenderer.class)\n+public abstract class MixinChunkRenderer {\n+\t/**\n+\t * This method can be better if we can talk to the Fabric API developer.\n+\t * If the implementation of {@link net.fabricmc.fabric.mixin.client.indigo.renderer.MixinChunkRenderer#hookChunkBuildTesselate}\n+\t * is placed in a separate class, it will be much easier for us.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQ3NzIyMg=="}, "originalCommit": {"oid": "8fed9df122a833e7674c070935eacea530bdc4c2"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1457, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}