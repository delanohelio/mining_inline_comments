{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjMwMTEx", "number": 72, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MDowNlrOEAs3iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzoxOTo1MFrOEAvhgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcwNTY4OnYy", "diffSide": "RIGHT", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MDowNlrOGcJU5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MDowNlrOGcJU5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NjExNg==", "bodyText": "No need to fully qualify, it's already imported\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n          \n          \n            \n            \t * @return The {@link Identifier} with given or inferred domain", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432166116", "createdAt": "2020-05-28T22:50:06Z", "author": {"login": "coderbot16"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcxMTMzOnYy", "diffSide": "RIGHT", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MjozMlrOGcJYSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MjozMlrOGcJYSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2Njk4NQ==", "bodyText": "I know this is the forge documentation, but it doesn't paint the whole picture. If false, the prefix is forcefully updated without a warning, and if true, the prefix is not updated and there is just a warning message.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432166985", "createdAt": "2020-05-28T22:52:32Z", "author": {"login": "coderbot16"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcxMzEzOnYy", "diffSide": "RIGHT", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MzowOFrOGcJZRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNjo0NToyNVrOGcQo_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg==", "bodyText": "There's a version of this code in ExtendedForgeRegistryEntry already, it would be appreciated if you could deduplicate it.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432167236", "createdAt": "2020-05-28T22:53:08Z", "author": {"login": "coderbot16"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwNTU4MQ==", "bodyText": "You mean make ForgeRegistryEntry extend ExtendedForgeRegistryEntry?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432205581", "createdAt": "2020-05-29T01:13:17Z", "author": {"login": "qouteall"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwOTgwNA==", "bodyText": "That would be good too, but in this case it would be nice to move the logic to a helper class outside of GameData and ExtendedForgeRegistryEntry.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432209804", "createdAt": "2020-05-29T01:31:06Z", "author": {"login": "coderbot16"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4NDQ0NA==", "bodyText": "I found that making ForgeRegistryEntry extend ExtendedForgeRegistryEntry is wrong because it turns class method into interface method. And GameData is already a helper class. ExtendedForgeRegistryEntry.setRegistryName unlike this one does not replace the namespace so these two cannot be generalized.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432284444", "createdAt": "2020-05-29T06:41:09Z", "author": {"login": "qouteall"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI4NTk0OQ==", "bodyText": "oh it can be generalized but it will make the code weird", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432285949", "createdAt": "2020-05-29T06:45:25Z", "author": {"login": "qouteall"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);\n+\t\tString prefix = ModLoadingContext.get().getActiveNamespace();\n+\n+\t\tif (warnOverrides && !oldPrefix.equals(prefix) && oldPrefix.length() > 0) {\n+\t\t\tLogManager.getLogger().info(\"Potentially Dangerous alternative prefix `{}` for name `{}`, expected `{}`. This could be a intended override, but in most cases indicates a broken mod.\", oldPrefix, name, prefix);\n+\t\t\tprefix = oldPrefix;\n+\t\t}\n+\n+\t\treturn new Identifier(prefix, name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzIzNg=="}, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTcxMzczOnYy", "diffSide": "RIGHT", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MzoyN1rOGcJZpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMjo1MzoyN1rOGcJZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE2NzMzNA==", "bodyText": "This should just construct an Identifier directly, instead of combining the strings together only for them to be split again in the constructor of Identifier.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432167334", "createdAt": "2020-05-28T22:53:27Z", "author": {"login": "coderbot16"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/ForgeRegistryEntry.java", "diffHunk": "@@ -31,6 +31,14 @@ public final IForgeRegistryEntry setRegistryName(Identifier name) {\n \t\treturn this;\n \t}\n \n+\tpublic final IForgeRegistryEntry setRegistryName(String name) {\n+\t\treturn setRegistryName(new Identifier(name));\n+\t}\n+\n+\tpublic final IForgeRegistryEntry setRegistryName(String modID, String name) {\n+\t\treturn setRegistryName(modID + \":\" + name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjE0MDgwOnYy", "diffSide": "RIGHT", "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzoxOTo1MFrOGcNgGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwMzoxOTo1MFrOGcNgGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIzNDUyMw==", "bodyText": "If this is the version of the impl that is kept, instead of spamming ternaries remove them and replace with an if( index == -1) or similar. Should make the code more readable.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/72#discussion_r432234523", "createdAt": "2020-05-29T03:19:50Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-registries/src/main/java/net/minecraftforge/registries/GameData.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.registries;\n+\n+import java.util.Locale;\n+\n+import org.apache.logging.log4j.LogManager;\n+import net.minecraftforge.fml.ModLoadingContext;\n+\n+import net.minecraft.util.Identifier;\n+\n+public class GameData {\n+\t/**\n+\t * Check a name for a domain prefix, and if not present infer it from the\n+\t * current active mod container.\n+\t *\n+\t * @param name          The name or resource location\n+\t * @param warnOverrides If true, logs a warning if domain differs from that of\n+\t *                      the currently currently active mod container\n+\t *\n+\t * @return The {@link net.minecraft.util.Identifier} with given or inferred domain\n+\t */\n+\tpublic static Identifier checkPrefix(String name, boolean warnOverrides) {\n+\t\tint index = name.lastIndexOf(':');\n+\t\tString oldPrefix = index == -1 ? \"\" : name.substring(0, index).toLowerCase(Locale.ROOT);\n+\t\tname = index == -1 ? name : name.substring(index + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d6d097e31552533c261b3017492104c1272ebdb"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1529, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}