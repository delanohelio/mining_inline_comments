{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NTA3OTMy", "number": 193, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMzoxOVrOEvnaiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMzoxOVrOEvnaiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzY0Mjk2OnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinItemEntity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMzoxOVrOHksUyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjoyMzoxOVrOHksUyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzNzAwMA==", "bodyText": "These lines are being re-indented - any particular reason?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/193#discussion_r508237000", "createdAt": "2020-10-20T06:23:19Z", "author": {"login": "ZNixian"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinItemEntity.java", "diffHunk": "@@ -35,34 +37,73 @@\n \n @Mixin(ItemEntity.class)\n public abstract class MixinItemEntity {\n-\t@Inject(method = \"onPlayerCollision\",\n-\t\t\tat = @At(\n-\t\t\t\t\tvalue = \"INVOKE\",\n-\t\t\t\t\tshift = Shift.BEFORE,\n-\t\t\t\t\tordinal = 0,\n-\t\t\t\t\ttarget = \"net/minecraft/item/ItemStack.isEmpty()Z\"\n-\t\t\t\t\t)\n-\t)\n-\tprivate void onPlayerPickUpItemEntity(PlayerEntity player, CallbackInfo ci) {\n-\t\tItemEntity me = (ItemEntity) (Object) this;\n-\t\tPlayerEvents.firePlayerItemPickupEvent(player, me, me.getStack().copy());\n-\t}\n+\t@Shadow\n+\tpublic abstract ItemStack getStack();\n+\n+\t@Shadow\n+\tprivate int pickupDelay;\n \n-\tint eventResult;\n+\t@Unique\n+\tprivate int eventResult;\n+\n+\t@Unique\n+\tprivate int preEventStackCount;\n+\n+\t@Unique\n+\tprivate ItemStack copy;\n+\n+\t// Forge just returns early from the event if the item has pickup delay, presumably\n+\t// to keep it's events from being called. To maintain compatibility with potential\n+\t// Fabric mods that might want to still have this method called from items that can't\n+\t// be picked up yet, we'll just skip calling the events.\n+\t@Unique\n+\tprivate boolean hasPickupDelay;\n+\n+\t@Inject(method = \"onPlayerCollision\", at = @At(\"HEAD\"), cancellable = true)\n+\tprivate void patchwork_checkForPickupDelay(PlayerEntity player, CallbackInfo ci) {\n+\t\thasPickupDelay = this.pickupDelay > 0;\n+\t}\n \n \t@Inject(method = \"onPlayerCollision\",\n-\t\t\tat = @At(value = \"INVOKE\", target = \"Lnet/minecraft/item/ItemStack;getCount()I\"),\n-\t\t\tcancellable = true\n+\t\t\t\t\tat = @At(value = \"INVOKE\", target = \"Lnet/minecraft/item/ItemStack;getCount()I\"),\n+\t\t\t\t\tcancellable = true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5df10296eb532be8f3033e3b092e2aa5a9f8d3"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1466, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}