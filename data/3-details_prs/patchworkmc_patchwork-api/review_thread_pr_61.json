{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjgxMzI1", "number": 61, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOTo0N1rOD6AZMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOTo0N1rOD6AZMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTUwNDUwOnYy", "diffSide": "RIGHT", "path": "patchwork-recipes/src/main/java/net/patchworkmc/mixin/recipes/MixinRecipeGridAligner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTozOTo0N1rOGRmb-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOTo1MTo0NlrOGSN2eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcyOA==", "bodyText": "Can we get some markers on where the actual code changes are with comments? I'm assuming it's just here but it's difficult to tell.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/61#discussion_r421108728", "createdAt": "2020-05-06T21:39:47Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-recipes/src/main/java/net/patchworkmc/mixin/recipes/MixinRecipeGridAligner.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.recipes;\n+\n+import java.util.Iterator;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Overwrite;\n+import org.spongepowered.asm.mixin.Shadow;\n+import net.minecraftforge.common.crafting.IShapedRecipe;\n+\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.recipe.Recipe;\n+import net.minecraft.recipe.RecipeGridAligner;\n+\n+@Mixin(RecipeGridAligner.class)\n+public interface MixinRecipeGridAligner {\n+\t@Shadow\n+\tvoid acceptAlignedInput(Iterator<?> inputs, int slot, int amount, int gridX, int gridY);\n+\n+\t/**\n+\t * @author qouteall\n+\t * @reason https://github.com/FabricMC/Mixin/issues/15\n+\t */\n+\t@Overwrite\n+\tdefault void alignRecipeToGrid(\n+\t\t\tint gridWidth, int gridHeight, int gridOutputSlot,\n+\t\t\tRecipe<?> recipe, Iterator<?> inputs, int amount\n+\t) {\n+\t\tint width = gridWidth;\n+\t\tint height = gridHeight;\n+\n+\t\tif (recipe instanceof IShapedRecipe) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d9445c12eb3056bbeff14d49fdbd9cb7a5236e"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTc1NDQ4OQ==", "bodyText": "Yes, it's generally good practice to annotate the changed parts when using @Overwrite.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/61#discussion_r421754489", "createdAt": "2020-05-07T19:51:46Z", "author": {"login": "coderbot16"}, "path": "patchwork-recipes/src/main/java/net/patchworkmc/mixin/recipes/MixinRecipeGridAligner.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.recipes;\n+\n+import java.util.Iterator;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Overwrite;\n+import org.spongepowered.asm.mixin.Shadow;\n+import net.minecraftforge.common.crafting.IShapedRecipe;\n+\n+import net.minecraft.util.math.MathHelper;\n+import net.minecraft.recipe.Recipe;\n+import net.minecraft.recipe.RecipeGridAligner;\n+\n+@Mixin(RecipeGridAligner.class)\n+public interface MixinRecipeGridAligner {\n+\t@Shadow\n+\tvoid acceptAlignedInput(Iterator<?> inputs, int slot, int amount, int gridX, int gridY);\n+\n+\t/**\n+\t * @author qouteall\n+\t * @reason https://github.com/FabricMC/Mixin/issues/15\n+\t */\n+\t@Overwrite\n+\tdefault void alignRecipeToGrid(\n+\t\t\tint gridWidth, int gridHeight, int gridOutputSlot,\n+\t\t\tRecipe<?> recipe, Iterator<?> inputs, int amount\n+\t) {\n+\t\tint width = gridWidth;\n+\t\tint height = gridHeight;\n+\n+\t\tif (recipe instanceof IShapedRecipe) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEwODcyOA=="}, "originalCommit": {"oid": "a8d9445c12eb3056bbeff14d49fdbd9cb7a5236e"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1512, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}