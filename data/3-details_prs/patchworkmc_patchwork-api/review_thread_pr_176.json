{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDAwMzI3", "number": 176, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo0NzoxMVrOEYnMCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1ODo1OFrOEYnX1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQzMzM3OnYy", "diffSide": "RIGHT", "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo0NzoxMVrOHBC3oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo0NzoxMVrOHBC3oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg1NzYzMw==", "bodyText": "i think for now I'm not going to require changing the javadocs for Forge classes besides MCP-B-Gone because it just adds noise", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470857633", "createdAt": "2020-08-14T20:47:11Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ1NDQwOnYy", "diffSide": "RIGHT", "path": "patchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEventsClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1NToyMFrOHBDECQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1NToyMFrOHBDECQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDgwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t/* ClientChunkManager.unload(II)V\n          \n          \n            \n            \t\t// Fabric fires the chunk unload event after it's been removed from the client's chunk graph. This probably won't cause any issues.\n          \n          \n            \n            \t\t/* ClientChunkManager.unload(II)V", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470860809", "createdAt": "2020-08-14T20:55:20Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEventsClient.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.impl.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.world.ChunkEvent;\n+\n+import net.fabricmc.api.ClientModInitializer;\n+import net.fabricmc.fabric.api.client.event.lifecycle.v1.ClientChunkEvents;\n+\n+public class WorldEventsClient implements ClientModInitializer {\n+\t@Override\n+\tpublic void onInitializeClient() {\n+\t\t///////////////////////////////////////////////\n+\t\t/// ChunkEvent.Load and Unload on client side\n+\t\t///////////////////////////////////////////////\n+\t\tClientChunkEvents.CHUNK_LOAD.register((server, chunk) -> MinecraftForge.EVENT_BUS.post(new ChunkEvent.Load(chunk)));\n+\t\tClientChunkEvents.CHUNK_UNLOAD.register((server, chunk) -> MinecraftForge.EVENT_BUS.post(new ChunkEvent.Unload(chunk)));\n+\t\t/* ClientChunkManager.unload(II)V", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ2MTYyOnYy", "diffSide": "RIGHT", "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1ODoxMlrOHBDIWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzoyNzoyMFrOHBFrUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MTkxNQ==", "bodyText": "Seems like you forgot to implement the patch for this on the server?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470861915", "createdAt": "2020-08-14T20:58:12Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>\n+ * {@link #Chunk} contains the Chunk this event is affecting.<br>\n+ * <br>\n+ * All children of this event are fired on the\n+ * {@link MinecraftForge#EVENT_BUS}.<br>\n+ */\n+public class ChunkEvent extends WorldEvent {\n+\tprivate final Chunk chunk;\n+\n+\tpublic ChunkEvent(Chunk chunk) {\n+\t\tsuper(WorldEvents.getWorldForChunk(chunk));\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic ChunkEvent(Chunk chunk, IWorld world) {\n+\t\tsuper(world);\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic Chunk getChunk() {\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Load is fired when vanilla Minecraft attempts to load a Chunk into\n+\t * the world.<br>\n+\t * This event is fired during chunk loading in <br>\n+\t * {@link ChunkProviderClient#loadChunk(int, int)}, <br>\n+\t * Chunk.onChunkLoad(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Load extends ChunkEvent {\n+\t\tpublic Load(Chunk chunk) {\n+\t\t\tsuper(chunk);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Unload is fired when vanilla Minecraft attempts to unload a Chunk\n+\t * from the world.<br>\n+\t * This event is fired during chunk unloading in <br>\n+\t * Chunk.onChunkUnload(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Unload extends ChunkEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwMzYzMw==", "bodyText": "On the server side, it is fired here:\n\n  \n    \n      patchwork-api/patchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEvents.java\n    \n    \n         Line 119\n      in\n      0ad78ea\n    \n    \n    \n    \n\n        \n          \n           ServerChunkEvents.CHUNK_UNLOAD.register((server, chunk) -> MinecraftForge.EVENT_BUS.post(new ChunkEvent.Unload(chunk)));", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470903633", "createdAt": "2020-08-14T23:27:20Z", "author": {"login": "rikka0w0"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>\n+ * {@link #Chunk} contains the Chunk this event is affecting.<br>\n+ * <br>\n+ * All children of this event are fired on the\n+ * {@link MinecraftForge#EVENT_BUS}.<br>\n+ */\n+public class ChunkEvent extends WorldEvent {\n+\tprivate final Chunk chunk;\n+\n+\tpublic ChunkEvent(Chunk chunk) {\n+\t\tsuper(WorldEvents.getWorldForChunk(chunk));\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic ChunkEvent(Chunk chunk, IWorld world) {\n+\t\tsuper(world);\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic Chunk getChunk() {\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Load is fired when vanilla Minecraft attempts to load a Chunk into\n+\t * the world.<br>\n+\t * This event is fired during chunk loading in <br>\n+\t * {@link ChunkProviderClient#loadChunk(int, int)}, <br>\n+\t * Chunk.onChunkLoad(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Load extends ChunkEvent {\n+\t\tpublic Load(Chunk chunk) {\n+\t\t\tsuper(chunk);\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Unload is fired when vanilla Minecraft attempts to unload a Chunk\n+\t * from the world.<br>\n+\t * This event is fired during chunk unloading in <br>\n+\t * Chunk.onChunkUnload(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Unload extends ChunkEvent {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MTkxNQ=="}, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ2MzU5OnYy", "diffSide": "RIGHT", "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1ODo1OFrOHBDJcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNVQwMDozMjo0NlrOHBGWzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MjE5NQ==", "bodyText": "This event is fired in two different spots in TACS, but you only fire it once here", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470862195", "createdAt": "2020-08-14T20:58:58Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>\n+ * {@link #Chunk} contains the Chunk this event is affecting.<br>\n+ * <br>\n+ * All children of this event are fired on the\n+ * {@link MinecraftForge#EVENT_BUS}.<br>\n+ */\n+public class ChunkEvent extends WorldEvent {\n+\tprivate final Chunk chunk;\n+\n+\tpublic ChunkEvent(Chunk chunk) {\n+\t\tsuper(WorldEvents.getWorldForChunk(chunk));\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic ChunkEvent(Chunk chunk, IWorld world) {\n+\t\tsuper(world);\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic Chunk getChunk() {\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Load is fired when vanilla Minecraft attempts to load a Chunk into\n+\t * the world.<br>\n+\t * This event is fired during chunk loading in <br>\n+\t * {@link ChunkProviderClient#loadChunk(int, int)}, <br>\n+\t * Chunk.onChunkLoad(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Load extends ChunkEvent {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNDQwMw==", "bodyText": "Server:\n\n\n  \n    \n      patchwork-api/patchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEvents.java\n    \n    \n         Line 117\n      in\n      0ad78ea\n    \n    \n    \n    \n\n        \n          \n           ServerChunkEvents.CHUNK_LOAD.register((server, chunk) -> MinecraftForge.EVENT_BUS.post(new ChunkEvent.Load(chunk))); \n        \n    \n  \n\n\n\n  \n    \n      patchwork-api/patchwork-events-world/src/main/java/net/patchworkmc/mixin/event/world/MixinThreadedAnvilChunkStorage.java\n    \n    \n         Line 64\n      in\n      0ad78ea\n    \n    \n    \n    \n\n        \n          \n           MinecraftForge.EVENT_BUS.post(new ChunkEvent.Load(chunk)); \n        \n    \n  \n\n\nClient:\n\n  \n    \n      patchwork-api/patchwork-events-world/src/main/java/net/patchworkmc/impl/event/world/WorldEventsClient.java\n    \n    \n         Line 34\n      in\n      0ad78ea\n    \n    \n    \n    \n\n        \n          \n           ClientChunkEvents.CHUNK_LOAD.register((server, chunk) -> MinecraftForge.EVENT_BUS.post(new ChunkEvent.Load(chunk))); \n        \n    \n  \n\n\n\nThis should behaves exactly the same as Forge. I dont think i missed anything.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470904403", "createdAt": "2020-08-14T23:31:31Z", "author": {"login": "rikka0w0"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>\n+ * {@link #Chunk} contains the Chunk this event is affecting.<br>\n+ * <br>\n+ * All children of this event are fired on the\n+ * {@link MinecraftForge#EVENT_BUS}.<br>\n+ */\n+public class ChunkEvent extends WorldEvent {\n+\tprivate final Chunk chunk;\n+\n+\tpublic ChunkEvent(Chunk chunk) {\n+\t\tsuper(WorldEvents.getWorldForChunk(chunk));\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic ChunkEvent(Chunk chunk, IWorld world) {\n+\t\tsuper(world);\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic Chunk getChunk() {\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Load is fired when vanilla Minecraft attempts to load a Chunk into\n+\t * the world.<br>\n+\t * This event is fired during chunk loading in <br>\n+\t * {@link ChunkProviderClient#loadChunk(int, int)}, <br>\n+\t * Chunk.onChunkLoad(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Load extends ChunkEvent {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MjE5NQ=="}, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkxNDc2Ng==", "bodyText": "I missed this file! I marked it as \"viewed\" and glossed right over it", "url": "https://github.com/PatchworkMC/patchwork-api/pull/176#discussion_r470914766", "createdAt": "2020-08-15T00:32:46Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-world/src/main/java/net/minecraftforge/event/world/ChunkEvent.java", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.world;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.chunk.Chunk;\n+\n+import net.patchworkmc.impl.event.world.WorldEvents;\n+\n+/**\n+ * ChunkEvent is fired when an event involving a chunk occurs.<br>\n+ * If a method utilizes this {@link net.minecraftforge.eventbus.api.Event} as\n+ * its parameter, the method will receive every child event of this class.<br>\n+ * <br>\n+ * {@link #Chunk} contains the Chunk this event is affecting.<br>\n+ * <br>\n+ * All children of this event are fired on the\n+ * {@link MinecraftForge#EVENT_BUS}.<br>\n+ */\n+public class ChunkEvent extends WorldEvent {\n+\tprivate final Chunk chunk;\n+\n+\tpublic ChunkEvent(Chunk chunk) {\n+\t\tsuper(WorldEvents.getWorldForChunk(chunk));\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic ChunkEvent(Chunk chunk, IWorld world) {\n+\t\tsuper(world);\n+\t\tthis.chunk = chunk;\n+\t}\n+\n+\tpublic Chunk getChunk() {\n+\t\treturn chunk;\n+\t}\n+\n+\t/**\n+\t * ChunkEvent.Load is fired when vanilla Minecraft attempts to load a Chunk into\n+\t * the world.<br>\n+\t * This event is fired during chunk loading in <br>\n+\t * {@link ChunkProviderClient#loadChunk(int, int)}, <br>\n+\t * Chunk.onChunkLoad(). <br>\n+\t * <br>\n+\t * This event is not {@link net.minecraftforge.eventbus.api.Cancelable}.<br>\n+\t * <br>\n+\t * This event does not have a result. {@link HasResult} <br>\n+\t * <br>\n+\t * This event is fired on the {@link MinecraftForge#EVENT_BUS}.<br>\n+\t */\n+\tpublic static class Load extends ChunkEvent {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MjE5NQ=="}, "originalCommit": {"oid": "0ad78ea96189fe481ce632d6a578225befc4c74a"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1448, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}