{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4OTIxODky", "number": 76, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NjowMFrOEE6ERA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjowMTowNVrOEE6Hdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxMTI0OnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NjowMFrOGi0lcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NjowMFrOGi0lcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjMyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);\n          \n          \n            \n            \t\t\t\t\t\tObject value = argMethod.invoke(annotationObject);", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166322", "createdAt": "2020-06-12T01:56:00Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -167,10 +179,9 @@ private void initAnnotationData() {\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n \t\t\t\t\tif (isArgumentMethod(argMethod)) {\n-\t\t\t\t\t\tannotationData.put(\n-\t\t\t\t\t\t\t\targMethod.getName(),\n-\t\t\t\t\t\t\t\targMethod.invoke(annotationObject)\n-\t\t\t\t\t\t);\n+\t\t\t\t\t\tObject object = argMethod.invoke(annotationObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxMzU2OnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NzozN1rOGi0myQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1NzozN1rOGi0myQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjY2NQ==", "bodyText": "I know it isn't strictly part of this PR, but the official name for these is elements. In other words, argMethods -> elements seems like a good name change.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166665", "createdAt": "2020-06-12T01:57:37Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -167,10 +179,9 @@ private void initAnnotationData() {\n \n \t\t\t\tfor (Method argMethod : argMethods) {\n \t\t\t\t\tif (isArgumentMethod(argMethod)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxNDYyOnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODoxM1rOGi0nZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODoxM1rOGi0nZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjgyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate static Object processArgumentObject(Object object) {\n          \n          \n            \n            \tprivate static Object processElementValue(Object value) {", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166820", "createdAt": "2020-06-12T01:58:13Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -235,4 +245,23 @@ public int hashCode() {\n \t\t\treturn Objects.hash(annotationType, targetType, clazz, memberName);\n \t\t}\n \t}\n+\n+\tprivate static Object processArgumentObject(Object object) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxNTIxOnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODo0MFrOGi0nxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1ODo0MFrOGi0nxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NjkxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tString memberName, Map<String, Object> annotationData\n          \n          \n            \n            \t\t\t\tString memberName, Map<String, Object> elements", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439166919", "createdAt": "2020-06-12T01:58:40Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/forgespi/language/ModFileScanData.java", "diffHunk": "@@ -123,6 +124,17 @@ public AnnotationData(\n \t\t\tthis.memberName = memberName;\n \t\t}\n \n+\t\tpublic AnnotationData(\n+\t\t\t\tType annotationType, ElementType targetType, Type clazz,\n+\t\t\t\tString memberName, Map<String, Object> annotationData", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxNTgyOnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1OTowNFrOGi0oHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1OTowNFrOGi0oHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/** @deprecated */", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167004", "createdAt": "2020-06-12T01:59:04Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;\n+\tprivate ArrayList<Object> arrayList;\n+\tprivate String arrayName;\n+\n+\tpublic static ModFileScanData.AnnotationData fromModAnnotation(Type clazz, ModAnnotation annotation) {\n+\t\treturn new ModFileScanData.AnnotationData(\n+\t\t\t\tannotation.asmType, annotation.type, clazz, annotation.member, annotation.values\n+\t\t);\n+\t}\n+\n+\tpublic ModAnnotation(ElementType type, Type asmType, String member) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = member;\n+\t}\n+\n+\t/** @deprecated */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxNjY3OnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1OTozNlrOGi0omg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMTo1OTozNlrOGi0omg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzEzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate final Map<String, Object> values;\n          \n          \n            \n            \tprivate final Map<String, Object> elements;", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167130", "createdAt": "2020-06-12T01:59:36Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTgxOTQzOnYy", "diffSide": "RIGHT", "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjowMTowNVrOGi0qLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjowMTowNVrOGi0qLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzUzMw==", "bodyText": "The methods that are just used for the ASM annotation scanning code can be pruned, since they're probably not needed otherwise.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/76#discussion_r439167533", "createdAt": "2020-06-12T02:01:05Z", "author": {"login": "coderbot16"}, "path": "patchwork-fml/src/main/java/net/minecraftforge/fml/loading/moddiscovery/ModAnnotation.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.fml.loading.moddiscovery;\n+\n+import java.lang.annotation.ElementType;\n+import java.util.ArrayList;\n+import java.util.Map;\n+\n+import com.google.common.base.MoreObjects;\n+import com.google.common.collect.Lists;\n+import com.google.common.collect.Maps;\n+import net.minecraftforge.forgespi.language.ModFileScanData;\n+import org.objectweb.asm.Type;\n+\n+public class ModAnnotation {\n+\tprivate final ElementType type;\n+\tprivate final Type asmType;\n+\tprivate final String member;\n+\tprivate final Map<String, Object> values;\n+\tprivate ArrayList<Object> arrayList;\n+\tprivate String arrayName;\n+\n+\tpublic static ModFileScanData.AnnotationData fromModAnnotation(Type clazz, ModAnnotation annotation) {\n+\t\treturn new ModFileScanData.AnnotationData(\n+\t\t\t\tannotation.asmType, annotation.type, clazz, annotation.member, annotation.values\n+\t\t);\n+\t}\n+\n+\tpublic ModAnnotation(ElementType type, Type asmType, String member) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = member;\n+\t}\n+\n+\t/** @deprecated */\n+\t@Deprecated\n+\tpublic ModAnnotation(ElementType type, Type asmType, ModAnnotation parent) {\n+\t\tthis(asmType, parent);\n+\t}\n+\n+\tpublic ModAnnotation(Type asmType, ModAnnotation parent) {\n+\t\tthis.values = Maps.newHashMap();\n+\t\tthis.type = parent.type;\n+\t\tthis.asmType = asmType;\n+\t\tthis.member = parent.member;\n+\t}\n+\n+\tpublic String toString() {\n+\t\treturn MoreObjects.toStringHelper(\"Annotation\")\n+\t\t\t\t.add(\"type\", this.type).add(\"name\", this.asmType.getClassName())\n+\t\t\t\t.add(\"member\", this.member).add(\"values\", this.values).toString();\n+\t}\n+\n+\tpublic ElementType getType() {\n+\t\treturn this.type;\n+\t}\n+\n+\tpublic Type getASMType() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b23bf65a1ac4e953d7016f533b9512e9bfdd5f88"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1536, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}