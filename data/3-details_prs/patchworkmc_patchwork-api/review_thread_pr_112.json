{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjY5NzI5", "number": 112, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0NTowNlrOEMhb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo0MzoxNFrOENbFLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTY2MTYzOnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0NTowNlrOGurkBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNTowMzoyMlrOGusZbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg==", "bodyText": "Best practice would be to type this as List, rather than ArrayList, we shouldn't care about the class of the object behind it.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451601412", "createdAt": "2020-07-08T14:45:06Z", "author": {"login": "famous1622"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwNTQ0NQ==", "bodyText": "Wait does Forge type this as ArrayList? If so :concern:", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451605445", "createdAt": "2020-07-08T14:50:34Z", "author": {"login": "famous1622"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg=="}, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwNzQ4Ng==", "bodyText": "IIRC it was a custom implementation of ArrayList to track if the ArrayList had been modified", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451607486", "createdAt": "2020-07-08T14:53:14Z", "author": {"login": "Rongmario"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg=="}, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYxMzIyNw==", "bodyText": "BOP calls setupBiomes directly through reflection. It casts the result to a List, but since the actual Forge type extends ArrayList, I thought this would be better.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451613227", "createdAt": "2020-07-08T15:00:43Z", "author": {"login": "leo60228"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg=="}, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYxNDQ1Nw==", "bodyText": "Why not go all the way and implement the class from Forge in case someone casts to it?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451614457", "createdAt": "2020-07-08T15:02:25Z", "author": {"login": "famous1622"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg=="}, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYxNTA4Nw==", "bodyText": "True, that just didn't seem necessary. I'll do that later.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451615087", "createdAt": "2020-07-08T15:03:22Z", "author": {"login": "leo60228"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTQxMg=="}, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTY2Mjk0OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0NToyM1rOGurk1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0NToyM1rOGurk1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMTYyMg==", "bodyText": "Same here.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451601622", "createdAt": "2020-07-08T14:45:23Z", "author": {"login": "famous1622"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +69,61 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static ArrayList<BiomeEntry>[] biomes = setupBiomes();\n+\n+\tprivate static ArrayList<BiomeEntry>[] setupBiomes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTY3NjcyOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/net/patchworkmc/mixin/extension/MixinMinecraftClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0ODozMFrOGurtrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNDo0ODozMFrOGurtrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYwMzg4NA==", "bodyText": "Could this just be implemented as an Accessor?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r451603884", "createdAt": "2020-07-08T14:48:30Z", "author": {"login": "famous1622"}, "path": "patchwork-extensions/src/main/java/net/patchworkmc/mixin/extension/MixinMinecraftClient.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extension;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+\n+import net.minecraft.client.MinecraftClient;\n+import net.minecraft.client.color.item.ItemColors;\n+\n+@Mixin(MinecraftClient.class)\n+public class MixinMinecraftClient {\n+\t@Shadow\n+\tprivate ItemColors itemColorMap;\n+\n+\tpublic ItemColors getItemColors() {\n+\t\treturn this.itemColorMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b73a2ce225154e5936a93caa33c3801fbd76178e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTA5MDg5OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozNTo1N1rOGwGSfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozNTo1N1rOGwGSfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4Nzg3MA==", "bodyText": "this line makes sense but it's difficult to tell what it's doing at first glance\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tList<BiomeEntry> list = idx >= biomes.length ? null : biomes[idx];\n          \n          \n            \n            \t\t// We want to return null instead of throw an exception if the index is out of bounds.\n          \n          \n            \n            \t\tList<BiomeEntry> list = idx >= biomes.length ? null : biomes[idx];", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453087870", "createdAt": "2020-07-10T21:35:57Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +70,134 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack\n+\n \t\tpublic BiomeEntry(Biome biome, int weight) {\n \t\t\tsuper(weight);\n \n+\t\t\tthis.field_76292_a = weight;\n \t\t\tthis.biome = biome;\n \t\t}\n \n \t\tprivate int getWeight() {\n \t\t\treturn this.weight;\n \t\t}\n \t}\n+\n+\t// Biomes O' Plenty pokes Forge internals. Fun\n+\tprivate static TrackedList<BiomeEntry>[] biomes = setupBiomes();\n+\n+\tprivate static TrackedList<BiomeEntry>[] setupBiomes() {\n+\t\t@SuppressWarnings(\"unchecked\")\n+\t\tTrackedList<BiomeEntry>[] currentBiomes = new TrackedList[BiomeType.values().length];\n+\t\tList<BiomeEntry> list = new ArrayList<BiomeEntry>();\n+\n+\t\tlist.add(new BiomeEntry(Biomes.FOREST, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.DARK_FOREST, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.MOUNTAINS, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.PLAINS, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.BIRCH_FOREST, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.SWAMP, 10));\n+\n+\t\tcurrentBiomes[BiomeType.WARM.ordinal()] = new TrackedList<BiomeEntry>(list);\n+\t\tlist.clear();\n+\n+\t\tlist.add(new BiomeEntry(Biomes.FOREST, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.MOUNTAINS, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.TAIGA, 10));\n+\t\tlist.add(new BiomeEntry(Biomes.PLAINS, 10));\n+\n+\t\tcurrentBiomes[BiomeType.COOL.ordinal()] = new TrackedList<BiomeEntry>(list);\n+\t\tlist.clear();\n+\n+\t\tlist.add(new BiomeEntry(Biomes.SNOWY_TUNDRA, 30));\n+\t\tlist.add(new BiomeEntry(Biomes.SNOWY_TAIGA, 10));\n+\n+\t\tcurrentBiomes[BiomeType.ICY.ordinal()] = new TrackedList<BiomeEntry>(list);\n+\t\tlist.clear();\n+\n+\t\tcurrentBiomes[BiomeType.DESERT.ordinal()] = new TrackedList<BiomeEntry>(list);\n+\n+\t\treturn currentBiomes;\n+\t}\n+\n+\tpublic static ImmutableList<BiomeEntry> getBiomes(BiomeType type) {\n+\t\tint idx = type.ordinal();\n+\t\tList<BiomeEntry> list = idx >= biomes.length ? null : biomes[idx];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTA5NDQwOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozNzozOFrOGwGUkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxODo1MjozOFrOGwOkuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4ODQwMQ==", "bodyText": "This needs an interface so that the added methods can be accessed by fabric mods.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453088401", "createdAt": "2020-07-10T21:37:38Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import net.minecraftforge.common.ToolType;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.item.Item;\n+import net.minecraft.tag.Tag;\n+\n+import net.fabricmc.fabric.api.block.FabricBlockSettings;\n+import net.fabricmc.fabric.api.tools.FabricToolTags;\n+\n+@Mixin(Block.Settings.class)\n+public class MixinBlockSettings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExNjY1Mg==", "bodyText": "This is just a wrapper around Fabric, is there any reason a mod wouldn't just use that directly?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453116652", "createdAt": "2020-07-10T23:13:51Z", "author": {"login": "leo60228"}, "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import net.minecraftforge.common.ToolType;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.item.Item;\n+import net.minecraft.tag.Tag;\n+\n+import net.fabricmc.fabric.api.block.FabricBlockSettings;\n+import net.fabricmc.fabric.api.tools.FabricToolTags;\n+\n+@Mixin(Block.Settings.class)\n+public class MixinBlockSettings {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4ODQwMQ=="}, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyMzYwOQ==", "bodyText": "source-level patchwork would need this, that kind of transformation would need to be done manually", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453223609", "createdAt": "2020-07-11T18:52:38Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import net.minecraftforge.common.ToolType;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.item.Item;\n+import net.minecraft.tag.Tag;\n+\n+import net.fabricmc.fabric.api.block.FabricBlockSettings;\n+import net.fabricmc.fabric.api.tools.FabricToolTags;\n+\n+@Mixin(Block.Settings.class)\n+public class MixinBlockSettings {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4ODQwMQ=="}, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTA5NTI3OnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozODowNFrOGwGVHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozODowNFrOGwGVHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4ODU0Mw==", "bodyText": "Thanks for using the fabric version here!", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453088543", "createdAt": "2020-07-10T21:38:04Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-block/src/main/java/net/patchworkmc/mixin/extensions/block/MixinBlockSettings.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extensions.block;\n+\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Unique;\n+import net.minecraftforge.common.ToolType;\n+\n+import net.minecraft.block.Block;\n+import net.minecraft.item.Item;\n+import net.minecraft.tag.Tag;\n+\n+import net.fabricmc.fabric.api.block.FabricBlockSettings;\n+import net.fabricmc.fabric.api.tools.FabricToolTags;\n+\n+@Mixin(Block.Settings.class)\n+public class MixinBlockSettings {\n+\t@Unique\n+\tprivate Integer miningLevel;\n+\t@Unique\n+\tprivate Tag<Item> miningTool;\n+\n+\tpublic Block.Settings harvestLevel(int harvestLevel) {\n+\t\tthis.miningLevel = new Integer(harvestLevel);\n+\n+\t\tif (this.miningTool != null) {\n+\t\t\tFabricBlockSettings fabric = FabricBlockSettings.copyOf((Block.Settings) (Object) this);\n+\t\t\treturn fabric.breakByTool(this.miningTool, harvestLevel).build();\n+\t\t} else {\n+\t\t\treturn (Block.Settings) (Object) this;\n+\t\t}\n+\t}\n+\n+\tpublic Block.Settings harvestTool(ToolType harvestTool) {\n+\t\tString name = harvestTool.getName();\n+\n+\t\tswitch (name) {\n+\t\tcase \"axe\":\n+\t\t\tthis.miningTool = FabricToolTags.AXES;\n+\t\t\tbreak;\n+\t\tcase \"hoe\":\n+\t\t\tthis.miningTool = FabricToolTags.HOES;\n+\t\t\tbreak;\n+\t\tcase \"pickaxe\":\n+\t\t\tthis.miningTool = FabricToolTags.PICKAXES;\n+\t\t\tbreak;\n+\t\tcase \"shovel\":\n+\t\t\tthis.miningTool = FabricToolTags.SHOVELS;\n+\t\t\tbreak;\n+\t\tcase \"sword\":\n+\t\t\tthis.miningTool = FabricToolTags.SWORDS;\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\tFabricBlockSettings fabric = FabricBlockSettings.copyOf((Block.Settings) (Object) this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTA5NzQzOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions-block/src/main/resources/patchwork-extensions-block.accesswidener", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozOToxNVrOGwGWjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTozOToxNVrOGwGWjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4ODkwOA==", "bodyText": "Mind adding a comment about this class's 1.15/1.16 name if it still exists?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453088908", "createdAt": "2020-07-10T21:39:15Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions-block/src/main/resources/patchwork-extensions-block.accesswidener", "diffHunk": "@@ -0,0 +1,9 @@\n+accessWidener v1 named\n+\n+accessible method net/minecraft/block/StairsBlock <init> (Lnet/minecraft/block/BlockState;Lnet/minecraft/block/Block$Settings;)V\n+accessible field net/minecraft/block/Block materialColor Lnet/minecraft/block/MaterialColor;\n+accessible method net/minecraft/block/DoorBlock <init> (Lnet/minecraft/block/Block$Settings;)V\n+accessible method net/minecraft/block/TrapdoorBlock <init> (Lnet/minecraft/block/Block$Settings;)V\n+accessible method net/minecraft/class_2440 <init> (Lnet/minecraft/class_2440$class_2441;Lnet/minecraft/class_2248$class_2251;)V", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTEwMDkzOnYy", "diffSide": "RIGHT", "path": "patchwork-extensions/src/main/java/net/patchworkmc/mixin/extension/MixinAbstractTreeFeature.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo0MDo0OFrOGwGYqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo0MDo0OFrOGwGYqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA4OTQ1MQ==", "bodyText": "Not going to worry about it for now, just want a comment on it.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprotected void setDirtAt(ModifiableTestableWorld reader, BlockPos pos, BlockPos origin) {\n          \n          \n            \n            \t// TODO: How can we make this accessible in fabric mods?\n          \n          \n            \n            \tprotected void setDirtAt(ModifiableTestableWorld reader, BlockPos pos, BlockPos origin) {", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453089451", "createdAt": "2020-07-10T21:40:48Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-extensions/src/main/java/net/patchworkmc/mixin/extension/MixinAbstractTreeFeature.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.extension;\n+\n+import net.minecraftforge.common.extensions.IForgeBlockState;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.Shadow;\n+\n+import net.minecraft.world.gen.feature.AbstractTreeFeature;\n+import net.minecraft.world.IWorld;\n+import net.minecraft.world.ModifiableTestableWorld;\n+import net.minecraft.util.math.BlockPos;\n+\n+@Mixin(AbstractTreeFeature.class)\n+public abstract class MixinAbstractTreeFeature {\n+\t@Shadow\n+\tprotected abstract void setToDirt(ModifiableTestableWorld world, BlockPos pos);\n+\n+\tprotected void setDirtAt(ModifiableTestableWorld reader, BlockPos pos, BlockPos origin) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTEwNjM5OnYy", "diffSide": "RIGHT", "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo0MzoxNFrOGwGbzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo0MzoxNFrOGwGbzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5MDI1NQ==", "bodyText": "Can you add a comment on why this is needed?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/112#discussion_r453090255", "createdAt": "2020-07-10T21:43:14Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-biomes/src/main/java/net/minecraftforge/common/BiomeManager.java", "diffHunk": "@@ -64,14 +70,134 @@ private OverworldClimate getClimate() {\n \tpublic static class BiomeEntry extends WeightedPicker.Entry {\n \t\tpublic final Biome biome;\n \n+\t\tpublic int field_76292_a; // evil hack", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f61e4ad0bf77f61127981cf27082921234c98c"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1401, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}