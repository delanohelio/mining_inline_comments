{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODAzNTkw", "number": 89, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDozNzowNFrOEGj4QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDo0MDo1OVrOEGj6nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzE0NzUyOnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/PlayerXpEvent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDozNzowNFrOGlbygg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDozNzowNFrOGlbygg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNTc5NA==", "bodyText": "This should be a javadoc.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r441905794", "createdAt": "2020-06-18T00:37:04Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/minecraftforge/event/entity/player/PlayerXpEvent.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.minecraftforge.event.entity.player;\n+\n+import net.minecraft.entity.ExperienceOrbEntity;\n+import net.minecraft.entity.player.PlayerEntity;\n+\n+public abstract class PlayerXpEvent extends PlayerEvent {\n+\tpublic PlayerXpEvent(PlayerEntity player) {\n+\t\tsuper(player);\n+\t}\n+\n+\t// For legacy reasons, the instances of this class should actually be of\n+\t// type PlayerPickupXpEvent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzE1MzU5OnYy", "diffSide": "RIGHT", "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMDo0MDo1OVrOGlb2LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjo1NjowNVrOGmKGVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw==", "bodyText": "This Handle opcode looks suspicious. Have you tested this mixin and confirmed it works?", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r441906733", "createdAt": "2020-06-18T00:40:59Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNzEyOA==", "bodyText": "While you're at it please make sure this launches in a reobf environment (compiled and in MultiMC/vanilla launcher)", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r441907128", "createdAt": "2020-06-18T00:42:45Z", "author": {"login": "TheGlitch76"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0MDU2OA==", "bodyText": "I've tested it in a dev environment, I'll test it in MultiMC now.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r442640568", "createdAt": "2020-06-19T05:38:20Z", "author": {"login": "ZNixian"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0NTAxMg==", "bodyText": "Looking at the patch this seems to be identical.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r442645012", "createdAt": "2020-06-19T05:55:11Z", "author": {"login": "famous1622"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY0NTY3Mw==", "bodyText": "As in the commit I just pushed? That converted some comments to a JavaDoc comment", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r442645673", "createdAt": "2020-06-19T05:57:38Z", "author": {"login": "ZNixian"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1Mzk0Nw==", "bodyText": "Clarified over discord that was referring to the bytecode matching.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r442653947", "createdAt": "2020-06-19T06:25:29Z", "author": {"login": "ZNixian"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2NDUzNQ==", "bodyText": "Since I didn't set it up properly I thought it wasn't working in reobf, tested it now and it works fine as expected.", "url": "https://github.com/PatchworkMC/patchwork-api/pull/89#discussion_r442664535", "createdAt": "2020-06-19T06:56:05Z", "author": {"login": "ZNixian"}, "path": "patchwork-events-entity/src/main/java/net/patchworkmc/mixin/event/entity/MixinExperienceOrbEntity.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Minecraft Forge, Patchwork Project\n+ * Copyright (c) 2016-2020, 2019-2020\n+ *\n+ * This library is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation version 2.1\n+ * of the License.\n+ *\n+ * This library is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this library; if not, write to the Free Software\n+ * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n+ */\n+\n+package net.patchworkmc.mixin.event.entity;\n+\n+import net.minecraftforge.common.MinecraftForge;\n+import net.minecraftforge.event.entity.player.PlayerPickupXpEvent;\n+import org.objectweb.asm.Opcodes;\n+import org.spongepowered.asm.mixin.Mixin;\n+import org.spongepowered.asm.mixin.injection.At;\n+import org.spongepowered.asm.mixin.injection.Inject;\n+import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;\n+\n+import net.minecraft.entity.player.PlayerEntity;\n+import net.minecraft.entity.ExperienceOrbEntity;\n+\n+@Mixin(ExperienceOrbEntity.class)\n+public class MixinExperienceOrbEntity {\n+\t// After checking we're on the server and the player is ready to pick up the orb, the first\n+\t// thing the target method does is set experiencePickUpDelay, hence hook just before that.\n+\t@Inject(method = \"onPlayerCollision\", cancellable = true, at = @At(value = \"FIELD\", opcode = Opcodes.H_PUTFIELD, ordinal = 0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkwNjczMw=="}, "originalCommit": {"oid": "c5df81cb7d0c74682e83951407ad75292a3e7e0c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1572, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}