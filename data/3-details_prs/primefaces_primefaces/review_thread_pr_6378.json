{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MDI3MDI4", "number": 6378, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoyMjoxMlrOEpaTEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo0MDoxMFrOEpessQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODU3OTM2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoyMjoxMlrOHbEALA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoyMjoxMlrOHbEALA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzOTE4MA==", "bodyText": "I thought the JS needed this format. Needs to be replaced.", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498139180", "createdAt": "2020-10-01T10:22:12Z", "author": {"login": "jepsar"}, "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "diffHunk": "@@ -27,25 +27,83 @@\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n import java.time.LocalTime;\n+import java.time.format.DateTimeFormatter;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n-\n+import java.util.Map;\n+import java.util.Map.Entry;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.ConverterException;\n-\n+import org.json.JSONObject;\n import org.primefaces.component.api.UICalendar;\n import org.primefaces.component.calendar.BaseCalendarRenderer;\n import org.primefaces.expression.SearchExpressionFacade;\n import org.primefaces.expression.SearchExpressionUtils;\n+import org.primefaces.model.datepicker.DateMetaData;\n+import org.primefaces.model.datepicker.DateMetaDataModel;\n+import org.primefaces.model.datepicker.LazyDateMetaDataModel;\n import org.primefaces.util.CalendarUtils;\n import org.primefaces.util.ComponentUtils;\n import org.primefaces.util.WidgetBuilder;\n \n public class DatePickerRenderer extends BaseCalendarRenderer {\n \n+    @Override\n+    public void encodeEnd(FacesContext context, UIComponent component) throws IOException {\n+        DatePicker datePicker = (DatePicker) component;\n+\n+        if (context.getExternalContext().getRequestParameterMap().containsKey(datePicker.getClientId(context))) {\n+            encodeDateMetaData(context, datePicker);\n+        }\n+        else {\n+            super.encodeEnd(context, component);\n+        }\n+    }\n+\n+    protected void encodeDateMetaData(FacesContext context, DatePicker datePicker) throws IOException {\n+        String clientId = datePicker.getClientId(context);\n+        DateMetaDataModel model = datePicker.getModel();\n+        Map<String, String> params = context.getExternalContext().getRequestParameterMap();\n+\n+        if (model instanceof LazyDateMetaDataModel) {\n+            int year = Integer.valueOf(params.get(clientId + \"_year\"));\n+            int month = Integer.valueOf(params.get(clientId + \"_month\")) + 1;\n+\n+            LocalDate startDate = LocalDate.of(year, month, 1);\n+            LocalDate endDate = startDate.plusMonths(datePicker.getNumberOfMonths()).minusDays(1);\n+\n+            LazyDateMetaDataModel lazyModel = ((LazyDateMetaDataModel) model);\n+            lazyModel.clear();\n+            lazyModel.loadDateMetaData(startDate, endDate);\n+        }\n+\n+        encodeDateMetaDataAsJSON(context, datePicker, model);\n+    }\n+\n+    protected void encodeDateMetaDataAsJSON(FacesContext context, DatePicker datePicker, DateMetaDataModel model) throws IOException {\n+        JSONObject jsonDateMetaData = new JSONObject();\n+\n+        if (model != null) {\n+            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"M/d/yyyy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "563bf99adf03cd53b98d9598e1f95259c9258126"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODc3ODEwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyMzowNVrOHbF46g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyMzowNVrOHbF46g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3MDA5MA==", "bodyText": "Why not immediately exit here if model == null?", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498170090", "createdAt": "2020-10-01T11:23:05Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "diffHunk": "@@ -30,22 +30,78 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n-\n+import java.util.Map;\n+import java.util.Map.Entry;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.ConverterException;\n-\n+import org.json.JSONObject;\n import org.primefaces.component.api.UICalendar;\n import org.primefaces.component.calendar.BaseCalendarRenderer;\n import org.primefaces.expression.SearchExpressionFacade;\n import org.primefaces.expression.SearchExpressionUtils;\n+import org.primefaces.model.datepicker.DateMetaData;\n+import org.primefaces.model.datepicker.DateMetaDataModel;\n+import org.primefaces.model.datepicker.LazyDateMetaDataModel;\n import org.primefaces.util.CalendarUtils;\n import org.primefaces.util.ComponentUtils;\n import org.primefaces.util.WidgetBuilder;\n \n public class DatePickerRenderer extends BaseCalendarRenderer {\n \n+    @Override\n+    public void encodeEnd(FacesContext context, UIComponent component) throws IOException {\n+        DatePicker datePicker = (DatePicker) component;\n+\n+        if (context.getExternalContext().getRequestParameterMap().containsKey(datePicker.getClientId(context))) {\n+            encodeDateMetaData(context, datePicker);\n+        }\n+        else {\n+            super.encodeEnd(context, component);\n+        }\n+    }\n+\n+    protected void encodeDateMetaData(FacesContext context, DatePicker datePicker) throws IOException {\n+        String clientId = datePicker.getClientId(context);\n+        DateMetaDataModel model = datePicker.getModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc0c5b5efdfdc5aae00974520ac4c58a95ae7b76"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODc4MDUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyMzo1MFrOHbF6SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyMzo1MFrOHbF6SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3MDQ0MA==", "bodyText": "Rather than checking model != null 2 lines down why not make the first line of this method if (model == null) return; to short circuit this whole method?", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498170440", "createdAt": "2020-10-01T11:23:50Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/datepicker/DatePickerRenderer.java", "diffHunk": "@@ -30,22 +30,78 @@\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Locale;\n-\n+import java.util.Map;\n+import java.util.Map.Entry;\n import javax.faces.component.UIComponent;\n import javax.faces.context.FacesContext;\n import javax.faces.context.ResponseWriter;\n import javax.faces.convert.ConverterException;\n-\n+import org.json.JSONObject;\n import org.primefaces.component.api.UICalendar;\n import org.primefaces.component.calendar.BaseCalendarRenderer;\n import org.primefaces.expression.SearchExpressionFacade;\n import org.primefaces.expression.SearchExpressionUtils;\n+import org.primefaces.model.datepicker.DateMetaData;\n+import org.primefaces.model.datepicker.DateMetaDataModel;\n+import org.primefaces.model.datepicker.LazyDateMetaDataModel;\n import org.primefaces.util.CalendarUtils;\n import org.primefaces.util.ComponentUtils;\n import org.primefaces.util.WidgetBuilder;\n \n public class DatePickerRenderer extends BaseCalendarRenderer {\n \n+    @Override\n+    public void encodeEnd(FacesContext context, UIComponent component) throws IOException {\n+        DatePicker datePicker = (DatePicker) component;\n+\n+        if (context.getExternalContext().getRequestParameterMap().containsKey(datePicker.getClientId(context))) {\n+            encodeDateMetaData(context, datePicker);\n+        }\n+        else {\n+            super.encodeEnd(context, component);\n+        }\n+    }\n+\n+    protected void encodeDateMetaData(FacesContext context, DatePicker datePicker) throws IOException {\n+        String clientId = datePicker.getClientId(context);\n+        DateMetaDataModel model = datePicker.getModel();\n+        Map<String, String> params = context.getExternalContext().getRequestParameterMap();\n+\n+        if (model instanceof LazyDateMetaDataModel) {\n+            int year = Integer.valueOf(params.get(clientId + \"_year\"));\n+            int month = Integer.valueOf(params.get(clientId + \"_month\")) + 1;\n+\n+            LocalDate startDate = LocalDate.of(year, month, 1);\n+            LocalDate endDate = startDate.plusMonths(datePicker.getNumberOfMonths()).minusDays(1);\n+\n+            LazyDateMetaDataModel lazyModel = ((LazyDateMetaDataModel) model);\n+            lazyModel.clear();\n+            lazyModel.loadDateMetaData(startDate, endDate);\n+        }\n+\n+        encodeDateMetaDataAsJSON(context, datePicker, model);\n+    }\n+\n+    protected void encodeDateMetaDataAsJSON(FacesContext context, DatePicker datePicker, DateMetaDataModel model) throws IOException {\n+        JSONObject jsonDateMetaData = new JSONObject();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc0c5b5efdfdc5aae00974520ac4c58a95ae7b76"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODc4MTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/model/datepicker/DateMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNDowM1rOHbF6lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNDowM1rOHbF6lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3MDUxOA==", "bodyText": "TODO?", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498170518", "createdAt": "2020-10-01T11:24:03Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/model/datepicker/DateMetaData.java", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2009-2020 PrimeTek\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.primefaces.model.datepicker;\n+\n+public interface DateMetaData {\n+\n+    public boolean isDisabled();\n+\n+    // TODO add styleClass in new PR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc0c5b5efdfdc5aae00974520ac4c58a95ae7b76"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODc4NjUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/model/datepicker/DefaultDateMetaDataModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNTo0MVrOHbF93Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNTo0MVrOHbF93Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3MTM1Nw==", "bodyText": "Missing private static final long serialVersionUID = 1L;", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498171357", "createdAt": "2020-10-01T11:25:41Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/model/datepicker/DefaultDateMetaDataModel.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2009-2020 PrimeTek\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.primefaces.model.datepicker;\n+\n+import java.io.Serializable;\n+import java.time.LocalDate;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class DefaultDateMetaDataModel implements DateMetaDataModel, Serializable {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc0c5b5efdfdc5aae00974520ac4c58a95ae7b76"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODc4NzA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/model/datepicker/DefaultDateMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNTo1NVrOHbF-RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMToyNTo1NVrOHbF-RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3MTQ2MA==", "bodyText": "Missing private static final long serialVersionUID = 1L;", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498171460", "createdAt": "2020-10-01T11:25:55Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/model/datepicker/DefaultDateMetaData.java", "diffHunk": "@@ -0,0 +1,92 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2009-2020 PrimeTek\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.primefaces.model.datepicker;\n+\n+import java.io.Serializable;\n+\n+public class DefaultDateMetaData implements DateMetaData, Serializable {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc0c5b5efdfdc5aae00974520ac4c58a95ae7b76"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTMwMDMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/model/datepicker/DateMetaData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo0MDoxMFrOHbK5UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMzo0MDoxMFrOHbK5UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI1MjExMg==", "bodyText": "dont think you need public on this interface method.", "url": "https://github.com/primefaces/primefaces/pull/6378#discussion_r498252112", "createdAt": "2020-10-01T13:40:10Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/model/datepicker/DateMetaData.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2009-2020 PrimeTek\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.primefaces.model.datepicker;\n+\n+public interface DateMetaData {\n+\n+    public boolean isDisabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d3c1bd81b28949d70658915c53390dd633c30c8"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2015, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}