{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzM0MzQz", "number": 5951, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMTo1NTo1NlrOD_MUIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMTo1NTo1NlrOD_MUIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTg4NjQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/fileupload/FileUploadRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxMTo1NTo1NlrOGZudGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQxNDo0NzowNFrOGZvZYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyODY5OA==", "bodyText": "Why did you remove the EscapeUtils around invalidSize messsage?", "url": "https://github.com/primefaces/primefaces/pull/5951#discussion_r429628698", "createdAt": "2020-05-24T11:55:56Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/fileupload/FileUploadRenderer.java", "diffHunk": "@@ -95,21 +87,27 @@ protected void encodeScript(FacesContext context, FileUpload fileUpload) throws\n                     .callback(\"onAdd\", \"function(file, callback)\", fileUpload.getOnAdd())\n                     .callback(\"onstart\", \"function()\", fileUpload.getOnstart())\n                     .callback(\"onerror\", \"function()\", fileUpload.getOnerror())\n-                    .callback(\"onvalidationfailure\", \"function(msg)\", fileUpload.getOnvalidationfailure())\n                     .callback(\"oncancel\", \"function()\", fileUpload.getOncancel())\n                     .callback(\"oncomplete\", \"function(args)\", fileUpload.getOncomplete());\n \n-            String allowTypes = fileUpload.getAllowTypes();\n-\n-            if (allowTypes != null) {\n-                wb.append(\",allowTypes:\").append(allowTypes);\n-            }\n         }\n         else {\n             wb.init(\"SimpleFileUpload\", fileUpload.resolveWidgetVar(context), clientId)\n-                    .attr(\"skinSimple\", fileUpload.isSkinSimple(), false)\n-                    .attr(\"maxFileSize\", fileUpload.getSizeLimit(), Long.MAX_VALUE)\n-                    .attr(\"invalidSizeMessage\", EscapeUtils.forJavaScript(fileUpload.getInvalidSizeMessage()), null);\n+                    .attr(\"skinSimple\", fileUpload.isSkinSimple(), false);\n+        }\n+\n+        wb.attr(\"disabled\", fileUpload.isDisabled(), false)\n+                .attr(\"invalidSizeMessage\", fileUpload.getInvalidSizeMessage(), null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "556a00d0b8f2a478d5fa9573738550654387bb2b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY0NDEzMA==", "bodyText": "Hi @melloware\nThe EscapeUtils.forJavaScript() call in FileUploadRenderer was removed due the following reasons:\n\nIt is already called by WidgetBuilder.attr():\n\npublic WidgetBuilder attr(String name, String value, String defaultValue) throws IOException {\n        if (value != null && !value.equals(defaultValue)) {\n            // ...\n            rw.write(EscapeUtils.forJavaScript(value));\n            // ...\n        }\n        return this;\n    }\n\nCalling EscapeUtils.forJavaScript() before the nullity check results in \"null\" strings instead of null references;\n\nassertEquals(\"null\", EscapeUtils.forJavaScript(null)); \nI just added some tests for these cases.", "url": "https://github.com/primefaces/primefaces/pull/5951#discussion_r429644130", "createdAt": "2020-05-24T14:47:04Z", "author": {"login": "doleron"}, "path": "src/main/java/org/primefaces/component/fileupload/FileUploadRenderer.java", "diffHunk": "@@ -95,21 +87,27 @@ protected void encodeScript(FacesContext context, FileUpload fileUpload) throws\n                     .callback(\"onAdd\", \"function(file, callback)\", fileUpload.getOnAdd())\n                     .callback(\"onstart\", \"function()\", fileUpload.getOnstart())\n                     .callback(\"onerror\", \"function()\", fileUpload.getOnerror())\n-                    .callback(\"onvalidationfailure\", \"function(msg)\", fileUpload.getOnvalidationfailure())\n                     .callback(\"oncancel\", \"function()\", fileUpload.getOncancel())\n                     .callback(\"oncomplete\", \"function(args)\", fileUpload.getOncomplete());\n \n-            String allowTypes = fileUpload.getAllowTypes();\n-\n-            if (allowTypes != null) {\n-                wb.append(\",allowTypes:\").append(allowTypes);\n-            }\n         }\n         else {\n             wb.init(\"SimpleFileUpload\", fileUpload.resolveWidgetVar(context), clientId)\n-                    .attr(\"skinSimple\", fileUpload.isSkinSimple(), false)\n-                    .attr(\"maxFileSize\", fileUpload.getSizeLimit(), Long.MAX_VALUE)\n-                    .attr(\"invalidSizeMessage\", EscapeUtils.forJavaScript(fileUpload.getInvalidSizeMessage()), null);\n+                    .attr(\"skinSimple\", fileUpload.isSkinSimple(), false);\n+        }\n+\n+        wb.attr(\"disabled\", fileUpload.isDisabled(), false)\n+                .attr(\"invalidSizeMessage\", fileUpload.getInvalidSizeMessage(), null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTYyODY5OA=="}, "originalCommit": {"oid": "556a00d0b8f2a478d5fa9573738550654387bb2b"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2057, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}