{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTY5NzYw", "number": 5957, "title": "Fix #12: allow Dynamic content support in ImageCropper", "bodyText": "Hi, this PR is intended to fix issue #12 by allowing ImageCropper component to load images dynamically as GraphicImage does.\nExample:\n\n<h:panelGrid columns=\"1\">\n\n    <p:spinner id=\"iterationSpinner\"\n        value=\"#{dynamicCropper.numberOfIterations}\"\n        min=\"5\" max=\"50\" stepFactor=\"5\"\n        valueChangeListener=\"#{dynamicCropper.updateImage}\">\n        <p:ajax process=\"@this\" update=\"cropper\" />\n    </p:spinner>\n\n    <h:panelGrid columns=\"2\">\n        <p:outputPanel id=\"cropper\">\n            <p:imageCropper\n                value=\"#{dynamicCropper.croppedImage}\"\n                id=\"streamed_cropper\" cache=\"false\"\n                stream=\"#{dynamicCropper.image}\"\n                initialCoords=\"50,50,150,100\"\n                minSize=\"50,50\" maxSize=\"350,350\" />\n        </p:outputPanel>\n        <p:outputPanel id=\"cropped\">\n            <p:graphicImage\n                rendered=\"#{not empty dynamicCropper.newImageName}\"\n                name=\"demo/images/crop/#{dynamicCropper.newImageName}\" />\n        </p:outputPanel>\n    </h:panelGrid>\n\n    <p:commandButton value=\"Crop\"\n        action=\"#{dynamicCropper.crop}\"\n        update=\"cropped msgs\" icon=\"pi pi-clone\" />\n\n</h:panelGrid>\n@Named\n@SessionScoped\npublic class DynamicCropper implements Serializable {\n    \n    private BufferedImage image;\n    private final int width = 400;\n    private final int height = 300;\n    private int numberOfIterations;\n    \n    @PostConstruct\n    public void init() {\n        this.numberOfIterations = 5;\n        try {\n            this.image = mandelbrotSet(width, height, numberOfIterations);\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n    \n    public StreamedContent getImage() {\n        \n        FacesContext context = FacesContext.getCurrentInstance();\n\n        StreamedContent result = null;\n        if (context.getCurrentPhaseId() == PhaseId.RENDER_RESPONSE) {\n            result = new DefaultStreamedContent();\n        }\n        else {\n            result = DefaultStreamedContent.builder().contentType(\"image/png\").stream(() -> {\n                try {\n                    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\n                    ImageIO.write(this.image, \"png\", outputStream);\n                    return new ByteArrayInputStream(outputStream.toByteArray());\n                } catch (Exception e) {\n                    e.printStackTrace();\n                    return null;\n                }\n            }).build();\n        }\n        \n        return result;\n    }\n    \n    public void updateImage(ValueChangeEvent event) {\n        Number newValue = (Number) event.getNewValue();\n        try {\n            this.image = this.mandelbrotSet(width, height, newValue.intValue());\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    } \n    // ...\n}\nNote that the StreamedContent attribute is bound to (new) stream attribute since ImageCropper has a value attribute already for the destination of cropped image", "createdAt": "2020-05-26T12:17:53Z", "url": "https://github.com/primefaces/primefaces/pull/5957", "merged": true, "mergeCommit": {"oid": "1d0e4e2751c6506ab99e2ce61fd1f00dfa31570f"}, "closed": true, "closedAt": "2020-05-26T16:38:38Z", "author": {"login": "doleron"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclCuSfgH2gAyNDIzMTY5NzYwOjZkZmQyYmQxZTM0NTQxMzRjYmYwNDZmMGIzYzUxOTVjN2JiYTY5NmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclG1_cgFqTQxODQ0NjY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/6dfd2bd1e3454134cbf046f0b3c5195c7bba696a", "committedDate": "2020-05-26T11:11:39Z", "message": "allow StreamedContent in ImageCropper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjQxMTM4", "url": "https://github.com/primefaces/primefaces/pull/5957#pullrequestreview-418241138", "createdAt": "2020-05-26T12:20:18Z", "commit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoyMDoxOFrOGabqIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoyMTo1OVrOGabtvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg==", "bodyText": "I don't think you have check != null because intanceof NULL is always false. you can invert this by checking is streamobject instanceof ELSE throw exception", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430369312", "createdAt": "2020-05-26T12:20:18Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -180,6 +184,15 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n         Resource resource = getImageResource(context, cropper);\n         InputStream inputStream = null;\n         String imagePath = cropper.getImage();\n+        Object streamObject = cropper.getStream();\n+        StreamedContent stream = null;\n+        if (streamObject != null && !(streamObject instanceof StreamedContent)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MDIzNg==", "bodyText": "\"Either image or stream attribute is not provided\"", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430370236", "createdAt": "2020-05-26T12:21:59Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -189,29 +202,38 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n                 contentType = resource.getContentType();\n             }\n             else {\n+                if (imagePath != null) {\n \n-                boolean isExternal = imagePath.startsWith(\"http\");\n+                    boolean isExternal = imagePath.startsWith(\"http\");\n \n-                if (isExternal) {\n-                    URL url = new URL(imagePath);\n-                    URLConnection urlConnection = url.openConnection();\n-                    inputStream = urlConnection.getInputStream();\n-                    contentType = urlConnection.getContentType();\n+                    if (isExternal) {\n+                        URL url = new URL(imagePath);\n+                        URLConnection urlConnection = url.openConnection();\n+                        inputStream = urlConnection.getInputStream();\n+                        contentType = urlConnection.getContentType();\n+                    }\n+                    else {\n+                        ExternalContext externalContext = context.getExternalContext();\n+                        // GitHub #3268 OWASP Path Traversal\n+                        imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n+\n+                        String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n+                        String fileSeparator = Constants.EMPTY_STRING;\n+                        if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n+                                    !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n+                            fileSeparator = \"/\";\n+                        }\n+\n+                        File file = new File(webRoot + fileSeparator + imagePath);\n+                        inputStream = new FileInputStream(file);\n+                    }\n+                }\n+                else if (stream != null) {\n+                    inputStream = stream.getStream();\n+                    contentType = stream.getContentType();\n                 }\n                 else {\n-                    ExternalContext externalContext = context.getExternalContext();\n-                    // GitHub #3268 OWASP Path Traversal\n-                    imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n-\n-                    String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n-                    String fileSeparator = Constants.EMPTY_STRING;\n-                    if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n-                                !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n-                        fileSeparator = \"/\";\n-                    }\n-\n-                    File file = new File(webRoot + fileSeparator + imagePath);\n-                    inputStream = new FileInputStream(file);\n+                    throw new IllegalArgumentException(\"Either image and stream attributes are not provided.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjQ5MDAx", "url": "https://github.com/primefaces/primefaces/pull/5957#pullrequestreview-418249001", "createdAt": "2020-05-26T12:31:02Z", "commit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjozMTowMlrOGacBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjozMTowMlrOGacBrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3NTM0MA==", "bodyText": "Can you also add this section to the docs...\n## Dynamic Images\nA dynamic image can be used with ImageCropper which requires _org.primefaces.model.StreamedContent_ `stream` as it\u2019s value  \nStreamedContent is an interface and PrimeFaces provides a built-in implementation called\n_DefaultStreamedContent_. Please see our core documentation about it: [Dynamic Content Streaming / Rendering](/core/dynamiccontent.md)", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430375340", "createdAt": "2020-05-26T12:31:02Z", "author": {"login": "melloware"}, "path": "docs/9_0/components/imagecropper.md", "diffHunk": "@@ -45,6 +45,7 @@ sizeLimit | 10485760 | Long | Maximum number of bytes the image.\n responsive | true | Boolean | Re-render the cropper when resizing the window.\n guides | true | Boolean | Show the dashed lines in the crop box.\n cache | true | Boolean | Controls browser caching mode of the resource. Default is true.\n+stream | null | Object | Binary data to stream.\n viewMode | 1 | Integer | Define the view mode of the cropper. If you set viewMode to 0, the crop box can extend outside the canvas, while a value of 1, 2 or 3 will restrict the crop box to the size of the canvas. A viewMode of 2 or 3 will additionally restrict the canvas to the container. Note that if the proportions of the canvas and the container are the same, there is no difference between 2 and 3.\n \n ## Getting started with the ImageCropper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f52377aa223911ed313dbbd49b1b7a08a7eb257", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/5f52377aa223911ed313dbbd49b1b7a08a7eb257", "committedDate": "2020-05-26T12:40:00Z", "message": "+ section about dynamic content"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "321cd5052586c2c4a1027ba1384b034b2fd2b8b0", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/321cd5052586c2c4a1027ba1384b034b2fd2b8b0", "committedDate": "2020-05-26T12:40:26Z", "message": "fix exception message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a287b6fd3e8db981a63fe24dd922208a9596bb24", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/a287b6fd3e8db981a63fe24dd922208a9596bb24", "committedDate": "2020-05-26T14:13:36Z", "message": "tests for ImageCropperRenderer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8214e152b0746def2b118084abfaee5f957bd8a", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/d8214e152b0746def2b118084abfaee5f957bd8a", "committedDate": "2020-05-26T14:26:29Z", "message": "fix test image path on linux"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/22c795321a7e6ef57a60316fdc8f8815d8168883", "committedDate": "2020-05-26T15:01:12Z", "message": "converging 'stream' and 'image' to the same attribute 'image'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDA5MzMw", "url": "https://github.com/primefaces/primefaces/pull/5957#pullrequestreview-418409330", "createdAt": "2020-05-26T15:21:09Z", "commit": {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMTowOVrOGajW7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMTowOVrOGajW7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NTQ3MA==", "bodyText": "This needs to be removed right? and image needs to be updated to java.lang.Object.", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430495470", "createdAt": "2020-05-26T15:21:09Z", "author": {"login": "melloware"}, "path": "src/main/resources/META-INF/primefaces-p.taglib.xml", "diffHunk": "@@ -11202,6 +11202,14 @@\n             <required>false</required>\n             <type>java.lang.Boolean</type>\n         </attribute>\n+        <attribute>\n+            <description>\n+                <![CDATA[Binary data to stream the image dynamically]]>\n+            </description>\n+            <name>stream</name>\n+            <required>false</required>\n+            <type>java.lang.Object</type>\n+        </attribute>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8eb1ec04874864e3ab884e8057a502a7214638a", "author": {"user": {"login": "doleron", "name": null}}, "url": "https://github.com/primefaces/primefaces/commit/d8eb1ec04874864e3ab884e8057a502a7214638a", "committedDate": "2020-05-26T15:36:40Z", "message": "removing 'stream' + updating 'image' in tag declaration of ImageCropper"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDQ2NjQw", "url": "https://github.com/primefaces/primefaces/pull/5957#pullrequestreview-418446640", "createdAt": "2020-05-26T15:59:41Z", "commit": {"oid": "d8eb1ec04874864e3ab884e8057a502a7214638a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2841, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}