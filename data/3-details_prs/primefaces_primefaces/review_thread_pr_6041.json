{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTU2NDEy", "number": 6041, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTozMjowNFrOEGT1rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTowNFrOEGZNBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDUxOTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMTozMjowNFrOGlBnyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoxOTowOVrOGlFVFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzA2NQ==", "bodyText": "I think a better way to write this method is:\n        protected void addResponseCookie(ExternalContext externalContext) {\n            final boolean secure = ((HttpServletRequest) externalContext.getRequest()).isSecure();\n            Map<String, Object> map;\n            if (secure) {\n                map = new HashMap<>(2);\n                map.put(\"secure\", secure);\n                map.put(\"sameSite\", \"Strict\");\n            }\n            else {\n                map = Collections.emptyMap();\n            }\n            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", map);\n        }\nI also future proofed it by adding sameSite=Strict even though JSF and Servlet spec does not support it yet it hopefully will in the future as this is becoming a requirement of most browsers.", "url": "https://github.com/primefaces/primefaces/pull/6041#discussion_r441477065", "createdAt": "2020-06-17T11:32:04Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -379,4 +384,24 @@ public int invoke(FacesContext context) {\n             return counter;\n         }\n     }\n+\n+    protected void setResponseHeader(ExternalContext externalContext , String contentDisposition) {\n+        externalContext.setResponseHeader(\"Expires\", \"0\");\n+        externalContext.setResponseHeader(\"Cache-Control\", \"must-revalidate, post-check=0, pre-check=0\");\n+        externalContext.setResponseHeader(\"Pragma\", \"public\");\n+        externalContext.setResponseHeader(\"Content-disposition\", contentDisposition);\n+    }\n+\n+    protected void addResponseCookie(ExternalContext externalContext) {\n+        final boolean secure = ((HttpServletRequest) externalContext.getRequest()).isSecure();\n+        if (secure) {\n+            Map<String, Object> map = new HashMap<String, Object>();\n+            map.put(\"secure\", secure);\n+            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", map);\n+        }\n+        else {\n+            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", Collections.<String, Object>emptyMap());\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c5d8af6820d74485147bc75e24098e60b5c38b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzNzgxNQ==", "bodyText": "you must also take care of PortletRequest. We already have this check somewhere and reuseable.\n\n\nHad to make a minor refactor to support passing an ExternalContext\n\n\nAFAIR the Cookie is also created/removed on clientside", "url": "https://github.com/primefaces/primefaces/pull/6041#discussion_r441537815", "createdAt": "2020-06-17T13:19:09Z", "author": {"login": "ravihariharan"}, "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -379,4 +384,24 @@ public int invoke(FacesContext context) {\n             return counter;\n         }\n     }\n+\n+    protected void setResponseHeader(ExternalContext externalContext , String contentDisposition) {\n+        externalContext.setResponseHeader(\"Expires\", \"0\");\n+        externalContext.setResponseHeader(\"Cache-Control\", \"must-revalidate, post-check=0, pre-check=0\");\n+        externalContext.setResponseHeader(\"Pragma\", \"public\");\n+        externalContext.setResponseHeader(\"Content-disposition\", contentDisposition);\n+    }\n+\n+    protected void addResponseCookie(ExternalContext externalContext) {\n+        final boolean secure = ((HttpServletRequest) externalContext.getRequest()).isSecure();\n+        if (secure) {\n+            Map<String, Object> map = new HashMap<String, Object>();\n+            map.put(\"secure\", secure);\n+            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", map);\n+        }\n+        else {\n+            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", Collections.<String, Object>emptyMap());\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ3NzA2NQ=="}, "originalCommit": {"oid": "97c5d8af6820d74485147bc75e24098e60b5c38b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MDkwNDY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyMToxMFrOGlFacA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyMToxMFrOGlFacA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzOTE4NA==", "bodyText": "You can remove this line you are adding it below", "url": "https://github.com/primefaces/primefaces/pull/6041#discussion_r441539184", "createdAt": "2020-06-17T13:21:10Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/datatable/export/DataTableExporter.java", "diffHunk": "@@ -379,4 +384,27 @@ public int invoke(FacesContext context) {\n             return counter;\n         }\n     }\n+\n+    protected void setResponseHeader(ExternalContext externalContext , String contentDisposition) {\n+        externalContext.setResponseHeader(\"Expires\", \"0\");\n+        externalContext.setResponseHeader(\"Cache-Control\", \"must-revalidate, post-check=0, pre-check=0\");\n+        externalContext.setResponseHeader(\"Pragma\", \"public\");\n+        externalContext.setResponseHeader(\"Content-disposition\", contentDisposition);\n+    }\n+\n+    protected void addResponseCookie(ExternalContext externalContext) {\n+        final boolean secure = PrimeRequestContext.isSecure(externalContext);\n+        Map<String, Object> map = null;\n+        if (secure) {\n+            map = new HashMap<String, Object>(2);\n+            map.put(\"secure\", secure);\n+            map.put(\"sameSite\", \"Strict\");\n+            externalContext.addResponseCookie(Constants.DOWNLOAD_COOKIE, \"true\", map);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5980e065d9e0550b6dc855d7f0c30455944589ca"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTM5ODQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/context/PrimeRequestContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTowNFrOGlKYaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowOTowNFrOGlKYaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyMDU4Nw==", "bodyText": "This comment is no longer true now you are caching it after the first result.  @tandraschko I think this is OK because i doubt any site has a mix of HTTP and HTTPS.  At least they should not!", "url": "https://github.com/primefaces/primefaces/pull/6041#discussion_r441620587", "createdAt": "2020-06-17T15:09:04Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/context/PrimeRequestContext.java", "diffHunk": "@@ -207,22 +208,25 @@ public void release() {\n      * @return if secure or not.\n      */\n     public boolean isSecure() {\n-        // currently called once per request - later we might cache the result per request\n-        // and even the method lookup\n-        Object request = context.getExternalContext().getRequest();\n+        // currently called once per request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "777241bf8c6519c7ec7b37baa62528bab3317ee7"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2087, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}