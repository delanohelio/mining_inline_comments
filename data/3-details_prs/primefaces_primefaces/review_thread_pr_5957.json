{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTY5NzYw", "number": 5957, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoyMDoxOFrOD_pfCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMTowOVrOD_uQDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDY2NTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoyMDoxOFrOGabqIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxNzo0OFrOGagcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg==", "bodyText": "I don't think you have check != null because intanceof NULL is always false. you can invert this by checking is streamobject instanceof ELSE throw exception", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430369312", "createdAt": "2020-05-26T12:20:18Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -180,6 +184,15 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n         Resource resource = getImageResource(context, cropper);\n         InputStream inputStream = null;\n         String imagePath = cropper.getImage();\n+        Object streamObject = cropper.getStream();\n+        StreamedContent stream = null;\n+        if (streamObject != null && !(streamObject instanceof StreamedContent)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NjY5Mw==", "bodyText": "The check streamObject != null is performed because 'cropper.getStream() null' is a valid condition if 'cropper.getImage() is not null'. I just included some tests for check these scenarios.", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430446693", "createdAt": "2020-05-26T14:16:26Z", "author": {"login": "doleron"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -180,6 +184,15 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n         Resource resource = getImageResource(context, cropper);\n         InputStream inputStream = null;\n         String imagePath = cropper.getImage();\n+        Object streamObject = cropper.getStream();\n+        StreamedContent stream = null;\n+        if (streamObject != null && !(streamObject instanceof StreamedContent)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg=="}, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0NzcwNg==", "bodyText": "I think @tandraschko wants you to not introduce a new stream property and just re-use image so it can either be a URL or StreamedContent like GraphicImage does it.", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430447706", "createdAt": "2020-05-26T14:17:48Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -180,6 +184,15 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n         Resource resource = getImageResource(context, cropper);\n         InputStream inputStream = null;\n         String imagePath = cropper.getImage();\n+        Object streamObject = cropper.getStream();\n+        StreamedContent stream = null;\n+        if (streamObject != null && !(streamObject instanceof StreamedContent)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2OTMxMg=="}, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDY3MTQ3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoyMTo1OVrOGabtvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NDoyMlrOGacffA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MDIzNg==", "bodyText": "\"Either image or stream attribute is not provided\"", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430370236", "createdAt": "2020-05-26T12:21:59Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -189,29 +202,38 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n                 contentType = resource.getContentType();\n             }\n             else {\n+                if (imagePath != null) {\n \n-                boolean isExternal = imagePath.startsWith(\"http\");\n+                    boolean isExternal = imagePath.startsWith(\"http\");\n \n-                if (isExternal) {\n-                    URL url = new URL(imagePath);\n-                    URLConnection urlConnection = url.openConnection();\n-                    inputStream = urlConnection.getInputStream();\n-                    contentType = urlConnection.getContentType();\n+                    if (isExternal) {\n+                        URL url = new URL(imagePath);\n+                        URLConnection urlConnection = url.openConnection();\n+                        inputStream = urlConnection.getInputStream();\n+                        contentType = urlConnection.getContentType();\n+                    }\n+                    else {\n+                        ExternalContext externalContext = context.getExternalContext();\n+                        // GitHub #3268 OWASP Path Traversal\n+                        imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n+\n+                        String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n+                        String fileSeparator = Constants.EMPTY_STRING;\n+                        if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n+                                    !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n+                            fileSeparator = \"/\";\n+                        }\n+\n+                        File file = new File(webRoot + fileSeparator + imagePath);\n+                        inputStream = new FileInputStream(file);\n+                    }\n+                }\n+                else if (stream != null) {\n+                    inputStream = stream.getStream();\n+                    contentType = stream.getContentType();\n                 }\n                 else {\n-                    ExternalContext externalContext = context.getExternalContext();\n-                    // GitHub #3268 OWASP Path Traversal\n-                    imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n-\n-                    String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n-                    String fileSeparator = Constants.EMPTY_STRING;\n-                    if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n-                                !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n-                        fileSeparator = \"/\";\n-                    }\n-\n-                    File file = new File(webRoot + fileSeparator + imagePath);\n-                    inputStream = new FileInputStream(file);\n+                    throw new IllegalArgumentException(\"Either image and stream attributes are not provided.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4Mjk3Mg==", "bodyText": "Fixed!", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430382972", "createdAt": "2020-05-26T12:44:22Z", "author": {"login": "doleron"}, "path": "src/main/java/org/primefaces/component/imagecropper/ImageCropperRenderer.java", "diffHunk": "@@ -189,29 +202,38 @@ public Object getConvertedValue(FacesContext context, UIComponent component, Obj\n                 contentType = resource.getContentType();\n             }\n             else {\n+                if (imagePath != null) {\n \n-                boolean isExternal = imagePath.startsWith(\"http\");\n+                    boolean isExternal = imagePath.startsWith(\"http\");\n \n-                if (isExternal) {\n-                    URL url = new URL(imagePath);\n-                    URLConnection urlConnection = url.openConnection();\n-                    inputStream = urlConnection.getInputStream();\n-                    contentType = urlConnection.getContentType();\n+                    if (isExternal) {\n+                        URL url = new URL(imagePath);\n+                        URLConnection urlConnection = url.openConnection();\n+                        inputStream = urlConnection.getInputStream();\n+                        contentType = urlConnection.getContentType();\n+                    }\n+                    else {\n+                        ExternalContext externalContext = context.getExternalContext();\n+                        // GitHub #3268 OWASP Path Traversal\n+                        imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n+\n+                        String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n+                        String fileSeparator = Constants.EMPTY_STRING;\n+                        if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n+                                    !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n+                            fileSeparator = \"/\";\n+                        }\n+\n+                        File file = new File(webRoot + fileSeparator + imagePath);\n+                        inputStream = new FileInputStream(file);\n+                    }\n+                }\n+                else if (stream != null) {\n+                    inputStream = stream.getStream();\n+                    contentType = stream.getContentType();\n                 }\n                 else {\n-                    ExternalContext externalContext = context.getExternalContext();\n-                    // GitHub #3268 OWASP Path Traversal\n-                    imagePath = FileUploadUtils.checkPathTraversal(imagePath);\n-\n-                    String webRoot = externalContext.getRealPath(Constants.EMPTY_STRING);\n-                    String fileSeparator = Constants.EMPTY_STRING;\n-                    if (!(webRoot.endsWith(\"\\\\\") || webRoot.endsWith(\"/\")) &&\n-                                !(imagePath.startsWith(\"\\\\\") || imagePath.startsWith(\"/\"))) {\n-                        fileSeparator = \"/\";\n-                    }\n-\n-                    File file = new File(webRoot + fileSeparator + imagePath);\n-                    inputStream = new FileInputStream(file);\n+                    throw new IllegalArgumentException(\"Either image and stream attributes are not provided.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3MDIzNg=="}, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MDcwMzQwOnYy", "diffSide": "RIGHT", "path": "docs/9_0/components/imagecropper.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjozMTowMlrOGacBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo0NDo0MlrOGacgRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3NTM0MA==", "bodyText": "Can you also add this section to the docs...\n## Dynamic Images\nA dynamic image can be used with ImageCropper which requires _org.primefaces.model.StreamedContent_ `stream` as it\u2019s value  \nStreamedContent is an interface and PrimeFaces provides a built-in implementation called\n_DefaultStreamedContent_. Please see our core documentation about it: [Dynamic Content Streaming / Rendering](/core/dynamiccontent.md)", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430375340", "createdAt": "2020-05-26T12:31:02Z", "author": {"login": "melloware"}, "path": "docs/9_0/components/imagecropper.md", "diffHunk": "@@ -45,6 +45,7 @@ sizeLimit | 10485760 | Long | Maximum number of bytes the image.\n responsive | true | Boolean | Re-render the cropper when resizing the window.\n guides | true | Boolean | Show the dashed lines in the crop box.\n cache | true | Boolean | Controls browser caching mode of the resource. Default is true.\n+stream | null | Object | Binary data to stream.\n viewMode | 1 | Integer | Define the view mode of the cropper. If you set viewMode to 0, the crop box can extend outside the canvas, while a value of 1, 2 or 3 will restrict the crop box to the size of the canvas. A viewMode of 2 or 3 will additionally restrict the canvas to the container. Note that if the proportions of the canvas and the container are the same, there is no difference between 2 and 3.\n \n ## Getting started with the ImageCropper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4MzE3NA==", "bodyText": "Done!", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430383174", "createdAt": "2020-05-26T12:44:42Z", "author": {"login": "doleron"}, "path": "docs/9_0/components/imagecropper.md", "diffHunk": "@@ -45,6 +45,7 @@ sizeLimit | 10485760 | Long | Maximum number of bytes the image.\n responsive | true | Boolean | Re-render the cropper when resizing the window.\n guides | true | Boolean | Show the dashed lines in the crop box.\n cache | true | Boolean | Controls browser caching mode of the resource. Default is true.\n+stream | null | Object | Binary data to stream.\n viewMode | 1 | Integer | Define the view mode of the cropper. If you set viewMode to 0, the crop box can extend outside the canvas, while a value of 1, 2 or 3 will restrict the crop box to the size of the canvas. A viewMode of 2 or 3 will additionally restrict the canvas to the container. Note that if the proportions of the canvas and the container are the same, there is no difference between 2 and 3.\n \n ## Getting started with the ImageCropper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM3NTM0MA=="}, "originalCommit": {"oid": "6dfd2bd1e3454134cbf046f0b3c5195c7bba696a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTQ0NjUyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/META-INF/primefaces-p.taglib.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyMTowOVrOGajW7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0MDowNFrOGakXSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NTQ3MA==", "bodyText": "This needs to be removed right? and image needs to be updated to java.lang.Object.", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430495470", "createdAt": "2020-05-26T15:21:09Z", "author": {"login": "melloware"}, "path": "src/main/resources/META-INF/primefaces-p.taglib.xml", "diffHunk": "@@ -11202,6 +11202,14 @@\n             <required>false</required>\n             <type>java.lang.Boolean</type>\n         </attribute>\n+        <attribute>\n+            <description>\n+                <![CDATA[Binary data to stream the image dynamically]]>\n+            </description>\n+            <name>stream</name>\n+            <required>false</required>\n+            <type>java.lang.Object</type>\n+        </attribute>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxMTk0NQ==", "bodyText": "Done! In addition, image is required='true', confirm?", "url": "https://github.com/primefaces/primefaces/pull/5957#discussion_r430511945", "createdAt": "2020-05-26T15:40:04Z", "author": {"login": "doleron"}, "path": "src/main/resources/META-INF/primefaces-p.taglib.xml", "diffHunk": "@@ -11202,6 +11202,14 @@\n             <required>false</required>\n             <type>java.lang.Boolean</type>\n         </attribute>\n+        <attribute>\n+            <description>\n+                <![CDATA[Binary data to stream the image dynamically]]>\n+            </description>\n+            <name>stream</name>\n+            <required>false</required>\n+            <type>java.lang.Object</type>\n+        </attribute>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5NTQ3MA=="}, "originalCommit": {"oid": "22c795321a7e6ef57a60316fdc8f8815d8168883"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2063, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}