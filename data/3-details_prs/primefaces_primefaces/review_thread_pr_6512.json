{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMTgwMTA4", "number": 6512, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0MDoyMlrOE5d2eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozMToyNFrOE7Ki-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjkzMzY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/primefaces/model/rest/AutoCompleteSuggestion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0MDoyMlrOHz8iiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0MDoyMlrOHz8iiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIzMTMwNQ==", "bodyText": "Should be serializable and add equals(), hashcode(), and toString() methods.", "url": "https://github.com/primefaces/primefaces/pull/6512#discussion_r524231305", "createdAt": "2020-11-16T12:40:22Z", "author": {"login": "melloware"}, "path": "src/main/java/org/primefaces/model/rest/AutoCompleteSuggestion.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * The MIT License\n+ *\n+ * Copyright (c) 2009-2020 PrimeTek\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.primefaces.model.rest;\n+\n+/**\n+ * AutoComplete-REST-Endpoint (indicated via completeEndpoint-attribute) has to return a list of suggestions.\n+ * This class may be used to represent one suggestion.\n+ */\n+public class AutoCompleteSuggestion {\n+    private String value;\n+    private String label;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d9ed2e3e2be30600ad643f3b7797f2d72a8d973"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNDc0MjMzOnYy", "diffSide": "RIGHT", "path": "src/main/resources/META-INF/resources/primefaces/autocomplete/autocomplete.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozMToyNFrOH2p0cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNzozNzowMlrOH2qC0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MDMyMg==", "bodyText": "Double ;; on this line", "url": "https://github.com/primefaces/primefaces/pull/6512#discussion_r527070322", "createdAt": "2020-11-19T17:31:24Z", "author": {"login": "melloware"}, "path": "src/main/resources/META-INF/resources/primefaces/autocomplete/autocomplete.js", "diffHunk": "@@ -909,14 +910,18 @@ PrimeFaces.widget.AutoComplete = PrimeFaces.widget.BaseWidget.extend({\n                     })\n                     .done(function(suggestions) {\n                         var html = '<ul class=\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">';\n-                        suggestions.forEach(function(suggestion) {\n+                        suggestions.suggestions.forEach(function(suggestion) {\n                             var labelEncoded = $(\"<div>\").text(suggestion.label).html();\n                             var itemValue = labelEncoded;\n                             if (!!suggestion.value) {\n                                 itemValue = $(\"<div>\").text(suggestion.value).html();\n                             }\n                             html += '<li class=\"ui-autocomplete-item ui-autocomplete-list-item ui-corner-all\" data-item-value=\"' + itemValue + '\" data-item-label=\"' + labelEncoded + '\" role=\"option\">' + labelEncoded + '</li>';\n                         });\n+                        if (suggestions.moreAvailable == true && $this.cfg.moreText) {\n+                            var moreTextEncoded = $(\"<div>\").text($this.cfg.moreText).html();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1fb110e456f9b6fc255a5dbdab2ac0155cd78e"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3NDAwMA==", "bodyText": "Thanks for pointing me on this!", "url": "https://github.com/primefaces/primefaces/pull/6512#discussion_r527074000", "createdAt": "2020-11-19T17:37:02Z", "author": {"login": "christophs78"}, "path": "src/main/resources/META-INF/resources/primefaces/autocomplete/autocomplete.js", "diffHunk": "@@ -909,14 +910,18 @@ PrimeFaces.widget.AutoComplete = PrimeFaces.widget.BaseWidget.extend({\n                     })\n                     .done(function(suggestions) {\n                         var html = '<ul class=\"ui-autocomplete-items ui-autocomplete-list ui-widget-content ui-widget ui-corner-all ui-helper-reset\">';\n-                        suggestions.forEach(function(suggestion) {\n+                        suggestions.suggestions.forEach(function(suggestion) {\n                             var labelEncoded = $(\"<div>\").text(suggestion.label).html();\n                             var itemValue = labelEncoded;\n                             if (!!suggestion.value) {\n                                 itemValue = $(\"<div>\").text(suggestion.value).html();\n                             }\n                             html += '<li class=\"ui-autocomplete-item ui-autocomplete-list-item ui-corner-all\" data-item-value=\"' + itemValue + '\" data-item-label=\"' + labelEncoded + '\" role=\"option\">' + labelEncoded + '</li>';\n                         });\n+                        if (suggestions.moreAvailable == true && $this.cfg.moreText) {\n+                            var moreTextEncoded = $(\"<div>\").text($this.cfg.moreText).html();;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA3MDMyMg=="}, "originalCommit": {"oid": "bc1fb110e456f9b6fc255a5dbdab2ac0155cd78e"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}