{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NTEwOTM4", "number": 947, "title": "[IOTDB-560] add TsFileInputFormat for reading TsFiles on flink.", "bodyText": "TsFile is a columnar storage file format in Apache IoTDB. It is designed for time series data and supports efficient compression and query and is easy to be integrated into big data processing frameworks.\nApache Flink is a framework and distributed processing engine for stateful computations over unbounded and bounded data streams and becoming more and more popular in IOT scenes. So, it would be great to integrate IoTDB and Flink.\nThis pull request adds a TsFileInputFormat to support read TsFiles on flink via DataStream/DataSet API.\nMore detail can be found in discussion thread [1], or in the IoTDB wiki [2]\n[1]https://lists.apache.org/thread.html/r6dd6afe4e8e4ca42e3ddfbc80609597788f90b214e7a81788c3b51b3%40%3Cdev.iotdb.apache.org%3E\n[2]https://cwiki.apache.org/confluence/display/IOTDB/%5BImprovement+Proposal%5D+Add+Flink+Connector+Support+for+TsFile", "createdAt": "2020-03-27T02:03:51Z", "url": "https://github.com/apache/iotdb/pull/947", "merged": true, "mergeCommit": {"oid": "b24cdde30f48f94d1f31c4abc1e73e00c2ceef18"}, "closed": true, "closedAt": "2020-04-08T12:25:34Z", "author": {"login": "WeiZhong94"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcR_9evAFqTM4MzI4OTkwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcViDzUgH2gAyMzk0NTEwOTM4OjcyOWNkNDMzMzUzYzUwYmY4ODA4YjgyZTg0YWY0NTM3NGRjZTNlOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjg5OTA4", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-383289908", "createdAt": "2020-03-28T06:59:30Z", "commit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNjo1OTozMFrOF9HcMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNzowOToyNlrOF9He3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTM2Mw==", "bodyText": "Could you please add some Java DOC for the class?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399629363", "createdAt": "2020-03-28T06:59:30Z", "author": {"login": "sunjincheng121"}, "path": "example/flink/src/main/java/org/apache/iotdb/flink/FlinkTsFileBatchSource.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.iotdb.flink;\n+\n+import org.apache.flink.api.common.typeinfo.TypeInformation;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.api.java.DataSet;\n+import org.apache.flink.api.java.ExecutionEnvironment;\n+import org.apache.flink.api.java.typeutils.RowTypeInfo;\n+import org.apache.flink.types.Row;\n+import org.apache.iotdb.flink.tsfile.RowRowRecordParser;\n+import org.apache.iotdb.flink.tsfile.TsFileInputFormat;\n+import org.apache.iotdb.tsfile.common.constant.QueryConstant;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.expression.QueryExpression;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class FlinkTsFileBatchSource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTM3OA==", "bodyText": "Could you please add some Java DOC for the class?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399629378", "createdAt": "2020-03-28T06:59:39Z", "author": {"login": "sunjincheng121"}, "path": "example/flink/src/main/java/org/apache/iotdb/flink/FlinkTsFileStreamSource.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.iotdb.flink;\n+\n+import org.apache.flink.api.common.typeinfo.TypeInformation;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.api.java.typeutils.RowTypeInfo;\n+import org.apache.flink.streaming.api.datastream.DataStream;\n+import org.apache.flink.streaming.api.datastream.DataStreamUtils;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.types.Row;\n+import org.apache.iotdb.flink.tsfile.RowRowRecordParser;\n+import org.apache.iotdb.flink.tsfile.TsFileInputFormat;\n+import org.apache.iotdb.tsfile.common.constant.QueryConstant;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.expression.QueryExpression;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public class FlinkTsFileStreamSource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTQyNQ==", "bodyText": "TsFlieUtils?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399629425", "createdAt": "2020-03-28T07:00:22Z", "author": {"login": "sunjincheng121"}, "path": "example/flink/src/main/java/org/apache/iotdb/flink/Utils.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.iotdb.flink;\n+\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSEncoding;\n+import org.apache.iotdb.tsfile.fileSystem.FSFactoryProducer;\n+import org.apache.iotdb.tsfile.write.TsFileWriter;\n+import org.apache.iotdb.tsfile.write.record.TSRecord;\n+import org.apache.iotdb.tsfile.write.record.datapoint.DataPoint;\n+import org.apache.iotdb.tsfile.write.record.datapoint.LongDataPoint;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+\n+import java.io.File;\n+\n+public class Utils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTc3OA==", "bodyText": "How are the responsibilities of Utils and TSFileConfigUtil different? Merge it into a utils or specify the name of Utils? And could you please add some Java DOC for the class?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399629778", "createdAt": "2020-03-28T07:05:39Z", "author": {"login": "sunjincheng121"}, "path": "flink-tsfile/src/main/java/org/apache/iotdb/flink/tsfile/util/TSFileConfigUtil.java", "diffHunk": "@@ -0,0 +1,62 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.flink.tsfile.util;\n+\n+import org.apache.iotdb.tsfile.common.conf.TSFileConfig;\n+import org.apache.iotdb.tsfile.common.conf.TSFileDescriptor;\n+\n+public class TSFileConfigUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYyOTkzNA==", "bodyText": "I'm confused about your naming of utils and tools. How do you define a class as utils or tool?\nIf this class is a example, I think we can add a method in some utils class? What do you think?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399629934", "createdAt": "2020-03-28T07:08:02Z", "author": {"login": "sunjincheng121"}, "path": "flink-tsfile/src/test/java/org/apache/iotdb/flink/tool/TsFileWriteTool.java", "diffHunk": "@@ -0,0 +1,234 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.flink.tool;\n+\n+import java.io.File;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSEncoding;\n+import org.apache.iotdb.tsfile.write.TsFileWriter;\n+import org.apache.iotdb.tsfile.write.record.TSRecord;\n+import org.apache.iotdb.tsfile.write.record.datapoint.DataPoint;\n+import org.apache.iotdb.tsfile.write.record.datapoint.FloatDataPoint;\n+import org.apache.iotdb.tsfile.write.record.datapoint.IntDataPoint;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+\n+/**\n+ * An example of writing data to TsFile\n+ */\n+public class TsFileWriteTool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMDA0NA==", "bodyText": "This is a base interface +1 for this change. Just double check: Is there any concerns on this @jixuan1989 :)", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399630044", "createdAt": "2020-03-28T07:09:26Z", "author": {"login": "sunjincheng121"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/expression/IExpression.java", "diffHunk": "@@ -18,7 +18,9 @@\n  */\n package org.apache.iotdb.tsfile.read.expression;\n \n-public interface IExpression{\n+import java.io.Serializable;\n+\n+public interface IExpression extends Serializable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0cb73105c1972c7a2a80534ccf8a73f27c088fb"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDAyNjU1", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-383402655", "createdAt": "2020-03-29T11:57:21Z", "commit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMTo1NzoyMVrOF9RErQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQxMTo1NzoyMVrOF9RErQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc4NzE4MQ==", "bodyText": "Hi, this may be hard to maintain... how about let the user directly use TSFileConfig as follows if they want to change some configuration:\nTSFileConfig config = TsFileDescriptor.getInstance().getConfig();\nconfig.setXXX();", "url": "https://github.com/apache/iotdb/pull/947#discussion_r399787181", "createdAt": "2020-03-29T11:57:21Z", "author": {"login": "qiaojialin"}, "path": "flink-tsfile/src/main/java/org/apache/iotdb/flink/tsfile/util/TSFileConfigUtil.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.flink.tsfile.util;\n+\n+import org.apache.iotdb.tsfile.common.conf.TSFileConfig;\n+import org.apache.iotdb.tsfile.common.conf.TSFileDescriptor;\n+\n+/**\n+ * Utils of setting global TSFileConfig.\n+ */\n+public class TSFileConfigUtil {\n+\t\n+\tpublic static void setGlobalTSFileConfig(TSFileConfig config) {\n+\t\tTSFileConfig globalConfig = TSFileDescriptor.getInstance().getConfig();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDAyOTE5", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-383402919", "createdAt": "2020-03-29T11:59:50Z", "commit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzODQ0NTcz", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-383844573", "createdAt": "2020-03-30T13:19:55Z", "commit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzoxOTo1NlrOF9pUAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzoxOTo1NlrOF9pUAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE4NDMyMQ==", "bodyText": "Does this module give the capacity to write TsFile?", "url": "https://github.com/apache/iotdb/pull/947#discussion_r400184321", "createdAt": "2020-03-30T13:19:56Z", "author": {"login": "jixuan1989"}, "path": "flink-tsfile/README.md", "diffHunk": "@@ -0,0 +1,93 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+# TsFile-Flink-Connector User Guide\n+\n+## 1. About TsFile-Flink-Connector\n+\n+TsFile-Flink-Connector implements the support of Flink for external data sources of Tsfile type. \n+This enables users to read, write and query Tsfile by Flink via DataStream/DataSet API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6eb077b9631f1c425adb119afce7aeb6d8d25a81", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6eb077b9631f1c425adb119afce7aeb6d8d25a81", "committedDate": "2020-03-29T07:38:27Z", "message": "add docs and rename util classes."}, "afterCommit": {"oid": "6f1e7c7e1d4ccbbc5f42d704ce55a0c78ff2fc83", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6f1e7c7e1d4ccbbc5f42d704ce55a0c78ff2fc83", "committedDate": "2020-04-01T09:08:47Z", "message": "address comments and push to test travis changes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Njk4MjUw", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-387698250", "createdAt": "2020-04-04T13:12:06Z", "commit": {"oid": "7c5d4adfab18160ce59fabaf0869066d813dab5f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff003821d1c73bb21e604b658396e92dff855667", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/ff003821d1c73bb21e604b658396e92dff855667", "committedDate": "2020-04-08T01:48:01Z", "message": "add TsFileInputFormat for reading TsFiles in flink."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b19f9206af809cc723310fe5744b7b262365c02a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b19f9206af809cc723310fe5744b7b262365c02a", "committedDate": "2020-04-08T01:48:01Z", "message": "try to fix windows test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41faebc2872a79d454b2e9d2a59b9ab0aa4cad76", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/41faebc2872a79d454b2e9d2a59b9ab0aa4cad76", "committedDate": "2020-04-08T01:48:01Z", "message": "add docs and rename util classes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c5d4adfab18160ce59fabaf0869066d813dab5f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/7c5d4adfab18160ce59fabaf0869066d813dab5f", "committedDate": "2020-04-01T11:39:32Z", "message": "fix compile error caused by rebase"}, "afterCommit": {"oid": "612c5618cf9d61076edf1a8dd10f279ac31fcd49", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/612c5618cf9d61076edf1a8dd10f279ac31fcd49", "committedDate": "2020-04-08T01:51:15Z", "message": "fix compile error caused by rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc7f4f87220b18a15902cea8bb512d2288608a1c", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/fc7f4f87220b18a15902cea8bb512d2288608a1c", "committedDate": "2020-04-08T01:51:15Z", "message": "address comments and push to test travis changes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "612c5618cf9d61076edf1a8dd10f279ac31fcd49", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/612c5618cf9d61076edf1a8dd10f279ac31fcd49", "committedDate": "2020-04-08T01:51:15Z", "message": "fix compile error caused by rebase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjM4NjUx", "url": "https://github.com/apache/iotdb/pull/947#pullrequestreview-389638651", "createdAt": "2020-04-08T04:05:48Z", "commit": {"oid": "612c5618cf9d61076edf1a8dd10f279ac31fcd49"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNDowNTo0OFrOGCeQhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNDowNTo0OFrOGCeQhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0NjA4Ng==", "bodyText": "Hi, I wonder if the QueryExpression could be inferred automatically based on the RowTypeInfo in the InputFormat? If so, users do not have to maintain this and ensure the consistency of queried paths and RowTypeInfo. We also don't have to check whether they match.", "url": "https://github.com/apache/iotdb/pull/947#discussion_r405246086", "createdAt": "2020-04-08T04:05:48Z", "author": {"login": "qiaojialin"}, "path": "example/flink/src/main/java/org/apache/iotdb/flink/FlinkTsFileStreamSource.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.iotdb.flink;\n+\n+import org.apache.flink.api.common.typeinfo.TypeInformation;\n+import org.apache.flink.api.common.typeinfo.Types;\n+import org.apache.flink.api.java.typeutils.RowTypeInfo;\n+import org.apache.flink.streaming.api.datastream.DataStream;\n+import org.apache.flink.streaming.api.datastream.DataStreamUtils;\n+import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;\n+import org.apache.flink.types.Row;\n+import org.apache.iotdb.flink.tsfile.RowRowRecordParser;\n+import org.apache.iotdb.flink.tsfile.TsFileInputFormat;\n+import org.apache.iotdb.tsfile.common.constant.QueryConstant;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.expression.QueryExpression;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * The example of reading TsFile via Flink DataStream API.\n+ */\n+public class FlinkTsFileStreamSource {\n+\n+\tpublic static void main(String[] args) throws IOException {\n+\t\tString path = \"test.tsfile\";\n+\t\tTsFlieUtils.writeTsFile(path);\n+\t\tnew File(path).deleteOnExit();\n+\t\tString[] filedNames = {\n+\t\t\tQueryConstant.RESERVED_TIME,\n+\t\t\t\"device_1.sensor_1\",\n+\t\t\t\"device_1.sensor_2\",\n+\t\t\t\"device_1.sensor_3\",\n+\t\t\t\"device_2.sensor_1\",\n+\t\t\t\"device_2.sensor_2\",\n+\t\t\t\"device_2.sensor_3\"\n+\t\t};\n+\t\tTypeInformation[] typeInformations = new TypeInformation[] {\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG,\n+\t\t\tTypes.LONG\n+\t\t};\n+\t\tList<Path> paths = Arrays.stream(filedNames)\n+\t\t\t.filter(s -> !s.equals(QueryConstant.RESERVED_TIME))\n+\t\t\t.map(Path::new)\n+\t\t\t.collect(Collectors.toList());\n+\t\tRowTypeInfo rowTypeInfo = new RowTypeInfo(typeInformations, filedNames);\n+\t\tQueryExpression queryExpression = QueryExpression.create(paths, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "612c5618cf9d61076edf1a8dd10f279ac31fcd49"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "729cd433353c50bf8808b82e84af45374dce3e96", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/729cd433353c50bf8808b82e84af45374dce3e96", "committedDate": "2020-04-08T06:39:25Z", "message": "fix compile error caused by rebase and add a new test to help maintain the TSFileConfigUtil."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3037, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}