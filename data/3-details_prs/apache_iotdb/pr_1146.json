{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDE0NDE2", "number": 1146, "title": "[IOTDB-635]Added workaround when doing Aggregation over boolean Series.", "bodyText": "As discussed, please have a look @jixuan1989", "createdAt": "2020-05-02T07:48:20Z", "url": "https://github.com/apache/iotdb/pull/1146", "merged": true, "mergeCommit": {"oid": "f9606b0a042e7477365b5efd3ad9228343e99950"}, "closed": true, "closedAt": "2020-05-02T13:51:43Z", "author": {"login": "JulianFeinauer"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdRdmOAFqTQwNDUwODc1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdVa__gH2gAyNDEyNDE0NDE2OmVlMmNjZDU3ZDQ1ZTI1NGRkZTZjMDliZDk3Y2EzMjU0MWMwNDJkYjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTA4NzUx", "url": "https://github.com/apache/iotdb/pull/1146#pullrequestreview-404508751", "createdAt": "2020-05-02T07:50:36Z", "commit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MDozNlrOGPhS9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MDozNlrOGPhS9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzM1MQ==", "bodyText": "how about empty List?", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418927351", "createdAt": "2020-05-02T07:50:36Z", "author": {"login": "jixuan1989"}, "path": "grafana/src/main/java/org/apache/iotdb/web/grafana/dao/impl/BasicDaoImpl.java", "diffHunk": "@@ -98,8 +98,28 @@ public Object doInConnection(Connection connection) throws SQLException {\n     return (List<String>) jdbcTemplate.execute(connectionCallback);\n   }\n \n+  /**\n+   * Note: If the query fails this could be due to AGGREGATIION like AVG on booleayn field.\n+   * Thus, we then do a retry with FIRST aggregation.\n+   * This should be solved better in the long run.\n+   */\n   @Override\n   public List<TimeValues> querySeries(String s, Pair<ZonedDateTime, ZonedDateTime> timeRange) {\n+    try {\n+      return querySeriesInternal(s, timeRange, function);\n+    } catch (Exception e) {\n+      logger.info(\"Execution failed, trying now with FIRST Function!\");\n+      // Try it with FIRST\n+      try {\n+        return querySeriesInternal(s, timeRange, \"FIRST\");\n+      } catch (Exception e2) {\n+        logger.warn(\"Even FIRST query did not succeed, returning NULL now\", e2);\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTA4ODE2", "url": "https://github.com/apache/iotdb/pull/1146#pullrequestreview-404508816", "createdAt": "2020-05-02T07:51:48Z", "commit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MTo0OVrOGPhTZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwNzo1MTo0OVrOGPhTZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkyNzQ2Mw==", "bodyText": "add a comment here: if the data type does not support AVG, then FIRST will be used.", "url": "https://github.com/apache/iotdb/pull/1146#discussion_r418927463", "createdAt": "2020-05-02T07:51:49Z", "author": {"login": "jixuan1989"}, "path": "grafana/src/main/resources/application.properties", "diffHunk": "@@ -32,4 +32,4 @@ isDownSampling=true\n interval=1m\n # aggregation function to use to downsampling the data\n # COUNT, FIRST_VALUE, LAST_VALUE, MAX_TIME, MAX_VALUE, AVG, MIN_TIME, MIN_VALUE, NOW, SUM\n-function=avg\n\\ No newline at end of file\n+function=AVG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abc9dc54248568e7fa45d4f61eed3b14db6bfb99", "author": {"user": {"login": "JulianFeinauer", "name": "Julian"}}, "url": "https://github.com/apache/iotdb/commit/abc9dc54248568e7fa45d4f61eed3b14db6bfb99", "committedDate": "2020-05-02T08:34:50Z", "message": "Added workaround when doing Aggregation over boolean Series."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf", "author": {"user": {"login": "JulianFeinauer", "name": "Julian"}}, "url": "https://github.com/apache/iotdb/commit/a1c2b782c59cfdc7b1cdd5cf08c152bee55603bf", "committedDate": "2020-05-02T07:47:35Z", "message": "Added workaround when doing Aggregation over boolean Series."}, "afterCommit": {"oid": "abc9dc54248568e7fa45d4f61eed3b14db6bfb99", "author": {"user": {"login": "JulianFeinauer", "name": "Julian"}}, "url": "https://github.com/apache/iotdb/commit/abc9dc54248568e7fa45d4f61eed3b14db6bfb99", "committedDate": "2020-05-02T08:34:50Z", "message": "Added workaround when doing Aggregation over boolean Series."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTEzNDk1", "url": "https://github.com/apache/iotdb/pull/1146#pullrequestreview-404513495", "createdAt": "2020-05-02T09:17:48Z", "commit": {"oid": "abc9dc54248568e7fa45d4f61eed3b14db6bfb99"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d421d686ffab1e0e03770ab7b29858efee3d3b", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a4d421d686ffab1e0e03770ab7b29858efee3d3b", "committedDate": "2020-05-02T12:23:21Z", "message": "fix pentaho can not be downloaded because of spring.io address"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3dbeee622ff1a17e4b7ed5ec7a583eacd6f6be18", "author": {"user": {"login": "JulianFeinauer", "name": "Julian"}}, "url": "https://github.com/apache/iotdb/commit/3dbeee622ff1a17e4b7ed5ec7a583eacd6f6be18", "committedDate": "2020-05-02T12:26:47Z", "message": "Added workaround when doing Aggregation over boolean Series."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee2ccd57d45e254dde6c09bd97ca32541c042db5", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/ee2ccd57d45e254dde6c09bd97ca32541c042db5", "committedDate": "2020-05-02T12:27:23Z", "message": "Merge branch 'bugfix/iotdb-grafana-boolean' of github.com:apache/incubator-iotdb into bugfix/iotdb-grafana-boolean"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3809, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}