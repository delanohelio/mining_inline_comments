{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2OTQ2NjQ2", "number": 1732, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNTozNFrOEjlTEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzoyMjo0OVrOEtwvdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzQ2NzA1OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNTozNFrOHSA10Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzowNTozNFrOHSA10Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY1MDE5Mw==", "bodyText": "remove this", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r488650193", "createdAt": "2020-09-15T13:05:34Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "diffHunk": "@@ -447,27 +447,36 @@ public void update(String deviceId, String measurementId, long startTime, long e\n     // TODO\n   }\n \n+  public void delete(PartialPath path, long startTime, long endTime)\n+          throws StorageEngineException {\n+    StorageGroupProcessor storageGroupProcessor = getProcessor(path);\n+    try {\n+      storageGroupProcessor.delete(path, startTime, endTime);\n+    } catch (IOException e) {\n+      throw new StorageEngineException(e.getMessage());\n+    }\n+  }\n   /**\n    * delete data of timeseries \"{deviceId}.{measurementId}\" with time <= timestamp.\n    */\n-  public void delete(PartialPath deviceId, String measurementId, long startTime, long endTime)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfed1a36143ca4a05660d8e26a78604fe47761c9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzU2OTc5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzoyODowMVrOHSB1jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzoyODowMVrOHSB1jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY2NjUxMQ==", "bodyText": "what if the path is root.*?", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r488666511", "createdAt": "2020-09-15T13:28:01Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "diffHunk": "@@ -447,27 +447,36 @@ public void update(String deviceId, String measurementId, long startTime, long e\n     // TODO\n   }\n \n+  public void delete(PartialPath path, long startTime, long endTime)\n+          throws StorageEngineException {\n+    StorageGroupProcessor storageGroupProcessor = getProcessor(path);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfed1a36143ca4a05660d8e26a78604fe47761c9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzUxNzg1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNDowMTowNlrOHVAIyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTozNzozMFrOHYjy3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NDM5Mw==", "bodyText": "put the for into the if", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491784393", "createdAt": "2020-09-21T04:01:06Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -226,17 +229,18 @@ public void insertTablet(InsertTabletPlan insertTabletPlan, int start, int end,\n    * <p>\n    * Delete data in both working MemTable and flushing MemTables.\n    */\n-  public void deleteDataInMemory(Deletion deletion) {\n+  public void deleteDataInMemory(Deletion deletion) throws MetadataException {\n     flushQueryLock.writeLock().lock();\n     if (logger.isDebugEnabled()) {\n       logger\n           .debug(FLUSH_QUERY_WRITE_LOCKED, storageGroupName, tsFileResource.getTsFile().getName());\n     }\n     try {\n-      if (workMemTable != null) {\n-        workMemTable\n-            .delete(deletion.getDevice(), deletion.getMeasurement(), deletion.getStartTime(),\n-                deletion.getEndTime());\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDMzMw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495514333", "createdAt": "2020-09-27T01:37:30Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -226,17 +229,18 @@ public void insertTablet(InsertTabletPlan insertTabletPlan, int start, int end,\n    * <p>\n    * Delete data in both working MemTable and flushing MemTables.\n    */\n-  public void deleteDataInMemory(Deletion deletion) {\n+  public void deleteDataInMemory(Deletion deletion) throws MetadataException {\n     flushQueryLock.writeLock().lock();\n     if (logger.isDebugEnabled()) {\n       logger\n           .debug(FLUSH_QUERY_WRITE_LOCKED, storageGroupName, tsFileResource.getTsFile().getName());\n     }\n     try {\n-      if (workMemTable != null) {\n-        workMemTable\n-            .delete(deletion.getDevice(), deletion.getMeasurement(), deletion.getStartTime(),\n-                deletion.getEndTime());\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NDM5Mw=="}, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzUyNDI5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNDowNjozNFrOHVAMIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTozNzozNVrOHYjy3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NTI1MA==", "bodyText": "add javadoc", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491785250", "createdAt": "2020-09-21T04:06:34Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {\n+    return nodes.length;\n+  }\n+\n+  public PartialPath alterPrefixPath(PartialPath prefixPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDMzNQ==", "bodyText": "Added", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495514335", "createdAt": "2020-09-27T01:37:35Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {\n+    return nodes.length;\n+  }\n+\n+  public PartialPath alterPrefixPath(PartialPath prefixPath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NTI1MA=="}, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzUyNTUxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNDowNzoyN1rOHVAMxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTozNzo0OVrOHYjy-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NTQxNQ==", "bodyText": "add an example", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491785415", "createdAt": "2020-09-21T04:07:27Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -503,7 +503,22 @@ private void findStorageGroup(\n   }\n \n   /**\n-   * Get all storage group under give path\n+   * Get the storage group that given path belonged to or under given path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDM2MQ==", "bodyText": "done", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495514361", "createdAt": "2020-09-27T01:37:49Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -503,7 +503,22 @@ private void findStorageGroup(\n   }\n \n   /**\n-   * Get all storage group under give path\n+   * Get the storage group that given path belonged to or under given path", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NTQxNQ=="}, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzUzMjIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNDoxMzo1NVrOHVAQdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTozNzo1M1rOHYjzAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NjM1OA==", "bodyText": "change the fullPath in concatPath()", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491786358", "createdAt": "2020-09-21T04:13:55Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDM2OA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495514368", "createdAt": "2020-09-27T01:37:53Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc4NjM1OA=="}, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzcyNjYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyMjozNlrOHVB6Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMTozNzo1OFrOHYjzCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMzQzMQ==", "bodyText": "add javadoc and give an example for each case", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491813431", "createdAt": "2020-09-21T06:22:36Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {\n+    return nodes.length;\n+  }\n+\n+  public PartialPath alterPrefixPath(PartialPath prefixPath) {\n+    String[] newNodes = Arrays.copyOf(nodes, Math.max(nodes.length, prefixPath.getNodeLength()));\n+    System.arraycopy(prefixPath.getNodes(), 0, newNodes, 0, prefixPath.getNodeLength());\n+    return new PartialPath(newNodes);\n+  }\n+\n+  public void setPrefixPath(PartialPath prefixPath) {\n+    this.nodes = Arrays.copyOf(nodes, Math.max(nodes.length, prefixPath.getNodeLength()));\n+    System.arraycopy(prefixPath.getNodes(), 0, nodes, 0, prefixPath.getNodeLength());\n+    fullPath = String.join(TsFileConstant.PATH_SEPARATOR, nodes);\n+  }\n+\n+  public boolean matchFullPath(String rPath) throws IllegalPathException {\n+    return matchFullPath(new PartialPath(rPath));\n+  }\n+\n+  public boolean matchFullPath(PartialPath rPath) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNDM3OQ==", "bodyText": "Added", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495514379", "createdAt": "2020-09-27T01:37:58Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -99,6 +105,41 @@ public PartialPath concatNode(String node) {\n     return nodes;\n   }\n \n+  public int getNodeLength() {\n+    return nodes.length;\n+  }\n+\n+  public PartialPath alterPrefixPath(PartialPath prefixPath) {\n+    String[] newNodes = Arrays.copyOf(nodes, Math.max(nodes.length, prefixPath.getNodeLength()));\n+    System.arraycopy(prefixPath.getNodes(), 0, newNodes, 0, prefixPath.getNodeLength());\n+    return new PartialPath(newNodes);\n+  }\n+\n+  public void setPrefixPath(PartialPath prefixPath) {\n+    this.nodes = Arrays.copyOf(nodes, Math.max(nodes.length, prefixPath.getNodeLength()));\n+    System.arraycopy(prefixPath.getNodes(), 0, nodes, 0, prefixPath.getNodeLength());\n+    fullPath = String.join(TsFileConstant.PATH_SEPARATOR, nodes);\n+  }\n+\n+  public boolean matchFullPath(String rPath) throws IllegalPathException {\n+    return matchFullPath(new PartialPath(rPath));\n+  }\n+\n+  public boolean matchFullPath(PartialPath rPath) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMzQzMQ=="}, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzcyOTE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyMzo0M1rOHVB7ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyMzo0M1rOHVB7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxMzc5NQ==", "bodyText": "add javadoc", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r491813795", "createdAt": "2020-09-21T06:23:43Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -771,6 +771,15 @@ public PartialPath getStorageGroupPath(PartialPath path) throws StorageGroupNotS\n     }\n   }\n \n+  public List<PartialPath> getRelatedStorageGroups(PartialPath path) throws MetadataException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7d77af0d1b9054cba9248864faafd996ff9714c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTYyNTMyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjoxNzoyMVrOHYj-QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxOTowMVrOHcNP6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI0OQ==", "bodyText": "I think you also write every mod record into tsfile resource's mod file. In jira, you said that\nWe need to record N*M modifications, which is time consuming. \n\nCould you explain that?   Thanks~", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495517249", "createdAt": "2020-09-27T02:17:21Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1443,13 +1443,15 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n \n   private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, Deletion deletion,\n       List<ModificationFile> updatedModFiles)\n-      throws IOException {\n-    String deviceId = deletion.getDevice();\n+          throws IOException, MetadataException {\n     for (TsFileResource tsFileResource : tsFileResourceList) {\n-      if (!tsFileResource.containsDevice(deviceId) ||\n-          deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n-          deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n-        continue;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+        String deviceId = p.getDevice();\n+        if (!tsFileResource.containsDevice(deviceId) ||\n+                deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n+                deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NjM0Nw==", "bodyText": "Sure! In previous implementation, only timeseries fullpath is written into mod file.\nE.g. the deletion path is \"root.sg.d1.*\" and d1 has N measurements, we have to access mod file N times to record all the fullpaths.\nFor now, we record \"root.sg.d1.*\" into mod file only once.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495546347", "createdAt": "2020-09-27T08:32:55Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1443,13 +1443,15 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n \n   private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, Deletion deletion,\n       List<ModificationFile> updatedModFiles)\n-      throws IOException {\n-    String deviceId = deletion.getDevice();\n+          throws IOException, MetadataException {\n     for (TsFileResource tsFileResource : tsFileResourceList) {\n-      if (!tsFileResource.containsDevice(deviceId) ||\n-          deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n-          deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n-        continue;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+        String deviceId = p.getDevice();\n+        if (!tsFileResource.containsDevice(deviceId) ||\n+                deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n+                deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI0OQ=="}, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzI1OTEzNQ==", "bodyText": "The for (PartialPath p ) statement is of no use. Check the code carefully.\ninsert into root.turbine1.a.d1(timestamp,s1) values(1,1);\ninsert into root.turbine1.a.d2(timestamp,s1) values(1,1);\nflush\ninsert into root.turbine1.b.d1(timestamp,s1) values(2,1);\ninsert into root.turbine1.b.d2(timestamp,s1) values(2,1);\nflush\ndelete from root.turbine1 where time < 5\nYou will record all files a mod.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r497259135", "createdAt": "2020-09-30T05:56:41Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1443,13 +1443,15 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n \n   private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, Deletion deletion,\n       List<ModificationFile> updatedModFiles)\n-      throws IOException {\n-    String deviceId = deletion.getDevice();\n+          throws IOException, MetadataException {\n     for (TsFileResource tsFileResource : tsFileResourceList) {\n-      if (!tsFileResource.containsDevice(deviceId) ||\n-          deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n-          deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n-        continue;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+        String deviceId = p.getDevice();\n+        if (!tsFileResource.containsDevice(deviceId) ||\n+                deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n+                deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI0OQ=="}, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzOTI0MQ==", "bodyText": "That's what we expected.\nFor one delete time series, record one mod information for all mod files, but only one record per file.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r499339241", "createdAt": "2020-10-05T04:19:01Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1443,13 +1443,15 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n \n   private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, Deletion deletion,\n       List<ModificationFile> updatedModFiles)\n-      throws IOException {\n-    String deviceId = deletion.getDevice();\n+          throws IOException, MetadataException {\n     for (TsFileResource tsFileResource : tsFileResourceList) {\n-      if (!tsFileResource.containsDevice(deviceId) ||\n-          deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n-          deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n-        continue;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+        String deviceId = p.getDevice();\n+        if (!tsFileResource.containsDevice(deviceId) ||\n+                deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n+                deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI0OQ=="}, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTYyNTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwMjoxNzo0MVrOHYj-Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzozMjoxNFrOHYlaWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI3OQ==", "bodyText": "Have you finish the TODO?", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495517279", "createdAt": "2020-09-27T02:17:41Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1378,26 +1375,30 @@ public void delete(PartialPath deviceId, String measurementId, long startTime, l\n     List<ModificationFile> updatedModFiles = new ArrayList<>();\n \n     try {\n-      Long lastUpdateTime = null;\n-      for (Map<String, Long> latestTimeMap : latestTimeForEachDevice.values()) {\n-        Long curTime = latestTimeMap.get(deviceId.getFullPath());\n-        if (curTime != null && (lastUpdateTime == null || lastUpdateTime < curTime)) {\n-          lastUpdateTime = curTime;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(path)) {\n+        PartialPath deviceId = p.getDevicePath();\n+        String measurementId = p.getMeasurement();\n+        Long lastUpdateTime = null;\n+        for (Map<String, Long> latestTimeMap : latestTimeForEachDevice.values()) {\n+          Long curTime = latestTimeMap.get(deviceId.getFullPath());\n+          if (curTime != null && (lastUpdateTime == null || lastUpdateTime < curTime)) {\n+            lastUpdateTime = curTime;\n+          }\n         }\n-      }\n-\n-      // There is no tsfile data, the delete operation is invalid\n-      if (lastUpdateTime == null) {\n-        logger.debug(\"No device {} in SG {}, deletion invalid\", deviceId, storageGroupName);\n-        return;\n+        // There is no tsfile data, the delete operation is invalid\n+        if (lastUpdateTime == null) {\n+          logger.debug(\"No device {} in SG {}, deletion invalid\", deviceId, storageGroupName);\n+          return;\n+        }\n+        // delete Last cache record if necessary\n+        tryToDeleteLastCache(deviceId, measurementId, startTime, endTime);\n       }\n \n       // write log to impacted working TsFileProcessors\n-      logDeletion(startTime, endTime, deviceId, measurementId);\n-      // delete Last cache record if necessary\n-      tryToDeleteLastCache(deviceId, measurementId, startTime, endTime);\n-      Deletion deletion = new Deletion(deviceId.concatNode(measurementId),\n-          MERGE_MOD_START_VERSION_NUM, startTime, endTime);\n+      // TODO rewrite logDeletion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MDgyNQ==", "bodyText": "It's resolved. Remove the TODO", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r495540825", "createdAt": "2020-09-27T07:32:14Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1378,26 +1375,30 @@ public void delete(PartialPath deviceId, String measurementId, long startTime, l\n     List<ModificationFile> updatedModFiles = new ArrayList<>();\n \n     try {\n-      Long lastUpdateTime = null;\n-      for (Map<String, Long> latestTimeMap : latestTimeForEachDevice.values()) {\n-        Long curTime = latestTimeMap.get(deviceId.getFullPath());\n-        if (curTime != null && (lastUpdateTime == null || lastUpdateTime < curTime)) {\n-          lastUpdateTime = curTime;\n+      for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(path)) {\n+        PartialPath deviceId = p.getDevicePath();\n+        String measurementId = p.getMeasurement();\n+        Long lastUpdateTime = null;\n+        for (Map<String, Long> latestTimeMap : latestTimeForEachDevice.values()) {\n+          Long curTime = latestTimeMap.get(deviceId.getFullPath());\n+          if (curTime != null && (lastUpdateTime == null || lastUpdateTime < curTime)) {\n+            lastUpdateTime = curTime;\n+          }\n         }\n-      }\n-\n-      // There is no tsfile data, the delete operation is invalid\n-      if (lastUpdateTime == null) {\n-        logger.debug(\"No device {} in SG {}, deletion invalid\", deviceId, storageGroupName);\n-        return;\n+        // There is no tsfile data, the delete operation is invalid\n+        if (lastUpdateTime == null) {\n+          logger.debug(\"No device {} in SG {}, deletion invalid\", deviceId, storageGroupName);\n+          return;\n+        }\n+        // delete Last cache record if necessary\n+        tryToDeleteLastCache(deviceId, measurementId, startTime, endTime);\n       }\n \n       // write log to impacted working TsFileProcessors\n-      logDeletion(startTime, endTime, deviceId, measurementId);\n-      // delete Last cache record if necessary\n-      tryToDeleteLastCache(deviceId, measurementId, startTime, endTime);\n-      Deletion deletion = new Deletion(deviceId.concatNode(measurementId),\n-          MERGE_MOD_START_VERSION_NUM, startTime, endTime);\n+      // TODO rewrite logDeletion", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTUxNzI3OQ=="}, "originalCommit": {"oid": "970220d7af0ec3a1d61c85fb755119927e15f003"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMDkwNDg2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjo0MzoyM1rOHc39yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwNjo0MzoyM1rOHc39yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDAzOTExMw==", "bodyText": "This may cause OOM, you'd better provide a match method for TsFileResource.\nFor each device in TsFileResource, check if it matches the given path", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500039113", "createdAt": "2020-10-06T06:43:23Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1440,15 +1439,26 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n     }\n   }\n \n+  private boolean canSkipDelete(TsFileResource tsFileResource, Deletion deletion)\n+      throws MetadataException {\n+    for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTQ5OTM0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOToyNjoyM1rOHc9uJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOToyNjoyM1rOHc9uJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEzMzQxNA==", "bodyText": "It seems that deleteTimeseries function can directly call the delete function to avoid code duplication.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500133414", "createdAt": "2020-10-06T09:26:23Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "diffHunk": "@@ -447,28 +447,32 @@ public void update(String deviceId, String measurementId, long startTime, long e\n     // TODO\n   }\n \n-  /**\n-   * delete data of timeseries \"{deviceId}.{measurementId}\" with time <= timestamp.\n-   */\n-  public void delete(PartialPath deviceId, String measurementId, long startTime, long endTime)\n-      throws StorageEngineException {\n-    StorageGroupProcessor storageGroupProcessor = getProcessor(deviceId);\n+  public void delete(PartialPath path, long startTime, long endTime)\n+          throws StorageEngineException {\n     try {\n-      storageGroupProcessor.delete(deviceId, measurementId, startTime, endTime);\n-    } catch (IOException e) {\n+      List<PartialPath> sgPaths = IoTDB.metaManager.searchAllRelatedStorageGroups(path);\n+      for (PartialPath storageGroupPath : sgPaths) {\n+        StorageGroupProcessor storageGroupProcessor = getProcessor(storageGroupPath);\n+        PartialPath newPath = path.alterPrefixPath(storageGroupPath);\n+        storageGroupProcessor.delete(newPath, startTime, endTime);\n+      }\n+    } catch (IOException | MetadataException e) {\n       throw new StorageEngineException(e.getMessage());\n     }\n   }\n \n   /**\n    * delete data of timeseries \"{deviceId}.{measurementId}\"\n    */\n-  public void deleteTimeseries(PartialPath deviceId, String measurementId)\n+  public void deleteTimeseries(PartialPath path)\n       throws StorageEngineException {\n-    StorageGroupProcessor storageGroupProcessor = getProcessor(deviceId);\n     try {\n-      storageGroupProcessor.delete(deviceId, measurementId, Long.MIN_VALUE, Long.MAX_VALUE);\n-    } catch (IOException e) {\n+      for (PartialPath storageGroupPath : IoTDB.metaManager.searchAllRelatedStorageGroups(path)) {\n+        StorageGroupProcessor storageGroupProcessor = getProcessor(storageGroupPath);\n+        PartialPath newPath = path.alterPrefixPath(storageGroupPath);\n+        storageGroupProcessor.delete(newPath, Long.MIN_VALUE, Long.MAX_VALUE);\n+      }\n+    } catch (IOException | MetadataException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTUzNTkzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/manage/MergeResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOTozNjowMVrOHc-FSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQwOTozNjowMVrOHc-FSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDEzOTMzOA==", "bodyText": "Before, the modication record corresponds to only one timeseries, so it's safe to delete it while occuring one matched time series. However. now, one modification record could correspond to many timeseries, it won't be right to delete it.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500139338", "createdAt": "2020-10-06T09:36:01Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/manage/MergeResource.java", "diffHunk": "@@ -184,7 +184,7 @@ public IChunkWriter getChunkWriter(MeasurementSchema measurementSchema) {\n     // each path is visited only once in a merge, so the modifications can be removed after visiting\n     while (modificationIterator.hasNext()) {\n       Modification modification = modificationIterator.next();\n-      if (modification.getPath().equals(path)) {\n+      if (modification.getPath().matchFullPath(path)) {\n         pathModifications.add(modification);\n         modificationIterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTczNDE3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozMjoyMVrOHdABtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozMjoyMVrOHdABtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3MTE4OQ==", "bodyText": "The if condition is wrong. Maybe you can change a way, think about when it will return true.Like:\n!tsFileResource.containsDevice(deviceId) ||\t      if (canSkipDelete(tsFileResource, deletion)) {\ndeletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\ndeletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500171189", "createdAt": "2020-10-06T10:32:21Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1440,15 +1439,26 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n     }\n   }\n \n+  private boolean canSkipDelete(TsFileResource tsFileResource, Deletion deletion)\n+      throws MetadataException {\n+    for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+      String deviceId = p.getDevice();\n+      if (tsFileResource.containsDevice(deviceId) &&\n+          (deletion.getStartTime() <= tsFileResource.getStartTime(deviceId)\n+              && tsFileResource.getStartTime(deviceId) <= deletion.getEndTime())\n+          || (deletion.getStartTime() >= tsFileResource.getStartTime(deviceId)\n+          && deletion.getStartTime() <= tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTc0NDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozNToyMlrOHdAHzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozNToyMlrOHdAHzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3Mjc1MQ==", "bodyText": "The canSkipDelete function will can the IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath()), it shouldn't be in the for loop, and actually, you already have it in the caller of this function.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500172751", "createdAt": "2020-10-06T10:35:22Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1440,15 +1439,26 @@ private void logDeletion(long startTime, long endTime, PartialPath deviceId, Str\n     }\n   }\n \n+  private boolean canSkipDelete(TsFileResource tsFileResource, Deletion deletion)\n+      throws MetadataException {\n+    for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {\n+      String deviceId = p.getDevice();\n+      if (tsFileResource.containsDevice(deviceId) &&\n+          (deletion.getStartTime() <= tsFileResource.getStartTime(deviceId)\n+              && tsFileResource.getStartTime(deviceId) <= deletion.getEndTime())\n+          || (deletion.getStartTime() >= tsFileResource.getStartTime(deviceId)\n+          && deletion.getStartTime() <= tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE))) {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n \n   private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, Deletion deletion,\n       List<ModificationFile> updatedModFiles)\n-      throws IOException {\n-    String deviceId = deletion.getDevice();\n+          throws IOException, MetadataException {\n     for (TsFileResource tsFileResource : tsFileResourceList) {\n-      if (!tsFileResource.containsDevice(deviceId) ||\n-          deletion.getEndTime() < tsFileResource.getStartTime(deviceId) ||\n-          deletion.getStartTime() > tsFileResource.getOrDefaultEndTime(deviceId, Long.MAX_VALUE)) {\n+      if (canSkipDelete(tsFileResource, deletion)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTc1MTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozNzoyMlrOHdAMEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDozNzoyMlrOHdAMEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE3Mzg0Mw==", "bodyText": "no need to call getAllTimeseriesPath again, you can pass it from the caller.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500173843", "createdAt": "2020-10-06T10:37:22Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -226,17 +229,18 @@ public void insertTablet(InsertTabletPlan insertTabletPlan, int start, int end,\n    * <p>\n    * Delete data in both working MemTable and flushing MemTables.\n    */\n-  public void deleteDataInMemory(Deletion deletion) {\n+  public void deleteDataInMemory(Deletion deletion) throws MetadataException {\n     flushQueryLock.writeLock().lock();\n     if (logger.isDebugEnabled()) {\n       logger\n           .debug(FLUSH_QUERY_WRITE_LOCKED, storageGroupName, tsFileResource.getTsFile().getName());\n     }\n     try {\n       if (workMemTable != null) {\n-        workMemTable\n-            .delete(deletion.getDevice(), deletion.getMeasurement(), deletion.getStartTime(),\n-                deletion.getEndTime());\n+        for (PartialPath p : IoTDB.metaManager.getAllTimeseriesPath(deletion.getPath())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTc5NDUyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDozOFrOHdAmxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDozOFrOHdAmxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MDY3Ng==", "bodyText": "No need to get full path here.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500180676", "createdAt": "2020-10-06T10:50:38Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -50,11 +50,17 @@ public PartialPath(String path) throws IllegalPathException {\n     this.fullPath = path;\n   }\n \n+  public PartialPath(String device, String measurement) throws IllegalPathException {\n+    this.fullPath = device + TsFileConstant.PATH_SEPARATOR + measurement;\n+    this.nodes = MetaUtils.splitPathToDetachedPath(fullPath);\n+  }\n+\n   /**\n    * @param partialNodes nodes of a time series path\n    */\n   public PartialPath(String[] partialNodes) {\n-    nodes = partialNodes;\n+    this.nodes = partialNodes;\n+    this.fullPath = String.join(TsFileConstant.PATH_SEPARATOR, nodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTc5NTIzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDo1MFrOHdAnNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMDo1MDo1MFrOHdAnNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MDc5MQ==", "bodyText": "Same as above.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500180791", "createdAt": "2020-10-06T10:50:50Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/PartialPath.java", "diffHunk": "@@ -87,6 +93,7 @@ void concatPath(String[] otherNodes) {\n     int len = nodes.length;\n     this.nodes = Arrays.copyOf(nodes, nodes.length + otherNodes.length);\n     System.arraycopy(otherNodes, 0, nodes, len, otherNodes.length);\n+    fullPath = String.join(TsFileConstant.PATH_SEPARATOR, nodes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMTgyODIwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMTowMDoxMlrOHdA7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMTowMDoxMlrOHdA7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4NTk3Mw==", "bodyText": "It seems that you have get all the timeseries for each path here, there is no need for you to call it again somewhere else, you can pass it from here.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r500185973", "createdAt": "2020-10-06T11:00:12Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -713,7 +713,9 @@ public void delete(DeletePlan deletePlan) throws QueryProcessException {\n     try {\n       Set<PartialPath> existingPaths = new HashSet<>();\n       for (PartialPath p : deletePlan.getPaths()) {\n-        existingPaths.addAll(getPathsName(p));\n+        if (!getPathsName(p).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b39d815078c79b90c94453275f814f15c2f60a5a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE5NjI3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/AbstractMemTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzoyMDo1N1rOHhvXCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNDoyNlrOHie2Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTAwMg==", "bodyText": "hi, why clear the deviceMap?   if originalPath is root.ln.sg and devicePath is root.ln.sg.d1, we only need to delete the points in time range [89, 100], but the memChunk maybe have points in time range [0, 100].  Same as the second condition which check  the last path is *.", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r505141002", "createdAt": "2020-10-15T03:20:57Z", "author": {"login": "mychaow"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/AbstractMemTable.java", "diffHunk": "@@ -230,20 +233,27 @@ public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType da\n   }\n \n   @Override\n-  public void delete(String deviceId, String measurementId, long startTimestamp, long endTimestamp) {\n-    Map<String, IWritableMemChunk> deviceMap = memTableMap.get(deviceId);\n-    if (deviceMap != null) {\n-      IWritableMemChunk chunk = deviceMap.get(measurementId);\n-      if (chunk == null) {\n-        return;\n-      }\n-      // If startTimestamp == Long.MIN_VALUE && endTimestamp == Long.MAX_VALUE,\n-      // it means that the whole timeseries is deleted\n-      if (startTimestamp == Long.MIN_VALUE && endTimestamp == Long.MAX_VALUE) {\n-        deviceMap.remove(measurementId);\n+  public void delete(PartialPath originalPath, PartialPath devicePath, long startTimestamp, long endTimestamp) {\n+    Map<String, IWritableMemChunk> deviceMap = memTableMap.get(devicePath.getFullPath());\n+    if (deviceMap == null) {\n+      return;\n+    }\n+    if (originalPath.getNodes().length <= devicePath.getNodes().length ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54760ee4a7cce5eea8bce8b75b92d56998a2189e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxOTA3NQ==", "bodyText": "Oh, I forgot the delete range check. Fixed, thanks", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r505919075", "createdAt": "2020-10-15T23:24:26Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/AbstractMemTable.java", "diffHunk": "@@ -230,20 +233,27 @@ public ReadOnlyMemChunk query(String deviceId, String measurement, TSDataType da\n   }\n \n   @Override\n-  public void delete(String deviceId, String measurementId, long startTimestamp, long endTimestamp) {\n-    Map<String, IWritableMemChunk> deviceMap = memTableMap.get(deviceId);\n-    if (deviceMap != null) {\n-      IWritableMemChunk chunk = deviceMap.get(measurementId);\n-      if (chunk == null) {\n-        return;\n-      }\n-      // If startTimestamp == Long.MIN_VALUE && endTimestamp == Long.MAX_VALUE,\n-      // it means that the whole timeseries is deleted\n-      if (startTimestamp == Long.MIN_VALUE && endTimestamp == Long.MAX_VALUE) {\n-        deviceMap.remove(measurementId);\n+  public void delete(PartialPath originalPath, PartialPath devicePath, long startTimestamp, long endTimestamp) {\n+    Map<String, IWritableMemChunk> deviceMap = memTableMap.get(devicePath.getFullPath());\n+    if (deviceMap == null) {\n+      return;\n+    }\n+    if (originalPath.getNodes().length <= devicePath.getNodes().length ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTAwMg=="}, "originalCommit": {"oid": "54760ee4a7cce5eea8bce8b75b92d56998a2189e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDE5OTU2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMzoyMjo0OVrOHhvY4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMzoyNDoyMFrOHie2Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTQ3Mw==", "bodyText": "help me change the MManager.getInstance() to IoTDB.metaManager", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r505141473", "createdAt": "2020-10-15T03:22:49Z", "author": {"login": "mychaow"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1467,26 +1473,30 @@ private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, De\n       // delete data in memory of unsealed file\n       if (!tsFileResource.isClosed()) {\n         TsFileProcessor tsfileProcessor = tsFileResource.getUnsealedFileProcessor();\n-        tsfileProcessor.deleteDataInMemory(deletion);\n+        tsfileProcessor.deleteDataInMemory(deletion, devicePaths);\n       }\n \n       // add a record in case of rollback\n       updatedModFiles.add(tsFileResource.getModFile());\n     }\n   }\n \n-  private void tryToDeleteLastCache(PartialPath deviceId, String measurementId, long startTime,\n-      long endTime) throws WriteProcessException {\n+  private void tryToDeleteLastCache(PartialPath deviceId, PartialPath originalPath,\n+      long startTime, long endTime) throws WriteProcessException {\n+    if (!IoTDBDescriptor.getInstance().getConfig().isLastCacheEnabled()) {\n+      return;\n+    }\n     try {\n       MManager manager = MManager.getInstance();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54760ee4a7cce5eea8bce8b75b92d56998a2189e"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkxOTA1MA==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1732#discussion_r505919050", "createdAt": "2020-10-15T23:24:20Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1467,26 +1473,30 @@ private void deleteDataInFiles(Collection<TsFileResource> tsFileResourceList, De\n       // delete data in memory of unsealed file\n       if (!tsFileResource.isClosed()) {\n         TsFileProcessor tsfileProcessor = tsFileResource.getUnsealedFileProcessor();\n-        tsfileProcessor.deleteDataInMemory(deletion);\n+        tsfileProcessor.deleteDataInMemory(deletion, devicePaths);\n       }\n \n       // add a record in case of rollback\n       updatedModFiles.add(tsFileResource.getModFile());\n     }\n   }\n \n-  private void tryToDeleteLastCache(PartialPath deviceId, String measurementId, long startTime,\n-      long endTime) throws WriteProcessException {\n+  private void tryToDeleteLastCache(PartialPath deviceId, PartialPath originalPath,\n+      long startTime, long endTime) throws WriteProcessException {\n+    if (!IoTDBDescriptor.getInstance().getConfig().isLastCacheEnabled()) {\n+      return;\n+    }\n     try {\n       MManager manager = MManager.getInstance();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE0MTQ3Mw=="}, "originalCommit": {"oid": "54760ee4a7cce5eea8bce8b75b92d56998a2189e"}, "originalPosition": 144}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 722, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}