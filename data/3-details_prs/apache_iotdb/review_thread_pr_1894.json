{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExOTYwMzU1", "number": 1894, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1NToyMVrOEzORNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0MzowMVrOEzso2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTQ2NjEyOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/LogDispatcher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1NToyMVrOHqUQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwOTo1NToyMVrOHqUQsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDEzNDE5NA==", "bodyText": "maybe we can move the line outside of the while loop", "url": "https://github.com/apache/iotdb/pull/1894#discussion_r514134194", "createdAt": "2020-10-29T09:55:21Z", "author": {"login": "neuyilan"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/LogDispatcher.java", "diffHunk": "@@ -289,32 +294,44 @@ private AppendEntriesRequest prepareRequest(List<ByteBuffer> logList,\n \n       request.setEntries(logList);\n       // set index for raft\n-      request.setPrevLogIndex(currBatch.get(0).getLog().getCurrLogIndex() - 1);\n+      request.setPrevLogIndex(currBatch.get(firstIndex).getLog().getCurrLogIndex() - 1);\n       try {\n-        request.setPrevLogTerm(currBatch.get(0).getAppendEntryRequest().prevLogTerm);\n+        request.setPrevLogTerm(currBatch.get(firstIndex).getAppendEntryRequest().prevLogTerm);\n       } catch (Exception e) {\n         logger.error(\"getTerm failed for newly append entries\", e);\n       }\n       return request;\n     }\n \n     private void sendLogs(List<SendLogRequest> currBatch) throws TException {\n-      List<ByteBuffer> logList = new ArrayList<>();\n-      for (SendLogRequest request : currBatch) {\n-        Timer.Statistic.LOG_DISPATCHER_LOG_IN_QUEUE\n-            .calOperationCostTimeFromStart(request.getLog().getCreateTime());\n-        logList.add(request.getAppendEntryRequest().entry);\n-      }\n+      int logIndex = 0;\n+      logger.info(\"send logs from index {} to {}\", currBatch.get(0).getLog().getCurrLogIndex(),\n+        currBatch.get(currBatch.size() - 1).getLog().getCurrLogIndex());\n+      while (logIndex < currBatch.size()) {\n+        long logSize = IoTDBDescriptor.getInstance().getConfig().getThriftMaxFrameSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70550c129a07da292230643e43324b765a3760c3"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjQ0MTg1OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/RaftMember.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0MzowMlrOHrFvHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0MzowMlrOHrFvHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0NDc5OQ==", "bodyText": "be blocked", "url": "https://github.com/apache/iotdb/pull/1894#discussion_r514944799", "createdAt": "2020-10-30T08:43:02Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/RaftMember.java", "diffHunk": "@@ -1524,7 +1529,7 @@ private AppendLogResult sendLogToFollowers(Log log, AtomicInteger voteCounter) {\n     try {\n       if (allNodes.size() > 2) {\n         // if there are more than one followers, send the requests in parallel so that one slow\n-        // follower will not\n+        // follower will not blocked", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70550c129a07da292230643e43324b765a3760c3"}, "originalPosition": 160}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 674, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}