{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MDUyNDM4", "number": 1975, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozMDoxNVrOE2VGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozMDoxNVrOE2VGFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1NDA0MTgxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/auth/authorizer/BasicAuthorizer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozMDoxNVrOHvGRsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozMDoxNVrOHvGRsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0Nzk1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return user != null && password!=null && user.getPassword().equals(AuthUtils.encryptPassword(password));\n          \n          \n            \n                return user != null && password != null && user.getPassword().equals(AuthUtils.encryptPassword(password));", "url": "https://github.com/apache/iotdb/pull/1975#discussion_r519147953", "createdAt": "2020-11-07T07:30:15Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/auth/authorizer/BasicAuthorizer.java", "diffHunk": "@@ -102,7 +102,7 @@ public static IAuthorizer getInstance() throws AuthException {\n   @Override\n   public boolean login(String username, String password) throws AuthException {\n     User user = userManager.getUser(username);\n-    return user != null && user.getPassword().equals(AuthUtils.encryptPassword(password));\n+    return user != null && password!=null && user.getPassword().equals(AuthUtils.encryptPassword(password));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a65719c121cffff8cc66abf787991303773486c7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 607, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}