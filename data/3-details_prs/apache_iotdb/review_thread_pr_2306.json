{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTU1NTIz", "number": 2306, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzowMTowM1rOFIXsOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzowODowOFrOFIXxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzIxMDgwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzowMTowM1rOIKPpjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzoxMjo1MVrOIKP0-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxMzA2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  throw new IOException(\"Invalid version number: \" + fields[2]);\n          \n          \n            \n                  throw new IOException(\"Invalid version number: \" + fields[length - 3]);", "url": "https://github.com/apache/iotdb/pull/2306#discussion_r547613069", "createdAt": "2020-12-23T03:01:03Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "diffHunk": "@@ -127,33 +128,36 @@ private static String encodeDeletion(Deletion del) {\n         + del.getStartTime() + SEPARATOR + del.getEndTime();\n   }\n \n+  /**\n+   * Decode a deletion record. E.g. \"DELETION,root.ln.wf01.wt01.temperature,111,100,300\"\n+   * the index of field endTimestamp is length - 1, startTimestamp is length - 2,\n+   * versionNum is length - 3. Fields in index range [1, length -3) could all belong\n+   * to timeseries path in cases that the paths contain comma.\n+   */\n   private static Deletion decodeDeletion(String[] fields) throws IOException {\n-    if (fields.length != 5 && fields.length != 4) {\n-      throw new IOException(\"Incorrect deletion fields number: \" + fields.length);\n-    }\n-\n-    String path = fields[1];\n+    int length = fields.length;\n+    String path = \"\";\n     long versionNum;\n-    long startTimestamp = Long.MIN_VALUE;\n+    long startTimestamp;\n     long endTimestamp;\n+\n+    try {\n+      endTimestamp = Long.parseLong(fields[length - 1]);\n+      startTimestamp = Long.parseLong(fields[length - 2]);\n+    } catch (NumberFormatException e) {\n+      throw new IOException(\"Invalid timestamp: \" + e.getMessage());\n+    }\n     try {\n-      versionNum = Long.parseLong(fields[2]);\n+      versionNum = Long.parseLong(fields[length - 3]);\n     } catch (NumberFormatException e) {\n       throw new IOException(\"Invalid version number: \" + fields[2]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c549754404462385a4c5975a5b63c10be46a7d1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxNTk5Mw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/2306#discussion_r547615993", "createdAt": "2020-12-23T03:12:51Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "diffHunk": "@@ -127,33 +128,36 @@ private static String encodeDeletion(Deletion del) {\n         + del.getStartTime() + SEPARATOR + del.getEndTime();\n   }\n \n+  /**\n+   * Decode a deletion record. E.g. \"DELETION,root.ln.wf01.wt01.temperature,111,100,300\"\n+   * the index of field endTimestamp is length - 1, startTimestamp is length - 2,\n+   * versionNum is length - 3. Fields in index range [1, length -3) could all belong\n+   * to timeseries path in cases that the paths contain comma.\n+   */\n   private static Deletion decodeDeletion(String[] fields) throws IOException {\n-    if (fields.length != 5 && fields.length != 4) {\n-      throw new IOException(\"Incorrect deletion fields number: \" + fields.length);\n-    }\n-\n-    String path = fields[1];\n+    int length = fields.length;\n+    String path = \"\";\n     long versionNum;\n-    long startTimestamp = Long.MIN_VALUE;\n+    long startTimestamp;\n     long endTimestamp;\n+\n+    try {\n+      endTimestamp = Long.parseLong(fields[length - 1]);\n+      startTimestamp = Long.parseLong(fields[length - 2]);\n+    } catch (NumberFormatException e) {\n+      throw new IOException(\"Invalid timestamp: \" + e.getMessage());\n+    }\n     try {\n-      versionNum = Long.parseLong(fields[2]);\n+      versionNum = Long.parseLong(fields[length - 3]);\n     } catch (NumberFormatException e) {\n       throw new IOException(\"Invalid version number: \" + fields[2]);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxMzA2OQ=="}, "originalCommit": {"oid": "3c549754404462385a4c5975a5b63c10be46a7d1"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzIyMzY5OnYy", "diffSide": "LEFT", "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzowODowOFrOIKPwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMzoxMzowM1rOIKP1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxNDg1OA==", "bodyText": "Consider add this check back?\nif (fields.length < 4) {\n  throw new IOException(\"Incorrect deletion fields number: \" + fields.length);\n}", "url": "https://github.com/apache/iotdb/pull/2306#discussion_r547614858", "createdAt": "2020-12-23T03:08:08Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "diffHunk": "@@ -127,33 +128,36 @@ private static String encodeDeletion(Deletion del) {\n         + del.getStartTime() + SEPARATOR + del.getEndTime();\n   }\n \n+  /**\n+   * Decode a deletion record. E.g. \"DELETION,root.ln.wf01.wt01.temperature,111,100,300\"\n+   * the index of field endTimestamp is length - 1, startTimestamp is length - 2,\n+   * versionNum is length - 3. Fields in index range [1, length -3) could all belong\n+   * to timeseries path in cases that the paths contain comma.\n+   */\n   private static Deletion decodeDeletion(String[] fields) throws IOException {\n-    if (fields.length != 5 && fields.length != 4) {\n-      throw new IOException(\"Incorrect deletion fields number: \" + fields.length);\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c549754404462385a4c5975a5b63c10be46a7d1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxNjA1Mg==", "bodyText": "Yes added", "url": "https://github.com/apache/iotdb/pull/2306#discussion_r547616052", "createdAt": "2020-12-23T03:13:03Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/modification/io/LocalTextModificationAccessor.java", "diffHunk": "@@ -127,33 +128,36 @@ private static String encodeDeletion(Deletion del) {\n         + del.getStartTime() + SEPARATOR + del.getEndTime();\n   }\n \n+  /**\n+   * Decode a deletion record. E.g. \"DELETION,root.ln.wf01.wt01.temperature,111,100,300\"\n+   * the index of field endTimestamp is length - 1, startTimestamp is length - 2,\n+   * versionNum is length - 3. Fields in index range [1, length -3) could all belong\n+   * to timeseries path in cases that the paths contain comma.\n+   */\n   private static Deletion decodeDeletion(String[] fields) throws IOException {\n-    if (fields.length != 5 && fields.length != 4) {\n-      throw new IOException(\"Incorrect deletion fields number: \" + fields.length);\n-    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYxNDg1OA=="}, "originalCommit": {"oid": "3c549754404462385a4c5975a5b63c10be46a7d1"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 457, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}