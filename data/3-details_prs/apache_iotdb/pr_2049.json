{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTg3MDgy", "number": 2049, "title": "[IOTDB-1007]Fix session pool concurrency and leakage issue when pool.close is called", "bodyText": "Current session Pool has some concurrency problems:\n\n\n\npublic static void main() {\nqueryByRowRecord(); // this method open a new thread to use session.\nThread.sleep(1000);\npool.close(); // this method close pool.\n}\nThen the pool will clear all existing sessions, which may lead to some leakage and deadlock.\n\n\nnotifyAll() is not called, which will lead to wait(1000) waits too long time.\n\n\nMore log is printed.", "createdAt": "2020-11-14T10:05:56Z", "url": "https://github.com/apache/iotdb/pull/2049", "merged": true, "mergeCommit": {"oid": "271f6929648b44639f57b2ff3996418452665c1c"}, "closed": true, "closedAt": "2020-11-16T04:02:58Z", "author": {"login": "jixuan1989"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcYeg9AH2gAyNTIwOTg3MDgyOjAxMWM0MzQ2Y2JmYzg3NzAzMzBmNTMyYjNmOGUzOTY3MzhkY2E3NGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdc8EVOgH2gAyNTIwOTg3MDgyOjczZWFmMTdjZjdhYzAzODMzNmZhODUxMjAwNzRhNjA0ZDY1NzE4ZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "011c4346cbfc8770330f532b3f8e396738dca74a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/011c4346cbfc8770330f532b3f8e396738dca74a", "committedDate": "2020-11-14T09:38:10Z", "message": "fix session pool bug when someone call pool.close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/8ce9467638f345c682d43f7aea2011c88324616c", "committedDate": "2020-11-14T10:03:47Z", "message": "add tset case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODc0NjQw", "url": "https://github.com/apache/iotdb/pull/2049#pullrequestreview-530874640", "createdAt": "2020-11-16T02:08:42Z", "commit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowODo0MlrOHzl2HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjoxMDoyMVrOHzl3iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTQ4NA==", "bodyText": "I think it should be volatile, cause it is used outside a synchronized block somewhere below", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859484", "createdAt": "2020-11-16T02:08:42Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -76,6 +76,8 @@\n   private boolean enableCompression = false;\n   private ZoneId zoneId;\n \n+  private boolean closed;//whether the queue is closed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTY2Mg==", "bodyText": "I think notify() is better, cause only one thread can get session.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859662", "createdAt": "2020-11-16T02:09:35Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -110,20 +112,64 @@ public SessionPool(String ip, int port, String user, String password, int maxSiz\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   private Session getSession() throws IoTDBConnectionException {\n     Session session = queue.poll();\n+    if (closed) {\n+      throw new IoTDBConnectionException(\"Session pool is closed\");\n+    }\n     if (session != null) {\n       return session;\n     } else {\n+      long start = System.currentTimeMillis();\n+      boolean canCreate = false;\n       synchronized (this) {\n-        long start = System.currentTimeMillis();\n+        if (size < maxSize) {\n+          //we can create more session\n+          size++;\n+          canCreate = true;\n+          //but we do it after skip synchronized block because connection a session is time consuming.\n+        }\n+      }\n+      if (canCreate) {\n+        //create a new one.\n+        if (logger.isDebugEnabled()) {\n+          logger.debug(\"Create a new Session {}, {}, {}, {}\", ip, port, user, password);\n+        }\n+        session = new Session(ip, port, user, password, fetchSize, zoneId);\n+        try {\n+          session.open(enableCompression);\n+          //avoid someone has called close() the session pool\n+          synchronized (this) {\n+            if (closed) {\n+              //have to release the connection...\n+              session.close();\n+              throw new IoTDBConnectionException(\"Session pool is closed\");\n+            } else {\n+              return session;\n+            }\n+          }\n+        } catch (IoTDBConnectionException e) {\n+          //if exception, we will throw the exception.\n+          //Meanwhile, we have to set size--\n+          synchronized (this) {\n+            size--;\n+            this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTc3Mw==", "bodyText": "notify() is better.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859773", "createdAt": "2020-11-16T02:09:56Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -178,6 +207,10 @@ private void putBack(Session session) {\n     queue.push(session);\n     synchronized (this) {\n       this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTg0OQ==", "bodyText": "notify() is better.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859849", "createdAt": "2020-11-16T02:10:21Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -223,10 +260,12 @@ public void closeResultSet(SessionDataSetWrapper wrapper) {\n   }\n \n   private synchronized void removeSession() {\n+    logger.warn(\"Remove a broken Session {}, {}, {}\", ip, port, user);\n+    size--;\n+    this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 145}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/26f6dafe0d1082fb79d9b4837126e9dd0f9521fd", "committedDate": "2020-11-16T02:35:54Z", "message": "change notifyAll to notify to save CPU"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwODkwNzEy", "url": "https://github.com/apache/iotdb/pull/2049#pullrequestreview-530890712", "createdAt": "2020-11-16T02:54:44Z", "commit": {"oid": "26f6dafe0d1082fb79d9b4837126e9dd0f9521fd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73eaf17cf7ac038336fa85120074a604d65718f2", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/73eaf17cf7ac038336fa85120074a604d65718f2", "committedDate": "2020-11-16T03:06:09Z", "message": "fix some code smell"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4132, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}