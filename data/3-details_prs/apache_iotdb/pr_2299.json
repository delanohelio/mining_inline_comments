{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMjM3OTgx", "number": 2299, "title": "Fix dependency bug and add documents", "bodyText": "Fix bug: change zeppelin-interpreter/pom.xml, package the interpreter with dependencies.\nAdd documents: EH and CN\nRemove the duplicate README in zeppelin-interpreter/\n\nTo be discussed:\nAs the Github image website githubusercontent.com is unstable, Shall we create an image directory for all used images and refer to them with relative links? just like what  does.\nFor example, the images in UserGuide/Ecosystem Integration/Grafana.md may not display normally now.", "createdAt": "2020-12-21T05:43:22Z", "url": "https://github.com/apache/iotdb/pull/2299", "merged": true, "mergeCommit": {"oid": "2bdae11250d39ee749394070d9094ec211b731fc"}, "closed": true, "closedAt": "2020-12-21T11:10:44Z", "author": {"login": "kr11"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoPIylgH2gAyNTQzMjM3OTgxOmE3NjY5N2VhMmY5NGYwN2U2YWM5NDFjM2Q4YjFmNjE0ZjQ4NDZlOWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoT-NUgFqTU1NjMwMjg0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a76697ea2f94f07e6ac941c3d8b1f614f4846e9b", "committedDate": "2020-12-21T05:32:23Z", "message": "Fix dependency bug and add documents"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTQ2NTg2", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556146586", "createdAt": "2020-12-21T06:02:51Z", "commit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowMjo1MVrOIJNK_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowMjo1MVrOIJNK_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyMzkwMA==", "bodyText": "Does the IoTDB v0.11.0 support the IoTDB Zeppelin-Interpreter module? I just remember the PR #2096  was merged after v0.11 released. \ud83d\ude02", "url": "https://github.com/apache/iotdb/pull/2299#discussion_r546523900", "createdAt": "2020-12-21T06:02:51Z", "author": {"login": "HTHou"}, "path": "docs/UserGuide/Ecosystem Integration/Zeppelin-IoTDB.md", "diffHunk": "@@ -0,0 +1,184 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# 1. Outline\n+\n+- What's Zeppelin\n+\n+- IoTDB Zeppelin-Interpreter \n+  - System Requirements\n+  - Build Interpreter\n+  - Install Interpreter\n+  - Running Zeppelin and IoTDB\n+- Use Zeppelin-IoTDB\n+- Configuration\n+\n+\n+\n+# 2. What's Zeppelin\n+\n+Zeppelin is a web-based notebook that enables interactive data analytics. You can connect to data sources and perform interactive operations with SQL, Scala, etc. The operations can be saved as documents, just like Jupyter. Zeppelin has already supported many data sources, including Spark, ElasticSearch, Cassandra, and InfluxDB. Now, we have enabled Zeppelin to operate IoTDB via SQL. \n+\n+![image-iotdb-note-snapshot](../../img/UserGuide/EcosystemIntegration/iotdb-note-snapshot.png)\n+\n+\n+\n+# 3. Zeppelin-IoTDB Interpreter\n+\n+## System Requirements\n+\n+| IoTDB Version | Java Version  | Zeppelin Version |\n+| :-----------: | :-----------: | :--------------: |\n+|  >=`0.11.0`   | >=`1.8.0_271` |    `>=0.9.0`     |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTQ2ODg3", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556146887", "createdAt": "2020-12-21T06:03:52Z", "commit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowMzo1M1rOIJNMDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjowMzo1M1rOIJNMDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNDE3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            > You can install IoTDB according to [IoTDB Quick Start](http://iotdb.apache.org/UserGuide/V0.10.x/Get Started/QuickStart.html). Suppose IoTDB is placed at `$IoTDB_HOME`.\n          \n          \n            \n            >\n          \n          \n            \n            > You can download [Zeppelin](https://zeppelin.apache.org/download.html#) and unpack the binary package directly or [build Zeppelin from source](https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html). Suppose Zeppelin is placed at `$Zeppelin_HOME`.\n          \n          \n            \n            You can install IoTDB according to [IoTDB Quick Start](https://iotdb.apache.org/UserGuide/Master/Get%20Started/QuickStart.html). Suppose IoTDB is placed at `$IoTDB_HOME`.\n          \n          \n            \n            \n          \n          \n            \n            You can download [Zeppelin](https://zeppelin.apache.org/download.html#) and unpack the binary package directly or [build Zeppelin from source](https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html). Suppose Zeppelin is placed at `$Zeppelin_HOME`.", "url": "https://github.com/apache/iotdb/pull/2299#discussion_r546524175", "createdAt": "2020-12-21T06:03:53Z", "author": {"login": "HTHou"}, "path": "docs/UserGuide/Ecosystem Integration/Zeppelin-IoTDB.md", "diffHunk": "@@ -0,0 +1,184 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# 1. Outline\n+\n+- What's Zeppelin\n+\n+- IoTDB Zeppelin-Interpreter \n+  - System Requirements\n+  - Build Interpreter\n+  - Install Interpreter\n+  - Running Zeppelin and IoTDB\n+- Use Zeppelin-IoTDB\n+- Configuration\n+\n+\n+\n+# 2. What's Zeppelin\n+\n+Zeppelin is a web-based notebook that enables interactive data analytics. You can connect to data sources and perform interactive operations with SQL, Scala, etc. The operations can be saved as documents, just like Jupyter. Zeppelin has already supported many data sources, including Spark, ElasticSearch, Cassandra, and InfluxDB. Now, we have enabled Zeppelin to operate IoTDB via SQL. \n+\n+![image-iotdb-note-snapshot](../../img/UserGuide/EcosystemIntegration/iotdb-note-snapshot.png)\n+\n+\n+\n+# 3. Zeppelin-IoTDB Interpreter\n+\n+## System Requirements\n+\n+| IoTDB Version | Java Version  | Zeppelin Version |\n+| :-----------: | :-----------: | :--------------: |\n+|  >=`0.11.0`   | >=`1.8.0_271` |    `>=0.9.0`     |\n+\n+> You can install IoTDB according to [IoTDB Quick Start](http://iotdb.apache.org/UserGuide/V0.10.x/Get Started/QuickStart.html). Suppose IoTDB is placed at `$IoTDB_HOME`.\n+>\n+> You can download [Zeppelin](https://zeppelin.apache.org/download.html#) and unpack the binary package directly or [build Zeppelin from source](https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html). Suppose Zeppelin is placed at `$Zeppelin_HOME`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTUwMTc3", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556150177", "createdAt": "2020-12-21T06:14:43Z", "commit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoxNDo0NFrOIJNW-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoxNDo0NFrOIJNW-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyNjk3MQ==", "bodyText": "Actually we don't have to upload the image to our repository, you may upload the image to thulab/iotdb#543 for the url and use that url in the docs.", "url": "https://github.com/apache/iotdb/pull/2299#discussion_r546526971", "createdAt": "2020-12-21T06:14:44Z", "author": {"login": "HTHou"}, "path": "docs/UserGuide/Ecosystem Integration/Zeppelin-IoTDB.md", "diffHunk": "@@ -0,0 +1,184 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# 1. Outline\n+\n+- What's Zeppelin\n+\n+- IoTDB Zeppelin-Interpreter \n+  - System Requirements\n+  - Build Interpreter\n+  - Install Interpreter\n+  - Running Zeppelin and IoTDB\n+- Use Zeppelin-IoTDB\n+- Configuration\n+\n+\n+\n+# 2. What's Zeppelin\n+\n+Zeppelin is a web-based notebook that enables interactive data analytics. You can connect to data sources and perform interactive operations with SQL, Scala, etc. The operations can be saved as documents, just like Jupyter. Zeppelin has already supported many data sources, including Spark, ElasticSearch, Cassandra, and InfluxDB. Now, we have enabled Zeppelin to operate IoTDB via SQL. \n+\n+![image-iotdb-note-snapshot](../../img/UserGuide/EcosystemIntegration/iotdb-note-snapshot.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MTUyMzky", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556152392", "createdAt": "2020-12-21T06:21:34Z", "commit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoyMTozNFrOIJNeIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjoyMTozNFrOIJNeIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUyODgwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             ./bin/zeppelin.cmd\n          \n          \n            \n             .\\bin\\zeppelin.cmd", "url": "https://github.com/apache/iotdb/pull/2299#discussion_r546528802", "createdAt": "2020-12-21T06:21:34Z", "author": {"login": "HTHou"}, "path": "docs/UserGuide/Ecosystem Integration/Zeppelin-IoTDB.md", "diffHunk": "@@ -0,0 +1,184 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# 1. Outline\n+\n+- What's Zeppelin\n+\n+- IoTDB Zeppelin-Interpreter \n+  - System Requirements\n+  - Build Interpreter\n+  - Install Interpreter\n+  - Running Zeppelin and IoTDB\n+- Use Zeppelin-IoTDB\n+- Configuration\n+\n+\n+\n+# 2. What's Zeppelin\n+\n+Zeppelin is a web-based notebook that enables interactive data analytics. You can connect to data sources and perform interactive operations with SQL, Scala, etc. The operations can be saved as documents, just like Jupyter. Zeppelin has already supported many data sources, including Spark, ElasticSearch, Cassandra, and InfluxDB. Now, we have enabled Zeppelin to operate IoTDB via SQL. \n+\n+![image-iotdb-note-snapshot](../../img/UserGuide/EcosystemIntegration/iotdb-note-snapshot.png)\n+\n+\n+\n+# 3. Zeppelin-IoTDB Interpreter\n+\n+## System Requirements\n+\n+| IoTDB Version | Java Version  | Zeppelin Version |\n+| :-----------: | :-----------: | :--------------: |\n+|  >=`0.11.0`   | >=`1.8.0_271` |    `>=0.9.0`     |\n+\n+> You can install IoTDB according to [IoTDB Quick Start](http://iotdb.apache.org/UserGuide/V0.10.x/Get Started/QuickStart.html). Suppose IoTDB is placed at `$IoTDB_HOME`.\n+>\n+> You can download [Zeppelin](https://zeppelin.apache.org/download.html#) and unpack the binary package directly or [build Zeppelin from source](https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html). Suppose Zeppelin is placed at `$Zeppelin_HOME`.\n+\n+\n+\n+## 3.2 Build Interpreter\n+\n+```\n+ cd $IoTDB_HOME\n+ mvn clean package -pl zeppelin-interpreter -am -DskipTests\n+```\n+\n+The interpreter will be in the folder:\n+\n+```\n+ $IoTDB_HOME/zeppelin-interpreter/target/zeppelin-{version}-SNAPSHOT-jar-with-dependencies.jar\n+```\n+\n+\n+\n+## 3.3 Install Interpreter\n+\n+Once you have built your interpreter, create a new folder under the Zeppelin interpreter directory and put the built interpreter into it. \n+\n+```\n+ cd $IoTDB_HOME\n+ mkdir -p $Zeppelin_HOME/interpreter/iotdb\n+ cp $IoTDB_HOME/zeppelin-interpreter/target/zeppelin-{version}-SNAPSHOT-jar-with-dependencies.jar $Zeppelin_HOME/interpreter/iotdb\n+```\n+\n+\n+\n+## 3.4 Running Zeppelin and IoTDB\n+\n+Go to `$Zeppelin_HOME` and start Zeppelin by running: \n+\n+```\n+ ./bin/zeppelin-daemon.sh start\n+```\n+\n+or in Windows:\n+\n+```\n+ ./bin/zeppelin.cmd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a76697ea2f94f07e6ac941c3d8b1f614f4846e9b"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "749493cba19e5773a00938822081e98846d672b7", "author": {"user": {"login": "kr11", "name": "Rong-Kang"}}, "url": "https://github.com/apache/iotdb/commit/749493cba19e5773a00938822081e98846d672b7", "committedDate": "2020-12-21T07:44:32Z", "message": "Apply suggestions from code review\r\n\r\nFix docs.\n\nCo-authored-by: Haonan <hhaonan@outlook.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2db1e2fa7593a29d29658518d73dd9ec64cce8da", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2db1e2fa7593a29d29658518d73dd9ec64cce8da", "committedDate": "2020-12-21T07:48:14Z", "message": "Fix docs according to reviewers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9be3b9a5b6be3b6df42b00d4759e5da9b5881ff6", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/9be3b9a5b6be3b6df42b00d4759e5da9b5881ff6", "committedDate": "2020-12-21T08:02:07Z", "message": "Change relative image link to githubusercontent.com"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjEyNDI0", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556212424", "createdAt": "2020-12-21T08:41:19Z", "commit": {"oid": "9be3b9a5b6be3b6df42b00d4759e5da9b5881ff6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODo0MToxOVrOIJQYDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwODo0MToxOVrOIJQYDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjU3NjM5OQ==", "bodyText": "One more very small issue.... \ud83d\ude02\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can also design more fantasy documents referring to [[1\\]](https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/usage/display_system/basic.html) and others.\n          \n          \n            \n            You can also design more fantasy documents referring to [[1]](https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/usage/display_system/basic.html) and others.", "url": "https://github.com/apache/iotdb/pull/2299#discussion_r546576399", "createdAt": "2020-12-21T08:41:19Z", "author": {"login": "HTHou"}, "path": "docs/UserGuide/Ecosystem Integration/Zeppelin-IoTDB.md", "diffHunk": "@@ -0,0 +1,184 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# 1. Outline\n+\n+- What's Zeppelin\n+\n+- IoTDB Zeppelin-Interpreter \n+  - System Requirements\n+  - Build Interpreter\n+  - Install Interpreter\n+  - Running Zeppelin and IoTDB\n+- Use Zeppelin-IoTDB\n+- Configuration\n+\n+\n+\n+# 2. What's Zeppelin\n+\n+Zeppelin is a web-based notebook that enables interactive data analytics. You can connect to data sources and perform interactive operations with SQL, Scala, etc. The operations can be saved as documents, just like Jupyter. Zeppelin has already supported many data sources, including Spark, ElasticSearch, Cassandra, and InfluxDB. Now, we have enabled Zeppelin to operate IoTDB via SQL. \n+\n+![iotdb-note-snapshot](https://user-images.githubusercontent.com/5548915/102752947-520a3e80-43a5-11eb-8fb1-8fac471c8c7e.png)\n+\n+\n+\n+# 3. Zeppelin-IoTDB Interpreter\n+\n+## System Requirements\n+\n+| IoTDB Version | Java Version  | Zeppelin Version |\n+| :-----------: | :-----------: | :--------------: |\n+|  >=`0.12.0-SNAPSHOT`   | >=`1.8.0_271` |    `>=0.9.0`     |\n+\n+You can install IoTDB according to [IoTDB Quick Start](https://iotdb.apache.org/UserGuide/Master/Get%20Started/QuickStart.html). Suppose IoTDB is placed at `$IoTDB_HOME`.\n+\n+You can download [Zeppelin](https://zeppelin.apache.org/download.html#) and unpack the binary package directly or [build Zeppelin from source](https://zeppelin.apache.org/docs/latest/setup/basics/how_to_build.html). Suppose Zeppelin is placed at `$Zeppelin_HOME`.\n+\n+\n+\n+## 3.2 Build Interpreter\n+\n+```\n+ cd $IoTDB_HOME\n+ mvn clean package -pl zeppelin-interpreter -am -DskipTests\n+```\n+\n+The interpreter will be in the folder:\n+\n+```\n+ $IoTDB_HOME/zeppelin-interpreter/target/zeppelin-{version}-SNAPSHOT-jar-with-dependencies.jar\n+```\n+\n+\n+\n+## 3.3 Install Interpreter\n+\n+Once you have built your interpreter, create a new folder under the Zeppelin interpreter directory and put the built interpreter into it. \n+\n+```\n+ cd $IoTDB_HOME\n+ mkdir -p $Zeppelin_HOME/interpreter/iotdb\n+ cp $IoTDB_HOME/zeppelin-interpreter/target/zeppelin-{version}-SNAPSHOT-jar-with-dependencies.jar $Zeppelin_HOME/interpreter/iotdb\n+```\n+\n+\n+\n+## 3.4 Running Zeppelin and IoTDB\n+\n+Go to `$Zeppelin_HOME` and start Zeppelin by running: \n+\n+```\n+ ./bin/zeppelin-daemon.sh start\n+```\n+\n+or in Windows:\n+\n+```\n+ .\\bin\\zeppelin.cmd\n+```\n+\n+Go to `$IoTDB_HOME` and [start IoTDB server](https://github.com/apache/iotdb#start-iotdb):\n+\n+```\n+ # Unix/OS X\n+ > nohup sbin/start-server.sh >/dev/null 2>&1 &\n+ or\n+ > nohup sbin/start-server.sh -c <conf_path> -rpc_port <rpc_port> >/dev/null 2>&1 &\n+ \n+ # Windows\n+ > sbin\\start-server.bat -c <conf_path> -rpc_port <rpc_port>\n+```\n+\n+\n+\n+# 4. Use Zeppelin-IoTDB\n+\n+Wait for Zeppelin server to start, then visit http://127.0.0.1:8080/\n+\n+In the interpreter page: \n+\n+1. Click the `Create new node` button\n+2. Set the note name\n+3. Configure your interpreter\n+\n+Now you are ready to use your interpreter.\n+\n+![iotdb-create-note](https://user-images.githubusercontent.com/5548915/102752945-5171a800-43a5-11eb-8614-53b3276a3ce2.png)\n+\n+We provide some simple SQL to show the use of Zeppelin-IoTDB interpreter:\n+\n+```sql\n+ SET STORAGE GROUP TO root.ln.wf01.wt01;\n+ CREATE TIMESERIES root.ln.wf01.wt01.status WITH DATATYPE=BOOLEAN, ENCODING=PLAIN;\n+ CREATE TIMESERIES root.ln.wf01.wt01.temperature WITH DATATYPE=FLOAT, ENCODING=PLAIN;\n+ CREATE TIMESERIES root.ln.wf01.wt01.hardware WITH DATATYPE=INT32, ENCODING=PLAIN;\n+ \n+ INSERT INTO root.ln.wf01.wt01 (timestamp, temperature, status, hardware)\n+ VALUES (1, 1.1, false, 11);\n+ \n+ INSERT INTO root.ln.wf01.wt01 (timestamp, temperature, status, hardware)\n+ VALUES (2, 2.2, true, 22);\n+ \n+ INSERT INTO root.ln.wf01.wt01 (timestamp, temperature, status, hardware)\n+ VALUES (3, 3.3, false, 33);\n+ \n+ INSERT INTO root.ln.wf01.wt01 (timestamp, temperature, status, hardware)\n+ VALUES (4, 4.4, false, 44);\n+ \n+ INSERT INTO root.ln.wf01.wt01 (timestamp, temperature, status, hardware)\n+ VALUES (5, 5.5, false, 55);\n+ \n+ \n+ SELECT *\n+ FROM root.ln.wf01.wt01\n+ WHERE time >= 1\n+   AND time <= 6;\n+```\n+\n+The screenshot is as follows:\n+\n+![iotdb-note-snapshot2](https://user-images.githubusercontent.com/5548915/102752948-52a2d500-43a5-11eb-9156-0c55667eb4cd.png)\n+\n+You can also design more fantasy documents referring to [[1\\]](https://zeppelin.apache.org/docs/0.9.0-SNAPSHOT/usage/display_system/basic.html) and others.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9be3b9a5b6be3b6df42b00d4759e5da9b5881ff6"}, "originalPosition": 161}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MjEyNDkx", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556212491", "createdAt": "2020-12-21T08:41:26Z", "commit": {"oid": "9be3b9a5b6be3b6df42b00d4759e5da9b5881ff6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f97dd81165d84a3a1f838a72fa934477c419e68a", "author": {"user": {"login": "kr11", "name": "Rong-Kang"}}, "url": "https://github.com/apache/iotdb/commit/f97dd81165d84a3a1f838a72fa934477c419e68a", "committedDate": "2020-12-21T09:02:40Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Haonan <hhaonan@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2MzAyODQz", "url": "https://github.com/apache/iotdb/pull/2299#pullrequestreview-556302843", "createdAt": "2020-12-21T11:10:21Z", "commit": {"oid": "f97dd81165d84a3a1f838a72fa934477c419e68a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3951, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}