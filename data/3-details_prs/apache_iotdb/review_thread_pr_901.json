{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NTgxNjI2", "number": 901, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowMzo1MFrODnu1hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowODowMlrODnu4ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg4NDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowMzo1MFrOF15a5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowMzo1MFrOF15a5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1OTYyMw==", "bodyText": "The partition number is an Integer or Long?", "url": "https://github.com/apache/iotdb/pull/901#discussion_r392059623", "createdAt": "2020-03-13T07:03:50Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "diffHunk": "@@ -529,15 +529,23 @@ private String getSgByEngineFile(File file) {\n \n   /**\n    *\n-   * @return TsFiles (seq or unseq) grouped by their storage group.\n+   * @return TsFiles (seq or unseq) grouped by their storage group and partition number.\n    */\n-  public Map<String, List<TsFileResource>> getAllClosedStorageGroupTsFile() {\n-    Map<String, List<TsFileResource>> ret = new HashMap<>();\n+  public Map<String, Map<Integer, List<TsFileResource>>> getAllClosedStorageGroupTsFile() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24540ddf39dbaf4bba2a8c7354c4955a296029fe"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg4NTEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowNDoxOFrOF15bbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowNDoxOFrOF15bbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA1OTc1Ng==", "bodyText": "only get sequence file?", "url": "https://github.com/apache/iotdb/pull/901#discussion_r392059756", "createdAt": "2020-03-13T07:04:18Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/StorageEngine.java", "diffHunk": "@@ -529,15 +529,23 @@ private String getSgByEngineFile(File file) {\n \n   /**\n    *\n-   * @return TsFiles (seq or unseq) grouped by their storage group.\n+   * @return TsFiles (seq or unseq) grouped by their storage group and partition number.\n    */\n-  public Map<String, List<TsFileResource>> getAllClosedStorageGroupTsFile() {\n-    Map<String, List<TsFileResource>> ret = new HashMap<>();\n+  public Map<String, Map<Integer, List<TsFileResource>>> getAllClosedStorageGroupTsFile() {\n+    Map<String, Map<Integer, List<TsFileResource>>> ret = new HashMap<>();\n     for (Entry<String, StorageGroupProcessor> entry : processorMap\n         .entrySet()) {\n-      ret.computeIfAbsent(entry.getKey(), sg -> new ArrayList<>()).addAll(entry.getValue().getSequenceFileTreeSet());\n-      ret.get(entry.getKey()).addAll(entry.getValue().getUnSequenceFileList());\n-      ret.get(entry.getKey()).removeIf(file -> !file.isClosed());\n+      List<TsFileResource> sequenceFiles = entry.getValue().getSequenceFileTreeSet();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24540ddf39dbaf4bba2a8c7354c4955a296029fe"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyOTg5MTU2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowODowMlrOF15ffQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwNzowODowMlrOF15ffQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjA2MDc5Nw==", "bodyText": "part?", "url": "https://github.com/apache/iotdb/pull/901#discussion_r392060797", "createdAt": "2020-03-13T07:08:02Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -885,7 +885,7 @@ public void collectSeries(String startingPath, List<MeasurementSchema> timeserie\n    * and the wildcard will be removed.\n    * If the wildcard is at the tail, then the inference will go on until the storage groups are found\n    * and the wildcard will be kept.\n-   * (2) Suppose the part of the path is a substring that begin after the storage group name. (e.g.,\n+   * (2) Suppose the path of the path is a substring that begin after the storage group name. (e.g.,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24540ddf39dbaf4bba2a8c7354c4955a296029fe"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 305, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}