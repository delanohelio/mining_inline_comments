{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjA4OTE4", "number": 1088, "title": "[IOTDB-125] Potential Concurrency bug while deleting and inserting happen together", "bodyText": "", "createdAt": "2020-04-22T10:49:45Z", "url": "https://github.com/apache/iotdb/pull/1088", "merged": true, "mergeCommit": {"oid": "e2656a29dc10e4c44c4c3ed4148c6b14a7f27ae6"}, "closed": true, "closedAt": "2020-04-25T08:25:48Z", "author": {"login": "JackieTien97"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZ-zFXAH2gAyNDA3MjA4OTE4OmFjYjFiMjQ5YmZlMzU5Yzg3Y2I3Y2I3Njg4YjQ5OTM5MTlmNzNmNWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbBwvlgFqTQwMDM3MjI5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "acb1b249bfe359c87cb7cb7688b4993919f73f5f", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/acb1b249bfe359c87cb7cb7688b4993919f73f5f", "committedDate": "2020-04-22T02:24:06Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7f41226778cd030a45ee3ca9727bc0d3560a091", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/e7f41226778cd030a45ee3ca9727bc0d3560a091", "committedDate": "2020-04-22T02:24:10Z", "message": "Merge remote-tracking branch 'origin' into DeleteInsertBug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34eac9a9cda9333a596b9a93386b6311107bc752", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/34eac9a9cda9333a596b9a93386b6311107bc752", "committedDate": "2020-04-22T10:45:31Z", "message": "add a lock in each MNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd21e5f1133cc3c13ecfa55eb5924b1b9cb0fe0e", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/bd21e5f1133cc3c13ecfa55eb5924b1b9cb0fe0e", "committedDate": "2020-04-22T12:52:38Z", "message": "delete duplicated finally block and retain the reconnect() method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa01ce07bd310f5f37649b19e7f44b992959ddf5", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/aa01ce07bd310f5f37649b19e7f44b992959ddf5", "committedDate": "2020-04-22T15:05:18Z", "message": "add try catch in TSServiceImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eae0e949030d5a1fa557921fac3ce214c0890e9", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/3eae0e949030d5a1fa557921fac3ce214c0890e9", "committedDate": "2020-04-23T01:02:50Z", "message": "some typos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/55526cce04e8323dabe22e01ad0e965b29dbb929", "committedDate": "2020-04-25T02:57:51Z", "message": "resolve conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzQ5ODY1", "url": "https://github.com/apache/iotdb/pull/1088#pullrequestreview-400349865", "createdAt": "2020-04-25T02:58:07Z", "commit": {"oid": "3eae0e949030d5a1fa557921fac3ce214c0890e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMjo1OTo0MFrOGLvO6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMzowMjowMVrOGLvQjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTM4Ng==", "bodyText": "Move this readLock to the PlanExecutor, put it to readUnlock together.", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961386", "createdAt": "2020-04-25T02:59:40Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -857,40 +863,54 @@ public StorageGroupMNode getStorageGroupNode(String path) throws MetadataExcepti\n   /**\n    * get device node, if the storage group is not set, create it when autoCreateSchema is true\n    *\n+   * !!!!!!Attention!!!!!\n+   * must call the return node's readUnlock() if you call this method.\n    * @param path path\n    */\n   public MNode getDeviceNodeWithAutoCreateStorageGroup(String path, boolean autoCreateSchema,\n       int sgLevel) throws MetadataException {\n     lock.readLock().lock();\n     MNode node = null;\n-    boolean shouldSetStorageGroup = false;\n+    boolean shouldSetStorageGroup;\n     try {\n       node = mNodeCache.get(path);\n+      return node;\n     } catch (CacheException e) {\n       if (!autoCreateSchema) {\n         throw new PathNotExistException(path);\n-      } else {\n-        shouldSetStorageGroup = e.getCause() instanceof StorageGroupNotSetException;\n       }\n     } finally {\n+      if (node != null) {\n+        node.readLock();\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTQ0Nw==", "bodyText": "move the readlock to caller, then remove this", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961447", "createdAt": "2020-04-25T03:00:05Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -857,40 +863,54 @@ public StorageGroupMNode getStorageGroupNode(String path) throws MetadataExcepti\n   /**\n    * get device node, if the storage group is not set, create it when autoCreateSchema is true\n    *\n+   * !!!!!!Attention!!!!!\n+   * must call the return node's readUnlock() if you call this method.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTU3NA==", "bodyText": "add java doc.\nIf delete a leafNode, lock its parent, if delete an InternalNode, lock this node", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961574", "createdAt": "2020-04-25T03:00:56Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/InternalMNode.java", "diffHunk": "@@ -46,13 +51,34 @@ public void addChild(String name, MNode child) {\n \n \n   @Override\n-  public void deleteChild(String name) {\n-    children.remove(name);\n-  }\n+  public void deleteChild(String name) throws DeleteFailedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTcxNQ==", "bodyText": "move this to InternalMNode", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961715", "createdAt": "2020-04-25T03:01:26Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -43,6 +46,8 @@\n    */\n   protected String fullPath;\n \n+  protected ReadWriteLock lock = new ReentrantReadWriteLock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTczNg==", "bodyText": "move to InternalMNode", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961736", "createdAt": "2020-04-25T03:01:38Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/mnode/MNode.java", "diffHunk": "@@ -121,4 +126,20 @@ public String getName() {\n   public void setName(String name) {\n     this.name = name;\n   }\n+\n+  public void readLock() {\n+    MNode node = this;\n+    while (node != null) {\n+      node.lock.readLock().lock();\n+      node = node.parent;\n+    }\n+  }\n+\n+  public void readUnlock() {\n+    MNode node = this;\n+    while (node != null) {\n+      node.lock.readLock().unlock();\n+      node = node.parent;\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTc5Mg==", "bodyText": "lock node here", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961792", "createdAt": "2020-04-25T03:01:55Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -619,24 +622,31 @@ private void createSchemaAutomatically(\n     Set<Path> registeredSeries = new HashSet<>();\n     for (ChunkGroupMetadata chunkGroupMetadata : chunkGroupMetadataList) {\n       String device = chunkGroupMetadata.getDevice();\n-      MNode node = mManager.getDeviceNodeWithAutoCreateStorageGroup(device, true, sgLevel);\n-      for (ChunkMetadata chunkMetadata : chunkGroupMetadata.getChunkMetadataList()) {\n-        Path series = new Path(chunkGroupMetadata.getDevice(), chunkMetadata.getMeasurementUid());\n-        if (!registeredSeries.contains(series)) {\n-          registeredSeries.add(series);\n-          MeasurementSchema schema = knownSchemas.get(series);\n-          if (schema == null) {\n-            throw new MetadataException(String.format(\"Can not get the schema of measurement [%s]\",\n-                    chunkMetadata.getMeasurementUid()));\n-          }\n-          if (!node.hasChild(chunkMetadata.getMeasurementUid())) {\n-            mManager.createTimeseries(series.getFullPath(), schema.getType(),\n-                schema.getEncodingType(), schema.getCompressor(), Collections.emptyMap());\n-          } else if (node.getChild(chunkMetadata.getMeasurementUid()) instanceof InternalMNode) {\n-            throw new QueryProcessException(\n-                String.format(\"Current Path is not leaf node. %s\", series));\n+      MNode node = null;\n+      try {\n+        node = mManager.getDeviceNodeWithAutoCreateStorageGroup(device, true, sgLevel);\n+        for (ChunkMetadata chunkMetadata : chunkGroupMetadata.getChunkMetadataList()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk2MTgwNA==", "bodyText": "lock here", "url": "https://github.com/apache/iotdb/pull/1088#discussion_r414961804", "createdAt": "2020-04-25T03:02:01Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -705,10 +715,11 @@ public void delete(Path path, long timestamp) throws QueryProcessException {\n \n   @Override\n   public void insert(InsertPlan insertPlan) throws QueryProcessException {\n+    MNode node = null;\n     try {\n       String[] measurementList = insertPlan.getMeasurements();\n       String deviceId = insertPlan.getDeviceId();\n-      MNode node = mManager.getDeviceNodeWithAutoCreateStorageGroup(deviceId);\n+      node = mManager.getDeviceNodeWithAutoCreateStorageGroup(deviceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55526cce04e8323dabe22e01ad0e965b29dbb929"}, "originalPosition": 77}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9142d833c6353cebe203d6b68d2fe3bbc7e65a7", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/d9142d833c6353cebe203d6b68d2fe3bbc7e65a7", "committedDate": "2020-04-25T03:44:31Z", "message": "for QIAO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b008a4894ba7ae772537400e899a2736b245b2e5", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/b008a4894ba7ae772537400e899a2736b245b2e5", "committedDate": "2020-04-25T03:44:54Z", "message": "Merge branch 'DeleteInsertBug' of https://github.com/apache/incubator-iotdb into DeleteInsertBug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca960903663ec76ff4b8f3b88836f65da70c78c3", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ca960903663ec76ff4b8f3b88836f65da70c78c3", "committedDate": "2020-04-25T05:33:12Z", "message": "fix compilation error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c17fb6f265185710110415ec3c6ea37a7e43a13", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2c17fb6f265185710110415ec3c6ea37a7e43a13", "committedDate": "2020-04-25T05:51:28Z", "message": "add read unlock"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzcyMjk3", "url": "https://github.com/apache/iotdb/pull/1088#pullrequestreview-400372297", "createdAt": "2020-04-25T08:25:11Z", "commit": {"oid": "2c17fb6f265185710110415ec3c6ea37a7e43a13"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2967, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}