{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNjUzNDIx", "number": 765, "title": "[IOTDB-335] Merge different aggregations on same timeseries", "bodyText": "Separate query executions of the same timeseries with different aggregate functions can be optimized", "createdAt": "2020-02-04T05:27:16Z", "url": "https://github.com/apache/iotdb/pull/765", "merged": true, "mergeCommit": {"oid": "594703b4b3befef81d503ebe579b9dfa846cd409"}, "closed": true, "closedAt": "2020-02-04T10:31:26Z", "author": {"login": "samperson1997"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcA6oiLgH2gAyMzcwNjUzNDIxOjkzZWQ2ZTNkMjM5MGUxMzU1ODAwY2ZmNzY3MDVlNGQ1MjI0NGIzYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcA-1DugFqTM1Mjg2MTc4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93ed6e3d2390e1355800cff76705e4d52244b3b7", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/93ed6e3d2390e1355800cff76705e4d52244b3b7", "committedDate": "2020-02-04T05:24:51Z", "message": "[IOTDB-335] Separate query executions of the same timeseries with different aggregate functions may be optimized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c3a1d6cf92e2d4e332964f0175e3116cffbbb6f", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/4c3a1d6cf92e2d4e332964f0175e3116cffbbb6f", "committedDate": "2020-02-04T06:32:29Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/query/executor/AggregationExecutor.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef2ebf3c2072d0ca199e15b473d286c782a8795d", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/ef2ebf3c2072d0ca199e15b473d286c782a8795d", "committedDate": "2020-02-04T06:35:19Z", "message": "Solve conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNzYwNzA4", "url": "https://github.com/apache/iotdb/pull/765#pullrequestreview-352760708", "createdAt": "2020-02-04T07:11:43Z", "commit": {"oid": "ef2ebf3c2072d0ca199e15b473d286c782a8795d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81439c03ea56560f1372b62e253317c1365d4dc7", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/81439c03ea56560f1372b62e253317c1365d4dc7", "committedDate": "2020-02-04T07:20:16Z", "message": "Code refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNzg2OTA5", "url": "https://github.com/apache/iotdb/pull/765#pullrequestreview-352786909", "createdAt": "2020-02-04T08:16:09Z", "commit": {"oid": "81439c03ea56560f1372b62e253317c1365d4dc7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODoxNjoxMFrOFlLOrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwODoxODo1N1rOFlLS6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUyNTYxMg==", "bodyText": "If one series relates to a   min_time and first_value, we'd better return result if all aggregateResult  has calculated aggregation results.", "url": "https://github.com/apache/iotdb/pull/765#discussion_r374525612", "createdAt": "2020-02-04T08:16:10Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/AggregationExecutor.java", "diffHunk": "@@ -121,23 +127,21 @@ private AggregateResult aggregateOneSeries(int i, Filter timeFilter, QueryContex\n         //cal by pageheader\n         if (seriesReader.canUseCurrentPageStatistics()) {\n           Statistics pageStatistic = seriesReader.currentPageStatistics();\n-          aggregateResult.updateResultFromStatistics(pageStatistic);\n-          if (aggregateResult.isCalculatedAggregationResult()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81439c03ea56560f1372b62e253317c1365d4dc7"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUyNjY5Ng==", "bodyText": "add javadoc and an example\ngiven :\npaths: s1, s2, s3, s1\naggregations: count, sum, count, sum\nseriesMap:\ns1 -> 0, 3\ns2 -> 2\ns3 -> 3", "url": "https://github.com/apache/iotdb/pull/765#discussion_r374526696", "createdAt": "2020-02-04T08:18:57Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/AggregationExecutor.java", "diffHunk": "@@ -80,39 +82,43 @@ public QueryDataSet executeWithoutValueFilter(QueryContext context)\n       timeFilter = ((GlobalTimeExpression) expression).getFilter();\n     }\n \n-    List<AggregateResult> aggregateResultList = new ArrayList<>();\n     //TODO use multi-thread\n-    for (int i = 0; i < selectedSeries.size(); i++) {\n-      AggregateResult aggregateResult = aggregateOneSeries(i, timeFilter, context);\n-      aggregateResultList.add(aggregateResult);\n+    Map<Path, List<Integer>> seriesMap = mergeSameSeries(selectedSeries);\n+    AggregateResult[] aggregateResultList = new AggregateResult[selectedSeries.size()];\n+    for (Map.Entry<Path, List<Integer>> entry : seriesMap.entrySet()) {\n+      List<AggregateResult> aggregateResults = aggregateOneSeries(entry, timeFilter, context);\n+      int index = 0;\n+      for (int i : entry.getValue()) {\n+        aggregateResultList[i] = aggregateResults.get(index);\n+        index++;\n+      }\n     }\n-    return constructDataSet(aggregateResultList);\n-  }\n \n+    return constructDataSet(Arrays.asList(aggregateResultList));\n+  }\n \n-  /**\n-   * get aggregation result for one series\n-   */\n-  private AggregateResult aggregateOneSeries(int i, Filter timeFilter, QueryContext context)\n+  private List<AggregateResult> aggregateOneSeries(Map.Entry<Path, List<Integer>> series,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81439c03ea56560f1372b62e253317c1365d4dc7"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c711f3031300a360881cc902fee832d812f308dd", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/c711f3031300a360881cc902fee832d812f308dd", "committedDate": "2020-02-04T08:54:51Z", "message": "More optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a97eb4fc3ae379544dc2bb01413348cf13529573", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/a97eb4fc3ae379544dc2bb01413348cf13529573", "committedDate": "2020-02-04T10:04:54Z", "message": "More optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa438fc70e5c9e91ab3c246ad7febca514e2bd27", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/fa438fc70e5c9e91ab3c246ad7febca514e2bd27", "committedDate": "2020-02-04T10:13:17Z", "message": "More optimization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODYxNzg1", "url": "https://github.com/apache/iotdb/pull/765#pullrequestreview-352861785", "createdAt": "2020-02-04T10:18:09Z", "commit": {"oid": "fa438fc70e5c9e91ab3c246ad7febca514e2bd27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3279, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}