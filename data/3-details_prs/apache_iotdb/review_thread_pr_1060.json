{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTIxODA3", "number": 1060, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDozODoxNFrODzXsJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzowMDo0MVrOD13k5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTkyMTAxOnYy", "diffSide": "RIGHT", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDozODoxNFrOGH1yAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxNjozM1rOGLJ7Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3NDM3MQ==", "bodyText": "don't forget to change the method name of  this. insertInBatch()", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r410874371", "createdAt": "2020-04-19T10:38:14Z", "author": {"login": "liutaohua"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -125,20 +125,19 @@ private static void insertInBatch() throws IoTDBConnectionException, BatchExecut\n       valuesList.add(values);\n       timestamps.add(time);\n       if (time != 0 && time % 100 == 0) {\n-        session.insertInBatch(deviceIds, timestamps, measurementsList, valuesList);\n+        session.insertRows(deviceIds, timestamps, measurementsList, valuesList);\n         deviceIds.clear();\n         measurementsList.clear();\n         valuesList.clear();\n         timestamps.clear();\n       }\n     }\n \n-    session.insertInBatch(deviceIds, timestamps, measurementsList, valuesList);\n+    session.insertRows(deviceIds, timestamps, measurementsList, valuesList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29e9c3e696b3f8ac26db9ad8fe9a2e71f599f4b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1MDEzNA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414350134", "createdAt": "2020-04-24T07:16:33Z", "author": {"login": "qiaojialin"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -125,20 +125,19 @@ private static void insertInBatch() throws IoTDBConnectionException, BatchExecut\n       valuesList.add(values);\n       timestamps.add(time);\n       if (time != 0 && time % 100 == 0) {\n-        session.insertInBatch(deviceIds, timestamps, measurementsList, valuesList);\n+        session.insertRows(deviceIds, timestamps, measurementsList, valuesList);\n         deviceIds.clear();\n         measurementsList.clear();\n         valuesList.clear();\n         timestamps.clear();\n       }\n     }\n \n-    session.insertInBatch(deviceIds, timestamps, measurementsList, valuesList);\n+    session.insertRows(deviceIds, timestamps, measurementsList, valuesList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3NDM3MQ=="}, "originalCommit": {"oid": "d29e9c3e696b3f8ac26db9ad8fe9a2e71f599f4b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MTkyNzIyOnYy", "diffSide": "RIGHT", "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOVQxMDo0MjoxM1rOGH10vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxNjozOFrOGLJ7YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3NTA3MQ==", "bodyText": "rowBatchList", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r410875071", "createdAt": "2020-04-19T10:42:13Z", "author": {"login": "liutaohua"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -211,10 +209,10 @@ private static void insertMultipleDeviceRowBatch()\n     \n     RowBatch rowBatch3 = schema3.createRowBatch(\"root.sg1.d3\", 100);\n     \n-    Map<String, RowBatch> rowBatchMap = new HashMap<>();\n-    rowBatchMap.put(\"root.sg1.d1\", rowBatch1);\n-    rowBatchMap.put(\"root.sg1.d2\", rowBatch2);\n-    rowBatchMap.put(\"root.sg1.d3\", rowBatch3);\n+    List<RowBatch> rowBatchMap = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d29e9c3e696b3f8ac26db9ad8fe9a2e71f599f4b"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM1MDE3Ng==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414350176", "createdAt": "2020-04-24T07:16:38Z", "author": {"login": "qiaojialin"}, "path": "example/session/src/main/java/org/apache/iotdb/SessionExample.java", "diffHunk": "@@ -211,10 +209,10 @@ private static void insertMultipleDeviceRowBatch()\n     \n     RowBatch rowBatch3 = schema3.createRowBatch(\"root.sg1.d3\", 100);\n     \n-    Map<String, RowBatch> rowBatchMap = new HashMap<>();\n-    rowBatchMap.put(\"root.sg1.d1\", rowBatch1);\n-    rowBatchMap.put(\"root.sg1.d2\", rowBatch2);\n-    rowBatchMap.put(\"root.sg1.d3\", rowBatch3);\n+    List<RowBatch> rowBatchMap = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDg3NTA3MQ=="}, "originalCommit": {"oid": "d29e9c3e696b3f8ac26db9ad8fe9a2e71f599f4b"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA1NTY1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0NToyM1rOGLgRDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozMjowOVrOGLuVCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxNjE3Mw==", "bodyText": "I think we should also change the java doc to insert tablet plan.", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414716173", "createdAt": "2020-04-24T16:45:23Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -576,12 +576,12 @@ private boolean checkTTL(long time) {\n   /**\n    * insert batch to tsfile processor thread-safety that the caller need to guarantee\n    *\n-   * @param batchInsertPlan batch insert plan\n+   * @param insertTabletPlan batch insert plan", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NjU3MA==", "bodyText": "thanks! fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414946570", "createdAt": "2020-04-25T01:32:09Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -576,12 +576,12 @@ private boolean checkTTL(long time) {\n   /**\n    * insert batch to tsfile processor thread-safety that the caller need to guarantee\n    *\n-   * @param batchInsertPlan batch insert plan\n+   * @param insertTabletPlan batch insert plan", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxNjE3Mw=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA4MDM0OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1MToyNlrOGLgfxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozMzoxNFrOGLuVow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxOTk0Mg==", "bodyText": "The comment should be // test insert tablet now.", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414719942", "createdAt": "2020-04-24T16:51:26Z", "author": {"login": "HTHou"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -206,14 +202,14 @@ public void testTestMethod()\n     createTimeseries();\n \n     // test insert batch\n-    Schema schema = new Schema();\n-    schema.registerTimeseries(new Path(deviceId, \"s1\"), new MeasurementSchema(\"s1\", TSDataType.INT64, TSEncoding.RLE));\n-    schema.registerTimeseries(new Path(deviceId, \"s2\"), new MeasurementSchema(\"s2\", TSDataType.INT64, TSEncoding.RLE));\n-    schema.registerTimeseries(new Path(deviceId, \"s3\"), new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n+    List<MeasurementSchema> schemaList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NjcyMw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414946723", "createdAt": "2020-04-25T01:33:14Z", "author": {"login": "qiaojialin"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -206,14 +202,14 @@ public void testTestMethod()\n     createTimeseries();\n \n     // test insert batch\n-    Schema schema = new Schema();\n-    schema.registerTimeseries(new Path(deviceId, \"s1\"), new MeasurementSchema(\"s1\", TSDataType.INT64, TSEncoding.RLE));\n-    schema.registerTimeseries(new Path(deviceId, \"s2\"), new MeasurementSchema(\"s2\", TSDataType.INT64, TSEncoding.RLE));\n-    schema.registerTimeseries(new Path(deviceId, \"s3\"), new MeasurementSchema(\"s3\", TSDataType.INT64, TSEncoding.RLE));\n+    List<MeasurementSchema> schemaList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxOTk0Mg=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA4NTg4OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1Mjo1NFrOGLgjNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozMzozN1rOGLuWAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMDgyMQ==", "bodyText": "// test inset records", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414720821", "createdAt": "2020-04-24T16:52:54Z", "author": {"login": "HTHou"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -225,7 +221,7 @@ public void testTestMethod()\n       values.add(\"1\");\n       values.add(\"2\");\n       values.add(\"3\");\n-      session.testInsert(deviceId, time, measurements, values);\n+      session.testInsertRecord(deviceId, time, measurements, values);\n     }\n \n     // test insert row in batch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NjgxNw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414946817", "createdAt": "2020-04-25T01:33:37Z", "author": {"login": "qiaojialin"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIT.java", "diffHunk": "@@ -225,7 +221,7 @@ public void testTestMethod()\n       values.add(\"1\");\n       values.add(\"2\");\n       values.add(\"3\");\n-      session.testInsert(deviceId, time, measurements, values);\n+      session.testInsertRecord(deviceId, time, measurements, values);\n     }\n \n     // test insert row in batch", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMDgyMQ=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA5MzQ4OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1NDo0N1rOGLgn7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNToyMlrOGLuXHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjAyOA==", "bodyText": "Confirm whether the tablet is legal.", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414722028", "createdAt": "2020-04-24T16:54:47Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "diffHunk": "@@ -208,22 +208,22 @@ private boolean checkIsTimeSeriesExist(TSRecord record) throws WriteProcessExcep\n   /**\n    * Confirm whether the row batch is legal.\n    *\n-   * @param rowBatch - a row batch responding multiple columns\n+   * @param tablet - a row batch responding multiple columns\n    * @return - whether the row batch has been added into RecordWriter legally", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzEwMw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947103", "createdAt": "2020-04-25T01:35:22Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "diffHunk": "@@ -208,22 +208,22 @@ private boolean checkIsTimeSeriesExist(TSRecord record) throws WriteProcessExcep\n   /**\n    * Confirm whether the row batch is legal.\n    *\n-   * @param rowBatch - a row batch responding multiple columns\n+   * @param tablet - a row batch responding multiple columns\n    * @return - whether the row batch has been added into RecordWriter legally", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjAyOA=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA5NTYxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1NToyM1rOGLgpYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNTo0MVrOGLuXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjQwMw==", "bodyText": "write a tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414722403", "createdAt": "2020-04-24T16:55:23Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "diffHunk": "@@ -254,16 +254,16 @@ public boolean write(TSRecord record) throws IOException, WriteProcessException\n   /**\n    * write a row batch\n    *\n-   * @param rowBatch - multiple time series of one device that share a time column\n+   * @param tablet - multiple time series of one device that share a time column", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzE1Mw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947153", "createdAt": "2020-04-25T01:35:41Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/TsFileWriter.java", "diffHunk": "@@ -254,16 +254,16 @@ public boolean write(TSRecord record) throws IOException, WriteProcessException\n   /**\n    * write a row batch\n    *\n-   * @param rowBatch - multiple time series of one device that share a time column\n+   * @param tablet - multiple time series of one device that share a time column", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjQwMw=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA5ODIxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/IChunkGroupWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1NjowM1rOGLgq4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNjo0NVrOGLuYTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjc4NQ==", "bodyText": "receive a tablet, write it to timeseries writers", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414722785", "createdAt": "2020-04-24T16:56:03Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/IChunkGroupWriter.java", "diffHunk": "@@ -51,14 +51,14 @@\n   /**\n    * receive a row batch, write it to timeseries writers\n    *\n-   * @param rowBatch\n+   * @param tablet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzQwNg==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947406", "createdAt": "2020-04-25T01:36:45Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/IChunkGroupWriter.java", "diffHunk": "@@ -51,14 +51,14 @@\n   /**\n    * receive a row batch, write it to timeseries writers\n    *\n-   * @param rowBatch\n+   * @param tablet", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMjc4NQ=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODEwMjc4OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1NzowMlrOGLgtaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNzoxM1rOGLuYiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzQzNQ==", "bodyText": "Return a tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414723435", "createdAt": "2020-04-24T16:57:02Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -46,49 +57,43 @@\n    */\n   public long[] timestamps;\n   /**\n-   * each object is a primitive type array, which represents values of one\n-   * measurement\n+   * each object is a primitive type array, which represents values of one measurement\n    */\n   public Object[] values;\n   /**\n-   * the number of rows to include in this row batch\n+   * the number of rows to include in this tablet\n    */\n-  public int batchSize;\n+  public int rowSize;\n   /**\n    * the maximum number of rows for this row batch\n    */\n-  private int maxBatchSize;\n-\n-  /**\n-   * total byte size that values occupies\n-   */\n-  private int valueOccupation = -1;\n+  private int maxRowNumber;\n \n   /**\n    * Return a row batch with default specified row number. This is the standard\n-   * constructor (all RowBatch should be the same size).\n+   * constructor (all Tablet should be the same size).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzQ2NA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947464", "createdAt": "2020-04-25T01:37:13Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -46,49 +57,43 @@\n    */\n   public long[] timestamps;\n   /**\n-   * each object is a primitive type array, which represents values of one\n-   * measurement\n+   * each object is a primitive type array, which represents values of one measurement\n    */\n   public Object[] values;\n   /**\n-   * the number of rows to include in this row batch\n+   * the number of rows to include in this tablet\n    */\n-  public int batchSize;\n+  public int rowSize;\n   /**\n    * the maximum number of rows for this row batch\n    */\n-  private int maxBatchSize;\n-\n-  /**\n-   * total byte size that values occupies\n-   */\n-  private int valueOccupation = -1;\n+  private int maxRowNumber;\n \n   /**\n    * Return a row batch with default specified row number. This is the standard\n-   * constructor (all RowBatch should be the same size).\n+   * constructor (all Tablet should be the same size).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzQzNQ=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODEwMzc5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1NzoyMVrOGLguEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNzoyOVrOGLuYsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzYwMw==", "bodyText": "Return a tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414723603", "createdAt": "2020-04-24T16:57:21Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -46,49 +57,43 @@\n    */\n   public long[] timestamps;\n   /**\n-   * each object is a primitive type array, which represents values of one\n-   * measurement\n+   * each object is a primitive type array, which represents values of one measurement\n    */\n   public Object[] values;\n   /**\n-   * the number of rows to include in this row batch\n+   * the number of rows to include in this tablet\n    */\n-  public int batchSize;\n+  public int rowSize;\n   /**\n    * the maximum number of rows for this row batch\n    */\n-  private int maxBatchSize;\n-\n-  /**\n-   * total byte size that values occupies\n-   */\n-  private int valueOccupation = -1;\n+  private int maxRowNumber;\n \n   /**\n    * Return a row batch with default specified row number. This is the standard\n-   * constructor (all RowBatch should be the same size).\n+   * constructor (all Tablet should be the same size).\n    *\n    * @param deviceId   the name of the device specified to be written in\n    * @param timeseries the list of measurement schemas for creating the row batch\n    */\n-  public RowBatch(String deviceId, List<MeasurementSchema> timeseries) {\n+  public Tablet(String deviceId, List<MeasurementSchema> timeseries) {\n     this(deviceId, timeseries, DEFAULT_SIZE);\n   }\n \n   /**\n    * Return a row batch with the specified number of rows (maxBatchSize). Only\n-   * call this constructor directly for testing purposes. RowBatch should normally\n+   * call this constructor directly for testing purposes. Tablet should normally", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzUwNg==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947506", "createdAt": "2020-04-25T01:37:29Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -46,49 +57,43 @@\n    */\n   public long[] timestamps;\n   /**\n-   * each object is a primitive type array, which represents values of one\n-   * measurement\n+   * each object is a primitive type array, which represents values of one measurement\n    */\n   public Object[] values;\n   /**\n-   * the number of rows to include in this row batch\n+   * the number of rows to include in this tablet\n    */\n-  public int batchSize;\n+  public int rowSize;\n   /**\n    * the maximum number of rows for this row batch\n    */\n-  private int maxBatchSize;\n-\n-  /**\n-   * total byte size that values occupies\n-   */\n-  private int valueOccupation = -1;\n+  private int maxRowNumber;\n \n   /**\n    * Return a row batch with default specified row number. This is the standard\n-   * constructor (all RowBatch should be the same size).\n+   * constructor (all Tablet should be the same size).\n    *\n    * @param deviceId   the name of the device specified to be written in\n    * @param timeseries the list of measurement schemas for creating the row batch\n    */\n-  public RowBatch(String deviceId, List<MeasurementSchema> timeseries) {\n+  public Tablet(String deviceId, List<MeasurementSchema> timeseries) {\n     this(deviceId, timeseries, DEFAULT_SIZE);\n   }\n \n   /**\n    * Return a row batch with the specified number of rows (maxBatchSize). Only\n-   * call this constructor directly for testing purposes. RowBatch should normally\n+   * call this constructor directly for testing purposes. Tablet should normally", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzYwMw=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODEwNTk5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1Nzo1N1rOGLgvYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozNzo0NlrOGLuY5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzkzNw==", "bodyText": "Return the maximum number of rows for this tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414723937", "createdAt": "2020-04-24T16:57:57Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -102,42 +107,42 @@ public RowBatch(String deviceId, List<MeasurementSchema> schemas, int maxBatchSi\n   /**\n    * Return the maximum number of rows for this row batch\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzU1Nw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947557", "createdAt": "2020-04-25T01:37:46Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/record/Tablet.java", "diffHunk": "@@ -102,42 +107,42 @@ public RowBatch(String deviceId, List<MeasurementSchema> schemas, int maxBatchSi\n   /**\n    * Return the maximum number of rows for this row batch\n    */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyMzkzNw=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODExMTkwOnYy", "diffSide": "RIGHT", "path": "hive-connector/src/test/java/org/apache/iotdb/hive/TsFileTestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1OToyNlrOGLgzBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozODoyMFrOGLuZWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNDg3MA==", "bodyText": "// construct the tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414724870", "createdAt": "2020-04-24T16:59:26Z", "author": {"login": "HTHou"}, "path": "hive-connector/src/test/java/org/apache/iotdb/hive/TsFileTestHelper.java", "diffHunk": "@@ -61,40 +64,42 @@ public static void writeTsFile(String filePath) {\n \n       // add measurements into file schema (all with INT64 data type)\n       for (int i = 0; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\"sensor_\" + (i + 1),\n+            TSDataType.INT64, TSEncoding.TS_2DIFF, CompressionType.UNCOMPRESSED);\n         schema.registerTimeseries(new Path(\"device_1\", \"sensor_\" + (i + 1)),\n-            new MeasurementSchema(\"sensor_\" + (i + 1), TSDataType.INT64, TSEncoding.TS_2DIFF,\n-                CompressionType.UNCOMPRESSED));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add measurements into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(\"device_1\");\n+      Tablet tablet = new Tablet(\"device_1\", schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NzY3Mg==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947672", "createdAt": "2020-04-25T01:38:20Z", "author": {"login": "qiaojialin"}, "path": "hive-connector/src/test/java/org/apache/iotdb/hive/TsFileTestHelper.java", "diffHunk": "@@ -61,40 +64,42 @@ public static void writeTsFile(String filePath) {\n \n       // add measurements into file schema (all with INT64 data type)\n       for (int i = 0; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\"sensor_\" + (i + 1),\n+            TSDataType.INT64, TSEncoding.TS_2DIFF, CompressionType.UNCOMPRESSED);\n         schema.registerTimeseries(new Path(\"device_1\", \"sensor_\" + (i + 1)),\n-            new MeasurementSchema(\"sensor_\" + (i + 1), TSDataType.INT64, TSEncoding.TS_2DIFF,\n-                CompressionType.UNCOMPRESSED));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add measurements into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(\"device_1\");\n+      Tablet tablet = new Tablet(\"device_1\", schemaList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNDg3MA=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODExMzE4OnYy", "diffSide": "RIGHT", "path": "hadoop/src/test/java/org/apache/iotdb/hadoop/tsfile/TsFileTestHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo1OTo1MFrOGLgz3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTozOToxN1rOGLuaFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNTA4Nw==", "bodyText": "// construct the tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414725087", "createdAt": "2020-04-24T16:59:50Z", "author": {"login": "HTHou"}, "path": "hadoop/src/test/java/org/apache/iotdb/hadoop/tsfile/TsFileTestHelper.java", "diffHunk": "@@ -61,39 +64,42 @@ public static void writeTsFile(String filePath) {\n \n       // add timeseries into file schema (all with INT64 data type)\n       for (int i = 0; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\"sensor_\" + (i + 1),\n+            TSDataType.INT64, TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(\"device_1\", \"sensor_\" + (i + 1)),\n-                new MeasurementSchema(\"sensor_\" + (i + 1), TSDataType.INT64, TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add timeseries into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(\"device_1\");\n+      Tablet tablet = new Tablet(\"device_1\", schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0Nzg2Mw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414947863", "createdAt": "2020-04-25T01:39:17Z", "author": {"login": "qiaojialin"}, "path": "hadoop/src/test/java/org/apache/iotdb/hadoop/tsfile/TsFileTestHelper.java", "diffHunk": "@@ -61,39 +64,42 @@ public static void writeTsFile(String filePath) {\n \n       // add timeseries into file schema (all with INT64 data type)\n       for (int i = 0; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\"sensor_\" + (i + 1),\n+            TSDataType.INT64, TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(\"device_1\", \"sensor_\" + (i + 1)),\n-                new MeasurementSchema(\"sensor_\" + (i + 1), TSDataType.INT64, TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add timeseries into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(\"device_1\");\n+      Tablet tablet = new Tablet(\"device_1\", schemaList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNTA4Nw=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODExNjg3OnYy", "diffSide": "RIGHT", "path": "example/hadoop/src/main/java/org/apache/iotdb/hadoop/tsfile/TsFileHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzowMDo0MVrOGLg2Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMTo1MToxOVrOGLuikw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNTYzOA==", "bodyText": "// construct the tablet", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414725638", "createdAt": "2020-04-24T17:00:41Z", "author": {"login": "HTHou"}, "path": "example/hadoop/src/main/java/org/apache/iotdb/hadoop/tsfile/TsFileHelper.java", "diffHunk": "@@ -52,39 +54,47 @@ public static void writeTsFile(String filePath) {\n \n       Schema schema = new Schema();\n \n+      List<MeasurementSchema> schemaList = new ArrayList<>();\n+\n       // the number of rows to include in the row batch\n       int rowNum = 1000000;\n       // the number of values to include in the row batch\n       int sensorNum = 10;\n \n       // add measurements into file schema (all with INT64 data type)\n       for (int i = 0; i < 2; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\n+            Constant.SENSOR_PREFIX + (i + 1), TSDataType.INT64,\n+            TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(Constant.DEVICE_1, Constant.SENSOR_PREFIX + (i + 1)),\n-            new MeasurementSchema(Constant.SENSOR_PREFIX + (i + 1), TSDataType.INT64,\n-                TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       for (int i = 2; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\n+            Constant.SENSOR_PREFIX + (i + 1), TSDataType.DOUBLE,\n+            TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(Constant.DEVICE_1, Constant.SENSOR_PREFIX + (i + 1)),\n-            new MeasurementSchema(Constant.SENSOR_PREFIX + (i + 1), TSDataType.DOUBLE,\n-                TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add measurements into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(Constant.DEVICE_1);\n+      Tablet tablet = new Tablet(Constant.DEVICE_1, schemaList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1MDAzNQ==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1060#discussion_r414950035", "createdAt": "2020-04-25T01:51:19Z", "author": {"login": "qiaojialin"}, "path": "example/hadoop/src/main/java/org/apache/iotdb/hadoop/tsfile/TsFileHelper.java", "diffHunk": "@@ -52,39 +54,47 @@ public static void writeTsFile(String filePath) {\n \n       Schema schema = new Schema();\n \n+      List<MeasurementSchema> schemaList = new ArrayList<>();\n+\n       // the number of rows to include in the row batch\n       int rowNum = 1000000;\n       // the number of values to include in the row batch\n       int sensorNum = 10;\n \n       // add measurements into file schema (all with INT64 data type)\n       for (int i = 0; i < 2; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\n+            Constant.SENSOR_PREFIX + (i + 1), TSDataType.INT64,\n+            TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(Constant.DEVICE_1, Constant.SENSOR_PREFIX + (i + 1)),\n-            new MeasurementSchema(Constant.SENSOR_PREFIX + (i + 1), TSDataType.INT64,\n-                TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       for (int i = 2; i < sensorNum; i++) {\n+        MeasurementSchema measurementSchema = new MeasurementSchema(\n+            Constant.SENSOR_PREFIX + (i + 1), TSDataType.DOUBLE,\n+            TSEncoding.TS_2DIFF);\n         schema.registerTimeseries(new Path(Constant.DEVICE_1, Constant.SENSOR_PREFIX + (i + 1)),\n-            new MeasurementSchema(Constant.SENSOR_PREFIX + (i + 1), TSDataType.DOUBLE,\n-                TSEncoding.TS_2DIFF));\n+            measurementSchema);\n+        schemaList.add(measurementSchema);\n       }\n \n       // add measurements into TSFileWriter\n       TsFileWriter tsFileWriter = new TsFileWriter(file, schema);\n \n       // construct the row batch\n-      RowBatch rowBatch = schema.createRowBatch(Constant.DEVICE_1);\n+      Tablet tablet = new Tablet(Constant.DEVICE_1, schemaList);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcyNTYzOA=="}, "originalCommit": {"oid": "b94f4f72703e074ba78c4b3efeccd30391cc17b8"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 58, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}