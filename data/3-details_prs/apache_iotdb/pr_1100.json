{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTA5OTQw", "number": 1100, "title": "[IOTDB-605] Add more levels of index in TsFileMetadata", "bodyText": "A tree-structured level index as is shown in attachments.\n\nEach node is consisted of MetadataIndexEntry list: [<device / measurement name, offset, childNodeType>, ... ] and an endOffset. These elements represent the children nodes of the internal node.\nThe field childNodeType is an enum value, which represents the type of the next child node.\nThe degree of node maxDegreeOfIndexNode could be configured by users. (In the examples, I set maxDegreeOfIndexNode = 10 for convenience, and default value = 1024)\nThe storage process is from bottom to up. Whenever the blocks >= maxDegreeOfIndexNode, a parent level index will be generated and will be insisted into disk.\nThe query process is from top to bottom with binary search of the array.", "createdAt": "2020-04-25T13:41:31Z", "url": "https://github.com/apache/iotdb/pull/1100", "merged": true, "mergeCommit": {"oid": "85ef983c7ce98645689649b2f54228309e7cc189"}, "closed": true, "closedAt": "2020-04-30T02:54:10Z", "author": {"login": "samperson1997"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbRRwUgFqTQwMDQ1MDIwNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcckAV1gFqTQwMzE2OTUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDUwMjA1", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-400450205", "createdAt": "2020-04-26T02:29:49Z", "commit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjoyOTo0OVrOGL9b0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjoyOTo0OVrOGL9b0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDA2Ng==", "bodyText": "is not empty?", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415194066", "createdAt": "2020-04-26T02:29:49Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -62,9 +62,9 @@ private TsFileMetaDataCache() {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n         if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n+            && value.getDeviceMetadataIndex().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDY0OTcz", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-400464973", "createdAt": "2020-04-26T06:34:58Z", "commit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjozNDo1OFrOGL_upQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjozNDo1OFrOGL_upQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMTY1Mw==", "bodyText": "I just feel it should be better if you move this class to org.apache.iotdb.tsfile.file.metadata, because it will be serialized to the end of TsFile.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415231653", "createdAt": "2020-04-26T06:34:58Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {\n+\n+  private String name;\n+  private long offset;\n+  private ChildMetadataIndexType childMetadataIndexType;\n+\n+  public MetadataIndex() {\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDUxMDA1", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-400451005", "createdAt": "2020-04-26T02:43:47Z", "commit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjo0Mzo0OFrOGL9jyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNDo1NTozNlrOGL-xQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NjEwNw==", "bodyText": "In this case, we'd better provide an API that read all TimeseriesMetadata at a time to reduce IO.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415196107", "createdAt": "2020-04-26T02:43:48Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -72,7 +67,8 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n \n   public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    List<String> deviceList = reader.getDevicesByMetadata(metaData.getDeviceMetadataIndex());\n+    for (String device : deviceList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMDc2NA==", "bodyText": "maxDegreeOfIndexNode or so", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415200764", "createdAt": "2020-04-26T03:14:59Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxNumberOfIndexItemsInNode = 5;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjI1OA==", "bodyText": "replace these with metadataIndex.serializeTo", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202258", "createdAt": "2020-04-26T03:24:45Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -123,10 +124,11 @@ public int serializeTo(OutputStream outputStream) throws IOException {\n     // deviceMetadataIndex\n     if (deviceMetadataIndex != null) {\n       byteLen += ReadWriteIOUtils.write(deviceMetadataIndex.size(), outputStream);\n-      for (Map.Entry<String, Pair<Long, Integer>> entry : deviceMetadataIndex.entrySet()) {\n-        byteLen += ReadWriteIOUtils.write(entry.getKey(), outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().left, outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().right, outputStream);\n+      for (MetadataIndex metadataIndex : deviceMetadataIndex) {\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getName(), outputStream);\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getOffset(), outputStream);\n+        byteLen += ReadWriteIOUtils\n+            .write(metadataIndex.getChildMetadataIndexType().serialize(), outputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjU2MQ==", "bodyText": "replace these with MetadataIndex.deserializeFrom", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202561", "createdAt": "2020-04-26T03:26:32Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -68,16 +68,17 @@ public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n \n     // deviceMetadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndex> deviceMetaDataList = new ArrayList<>();\n     if (deviceNum > 0) {\n       for (int i = 0; i < deviceNum; i++) {\n-        String deviceId = ReadWriteIOUtils.readString(buffer);\n+        String name = ReadWriteIOUtils.readString(buffer);\n         long offset = ReadWriteIOUtils.readLong(buffer);\n-        int length = ReadWriteIOUtils.readInt(buffer);\n-        deviceMetaDataMap.put(deviceId, new Pair<>(offset, length));\n+        ChildMetadataIndexType type = ChildMetadataIndexType\n+            .deserialize(ReadWriteIOUtils.readShort(buffer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private List<MetadataIndex> deviceMetadataIndex;\n          \n          \n            \n              private List<MetadataIndex> metadataIndex;", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202656", "createdAt": "2020-04-26T03:27:10Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -48,8 +48,8 @@\n   // bloom filter\n   private BloomFilter bloomFilter;\n \n-  // DeviceId -> offset and length of Map<String, TimeseriesMetadata>\n-  private Map<String, Pair<Long, Integer>> deviceMetadataIndex;\n+  // List of <name, offset, childMetadataIndexType>\n+  private List<MetadataIndex> deviceMetadataIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public List<MetadataIndex> getDeviceMetadataIndex() {\n          \n          \n            \n              public List<MetadataIndex> getMetadataIndex() {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202698", "createdAt": "2020-04-26T03:27:20Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {\n          \n          \n            \n              public void setMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202714", "createdAt": "2020-04-26T03:27:33Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {\n     return deviceMetadataIndex;\n   }\n \n-  public void setDeviceMetadataIndex(Map<String, Pair<Long, Integer>> deviceMetadataIndex) {\n+  public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjc5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum ChildMetadataIndexType {\n          \n          \n            \n            public enum =MetadataIndexNodeType {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202796", "createdAt": "2020-04-26T03:28:06Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzA1MA==", "bodyText": "Internal_device, Leaf_device, Internal_Measurement, Leaf_Measurement\nGive examples of the four nodes in the javadoc of this class", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203050", "createdAt": "2020-04-26T03:29:45Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {\n+  DEVICE_INDEX, DEVICE, MEASUREMENT_INDEX, MEASUREMENT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzE5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class MetadataIndex {\n          \n          \n            \n            public class MetadataIndexNode {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203196", "createdAt": "2020-04-26T03:30:49Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwNDM4Mw==", "bodyText": "Actually this is a node of the tree index, so rename it to MetadataIndexNode or TsMetaIndexNode or TsIndexNode is better..", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415204383", "createdAt": "2020-04-26T03:38:20Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwOTUzOA==", "bodyText": "This is a bug, deviceMetaData offset may index to a metadataIndex node, not the first metadata offset.\nUse TsFileMetadata.getMetaOffset()", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415209538", "createdAt": "2020-04-26T04:12:19Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriter.java", "diffHunk": "@@ -129,9 +129,9 @@ public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFil\n       if (reader.isComplete()) {\n         reader.loadMetadataSize();\n         TsFileMetadata metaData = reader.readFileMetadata();\n-        for (Pair<Long, Integer> deviceMetaData : metaData.getDeviceMetadataIndex().values()) {\n-          if (position > deviceMetaData.left) {\n-            position = deviceMetaData.left;\n+        for (MetadataIndex deviceMetaData : metaData.getDeviceMetadataIndex()) {\n+          if (position > deviceMetaData.getOffset()) {\n+            position = deviceMetaData.getOffset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxNTkzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);\n          \n          \n            \n                          serializeEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415215938", "createdAt": "2020-04-26T04:55:36Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -304,22 +311,120 @@ public void endFile() throws IOException {\n       deviceTimeseriesMetadataMap.computeIfAbsent(device, k -> new ArrayList<>())\n           .add(timeseriesMetaData);\n     }\n-    // create DeviceMetaDataMap device -> Pair<TimeseriesMetaDataOffset, TimeseriesMetaDataLength> \n-    Map<String, Pair<Long, Integer>> deviceMetadataMap = new HashMap<>();\n+\n+    // create TsFileMetadata\n+    Map<String, Queue<MetadataIndex>> deviceMetadataIndexMap = new TreeMap<>();\n+    int maxNumOfIndexItems = config.getMaxNumberOfIndexItemsInNode();\n+\n+    // for timeseriesMetadata of each device\n     for (Map.Entry<String, List<TimeseriesMetadata>> entry : deviceTimeseriesMetadataMap\n         .entrySet()) {\n-      String device = entry.getKey();\n-      List<TimeseriesMetadata> timeseriesMetadataList = entry.getValue();\n-      long offsetOfFirstTimeseriesMetaDataInDevice = out.getPosition();\n-      int size = 0;\n-      for (TimeseriesMetadata timeseriesMetaData : timeseriesMetadataList) {\n-        size += timeseriesMetaData.serializeTo(out.wrapAsStream());\n+      if (entry.getValue().isEmpty()) {\n+        continue;\n+      }\n+      Queue<MetadataIndex> measurementMetadataIndexQueue = new ArrayDeque<>();\n+      TimeseriesMetadata timeseriesMetadata;\n+      for (int i = 0; i < entry.getValue().size(); i++) {\n+        timeseriesMetadata = entry.getValue().get(i);\n+        if (i % maxNumOfIndexItems == 0) {\n+          measurementMetadataIndexQueue\n+              .add(new MetadataIndex(timeseriesMetadata.getMeasurementId(), out.getPosition(),\n+                  ChildMetadataIndexType.MEASUREMENT));\n+        }\n+        timeseriesMetadata.serializeTo(out.wrapAsStream());\n+      }\n+      measurementMetadataIndexQueue\n+          .add(new MetadataIndex(\"\", out.getPosition(), ChildMetadataIndexType.MEASUREMENT));\n+\n+      int queueSize = measurementMetadataIndexQueue.size();\n+      MetadataIndex metadataIndex;\n+      while (queueSize > maxNumOfIndexItems) {\n+        for (int i = 0; i < queueSize; i++) {\n+          metadataIndex = measurementMetadataIndexQueue.poll();\n+          if (i % maxNumOfIndexItems == 0) {\n+            if (i != 0) {\n+              addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 160}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNDM3Mzcw", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-401437370", "createdAt": "2020-04-28T01:29:36Z", "commit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMToyOTozNlrOGM-lpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjoyMzozNlrOGM_qPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw==", "bodyText": "Now returns a MetadataIndexNode List, so please change the java doc too.\nAlso, since this method doesn't only flush ChunkMetadataList, I think we should give it a better name.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416261543", "createdAt": "2020-04-28T01:29:36Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3OTEwMw==", "bodyText": "Should we rename deviceMetaDataList to metadataIndexList?", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416279103", "createdAt": "2020-04-28T02:23:36Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -66,18 +64,15 @@\n   public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n     TsFileMetadata fileMetaData = new TsFileMetadata();\n \n-    // deviceMetadataIndex\n+    // metadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndexNode> deviceMetaDataList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cec4cc2210c0e6275457518abfa0504a5225a54", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/0cec4cc2210c0e6275457518abfa0504a5225a54", "committedDate": "2020-04-28T06:30:06Z", "message": "Merge master and fix some problems"}, "afterCommit": {"oid": "ced199e87c9e337db4a6e55a5a7b34134ccf3102", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/ced199e87c9e337db4a6e55a5a7b34134ccf3102", "committedDate": "2020-04-28T06:32:39Z", "message": "Merge master and fix some problems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNDU1NDY1", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-401455465", "createdAt": "2020-04-28T02:29:04Z", "commit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjoyOTowNVrOGM_w1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMzo1OTowMFrOGNBeyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MDc5MA==", "bodyText": "add a method getAllTimeseriesMetadata(), seek and IO all timeseriesMetadata once.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416280790", "createdAt": "2020-04-28T02:29:05Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -70,9 +64,9 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n     tsFileResource.setClosed(true);\n   }\n \n-  public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n+  public static void updateTsFileResource(TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    for (String device : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTcwMQ==", "bodyText": "readAllTimeseriesMetadata", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281701", "createdAt": "2020-04-28T02:31:56Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/TsFileRecoverPerformer.java", "diffHunk": "@@ -157,11 +156,7 @@ private void recoverResourceFromFile() throws IOException {\n   private void recoverResourceFromReader() throws IOException {\n     try (TsFileSequenceReader reader =\n         new TsFileSequenceReader(resource.getFile().getAbsolutePath(), false)) {\n-      TsFileMetadata fileMetadata = reader.readFileMetadata();\n-      \n-      Map<String, Pair<Long, Integer>> deviceMetaDataMap = fileMetadata.getDeviceMetadataIndex();\n-      for (Map.Entry<String, Pair<Long, Integer>>  entry: deviceMetaDataMap.entrySet()) {\n-        String deviceId = entry.getKey();\n+      for (String deviceId : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTkzMw==", "bodyText": "this should  be getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281933", "createdAt": "2020-04-28T02:32:52Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -62,7 +62,7 @@ object WideConverter extends Converter {\n   def getSeries(tsFileMetaData: TsFileMetadata, reader: TsFileSequenceReader): util.ArrayList[Series] = {\n     val series = new util.ArrayList[Series]()\n \n-    val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+    val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA2NA==", "bodyText": "getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282064", "createdAt": "2020-04-28T02:33:22Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -92,7 +92,7 @@ object WideConverter extends Converter {\n       val in = new HDFSInput(f.getPath, conf)\n       val reader = new TsFileSequenceReader(in)\n       val tsFileMetaData = reader.readFileMetadata\n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA4Nw==", "bodyText": "getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282087", "createdAt": "2020-04-28T02:33:30Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -133,7 +133,7 @@ object WideConverter extends Converter {\n     } else { // Remove nonexistent schema according to the current file's metadata.\n       // This may happen when queried TsFiles in the same folder do not have the same schema.\n \n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjI3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int maxDegreeOfIndexNode = 5;\n          \n          \n            \n              private int maxDegreeOfIndexNode = 1024;\n          \n      \n    \n    \n  \n\nonly set 5 in test", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282272", "createdAt": "2020-04-28T02:34:10Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxDegreeOfIndexNode = 5;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private MetadataIndexNodeType metadataIndexNodeType;\n          \n          \n            \n              // type of the child node at offset\n          \n          \n            \n              private MetadataIndexNodeType childNodeType;", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282600", "createdAt": "2020-04-28T02:35:18Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexNode.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.MetadataIndexNodeType;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class MetadataIndexNode {\n+\n+  private String name;\n+  private long offset;\n+  private MetadataIndexNodeType metadataIndexNodeType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDAwOA==", "bodyText": "use one byte is enough", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416284008", "createdAt": "2020-04-28T02:39:44Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum MetadataIndexNodeType {\n+  INTERNAL_DEVICE, LEAF_DEVICE, INTERNAL_MEASUREMENT, LEAF_MEASUREMENT;\n+\n+  /**\n+   * deserialize short number.\n+   *\n+   * @param i short number\n+   * @return MetadataIndexNodeType\n+   */\n+  public static MetadataIndexNodeType deserialize(short i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwODkzNg==", "bodyText": "flushMetadataIndex", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416308936", "createdAt": "2020-04-28T03:59:00Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -273,10 +278,11 @@ public void endFile() throws IOException {\n   }\n \n   /**\n-   * Flush ChunkMetadataList and TimeseriesMetaData\n-   * @return DeviceMetaDataMap in TsFileMetaData\n+   * Flush TsFileMetadata, including ChunkMetadataList and TimeseriesMetaData\n+   *\n+   * @return MetadataIndexNode list in TsFileMetadata\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushTsFileMetadata(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a7a77890fd83bc98bc21f5b523f3879c4c56b28"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzI1NDY5", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-402325469", "createdAt": "2020-04-29T02:03:49Z", "commit": {"oid": "36580164777c81dbd34668ce70a4ba23192a9989"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjowMzo0OVrOGNtWfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjowMzo0OVrOGNtWfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzcxMQ==", "bodyText": "I think we should line up this column.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417027711", "createdAt": "2020-04-29T02:03:49Z", "author": {"login": "HTHou"}, "path": "docs/SystemDesign/1-TsFile/2-Format.md", "diffHunk": "@@ -236,7 +236,7 @@ ByteBuffer[] statistics = [\n |              Member Description              |            Member Type             |\n | :------------------------------------------: | :--------------------------------: |\n |              Number of devices               |                int                 |\n-| Pairs of device name and deviceMetadataIndex | String, TsDeviceMetadataIndex pair |\n+| Pairs of device name and metadataIndex | String, TsDeviceMetadataIndex pair |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36580164777c81dbd34668ce70a4ba23192a9989"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69e1a7a6959c106674399fca9e4bc31a070d8d9e", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/69e1a7a6959c106674399fca9e4bc31a070d8d9e", "committedDate": "2020-04-29T09:04:03Z", "message": "TsFileMetadataIndex pro"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa5c35b0f2f8e44e4cae69c1987d1a8ce9543c76", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/fa5c35b0f2f8e44e4cae69c1987d1a8ce9543c76", "committedDate": "2020-04-29T09:04:03Z", "message": "Fix code sonar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "901fe1e23f6980bfad903558f4eb57f31b842743", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/901fe1e23f6980bfad903558f4eb57f31b842743", "committedDate": "2020-04-29T09:04:03Z", "message": "Fix some index building process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ee7841d15d69151de489d2e9743b7f2f0c24739", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/3ee7841d15d69151de489d2e9743b7f2f0c24739", "committedDate": "2020-04-29T09:04:03Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2e24ec02893447941f254f7bb1283b97c2eb6c", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/4a2e24ec02893447941f254f7bb1283b97c2eb6c", "committedDate": "2020-04-29T09:04:03Z", "message": "Update TsFileSequenceRead example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eecd03313f05f233dc8fd5de6cdfdc154ed35a23", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/eecd03313f05f233dc8fd5de6cdfdc154ed35a23", "committedDate": "2020-04-29T09:04:03Z", "message": "Rename some classes, methods and variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1183127c079fc565adacf3e9834ce250fd99a2c5", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/1183127c079fc565adacf3e9834ce250fd99a2c5", "committedDate": "2020-04-29T09:04:03Z", "message": "Do more optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bb340b715ac1f4bea4b0e1569363802f4fa867c", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/6bb340b715ac1f4bea4b0e1569363802f4fa867c", "committedDate": "2020-04-29T09:04:03Z", "message": "Fix RestorableTsFileIOWriter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe5b3b582d880dfdce5b1068e63b11a0df6f4db6", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/fe5b3b582d880dfdce5b1068e63b11a0df6f4db6", "committedDate": "2020-04-29T09:04:03Z", "message": "Update the time of inserting empty item in queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "316317e224c0d825cc5a8d298eeb08d28a8778d7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/316317e224c0d825cc5a8d298eeb08d28a8778d7", "committedDate": "2020-04-29T09:04:04Z", "message": "rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e302fb1b0f323f7d27e939ce484a3fc3bdf9633b", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/e302fb1b0f323f7d27e939ce484a3fc3bdf9633b", "committedDate": "2020-04-29T09:04:04Z", "message": "Fix review and update tsfile format-changelist.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91dec73463bc42bff11d3bfb29eec3a0ac48edc7", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/91dec73463bc42bff11d3bfb29eec3a0ac48edc7", "committedDate": "2020-04-29T09:04:04Z", "message": "Merge master and fix some problems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c511dce2c0ab6b6cdb5d211588269d783dc825cf", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/c511dce2c0ab6b6cdb5d211588269d783dc825cf", "committedDate": "2020-04-29T09:04:04Z", "message": "Implement in a new way by adding MetadataIndexEntry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54aaf1f558685984bcc357de3800038c38f4629e", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/54aaf1f558685984bcc357de3800038c38f4629e", "committedDate": "2020-04-29T09:04:04Z", "message": "Fix code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abc842dd39697f9574b0d78bd9330bc2d64f9ea3", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/abc842dd39697f9574b0d78bd9330bc2d64f9ea3", "committedDate": "2020-04-29T09:04:04Z", "message": "Fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e543c97d0451d9f98d9c30981edb7d0856d3e77", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/4e543c97d0451d9f98d9c30981edb7d0856d3e77", "committedDate": "2020-04-29T09:04:04Z", "message": "Fix code smells and refactor codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1ca6f006b1e44acced477e0448753f9318b4af6", "author": {"user": {"login": "EJTTianYu", "name": "gwmh"}}, "url": "https://github.com/apache/iotdb/commit/b1ca6f006b1e44acced477e0448753f9318b4af6", "committedDate": "2020-04-29T09:04:04Z", "message": "fix bug if ts path does not exist in the tsfile"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cf5a10ff2e2712b77ffd1722b64d382ab60c374", "author": {"user": {"login": "EJTTianYu", "name": "gwmh"}}, "url": "https://github.com/apache/iotdb/commit/6cf5a10ff2e2712b77ffd1722b64d382ab60c374", "committedDate": "2020-04-29T07:36:26Z", "message": "fix bug if ts path does not exist in the tsfile"}, "afterCommit": {"oid": "b1ca6f006b1e44acced477e0448753f9318b4af6", "author": {"user": {"login": "EJTTianYu", "name": "gwmh"}}, "url": "https://github.com/apache/iotdb/commit/b1ca6f006b1e44acced477e0448753f9318b4af6", "committedDate": "2020-04-29T09:04:04Z", "message": "fix bug if ts path does not exist in the tsfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c31dc40ec89c3613ae60b11baf45d331bb11d23", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/6c31dc40ec89c3613ae60b11baf45d331bb11d23", "committedDate": "2020-04-29T09:27:38Z", "message": "Add javadoc and fix query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a523e4afd16dcf14f7b87dc346a82d766d497df6", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/a523e4afd16dcf14f7b87dc346a82d766d497df6", "committedDate": "2020-04-29T12:10:44Z", "message": "Optimize query logic and add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/8c542d5ea0ea6b470bc6c7733b95e89ebc88843f", "committedDate": "2020-04-29T13:30:26Z", "message": "Fix code sonar"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODY3NzYx", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-402867761", "createdAt": "2020-04-29T17:06:54Z", "commit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNjo1NFrOGOIlcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNzo1NlrOGOIoEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzkwNQ==", "bodyText": "estimated size of metadataIndex entry in TsFileMetaData.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417473905", "createdAt": "2020-04-29T17:06:54Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDU3Nw==", "bodyText": "// metadataIndex", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417474577", "createdAt": "2020-04-29T17:07:56Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.\n    */\n-  private long deviceIndexMapEntrySize = 0;\n+  private long metadataIndexEntrySize = 0;\n \n   private TsFileMetaDataCache() {\n     logger.info(\"TsFileMetaDataCache size = \" + MEMORY_THRESHOLD_IN_B);\n     cache = new LRULinkedHashMap<String, TsFileMetadata>(MEMORY_THRESHOLD_IN_B, true) {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n-        if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n-          deviceIndexMapEntrySize = RamUsageEstimator\n-              .sizeOf(value.getDeviceMetadataIndex().entrySet().iterator().next());\n+        if (metadataIndexEntrySize == 0 && value.getMetadataIndex() != null\n+            && !value.getMetadataIndex().getChildren().isEmpty()) {\n+          metadataIndexEntrySize = RamUsageEstimator\n+              .sizeOf(value.getMetadataIndex().getChildren().iterator().next());\n         }\n         // totalChunkNum, invalidChunkNum\n         long valueSize = 4 + 4L;\n \n         // deviceMetadataIndex\n-        if (value.getDeviceMetadataIndex() != null) {\n-          valueSize += value.getDeviceMetadataIndex().size() * deviceIndexMapEntrySize;\n+        if (value.getMetadataIndex() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e2a0606cfef7457ff80a90033cc3e96ae83d382", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/2e2a0606cfef7457ff80a90033cc3e96ae83d382", "committedDate": "2020-04-30T00:41:21Z", "message": "Rename some deviceMetadata -> metadataIndex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a86323e37d996f59b1d69f4baba9ecd758ebe6", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/49a86323e37d996f59b1d69f4baba9ecd758ebe6", "committedDate": "2020-04-30T02:32:01Z", "message": "Rename function"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTY4NTQx", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-403168541", "createdAt": "2020-04-30T02:49:14Z", "commit": {"oid": "49a86323e37d996f59b1d69f4baba9ecd758ebe6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTY5NTEz", "url": "https://github.com/apache/iotdb/pull/1100#pullrequestreview-403169513", "createdAt": "2020-04-30T02:52:55Z", "commit": {"oid": "49a86323e37d996f59b1d69f4baba9ecd758ebe6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2981, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}