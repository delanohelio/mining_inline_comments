{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMjM1ODg2", "number": 855, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDowMzo0M1rODlXCNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMToyMjoxNFrODlYqnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTAxMzAyOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDowMzo0M1rOFyNS7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMDowMzo0M1rOFyNS7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE5MDk1OA==", "bodyText": "Repeat merge the statistics information", "url": "https://github.com/apache/iotdb/pull/855#discussion_r388190958", "createdAt": "2020-03-05T10:03:43Z", "author": {"login": "liutaohua"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -261,64 +264,55 @@ public void endFile(Schema schema) throws IOException {\n       resourceLogger.info(\"{} writer is closed.\", file.getName());\n     }\n     canWrite = false;\n+    chunkMetadataListMap = new TreeMap<>();\n     logger.info(\"output stream is closed\");\n   }\n \n   /**\n-   * 1. group chunkGroupMetaDataList to TsDeviceMetadata 2. flush TsDeviceMetadata 3. get\n-   * TsDeviceMetadataIndex\n-   *\n-   * @param chunkGroupMetaDataList all chunk group metadata in memory\n-   * @return TsDeviceMetadataIndex in TsFileMetaData\n+   * Flush ChunkMetadataList and TimeseriesMetaData\n+   * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, TsDeviceMetadataIndex> flushTsDeviceMetaDataAndGetIndex(\n-      List<ChunkGroupMetaData> chunkGroupMetaDataList) throws IOException {\n-\n-    Map<String, TsDeviceMetadataIndex> tsDeviceMetadataIndexMap = new HashMap<>();\n-\n-    long offset; /* offset for the flushing TsDeviceMetadata */\n-\n-    TsDeviceMetadata currentTsDeviceMetadata;\n-\n-    // flush TsDeviceMetadata by string order of deviceId\n-    for (Map.Entry<String, TsDeviceMetadata> entry : getAllTsDeviceMetadata(chunkGroupMetaDataList)\n-        .entrySet()) {\n-      // update statistics in TsDeviceMetadata\n-      currentTsDeviceMetadata = entry.getValue();\n-\n-      // flush tsChunkGroupBlockMetaData\n-      offset = out.getPosition();\n-      int size = currentTsDeviceMetadata.serializeTo(out.wrapAsStream());\n-\n-      TsDeviceMetadataIndex tsDeviceMetadataIndex = new TsDeviceMetadataIndex(offset, size,\n-          currentTsDeviceMetadata);\n-      tsDeviceMetadataIndexMap.put(entry.getKey(), tsDeviceMetadataIndex);\n+  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList() throws IOException {\n+\n+    // convert ChunkMetadataList to this field\n+    Map<String, List<TimeseriesMetaData>> deviceTimeseriesMetadataMap = new LinkedHashMap<>();\n+    // create device -> TimeseriesMetaDataList Map\n+    for (Map.Entry<Path, List<ChunkMetaData>> entry : chunkMetadataListMap.entrySet()) {\n+      Path path = entry.getKey();\n+      String deviceId = path.getDevice();\n+      // create TimeseriesMetaData\n+      TimeseriesMetaData timeseriesMetaData = new TimeseriesMetaData();\n+      timeseriesMetaData.setMeasurementId(path.getMeasurement());\n+      timeseriesMetaData.setTSDataType(entry.getValue().get(0).getDataType());\n+      timeseriesMetaData.setOffsetOfChunkMetaDataList(out.getPosition());\n+      Statistics<?> statistics = entry.getValue().get(0).getStatistics();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3be5f8b6d3774424b4cb9a966ddcd3a4b8e3a4"}, "originalPosition": 281}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNTI4MDMxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMToyMjoxNFrOFyP0sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxMToyMjoxNFrOFyP0sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODIzMjM3MA==", "bodyText": "why need to reapply memory here?", "url": "https://github.com/apache/iotdb/pull/855#discussion_r388232370", "createdAt": "2020-03-05T11:22:14Z", "author": {"login": "liutaohua"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -261,64 +264,55 @@ public void endFile(Schema schema) throws IOException {\n       resourceLogger.info(\"{} writer is closed.\", file.getName());\n     }\n     canWrite = false;\n+    chunkMetadataListMap = new TreeMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af3be5f8b6d3774424b4cb9a966ddcd3a4b8e3a4"}, "originalPosition": 233}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 253, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}