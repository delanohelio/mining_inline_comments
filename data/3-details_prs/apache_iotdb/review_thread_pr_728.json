{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjk3ODY4", "number": 728, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMToxNzo1NFrODXWkcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMToxNzo1NFrODXWkcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODEzNjE3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMToxNzo1NFrOFcneAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQwMzozNjo1NVrOFcnu6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw==", "bodyText": "Why not merge this if(printTimestamp) into next?", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365551107", "createdAt": "2020-01-12T01:17:54Z", "author": {"login": "JackieTien97"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MjIyNg==", "bodyText": "And I try your version, it seems that you didn't fix the \"show storage group\" problem. It still show the error message.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365552226", "createdAt": "2020-01-12T01:51:44Z", "author": {"login": "JackieTien97"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1Mjg4MQ==", "bodyText": "And I try your version, it seems that you didn't fix the \"show storage group\" problem. It still show the error message.\n\nThe problem has been fixed. Perhaps you need to recompile the project.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365552881", "createdAt": "2020-01-12T02:14:58Z", "author": {"login": "SolomonAnn"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzExMA==", "bodyText": "Sorry for that, I try it again and it really works.\nAnd you can split the printBlockLine function into two functions.\nBecause, the logic in that function is completely split by the printTimestamp.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365553110", "createdAt": "2020-01-12T02:21:58Z", "author": {"login": "JackieTien97"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzEyNQ==", "bodyText": "The \"create timeseries\" statement with the \"compression\" argument can't still print successfully.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365553125", "createdAt": "2020-01-12T02:22:58Z", "author": {"login": "SolomonAnn"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MzIxOQ==", "bodyText": "it can create successfully, but it does the wrong thing, I think we should choose one bewteen syntax compression and compressor.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365553219", "createdAt": "2020-01-12T02:25:44Z", "author": {"login": "JackieTien97"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1NTQzNQ==", "bodyText": "Compression is a wrong syntax, the wrong syntax doesn't mean it gives an error message. Instead, It is identified as a normal property instead of \"compression\" and doesn't influence anything. So if you use create timeseries root.sg1.d2.s1 with datatype=INT64, encoding=RLE, compression=SNAPPY;, root.sg1.d2.s1 will use UNCOMPRESSED.", "url": "https://github.com/apache/iotdb/pull/728#discussion_r365555435", "createdAt": "2020-01-12T03:36:55Z", "author": {"login": "Genius-pig"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -478,15 +478,17 @@ private static void printBlockLine(boolean printTimestamp, int colCount,\n     } else {\n       blockLine.append(\"+\");\n     }\n-    if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n-      maxValueLength = measurementColumnLength;\n-    } else {\n-      int tmp = Integer.MIN_VALUE;\n-      for (int i = 1; i <= colCount; i++) {\n-        int len = resultSetMetaData.getColumnLabel(i).length();\n-        tmp = Math.max(tmp, len);\n+    if(printTimestamp) {\n+      if (resultSetMetaData.getColumnName(2).equals(GROUPBY_DEVICE_COLUMN_NAME)) {\n+        maxValueLength = measurementColumnLength;\n+      } else {\n+        int tmp = Integer.MIN_VALUE;\n+        for (int i = 1; i <= colCount; i++) {\n+          int len = resultSetMetaData.getColumnLabel(i).length();\n+          tmp = Math.max(tmp, len);\n+        }\n+        maxValueLength = tmp;\n       }\n-      maxValueLength = tmp;\n     }\n     if(printTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTU1MTEwNw=="}, "originalCommit": {"oid": "2c671e4f0da52237720d40974f19b6d6f19d01ef"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 342, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}