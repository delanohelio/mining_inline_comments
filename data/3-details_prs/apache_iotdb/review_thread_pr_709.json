{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NTUyMTMx", "number": 709, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzo0OFrODWLfdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzo0OFrODWLfdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NTgzNTQzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/ChunkWriterImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QwODoyNzo0OFrOFaynXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wN1QxNzowODoxNVrOFa_09Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjU3Mg==", "bodyText": "Is this check necessary?", "url": "https://github.com/apache/iotdb/pull/709#discussion_r363636572", "createdAt": "2020-01-07T08:27:48Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/ChunkWriterImpl.java", "diffHunk": "@@ -231,6 +231,9 @@ public long estimateMaxSeriesMemSize() {\n \n   @Override\n   public long getCurrentChunkSize() {\n+    if (this.getCurrentDataSize() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "661d27bc06ffaec7f776b9921df1f6838c04d925"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzY0Njk1NA==", "bodyText": "You may save the calculation result and use it in line238 to avoid duplicated calculation.\nAnd if all chunks in a chunk group are empty, this chunk group should not be flushed into the file, which will generate an empty ChunkGroupMetadata and waste some space.", "url": "https://github.com/apache/iotdb/pull/709#discussion_r363646954", "createdAt": "2020-01-07T08:57:32Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/ChunkWriterImpl.java", "diffHunk": "@@ -231,6 +231,9 @@ public long estimateMaxSeriesMemSize() {\n \n   @Override\n   public long getCurrentChunkSize() {\n+    if (this.getCurrentDataSize() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjU3Mg=="}, "originalCommit": {"oid": "661d27bc06ffaec7f776b9921df1f6838c04d925"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1MzA0NQ==", "bodyText": "this.getCurrentDataSize() actually is pageBuffer.size() while pageBuffer call outputstream.count.\nTherefore, I remove getCurrentDataSize() and use pageBuffer.size() instead.\n@qiaojialin , yes I think so.\nNo matter whether you check the serialized size in flushAll... method, this method is needed and should check the data size here.", "url": "https://github.com/apache/iotdb/pull/709#discussion_r363853045", "createdAt": "2020-01-07T17:08:15Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/ChunkWriterImpl.java", "diffHunk": "@@ -231,6 +231,9 @@ public long estimateMaxSeriesMemSize() {\n \n   @Override\n   public long getCurrentChunkSize() {\n+    if (this.getCurrentDataSize() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzYzNjU3Mg=="}, "originalCommit": {"oid": "661d27bc06ffaec7f776b9921df1f6838c04d925"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 318, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}