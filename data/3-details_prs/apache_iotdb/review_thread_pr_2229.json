{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTM0NjI4", "number": 2229, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzoxOTowNFrOFCxQSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzoxOTowNFrOFCxQSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NDQ4NDU3OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBLastIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzoxOTowNFrOICF39g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNzo0Njo0NVrOICGtdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NDMxMA==", "bodyText": "how about select two timeseries in a sql, while one time series has not data and another one has data.", "url": "https://github.com/apache/iotdb/pull/2229#discussion_r539064310", "createdAt": "2020-12-09T07:19:04Z", "author": {"login": "jixuan1989"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBLastIT.java", "diffHunk": "@@ -103,6 +100,30 @@ public void tearDown() throws Exception {\n     EnvironmentUtils.cleanEnv();\n   }\n \n+  @Test\n+  public void lastWithEmptySeriesTest() throws Exception {\n+    String[] retArray = new String[]{\n+            \"root.ln.wf02.temperature,null\",\n+        };\n+\n+    try (Connection connection =\n+             DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n+         Statement statement = connection.createStatement()) {\n+\n+      statement.execute(\n+          \"CREATE TIMESERIES root.ln.wf02.temperature WITH DATATYPE=DOUBLE, ENCODING=PLAIN\");\n+      statement.execute(\"select last temperature from root.ln.wf02\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d5958d1b5f67f85e6d76c8044fe0b3921b8fe46"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3ODAwNQ==", "bodyText": "could add one more test for this", "url": "https://github.com/apache/iotdb/pull/2229#discussion_r539078005", "createdAt": "2020-12-09T07:46:45Z", "author": {"login": "qiaojialin"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBLastIT.java", "diffHunk": "@@ -103,6 +100,30 @@ public void tearDown() throws Exception {\n     EnvironmentUtils.cleanEnv();\n   }\n \n+  @Test\n+  public void lastWithEmptySeriesTest() throws Exception {\n+    String[] retArray = new String[]{\n+            \"root.ln.wf02.temperature,null\",\n+        };\n+\n+    try (Connection connection =\n+             DriverManager.getConnection(\"jdbc:iotdb://127.0.0.1:6667/\", \"root\", \"root\");\n+         Statement statement = connection.createStatement()) {\n+\n+      statement.execute(\n+          \"CREATE TIMESERIES root.ln.wf02.temperature WITH DATATYPE=DOUBLE, ENCODING=PLAIN\");\n+      statement.execute(\"select last temperature from root.ln.wf02\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA2NDMxMA=="}, "originalCommit": {"oid": "8d5958d1b5f67f85e6d76c8044fe0b3921b8fe46"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 535, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}