{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5OTYzNzYy", "number": 838, "title": "[IOTDB-429] return empty dataset instead of throw exception", "bodyText": "", "createdAt": "2020-02-26T02:08:44Z", "url": "https://github.com/apache/iotdb/pull/838", "merged": true, "mergeCommit": {"oid": "bcd6c22a96c21725c85c18bce862c49ca15b2593"}, "closed": true, "closedAt": "2020-02-27T05:46:45Z", "author": {"login": "qiaojialin"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH9AEPAH2gAyMzc5OTYzNzYyOjE0MDgyN2Q2NjFiN2NhMTUzZjkyMDU2NzY4OGFjMDkzNmIwMDNjMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIR3_QgFqTM2NTM3NzQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "140827d661b7ca153f920567688ac0936b003c27", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/140827d661b7ca153f920567688ac0936b003c27", "committedDate": "2020-02-26T02:07:50Z", "message": "return empty dataset instead of throw exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db1fa5ac466fa284e572db1dd34065f73e446b42", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/db1fa5ac466fa284e572db1dd34065f73e446b42", "committedDate": "2020-02-26T02:13:04Z", "message": "add header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5467c92b884cb21fed2cfd4e63913f67e167940", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/d5467c92b884cb21fed2cfd4e63913f67e167940", "committedDate": "2020-02-26T04:12:51Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c65a696eef2a43456cee2d4ae1f504e2df1780b7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c65a696eef2a43456cee2d4ae1f504e2df1780b7", "committedDate": "2020-02-26T05:40:11Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae560a9cf4fa10c07bcaa9b356254d6515834193", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ae560a9cf4fa10c07bcaa9b356254d6515834193", "committedDate": "2020-02-26T05:40:32Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4627079207cce1d15f182b60ea74cd5e32479df1", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/4627079207cce1d15f182b60ea74cd5e32479df1", "committedDate": "2020-02-26T06:51:05Z", "message": "fix align by device"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbf9d6f7c89dd6471b7cc77fe60e9cbc0b09191c", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/cbf9d6f7c89dd6471b7cc77fe60e9cbc0b09191c", "committedDate": "2020-02-26T06:56:50Z", "message": "fix align by device"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a56942d8819ea8663ee9ddb79c3e6ed033105bff", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/a56942d8819ea8663ee9ddb79c3e6ed033105bff", "committedDate": "2020-02-26T06:57:05Z", "message": "fix align by device"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2ea5601fc405829a745585ef70c6ae81c940fb9d", "committedDate": "2020-02-26T07:06:31Z", "message": "fix align by device"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzYyNTcw", "url": "https://github.com/apache/iotdb/pull/838#pullrequestreview-365362570", "createdAt": "2020-02-27T01:35:11Z", "commit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzU4ODY5", "url": "https://github.com/apache/iotdb/pull/838#pullrequestreview-365358869", "createdAt": "2020-02-27T01:22:54Z", "commit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMjo1NFrOFvCQNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTozNDo1N1rOFvCcjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDMxMQ==", "bodyText": "What if columnInfoList is null? I think you can return 0 if it is null.", "url": "https://github.com/apache/iotdb/pull/838#discussion_r384864311", "createdAt": "2020-02-27T01:22:54Z", "author": {"login": "JackieTien97"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBResultMetadata.java", "diffHunk": "@@ -59,10 +59,7 @@ public String getColumnClassName(int arg0) throws SQLException {\n   }\n \n   @Override\n-  public int getColumnCount() throws SQLException {\n-    if (columnInfoList == null || columnInfoList.isEmpty()) {\n-      throw new SQLException(\"No column exists\");\n-    }\n+  public int getColumnCount() {\n     return columnInfoList.size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDcwNQ==", "bodyText": "If you also return 0 when it's null, like I suggested above, don't forget to change assert here.", "url": "https://github.com/apache/iotdb/pull/838#discussion_r384864705", "createdAt": "2020-02-27T01:24:23Z", "author": {"login": "JackieTien97"}, "path": "jdbc/src/test/java/org/apache/iotdb/jdbc/IoTDBResultMetadataTest.java", "diffHunk": "@@ -120,7 +124,7 @@ public void testGetColumnType() throws SQLException {\n     } catch (Exception e) {\n       flag = true;\n     }\n-    assertEquals(flag, true);\n+    assertTrue(flag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTg3Mw==", "bodyText": "The comment here should be has an empty time column and device column", "url": "https://github.com/apache/iotdb/pull/838#discussion_r384865873", "createdAt": "2020-02-27T01:28:56Z", "author": {"login": "JackieTien97"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBSimpleQueryTest.java", "diffHunk": "@@ -41,6 +44,62 @@ public void tearDown() throws Exception {\n     EnvironmentUtils.cleanEnv();\n   }\n \n+  @Test\n+  public void testEmptyDataSet() throws SQLException, ClassNotFoundException {\n+    Class.forName(Config.JDBC_DRIVER_NAME);\n+    try(Connection connection = DriverManager\n+        .getConnection(Config.IOTDB_URL_PREFIX + \"127.0.0.1:6667/\", \"root\", \"root\");\n+        Statement statement = connection.createStatement()){\n+\n+      ResultSet resultSet = statement.executeQuery(\"select * from root\");\n+      // has an empty time column\n+      Assert.assertEquals(1, resultSet.getMetaData().getColumnCount());\n+      while(resultSet.next()) {\n+        fail();\n+      }\n+\n+      resultSet = statement.executeQuery(\n+          \"select count(*) from root where time >= 1 and time <= 100 group by ([0, 100), 20ms, 20ms)\");\n+      // has an empty time column\n+      Assert.assertEquals(1, resultSet.getMetaData().getColumnCount());\n+      while (resultSet.next()) {\n+        fail();\n+      }\n+\n+      resultSet = statement.executeQuery(\"select count(*) from root\");\n+      // has no column\n+      Assert.assertEquals(0, resultSet.getMetaData().getColumnCount());\n+      while(resultSet.next()) {\n+        fail();\n+      }\n+\n+      resultSet = statement.executeQuery(\"select * from root align by device\");\n+      // has time and device columns\n+      Assert.assertEquals(2, resultSet.getMetaData().getColumnCount());\n+      while(resultSet.next()) {\n+        fail();\n+      }\n+\n+      resultSet = statement.executeQuery(\"select count(*) from root align by device\");\n+      // has device column\n+      Assert.assertEquals(1, resultSet.getMetaData().getColumnCount());\n+      while(resultSet.next()) {\n+        fail();\n+      }\n+\n+      resultSet = statement.executeQuery(\n+          \"select count(*) from root where time >= 1 and time <= 100 \"\n+              + \"group by ([0, 100), 20ms, 20ms) align by device\");\n+      // has an empty time column\n+      Assert.assertEquals(2, resultSet.getMetaData().getColumnCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NzEzOQ==", "bodyText": "No need to do this change, the limit and offset are ignored in group by.", "url": "https://github.com/apache/iotdb/pull/838#discussion_r384867139", "createdAt": "2020-02-27T01:33:27Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -228,9 +229,12 @@ private QueryDataSet processDataQuery(QueryPlan queryPlan, QueryContext context)\n     if (queryPlan instanceof AlignByDevicePlan) {\n       queryDataSet = new AlignByDeviceDataSet((AlignByDevicePlan) queryPlan, context, queryRouter);\n     } else {\n-      if (queryPlan instanceof GroupByPlan) {\n+      if (queryPlan.getPaths() == null || queryPlan.getPaths().isEmpty()) {\n+        // no time series are selected, return EmptyDataSet\n+        return new EmptyDataSet();\n+      } else if (queryPlan instanceof GroupByPlan) {\n         GroupByPlan groupByPlan = (GroupByPlan) queryPlan;\n-        return queryRouter.groupBy(groupByPlan, context);\n+        queryDataSet =  queryRouter.groupBy(groupByPlan, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NzQ3MQ==", "bodyText": "Or you can add a JIRA to report this, actually in syntax, we support limit and offset in group by, but we just ignore these two in the code.", "url": "https://github.com/apache/iotdb/pull/838#discussion_r384867471", "createdAt": "2020-02-27T01:34:57Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -228,9 +229,12 @@ private QueryDataSet processDataQuery(QueryPlan queryPlan, QueryContext context)\n     if (queryPlan instanceof AlignByDevicePlan) {\n       queryDataSet = new AlignByDeviceDataSet((AlignByDevicePlan) queryPlan, context, queryRouter);\n     } else {\n-      if (queryPlan instanceof GroupByPlan) {\n+      if (queryPlan.getPaths() == null || queryPlan.getPaths().isEmpty()) {\n+        // no time series are selected, return EmptyDataSet\n+        return new EmptyDataSet();\n+      } else if (queryPlan instanceof GroupByPlan) {\n         GroupByPlan groupByPlan = (GroupByPlan) queryPlan;\n-        return queryRouter.groupBy(groupByPlan, context);\n+        queryDataSet =  queryRouter.groupBy(groupByPlan, context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NzEzOQ=="}, "originalCommit": {"oid": "2ea5601fc405829a745585ef70c6ae81c940fb9d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6cfe88b4767ca0e9b9e7a173d37156f2ba04200", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c6cfe88b4767ca0e9b9e7a173d37156f2ba04200", "committedDate": "2020-02-27T02:12:20Z", "message": "fix review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1Mzc3NDkz", "url": "https://github.com/apache/iotdb/pull/838#pullrequestreview-365377493", "createdAt": "2020-02-27T02:27:01Z", "commit": {"oid": "c6cfe88b4767ca0e9b9e7a173d37156f2ba04200"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3114, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}