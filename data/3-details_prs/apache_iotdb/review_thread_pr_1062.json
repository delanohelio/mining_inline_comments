{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MzYxNDU4", "number": 1062, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo0MzoxNFrODygi0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo0MzoxNFrODygi0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mjg4NTk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/fill/PreviousFill.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo0MzoxNFrOGGl78A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo0MzoxNFrOGGl78A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU2NjE5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    && (lBoundTime <= unseqFileResource.peek().getEndTimeMap().get(seriesPath.getDevice())))\n          \n          \n            \n                {\n          \n          \n            \n                    && (lBoundTime <= unseqFileResource.peek().getEndTimeMap().get(seriesPath.getDevice()))) {", "url": "https://github.com/apache/iotdb/pull/1062#discussion_r409566192", "createdAt": "2020-04-16T13:43:14Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/fill/PreviousFill.java", "diffHunk": "@@ -172,36 +171,24 @@ private void UnpackOverlappedUnseqFiles(long lBoundTime) throws IOException {\n     PriorityQueue<TsFileResource> unseqFileResource =\n         sortUnSeqFileResourcesInDecendingOrder(dataSource.getUnseqResources());\n \n-    while (!unseqFileResource.isEmpty()) {\n-      // The very end time of unseq files is smaller than lBoundTime,\n-      // then skip all the rest unseq files\n-      if (unseqFileResource.peek().getEndTimeMap().get(seriesPath.getDevice()) < lBoundTime) {\n-        return;\n-      }\n-      TimeseriesMetadata timeseriesMetadata =\n-          FileLoaderUtils.loadTimeSeriesMetadata(\n-              unseqFileResource.poll(), seriesPath, context, timeFilter, allSensors);\n-      if (timeseriesMetadata != null && timeseriesMetadata.getStatistics().canUseStatistics()\n-          && lBoundTime <= timeseriesMetadata.getStatistics().getEndTime()) {\n-        // The last timeseriesMetadata will be used as a pivot to filter the rest unseq files.\n-        // Update lBoundTime with the last timeseriesMetadata's start time\n-        lBoundTime = Math.max(lBoundTime, timeseriesMetadata.getStatistics().getStartTime());\n-        unseqTimeseriesMetadataList.add(timeseriesMetadata);\n-        break;\n-      }\n-    }\n-\n-    // unpack all overlapped unseq files and fill unseqTimeseriesMetadata list\n     while (!unseqFileResource.isEmpty()\n-        && (lBoundTime <= unseqFileResource.peek().getEndTimeMap().get(seriesPath.getDevice()))) {\n+        && (lBoundTime <= unseqFileResource.peek().getEndTimeMap().get(seriesPath.getDevice())))\n+    {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5a98b28b0d73461363dcdd003ffa29f2be2761"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 61, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}