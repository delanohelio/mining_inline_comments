{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NTcxMzQ5", "number": 1311, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjoyNjo1OVrOECa93w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjoyNjo1OVrOECa93w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTc0NDMxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNjoyNjo1OVrOGe3c8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwNzo0MDoyOFrOGe5kWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODk5NQ==", "bodyText": "no need", "url": "https://github.com/apache/iotdb/pull/1311#discussion_r435018995", "createdAt": "2020-06-04T06:26:59Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -692,6 +692,20 @@ public String getStorageGroupName(String path) throws MetadataException {\n     }\n   }\n \n+  /**\n+   * To calculate the count of timeseries for given prefix path.\n+   */\n+  public int getAllTimeseriesCount(String prefixPath) throws MetadataException {\n+    lock.readLock().lock();\n+    try {\n+      return mtree.getAllTimeseriesCount(prefixPath);\n+    } catch (MetadataException e) {\n+      throw new MetadataException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ce8bf6f18d90b33b66b8f42c42be11b914cf4d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTA1MzY1OA==", "bodyText": "Fixed.", "url": "https://github.com/apache/iotdb/pull/1311#discussion_r435053658", "createdAt": "2020-06-04T07:40:28Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -692,6 +692,20 @@ public String getStorageGroupName(String path) throws MetadataException {\n     }\n   }\n \n+  /**\n+   * To calculate the count of timeseries for given prefix path.\n+   */\n+  public int getAllTimeseriesCount(String prefixPath) throws MetadataException {\n+    lock.readLock().lock();\n+    try {\n+      return mtree.getAllTimeseriesCount(prefixPath);\n+    } catch (MetadataException e) {\n+      throw new MetadataException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTAxODk5NQ=="}, "originalCommit": {"oid": "35ce8bf6f18d90b33b66b8f42c42be11b914cf4d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4911, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}