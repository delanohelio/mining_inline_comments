{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDk5MzU5", "number": 1824, "title": "[IOTDB-942] Optimization of query with long time unsequence page", "bodyText": "", "createdAt": "2020-10-13T08:32:51Z", "url": "https://github.com/apache/iotdb/pull/1824", "merged": true, "mergeCommit": {"oid": "f352932dfeb1daa2d9213b9e7064156d6d26e987"}, "closed": true, "closedAt": "2020-10-21T02:22:46Z", "author": {"login": "Alima777"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQhVIHAH2gAyNTAyMDk5MzU5OjdjZTNjOWNkODEzODk0YTM2ZWQ2YWNjODYwNjcwODBiNWIwOTAzNmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUjtoDAFqTUxMzI1NzM1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ce3c9cd813894a36ed6acc86067080b5b09036c", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/7ce3c9cd813894a36ed6acc86067080b5b09036c", "committedDate": "2020-10-08T13:09:58Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9770de8de06e3dfb2cddf870a128589a85474e2b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/9770de8de06e3dfb2cddf870a128589a85474e2b", "committedDate": "2020-10-10T02:26:22Z", "message": "add some todo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "847b2c341a84f0cc637e922f8aba21df005e49c2", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/847b2c341a84f0cc637e922f8aba21df005e49c2", "committedDate": "2020-10-13T06:29:24Z", "message": "implement function of ascending"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffc52308b6f49ad6fa9f4dcb67bcf1efb3ac88f1", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/ffc52308b6f49ad6fa9f4dcb67bcf1efb3ac88f1", "committedDate": "2020-10-13T08:41:28Z", "message": "Merge branch 'UnseqImprove' of github.com:Alima777/incubator-iotdb into UnseqImprove"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53fb90f4f200eed00f78cbc6ced000c9955d326e", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/53fb90f4f200eed00f78cbc6ced000c9955d326e", "committedDate": "2020-10-13T11:44:41Z", "message": "implement desc part"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fbb3554c7e8764f51d0111ccd067619f811356b", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/8fbb3554c7e8764f51d0111ccd067619f811356b", "committedDate": "2020-10-13T13:59:02Z", "message": "mark the bug position"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f239f0ba0aa1673fa3204f594736f55975781427", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/f239f0ba0aa1673fa3204f594736f55975781427", "committedDate": "2020-10-14T02:28:03Z", "message": "Merge branch 'UnseqImprove' of github.com:Alima777/incubator-iotdb into UnseqImprove"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "795cb1c482ebba7ba7f6d01e2ab46b6a10cfac99", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/795cb1c482ebba7ba7f6d01e2ab46b6a10cfac99", "committedDate": "2020-10-14T08:21:33Z", "message": "fix bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/5a4a1a91e8514813c05b5a6bfe3cbf582eed4933", "committedDate": "2020-10-14T08:37:29Z", "message": "update currentPageEndPointTime"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMzc3MzE2", "url": "https://github.com/apache/iotdb/pull/1824#pullrequestreview-511377316", "createdAt": "2020-10-19T02:37:39Z", "commit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNDI3NjU2", "url": "https://github.com/apache/iotdb/pull/1824#pullrequestreview-511427656", "createdAt": "2020-10-19T05:50:25Z", "commit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNTo1MDoyNVrOHj-Wsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNjoxMDoxOFrOHj-11A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4MzgyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (seqStatistics.getStartTime() < unseqStatistics.getStartTime()) {\n          \n          \n            \n                    return true;\n          \n          \n            \n                  }\n          \n          \n            \n                  return false;\n          \n          \n            \n                 return seqStatistics.getStartTime() < unseqStatistics.getStartTime());", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507483827", "createdAt": "2020-10-19T05:50:25Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -931,11 +1043,31 @@ public TsFileResource getNextSeqFileResource(List<TsFileResource> seqResources,\n           (c1, c2) -> Long.compare(keyExtractor.applyAsLong(c1), keyExtractor.applyAsLong(c2));\n     }\n \n+    @Override\n+    public long getCurrentEndPoint(long time, Statistics<? extends Object> statistics) {\n+      return Math.min(time, statistics.getEndTime());\n+    }\n+\n+    @Override\n+    public long getCurrentEndPoint(Statistics<? extends Object> seqStatistics,\n+        Statistics<? extends Object> unseqStatistics) {\n+      return Math.min(seqStatistics.getEndTime(), unseqStatistics.getEndTime());\n+    }\n+\n     @Override\n     public boolean isExcessEndpoint(long time, long endpointTime) {\n       return time > endpointTime;\n     }\n \n+    @Override\n+    public boolean isTakeSeqAsFirst(Statistics<? extends Object> seqStatistics,\n+        Statistics<? extends Object> unseqStatistics) {\n+      if (seqStatistics.getStartTime() < unseqStatistics.getStartTime()) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 505}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4NDA1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (seqStatistics.getEndTime() > unseqStatistics.getEndTime()) {\n          \n          \n            \n                    return true;\n          \n          \n            \n                  }\n          \n          \n            \n                  return false;\n          \n          \n            \n                  return seqStatistics.getEndTime() > unseqStatistics.getEndTime();", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507484058", "createdAt": "2020-10-19T05:50:55Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -870,12 +963,31 @@ public TsFileResource getNextSeqFileResource(List<TsFileResource> seqResources,\n           (c1, c2) -> Long.compare(keyExtractor.applyAsLong(c2), keyExtractor.applyAsLong(c1));\n     }\n \n+    @Override\n+    public long getCurrentEndPoint(long time, Statistics<? extends Object> statistics) {\n+      return Math.max(time, statistics.getStartTime());\n+    }\n+\n+    @Override\n+    public long getCurrentEndPoint(Statistics<? extends Object> seqStatistics,\n+        Statistics<? extends Object> unseqStatistics) {\n+      return Math.max(seqStatistics.getStartTime(), unseqStatistics.getStartTime());\n+    }\n \n     @Override\n     public boolean isExcessEndpoint(long time, long endpointTime) {\n       return time < endpointTime;\n     }\n \n+    @Override\n+    public boolean isTakeSeqAsFirst(Statistics<? extends Object> seqStatistics,\n+        Statistics<? extends Object> unseqStatistics) {\n+      if (seqStatistics.getEndTime() > unseqStatistics.getEndTime()) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 473}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4NDQyOQ==", "bodyText": "Add java doc for these new abstract methods", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507484429", "createdAt": "2020-10-19T05:51:55Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -816,8 +901,16 @@ boolean isModified() {\n \n     <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor);\n \n+    long getCurrentEndPoint(long time, Statistics<? extends Object> statistics);\n+\n+    long getCurrentEndPoint(Statistics<? extends Object> seqStatistics,\n+        Statistics<? extends Object> unseqStatistics);\n+\n     boolean isExcessEndpoint(long time, long endpointTime);\n \n+    boolean isTakeSeqAsFirst(Statistics<? extends Object> seqStatistics,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 441}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ4OTYzOA==", "bodyText": "better to extract these complicate condition statements into a private method, since they appear not only once in this file (for example, in lines 395-398)", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507489638", "createdAt": "2020-10-19T06:05:01Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -407,11 +409,15 @@ boolean hasNextPage() throws IOException {\n     }\n \n     // make sure firstPageReader won't be null while cachedPageReaders has more cached page readers\n-    while (firstPageReader == null && !cachedPageReaders.isEmpty()) {\n-      firstPageReader = cachedPageReaders.poll();\n-      if (!cachedPageReaders.isEmpty()\n-          && orderUtils.isOverlapped(firstPageReader.getStatistics(),\n-          cachedPageReaders.peek().getStatistics())) {\n+    while (firstPageReader == null && (!seqPageReaders.isEmpty() || !unSeqPageReaders.isEmpty())) {\n+\n+      initFirstPageReader();\n+\n+      if ((!seqPageReaders.isEmpty() && orderUtils\n+          .isOverlapped(firstPageReader.getStatistics(), seqPageReaders.get(0).getStatistics()))\n+          || (!unSeqPageReaders.isEmpty() && orderUtils\n+          .isOverlapped(firstPageReader.getStatistics(),\n+              unSeqPageReaders.peek().getStatistics()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ5MDgzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (firstPageReader != null && !firstPageReader.isSeq &&\n          \n          \n            \n                if (firstPageReader != null && !firstPageReader.isSeq() &&", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507490831", "createdAt": "2020-10-19T06:08:11Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -610,18 +674,33 @@ private void tryToPutAllDirectlyOverlappedPageReadersIntoMergeReader() throws IO\n     }\n \n     /*\n-     * put all currently directly overlapped page reader to merge reader\n+     * put all currently directly overlapped unseq page reader to merge reader\n      */\n-    unpackAllOverlappedCachedPageReadersToMergeReader(currentPageEndpointTime);\n+    unpackAllOverlappedUnseqPageReadersToMergeReader(currentPageEndpointTime);\n   }\n \n-  private void unpackAllOverlappedCachedPageReadersToMergeReader(long endpointTime)\n+  private void initFirstPageReader() {\n+    if (!seqPageReaders.isEmpty() && !unSeqPageReaders.isEmpty()) {\n+      if (orderUtils.isTakeSeqAsFirst(seqPageReaders.get(0).getStatistics(), unSeqPageReaders.peek()\n+          .getStatistics())) {\n+        firstPageReader = seqPageReaders.remove(0);\n+      } else {\n+        firstPageReader = unSeqPageReaders.poll();\n+      }\n+    } else if (!seqPageReaders.isEmpty()) {\n+      firstPageReader = seqPageReaders.remove(0);\n+    } else if (!unSeqPageReaders.isEmpty()) {\n+      firstPageReader = unSeqPageReaders.poll();\n+    }\n+  }\n+\n+  private void unpackAllOverlappedUnseqPageReadersToMergeReader(long endpointTime)\n       throws IOException {\n-    while (!cachedPageReaders.isEmpty()\n-        && orderUtils.isOverlapped(endpointTime, cachedPageReaders.peek().data.getStatistics())) {\n-      putPageReaderToMergeReader(cachedPageReaders.poll());\n+    while (!unSeqPageReaders.isEmpty()\n+        && orderUtils.isOverlapped(endpointTime, unSeqPageReaders.peek().data.getStatistics())) {\n+      putPageReaderToMergeReader(unSeqPageReaders.poll());\n     }\n-    if (firstPageReader != null &&\n+    if (firstPageReader != null && !firstPageReader.isSeq &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 336}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ5MTc5Ng==", "bodyText": "Since you modified the field name of cachedPageReaders, maybe the name of this method should be updated as well.", "url": "https://github.com/apache/iotdb/pull/1824#discussion_r507491796", "createdAt": "2020-10-19T06:10:18Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -381,19 +383,19 @@ boolean hasNextPage() throws IOException {\n       /*\n        * first chunk metadata is already unpacked, consume cached pages\n        */\n-      if (!cachedPageReaders.isEmpty()) {\n-        firstPageReader = cachedPageReaders.poll();\n+      initFirstPageReader();\n+      if (firstPageReader != null) {\n         long endpointTime = orderUtils.getOverlapCheckTime(firstPageReader.getStatistics());\n         unpackAllOverlappedTsFilesToTimeSeriesMetadata(endpointTime);\n         unpackAllOverlappedTimeSeriesMetadataToCachedChunkMetadata(endpointTime, false);\n         unpackAllOverlappedChunkMetadataToCachedPageReaders(endpointTime, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4a1a91e8514813c05b5a6bfe3cbf582eed4933"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e41edd433099501c4f0201287835c67b5c31f2c6", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/e41edd433099501c4f0201287835c67b5c31f2c6", "committedDate": "2020-10-19T07:59:53Z", "message": "fix code style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e210b581ad861ec441bba7b804f556e00056bd", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/84e210b581ad861ec441bba7b804f556e00056bd", "committedDate": "2020-10-19T08:00:22Z", "message": "Merge branch 'UnseqImprove' of github.com:Alima777/incubator-iotdb into UnseqImprove"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a7237be2378f7c90672b8795e299371fcf806e3", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/9a7237be2378f7c90672b8795e299371fcf806e3", "committedDate": "2020-10-19T11:51:04Z", "message": "add javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjgwNzY2", "url": "https://github.com/apache/iotdb/pull/1824#pullrequestreview-511680766", "createdAt": "2020-10-19T11:54:49Z", "commit": {"oid": "9a7237be2378f7c90672b8795e299371fcf806e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMjU3MzUx", "url": "https://github.com/apache/iotdb/pull/1824#pullrequestreview-513257351", "createdAt": "2020-10-21T02:12:14Z", "commit": {"oid": "9a7237be2378f7c90672b8795e299371fcf806e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3684, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}