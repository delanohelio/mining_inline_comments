{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjk5OTMw", "number": 2184, "title": "[IOTDB-1081] New TsFile Format", "bodyText": "We find that the former tsfile format waste some disk space, some information was stored duplicately and some legacy fields are no longer useful.\nSo I design a new TsFile format to make our tsfile more dense. The design document link is https://cwiki.apache.org/confluence/display/IOTDB/New+TsFile+Format", "createdAt": "2020-12-04T05:38:34Z", "url": "https://github.com/apache/iotdb/pull/2184", "merged": true, "mergeCommit": {"oid": "cf9b35d5499e64e69ecd7c985e0c389e826fb041"}, "closed": true, "closedAt": "2021-01-21T04:05:49Z", "author": {"login": "JackieTien97"}, "timelineItems": {"totalCount": 103, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdyJ31lgH2gAyNTMyMjk5OTMwOmZkNzQ3ZjRmNTZlMTdhY2EwNjllMWU0ODc2MmEzYzlkMzljZWYyNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyMdn8AFqTU3Mjk2NzkyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd747f4f56e17aca069e1e48762a3c9d39cef26d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fd747f4f56e17aca069e1e48762a3c9d39cef26d", "committedDate": "2021-01-21T01:03:35Z", "message": "code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d4ae00f87a80a86e19f370e53b60f351f8435b4", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/5d4ae00f87a80a86e19f370e53b60f351f8435b4", "committedDate": "2021-01-21T02:14:02Z", "message": "bug killed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyOTY3OTI5", "url": "https://github.com/apache/iotdb/pull/2184#pullrequestreview-572967929", "createdAt": "2021-01-21T04:04:40Z", "commit": {"oid": "5d4ae00f87a80a86e19f370e53b60f351f8435b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d01eec2597b8e313ff418746d787002c194a8ed", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/3d01eec2597b8e313ff418746d787002c194a8ed", "committedDate": "2020-11-25T05:48:39Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "314c38af5197aaf33079761021a28108e655cfbf", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/314c38af5197aaf33079761021a28108e655cfbf", "committedDate": "2020-11-25T06:29:30Z", "message": "change some"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f51296c0bacdd711fdd519ae18db74aa26d62736", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/f51296c0bacdd711fdd519ae18db74aa26d62736", "committedDate": "2020-11-25T07:46:44Z", "message": "some changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b8a0608187ca96c8a8df481cbcd836c32f7a3c2", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/6b8a0608187ca96c8a8df481cbcd836c32f7a3c2", "committedDate": "2020-11-26T01:50:13Z", "message": "next is to delete Edian type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5470d7c3c1c8bb9b846fd9d755dd81fb0e1e3766", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/5470d7c3c1c8bb9b846fd9d755dd81fb0e1e3766", "committedDate": "2020-11-26T03:46:46Z", "message": "change encode and decode way"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a7ee3b94c1d67a01ba74a1a5209fdadb0f6d48", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/c0a7ee3b94c1d67a01ba74a1a5209fdadb0f6d48", "committedDate": "2020-11-26T03:54:46Z", "message": "fix compile error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e84b33e88c80e517c376d2598c6751d1cb211451", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/e84b33e88c80e517c376d2598c6751d1cb211451", "committedDate": "2020-11-27T01:53:33Z", "message": "debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57bc1b69098b5759ec4d27c996db5bca4b8585d8", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/57bc1b69098b5759ec4d27c996db5bca4b8585d8", "committedDate": "2020-11-27T12:32:05Z", "message": "some changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50b9da45446e553f89adcf1b106f8e391ce34474", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/50b9da45446e553f89adcf1b106f8e391ce34474", "committedDate": "2020-11-30T12:59:58Z", "message": "have a good day"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5c34e8d2e378513e765779968c3b15964e9a32f", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/d5c34e8d2e378513e765779968c3b15964e9a32f", "committedDate": "2020-12-01T13:05:43Z", "message": "fuck bug day"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b153b20404515f69889bb77fde579f5804dd6e4", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/0b153b20404515f69889bb77fde579f5804dd6e4", "committedDate": "2020-12-02T08:03:52Z", "message": "fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9bed897faad28991ce219efdc30fd9d058ffa66", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/a9bed897faad28991ce219efdc30fd9d058ffa66", "committedDate": "2020-12-02T08:08:38Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e25b571dc5b5a07b94e0f702997bcb43916d18b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/0e25b571dc5b5a07b94e0f702997bcb43916d18b", "committedDate": "2020-12-04T10:00:46Z", "message": "add merge IT for new tsfile format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d0de83a001a72efe54040efd48aec9c3caf6de5", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/9d0de83a001a72efe54040efd48aec9c3caf6de5", "committedDate": "2020-12-05T06:03:34Z", "message": "compatible with v2 tsfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "883a0e45b453a88cf104bebcf7c546c2e774ee2c", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/883a0e45b453a88cf104bebcf7c546c2e774ee2c", "committedDate": "2020-12-05T06:19:56Z", "message": "fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e232be48075055a9cb707637336bf0a342f18b8", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/7e232be48075055a9cb707637336bf0a342f18b8", "committedDate": "2020-12-05T06:21:48Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/iotdb into UpgradeToolV3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aea74ffbcbee946444a340e2c4d74b446266573e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/aea74ffbcbee946444a340e2c4d74b446266573e", "committedDate": "2020-12-05T16:19:40Z", "message": "code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9e9c447236719c74818a9f6e41064ed0679a628", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/a9e9c447236719c74818a9f6e41064ed0679a628", "committedDate": "2020-12-07T08:18:09Z", "message": "fix code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8430e468c7623e5be51fcdc4a0006342ef3a4d9e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/8430e468c7623e5be51fcdc4a0006342ef3a4d9e", "committedDate": "2020-12-07T09:30:53Z", "message": "remove some code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9f37e80becd8a741f74fadb4e51bbefd8f52714", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/f9f37e80becd8a741f74fadb4e51bbefd8f52714", "committedDate": "2020-12-09T07:38:01Z", "message": "refact upgrade tool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b08e80f7a2486fe1d1e79860775be3c32d2f3ce4", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/b08e80f7a2486fe1d1e79860775be3c32d2f3ce4", "committedDate": "2020-12-12T16:36:06Z", "message": "fix a code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5f97ba104d1626ea412da2af259a611c2a5235a", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/a5f97ba104d1626ea412da2af259a611c2a5235a", "committedDate": "2020-12-14T02:34:45Z", "message": "fix upgrade resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aea9204f3dc6d41e7f0133d6aa366849cc02991", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/0aea9204f3dc6d41e7f0133d6aa366849cc02991", "committedDate": "2020-12-15T01:39:28Z", "message": "change the chunkType to 5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65ec13301c35f22e9f93ac868fbae621525ce8d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/f65ec13301c35f22e9f93ac868fbae621525ce8d", "committedDate": "2020-12-15T06:56:04Z", "message": "merge master branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "197ebfeed118ce82c8dee2161626aec684b3c916", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/197ebfeed118ce82c8dee2161626aec684b3c916", "committedDate": "2020-12-15T07:08:00Z", "message": "fix deserialize tsdatatype"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "453f46b1732ad8b321becd5e24bd9fcdb423bcf2", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/453f46b1732ad8b321becd5e24bd9fcdb423bcf2", "committedDate": "2020-12-15T07:49:58Z", "message": "fix a tsfile ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51dfc6e7fce3f163d88ab936c8fd96bda58a3c7e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/51dfc6e7fce3f163d88ab936c8fd96bda58a3c7e", "committedDate": "2020-12-15T10:01:57Z", "message": "merge NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d45b23602d9e714e30310b350e04b7ac2a14d36", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/9d45b23602d9e714e30310b350e04b7ac2a14d36", "committedDate": "2020-12-15T14:29:59Z", "message": "fix spark ut"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45dd9bc8787493e30a9a6094685defc7ae5c5a61", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/45dd9bc8787493e30a9a6094685defc7ae5c5a61", "committedDate": "2020-12-15T14:32:24Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e81aac92fc547fe9c9f1f10fc81fe2788baf5855", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/e81aac92fc547fe9c9f1f10fc81fe2788baf5855", "committedDate": "2020-12-15T14:54:38Z", "message": "make sonar happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7220ae160a953524c302065aced2fd8840e63d4e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/7220ae160a953524c302065aced2fd8840e63d4e", "committedDate": "2020-12-15T15:15:42Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/iotdb into UpgradeToolV3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2e29c241d1d2a4d4dc3e9b01dd40601e34a78c6", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/b2e29c241d1d2a4d4dc3e9b01dd40601e34a78c6", "committedDate": "2020-12-16T05:18:03Z", "message": "remove old file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7a148646d3f6e97206e63b0e3fa47496656c768", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/a7a148646d3f6e97206e63b0e3fa47496656c768", "committedDate": "2020-12-16T05:22:56Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169843d1831ee1f8b9902718fb5d55e5088fed7e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/169843d1831ee1f8b9902718fb5d55e5088fed7e", "committedDate": "2020-12-16T05:24:18Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/iotdb into UpgradeToolV3"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06dc16efd0aabd2b60bfc8b621d36ff0f79cad43", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/06dc16efd0aabd2b60bfc8b621d36ff0f79cad43", "committedDate": "2020-12-16T07:32:18Z", "message": "upgrade tool works"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae1f198adc74fdac9f811e6db6040de50b7e8331", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/ae1f198adc74fdac9f811e6db6040de50b7e8331", "committedDate": "2020-12-16T07:38:19Z", "message": "small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a5d5b1baf56b0070f48bbfe3b905af415b8b2d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/c0a5d5b1baf56b0070f48bbfe3b905af415b8b2d", "committedDate": "2020-12-16T08:21:12Z", "message": "remove unused offline upgrade shell script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee5a32f0c1d0beb283a877671e1767eb4e3749c2", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/ee5a32f0c1d0beb283a877671e1767eb4e3749c2", "committedDate": "2020-12-17T02:47:54Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab672277b6e519170264616c3e89a5c1b413ded5", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/ab672277b6e519170264616c3e89a5c1b413ded5", "committedDate": "2020-12-17T02:50:21Z", "message": "Merge pull request #2194 from apache/UpgradeToolV3\n\nUpgrade tool for New TsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a519308a02c727f118cf8665c1bb20f8e3f40437", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/a519308a02c727f118cf8665c1bb20f8e3f40437", "committedDate": "2020-12-18T03:20:05Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5f885221e5fca68519d9af6717eacbccc0a841", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/3d5f885221e5fca68519d9af6717eacbccc0a841", "committedDate": "2021-01-04T06:23:59Z", "message": "[IOTDB-1082] Update MetadataIndexTree structure for v0.12 (#2401)\n\n* [IOTDB-1082] Update MetadataIndexTree structure\r\n\r\n* Revert config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cf50bbf0e39d01ffa4a8edf1087e305b72fd3fe", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/1cf50bbf0e39d01ffa4a8edf1087e305b72fd3fe", "committedDate": "2021-01-04T07:04:27Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990e3a74e08a3d855a1cea89b87a3f7a3bf6577d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/990e3a74e08a3d855a1cea89b87a3f7a3bf6577d", "committedDate": "2021-01-04T07:06:47Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2536cda2582f5ad98a5d4629703574327e42b7fd", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/2536cda2582f5ad98a5d4629703574327e42b7fd", "committedDate": "2021-01-04T13:41:32Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "235200ae7bb74300bc3b792f611a806af662e437", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/235200ae7bb74300bc3b792f611a806af662e437", "committedDate": "2021-01-04T14:28:43Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efd75ea2b851205c39dcd5d4aa764548d0d46c29", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/efd75ea2b851205c39dcd5d4aa764548d0d46c29", "committedDate": "2021-01-05T03:29:43Z", "message": "fix code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94d983aec00e18f8c1b17a39e01ae4d883a7590d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/94d983aec00e18f8c1b17a39e01ae4d883a7590d", "committedDate": "2021-01-05T03:46:24Z", "message": "fix code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ac9e3a0f899e636d15add1b0d4ec2afa1f05f29", "author": {"user": {"login": "yuqi1129", "name": "Qi Yu"}}, "url": "https://github.com/apache/iotdb/commit/3ac9e3a0f899e636d15add1b0d4ec2afa1f05f29", "committedDate": "2021-01-08T09:37:01Z", "message": "optimize some enum class (#2455)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4589dae93658bf5762ac2203cd4ed928eed14e7c", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/4589dae93658bf5762ac2203cd4ed928eed14e7c", "committedDate": "2021-01-14T14:26:07Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a99d8e9cc265145441812ad26d9c57230ac89dc", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/1a99d8e9cc265145441812ad26d9c57230ac89dc", "committedDate": "2021-01-14T14:54:22Z", "message": "fix read old tsfile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f7185b1d1ba178ace0c01701f971a042b88f738", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/1f7185b1d1ba178ace0c01701f971a042b88f738", "committedDate": "2021-01-14T15:48:39Z", "message": "code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06cb6695946646d64df547724f29123296553d88", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/06cb6695946646d64df547724f29123296553d88", "committedDate": "2021-01-15T02:15:20Z", "message": "Merge remote-tracking branch 'upstream/master' into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "883911c0b130c87f5c7037a454a25c052c68c9ce", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/883911c0b130c87f5c7037a454a25c052c68c9ce", "committedDate": "2021-01-15T02:28:24Z", "message": "Remove unnecessary logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "569890025a4b2be4de94013a50105e0b27e8ff28", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/569890025a4b2be4de94013a50105e0b27e8ff28", "committedDate": "2021-01-15T02:29:46Z", "message": "Merge pull request #2498 from wshao08/NewTsFile\n\nMerge Tsfile version delete into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dd79609e2b56a8d78b032d35538350921c91e5f", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/8dd79609e2b56a8d78b032d35538350921c91e5f", "committedDate": "2021-01-15T02:42:23Z", "message": "remove apply version in v2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b116c9e8521b33dd7b98c3de767ffd598ea87f5b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/b116c9e8521b33dd7b98c3de767ffd598ea87f5b", "committedDate": "2021-01-15T08:10:39Z", "message": "If there is only one chunk group, we should truncate it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6533078498867d32f82fbf2c81b3787d35463b04", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/6533078498867d32f82fbf2c81b3787d35463b04", "committedDate": "2021-01-15T09:26:56Z", "message": "fix version bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "004a9a0cb8561befa8ae1acf27eb8fb821952493", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/004a9a0cb8561befa8ae1acf27eb8fb821952493", "committedDate": "2021-01-17T07:07:04Z", "message": "write plan indices for upgraded file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8b29de1de4e2e7cd0809ad22b8a323e7c7bc077", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/d8b29de1de4e2e7cd0809ad22b8a323e7c7bc077", "committedDate": "2021-01-17T07:53:52Z", "message": "remove merging tsfiles before upgrading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "368d98621e054747a78e4b9367fc4ab13f0334ba", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/368d98621e054747a78e4b9367fc4ab13f0334ba", "committedDate": "2021-01-17T13:11:40Z", "message": "optimize upgrade logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8161da5e2cd9028ff3fbc554f040e298d55b08b1", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/8161da5e2cd9028ff3fbc554f040e298d55b08b1", "committedDate": "2021-01-17T13:22:06Z", "message": "fix sonar bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8ff450ce840a1635ad44edb14621e6d67a24768", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/d8ff450ce840a1635ad44edb14621e6d67a24768", "committedDate": "2021-01-17T14:40:16Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f910562f33b9b4f4c17c74f63ea83843a6127bad", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/f910562f33b9b4f4c17c74f63ea83843a6127bad", "committedDate": "2021-01-18T01:09:29Z", "message": "serialize upgraded resource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/b389da33961cce1852b8acc3a691dfea75630f54", "committedDate": "2021-01-18T02:14:55Z", "message": "fix a small bug and add TsFile change list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/35f7ea50b9576f32f111da53977a3653b077bdbf", "committedDate": "2021-01-18T05:37:58Z", "message": "fix some code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd7fd8583117662911b98346feb87c2c28fa406b", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fd7fd8583117662911b98346feb87c2c28fa406b", "committedDate": "2021-01-18T07:46:45Z", "message": "add applyVersion back for qurey old TsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df466bb26dfea4c55d944e824b2c2aa4c8e92a60", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/df466bb26dfea4c55d944e824b2c2aa4c8e92a60", "committedDate": "2021-01-18T13:31:49Z", "message": "finish upgrading modification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17fabcb7ac1a0921991d4a0e0f1e634053e59cfe", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/17fabcb7ac1a0921991d4a0e0f1e634053e59cfe", "committedDate": "2021-01-18T13:32:10Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89865a5d13faa35a55eb6f0207e2cb1ac5f0f158", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/89865a5d13faa35a55eb6f0207e2cb1ac5f0f158", "committedDate": "2021-01-18T14:15:53Z", "message": "code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0af57ba9905491d94d979de990280329a2cf97d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/c0af57ba9905491d94d979de990280329a2cf97d", "committedDate": "2021-01-18T14:42:04Z", "message": "disable deletion when old files is upgrading"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e0c710d0ca30b140c54621c046ad1f95a767d21", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/2e0c710d0ca30b140c54621c046ad1f95a767d21", "committedDate": "2021-01-18T15:38:05Z", "message": "remove a useless method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55e8c041d218e6294e2a194c1a7c33babf5ce54e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/55e8c041d218e6294e2a194c1a7c33babf5ce54e", "committedDate": "2021-01-18T16:46:52Z", "message": "fix TsFileSequenceRead and tsFileSketchTool"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwNDExMDM1", "url": "https://github.com/apache/iotdb/pull/2184#pullrequestreview-570411035", "createdAt": "2021-01-18T11:39:25Z", "commit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMTozOToyNVrOIVlhPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxNjo1MTozNFrOIVxG2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUwNTcyNw==", "bodyText": "The comments belong to line 369.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559505727", "createdAt": "2021-01-18T11:39:25Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBConfigCheck.java", "diffHunk": "@@ -334,18 +342,117 @@ private void checkUnClosedTsFileV2InFolders(List<String> folders) {\n           if (!partitionDir.isDirectory()) {\n             continue;\n           }\n-          File[] tsfiles = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n-          File[] resources = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n+          File[] tsfiles = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n+          File[] resources = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n           if (tsfiles.length != resources.length) {\n-            logger.error(\"Unclosed Version-2 TsFile detected, please run 'flush' on v0.10 IoTDB\"\n-              + \" before upgrading to v0.11\");\n-            System.exit(-1);\n+            // If upgrading from v0.11.2 to v0.12, there may be some Unclosed merging files.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUwNjQwMA==", "bodyText": "Point out that the upgrade tool will remove all files that having no resources, no matter whether they are complete tsfiles or in-merging files.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559506400", "createdAt": "2021-01-18T11:40:43Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBConfigCheck.java", "diffHunk": "@@ -334,18 +342,117 @@ private void checkUnClosedTsFileV2InFolders(List<String> folders) {\n           if (!partitionDir.isDirectory()) {\n             continue;\n           }\n-          File[] tsfiles = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n-          File[] resources = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n+          File[] tsfiles = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n+          File[] resources = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n           if (tsfiles.length != resources.length) {\n-            logger.error(\"Unclosed Version-2 TsFile detected, please run 'flush' on v0.10 IoTDB\"\n-              + \" before upgrading to v0.11\");\n-            System.exit(-1);\n+            // If upgrading from v0.11.2 to v0.12, there may be some Unclosed merging files.\n+            // We have to delete these files before upgrading\n+            File[] unmergedTsfiles = fsFactory\n+                .listFilesBySuffix(partitionDir.toString(), \"0\" + TsFileConstant.TSFILE_SUFFIX);\n+            File[] unmergedResources = fsFactory\n+                .listFilesBySuffix(partitionDir.toString(), \"0\" + TsFileResource.RESOURCE_SUFFIX);\n+            if (unmergedTsfiles.length != unmergedResources.length) {\n+              logger.error(\"Unclosed Version-2 TsFile detected, please stop insertion, then run 'flush' \"\n+                  + \"on v0.11 IoTDB before upgrading to v0.12\");\n+              System.exit(-1);\n+            }\n+            deleteMergeingTsFiles(tsfiles, resources);\n           }\n         }\n       }\n     }\n   }\n+\n+  private void deleteMergeingTsFiles(File[] tsfiles, File[] resources) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUyNjA1MA==", "bodyText": "replace all \"FOOTER\"s in this file", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559526050", "createdAt": "2021-01-18T12:16:40Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/ChunkGroupHeader.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.header;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import org.apache.iotdb.tsfile.common.conf.TSFileConfig;\n+import org.apache.iotdb.tsfile.file.MetaMarker;\n+import org.apache.iotdb.tsfile.read.reader.TsFileInput;\n+import org.apache.iotdb.tsfile.utils.ReadWriteForEncodingUtils;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class ChunkGroupHeader {\n+\n+  private static final byte MARKER = MetaMarker.CHUNK_GROUP_HEADER;\n+\n+  private final String deviceID;\n+\n+  // this field does not need to be serialized.\n+  private int serializedSize;\n+\n+  /**\n+   * constructor of CHUNK_GROUP_FOOTER.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUzMTMyMA==", "bodyText": "Chunk header marker and this chunk has more than one page.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559531320", "createdAt": "2021-01-18T12:26:10Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/MetaMarker.java", "diffHunk": "@@ -26,15 +26,24 @@\n  */\n public class MetaMarker {\n \n-  public static final byte CHUNK_GROUP_FOOTER = 0;\n+  public static final byte CHUNK_GROUP_HEADER = 0;\n+  /**\n+   * means this chunk has more than one page", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUzMzAwMw==", "bodyText": "Chunk header marker and this chunk has only one page.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559533003", "createdAt": "2021-01-18T12:29:10Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/MetaMarker.java", "diffHunk": "@@ -26,15 +26,24 @@\n  */\n public class MetaMarker {\n \n-  public static final byte CHUNK_GROUP_FOOTER = 0;\n+  public static final byte CHUNK_GROUP_HEADER = 0;\n+  /**\n+   * means this chunk has more than one page\n+   */\n   public static final byte CHUNK_HEADER = 1;\n   public static final byte SEPARATOR = 2;\n   public static final byte VERSION = 3;\n+  \n   // following this marker are two longs marking the minimum and maximum indices of operations\n   // involved in the last flushed MemTable, which are generally used to support checkpoint,\n   // snapshot, or backup.\n   public static final byte OPERATION_INDEX_RANGE = 4;\n \n+  /**\n+   * means this chunk has only one page", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUzMzYzNQ==", "bodyText": "1 and 5!", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559533635", "createdAt": "2021-01-18T12:30:21Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/ChunkHeader.java", "diffHunk": "@@ -33,101 +34,119 @@\n \n public class ChunkHeader {\n \n+\n+  /**\n+   * 1 means this chunk has more than one page, so each page has its own page statistic 4 means this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUzNzUzMA==", "bodyText": "this method begins from the position behind the marker, while the deserializeFrom(ByteBufer) begins from the position of the marker.\nIt is inconsistent and hard to maintain codes.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559537530", "createdAt": "2021-01-18T12:37:40Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/ChunkHeader.java", "diffHunk": "@@ -33,101 +34,119 @@\n \n public class ChunkHeader {\n \n+\n+  /**\n+   * 1 means this chunk has more than one page, so each page has its own page statistic 4 means this\n+   * chunk has only one page, and this page has no page statistic\n+   */\n+  private byte chunkType;\n   private String measurementID;\n   private int dataSize;\n   private TSDataType dataType;\n   private CompressionType compressionType;\n   private TSEncoding encodingType;\n-  private int numOfPages;\n \n-  // this field does not need to be serialized.\n+  // the following fields do not need to be serialized.\n+  private int numOfPages;\n   private int serializedSize;\n \n   public ChunkHeader(String measurementID, int dataSize, TSDataType dataType,\n-      CompressionType compressionType,\n-      TSEncoding encoding, int numOfPages) {\n-    this(measurementID, dataSize, getSerializedSize(measurementID), dataType, compressionType,\n-        encoding, numOfPages);\n+      CompressionType compressionType, TSEncoding encoding, int numOfPages) {\n+    this(numOfPages <= 1 ? MetaMarker.ONLY_ONE_PAGE_CHUNK_HEADER : MetaMarker.CHUNK_HEADER,\n+        measurementID, dataSize, getSerializedSize(measurementID, dataSize), dataType,\n+        compressionType,\n+        encoding);\n+    this.numOfPages = numOfPages;\n   }\n \n-  private ChunkHeader(String measurementID, int dataSize, int headerSize, TSDataType dataType,\n-      CompressionType compressionType, TSEncoding encoding, int numOfPages) {\n+  public ChunkHeader(byte chunkType, String measurementID, int dataSize, TSDataType dataType,\n+      CompressionType compressionType, TSEncoding encoding) {\n+    this(chunkType, measurementID, dataSize, getSerializedSize(measurementID, dataSize), dataType,\n+        compressionType, encoding);\n+  }\n+\n+  public ChunkHeader(byte chunkType, String measurementID, int dataSize, int headerSize,\n+      TSDataType dataType, CompressionType compressionType, TSEncoding encoding) {\n+    this.chunkType = chunkType;\n     this.measurementID = measurementID;\n     this.dataSize = dataSize;\n     this.dataType = dataType;\n     this.compressionType = compressionType;\n-    this.numOfPages = numOfPages;\n     this.encodingType = encoding;\n     this.serializedSize = headerSize;\n   }\n \n+  /**\n+   * the exact serialized size of chunk header\n+   */\n+  public static int getSerializedSize(String measurementID, int dataSize) {\n+    int measurementIdLength = measurementID.getBytes(TSFileConfig.STRING_CHARSET).length;\n+    return Byte.BYTES // chunkType\n+        + ReadWriteForEncodingUtils.varIntSize(measurementIdLength) // measurementID length\n+        + measurementIdLength // measurementID\n+        + ReadWriteForEncodingUtils.uVarIntSize(dataSize) // dataSize\n+        + TSDataType.getSerializedSize() // dataType\n+        + CompressionType.getSerializedSize() // compressionType\n+        + TSEncoding.getSerializedSize(); // encodingType\n+  }\n+\n+  /**\n+   * The estimated serialized size of chunk header. Only used when we don't know the actual dataSize\n+   * attribute\n+   */\n   public static int getSerializedSize(String measurementID) {\n-    return Byte.BYTES // marker\n-        + Integer.BYTES // measurementID length\n-        + measurementID.getBytes(TSFileConfig.STRING_CHARSET).length // measurementID\n-        + Integer.BYTES // dataSize\n+\n+    int measurementIdLength = measurementID.getBytes(TSFileConfig.STRING_CHARSET).length;\n+    return  Byte.BYTES // chunkType\n+        + ReadWriteForEncodingUtils.varIntSize(measurementIdLength) // measurementID length\n+        + measurementIdLength // measurementID\n+        + Integer.BYTES + 1 // uVarInt dataSize\n         + TSDataType.getSerializedSize() // dataType\n         + CompressionType.getSerializedSize() // compressionType\n-        + TSEncoding.getSerializedSize() // encodingType\n-        + Integer.BYTES; // numOfPages\n+        + TSEncoding.getSerializedSize(); // encodingType\n   }\n \n   /**\n    * deserialize from inputStream.\n-   *\n-   * @param markerRead Whether the marker of the CHUNK_HEADER has been read\n    */\n-  public static ChunkHeader deserializeFrom(InputStream inputStream, boolean markerRead)\n+  public static ChunkHeader deserializeFrom(InputStream inputStream, byte chunkType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTU3ODc3OQ==", "bodyText": "comment why +1?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559578779", "createdAt": "2021-01-18T13:49:05Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/PageHeader.java", "diffHunk": "@@ -41,25 +40,37 @@ public PageHeader(int uncompressedSize, int compressedSize, Statistics statistic\n     this.statistics = statistics;\n   }\n \n-  public static int calculatePageHeaderSizeWithoutStatistics() {\n-    return 2 * Integer.BYTES; // uncompressedSize, compressedSize\n+  /**\n+   * max page header size without statistics\n+   */\n+  public static int estimateMaxPageHeaderSizeWithoutStatistics() {\n+    return 2 * (Integer.BYTES + 1); // uncompressedSize, compressedSize", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYzMDQyNg==", "bodyText": "using two static Byte is better..", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559630426", "createdAt": "2021-01-18T15:08:15Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TimeseriesMetadata.java", "diffHunk": "@@ -27,10 +27,17 @@\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n import org.apache.iotdb.tsfile.read.controller.IChunkMetadataLoader;\n+import org.apache.iotdb.tsfile.utils.ReadWriteForEncodingUtils;\n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n \n public class TimeseriesMetadata implements Accountable {\n \n+  /**\n+   * 0 means this time series has only one chunk, no need to save the statistic again in chunk metadata", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYzNDM4MQ==", "bodyText": "not good using for-loop", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559634381", "createdAt": "2021-01-18T15:14:28Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "diffHunk": "@@ -42,19 +66,13 @@\n    * @return MetadataIndexNodeType\n    */\n   public static MetadataIndexNodeType deserialize(byte i) {\n-    if (i >= 4) {\n-      throw new IllegalArgumentException(\"Invalid input: \" + i);\n-    }\n-    switch (i) {\n-      case 0:\n-        return INTERNAL_DEVICE;\n-      case 1:\n-        return LEAF_DEVICE;\n-      case 2:\n-        return INTERNAL_MEASUREMENT;\n-      default:\n-        return LEAF_MEASUREMENT;\n+    for (MetadataIndexNodeType metadataIndexNodeType : MetadataIndexNodeType.values()) {\n+      if (i == metadataIndexNodeType.type) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTYzNTE2OQ==", "bodyText": "please double check whether the modification is correct.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559635169", "createdAt": "2021-01-18T15:15:42Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexConstructor.java", "diffHunk": "@@ -81,7 +80,7 @@ public static MetadataIndexNode constructMetadataIndex(Map<String, List<Timeseri\n     // if not exceed the max child nodes num, ignore the device index and directly point to the measurement\n     if (deviceMetadataIndexMap.size() <= config.getMaxDegreeOfIndexNode()) {\n       MetadataIndexNode metadataIndexNode = new MetadataIndexNode(\n-          MetadataIndexNodeType.INTERNAL_MEASUREMENT);\n+          MetadataIndexNodeType.LEAF_DEVICE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY0NjM4Ng==", "bodyText": "what's the difference of using swtch-case", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559646386", "createdAt": "2021-01-18T15:32:23Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/TSEncoding.java", "diffHunk": "@@ -32,85 +46,27 @@ public static TSEncoding deserialize(short encoding) {\n     return getTsEncoding(encoding);\r\n   }\r\n \r\n-  public static byte deserializeToByte(short encoding) {\r\n-    if (encoding < 0 || 8 < encoding) {\r\n-      throw new IllegalArgumentException(\"Invalid input: \" + encoding);\r\n-    }\r\n-    return (byte) encoding;\r\n-  }\r\n \r\n   private static TSEncoding getTsEncoding(short encoding) {\r\n-    if (encoding < 0 || 8 < encoding) {\r\n-      throw new IllegalArgumentException(\"Invalid input: \" + encoding);\r\n-    }\r\n-    switch (encoding) {\r\n-      case 1:\r\n-        return PLAIN_DICTIONARY;\r\n-      case 2:\r\n-        return RLE;\r\n-      case 3:\r\n-        return DIFF;\r\n-      case 4:\r\n-        return TS_2DIFF;\r\n-      case 5:\r\n-        return BITMAP;\r\n-      case 6:\r\n-        return GORILLA_V1;\r\n-      case 7:\r\n-        return REGULAR;\r\n-      case 8:\r\n-        return GORILLA;\r\n-      default:\r\n-        return PLAIN;\r\n+    for (TSEncoding tsEncoding : TSEncoding.values()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2MDUyNg==", "bodyText": "e...  it is not equal with previous version:\npublic void encode(short value, ByteArrayOutputStream out) uses varint while this function does not.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559660526", "createdAt": "2021-01-18T15:53:22Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/encoder/PlainEncoder.java", "diffHunk": "@@ -66,46 +54,29 @@ public void encode(boolean value, ByteArrayOutputStream out) {\n \n   @Override\n   public void encode(short value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      out.write(value & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      out.write((value >> 8) & 0xFF);\n-      out.write(value & 0xFF);\n-    }\n+    out.write((value >> 8) & 0xFF);\n+    out.write(value & 0xFF);\n   }\n \n   @Override\n   public void encode(int value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      out.write(value & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-      out.write((value >> 16) & 0xFF);\n-      out.write((value >> 24) & 0xFF);\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      out.write((value >> 24) & 0xFF);\n-      out.write((value >> 16) & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-      out.write(value & 0xFF);\n-    }\n+    ReadWriteForEncodingUtils.writeVarInt(value, out);\n   }\n \n   @Override\n   public void encode(long value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      for (int i = 0; i < 8; i++) {\n-        out.write((byte) (((value) >> (i * 8)) & 0xFF));\n-      }\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      for (int i = 7; i >= 0; i--) {\n-        out.write((byte) (((value) >> (i * 8)) & 0xFF));\n-      }\n+    for (int i = 7; i >= 0; i--) {\n+      out.write((byte) (((value) >> (i * 8)) & 0xFF));\n     }\n   }\n \n   @Override\n   public void encode(float value, ByteArrayOutputStream out) {\n-    encode(Float.floatToIntBits(value), out);\n+    int floatInt = Float.floatToIntBits(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2MDk3Nw==", "bodyText": "contact @jt2594838  whether LITTLE_ENDIAN is not used anymore.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559660977", "createdAt": "2021-01-18T15:54:05Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/encoder/PlainEncoder.java", "diffHunk": "@@ -66,46 +54,29 @@ public void encode(boolean value, ByteArrayOutputStream out) {\n \n   @Override\n   public void encode(short value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      out.write(value & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      out.write((value >> 8) & 0xFF);\n-      out.write(value & 0xFF);\n-    }\n+    out.write((value >> 8) & 0xFF);\n+    out.write(value & 0xFF);\n   }\n \n   @Override\n   public void encode(int value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      out.write(value & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-      out.write((value >> 16) & 0xFF);\n-      out.write((value >> 24) & 0xFF);\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      out.write((value >> 24) & 0xFF);\n-      out.write((value >> 16) & 0xFF);\n-      out.write((value >> 8) & 0xFF);\n-      out.write(value & 0xFF);\n-    }\n+    ReadWriteForEncodingUtils.writeVarInt(value, out);\n   }\n \n   @Override\n   public void encode(long value, ByteArrayOutputStream out) {\n-    if (this.endianType == EndianType.LITTLE_ENDIAN) {\n-      for (int i = 0; i < 8; i++) {\n-        out.write((byte) (((value) >> (i * 8)) & 0xFF));\n-      }\n-    } else if (this.endianType == EndianType.BIG_ENDIAN) {\n-      for (int i = 7; i >= 0; i--) {\n-        out.write((byte) (((value) >> (i * 8)) & 0xFF));\n-      }\n+    for (int i = 7; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2NjQ4OA==", "bodyText": "modify javadoc:\n@return -1 or int(>=0)", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559666488", "createdAt": "2021-01-18T16:02:31Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteForEncodingUtils.java", "diffHunk": "@@ -98,14 +98,24 @@ public static int getLongMaxBitWidth(List<Long> list) {\n   public static int readUnsignedVarInt(InputStream in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2NzIzNA==", "bodyText": "by the way, how about  public static int readUnsignedVarInt(ByteBuffer buffer) (line 125)", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559667234", "createdAt": "2021-01-18T16:03:51Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteForEncodingUtils.java", "diffHunk": "@@ -98,14 +98,24 @@ public static int getLongMaxBitWidth(List<Long> list) {\n   public static int readUnsignedVarInt(InputStream in) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2NjQ4OA=="}, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2NzM4NQ==", "bodyText": "correct? how about -1?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559667385", "createdAt": "2021-01-18T16:04:07Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteForEncodingUtils.java", "diffHunk": "@@ -98,14 +98,24 @@ public static int getLongMaxBitWidth(List<Long> list) {\n   public static int readUnsignedVarInt(InputStream in) throws IOException {\n     int value = 0;\n     int i = 0;\n-    int b;\n-    while (((b = in.read()) & 0x80) != 0) {\n+    int b = in.read();\n+    while (b != -1 && (b & 0x80) != 0) {\n       value |= (b & 0x7F) << i;\n       i += 7;\n+      b = in.read();\n     }\n     return value | (b << i);\n   }\n \n+  public static int readVarInt(InputStream in) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY2Nzk5Nw==", "bodyText": "add javadoc for @return", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559667997", "createdAt": "2021-01-18T16:05:10Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteForEncodingUtils.java", "diffHunk": "@@ -134,12 +153,42 @@ public static int readUnsignedVarInt(ByteBuffer buffer) {\n    * @param value value to write into stream\n    * @param out   output stream\n    */\n-  public static void writeUnsignedVarInt(int value, ByteArrayOutputStream out) {\n+  public static int writeUnsignedVarInt(int value, ByteArrayOutputStream out) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY3NDkzOQ==", "bodyText": "this method needs a lot of comments. Will review it after supplying comments.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559674939", "createdAt": "2021-01-18T16:16:39Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/common/Chunk.java", "diffHunk": "@@ -60,12 +67,51 @@ public void setDeleteIntervalList(List<TimeRange> list) {\n     this.deleteIntervalList = list;\n   }\n \n-  public void mergeChunk(Chunk chunk) {\n-    chunkHeader.mergeChunkHeader(chunk.chunkHeader);\n-    ByteBuffer newChunkData = ByteBuffer\n-        .allocate(chunkData.array().length + chunk.chunkData.array().length);\n-    newChunkData.put(chunkData.array());\n-    newChunkData.put(chunk.chunkData.array());\n+  public void mergeChunk(Chunk chunk) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY3NjI4Nw==", "bodyText": "why add statistics here?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559676287", "createdAt": "2021-01-18T16:18:52Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/common/Chunk.java", "diffHunk": "@@ -18,30 +18,37 @@\n  */\n package org.apache.iotdb.tsfile.read.common;\n \n+import java.io.IOException;\n import java.nio.ByteBuffer;\n-\n import java.util.List;\n import org.apache.iotdb.tsfile.common.cache.Accountable;\n+import org.apache.iotdb.tsfile.file.MetaMarker;\n import org.apache.iotdb.tsfile.file.header.ChunkHeader;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.utils.PublicBAOS;\n+import org.apache.iotdb.tsfile.utils.ReadWriteForEncodingUtils;\n \n /**\n  * used in query.\n  */\n public class Chunk implements Accountable {\n \n   private ChunkHeader chunkHeader;\n+  private Statistics chunkStatistic;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY3OTc4OA==", "bodyText": "this method... is not thread-safe... see how other functions use the channel.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559679788", "createdAt": "2021-01-18T16:24:26Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/reader/LocalTsFileInput.java", "diffHunk": "@@ -145,4 +146,13 @@ public void close() throws IOException {\n   public int readInt() {\n     throw new UnsupportedOperationException();\n   }\n+\n+  @Override\n+  public String readVarIntString(long offset) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY4MTg2OA==", "bodyText": "comment for Byte.BYTES.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559681868", "createdAt": "2021-01-18T16:27:34Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "diffHunk": "@@ -208,10 +211,14 @@ public String readTailMagic() throws IOException {\n    * whether the file is a complete TsFile: only if the head magic and tail magic string exists.\n    */\n   public boolean isComplete() throws IOException {\n-    return tsFileInput.size() >= TSFileConfig.MAGIC_STRING.getBytes().length * 2\n-        + TSFileConfig.VERSION_NUMBER.getBytes().length\n-        && (readTailMagic().equals(readHeadMagic()) || readTailMagic()\n-        .equals(TSFileConfig.VERSION_NUMBER_V1));\n+    long size = tsFileInput.size();\n+    if (size >= TSFileConfig.MAGIC_STRING.getBytes().length * 2 + Byte.BYTES) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY4NjQ3Mg==", "bodyText": "run index++ and curSize+= after seeriesMetadata.computeIfAbsent?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559686472", "createdAt": "2021-01-18T16:35:13Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "diffHunk": "@@ -583,8 +593,15 @@ private int binarySearchInTimeseriesMetadataList(List<TimeseriesMetadata> timese\n     // read buffer of all ChunkMetadatas of this device\n     ByteBuffer buffer = readData(start, size);\n     Map<String, List<ChunkMetadata>> seriesMetadata = new HashMap<>();\n+    int index = 0;\n+    int curSize = timeseriesMetadataMap.get(index).getDataSizeOfChunkMetaDataList();\n     while (buffer.hasRemaining()) {\n-      ChunkMetadata chunkMetadata = ChunkMetadata.deserializeFrom(buffer);\n+      if (buffer.position() >= curSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTY5NTU3Nw==", "bodyText": "add @deprecated annotation here?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559695577", "createdAt": "2021-01-18T16:51:34Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/MetaMarker.java", "diffHunk": "@@ -26,15 +26,24 @@\n  */\n public class MetaMarker {\n \n-  public static final byte CHUNK_GROUP_FOOTER = 0;\n+  public static final byte CHUNK_GROUP_HEADER = 0;\n+  /**\n+   * means this chunk has more than one page\n+   */\n   public static final byte CHUNK_HEADER = 1;\n   public static final byte SEPARATOR = 2;\n   public static final byte VERSION = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35f7ea50b9576f32f111da53977a3653b077bdbf"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654b99c8a3e8b5e3f909aaf5631f8bf41463d8f1", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/654b99c8a3e8b5e3f909aaf5631f8bf41463d8f1", "committedDate": "2021-01-18T17:04:59Z", "message": "small fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "071e3b6da82f1a2d7f0cf74a9d6fe1c6c38e7f0c", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/071e3b6da82f1a2d7f0cf74a9d6fe1c6c38e7f0c", "committedDate": "2021-01-18T17:43:06Z", "message": "sonar bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/cc2ad1648cb109abe594841003e607066e113ca1", "committedDate": "2021-01-19T01:30:10Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65bb04b6411e8e93e78c9bd3e9bc60d8e910b73f", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/65bb04b6411e8e93e78c9bd3e9bc60d8e910b73f", "committedDate": "2021-01-19T02:04:32Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMTMzOTE0", "url": "https://github.com/apache/iotdb/pull/2184#pullrequestreview-570133914", "createdAt": "2021-01-18T02:22:03Z", "commit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "state": "APPROVED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMjoyMjowNFrOIVX_LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwMjoyODozNlrOIV8JeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI4NDAxMw==", "bodyText": "It seems upgradeFolder has been created in line402.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559284013", "createdAt": "2021-01-18T02:22:04Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBConfigCheck.java", "diffHunk": "@@ -334,18 +342,117 @@ private void checkUnClosedTsFileV2InFolders(List<String> folders) {\n           if (!partitionDir.isDirectory()) {\n             continue;\n           }\n-          File[] tsfiles = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n-          File[] resources = FSFactoryProducer.getFSFactory()\n-            .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n+          File[] tsfiles = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileConstant.TSFILE_SUFFIX);\n+          File[] resources = fsFactory\n+              .listFilesBySuffix(partitionDir.toString(), TsFileResource.RESOURCE_SUFFIX);\n           if (tsfiles.length != resources.length) {\n-            logger.error(\"Unclosed Version-2 TsFile detected, please run 'flush' on v0.10 IoTDB\"\n-              + \" before upgrading to v0.11\");\n-            System.exit(-1);\n+            // If upgrading from v0.11.2 to v0.12, there may be some Unclosed merging files.\n+            // We have to delete these files before upgrading\n+            File[] unmergedTsfiles = fsFactory\n+                .listFilesBySuffix(partitionDir.toString(), \"0\" + TsFileConstant.TSFILE_SUFFIX);\n+            File[] unmergedResources = fsFactory\n+                .listFilesBySuffix(partitionDir.toString(), \"0\" + TsFileResource.RESOURCE_SUFFIX);\n+            if (unmergedTsfiles.length != unmergedResources.length) {\n+              logger.error(\"Unclosed Version-2 TsFile detected, please stop insertion, then run 'flush' \"\n+                  + \"on v0.11 IoTDB before upgrading to v0.12\");\n+              System.exit(-1);\n+            }\n+            deleteMergeingTsFiles(tsfiles, resources);\n           }\n         }\n       }\n     }\n   }\n+\n+  private void deleteMergeingTsFiles(File[] tsfiles, File[] resources) {\n+    Set<String> resourcesSet = new HashSet<>();\n+    for (File resource : resources) {\n+      resourcesSet.add(resource.getName());\n+    }\n+    for (File tsfile : tsfiles) {\n+      if (!resourcesSet.contains(tsfile.getName() + TsFileResource.RESOURCE_SUFFIX)) {\n+        if (!tsfile.delete()) {\n+          logger.error(\"Failed to delete merging tsfile {}\", tsfile);\n+          System.exit(-1);\n+        }\n+      }\n+    }\n+  }\n+\n+  private void moveTsFileV2() {\n+    moveFileToUpgradeFolder(DirectoryManager.getInstance().getAllSequenceFileFolders());\n+    moveFileToUpgradeFolder(DirectoryManager.getInstance().getAllUnSequenceFileFolders());\n+    logger.info(\"Move version-2 TsFile successfully\");\n+  }\n+\n+  @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n+  private void moveFileToUpgradeFolder(List<String> folders) {\n+    for (String baseDir : folders) {\n+      File fileFolder = fsFactory.getFile(baseDir);\n+      if (!fileFolder.isDirectory()) {\n+        continue;\n+      }\n+      for (File storageGroup : fileFolder.listFiles()) {\n+        if (!storageGroup.isDirectory()) {\n+          continue;\n+        }\n+        File upgradeFolder = fsFactory.getFile(storageGroup, IoTDBConstant.UPGRADE_FOLDER_NAME);\n+        // create upgrade directory if not exist\n+        if (upgradeFolder.mkdirs()) {\n+          logger.info(\"Upgrade Directory {} doesn't exist, create it\",\n+              upgradeFolder.getPath());\n+        } else if (!upgradeFolder.exists()) {\n+          logger.error(\"Create upgrade Directory {} failed\",\n+              upgradeFolder.getPath());\n+        }\n+        for (File partitionDir : storageGroup.listFiles()) {\n+          if (!partitionDir.isDirectory() || \n+              partitionDir.getName().equals(IoTDBConstant.UPGRADE_FOLDER_NAME)) {\n+            continue;\n+          }\n+          File[] oldTsfileArray = fsFactory\n+              .listFilesBySuffix(partitionDir.getAbsolutePath(), TsFileConstant.TSFILE_SUFFIX);\n+          File[] oldResourceFileArray = fsFactory\n+              .listFilesBySuffix(partitionDir.getAbsolutePath(), TsFileResource.RESOURCE_SUFFIX);\n+          File[] oldModificationFileArray = fsFactory\n+              .listFilesBySuffix(partitionDir.getAbsolutePath(), ModificationFile.FILE_SUFFIX);\n+          // move the old files to upgrade folder if exists\n+          if (oldTsfileArray.length != 0) {\n+            // create upgrade directory if not exist\n+            if (upgradeFolder.mkdirs()) {\n+              logger.info(\"Upgrade Directory {} doesn't exist, create it\",\n+                  upgradeFolder.getPath());\n+            } else if (!upgradeFolder.exists()) {\n+              logger.error(\"Create upgrade Directory {} failed\",\n+                  upgradeFolder.getPath());\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI4NDk2Mw==", "bodyText": "Remove this if it is truly unused.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559284963", "createdAt": "2021-01-18T02:27:07Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1748,10 +1717,39 @@ private void upgradeTsFileResourceCallBack(TsFileResource tsFileResource) {\n           }\n         }\n       }\n-      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {\n-        UpgradeSevice.getINSTANCE().stop();\n+//      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {\n+//        UpgradeSevice.getINSTANCE().stop();\n+//      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI4NTU0Mw==", "bodyText": "Just to confirm, what if the storage group name contains a comma?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559285543", "createdAt": "2021-01-18T02:29:32Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1748,10 +1717,39 @@ private void upgradeTsFileResourceCallBack(TsFileResource tsFileResource) {\n           }\n         }\n       }\n-      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {\n-        UpgradeSevice.getINSTANCE().stop();\n+//      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {\n+//        UpgradeSevice.getINSTANCE().stop();\n+//      }\n+    }\n+  }\n+\n+  private void loadUpgradedResources(List<TsFileResource> resources, boolean isseq) {\n+    if (resources.isEmpty()) {\n+      return;\n+    }\n+    for (TsFileResource resource : resources) {\n+      try {\n+        UpgradeUtils.moveUpgradedFiles(resource);\n+        tsFileManagement.addAll(resource.getUpgradedResources(), isseq); \n+        // delete old TsFile and resource\n+        resource.delete();\n+        UpgradeLog.writeUpgradeLogFile(\n+            resource.getTsFile().getAbsolutePath() + \",\" + UpgradeCheckStatus.UPGRADE_SUCCESS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 215}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5MjQ0MQ==", "bodyText": "It would be better to add a comment and explain why such data types need decoding.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559292441", "createdAt": "2021-01-18T03:00:18Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/tools/upgrade/TsFileOnlineUpgradeTool.java", "diffHunk": "@@ -319,118 +104,133 @@ private ByteBuffer readData(long position, int size) throws IOException {\n    * @throws IOException, WriteProcessException\n    */\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n-  public void upgradeFile(List<TsFileResource> upgradedResources)\n+  private void upgradeFile(List<TsFileResource> upgradedResources)\n       throws IOException, WriteProcessException {\n-    File oldTsFile = FSFactoryProducer.getFSFactory().getFile(this.file);\n \n-    // check if the old TsFile has correct header \n-    if (!fileCheck(oldTsFile)) {\n+    // check if the old TsFile has correct header\n+    if (!fileCheck()) {\n       return;\n     }\n \n+    int headerLength = TSFileConfig.MAGIC_STRING.getBytes().length +\n+        TSFileConfig.VERSION_NUMBER_V2.getBytes().length;\n+    reader.position(headerLength);\n     // start to scan chunks and chunkGroups\n     boolean newChunkGroup = true;\n-    int chunkGroupCount = 0;\n     List<List<PageHeader>> pageHeadersInChunkGroup = new ArrayList<>();\n     List<List<ByteBuffer>> pageDataInChunkGroup = new ArrayList<>();\n-    List<List<Boolean>> pagePartitionInfoInChunkGroup = new ArrayList<>();\n+    List<List<Boolean>> needToDecodeInfoInChunkGroup = new ArrayList<>();\n     byte marker;\n     List<MeasurementSchema> measurementSchemaList = new ArrayList<>();\n     try {\n-      while ((marker = this.readMarker()) != MetaMarker.SEPARATOR) {\n+      while ((marker = reader.readMarker()) != MetaMarker.SEPARATOR) {\n         switch (marker) {\n           case MetaMarker.CHUNK_HEADER:\n             // this is the first chunk of a new ChunkGroup.\n             if (newChunkGroup) {\n               newChunkGroup = false;\n             }\n-            ChunkHeader header = this.readChunkHeader();\n-            MeasurementSchema measurementSchema = new MeasurementSchema(header.getMeasurementID(),\n+            ChunkHeader header = reader.readChunkHeader();\n+            MeasurementSchema measurementSchema = new MeasurementSchema(\n+                header.getMeasurementID(),\n                 header.getDataType(),\n                 header.getEncodingType(),\n                 header.getCompressionType());\n             measurementSchemaList.add(measurementSchema);\n+            TSDataType dataType = header.getDataType();\n+            TSEncoding encoding = header.getEncodingType();\n             List<PageHeader> pageHeadersInChunk = new ArrayList<>();\n             List<ByteBuffer> dataInChunk = new ArrayList<>();\n-            List<Boolean> pagePartitionInfo = new ArrayList<>();\n+            List<Boolean> needToDecodeInfo = new ArrayList<>();\n             for (int j = 0; j < header.getNumOfPages(); j++) {\n-              PageHeader pageHeader = readPageHeader(header.getDataType());\n-              boolean pageInSamePartition = checkIfPageInSameTimePartition(pageHeader);\n-              pagePartitionInfo.add(pageInSamePartition);\n-              ByteBuffer pageData = pageInSamePartition ?\n-                  readCompressedPage(pageHeader)\n-                  : readPage(pageHeader, header.getCompressionType());\n+              // a new Page\n+              PageHeader pageHeader = reader.readPageHeader(dataType);\n+              boolean needToDecode = \n+                  checkIfNeedToDecode(dataType, encoding, pageHeader);\n+              needToDecodeInfo.add(needToDecode);\n+              ByteBuffer pageData = !needToDecode\n+                  ? reader.readCompressedPage(pageHeader) \n+                  : reader.readPage(pageHeader, header.getCompressionType());\n               pageHeadersInChunk.add(pageHeader);\n               dataInChunk.add(pageData);\n             }\n             pageHeadersInChunkGroup.add(pageHeadersInChunk);\n             pageDataInChunkGroup.add(dataInChunk);\n-            pagePartitionInfoInChunkGroup.add(pagePartitionInfo);\n+            needToDecodeInfoInChunkGroup.add(needToDecodeInfo);\n             break;\n-          case MetaMarker.CHUNK_GROUP_FOOTER:\n+          case MetaMarker.CHUNK_GROUP_HEADER:\n             // this is the footer of a ChunkGroup.\n-            ChunkGroupFooter chunkGroupFooter = this.readChunkGroupFooter();\n+            ChunkGroupHeader chunkGroupFooter = reader.readChunkGroupFooter();\n             String deviceID = chunkGroupFooter.getDeviceID();\n-            rewrite(oldTsFile, deviceID, measurementSchemaList, pageHeadersInChunkGroup,\n-                pageDataInChunkGroup, pagePartitionInfoInChunkGroup);\n-\n+            rewrite(deviceID, measurementSchemaList, pageHeadersInChunkGroup,\n+                pageDataInChunkGroup, needToDecodeInfoInChunkGroup);\n             pageHeadersInChunkGroup.clear();\n             pageDataInChunkGroup.clear();\n             measurementSchemaList.clear();\n-            pagePartitionInfoInChunkGroup.clear();\n+            needToDecodeInfoInChunkGroup.clear();\n             newChunkGroup = true;\n-            chunkGroupCount++;\n             break;\n-\n+          case MetaMarker.VERSION:\n+            reader.readVersion();\n+            // write plan indices\n+            for (TsFileIOWriter tsFileIOWriter : partitionWriterMap.values()) { \n+              tsFileIOWriter.writePlanIndices(); \n+            }\n+            break;\n           default:\n             // the disk file is corrupted, using this file may be dangerous\n-            logger.error(\"Unrecognized marker detected, this file may be corrupted\");\n-            return;\n+            throw new IOException(\"Unrecognized marker detected, \"\n+                + \"this file may be corrupted\");\n         }\n       }\n       // close upgraded tsFiles and generate resources for them\n       for (TsFileIOWriter tsFileIOWriter : partitionWriterMap.values()) {\n         upgradedResources.add(endFileAndGenerateResource(tsFileIOWriter));\n       }\n     } catch (IOException e2) {\n-      logger.info(\"TsFile upgrade process cannot proceed at position {} after {} chunk groups \"\n-          + \"recovered, because : {}\", this.position(), chunkGroupCount, e2.getMessage());\n+      throw new IOException(\"TsFile upgrade process cannot proceed at position \" +\n+          reader.position() + \"because: \" + e2.getMessage());\n     } finally {\n-      if (tsFileInput != null) {\n-        tsFileInput.close();\n+      if (reader != null) {\n+        reader.close();\n       }\n     }\n   }\n \n-  private boolean checkIfPageInSameTimePartition(PageHeader pageHeader) {\n-    return StorageEngine.getTimePartition(pageHeader.getStartTime())\n-        == StorageEngine.getTimePartition(pageHeader.getEndTime());\n+  private boolean checkIfNeedToDecode(TSDataType dataType, TSEncoding encoding,\n+      PageHeader pageHeader) {\n+    return dataType == TSDataType.BOOLEAN ||\n+        dataType == TSDataType.TEXT ||\n+        (dataType == TSDataType.INT32 && encoding == TSEncoding.PLAIN) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 416}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5NzA4OA==", "bodyText": "String.getBytes is a bit wasteful here as the conversion result is discarded immediately, but I think maybe you can make this method non-static and cache the returned byte[] in this object, and use it when serializeTo is called.\nThe same technique may be applied to other structures where string length is calculated before actually serialized.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559297088", "createdAt": "2021-01-18T03:22:08Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/ChunkGroupHeader.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.header;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import org.apache.iotdb.tsfile.common.conf.TSFileConfig;\n+import org.apache.iotdb.tsfile.file.MetaMarker;\n+import org.apache.iotdb.tsfile.read.reader.TsFileInput;\n+import org.apache.iotdb.tsfile.utils.ReadWriteForEncodingUtils;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class ChunkGroupHeader {\n+\n+  private static final byte MARKER = MetaMarker.CHUNK_GROUP_HEADER;\n+\n+  private final String deviceID;\n+\n+  // this field does not need to be serialized.\n+  private int serializedSize;\n+\n+  /**\n+   * constructor of CHUNK_GROUP_FOOTER.\n+   *  @param deviceID       device ID\n+   *\n+   */\n+  public ChunkGroupHeader(String deviceID) {\n+    this.deviceID = deviceID;\n+    this.serializedSize = getSerializedSize(deviceID);\n+  }\n+\n+  public static int getSerializedSize(String deviceID) {\n+    int length = deviceID.getBytes(TSFileConfig.STRING_CHARSET).length;\n+    return Byte.BYTES + ReadWriteForEncodingUtils.varIntSize(length) + length;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTI5ODEwNA==", "bodyText": "Better to use some final static fields to explain this. And is it really necessary to use the numbers from Marker? It is confusing when you have 1 and 4, but there are no 2 and 3.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559298104", "createdAt": "2021-01-18T03:27:02Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/header/ChunkHeader.java", "diffHunk": "@@ -33,101 +34,119 @@\n \n public class ChunkHeader {\n \n+\n+  /**\n+   * 1 means this chunk has more than one page, so each page has its own page statistic 4 means this\n+   * chunk has only one page, and this page has no page statistic\n+   */\n+  private byte chunkType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMwMDgwMg==", "bodyText": "Better to wrap this in a more semantic way.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559300802", "createdAt": "2021-01-18T03:38:54Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/ChunkMetadata.java", "diffHunk": "@@ -142,31 +142,32 @@ public TSDataType getDataType() {\n    * @return length\n    * @throws IOException IOException\n    */\n-  public int serializeTo(OutputStream outputStream) throws IOException {\n+  public int serializeTo(OutputStream outputStream, boolean serializeStatistic) throws IOException {\n     int byteLen = 0;\n-\n-    byteLen += ReadWriteIOUtils.write(measurementUid, outputStream);\n     byteLen += ReadWriteIOUtils.write(offsetOfChunkHeader, outputStream);\n-    byteLen += ReadWriteIOUtils.write(tsDataType, outputStream);\n-    byteLen += statistics.serialize(outputStream);\n+    if (serializeStatistic) {\n+      byteLen += statistics.serialize(outputStream);\n+    }\n     return byteLen;\n   }\n \n   /**\n    * deserialize from ByteBuffer.\n    *\n-   * @param buffer ByteBuffer\n+   * @param buffer          ByteBuffer\n    * @return ChunkMetaData object\n    */\n-  public static ChunkMetadata deserializeFrom(ByteBuffer buffer) {\n+  public static ChunkMetadata deserializeFrom(ByteBuffer buffer, TimeseriesMetadata timeseriesMetadata) {\n     ChunkMetadata chunkMetaData = new ChunkMetadata();\n \n-    chunkMetaData.measurementUid = ReadWriteIOUtils.readString(buffer);\n+    chunkMetaData.measurementUid = timeseriesMetadata.getMeasurementId();\n+    chunkMetaData.tsDataType = timeseriesMetadata.getTSDataType();\n     chunkMetaData.offsetOfChunkHeader = ReadWriteIOUtils.readLong(buffer);\n-    chunkMetaData.tsDataType = ReadWriteIOUtils.readDataType(buffer);\n-\n-    chunkMetaData.statistics = Statistics.deserialize(buffer, chunkMetaData.tsDataType);\n-\n+    if (timeseriesMetadata.getTimeSeriesMetadataType() != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMwMTQ3OQ==", "bodyText": "How about changing it to a boolean and using a more accurate name?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559301479", "createdAt": "2021-01-18T03:42:18Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TimeseriesMetadata.java", "diffHunk": "@@ -27,10 +27,17 @@\n import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n import org.apache.iotdb.tsfile.read.controller.IChunkMetadataLoader;\n+import org.apache.iotdb.tsfile.utils.ReadWriteForEncodingUtils;\n import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n \n public class TimeseriesMetadata implements Accountable {\n \n+  /**\n+   * 0 means this time series has only one chunk, no need to save the statistic again in chunk metadata\n+   * 1 means this time series has more than one chunk, should save the statistic again in chunk metadata\n+   */\n+  private byte timeSeriesMetadataType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b389da33961cce1852b8acc3a691dfea75630f54"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg2NTY0NA==", "bodyText": "If the result is read-only, Collections.emptyMap should be enough.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559865644", "createdAt": "2021-01-19T01:47:33Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "diffHunk": "@@ -567,13 +576,14 @@ private int binarySearchInTimeseriesMetadataList(List<TimeseriesMetadata> timese\n    */\n   public Map<String, List<ChunkMetadata>> readChunkMetadataInDevice(String device)\n       throws IOException {\n-    if (tsFileMetaData == null) {\n-      readFileMetadata();\n-    }\n+    readFileMetadata();\n \n     long start = 0;\n     int size = 0;\n     List<TimeseriesMetadata> timeseriesMetadataMap = getDeviceTimeseriesMetadata(device);\n+    if (timeseriesMetadataMap.isEmpty()) {\n+      return new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg3NjQ3Mw==", "bodyText": "Use TsFileConfig.STRING_CHARSET.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559876473", "createdAt": "2021-01-19T02:28:36Z", "author": {"login": "jt2594838"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "diffHunk": "@@ -352,6 +352,25 @@ public static int write(String s, OutputStream outputStream) throws IOException\n     return len;\n   }\n \n+  /**\n+   * write string to outputStream.\n+   *\n+   * @return the length of string represented by byte[].\n+   */\n+  public static int writeVar(String s, OutputStream outputStream) throws IOException {\n+    int len = 0;\n+    if (s == null) {\n+      len += ReadWriteForEncodingUtils.writeVarInt(-1, outputStream);\n+      return len;\n+    }\n+\n+    byte[] bytes = s.getBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwODg1NzI5", "url": "https://github.com/apache/iotdb/pull/2184#pullrequestreview-570885729", "createdAt": "2021-01-19T03:42:59Z", "commit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwMzo0Mjo1OVrOIV9TSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwMzo0Mjo1OVrOIV9TSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg5NTM3MA==", "bodyText": "if numberOfPages == 0, then write page0;\nelse if numberOfPages ==1, then rewrite page0 and write page1,\nelse write page_i.\nso we can reduce copy page1 data", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559895370", "createdAt": "2021-01-19T03:42:59Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/chunk/ChunkWriterImpl.java", "diffHunk": "@@ -300,7 +308,19 @@ private void checkPageSizeAndMayOpenANewPage() {\n \n   private void writePageToPageBuffer() {\n     try {\n-      pageWriter.writePageHeaderAndDataIntoBuff(pageBuffer);\n+      int size = pageWriter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwODg2NzA1", "url": "https://github.com/apache/iotdb/pull/2184#pullrequestreview-570886705", "createdAt": "2021-01-19T03:46:33Z", "commit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwMzo0NjozM1rOIV9Wqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQwNDoxODozMVrOIV92Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg5NjIzNA==", "bodyText": "check Python and Go....", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559896234", "createdAt": "2021-01-19T03:46:33Z", "author": {"login": "jixuan1989"}, "path": "session/src/test/java/org/apache/iotdb/session/IoTDBSessionIteratorIT.java", "diffHunk": "@@ -295,7 +295,7 @@ private void prepareData() throws IoTDBConnectionException, StatementExecutionEx\n     List<TSDataType> types = new ArrayList<>();\n     for (int i = 1; i <= 6; i++) {\n       measurements.add(\"s\" + i);\n-      types.add(TSDataType.deserialize((short) (i - 1)));\n+      types.add(TSDataType.deserialize((byte) (i - 1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg5NzA1NQ==", "bodyText": "where to check if the user uses Version 1 (i.e., version <0.10), then reject the upgrade.", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559897055", "createdAt": "2021-01-19T03:49:35Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/UpgradeUtils.java", "diffHunk": "@@ -66,9 +73,9 @@ public static boolean isNeedUpgrade(TsFileResource tsFileResource) {\n     } finally {\n       tsFileResource.readUnlock();\n     }\n-    try (TsFileSequenceReader tsFileSequenceReader = new TsFileSequenceReader(\n+    try (TsFileSequenceReaderForV2 tsFileSequenceReader = new TsFileSequenceReaderForV2(\n         tsFileResource.getTsFile().getAbsolutePath())) {\n-      if (tsFileSequenceReader.readVersionNumber().equals(TSFileConfig.VERSION_NUMBER_V1)) {\n+      if (tsFileSequenceReader.readVersionNumberV2().equals(TSFileConfig.VERSION_NUMBER_V2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTg5NzQ3Nw==", "bodyText": "how about other TsFileTools", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559897477", "createdAt": "2021-01-19T03:51:22Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/tools/TsFileSketchTool.java", "diffHunk": "@@ -75,38 +75,33 @@ public static void main(String[] args) throws IOException {\n                 String.format(\"%20d\", TSFileConfig.MAGIC_STRING.getBytes().length)\n                         + \"|\\t[version number] \"\n                         + reader.readVersionNumber());\n+        long nextChunkGroupHeaderPos = (long) TSFileConfig.MAGIC_STRING.getBytes().length ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTkwMjk0Mw==", "bodyText": "\"move\" ?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559902943", "createdAt": "2021-01-19T04:12:47Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -515,6 +480,11 @@ else if (upgradeFolder.exists()) {\n             Collections.addAll(tsFiles,\n                 fsFactory.listFilesBySuffix(partitionFolder.getAbsolutePath(), TSFILE_SUFFIX));\n           }\n+          else {\n+            // move ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTkwMzkyNQ==", "bodyText": "any side-effect that only moving finished files from upgrade list to the normal fileList  after all files are upgraded?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559903925", "createdAt": "2021-01-19T04:17:00Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1717,23 +1692,19 @@ private void upgradeTsFileResourceCallBack(TsFileResource tsFileResource) {\n               resource.getEndTime(device))\n       );\n     }\n-    insertLock.writeLock().lock();\n-    tsFileManagement.writeLock();\n-    try {\n-      if (tsFileResource.isSeq()) {\n-        tsFileManagement.addAll(upgradedResources, true);\n-        upgradeSeqFileList.remove(tsFileResource);\n-      } else {\n-        tsFileManagement.addAll(upgradedResources, false);\n-        upgradeUnseqFileList.remove(tsFileResource);\n+    upgradeFileCount.getAndAdd(-1);\n+    // load all upgraded resources in this sg to tsFileManagement\n+    if (upgradeFileCount.get() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 181}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTkwNDI5OA==", "bodyText": "So, when to stop the service?", "url": "https://github.com/apache/iotdb/pull/2184#discussion_r559904298", "createdAt": "2021-01-19T04:18:31Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1748,10 +1719,38 @@ private void upgradeTsFileResourceCallBack(TsFileResource tsFileResource) {\n           }\n         }\n       }\n-      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc2ad1648cb109abe594841003e607066e113ca1"}, "originalPosition": 206}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9cc1413bb8d1046a39c67e944dec5a69371938", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/cb9cc1413bb8d1046a39c67e944dec5a69371938", "committedDate": "2021-01-19T06:11:08Z", "message": "support virtual sg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "816b18c8af7bdbcb62528ad50e567ddc0efa9308", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/816b18c8af7bdbcb62528ad50e567ddc0efa9308", "committedDate": "2021-01-19T06:18:11Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c66becae613a38e794efffd8fb225ec6cdc8ec41", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/c66becae613a38e794efffd8fb225ec6cdc8ec41", "committedDate": "2021-01-19T06:51:03Z", "message": "code smells and review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e875aa68c90eeaea3dc6fb269695da92cbaef8b", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/6e875aa68c90eeaea3dc6fb269695da92cbaef8b", "committedDate": "2021-01-19T07:23:49Z", "message": "fix conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "682c5ad2a12b8137275d4837e4f558579cafe688", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/682c5ad2a12b8137275d4837e4f558579cafe688", "committedDate": "2021-01-19T07:35:47Z", "message": "changes for dong ge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7fc7b8061e97fe5d870f0aa6ad86c87fdd5f878", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/e7fc7b8061e97fe5d870f0aa6ad86c87fdd5f878", "committedDate": "2021-01-19T07:40:21Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe30ca36482d1c28bd8cf5a176f54d6b342b96bd", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fe30ca36482d1c28bd8cf5a176f54d6b342b96bd", "committedDate": "2021-01-19T07:57:34Z", "message": "delete merging file when move to upgrade folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfbef83f9924a6b9efc598bc994cbdf200e4a3e5", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/dfbef83f9924a6b9efc598bc994cbdf200e4a3e5", "committedDate": "2021-01-19T07:58:23Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99224c59cb617da53da1c0a48af8c0e824e9ba29", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/99224c59cb617da53da1c0a48af8c0e824e9ba29", "committedDate": "2021-01-19T08:21:43Z", "message": "fix bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59c7391a2c49de46e00618990100466c69149c23", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/59c7391a2c49de46e00618990100466c69149c23", "committedDate": "2021-01-19T08:22:03Z", "message": "Merge branch 'NewTsFile' of https://github.com/apache/incubator-iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4680438faec260997f9b2e2e3a6db7a9ecd664e1", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/4680438faec260997f9b2e2e3a6db7a9ecd664e1", "committedDate": "2021-01-19T08:26:37Z", "message": "Merge branch 'master' into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf1cccd68b2fdb72d7a7f156b1a66aeb67ea670", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/8bf1cccd68b2fdb72d7a7f156b1a66aeb67ea670", "committedDate": "2021-01-19T08:40:59Z", "message": "add miss apache header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "869405e7b3a83b98af77209961806597cf5e1c2f", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/869405e7b3a83b98af77209961806597cf5e1c2f", "committedDate": "2021-01-19T13:30:53Z", "message": "fix isNeedUpgrade method in UpgradeUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c53e1fd30ce460c3a04453bc6fedeccfedca34ee", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/c53e1fd30ce460c3a04453bc6fedeccfedca34ee", "committedDate": "2021-01-19T15:58:40Z", "message": "fix code smell about VERSION marker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c2ac0ac11ec653dfb3ef7aaa83fd9e855ec0064", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/4c2ac0ac11ec653dfb3ef7aaa83fd9e855ec0064", "committedDate": "2021-01-20T03:13:20Z", "message": "support upgrade from 0.10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af1fb5782af10947c0976cf9a72a953f7aab6367", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/af1fb5782af10947c0976cf9a72a953f7aab6367", "committedDate": "2021-01-20T03:25:16Z", "message": "support upgrade from 0.10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "586491634fa4cf13536cc1759ecf116e04b1280a", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/586491634fa4cf13536cc1759ecf116e04b1280a", "committedDate": "2021-01-20T03:25:37Z", "message": "support upgrade from 0.10"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43309ebbcd8802cf50e34c5b3ff1094ff0f26e4e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/43309ebbcd8802cf50e34c5b3ff1094ff0f26e4e", "committedDate": "2021-01-20T15:15:24Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb into NewTsFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c98b9919a94a5e5ac0efa3e5fc96326f457fd57e", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/c98b9919a94a5e5ac0efa3e5fc96326f457fd57e", "committedDate": "2021-01-20T16:54:21Z", "message": "fix move version file and a latestFlushTime bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fafc9317cf746c3d8bdd6b54ab581296e4022834", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fafc9317cf746c3d8bdd6b54ab581296e4022834", "committedDate": "2021-01-20T16:54:56Z", "message": "fix move version file and a latestFlushTime bug"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4053, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}