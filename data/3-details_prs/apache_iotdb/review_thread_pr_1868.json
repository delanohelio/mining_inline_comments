{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNDE0MzM2", "number": 1868, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDoyMDowN1rOEyRq5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDoyMDowN1rOEyRq5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTUzNzY1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/service/RPCService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDoyMDowN1rOHo0s9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMzo0Njo0MFrOHo9Aww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU2ODU2NQ==", "bodyText": "Format here.\nBesides, instead of shutting down immediately, I would suggest a few retries, which may prevent test failures when the socket is not shut down timely.", "url": "https://github.com/apache/iotdb/pull/1868#discussion_r512568565", "createdAt": "2020-10-27T10:20:07Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/service/RPCService.java", "diffHunk": "@@ -61,12 +63,17 @@ public void initTProcessor() throws ClassNotFoundException,IllegalAccessExceptio\n   public void initThriftServiceThread()\n       throws IllegalAccessException, InstantiationException, ClassNotFoundException {\n     IoTDBConfig config = IoTDBDescriptor.getInstance().getConfig();\n-    thriftServiceThread = new ThriftServiceThread(processor,\n-        getID().getName(), ThreadName.RPC_CLIENT.getName(),\n-        config.getRpcAddress(), config.getRpcPort(), config.getRpcMaxConcurrentClientNum(),\n-        config.getThriftServerAwaitTimeForStopService(),\n-        new RPCServiceThriftHandler(impl),\n-        IoTDBDescriptor.getInstance().getConfig().isRpcThriftCompressionEnable());\n+    try {\n+      thriftServiceThread = new ThriftServiceThread(processor,\n+          getID().getName(), ThreadName.RPC_CLIENT.getName(),\n+          config.getRpcAddress(), config.getRpcPort(), config.getRpcMaxConcurrentClientNum(),\n+          config.getThriftServerAwaitTimeForStopService(),\n+          new RPCServiceThriftHandler(impl),\n+          IoTDBDescriptor.getInstance().getConfig().isRpcThriftCompressionEnable());\n+    }\n+    catch (RPCServiceException e) {\n+      throw new IllegalAccessException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4de5c3a8597f6ed35631a66a93d8b4e9270fe52"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjcwNDcwNw==", "bodyText": "Good idea.\nSo do you think we should add the retries in this pr or do it in another pr later? I don't see any test failed so far....", "url": "https://github.com/apache/iotdb/pull/1868#discussion_r512704707", "createdAt": "2020-10-27T13:46:40Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/service/RPCService.java", "diffHunk": "@@ -61,12 +63,17 @@ public void initTProcessor() throws ClassNotFoundException,IllegalAccessExceptio\n   public void initThriftServiceThread()\n       throws IllegalAccessException, InstantiationException, ClassNotFoundException {\n     IoTDBConfig config = IoTDBDescriptor.getInstance().getConfig();\n-    thriftServiceThread = new ThriftServiceThread(processor,\n-        getID().getName(), ThreadName.RPC_CLIENT.getName(),\n-        config.getRpcAddress(), config.getRpcPort(), config.getRpcMaxConcurrentClientNum(),\n-        config.getThriftServerAwaitTimeForStopService(),\n-        new RPCServiceThriftHandler(impl),\n-        IoTDBDescriptor.getInstance().getConfig().isRpcThriftCompressionEnable());\n+    try {\n+      thriftServiceThread = new ThriftServiceThread(processor,\n+          getID().getName(), ThreadName.RPC_CLIENT.getName(),\n+          config.getRpcAddress(), config.getRpcPort(), config.getRpcMaxConcurrentClientNum(),\n+          config.getThriftServerAwaitTimeForStopService(),\n+          new RPCServiceThriftHandler(impl),\n+          IoTDBDescriptor.getInstance().getConfig().isRpcThriftCompressionEnable());\n+    }\n+    catch (RPCServiceException e) {\n+      throw new IllegalAccessException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU2ODU2NQ=="}, "originalCommit": {"oid": "b4de5c3a8597f6ed35631a66a93d8b4e9270fe52"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 662, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}