{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTUzNjY0", "number": 896, "title": "Refine exception code", "bodyText": "", "createdAt": "2020-03-09T12:27:58Z", "url": "https://github.com/apache/iotdb/pull/896", "merged": true, "mergeCommit": {"oid": "327e909fce37355bd80265ada4e2e55c5ac1455a"}, "closed": true, "closedAt": "2020-03-11T03:30:22Z", "author": {"login": "qiaojialin"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcL9fUaAH2gAyMzg1NTUzNjY0OmY5NDdjOGYwYTJkMDc1ODMyNzBjNDg3NjM5MTZjZjdiYzFiNjM5ZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMTinpgH2gAyMzg1NTUzNjY0OjEyMjI2ZDllZTM4ODM5ZDc0OTBiMWYyZjY3ZWJiMTgxMTNhZmU5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f947c8f0a2d07583270c48763916cf7bc1b639d2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/f947c8f0a2d07583270c48763916cf7bc1b639d2", "committedDate": "2020-03-09T12:57:40Z", "message": "refine error code"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e81910b248d40f8ffd8bdb71e19d8a57dc6e412", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9e81910b248d40f8ffd8bdb71e19d8a57dc6e412", "committedDate": "2020-03-09T12:27:22Z", "message": "add header"}, "afterCommit": {"oid": "f947c8f0a2d07583270c48763916cf7bc1b639d2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/f947c8f0a2d07583270c48763916cf7bc1b639d2", "committedDate": "2020-03-09T12:57:40Z", "message": "refine error code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8d143f287c165b23b4fce123d29fcfc6fa20f5e6", "committedDate": "2020-03-09T13:03:47Z", "message": "add rpc change list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzc5MTg2", "url": "https://github.com/apache/iotdb/pull/896#pullrequestreview-371379186", "createdAt": "2020-03-09T17:22:41Z", "commit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzoyMjo0MVrOFzyChg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzoyMjo0MVrOFzyChg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MTU0Mg==", "bodyText": "it is better to throw MQClientException", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389841542", "createdAt": "2020-03-09T17:22:41Z", "author": {"login": "jixuan1989"}, "path": "example/rocketmq/src/main/java/org/apache/iotdb/rocketmq/RocketMQConsumer.java", "diffHunk": "@@ -120,7 +120,7 @@ public void prepareConsume() throws MQClientException {\n             new String(msg.getBody())));\n         try {\n           insert(new String(msg.getBody()));\n-        } catch (IoTDBConnectionException e) {\n+        } catch (Exception e) {\n           logger.error(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzgwNDI3", "url": "https://github.com/apache/iotdb/pull/896#pullrequestreview-371380427", "createdAt": "2020-03-09T17:24:13Z", "commit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzoyNDoxNFrOFzyGbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzozMjo1NFrOFzyc4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MjU0Mw==", "bodyText": "??", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389842543", "createdAt": "2020-03-09T17:24:14Z", "author": {"login": "jixuan1989"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBStatement.java", "diffHunk": "@@ -258,41 +257,27 @@ private boolean executeSQL(String sql) throws TException, SQLException {\n     }\n   }\n \n-  private int[] executeBatchSQL() throws TException, SQLException {\n+  private int[] executeBatchSQL() throws TException, BatchUpdateException {\n     isCancelled = false;\n-    TSExecuteBatchStatementReq execReq = new TSExecuteBatchStatementReq(sessionId,\n-        batchSQLList);\n+    TSExecuteBatchStatementReq execReq = new TSExecuteBatchStatementReq(sessionId, batchSQLList);\n     TSExecuteBatchStatementResp execResp = client.executeBatchStatement(execReq);\n-    if (execResp.getStatus().getStatusType().getCode() == TSStatusCode.SUCCESS_STATUS\n-        .getStatusCode()) {\n-      if (execResp.getResult() == null) {\n-        return new int[0];\n-      } else {\n-        List<Integer> result = execResp.getResult();\n-        int len = result.size();\n-        int[] updateArray = new int[len];\n-        for (int i = 0; i < len; i++) {\n-          updateArray[i] = result.get(i);\n-        }\n-        return updateArray;\n-      }\n-    } else {\n-      BatchUpdateException exception;\n-      if (execResp.getResult() == null) {\n-        exception = new BatchUpdateException(execResp.getStatus().getStatusType().getMessage(),\n-            new int[0]);\n-      } else {\n-        List<Integer> result = execResp.getResult();\n-        int len = result.size();\n-        int[] updateArray = new int[len];\n-        for (int i = 0; i < len; i++) {\n-          updateArray[i] = result.get(i);\n-        }\n-        exception = new BatchUpdateException(execResp.getStatus().getStatusType().getMessage(),\n-            updateArray);\n+    if (execResp.statusList == null) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0MzE1Mg==", "bodyText": "so, only keep the final message?", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389843152", "createdAt": "2020-03-09T17:25:11Z", "author": {"login": "jixuan1989"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBStatement.java", "diffHunk": "@@ -258,41 +257,27 @@ private boolean executeSQL(String sql) throws TException, SQLException {\n     }\n   }\n \n-  private int[] executeBatchSQL() throws TException, SQLException {\n+  private int[] executeBatchSQL() throws TException, BatchUpdateException {\n     isCancelled = false;\n-    TSExecuteBatchStatementReq execReq = new TSExecuteBatchStatementReq(sessionId,\n-        batchSQLList);\n+    TSExecuteBatchStatementReq execReq = new TSExecuteBatchStatementReq(sessionId, batchSQLList);\n     TSExecuteBatchStatementResp execResp = client.executeBatchStatement(execReq);\n-    if (execResp.getStatus().getStatusType().getCode() == TSStatusCode.SUCCESS_STATUS\n-        .getStatusCode()) {\n-      if (execResp.getResult() == null) {\n-        return new int[0];\n-      } else {\n-        List<Integer> result = execResp.getResult();\n-        int len = result.size();\n-        int[] updateArray = new int[len];\n-        for (int i = 0; i < len; i++) {\n-          updateArray[i] = result.get(i);\n-        }\n-        return updateArray;\n-      }\n-    } else {\n-      BatchUpdateException exception;\n-      if (execResp.getResult() == null) {\n-        exception = new BatchUpdateException(execResp.getStatus().getStatusType().getMessage(),\n-            new int[0]);\n-      } else {\n-        List<Integer> result = execResp.getResult();\n-        int len = result.size();\n-        int[] updateArray = new int[len];\n-        for (int i = 0; i < len; i++) {\n-          updateArray[i] = result.get(i);\n-        }\n-        exception = new BatchUpdateException(execResp.getStatus().getStatusType().getMessage(),\n-            updateArray);\n+    if (execResp.statusList == null) {\n+\n+    }\n+    int[] result = new int[execResp.statusList.size()];\n+    boolean allSuccess = true;\n+    String message = \"\";\n+    for (int i = 0; i < result.length; i++) {\n+      result[i] = execResp.statusList.get(i).code;\n+      if (result[i] != TSStatusCode.SUCCESS_STATUS.getStatusCode()) {\n+        allSuccess = false;\n+        message = execResp.statusList.get(i).message;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NTIxNg==", "bodyText": "overhead if all are successful. (too many TSStatus instances.. right?)", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389845216", "createdAt": "2020-03-09T17:28:14Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -537,7 +540,7 @@ public void insert(InsertPlan insertPlan) throws QueryProcessException {\n       while (loc < batchInsertPlan.getRowCount()) {\n         long time = batchInsertPlan.getTimes()[loc];\n         long curTimePartition = StorageEngine.fromTimeToTimePartition(time);\n-        results[loc] = TSStatusCode.SUCCESS_STATUS.getStatusCode();\n+        results[loc] = RpcUtils.getStatus(TSStatusCode.SUCCESS_STATUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NzMwMg==", "bodyText": "do we really need such a long string as the message?", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389847302", "createdAt": "2020-03-09T17:31:17Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -886,11 +837,8 @@ public TSFetchResultsResp fetchResults(TSFetchResultsReq req) {\n           QueryResourceManager.getInstance().endQuery(req.queryId);\n           queryId2DataSet.remove(req.queryId);\n         }\n-        TSFetchResultsResp resp =\n-            getTSFetchResultsResp(\n-                getStatus(\n-                    TSStatusCode.SUCCESS_STATUS,\n-                    \"FetchResult successfully. Has more result: \" + hasResultSet));\n+        TSFetchResultsResp resp = RpcUtils.getTSFetchResultsResp(\n+            TSStatusCode.SUCCESS_STATUS, \"FetchResult successfully. Has more result: \" + hasResultSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 474}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0NzYxOA==", "bodyText": "The same with Line 841.", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389847618", "createdAt": "2020-03-09T17:31:51Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -910,18 +858,16 @@ public TSFetchResultsResp fetchResults(TSFetchResultsReq req) {\n           queryId2DataSet.remove(req.queryId);\n         }\n         TSFetchResultsResp resp =\n-            getTSFetchResultsResp(\n-                getStatus(\n-                    TSStatusCode.SUCCESS_STATUS,\n-                    \"FetchResult successfully. Has more result: \" + hasResultSet));\n+            RpcUtils.getTSFetchResultsResp(TSStatusCode.SUCCESS_STATUS,\n+                \"FetchResult successfully. Has more result: \" + hasResultSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 487}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg0ODI5MA==", "bodyText": "maybe the message can be optional.", "url": "https://github.com/apache/iotdb/pull/896#discussion_r389848290", "createdAt": "2020-03-09T17:32:54Z", "author": {"login": "jixuan1989"}, "path": "service-rpc/src/main/thrift/rpc.thrift", "diffHunk": "@@ -19,18 +19,11 @@\n namespace java org.apache.iotdb.service.rpc.thrift\n \n // The return status code and message in each response.\n-struct TSStatusType {\n+struct TSStatus {\n   1: required i32 code\n   2: required string message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d143f287c165b23b4fce123d29fcfc6fa20f5e6"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "991cba9fbafe573f616dfa738de6c1d94527ff48", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/991cba9fbafe573f616dfa738de6c1d94527ff48", "committedDate": "2020-03-10T01:45:34Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fbcd75fbb156ba88cd9b191a10716955e109a66", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/0fbcd75fbb156ba88cd9b191a10716955e109a66", "committedDate": "2020-03-10T06:51:01Z", "message": "fix example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8df0ba5f55c01b24839bd2fc0602de18ea5e6d54", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8df0ba5f55c01b24839bd2fc0602de18ea5e6d54", "committedDate": "2020-03-10T12:26:28Z", "message": "fix flink example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a34b1022ee5cf1aa445dfd645c0ba5cc81385c7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/3a34b1022ee5cf1aa445dfd645c0ba5cc81385c7", "committedDate": "2020-03-10T12:26:53Z", "message": "remove unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f1c3ff0088420cedc6501f6181032170f15490d", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/6f1c3ff0088420cedc6501f6181032170f15490d", "committedDate": "2020-03-10T14:38:28Z", "message": "fix sonar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12226d9ee38839d7490b1f2f67ebb18113afe966", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/12226d9ee38839d7490b1f2f67ebb18113afe966", "committedDate": "2020-03-10T14:39:11Z", "message": "remove unused import"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3170, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}