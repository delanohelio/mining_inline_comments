{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MjE4Mzkx", "number": 1846, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTozNzo0NlrOEx3J8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjowMDozMlrOEyMZ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzE5MzQ3OnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTozNzo0NlrOHoLprA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTozNzo0NlrOHoLprA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5NTk4MA==", "bodyText": "There is something wrong with the logic.\nIt should be the default value that the server stores when the client is not registered with the server.", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r511895980", "createdAt": "2020-10-26T11:37:46Z", "author": {"login": "liutaohua"}, "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -916,23 +922,14 @@ public boolean checkTimeseriesExists(String path)\n     return result;\n   }\n \n-  private synchronized String getTimeZone()\n-      throws StatementExecutionException, IoTDBConnectionException {\n+  private synchronized String getTimeZone() {\n     if (zoneId != null) {\n       return zoneId.toString();\n     }\n-\n-    TSGetTimeZoneResp resp;\n-    try {\n-      resp = client.getTimeZone(sessionId);\n-    } catch (TException e) {\n-      throw new IoTDBConnectionException(e);\n-    }\n-    RpcUtils.verifySuccess(resp.getStatus());\n-    return resp.getTimeZone();\n+    return ZoneId.systemDefault().getId();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81079d18575dbd540c03eb5475184fb9cba65bea"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNzIwMjI5OnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTo0MDozMFrOHoLvHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTo0MDozMFrOHoLvHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTg5NzM3NA==", "bodyText": "There may be a bug here, because the value stored by the server does not necessarily change when an error is encountered, but the local cached zoneId does", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r511897374", "createdAt": "2020-10-26T11:40:30Z", "author": {"login": "liutaohua"}, "path": "session/src/main/java/org/apache/iotdb/session/Session.java", "diffHunk": "@@ -916,23 +922,14 @@ public boolean checkTimeseriesExists(String path)\n     return result;\n   }\n \n-  private synchronized String getTimeZone()\n-      throws StatementExecutionException, IoTDBConnectionException {\n+  private synchronized String getTimeZone() {\n     if (zoneId != null) {\n       return zoneId.toString();\n     }\n-\n-    TSGetTimeZoneResp resp;\n-    try {\n-      resp = client.getTimeZone(sessionId);\n-    } catch (TException e) {\n-      throw new IoTDBConnectionException(e);\n-    }\n-    RpcUtils.verifySuccess(resp.getStatus());\n-    return resp.getTimeZone();\n+    return ZoneId.systemDefault().getId();\n   }\n \n-  private synchronized void setTimeZone(String zoneId)\n+  public synchronized void setTimeZone(String zoneId)\n       throws StatementExecutionException, IoTDBConnectionException {\n     TSSetTimeZoneReq req = new TSSetTimeZoneReq(sessionId, zoneId);\n     TSStatus resp;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81079d18575dbd540c03eb5475184fb9cba65bea"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDY3NDk0OnYy", "diffSide": "RIGHT", "path": "session/src/test/java/org/apache/iotdb/session/pool/SessionPoolTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjowMDoyN1rOHosg2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDozNTo1N1rOHo1U0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNDM5Mg==", "bodyText": "So we have to fill a null to the constructor of SessionPool if we don't want to set timezone, right?\nI think we'd better don't change these tests and add an extra test of setting timezone.", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r512434392", "createdAt": "2020-10-27T06:00:27Z", "author": {"login": "HTHou"}, "path": "session/src/test/java/org/apache/iotdb/session/pool/SessionPoolTest.java", "diffHunk": "@@ -163,7 +163,7 @@ private void correctQuery(SessionPool pool) {\n \n   @Test\n   public void tryIfTheServerIsRestart() {\n-    SessionPool pool = new SessionPool(\"127.0.0.1\", 6667, \"root\", \"root\", 3, 1, 6000, false);\n+    SessionPool pool = new SessionPool(\"127.0.0.1\", 6667, \"root\", \"root\", 3, 1, 6000, false, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b37e419566cb91b455f78f4a6271102f149fe35c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3ODc2OA==", "bodyText": "Not Exactly. We can use a constructor which doesn't need a timezone parameter instead.", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r512578768", "createdAt": "2020-10-27T10:35:57Z", "author": {"login": "Alima777"}, "path": "session/src/test/java/org/apache/iotdb/session/pool/SessionPoolTest.java", "diffHunk": "@@ -163,7 +163,7 @@ private void correctQuery(SessionPool pool) {\n \n   @Test\n   public void tryIfTheServerIsRestart() {\n-    SessionPool pool = new SessionPool(\"127.0.0.1\", 6667, \"root\", \"root\", 3, 1, 6000, false);\n+    SessionPool pool = new SessionPool(\"127.0.0.1\", 6667, \"root\", \"root\", 3, 1, 6000, false, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNDM5Mg=="}, "originalCommit": {"oid": "b37e419566cb91b455f78f4a6271102f149fe35c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDY3NTEwOnYy", "diffSide": "RIGHT", "path": "thrift/src/main/thrift/rpc.thrift", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjowMDozMlrOHosg7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDozMTozN1rOHo1KGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNDQxNQ==", "bodyText": "Please update thrift/rpc-changelist.md.", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r512434415", "createdAt": "2020-10-27T06:00:32Z", "author": {"login": "HTHou"}, "path": "thrift/src/main/thrift/rpc.thrift", "diffHunk": "@@ -79,9 +79,10 @@ struct TSOpenSessionResp {\n // Open a session (connection) on the server against which operations may be executed.\n struct TSOpenSessionReq {\n   1: required TSProtocolVersion client_protocol = TSProtocolVersion.IOTDB_SERVICE_PROTOCOL_V3\n-  2: optional string username\n-  3: optional string password\n-  4: optional map<string, string> configuration\n+  2: required string zoneId\n+  3: optional string username\n+  4: optional string password\n+  5: optional map<string, string> configuration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b37e419566cb91b455f78f4a6271102f149fe35c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3NjAyNQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/iotdb/pull/1846#discussion_r512576025", "createdAt": "2020-10-27T10:31:37Z", "author": {"login": "Alima777"}, "path": "thrift/src/main/thrift/rpc.thrift", "diffHunk": "@@ -79,9 +79,10 @@ struct TSOpenSessionResp {\n // Open a session (connection) on the server against which operations may be executed.\n struct TSOpenSessionReq {\n   1: required TSProtocolVersion client_protocol = TSProtocolVersion.IOTDB_SERVICE_PROTOCOL_V3\n-  2: optional string username\n-  3: optional string password\n-  4: optional map<string, string> configuration\n+  2: required string zoneId\n+  3: optional string username\n+  4: optional string password\n+  5: optional map<string, string> configuration", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQzNDQxNQ=="}, "originalCommit": {"oid": "b37e419566cb91b455f78f4a6271102f149fe35c"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 644, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}