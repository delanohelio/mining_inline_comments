{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNDQzMzg5", "number": 1650, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNjo0MTowMVrOEev3cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMjo1MzozM1rOEjk9-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjc2OTc4OnYy", "diffSide": "RIGHT", "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNjo0MTowMVrOHKmoHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjo1NzoyMVrOHNuv9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4MDY2OQ==", "bodyText": "the first Clause should not be with ?", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480880669", "createdAt": "2020-09-01T06:41:01Z", "author": {"login": "Alima777"}, "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "diffHunk": "@@ -208,12 +208,13 @@ fromClause\n     ;\n \n specialClause\n-    : specialLimit\n-    | groupByTimeClause specialLimit?\n-    | groupByFillClause specialLimit?\n+    : specialLimit? orderByTimeClause?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1OTQ3Nw==", "bodyText": "thx, fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484159477", "createdAt": "2020-09-07T02:57:21Z", "author": {"login": "liutaohua"}, "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "diffHunk": "@@ -208,12 +208,13 @@ fromClause\n     ;\n \n specialClause\n-    : specialLimit\n-    | groupByTimeClause specialLimit?\n-    | groupByFillClause specialLimit?\n+    : specialLimit? orderByTimeClause?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4MDY2OQ=="}, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjc4Mzc0OnYy", "diffSide": "RIGHT", "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNjo0Mzo1OVrOHKmw8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjo1ODoxM1rOHNuwpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4MjkzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                | orderByTimeClause? specialLimit?\n          \n          \n            \n                | orderByTimeClause specialLimit?", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480882930", "createdAt": "2020-09-01T06:43:59Z", "author": {"login": "Alima777"}, "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "diffHunk": "@@ -208,12 +208,13 @@ fromClause\n     ;\n \n specialClause\n-    : specialLimit\n-    | groupByTimeClause specialLimit?\n-    | groupByFillClause specialLimit?\n+    : specialLimit? orderByTimeClause?\n+    | groupByTimeClause specialLimit? orderByTimeClause?\n+    | groupByFillClause specialLimit? orderByTimeClause?\n+    | orderByTimeClause? specialLimit?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1OTY1NQ==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484159655", "createdAt": "2020-09-07T02:58:13Z", "author": {"login": "liutaohua"}, "path": "antlr/src/main/antlr4/org/apache/iotdb/db/qp/strategy/SqlBase.g4", "diffHunk": "@@ -208,12 +208,13 @@ fromClause\n     ;\n \n specialClause\n-    : specialLimit\n-    | groupByTimeClause specialLimit?\n-    | groupByFillClause specialLimit?\n+    : specialLimit? orderByTimeClause?\n+    | groupByTimeClause specialLimit? orderByTimeClause?\n+    | groupByFillClause specialLimit? orderByTimeClause?\n+    | orderByTimeClause? specialLimit?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4MjkzMA=="}, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjgyNjA4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNjo1MjozMVrOHKnLPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQwMjoxMzozNlrOHNlqAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTY2MA==", "bodyText": "It could be omitted, keeping default value.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480889660", "createdAt": "2020-09-01T06:52:31Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1045,6 +1046,18 @@ public void enterOffsetClause(OffsetClauseContext ctx) {\n     }\n   }\n \n+  @Override\n+  public void enterOrderByTimeClause(OrderByTimeClauseContext ctx) {\n+    super.enterOrderByTimeClause(ctx);\n+    queryOp.setColumn(ctx.TIME().getText());\n+    if (ctx.ASC() == null) {\n+      queryOp.setAscending(false);\n+    }\n+    if (ctx.DESC() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAxMDQ5OQ==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484010499", "createdAt": "2020-09-06T02:13:36Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -1045,6 +1046,18 @@ public void enterOffsetClause(OffsetClauseContext ctx) {\n     }\n   }\n \n+  @Override\n+  public void enterOrderByTimeClause(OrderByTimeClauseContext ctx) {\n+    super.enterOrderByTimeClause(ctx);\n+    queryOp.setColumn(ctx.TIME().getText());\n+    if (ctx.ASC() == null) {\n+      queryOp.setAscending(false);\n+    }\n+    if (ctx.DESC() == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDg4OTY2MA=="}, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNjg5ODc1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwNzowODowOFrOHKn5rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjo1NjowNlrOHNuu2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwMTU1MQ==", "bodyText": "Add some comments?", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r480901551", "createdAt": "2020-09-01T07:08:08Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java", "diffHunk": "@@ -43,10 +43,11 @@\n    * @param dataTypes     time series data type\n    * @param timeGenerator EngineTimeGenerator object\n    * @param readers       readers in List(IReaderByTimeStamp) structure\n+   * @param ascending", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1OTE5NA==", "bodyText": "thx,  already added", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484159194", "createdAt": "2020-09-07T02:56:06Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/RawQueryDataSetWithValueFilter.java", "diffHunk": "@@ -43,10 +43,11 @@\n    * @param dataTypes     time series data type\n    * @param timeGenerator EngineTimeGenerator object\n    * @param readers       readers in List(IReaderByTimeStamp) structure\n+   * @param ascending", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDkwMTU1MQ=="}, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDE0MjE4OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoyMDowM1rOHLuv3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNVQxMjo1NDowMVrOHNh4CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MjMwMg==", "bodyText": "What about an abstract method here?", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r482062302", "createdAt": "2020-09-02T13:20:03Z", "author": {"login": "Alima777"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java", "diffHunk": "@@ -107,4 +107,8 @@ protected abstract IBatchReader generateNewBatchReader(SingleSeriesExpression ex\n   public boolean hasOrNode() {\n     return hasOrNode;\n   }\n+\n+  protected boolean isAscending() {\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzk0ODU1Mg==", "bodyText": "Both are fine~", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r483948552", "createdAt": "2020-09-05T12:54:01Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/query/timegenerator/TimeGenerator.java", "diffHunk": "@@ -107,4 +107,8 @@ protected abstract IBatchReader generateNewBatchReader(SingleSeriesExpression ex\n   public boolean hasOrNode() {\n     return hasOrNode;\n   }\n+\n+  protected boolean isAscending() {\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2MjMwMg=="}, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMjk4ODI3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODozNTowNFrOHNE0uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwODozNTowNFrOHNE0uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzQ3MjU2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @param minBound       calculate points whose time > bound\n          \n          \n            \n               * @param minBound       calculate points whose time >= bound", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r483472569", "createdAt": "2020-09-04T08:35:04Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -78,10 +78,11 @@ public abstract void updateResultFromStatistics(Statistics statistics)\n    * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n    *\n    * @param dataInThisPage the data in Page\n-   * @param bound          calculate points whose time < bound\n+   * @param minBound       calculate points whose time > bound", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a067cbe43bde05c62126103e4254be3a813f565"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzkwODkzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMjo0ODozOFrOHNuo7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMjo0NzozNFrOHPg8bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1NzY3Ng==", "bodyText": "Why here use GroupByTimePlan to replace the former ones? GroupByTimePlan contains some useless info that will waste some memory space.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484157676", "createdAt": "2020-09-07T02:48:38Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java", "diffHunk": "@@ -31,18 +32,13 @@\n public abstract class GroupByEngineDataSet extends QueryDataSet {\n \n   protected long queryId;\n-  protected long interval;\n-  protected long slidingStep;\n-  // total query [startTime, endTime)\n-  protected long startTime;\n-  protected long endTime;\n+  protected GroupByTimePlan plan;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12f28231a8a745ef78e6d9425b3e7bdd2842e5ce"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMDQ0NA==", "bodyText": "u're right. It's been rolled back", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486030444", "createdAt": "2020-09-10T02:47:34Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByEngineDataSet.java", "diffHunk": "@@ -31,18 +32,13 @@\n public abstract class GroupByEngineDataSet extends QueryDataSet {\n \n   protected long queryId;\n-  protected long interval;\n-  protected long slidingStep;\n-  // total query [startTime, endTime)\n-  protected long startTime;\n-  protected long endTime;\n+  protected GroupByTimePlan plan;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1NzY3Ng=="}, "originalCommit": {"oid": "12f28231a8a745ef78e6d9425b3e7bdd2842e5ce"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzk2NTA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzozMDoyOFrOHNvIdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMjo0ODo0N1rOHPg92g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTc1MQ==", "bodyText": "timestamp is the a cached timestamp for all sensors in this query, it may not be the current one which is needed to fill value.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484165751", "createdAt": "2020-09-07T03:30:28Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -160,6 +171,24 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return constructRowRecord(aggregateResultList);\n   }\n \n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    long[] timestampArray = new long[1];\n+    AggregateResult aggrResultByName = AggregateResultFactory.getAggrResultByName(\n+        groupByTimePlan.getDeduplicatedAggregations().get(i),\n+        groupByTimePlan.getDeduplicatedDataTypes().get(i));\n+\n+    int timeArrayLength = 0;\n+    if (hasCachedTimestamp) {\n+      timestampArray[timeArrayLength++] = timestamp;\n+\n+      aggrResultByName\n+          .updateResultUsingTimestamps(timestampArray, timeArrayLength, allDataReaderList.get(i));\n+      return new Pair<>(timestamp, aggrResultByName.getResult());\n+    }\n+    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6cb4a4b13e4f2854694f86d9c91307b0a58936"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMDgxMA==", "bodyText": "thx,fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486030810", "createdAt": "2020-09-10T02:48:47Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -160,6 +171,24 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return constructRowRecord(aggregateResultList);\n   }\n \n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    long[] timestampArray = new long[1];\n+    AggregateResult aggrResultByName = AggregateResultFactory.getAggrResultByName(\n+        groupByTimePlan.getDeduplicatedAggregations().get(i),\n+        groupByTimePlan.getDeduplicatedDataTypes().get(i));\n+\n+    int timeArrayLength = 0;\n+    if (hasCachedTimestamp) {\n+      timestampArray[timeArrayLength++] = timestamp;\n+\n+      aggrResultByName\n+          .updateResultUsingTimestamps(timestampArray, timeArrayLength, allDataReaderList.get(i));\n+      return new Pair<>(timestamp, aggrResultByName.getResult());\n+    }\n+    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NTc1MQ=="}, "originalCommit": {"oid": "be6cb4a4b13e4f2854694f86d9c91307b0a58936"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzk2Nzk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzozMjo0MFrOHNvJ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMjo0OTo0MVrOHPg-2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NjEzOA==", "bodyText": "You don't need to consider the ascending case, the peekNextNotNullValue method will only be used in desc case.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484166138", "createdAt": "2020-09-07T03:32:40Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java", "diffHunk": "@@ -140,9 +142,37 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return record;\n   }\n \n-  protected GroupByExecutor getGroupByExecutor(PartialPath path, Set<String> allSensors, TSDataType dataType,\n-                                               QueryContext context, Filter timeFilter, TsFileFilter fileFilter)\n-          throws StorageEngineException, QueryProcessException {\n-    return new LocalGroupByExecutor(path, allSensors, dataType, context, timeFilter, fileFilter);\n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    Pair<Long, Object> result = null;\n+    long nextStartTime = curStartTime;\n+    long nextEndTime;\n+    do {\n+      if (ascending) {\n+        nextStartTime += plan.getSlidingStep();\n+        if (nextStartTime < plan.getEndTime()) {\n+          nextEndTime = Math.min(nextStartTime + plan.getInterval(), plan.getEndTime());\n+        } else {\n+          return null;\n+        }\n+      } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be6cb4a4b13e4f2854694f86d9c91307b0a58936"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzMTA2NQ==", "bodyText": "the  code has been removed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486031065", "createdAt": "2020-09-10T02:49:41Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java", "diffHunk": "@@ -140,9 +142,37 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n     return record;\n   }\n \n-  protected GroupByExecutor getGroupByExecutor(PartialPath path, Set<String> allSensors, TSDataType dataType,\n-                                               QueryContext context, Filter timeFilter, TsFileFilter fileFilter)\n-          throws StorageEngineException, QueryProcessException {\n-    return new LocalGroupByExecutor(path, allSensors, dataType, context, timeFilter, fileFilter);\n+  @Override\n+  public Pair<Long, Object> peekNextNotNullValue(Path path, int i) throws IOException {\n+    Pair<Long, Object> result = null;\n+    long nextStartTime = curStartTime;\n+    long nextEndTime;\n+    do {\n+      if (ascending) {\n+        nextStartTime += plan.getSlidingStep();\n+        if (nextStartTime < plan.getEndTime()) {\n+          nextEndTime = Math.min(nextStartTime + plan.getInterval(), plan.getEndTime());\n+        } else {\n+          return null;\n+        }\n+      } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2NjEzOA=="}, "originalCommit": {"oid": "be6cb4a4b13e4f2854694f86d9c91307b0a58936"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU3MDc5OnYy", "diffSide": "RIGHT", "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo0Mjo0N1rOHN9_3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoxMjowMVrOHPhVWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwOTMxMA==", "bodyText": "\u9650\u5236\u4e3a\u7b2c\u6b21\u904d\u5386\u7684\u5f00\u59cb\u65f6\u95f4\u503c\n\nA typo? What does that mean?", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484409310", "createdAt": "2020-09-07T12:42:47Z", "author": {"login": "Alima777"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,181 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\n+\u662f**\u4f2a\u5012\u5e8f\u8bfb\u53d6**(\u56e0\u4e3a\u6587\u4ef6\u5185\u4f9d\u7136\u662f\u5347\u5e8f\u5b58\u50a8\u7684),\u6570\u636e\u793a\u4f8b:\n+\n+```\n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217 (1,6)\n+   +---TsFile1---+   +---TsFile2---+   \n+   | 1,2,3,4,5   |   | 6,7,8,9,10  |\n+   +-------------+   +-------------+\n+   \n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)\n+   +---TsFile2---+   +---TsFile1---+   \n+   | 6,7,8,9,10  |   | 1,2,3,4,5   |\n+   +-------------+   +-------------+              \n+```\n+\n+2.\u4e0a\u9762\u7684\u793a\u4f8b\u53ea\u63cf\u8ff0\u4e86\u987a\u5e8f\u6587\u4ef6\uff0c\u4e71\u5e8f\u6587\u4ef6\u7684\u7279\u70b9\u662f: \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u4e0e\u5176\u4ed6\u6587\u4ef6\u7684\u6570\u636e\u5b58\u5728\u76f8\u4ea4\uff0c\n+\u4e0d\u4ec5\u4ec5\u548c\u987a\u5e8f\u6587\u4ef6\u76f8\u4ea4\uff0c\u4e71\u5e8f\u548c\u4e71\u5e8f\u6587\u4ef6\u4e4b\u95f4\u4e5f\u53ef\u80fd\u76f8\u4ea4\u3002\n+\n+```\n+   +---TsFile1---+     +---TsFile2---+   \n+   | 1,2,3,4,5   |     | 6,7,8,9,10  |\n+   +-------------+     +-------------+\n+      +--------------unseq1-----------+     \n+      | 2,11                          |   \n+      +-------------------------------+\n+         +-unseq2-+     \n+         | 3,4,5  |   \n+         +--------+\n+      \n+```\n+\n+3.\u5bf9\u4e8e**\u76f8\u4ea4**\u7684\u90e8\u5206\uff0c\u9700\u8981\u4f7f\u7528`\u591a\u8def\u5f52\u5e76`\u67e5\u8be2\u51fa\u6700\u7ec8\u7ed3\u679c\u3002\u5177\u4f53\u5904\u7406\u7ec6\u8282\u53ef\u4ee5\u53c2\u89c1[SeriesReader](../DataQuery/SeriesReader.md).\n+\n+4.\u5bf9\u4e8e\u6587\u4ef6\u5c42\u800c\u8a00\uff0c\u6211\u4eec\u62bd\u8c61\u51fa\u4e86`TimeOrderUtils`\uff0c\u7528\u6765\u5b8c\u6210\u5bf9\u5347\u5e8f\u3001\u964d\u5e8f\u4e0d\u540c\u5b9e\u73b0\u7684\u65b9\u6cd5\u63d0\u53d6\u3002\n+\n+```java\n+ public interface TimeOrderUtils {\n+    //\u6392\u5e8f\u4f7f\u7528\u7684\u5b57\u6bb5\uff0c\u5347\u5e8f\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\uff0c\u964d\u5e8f\u4f7f\u7528\u7ed3\u675f\u65f6\u95f4\u3002\n+    //TsFileResource\u9762\u5bf9\u6587\u4ef6\u76f8\u5173\uff0cStatistics\u9762\u5411Chunk\u548cPage\u76f8\u5173\n+    long getOrderTime(Statistics statistics);\n+    long getOrderTime(TsFileResource fileResource);\n+\n+    //\u5224\u65ad\u662f\u5426\u76f8\u4ea4\u4f7f\u7528\u7684\u65f6\u95f4\u4f9d\u636e\uff0c\u5347\u5e8f\u4f7f\u7528\u7ed3\u675f\u65f6\u95f4\uff0c\u964d\u5e8f\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\n+    long getOverlapCheckTime(Statistics range);\n+\n+    //\u6839\u636e\u63d0\u4f9b\u7684\u65f6\u95f4\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff0cleft\u4e3a\u4f9d\u636e\u65f6\u95f4\uff0cright\u4e3a\u8981\u5224\u65ad\u7684\u6587\u4ef6\n+    boolean isOverlapped(Statistics left, Statistics right);\n+    boolean isOverlapped(long time, Statistics right);\n+    boolean isOverlapped(long time, TsFileResource right);\n+\n+    //\u5bf9\u4e8e\u6709\u5e8f\u6587\u4ef6\u7684\u904d\u5386\u89c4\u5219\uff0c\u5347\u5e8f\u65f6\u6b63\u5e8f\u904d\u5386\uff0c\u964d\u5e8f\u65f6\u5012\u5e8f\u904d\u5386\n+    TsFileResource getNextSeqFileResource(List<TsFileResource> seqResources, boolean isDelete);\n+\n+    //\u5bf9\u4e8e\u6240\u6709\u6587\u4ef6\u5c42\u7684\u4e34\u65f6\u7f13\u5b58\u6392\u5e8f\u89c4\u5219\u7684\u5b9e\u73b0\n+    <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor);\n+\n+    //\u5faa\u73af\u8bfb\u53d6\u6570\u636e\u65f6\u5224\u65ad\u662f\u5426\u5230\u8fbe\u4e86\u5f53\u524d\u8bbe\u7f6e\u7684\u505c\u6b62\u70b9\n+    boolean isExcessEndpoint(long time, long endpointTime);\n+\n+    //\u6216\u8bb8\u5f53\u524d\u4f7f\u7528\u7684\u6392\u5e8f\u65b9\u5f0f\n+    boolean getAscending();\n+  }\n+```\n+\n+5.\u5b8c\u6210\u4e86\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u5012\u5e8f\u53d6\u51fa\u6765\u7684\u6570\u636e\u5982\u4e0b\uff1a\n+\n+```\n+6,7,8,9,10,1,2,3,4,5\n+```\n+\n+\u8fd9\u662f\u56e0\u4e3a\u6570\u636e\u5728Chunk\u3001Page\u3001\u7f13\u5b58\u4e2d\u90fd\u662f\u5347\u5e8f\u5b58\u50a8\uff0c\u6240\u4ee5\u8f6c\u79fb\u5230 `BatchData` \u4e2d\u67e5\u770b\u5c31\u662f\u793a\u4f8b\u4e2d\u7684\u6837\u5b50\u3002\n+\n+## BatchData\n+1.\u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u7684\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u65b9\u5f0f\uff0c\u6240\u4ee5\u5728\u6570\u636e\u653e\u5230 `BatchData` \u4e4b\u540e\u5012\u5e8f\u8bfb\u53d6\u96c6\u5408\u91cc\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\n+\n+BatchData\u7c7b\u4f3c\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u683c\u5f0f\uff0c\u5c01\u88c5\u4e86\u5199\u5165\u548c\u8bfb\u53d6\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5012\u5e8f\uff0c\u62bd\u8c61\u4e86\u4e0b\u9762\u7684\u5b50\u7c7b\uff1a\n+```java\n+\n+public class DescBatchData extends BatchData {\n+  //\u5224\u65ad\u662f\u5426\u8fd8\u6709\u503c\uff0c\u6b63\u5e8f\u65f6\u5019\u5224\u65ad\u662f\u5426\u8bfb\u5230\u5199\u5165\u7684size\u4f4d\u7f6e\uff0c\u5012\u5e8f\u5c31\u662f\u5224\u65ad\u662f\u5426\u8bfb\u5230\u4e860\u7684\u4f4d\u7f6e\n+  public boolean hasCurrent();\n+  //\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u6b63\u5e8f\u4e3a index+1 \u64cd\u4f5c\uff0c \u5012\u5e8f\u4e3a index-1 \u64cd\u4f5c\n+  public void next();\n+  //\u91cd\u5236\u6307\u9488\u4f4d\u7f6e\uff0c\u6b63\u5e8f\u4e3a\u91cd\u5236\u52300\uff0c\u5012\u5e8f\u91cd\u5236\u5230\u6570\u636e\u5199\u5165\u4f4d\u7f6e\n+  public void resetBatchData();\n+  //\u5c31\u50cf\u662fNio\u4e2d\u7684Buffer\u7c7b\u7684flip\u64cd\u4f5c\uff0c\u5728\u6570\u636e\u5199\u5165\u5b8c\u6210\u65f6\u505a\u7684\u64cd\u4f5c\uff0c\u4e3a\u8bfb\u53d6\u505a\u597d\u51c6\u5907\n+  public BatchData flip();\n+  //\u4f7f\u7528\u5177\u4f53\u65f6\u95f4\u83b7\u53d6\u503c\uff0c\u6b63\u5e8f\u65f6index\u4ece0\u5230size\u904d\u5386\uff0c\u5012\u5e8f\u65f6\u4ecesize\u52300\u904d\u5386\n+  public Object getValueInTimestamp(long time);\n+}\n+```\n+\n+2.\u5728\u9700\u8981\u5012\u5e8f\u5904\u7406\u6570\u636e\u7684\u4f4d\u7f6e\u6784\u5efa`DescBatchData`\u7c7b\uff0c\u4e3a\u6b64\uff0c\u7279\u610f\u8bbe\u8ba1\u4e86\u4e00\u4e2a`BatchDataFactory`\u7c7b\uff0c\n+\u6839\u636eascending\u53c2\u6570\u5224\u65ad\u751f\u4ea7\u54ea\u4e2a\u7c7b\u578b\u7684BatchData\u3002\n+\n+3.\u81f3\u6b64\u6570\u636e\u4ece\u78c1\u76d8\u548c\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\u90fd\u662f\u4e25\u683c\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u7684\u4e86\u3002\n+\n+## \u6570\u636e\u96c6\n+1.\u539f\u59cb\u6570\u636e\u67e5\u8be2\n+```sql\n+select * from root order by time desc \n+select * from root where root.ln.d1.s1>100 order by time desc\n+select * from root where time >100 order by time desc\n+```\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u4e2d\uff0c\u53ea\u8981\u5411`SeriesReader`\u4f20\u9012\u4e86\u6b63\u786e\u7684ascending\u53c2\u6570\u5c31\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n+\n+2.GroupBy\n+```sql\n+select max_time(*) from root group by ((0,10],2ms) order by time desc\n+```\n+\u5982\u4e0a\u6240\u793a\u7684Sql\u4e2d,groupBy\u67e5\u8be2\u7684\u533a\u95f4\u5206\u522b\u4e3a:\n+```\n+[0-2),[2-4),[4-6),[6-8),[8-10)\n+```\n+\u5012\u5e8f\u67e5\u8be2\u53ea\u9700\u8981\u5c06\u65f6\u95f4\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4fee\u6539\u4e3a:\n+```\n+[8-10),[6-8),[4-6),[2-4),[0-2)\n+```\n+\n+>\u8ba1\u7b97\u65b9\u6cd5\u4e3a:\n+>\n+> ((\u7ed3\u675f\u65f6\u95f4-\u5f00\u59cb\u65f6\u95f4)/\u6b65\u957f\u503c\uff09 \u7ed3\u679c\u5411\u4e0a\u53d6\u6574\uff0c\u5f97\u5230\u7684\u503c\u4e3aGroupBy\u4e2d\u4f1a\u53d1\u751f\u7684\u904d\u5386\u6b21\u6570(\u8bb0\u4e3ai)\u3002\n+>\n+> (\u6b65\u957f * (i-1) + \u5f00\u59cb\u65f6\u95f4)  \u7ed3\u679c\u4e3a\u7b2ci\u6b21\u904d\u5386\u7684\u5f00\u59cb\u65f6\u95f4\u503c\u3002\n+\n+\n+\u5bf9\u4e8eBatchData\u4e2d\u7684\u6570\u636e\u5927\u4e8e\u6bcf\u6b21\u904d\u5386\u7684\u7ed3\u675f\u65f6\u95f4\u65f6\uff0c\u8fdb\u884cskip\uff0c\u7136\u540e\u5bf9 `AggregateResult` \u65b0\u589e\n+minBound\u8ba1\u7b97\u9650\u5236,\u9650\u5236\u4e3a\u7b2c\u6b21\u904d\u5386\u7684\u5f00\u59cb\u65f6\u95f4\u503c\uff0c", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404fb78f35ecd70b0415f3afd4374a1821e683eb"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzNjgyNA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486036824", "createdAt": "2020-09-10T03:12:01Z", "author": {"login": "liutaohua"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,181 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\n+\u662f**\u4f2a\u5012\u5e8f\u8bfb\u53d6**(\u56e0\u4e3a\u6587\u4ef6\u5185\u4f9d\u7136\u662f\u5347\u5e8f\u5b58\u50a8\u7684),\u6570\u636e\u793a\u4f8b:\n+\n+```\n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217 (1,6)\n+   +---TsFile1---+   +---TsFile2---+   \n+   | 1,2,3,4,5   |   | 6,7,8,9,10  |\n+   +-------------+   +-------------+\n+   \n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)\n+   +---TsFile2---+   +---TsFile1---+   \n+   | 6,7,8,9,10  |   | 1,2,3,4,5   |\n+   +-------------+   +-------------+              \n+```\n+\n+2.\u4e0a\u9762\u7684\u793a\u4f8b\u53ea\u63cf\u8ff0\u4e86\u987a\u5e8f\u6587\u4ef6\uff0c\u4e71\u5e8f\u6587\u4ef6\u7684\u7279\u70b9\u662f: \u6587\u4ef6\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u4e0e\u5176\u4ed6\u6587\u4ef6\u7684\u6570\u636e\u5b58\u5728\u76f8\u4ea4\uff0c\n+\u4e0d\u4ec5\u4ec5\u548c\u987a\u5e8f\u6587\u4ef6\u76f8\u4ea4\uff0c\u4e71\u5e8f\u548c\u4e71\u5e8f\u6587\u4ef6\u4e4b\u95f4\u4e5f\u53ef\u80fd\u76f8\u4ea4\u3002\n+\n+```\n+   +---TsFile1---+     +---TsFile2---+   \n+   | 1,2,3,4,5   |     | 6,7,8,9,10  |\n+   +-------------+     +-------------+\n+      +--------------unseq1-----------+     \n+      | 2,11                          |   \n+      +-------------------------------+\n+         +-unseq2-+     \n+         | 3,4,5  |   \n+         +--------+\n+      \n+```\n+\n+3.\u5bf9\u4e8e**\u76f8\u4ea4**\u7684\u90e8\u5206\uff0c\u9700\u8981\u4f7f\u7528`\u591a\u8def\u5f52\u5e76`\u67e5\u8be2\u51fa\u6700\u7ec8\u7ed3\u679c\u3002\u5177\u4f53\u5904\u7406\u7ec6\u8282\u53ef\u4ee5\u53c2\u89c1[SeriesReader](../DataQuery/SeriesReader.md).\n+\n+4.\u5bf9\u4e8e\u6587\u4ef6\u5c42\u800c\u8a00\uff0c\u6211\u4eec\u62bd\u8c61\u51fa\u4e86`TimeOrderUtils`\uff0c\u7528\u6765\u5b8c\u6210\u5bf9\u5347\u5e8f\u3001\u964d\u5e8f\u4e0d\u540c\u5b9e\u73b0\u7684\u65b9\u6cd5\u63d0\u53d6\u3002\n+\n+```java\n+ public interface TimeOrderUtils {\n+    //\u6392\u5e8f\u4f7f\u7528\u7684\u5b57\u6bb5\uff0c\u5347\u5e8f\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\uff0c\u964d\u5e8f\u4f7f\u7528\u7ed3\u675f\u65f6\u95f4\u3002\n+    //TsFileResource\u9762\u5bf9\u6587\u4ef6\u76f8\u5173\uff0cStatistics\u9762\u5411Chunk\u548cPage\u76f8\u5173\n+    long getOrderTime(Statistics statistics);\n+    long getOrderTime(TsFileResource fileResource);\n+\n+    //\u5224\u65ad\u662f\u5426\u76f8\u4ea4\u4f7f\u7528\u7684\u65f6\u95f4\u4f9d\u636e\uff0c\u5347\u5e8f\u4f7f\u7528\u7ed3\u675f\u65f6\u95f4\uff0c\u964d\u5e8f\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\n+    long getOverlapCheckTime(Statistics range);\n+\n+    //\u6839\u636e\u63d0\u4f9b\u7684\u65f6\u95f4\u5224\u65ad\u662f\u5426\u76f8\u4ea4\uff0cleft\u4e3a\u4f9d\u636e\u65f6\u95f4\uff0cright\u4e3a\u8981\u5224\u65ad\u7684\u6587\u4ef6\n+    boolean isOverlapped(Statistics left, Statistics right);\n+    boolean isOverlapped(long time, Statistics right);\n+    boolean isOverlapped(long time, TsFileResource right);\n+\n+    //\u5bf9\u4e8e\u6709\u5e8f\u6587\u4ef6\u7684\u904d\u5386\u89c4\u5219\uff0c\u5347\u5e8f\u65f6\u6b63\u5e8f\u904d\u5386\uff0c\u964d\u5e8f\u65f6\u5012\u5e8f\u904d\u5386\n+    TsFileResource getNextSeqFileResource(List<TsFileResource> seqResources, boolean isDelete);\n+\n+    //\u5bf9\u4e8e\u6240\u6709\u6587\u4ef6\u5c42\u7684\u4e34\u65f6\u7f13\u5b58\u6392\u5e8f\u89c4\u5219\u7684\u5b9e\u73b0\n+    <T> Comparator<T> comparingLong(ToLongFunction<? super T> keyExtractor);\n+\n+    //\u5faa\u73af\u8bfb\u53d6\u6570\u636e\u65f6\u5224\u65ad\u662f\u5426\u5230\u8fbe\u4e86\u5f53\u524d\u8bbe\u7f6e\u7684\u505c\u6b62\u70b9\n+    boolean isExcessEndpoint(long time, long endpointTime);\n+\n+    //\u6216\u8bb8\u5f53\u524d\u4f7f\u7528\u7684\u6392\u5e8f\u65b9\u5f0f\n+    boolean getAscending();\n+  }\n+```\n+\n+5.\u5b8c\u6210\u4e86\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u5012\u5e8f\u53d6\u51fa\u6765\u7684\u6570\u636e\u5982\u4e0b\uff1a\n+\n+```\n+6,7,8,9,10,1,2,3,4,5\n+```\n+\n+\u8fd9\u662f\u56e0\u4e3a\u6570\u636e\u5728Chunk\u3001Page\u3001\u7f13\u5b58\u4e2d\u90fd\u662f\u5347\u5e8f\u5b58\u50a8\uff0c\u6240\u4ee5\u8f6c\u79fb\u5230 `BatchData` \u4e2d\u67e5\u770b\u5c31\u662f\u793a\u4f8b\u4e2d\u7684\u6837\u5b50\u3002\n+\n+## BatchData\n+1.\u4e3a\u4e86\u517c\u5bb9\u539f\u6709\u7684\u6587\u4ef6\u8bfb\u53d6\u6570\u636e\u65b9\u5f0f\uff0c\u6240\u4ee5\u5728\u6570\u636e\u653e\u5230 `BatchData` \u4e4b\u540e\u5012\u5e8f\u8bfb\u53d6\u96c6\u5408\u91cc\u7684\u6570\u636e\u5c31\u53ef\u4ee5\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\n+\n+BatchData\u7c7b\u4f3c\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u683c\u5f0f\uff0c\u5c01\u88c5\u4e86\u5199\u5165\u548c\u8bfb\u53d6\u7684\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u5012\u5e8f\uff0c\u62bd\u8c61\u4e86\u4e0b\u9762\u7684\u5b50\u7c7b\uff1a\n+```java\n+\n+public class DescBatchData extends BatchData {\n+  //\u5224\u65ad\u662f\u5426\u8fd8\u6709\u503c\uff0c\u6b63\u5e8f\u65f6\u5019\u5224\u65ad\u662f\u5426\u8bfb\u5230\u5199\u5165\u7684size\u4f4d\u7f6e\uff0c\u5012\u5e8f\u5c31\u662f\u5224\u65ad\u662f\u5426\u8bfb\u5230\u4e860\u7684\u4f4d\u7f6e\n+  public boolean hasCurrent();\n+  //\u6307\u9488\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6570\u636e\uff0c\u6b63\u5e8f\u4e3a index+1 \u64cd\u4f5c\uff0c \u5012\u5e8f\u4e3a index-1 \u64cd\u4f5c\n+  public void next();\n+  //\u91cd\u5236\u6307\u9488\u4f4d\u7f6e\uff0c\u6b63\u5e8f\u4e3a\u91cd\u5236\u52300\uff0c\u5012\u5e8f\u91cd\u5236\u5230\u6570\u636e\u5199\u5165\u4f4d\u7f6e\n+  public void resetBatchData();\n+  //\u5c31\u50cf\u662fNio\u4e2d\u7684Buffer\u7c7b\u7684flip\u64cd\u4f5c\uff0c\u5728\u6570\u636e\u5199\u5165\u5b8c\u6210\u65f6\u505a\u7684\u64cd\u4f5c\uff0c\u4e3a\u8bfb\u53d6\u505a\u597d\u51c6\u5907\n+  public BatchData flip();\n+  //\u4f7f\u7528\u5177\u4f53\u65f6\u95f4\u83b7\u53d6\u503c\uff0c\u6b63\u5e8f\u65f6index\u4ece0\u5230size\u904d\u5386\uff0c\u5012\u5e8f\u65f6\u4ecesize\u52300\u904d\u5386\n+  public Object getValueInTimestamp(long time);\n+}\n+```\n+\n+2.\u5728\u9700\u8981\u5012\u5e8f\u5904\u7406\u6570\u636e\u7684\u4f4d\u7f6e\u6784\u5efa`DescBatchData`\u7c7b\uff0c\u4e3a\u6b64\uff0c\u7279\u610f\u8bbe\u8ba1\u4e86\u4e00\u4e2a`BatchDataFactory`\u7c7b\uff0c\n+\u6839\u636eascending\u53c2\u6570\u5224\u65ad\u751f\u4ea7\u54ea\u4e2a\u7c7b\u578b\u7684BatchData\u3002\n+\n+3.\u81f3\u6b64\u6570\u636e\u4ece\u78c1\u76d8\u548c\u7f13\u5b58\u4e2d\u53d6\u51fa\u7684\u6570\u636e\u90fd\u662f\u4e25\u683c\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u7684\u4e86\u3002\n+\n+## \u6570\u636e\u96c6\n+1.\u539f\u59cb\u6570\u636e\u67e5\u8be2\n+```sql\n+select * from root order by time desc \n+select * from root where root.ln.d1.s1>100 order by time desc\n+select * from root where time >100 order by time desc\n+```\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u4e2d\uff0c\u53ea\u8981\u5411`SeriesReader`\u4f20\u9012\u4e86\u6b63\u786e\u7684ascending\u53c2\u6570\u5c31\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002\n+\n+2.GroupBy\n+```sql\n+select max_time(*) from root group by ((0,10],2ms) order by time desc\n+```\n+\u5982\u4e0a\u6240\u793a\u7684Sql\u4e2d,groupBy\u67e5\u8be2\u7684\u533a\u95f4\u5206\u522b\u4e3a:\n+```\n+[0-2),[2-4),[4-6),[6-8),[8-10)\n+```\n+\u5012\u5e8f\u67e5\u8be2\u53ea\u9700\u8981\u5c06\u65f6\u95f4\u8ba1\u7b97\u7684\u8fc7\u7a0b\u4fee\u6539\u4e3a:\n+```\n+[8-10),[6-8),[4-6),[2-4),[0-2)\n+```\n+\n+>\u8ba1\u7b97\u65b9\u6cd5\u4e3a:\n+>\n+> ((\u7ed3\u675f\u65f6\u95f4-\u5f00\u59cb\u65f6\u95f4)/\u6b65\u957f\u503c\uff09 \u7ed3\u679c\u5411\u4e0a\u53d6\u6574\uff0c\u5f97\u5230\u7684\u503c\u4e3aGroupBy\u4e2d\u4f1a\u53d1\u751f\u7684\u904d\u5386\u6b21\u6570(\u8bb0\u4e3ai)\u3002\n+>\n+> (\u6b65\u957f * (i-1) + \u5f00\u59cb\u65f6\u95f4)  \u7ed3\u679c\u4e3a\u7b2ci\u6b21\u904d\u5386\u7684\u5f00\u59cb\u65f6\u95f4\u503c\u3002\n+\n+\n+\u5bf9\u4e8eBatchData\u4e2d\u7684\u6570\u636e\u5927\u4e8e\u6bcf\u6b21\u904d\u5386\u7684\u7ed3\u675f\u65f6\u95f4\u65f6\uff0c\u8fdb\u884cskip\uff0c\u7136\u540e\u5bf9 `AggregateResult` \u65b0\u589e\n+minBound\u8ba1\u7b97\u9650\u5236,\u9650\u5236\u4e3a\u7b2c\u6b21\u904d\u5386\u7684\u5f00\u59cb\u65f6\u95f4\u503c\uff0c", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQwOTMxMA=="}, "originalCommit": {"oid": "404fb78f35ecd70b0415f3afd4374a1821e683eb"}, "originalPosition": 164}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTU4NDMyOnYy", "diffSide": "RIGHT", "path": "docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMjo0Njo1MVrOHN-IAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwMzoxMjoyN1rOHPhVuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxMTM5Mg==", "bodyText": "\u867d\u7136\u8fd9\u662f\u4e2a\u4f8b\u5b50...\u4f46\u662f\u6211\u89c9\u5f97\u62ff limit 1\u6765\u5f53\u964d\u5e8f\u65f6\u95f4\u7684\u4f8b\u5b50...\u662f\u4e0d\u662f\u4e0d\u592a\u597d", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r484411392", "createdAt": "2020-09-07T12:46:51Z", "author": {"login": "Alima777"}, "path": "docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md", "diffHunk": "@@ -156,6 +156,14 @@ select wf01.wt01.status,wf02.wt02.hardware from root.ln where (time > 2017-11-01\n \u8be5SQL\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n <center><img style=\"width:100%; max-width:800px; max-height:600px; margin-left:auto; margin-right:auto; display:block;\" src=\"https://user-images.githubusercontent.com/13203019/51577450-dcfe0800-1ef4-11e9-9399-4ba2b2b7fb73.jpg\"></center>\n \n+#### \u6839\u636e\u65f6\u95f4\u964d\u5e8f\u8fd4\u56de\n+IoTDB \u5728 0.10.x \u4e4b\u540e\u652f\u6301 'order by time' \u8bed\u53e5, \u7528\u4e8e\u5bf9\u7ed3\u679c\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u964d\u5e8f\u5c55\u793a\u3002\u4f8b\u5982\uff0cSQL\u8bed\u53e5\u4e3a\uff1a\n+```sql\n+select * from root.ln where time > 1 order by time desc limit 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "404fb78f35ecd70b0415f3afd4374a1821e683eb"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjAzNjkyMA==", "bodyText": "\u662f\u7684\uff0c\u6211\u4fee\u6539\u4e3a\u4e86 limit 10", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486036920", "createdAt": "2020-09-10T03:12:27Z", "author": {"login": "liutaohua"}, "path": "docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md", "diffHunk": "@@ -156,6 +156,14 @@ select wf01.wt01.status,wf02.wt02.hardware from root.ln where (time > 2017-11-01\n \u8be5SQL\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n <center><img style=\"width:100%; max-width:800px; max-height:600px; margin-left:auto; margin-right:auto; display:block;\" src=\"https://user-images.githubusercontent.com/13203019/51577450-dcfe0800-1ef4-11e9-9399-4ba2b2b7fb73.jpg\"></center>\n \n+#### \u6839\u636e\u65f6\u95f4\u964d\u5e8f\u8fd4\u56de\n+IoTDB \u5728 0.10.x \u4e4b\u540e\u652f\u6301 'order by time' \u8bed\u53e5, \u7528\u4e8e\u5bf9\u7ed3\u679c\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u964d\u5e8f\u5c55\u793a\u3002\u4f8b\u5982\uff0cSQL\u8bed\u53e5\u4e3a\uff1a\n+```sql\n+select * from root.ln where time > 1 order by time desc limit 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQxMTM5Mg=="}, "originalCommit": {"oid": "404fb78f35ecd70b0415f3afd4374a1821e683eb"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDY5OTIwOnYy", "diffSide": "RIGHT", "path": "docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxMjoxNlrOHQMvsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxMjoxNlrOHQMvsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0ODA4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            IoTDB \u5728 0.10.x \u4e4b\u540e\u652f\u6301 'order by time' \u8bed\u53e5, \u7528\u4e8e\u5bf9\u7ed3\u679c\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u964d\u5e8f\u5c55\u793a\u3002\u4f8b\u5982\uff0cSQL\u8bed\u53e5\u4e3a\uff1a\n          \n          \n            \n            IoTDB \u5728 0.11 \u7248\u672c\u5f00\u59cb\u652f\u6301 'order by time' \u8bed\u53e5, \u7528\u4e8e\u5bf9\u7ed3\u679c\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u964d\u5e8f\u5c55\u793a\u3002\u4f8b\u5982\uff0cSQL\u8bed\u53e5\u4e3a\uff1a", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486748080", "createdAt": "2020-09-11T03:12:16Z", "author": {"login": "qiaojialin"}, "path": "docs/zh/UserGuide/Operation Manual/DML Data Manipulation Language.md", "diffHunk": "@@ -156,6 +156,14 @@ select wf01.wt01.status,wf02.wt02.hardware from root.ln where (time > 2017-11-01\n \u8be5SQL\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\u5982\u4e0b\uff1a\n <center><img style=\"width:100%; max-width:800px; max-height:600px; margin-left:auto; margin-right:auto; display:block;\" src=\"https://user-images.githubusercontent.com/13203019/51577450-dcfe0800-1ef4-11e9-9399-4ba2b2b7fb73.jpg\"></center>\n \n+#### \u6839\u636e\u65f6\u95f4\u964d\u5e8f\u8fd4\u56de\n+IoTDB \u5728 0.10.x \u4e4b\u540e\u652f\u6301 'order by time' \u8bed\u53e5, \u7528\u4e8e\u5bf9\u7ed3\u679c\u6309\u7167\u65f6\u95f4\u8fdb\u884c\u964d\u5e8f\u5c55\u793a\u3002\u4f8b\u5982\uff0cSQL\u8bed\u53e5\u4e3a\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDcwMDQ0OnYy", "diffSide": "RIGHT", "path": "docs/UserGuide/Operation Manual/DML Data Manipulation Language.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxMzoxMVrOHQMwiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxMzoxMVrOHQMwiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0ODI5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            IoTDB supports the 'order by time' statement after 0.10.x, it's used to display results in descending order by time.\n          \n          \n            \n            IoTDB supports the 'order by time' statement since 0.11, it's used to display results in descending order by time.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486748299", "createdAt": "2020-09-11T03:13:11Z", "author": {"login": "qiaojialin"}, "path": "docs/UserGuide/Operation Manual/DML Data Manipulation Language.md", "diffHunk": "@@ -146,6 +146,15 @@ The selected timeseries are \"the power supply status of ln group wf01 plant wt01\n The execution result of this SQL statement is as follows:\n <center><img style=\"width:100%; max-width:800px; max-height:600px; margin-left:auto; margin-right:auto; display:block;\" src=\"https://user-images.githubusercontent.com/13203019/51577450-dcfe0800-1ef4-11e9-9399-4ba2b2b7fb73.jpg\"></center>\n \n+\n+#### Order By Time Query\n+IoTDB supports the 'order by time' statement after 0.10.x, it's used to display results in descending order by time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDcwNzg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoxNzozNVrOHQM0wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTo1NTo1N1rOHQPS1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0OTM3Nw==", "bodyText": "It seems that this timestamp is useless, we don't need to put it back to cachedTimestamps.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486749377", "createdAt": "2020-09-11T03:17:35Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;\n         }\n       } else {\n+        cachedTimestamps.addFirst(timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc4OTg0Ng==", "bodyText": "i think we need put it back , for example , the interval is [0,10) , [10,20), [20,30), if the first cache is 30 ,and the end time is 10, so that need put back", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486789846", "createdAt": "2020-09-11T05:55:57Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;\n         }\n       } else {\n+        cachedTimestamps.addFirst(timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc0OTM3Nw=="}, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDcyNDI0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzoyNzoyOFrOHQM-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNzozNDoyM1rOHQRs8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1MTc3NA==", "bodyText": "It seems there will be IndexOutOfArrayException here.\nWhat if cachedTimestamps's size is larger than timeStampFetchSize. And also, you call the constructTimeArrayForOneCal method in the following and fetch another timeStampFetchSize timestamp, i think it should be changed in case of desc.", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486751774", "createdAt": "2020-09-11T03:27:28Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgyOTI5Ng==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486829296", "createdAt": "2020-09-11T07:34:23Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithValueFilterDataSet.java", "diffHunk": "@@ -122,13 +127,18 @@ protected RowRecord nextWithoutConstraint() throws IOException {\n \n     long[] timestampArray = new long[timeStampFetchSize];\n     int timeArrayLength = 0;\n-    if (hasCachedTimestamp) {\n+    while (!cachedTimestamps.isEmpty()) {\n+      long timestamp = cachedTimestamps.remove();\n       if (timestamp < curEndTime) {\n+        if (!groupByTimePlan.isAscending() && timestamp < curStartTime) {\n+          cachedTimestamps.addFirst(timestamp);\n+          return constructRowRecord(aggregateResultList);\n+        }\n         if (timestamp >= curStartTime) {\n-          hasCachedTimestamp = false;\n           timestampArray[timeArrayLength++] = timestamp;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1MTc3NA=="}, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDk4ODE2OnYy", "diffSide": "RIGHT", "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTo1OToyOVrOHQPXEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNzowMDoxMVrOHQQwlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MDkzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\n          \n          \n            \n            \u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u7ed3\u675f\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486790930", "createdAt": "2020-09-11T05:59:29Z", "author": {"login": "qiaojialin"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,190 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxMzg0NQ==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486813845", "createdAt": "2020-09-11T07:00:11Z", "author": {"login": "liutaohua"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,190 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MDkzMA=="}, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDk4ODY5OnYy", "diffSide": "RIGHT", "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNTo1OTo0M1rOHQPXXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNzowMDoxOFrOHQQw0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MTAwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)\n          \n          \n            \n                \u6309\u7167\u7ed3\u675f\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486791004", "createdAt": "2020-09-11T05:59:43Z", "author": {"login": "qiaojialin"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,190 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\n+\u662f**\u4f2a\u5012\u5e8f\u8bfb\u53d6**(\u56e0\u4e3a\u6587\u4ef6\u5185\u4f9d\u7136\u662f\u5347\u5e8f\u5b58\u50a8\u7684),\u6570\u636e\u793a\u4f8b:\n+\n+```\n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217 (1,6)\n+   +---TsFile1---+   +---TsFile2---+   \n+   | 1,2,3,4,5   |   | 6,7,8,9,10  |\n+   +-------------+   +-------------+\n+   \n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjgxMzkwNw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r486813907", "createdAt": "2020-09-11T07:00:18Z", "author": {"login": "liutaohua"}, "path": "docs/zh/SystemDesign/DataQuery/OrderByTimeQuery.md", "diffHunk": "@@ -0,0 +1,190 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+    \n+        http://www.apache.org/licenses/LICENSE-2.0\n+    \n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u6309\u65f6\u95f4\u5012\u5e8f\u67e5\u8be2\n+\n+## \u5b9e\u73b0\u539f\u7406\n+\n+\u5012\u5e8f\u5206\u4e3a 3 \u4e2a\u7ef4\u5ea6\u6765\u5b9e\u73b0\uff0c\u7531\u5185\u6838\u5c42\u5230\u7528\u6237\u5c42\u5206\u522b\u4e3a: `TsFile`\u3001`BatchData`\u3001`\u6570\u636e\u96c6`.\n+1. `TsFile` \u662f\u7528\u6765\u5b58\u50a8\u6240\u6709\u539f\u59cb\u6570\u636e\u7684\u6587\u4ef6\u683c\u5f0f\uff0c\u5728\u5b58\u50a8\u65f6\u5206\u4e3a `\u987a\u5e8f\u6587\u4ef6` \u548c `\u4e71\u5e8f\u6587\u4ef6`.\n+`ChunkData` \u662f `TsFile` \u4e2d\u7684\u57fa\u672c\u6570\u636e\u5757\uff0c\u4fdd\u5b58\u4e86\u5177\u4f53\u67d0\u4e00\u4e2a\u6d4b\u70b9\u7684\u6570\u636e\uff0c\u4e14**\u6570\u636e\u662f\u6309\u7167\u65f6\u95f4\u5347\u5e8f\u5b58\u50a8\u7684**.\n+2. `BatchData` \u662f\u57fa\u7840\u6570\u636e\u4ea4\u6362\u7ed3\u6784\uff0c\u65e0\u8bba\u662f\u4ece\u6587\u4ef6\u7cfb\u7edf\u8fd8\u662f\u7f13\u5b58\u8bfb\u51fa\u7684\u6570\u636e\u90fd\u4f1a\u88ab\u8f6c\u6362\u6210 `BatchData` \u7ed3\u6784.\n+3. `\u6570\u636e\u96c6` \u662f\u5c01\u88c5\u6839\u636e\u7528\u6237\u8f93\u5165\u7684 `SQL` \u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u683c\u5f0f\uff0c\u8f6c\u6362\u548c\u5c01\u88c5 `BatchData` \u4e2d\u7684\u6570\u636e\u3002\n+\n+\u5b9e\u9645\u7cfb\u7edf\u9700\u8981\u8003\u8651\u7684\u65b9\u9762\u4f1a\u66f4\u591a\uff0c\u4f46\u4e3b\u8981\u4e3a\u4ee5\u4e0a 3 \u70b9\u3002\n+\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u5c42\u9762\u5982\u4f55\u5b9e\u73b0\u57fa\u4e8e\u65f6\u95f4\u7684\u5012\u5e8f\u67e5\u8be2:\n+\n+## TsFile\n+1.`TsFile` \u5728\u6587\u4ef6\u672b\u5c3e\u5b58\u50a8\u4e86\u5404\u4e2a\u6d4b\u70b9\u5728\u6587\u4ef6\u4e2d\u7684\u6700\u5c0f\u65f6\u95f4(\u5f00\u59cb\u65f6\u95f4)\u548c\u6700\u5927\u65f6\u95f4(\u7ed3\u675f\u65f6\u95f4)\uff0c\n+\u6240\u4ee5\u5f53\u6211\u4eec\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\u662f\u5347\u5e8f\u8bfb\u53d6;\u5f53\u4f7f\u7528\u5f00\u59cb\u65f6\u95f4\u5012\u5e8f\u6392\u5217\u6587\u4ef6\u5e76\u8bfb\u53d6\u6570\u636e\u65f6,\n+\u662f**\u4f2a\u5012\u5e8f\u8bfb\u53d6**(\u56e0\u4e3a\u6587\u4ef6\u5185\u4f9d\u7136\u662f\u5347\u5e8f\u5b58\u50a8\u7684),\u6570\u636e\u793a\u4f8b:\n+\n+```\n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u5347\u5e8f\u6392\u5217 (1,6)\n+   +---TsFile1---+   +---TsFile2---+   \n+   | 1,2,3,4,5   |   | 6,7,8,9,10  |\n+   +-------------+   +-------------+\n+   \n+    \u6309\u7167\u5f00\u59cb\u65f6\u95f4\u964d\u5e8f\u6392\u5217 (10,5)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc5MTAwNA=="}, "originalCommit": {"oid": "7c565ea8a53c4950cca0bcd6022bfd18a708fdd9"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzIyOTk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMjowNzoyOVrOHR-mpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjo0NDowM1rOHSeAQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxMzU0Mw==", "bodyText": "remove this weige", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488613543", "createdAt": "2020-09-15T12:07:29Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -118,7 +104,8 @@ public void close() {\n   @Override\n   public List<IPageReader> loadPageReaderList() throws IOException {\n     // we treat one ReadOnlyMemChunk as one Page\n-    return Collections.singletonList(\n-        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));\n+//    return Collections.singletonList(\n+//        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODAwMw==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128003", "createdAt": "2020-09-16T02:44:03Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -118,7 +104,8 @@ public void close() {\n   @Override\n   public List<IPageReader> loadPageReaderList() throws IOException {\n     // we treat one ReadOnlyMemChunk as one Page\n-    return Collections.singletonList(\n-        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));\n+//    return Collections.singletonList(\n+//        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxMzU0Mw=="}, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzI0NTc0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMjoxMTo0OVrOHR-wbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjo0NDoxNFrOHSeAgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxNjA0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                return seriesReader.isEmpty()&& isEmpty(batchData);\n          \n          \n            \n                return seriesReader.isEmpty() && isEmpty(batchData);", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488616047", "createdAt": "2020-09-15T12:11:49Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java", "diffHunk": "@@ -31,31 +31,37 @@\n \n public class SeriesReaderByTimestamp implements IReaderByTimestamp {\n \n-  private SeriesReader seriesReader;\n-  private BatchData batchData;\n+  protected SeriesReader seriesReader;\n+  protected BatchData batchData;\n \n-  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,  TSDataType dataType, QueryContext context,\n-                                 QueryDataSource dataSource, TsFileFilter fileFilter) {\n-    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n-        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter);\n+  public SeriesReaderByTimestamp() {\n   }\n \n-  public SeriesReaderByTimestamp(SeriesReader seriesReader) {\n-    this.seriesReader = seriesReader;\n+  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,\n+      TSDataType dataType, QueryContext context, QueryDataSource dataSource,\n+      TsFileFilter fileFilter) {\n+    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n+        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter, true);\n   }\n \n+\n   @Override\n   public Object getValueInTimestamp(long timestamp) throws IOException {\n     seriesReader.setTimeFilter(timestamp);\n-    if ((batchData == null || batchData.getTimeByIndex(batchData.length() - 1) < timestamp)\n+    if ((batchData == null || (batchData.getTimeByIndex(batchData.length() - 1) < timestamp))\n         && !hasNext(timestamp)) {\n       return null;\n     }\n \n     return batchData.getValueInTimestamp(timestamp);\n   }\n \n-  private boolean hasNext(long timestamp) throws IOException {\n+  @Override\n+  public boolean readerIsEmpty() throws IOException {\n+    return seriesReader.isEmpty()&& isEmpty(batchData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODA2Ng==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128066", "createdAt": "2020-09-16T02:44:14Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReaderByTimestamp.java", "diffHunk": "@@ -31,31 +31,37 @@\n \n public class SeriesReaderByTimestamp implements IReaderByTimestamp {\n \n-  private SeriesReader seriesReader;\n-  private BatchData batchData;\n+  protected SeriesReader seriesReader;\n+  protected BatchData batchData;\n \n-  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,  TSDataType dataType, QueryContext context,\n-                                 QueryDataSource dataSource, TsFileFilter fileFilter) {\n-    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n-        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter);\n+  public SeriesReaderByTimestamp() {\n   }\n \n-  public SeriesReaderByTimestamp(SeriesReader seriesReader) {\n-    this.seriesReader = seriesReader;\n+  public SeriesReaderByTimestamp(PartialPath seriesPath, Set<String> allSensors,\n+      TSDataType dataType, QueryContext context, QueryDataSource dataSource,\n+      TsFileFilter fileFilter) {\n+    seriesReader = new SeriesReader(seriesPath, allSensors, dataType, context,\n+        dataSource, TimeFilter.gtEq(Long.MIN_VALUE), null, fileFilter, true);\n   }\n \n+\n   @Override\n   public Object getValueInTimestamp(long timestamp) throws IOException {\n     seriesReader.setTimeFilter(timestamp);\n-    if ((batchData == null || batchData.getTimeByIndex(batchData.length() - 1) < timestamp)\n+    if ((batchData == null || (batchData.getTimeByIndex(batchData.length() - 1) < timestamp))\n         && !hasNext(timestamp)) {\n       return null;\n     }\n \n     return batchData.getValueInTimestamp(timestamp);\n   }\n \n-  private boolean hasNext(long timestamp) throws IOException {\n+  @Override\n+  public boolean readerIsEmpty() throws IOException {\n+    return seriesReader.isEmpty()&& isEmpty(batchData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYxNjA0Nw=="}, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzQxMzA1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMjo1MzozM1rOHSAU9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMjo0NDoyNVrOHSeAtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0MTc4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {\n          \n          \n            \n                      batchData.currentTime() >= curEndTime : batchData.currentTime() < curStartTime))) {", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r488641780", "createdAt": "2020-09-15T12:53:33Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java", "diffHunk": "@@ -231,18 +302,19 @@ private boolean readAndCalcFromPage(long curStartTime, long curEndTime)\n         continue;\n       }\n       // stop calc and cached current batchData\n-      if (batchData.currentTime() >= curEndTime) {\n+      if (ascending && batchData.currentTime() >= curEndTime) {\n         preCachedData = batchData;\n         return true;\n       }\n \n-      // reset the last position to zero\n-      lastReadCurArrayIndex = 0;\n-      lastReadCurListIndex = 0;\n+      // reset the last position to current Index\n+      lastReadCurArrayIndex = batchData.getReadCurArrayIndex();\n+      lastReadCurListIndex = batchData.getReadCurListIndex();\n       calcFromBatch(batchData, curStartTime, curEndTime);\n \n       // judge whether the calculation finished\n-      if (isEndCalc() || (batchData.hasCurrent() && batchData.currentTime() >= curEndTime)) {\n+      if (isEndCalc() || (batchData.hasCurrent() && (ascending ?\n+          batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEyODExNg==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1650#discussion_r489128116", "createdAt": "2020-09-16T02:44:25Z", "author": {"login": "liutaohua"}, "path": "server/src/main/java/org/apache/iotdb/db/query/dataset/groupby/LocalGroupByExecutor.java", "diffHunk": "@@ -231,18 +302,19 @@ private boolean readAndCalcFromPage(long curStartTime, long curEndTime)\n         continue;\n       }\n       // stop calc and cached current batchData\n-      if (batchData.currentTime() >= curEndTime) {\n+      if (ascending && batchData.currentTime() >= curEndTime) {\n         preCachedData = batchData;\n         return true;\n       }\n \n-      // reset the last position to zero\n-      lastReadCurArrayIndex = 0;\n-      lastReadCurListIndex = 0;\n+      // reset the last position to current Index\n+      lastReadCurArrayIndex = batchData.getReadCurArrayIndex();\n+      lastReadCurListIndex = batchData.getReadCurListIndex();\n       calcFromBatch(batchData, curStartTime, curEndTime);\n \n       // judge whether the calculation finished\n-      if (isEndCalc() || (batchData.hasCurrent() && batchData.currentTime() >= curEndTime)) {\n+      if (isEndCalc() || (batchData.hasCurrent() && (ascending ?\n+          batchData.currentTime() >= curEndTime : batchData.currentTime() <= curStartTime))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY0MTc4MA=="}, "originalCommit": {"oid": "7ad076a8f4201a7508b817702a2273b4a3d9d8e5"}, "originalPosition": 197}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4668, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}