{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTA5OTQw", "number": 1100, "reviewThreads": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjoyOTo0OVrOD2Ojpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNzo1NlrOD3uIuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTg4MTk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjoyOTo0OVrOGL9b0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjozMzowOFrOGL9dvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDA2Ng==", "bodyText": "is not empty?", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415194066", "createdAt": "2020-04-26T02:29:49Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -62,9 +62,9 @@ private TsFileMetaDataCache() {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n         if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n+            && value.getDeviceMetadataIndex().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDU1Nw==", "bodyText": "Sorry for the typo", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415194557", "createdAt": "2020-04-26T02:33:08Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -62,9 +62,9 @@ private TsFileMetaDataCache() {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n         if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n+            && value.getDeviceMetadataIndex().isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NDA2Ng=="}, "originalCommit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTkwMDYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjo0Mzo0OFrOGL9jyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMjo0Mzo0OFrOGL9jyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE5NjEwNw==", "bodyText": "In this case, we'd better provide an API that read all TimeseriesMetadata at a time to reduce IO.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415196107", "createdAt": "2020-04-26T02:43:48Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -72,7 +67,8 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n \n   public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    List<String> deviceList = reader.getDevicesByMetadata(metaData.getDeviceMetadataIndex());\n+    for (String device : deviceList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b783d4b731735cf092910911a4e2c030eaaa71bb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk0Mjk1OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoxNDo1OVrOGL91_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjowNjo0M1rOGMGiXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMDc2NA==", "bodyText": "maxDegreeOfIndexNode or so", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415200764", "createdAt": "2020-04-26T03:14:59Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxNumberOfIndexItemsInNode = 5;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzE5OA==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343198", "createdAt": "2020-04-26T16:06:43Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxNumberOfIndexItemsInNode = 5;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMDc2NA=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk1NjQ5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyNDo0NVrOGL970g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjowNzo0MFrOGMGjGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjI1OA==", "bodyText": "replace these with metadataIndex.serializeTo", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202258", "createdAt": "2020-04-26T03:24:45Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -123,10 +124,11 @@ public int serializeTo(OutputStream outputStream) throws IOException {\n     // deviceMetadataIndex\n     if (deviceMetadataIndex != null) {\n       byteLen += ReadWriteIOUtils.write(deviceMetadataIndex.size(), outputStream);\n-      for (Map.Entry<String, Pair<Long, Integer>> entry : deviceMetadataIndex.entrySet()) {\n-        byteLen += ReadWriteIOUtils.write(entry.getKey(), outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().left, outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().right, outputStream);\n+      for (MetadataIndex metadataIndex : deviceMetadataIndex) {\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getName(), outputStream);\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getOffset(), outputStream);\n+        byteLen += ReadWriteIOUtils\n+            .write(metadataIndex.getChildMetadataIndexType().serialize(), outputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzM4Nw==", "bodyText": "Replaced", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343387", "createdAt": "2020-04-26T16:07:40Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -123,10 +124,11 @@ public int serializeTo(OutputStream outputStream) throws IOException {\n     // deviceMetadataIndex\n     if (deviceMetadataIndex != null) {\n       byteLen += ReadWriteIOUtils.write(deviceMetadataIndex.size(), outputStream);\n-      for (Map.Entry<String, Pair<Long, Integer>> entry : deviceMetadataIndex.entrySet()) {\n-        byteLen += ReadWriteIOUtils.write(entry.getKey(), outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().left, outputStream);\n-        byteLen += ReadWriteIOUtils.write(entry.getValue().right, outputStream);\n+      for (MetadataIndex metadataIndex : deviceMetadataIndex) {\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getName(), outputStream);\n+        byteLen += ReadWriteIOUtils.write(metadataIndex.getOffset(), outputStream);\n+        byteLen += ReadWriteIOUtils\n+            .write(metadataIndex.getChildMetadataIndexType().serialize(), outputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjI1OA=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk1OTIzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyNjozMlrOGL99AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjowOTozNFrOGMGkmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjU2MQ==", "bodyText": "replace these with MetadataIndex.deserializeFrom", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202561", "createdAt": "2020-04-26T03:26:32Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -68,16 +68,17 @@ public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n \n     // deviceMetadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndex> deviceMetaDataList = new ArrayList<>();\n     if (deviceNum > 0) {\n       for (int i = 0; i < deviceNum; i++) {\n-        String deviceId = ReadWriteIOUtils.readString(buffer);\n+        String name = ReadWriteIOUtils.readString(buffer);\n         long offset = ReadWriteIOUtils.readLong(buffer);\n-        int length = ReadWriteIOUtils.readInt(buffer);\n-        deviceMetaDataMap.put(deviceId, new Pair<>(offset, length));\n+        ChildMetadataIndexType type = ChildMetadataIndexType\n+            .deserialize(ReadWriteIOUtils.readShort(buffer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0Mzc3MA==", "bodyText": "Replaced", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343770", "createdAt": "2020-04-26T16:09:34Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -68,16 +68,17 @@ public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n \n     // deviceMetadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndex> deviceMetaDataList = new ArrayList<>();\n     if (deviceNum > 0) {\n       for (int i = 0; i < deviceNum; i++) {\n-        String deviceId = ReadWriteIOUtils.readString(buffer);\n+        String name = ReadWriteIOUtils.readString(buffer);\n         long offset = ReadWriteIOUtils.readLong(buffer);\n-        int length = ReadWriteIOUtils.readInt(buffer);\n-        deviceMetaDataMap.put(deviceId, new Pair<>(offset, length));\n+        ChildMetadataIndexType type = ChildMetadataIndexType\n+            .deserialize(ReadWriteIOUtils.readShort(buffer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjU2MQ=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2MDEwOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyNzoxMFrOGL99YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMDoxN1rOGMGlIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private List<MetadataIndex> deviceMetadataIndex;\n          \n          \n            \n              private List<MetadataIndex> metadataIndex;", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202656", "createdAt": "2020-04-26T03:27:10Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -48,8 +48,8 @@\n   // bloom filter\n   private BloomFilter bloomFilter;\n \n-  // DeviceId -> offset and length of Map<String, TimeseriesMetadata>\n-  private Map<String, Pair<Long, Integer>> deviceMetadataIndex;\n+  // List of <name, offset, childMetadataIndexType>\n+  private List<MetadataIndex> deviceMetadataIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0MzkwNw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415343907", "createdAt": "2020-04-26T16:10:17Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -48,8 +48,8 @@\n   // bloom filter\n   private BloomFilter bloomFilter;\n \n-  // DeviceId -> offset and length of Map<String, TimeseriesMetadata>\n-  private Map<String, Pair<Long, Integer>> deviceMetadataIndex;\n+  // List of <name, offset, childMetadataIndexType>\n+  private List<MetadataIndex> deviceMetadataIndex;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY1Ng=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2MDUxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyNzoyMFrOGL99ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMTowN1rOGMGl3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public List<MetadataIndex> getDeviceMetadataIndex() {\n          \n          \n            \n              public List<MetadataIndex> getMetadataIndex() {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202698", "createdAt": "2020-04-26T03:27:20Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDA5Mg==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344092", "createdAt": "2020-04-26T16:11:07Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjY5OA=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2MDYzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyNzozM1rOGL99mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMToxM1rOGMGmBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjcxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {\n          \n          \n            \n              public void setMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202714", "createdAt": "2020-04-26T03:27:33Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {\n     return deviceMetadataIndex;\n   }\n \n-  public void setDeviceMetadataIndex(Map<String, Pair<Long, Integer>> deviceMetadataIndex) {\n+  public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDEzMg==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344132", "createdAt": "2020-04-26T16:11:13Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -208,11 +210,11 @@ public void setMetaOffset(long metaOffset) {\n     this.metaOffset = metaOffset;\n   }\n \n-  public Map<String, Pair<Long, Integer>> getDeviceMetadataIndex() {\n+  public List<MetadataIndex> getDeviceMetadataIndex() {\n     return deviceMetadataIndex;\n   }\n \n-  public void setDeviceMetadataIndex(Map<String, Pair<Long, Integer>> deviceMetadataIndex) {\n+  public void setDeviceMetadataIndex(List<MetadataIndex> deviceMetadataIndex) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjcxNA=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2MTM1OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyODowNlrOGL997A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMTo1MlrOGMGmlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjc5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public enum ChildMetadataIndexType {\n          \n          \n            \n            public enum =MetadataIndexNodeType {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415202796", "createdAt": "2020-04-26T03:28:06Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDI3Ng==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344276", "createdAt": "2020-04-26T16:11:52Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMjc5Ng=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2MzU5OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyOTo0NVrOGL9-6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzoyOTo0NVrOGL9-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzA1MA==", "bodyText": "Internal_device, Leaf_device, Internal_Measurement, Leaf_Measurement\nGive examples of the four nodes in the javadoc of this class", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203050", "createdAt": "2020-04-26T03:29:45Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/ChildMetadataIndexType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum ChildMetadataIndexType {\n+  DEVICE_INDEX, DEVICE, MEASUREMENT_INDEX, MEASUREMENT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk2NDgxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzozMDo0OVrOGL9_fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxNTo0MlrOGMGpOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzE5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class MetadataIndex {\n          \n          \n            \n            public class MetadataIndexNode {", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415203196", "createdAt": "2020-04-26T03:30:49Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDk1Mw==", "bodyText": "Renamed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344953", "createdAt": "2020-04-26T16:15:42Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwMzE5Ng=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MTk3NTY0OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMzozODoyMFrOGL-EHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxNTo0NlrOGMGpSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwNDM4Mw==", "bodyText": "Actually this is a node of the tree index, so rename it to MetadataIndexNode or TsMetaIndexNode or TsIndexNode is better..", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415204383", "createdAt": "2020-04-26T03:38:20Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDk2OA==", "bodyText": "Renamed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415344968", "createdAt": "2020-04-26T16:15:46Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwNDM4Mw=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjAyMjc2OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNDoxMjoxOVrOGL-YQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNDoxMjoxOVrOGL-YQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIwOTUzOA==", "bodyText": "This is a bug, deviceMetaData offset may index to a metadataIndex node, not the first metadata offset.\nUse TsFileMetadata.getMetaOffset()", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415209538", "createdAt": "2020-04-26T04:12:19Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/RestorableTsFileIOWriter.java", "diffHunk": "@@ -129,9 +129,9 @@ public static RestorableTsFileIOWriter getWriterForAppendingDataOnCompletedTsFil\n       if (reader.isComplete()) {\n         reader.loadMetadataSize();\n         TsFileMetadata metaData = reader.readFileMetadata();\n-        for (Pair<Long, Integer> deviceMetaData : metaData.getDeviceMetadataIndex().values()) {\n-          if (position > deviceMetaData.left) {\n-            position = deviceMetaData.left;\n+        for (MetadataIndex deviceMetaData : metaData.getDeviceMetadataIndex()) {\n+          if (position > deviceMetaData.getOffset()) {\n+            position = deviceMetaData.getOffset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjA4MTQwOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNDo1NTozNlrOGL-xQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxNjo0M1rOGMGqOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxNTkzOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);\n          \n          \n            \n                          serializeEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415215938", "createdAt": "2020-04-26T04:55:36Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -304,22 +311,120 @@ public void endFile() throws IOException {\n       deviceTimeseriesMetadataMap.computeIfAbsent(device, k -> new ArrayList<>())\n           .add(timeseriesMetaData);\n     }\n-    // create DeviceMetaDataMap device -> Pair<TimeseriesMetaDataOffset, TimeseriesMetaDataLength> \n-    Map<String, Pair<Long, Integer>> deviceMetadataMap = new HashMap<>();\n+\n+    // create TsFileMetadata\n+    Map<String, Queue<MetadataIndex>> deviceMetadataIndexMap = new TreeMap<>();\n+    int maxNumOfIndexItems = config.getMaxNumberOfIndexItemsInNode();\n+\n+    // for timeseriesMetadata of each device\n     for (Map.Entry<String, List<TimeseriesMetadata>> entry : deviceTimeseriesMetadataMap\n         .entrySet()) {\n-      String device = entry.getKey();\n-      List<TimeseriesMetadata> timeseriesMetadataList = entry.getValue();\n-      long offsetOfFirstTimeseriesMetaDataInDevice = out.getPosition();\n-      int size = 0;\n-      for (TimeseriesMetadata timeseriesMetaData : timeseriesMetadataList) {\n-        size += timeseriesMetaData.serializeTo(out.wrapAsStream());\n+      if (entry.getValue().isEmpty()) {\n+        continue;\n+      }\n+      Queue<MetadataIndex> measurementMetadataIndexQueue = new ArrayDeque<>();\n+      TimeseriesMetadata timeseriesMetadata;\n+      for (int i = 0; i < entry.getValue().size(); i++) {\n+        timeseriesMetadata = entry.getValue().get(i);\n+        if (i % maxNumOfIndexItems == 0) {\n+          measurementMetadataIndexQueue\n+              .add(new MetadataIndex(timeseriesMetadata.getMeasurementId(), out.getPosition(),\n+                  ChildMetadataIndexType.MEASUREMENT));\n+        }\n+        timeseriesMetadata.serializeTo(out.wrapAsStream());\n+      }\n+      measurementMetadataIndexQueue\n+          .add(new MetadataIndex(\"\", out.getPosition(), ChildMetadataIndexType.MEASUREMENT));\n+\n+      int queueSize = measurementMetadataIndexQueue.size();\n+      MetadataIndex metadataIndex;\n+      while (queueSize > maxNumOfIndexItems) {\n+        for (int i = 0; i < queueSize; i++) {\n+          metadataIndex = measurementMetadataIndexQueue.poll();\n+          if (i % maxNumOfIndexItems == 0) {\n+            if (i != 0) {\n+              addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NTIxMA==", "bodyText": "Renamed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415345210", "createdAt": "2020-04-26T16:16:43Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -304,22 +311,120 @@ public void endFile() throws IOException {\n       deviceTimeseriesMetadataMap.computeIfAbsent(device, k -> new ArrayList<>())\n           .add(timeseriesMetaData);\n     }\n-    // create DeviceMetaDataMap device -> Pair<TimeseriesMetaDataOffset, TimeseriesMetaDataLength> \n-    Map<String, Pair<Long, Integer>> deviceMetadataMap = new HashMap<>();\n+\n+    // create TsFileMetadata\n+    Map<String, Queue<MetadataIndex>> deviceMetadataIndexMap = new TreeMap<>();\n+    int maxNumOfIndexItems = config.getMaxNumberOfIndexItemsInNode();\n+\n+    // for timeseriesMetadata of each device\n     for (Map.Entry<String, List<TimeseriesMetadata>> entry : deviceTimeseriesMetadataMap\n         .entrySet()) {\n-      String device = entry.getKey();\n-      List<TimeseriesMetadata> timeseriesMetadataList = entry.getValue();\n-      long offsetOfFirstTimeseriesMetaDataInDevice = out.getPosition();\n-      int size = 0;\n-      for (TimeseriesMetadata timeseriesMetaData : timeseriesMetadataList) {\n-        size += timeseriesMetaData.serializeTo(out.wrapAsStream());\n+      if (entry.getValue().isEmpty()) {\n+        continue;\n+      }\n+      Queue<MetadataIndex> measurementMetadataIndexQueue = new ArrayDeque<>();\n+      TimeseriesMetadata timeseriesMetadata;\n+      for (int i = 0; i < entry.getValue().size(); i++) {\n+        timeseriesMetadata = entry.getValue().get(i);\n+        if (i % maxNumOfIndexItems == 0) {\n+          measurementMetadataIndexQueue\n+              .add(new MetadataIndex(timeseriesMetadata.getMeasurementId(), out.getPosition(),\n+                  ChildMetadataIndexType.MEASUREMENT));\n+        }\n+        timeseriesMetadata.serializeTo(out.wrapAsStream());\n+      }\n+      measurementMetadataIndexQueue\n+          .add(new MetadataIndex(\"\", out.getPosition(), ChildMetadataIndexType.MEASUREMENT));\n+\n+      int queueSize = measurementMetadataIndexQueue.size();\n+      MetadataIndex metadataIndex;\n+      while (queueSize > maxNumOfIndexItems) {\n+        for (int i = 0; i < queueSize; i++) {\n+          metadataIndex = measurementMetadataIndexQueue.poll();\n+          if (i % maxNumOfIndexItems == 0) {\n+            if (i != 0) {\n+              addEmptyMetadataIndex(ChildMetadataIndexType.MEASUREMENT_INDEX);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIxNTkzOA=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4MjIyNTMyOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwNjozNDo1OFrOGL_upQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjowNTo0OFrOGMGheA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMTY1Mw==", "bodyText": "I just feel it should be better if you move this class to org.apache.iotdb.tsfile.file.metadata, because it will be serialized to the end of TsFile.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415231653", "createdAt": "2020-04-26T06:34:58Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {\n+\n+  private String name;\n+  private long offset;\n+  private ChildMetadataIndexType childMetadataIndexType;\n+\n+  public MetadataIndex() {\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0Mjk2OA==", "bodyText": "Thanks, that's a good idea.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r415342968", "createdAt": "2020-04-26T16:05:48Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/MetadataIndex.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.utils;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.ChildMetadataIndexType;\n+\n+public class MetadataIndex {\n+\n+  private String name;\n+  private long offset;\n+  private ChildMetadataIndexType childMetadataIndexType;\n+\n+  public MetadataIndex() {\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTIzMTY1Mw=="}, "originalCommit": {"oid": "dcec27f9f9e6cab919fe5ae66123ceef988b53b5"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTY5ODQ1OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMToyOTozNlrOGM-lpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMzowMDoyOVrOGNuKfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw==", "bodyText": "Now returns a MetadataIndexNode List, so please change the java doc too.\nAlso, since this method doesn't only flush ChunkMetadataList, I think we should give it a better name.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416261543", "createdAt": "2020-04-28T01:29:36Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NTQ0Mg==", "bodyText": "Great point, I think we could call it flushTsFileMetadata, for flushing both ChunkMetadataList and TimeseriesMetaData. What do you think?", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416285442", "createdAt": "2020-04-28T02:44:27Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI5MDE2Nw==", "bodyText": "Actually, we have a class named TsFileMetadata and will be flushed to the disk after executing this method. How do you think? @qiaojialin", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416290167", "createdAt": "2020-04-28T02:59:19Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MTAyMw==", "bodyText": "Renamed to flushMetadataIndex as he suggested \ud83d\ude02", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417041023", "createdAt": "2020-04-29T03:00:29Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -274,9 +280,10 @@ public void endFile() throws IOException {\n \n   /**\n    * Flush ChunkMetadataList and TimeseriesMetaData\n+   *\n    * @return DeviceMetaDataMap in TsFileMetaData\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushAllChunkMetadataList(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI2MTU0Mw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTgyMzA1OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjoyMzozNlrOGM_qPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjo0MjowOVrOGNAAQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3OTEwMw==", "bodyText": "Should we rename deviceMetaDataList to metadataIndexList?", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416279103", "createdAt": "2020-04-28T02:23:36Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -66,18 +64,15 @@\n   public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n     TsFileMetadata fileMetaData = new TsFileMetadata();\n \n-    // deviceMetadataIndex\n+    // metadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndexNode> deviceMetaDataList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDczOA==", "bodyText": "Thanks, I have checked all the deviceMetaDataList names  and renamed them.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416284738", "createdAt": "2020-04-28T02:42:09Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/TsFileMetadata.java", "diffHunk": "@@ -66,18 +64,15 @@\n   public static TsFileMetadata deserializeFrom(ByteBuffer buffer) {\n     TsFileMetadata fileMetaData = new TsFileMetadata();\n \n-    // deviceMetadataIndex\n+    // metadataIndex\n     int deviceNum = ReadWriteIOUtils.readInt(buffer);\n-    Map<String, Pair<Long, Integer>> deviceMetaDataMap = new HashMap<>();\n+    List<MetadataIndexNode> deviceMetaDataList = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI3OTEwMw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTgzNDg4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjoyOTowNVrOGM_w1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjo1OTo0NFrOGNuJ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MDc5MA==", "bodyText": "add a method getAllTimeseriesMetadata(), seek and IO all timeseriesMetadata once.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416280790", "createdAt": "2020-04-28T02:29:05Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -70,9 +64,9 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n     tsFileResource.setClosed(true);\n   }\n \n-  public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n+  public static void updateTsFileResource(TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    for (String device : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MDg3Mg==", "bodyText": "Added", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417040872", "createdAt": "2020-04-29T02:59:44Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/utils/FileLoaderUtils.java", "diffHunk": "@@ -70,9 +64,9 @@ public static void checkTsFileResource(TsFileResource tsFileResource) throws IOE\n     tsFileResource.setClosed(true);\n   }\n \n-  public static void updateTsFileResource(TsFileMetadata metaData, TsFileSequenceReader reader,\n+  public static void updateTsFileResource(TsFileSequenceReader reader,\n       TsFileResource tsFileResource) throws IOException {\n-    for (String device : metaData.getDeviceMetadataIndex().keySet()) {\n+    for (String device : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MDc5MA=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0MTgzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/TsFileRecoverPerformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozMTo1NlrOGM_0ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjo1OTo0MVrOGNuJzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTcwMQ==", "bodyText": "readAllTimeseriesMetadata", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281701", "createdAt": "2020-04-28T02:31:56Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/TsFileRecoverPerformer.java", "diffHunk": "@@ -157,11 +156,7 @@ private void recoverResourceFromFile() throws IOException {\n   private void recoverResourceFromReader() throws IOException {\n     try (TsFileSequenceReader reader =\n         new TsFileSequenceReader(resource.getFile().getAbsolutePath(), false)) {\n-      TsFileMetadata fileMetadata = reader.readFileMetadata();\n-      \n-      Map<String, Pair<Long, Integer>> deviceMetaDataMap = fileMetadata.getDeviceMetadataIndex();\n-      for (Map.Entry<String, Pair<Long, Integer>>  entry: deviceMetaDataMap.entrySet()) {\n-        String deviceId = entry.getKey();\n+      for (String deviceId : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MDg0Nw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417040847", "createdAt": "2020-04-29T02:59:41Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/TsFileRecoverPerformer.java", "diffHunk": "@@ -157,11 +156,7 @@ private void recoverResourceFromFile() throws IOException {\n   private void recoverResourceFromReader() throws IOException {\n     try (TsFileSequenceReader reader =\n         new TsFileSequenceReader(resource.getFile().getAbsolutePath(), false)) {\n-      TsFileMetadata fileMetadata = reader.readFileMetadata();\n-      \n-      Map<String, Pair<Long, Integer>> deviceMetaDataMap = fileMetadata.getDeviceMetadataIndex();\n-      for (Map.Entry<String, Pair<Long, Integer>>  entry: deviceMetaDataMap.entrySet()) {\n-        String deviceId = entry.getKey();\n+      for (String deviceId : reader.getAllDevices()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTcwMQ=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0MzUyOnYy", "diffSide": "RIGHT", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozMjo1MlrOGM_1TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjoyOToxOVrOGNtuuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTkzMw==", "bodyText": "this should  be getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416281933", "createdAt": "2020-04-28T02:32:52Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -62,7 +62,7 @@ object WideConverter extends Converter {\n   def getSeries(tsFileMetaData: TsFileMetadata, reader: TsFileSequenceReader): util.ArrayList[Series] = {\n     val series = new util.ArrayList[Series]()\n \n-    val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+    val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzMzkxNQ==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417033915", "createdAt": "2020-04-29T02:29:19Z", "author": {"login": "samperson1997"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -62,7 +62,7 @@ object WideConverter extends Converter {\n   def getSeries(tsFileMetaData: TsFileMetadata, reader: TsFileSequenceReader): util.ArrayList[Series] = {\n     val series = new util.ArrayList[Series]()\n \n-    val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+    val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MTkzMw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0NDQ1OnYy", "diffSide": "RIGHT", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozMzoyMlrOGM_10A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjoyOTozNVrOGNtu7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA2NA==", "bodyText": "getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282064", "createdAt": "2020-04-28T02:33:22Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -92,7 +92,7 @@ object WideConverter extends Converter {\n       val in = new HDFSInput(f.getPath, conf)\n       val reader = new TsFileSequenceReader(in)\n       val tsFileMetaData = reader.readFileMetadata\n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzMzk2Nw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417033967", "createdAt": "2020-04-29T02:29:35Z", "author": {"login": "samperson1997"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -92,7 +92,7 @@ object WideConverter extends Converter {\n       val in = new HDFSInput(f.getPath, conf)\n       val reader = new TsFileSequenceReader(in)\n       val tsFileMetaData = reader.readFileMetadata\n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA2NA=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0NDYwOnYy", "diffSide": "RIGHT", "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozMzozMFrOGM_15w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjoyOTo0NFrOGNtvFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA4Nw==", "bodyText": "getAllDevices", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282087", "createdAt": "2020-04-28T02:33:30Z", "author": {"login": "qiaojialin"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -133,7 +133,7 @@ object WideConverter extends Converter {\n     } else { // Remove nonexistent schema according to the current file's metadata.\n       // This may happen when queried TsFiles in the same folder do not have the same schema.\n \n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzNDAwNg==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417034006", "createdAt": "2020-04-29T02:29:44Z", "author": {"login": "samperson1997"}, "path": "spark-tsfile/src/main/scala/org/apache/iotdb/spark/tsfile/WideConverter.scala", "diffHunk": "@@ -133,7 +133,7 @@ object WideConverter extends Converter {\n     } else { // Remove nonexistent schema according to the current file's metadata.\n       // This may happen when queried TsFiles in the same folder do not have the same schema.\n \n-      val devices = tsFileMetaData.getDeviceMetadataIndex.keySet()\n+      val devices = tsFileMetaData.getMetadataIndex", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjA4Nw=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0NTc4OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozNDoxMFrOGM_2oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjowNjo0NlrOGNtZVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjI3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private int maxDegreeOfIndexNode = 5;\n          \n          \n            \n              private int maxDegreeOfIndexNode = 1024;\n          \n      \n    \n    \n  \n\nonly set 5 in test", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282272", "createdAt": "2020-04-28T02:34:10Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxDegreeOfIndexNode = 5;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyODQzOA==", "bodyText": "Sure.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417028438", "createdAt": "2020-04-29T02:06:46Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/common/conf/TSFileConfig.java", "diffHunk": "@@ -82,6 +82,10 @@\n    * The maximum number of data points in a page, default value is 1024 * 1024.\r\n    */\r\n   private int maxNumberOfPointsInPage = 1024 * 1024;\r\n+  /**\r\n+   * The maximum number of index items in a metadataIndex node, default value is 1024\r\n+   */\r\n+  private int maxDegreeOfIndexNode = 5;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjI3Mg=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg0NzkzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexNode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozNToxOFrOGM_36A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjowNjozMVrOGNtZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjYwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private MetadataIndexNodeType metadataIndexNodeType;\n          \n          \n            \n              // type of the child node at offset\n          \n          \n            \n              private MetadataIndexNodeType childNodeType;", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416282600", "createdAt": "2020-04-28T02:35:18Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexNode.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.MetadataIndexNodeType;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class MetadataIndexNode {\n+\n+  private String name;\n+  private long offset;\n+  private MetadataIndexNodeType metadataIndexNodeType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyODM1Ng==", "bodyText": "Renamed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417028356", "createdAt": "2020-04-29T02:06:31Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/MetadataIndexNode.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata;\n+\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import java.nio.ByteBuffer;\n+import org.apache.iotdb.tsfile.file.metadata.enums.MetadataIndexNodeType;\n+import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;\n+\n+public class MetadataIndexNode {\n+\n+  private String name;\n+  private long offset;\n+  private MetadataIndexNodeType metadataIndexNodeType;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4MjYwMA=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4OTg1NzczOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMjozOTo0NFrOGM_9aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjozMTo1MVrOGNtxAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDAwOA==", "bodyText": "use one byte is enough", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416284008", "createdAt": "2020-04-28T02:39:44Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum MetadataIndexNodeType {\n+  INTERNAL_DEVICE, LEAF_DEVICE, INTERNAL_MEASUREMENT, LEAF_MEASUREMENT;\n+\n+  /**\n+   * deserialize short number.\n+   *\n+   * @param i short number\n+   * @return MetadataIndexNodeType\n+   */\n+  public static MetadataIndexNodeType deserialize(short i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAzNDQ5Nw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417034497", "createdAt": "2020-04-29T02:31:51Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/MetadataIndexNodeType.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.tsfile.file.metadata.enums;\n+\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+\n+public enum MetadataIndexNodeType {\n+  INTERNAL_DEVICE, LEAF_DEVICE, INTERNAL_MEASUREMENT, LEAF_MEASUREMENT;\n+\n+  /**\n+   * deserialize short number.\n+   *\n+   * @param i short number\n+   * @return MetadataIndexNodeType\n+   */\n+  public static MetadataIndexNodeType deserialize(short i) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjI4NDAwOA=="}, "originalCommit": {"oid": "ec9226479ab91b56f6dcd4753a83368c875bcff0"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MDA0MTg2OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwMzo1OTowMFrOGNBeyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMTo1NzowNFrOGNtQiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwODkzNg==", "bodyText": "flushMetadataIndex", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r416308936", "createdAt": "2020-04-28T03:59:00Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -273,10 +278,11 @@ public void endFile() throws IOException {\n   }\n \n   /**\n-   * Flush ChunkMetadataList and TimeseriesMetaData\n-   * @return DeviceMetaDataMap in TsFileMetaData\n+   * Flush TsFileMetadata, including ChunkMetadataList and TimeseriesMetaData\n+   *\n+   * @return MetadataIndexNode list in TsFileMetadata\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushTsFileMetadata(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a7a77890fd83bc98bc21f5b523f3879c4c56b28"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNjE4NQ==", "bodyText": "Renamed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417026185", "createdAt": "2020-04-29T01:57:04Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/writer/TsFileIOWriter.java", "diffHunk": "@@ -273,10 +278,11 @@ public void endFile() throws IOException {\n   }\n \n   /**\n-   * Flush ChunkMetadataList and TimeseriesMetaData\n-   * @return DeviceMetaDataMap in TsFileMetaData\n+   * Flush TsFileMetadata, including ChunkMetadataList and TimeseriesMetaData\n+   *\n+   * @return MetadataIndexNode list in TsFileMetadata\n    */\n-  private Map<String, Pair<Long, Integer>> flushAllChunkMetadataList(\n+  private List<MetadataIndexNode> flushTsFileMetadata(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMwODkzNg=="}, "originalCommit": {"oid": "9a7a77890fd83bc98bc21f5b523f3879c4c56b28"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDY4Mjc4OnYy", "diffSide": "RIGHT", "path": "docs/SystemDesign/1-TsFile/2-Format.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMjowMzo0OVrOGNtWfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMzowMzozNVrOGNuNHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzcxMQ==", "bodyText": "I think we should line up this column.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417027711", "createdAt": "2020-04-29T02:03:49Z", "author": {"login": "HTHou"}, "path": "docs/SystemDesign/1-TsFile/2-Format.md", "diffHunk": "@@ -236,7 +236,7 @@ ByteBuffer[] statistics = [\n |              Member Description              |            Member Type             |\n | :------------------------------------------: | :--------------------------------: |\n |              Number of devices               |                int                 |\n-| Pairs of device name and deviceMetadataIndex | String, TsDeviceMetadataIndex pair |\n+| Pairs of device name and metadataIndex | String, TsDeviceMetadataIndex pair |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36580164777c81dbd34668ce70a4ba23192a9989"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0MTY5NA==", "bodyText": "I intend to organize and modify the design docs in later PR ... For we've really changed a lot : )", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417041694", "createdAt": "2020-04-29T03:03:35Z", "author": {"login": "samperson1997"}, "path": "docs/SystemDesign/1-TsFile/2-Format.md", "diffHunk": "@@ -236,7 +236,7 @@ ByteBuffer[] statistics = [\n |              Member Description              |            Member Type             |\n | :------------------------------------------: | :--------------------------------: |\n |              Number of devices               |                int                 |\n-| Pairs of device name and deviceMetadataIndex | String, TsDeviceMetadataIndex pair |\n+| Pairs of device name and metadataIndex | String, TsDeviceMetadataIndex pair |", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzAyNzcxMQ=="}, "originalCommit": {"oid": "36580164777c81dbd34668ce70a4ba23192a9989"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzUzNzY2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNjo1NFrOGOIlcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDozNzozMVrOGOV4Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzkwNQ==", "bodyText": "estimated size of metadataIndex entry in TsFileMetaData.", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417473905", "createdAt": "2020-04-29T17:06:54Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTY3OA==", "bodyText": "Thanks for this good catch!", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417691678", "createdAt": "2020-04-30T00:37:31Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3MzkwNQ=="}, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzU0MTY5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzowNzo1NlrOGOIoEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwMDozNzozOFrOGOV4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDU3Nw==", "bodyText": "// metadataIndex", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417474577", "createdAt": "2020-04-29T17:07:56Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.\n    */\n-  private long deviceIndexMapEntrySize = 0;\n+  private long metadataIndexEntrySize = 0;\n \n   private TsFileMetaDataCache() {\n     logger.info(\"TsFileMetaDataCache size = \" + MEMORY_THRESHOLD_IN_B);\n     cache = new LRULinkedHashMap<String, TsFileMetadata>(MEMORY_THRESHOLD_IN_B, true) {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n-        if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n-          deviceIndexMapEntrySize = RamUsageEstimator\n-              .sizeOf(value.getDeviceMetadataIndex().entrySet().iterator().next());\n+        if (metadataIndexEntrySize == 0 && value.getMetadataIndex() != null\n+            && !value.getMetadataIndex().getChildren().isEmpty()) {\n+          metadataIndexEntrySize = RamUsageEstimator\n+              .sizeOf(value.getMetadataIndex().getChildren().iterator().next());\n         }\n         // totalChunkNum, invalidChunkNum\n         long valueSize = 4 + 4L;\n \n         // deviceMetadataIndex\n-        if (value.getDeviceMetadataIndex() != null) {\n-          valueSize += value.getDeviceMetadataIndex().size() * deviceIndexMapEntrySize;\n+        if (value.getMetadataIndex() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzY5MTcwOQ==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1100#discussion_r417691709", "createdAt": "2020-04-30T00:37:38Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/TsFileMetaDataCache.java", "diffHunk": "@@ -55,24 +54,24 @@\n   /**\n    * estimated size of a deviceMetaDataMap entry in TsFileMetaData.\n    */\n-  private long deviceIndexMapEntrySize = 0;\n+  private long metadataIndexEntrySize = 0;\n \n   private TsFileMetaDataCache() {\n     logger.info(\"TsFileMetaDataCache size = \" + MEMORY_THRESHOLD_IN_B);\n     cache = new LRULinkedHashMap<String, TsFileMetadata>(MEMORY_THRESHOLD_IN_B, true) {\n       @Override\n       protected long calEntrySize(String key, TsFileMetadata value) {\n-        if (deviceIndexMapEntrySize == 0 && value.getDeviceMetadataIndex() != null\n-            && value.getDeviceMetadataIndex().size() > 0) {\n-          deviceIndexMapEntrySize = RamUsageEstimator\n-              .sizeOf(value.getDeviceMetadataIndex().entrySet().iterator().next());\n+        if (metadataIndexEntrySize == 0 && value.getMetadataIndex() != null\n+            && !value.getMetadataIndex().getChildren().isEmpty()) {\n+          metadataIndexEntrySize = RamUsageEstimator\n+              .sizeOf(value.getMetadataIndex().getChildren().iterator().next());\n         }\n         // totalChunkNum, invalidChunkNum\n         long valueSize = 4 + 4L;\n \n         // deviceMetadataIndex\n-        if (value.getDeviceMetadataIndex() != null) {\n-          valueSize += value.getDeviceMetadataIndex().size() * deviceIndexMapEntrySize;\n+        if (value.getMetadataIndex() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ3NDU3Nw=="}, "originalCommit": {"oid": "8c542d5ea0ea6b470bc6c7733b95e89ebc88843f"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}