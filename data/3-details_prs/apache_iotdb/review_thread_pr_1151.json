{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNzE1NDIw", "number": 1151, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1MDoyOVrOD6qwSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTowNjo1M1rOD6rIuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODQ0NDkwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/ChunkMetadataCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDo1MDoyOVrOGSoTlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMTo0NzowOVrOGS3pjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4NzkyNQ==", "bodyText": "why add this lock?  the lock is for concurrently modify lruCache", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422187925", "createdAt": "2020-05-08T14:50:29Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/ChunkMetadataCache.java", "diffHunk": "@@ -100,18 +100,24 @@ public static ChunkMetadataCache getInstance() {\n   public List<ChunkMetadata> get(String filePath, Path seriesPath)\n       throws IOException {\n     if (!cacheEnable) {\n-      // bloom filter part\n-      TsFileSequenceReader tsFileReader = FileReaderManager.getInstance().get(filePath, true);\n-      BloomFilter bloomFilter = tsFileReader.readBloomFilter();\n-      if (bloomFilter != null && !bloomFilter.contains(seriesPath.getFullPath())) {\n-        if (logger.isDebugEnabled()) {\n-          logger.debug(String\n-              .format(\"path not found by bloom filter, file is: %s, path is: %s\", filePath, seriesPath));\n+      lock.writeLock().lock();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzOTMxMQ==", "bodyText": "Deleted", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422439311", "createdAt": "2020-05-09T01:47:09Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/ChunkMetadataCache.java", "diffHunk": "@@ -100,18 +100,24 @@ public static ChunkMetadataCache getInstance() {\n   public List<ChunkMetadata> get(String filePath, Path seriesPath)\n       throws IOException {\n     if (!cacheEnable) {\n-      // bloom filter part\n-      TsFileSequenceReader tsFileReader = FileReaderManager.getInstance().get(filePath, true);\n-      BloomFilter bloomFilter = tsFileReader.readBloomFilter();\n-      if (bloomFilter != null && !bloomFilter.contains(seriesPath.getFullPath())) {\n-        if (logger.isDebugEnabled()) {\n-          logger.debug(String\n-              .format(\"path not found by bloom filter, file is: %s, path is: %s\", filePath, seriesPath));\n+      lock.writeLock().lock();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE4NzkyNQ=="}, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODQ5OTQzOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTowNDo0M1rOGSo0VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMTo1MTowNFrOGS3q8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5NjMwOA==", "bodyText": "this parameter is no need ,  the tsfileInput is positioned in selfcheck already.", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422196308", "createdAt": "2020-05-08T15:04:43Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "diffHunk": "@@ -225,10 +226,13 @@ public String readHeadMagic() throws IOException {\n    * to the end of the magic head string.\n    */\n   public String readHeadMagic(boolean movePosition) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQzOTY2Nw==", "bodyText": "Removed", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422439667", "createdAt": "2020-05-09T01:51:04Z", "author": {"login": "samperson1997"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/read/TsFileSequenceReader.java", "diffHunk": "@@ -225,10 +226,13 @@ public String readHeadMagic() throws IOException {\n    * to the end of the magic head string.\n    */\n   public String readHeadMagic(boolean movePosition) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5NjMwOA=="}, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODUwNzQ3OnYy", "diffSide": "RIGHT", "path": "hadoop/src/main/java/org/apache/iotdb/hadoop/fileSystem/HDFSInput.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNTowNjo1M1rOGSo5DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMjoyNjo1MVrOGS33zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5NzUxNw==", "bodyText": "this function should be used cautiously, it's better to use the read(position, length)", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422197517", "createdAt": "2020-05-08T15:06:53Z", "author": {"login": "qiaojialin"}, "path": "hadoop/src/main/java/org/apache/iotdb/hadoop/fileSystem/HDFSInput.java", "diffHunk": "@@ -68,26 +60,26 @@ public long position() throws IOException {\n   }\n \n   @Override\n-  public TsFileInput position(long newPosition) throws IOException {\n+  public synchronized TsFileInput position(long newPosition) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0Mjk1OA==", "bodyText": "Thanks for your reminding.", "url": "https://github.com/apache/iotdb/pull/1151#discussion_r422442958", "createdAt": "2020-05-09T02:26:51Z", "author": {"login": "samperson1997"}, "path": "hadoop/src/main/java/org/apache/iotdb/hadoop/fileSystem/HDFSInput.java", "diffHunk": "@@ -68,26 +60,26 @@ public long position() throws IOException {\n   }\n \n   @Override\n-  public TsFileInput position(long newPosition) throws IOException {\n+  public synchronized TsFileInput position(long newPosition) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE5NzUxNw=="}, "originalCommit": {"oid": "0850aaa720d19085c1f50726328254bf889ac5c7"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4942, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}