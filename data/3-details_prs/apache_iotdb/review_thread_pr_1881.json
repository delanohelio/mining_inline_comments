{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMjk4NDIz", "number": 1881, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNjo1NFrOEzrU5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNjo1NFrOEzrU5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjIyNjk1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwNzoyNjo1NFrOHrDxDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0Mjo0OVrOHrFuvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjUyNA==", "bodyText": "Recover the format...", "url": "https://github.com/apache/iotdb/pull/1881#discussion_r514912524", "createdAt": "2020-10-30T07:26:54Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1055,13 +1058,19 @@ private boolean createTimeSeries(CreateTimeSeriesPlan createTimeSeriesPlan)\n   private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeSeriesPlan) {\n     Map<Integer, Exception> results = new HashMap<>(createMultiTimeSeriesPlan.getPaths().size());\n     for (int i = 0; i < createMultiTimeSeriesPlan.getPaths().size(); i++) {\n-      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(createMultiTimeSeriesPlan.getPaths().get(i),\n-        createMultiTimeSeriesPlan.getDataTypes().get(i), createMultiTimeSeriesPlan.getEncodings().get(i),\n-        createMultiTimeSeriesPlan.getCompressors().get(i),\n-        createMultiTimeSeriesPlan.getProps() == null ? null : createMultiTimeSeriesPlan.getProps().get(i),\n-        createMultiTimeSeriesPlan.getTags() == null ? null : createMultiTimeSeriesPlan.getTags().get(i),\n-        createMultiTimeSeriesPlan.getAttributes() == null ? null : createMultiTimeSeriesPlan.getAttributes().get(i),\n-        createMultiTimeSeriesPlan.getAlias() == null ? null : createMultiTimeSeriesPlan.getAlias().get(i));\n+      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(\n+          createMultiTimeSeriesPlan.getPaths().get(i),\n+          createMultiTimeSeriesPlan.getDataTypes().get(i),\n+          createMultiTimeSeriesPlan.getEncodings().get(i),\n+          createMultiTimeSeriesPlan.getCompressors().get(i),\n+          createMultiTimeSeriesPlan.getProps() == null ? null\n+              : createMultiTimeSeriesPlan.getProps().get(i),\n+          createMultiTimeSeriesPlan.getTags() == null ? null\n+              : createMultiTimeSeriesPlan.getTags().get(i),\n+          createMultiTimeSeriesPlan.getAttributes() == null ? null\n+              : createMultiTimeSeriesPlan.getAttributes().get(i),\n+          createMultiTimeSeriesPlan.getAlias() == null ? null\n+              : createMultiTimeSeriesPlan.getAlias().get(i));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2625f758dab80742b88e2a8800b890737ce4b262"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNDkyNg==", "bodyText": "Actually I have imported java-google-style.xml in the root dir before formating this file.Maybe the old format is not suitable in java-google-style.xml. As you can see, the default hard warp is 100.\n\nIf you put them on one line, the code on the right will exceed the hard limit.", "url": "https://github.com/apache/iotdb/pull/1881#discussion_r514924926", "createdAt": "2020-10-30T07:59:39Z", "author": {"login": "LebronAl"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1055,13 +1058,19 @@ private boolean createTimeSeries(CreateTimeSeriesPlan createTimeSeriesPlan)\n   private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeSeriesPlan) {\n     Map<Integer, Exception> results = new HashMap<>(createMultiTimeSeriesPlan.getPaths().size());\n     for (int i = 0; i < createMultiTimeSeriesPlan.getPaths().size(); i++) {\n-      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(createMultiTimeSeriesPlan.getPaths().get(i),\n-        createMultiTimeSeriesPlan.getDataTypes().get(i), createMultiTimeSeriesPlan.getEncodings().get(i),\n-        createMultiTimeSeriesPlan.getCompressors().get(i),\n-        createMultiTimeSeriesPlan.getProps() == null ? null : createMultiTimeSeriesPlan.getProps().get(i),\n-        createMultiTimeSeriesPlan.getTags() == null ? null : createMultiTimeSeriesPlan.getTags().get(i),\n-        createMultiTimeSeriesPlan.getAttributes() == null ? null : createMultiTimeSeriesPlan.getAttributes().get(i),\n-        createMultiTimeSeriesPlan.getAlias() == null ? null : createMultiTimeSeriesPlan.getAlias().get(i));\n+      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(\n+          createMultiTimeSeriesPlan.getPaths().get(i),\n+          createMultiTimeSeriesPlan.getDataTypes().get(i),\n+          createMultiTimeSeriesPlan.getEncodings().get(i),\n+          createMultiTimeSeriesPlan.getCompressors().get(i),\n+          createMultiTimeSeriesPlan.getProps() == null ? null\n+              : createMultiTimeSeriesPlan.getProps().get(i),\n+          createMultiTimeSeriesPlan.getTags() == null ? null\n+              : createMultiTimeSeriesPlan.getTags().get(i),\n+          createMultiTimeSeriesPlan.getAttributes() == null ? null\n+              : createMultiTimeSeriesPlan.getAttributes().get(i),\n+          createMultiTimeSeriesPlan.getAlias() == null ? null\n+              : createMultiTimeSeriesPlan.getAlias().get(i));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjUyNA=="}, "originalCommit": {"oid": "2625f758dab80742b88e2a8800b890737ce4b262"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkzNDA4Mg==", "bodyText": "You can rename the createMultiTimeSeriesPlan to a shorter one. It's soooo ugly now.", "url": "https://github.com/apache/iotdb/pull/1881#discussion_r514934082", "createdAt": "2020-10-30T08:20:33Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1055,13 +1058,19 @@ private boolean createTimeSeries(CreateTimeSeriesPlan createTimeSeriesPlan)\n   private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeSeriesPlan) {\n     Map<Integer, Exception> results = new HashMap<>(createMultiTimeSeriesPlan.getPaths().size());\n     for (int i = 0; i < createMultiTimeSeriesPlan.getPaths().size(); i++) {\n-      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(createMultiTimeSeriesPlan.getPaths().get(i),\n-        createMultiTimeSeriesPlan.getDataTypes().get(i), createMultiTimeSeriesPlan.getEncodings().get(i),\n-        createMultiTimeSeriesPlan.getCompressors().get(i),\n-        createMultiTimeSeriesPlan.getProps() == null ? null : createMultiTimeSeriesPlan.getProps().get(i),\n-        createMultiTimeSeriesPlan.getTags() == null ? null : createMultiTimeSeriesPlan.getTags().get(i),\n-        createMultiTimeSeriesPlan.getAttributes() == null ? null : createMultiTimeSeriesPlan.getAttributes().get(i),\n-        createMultiTimeSeriesPlan.getAlias() == null ? null : createMultiTimeSeriesPlan.getAlias().get(i));\n+      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(\n+          createMultiTimeSeriesPlan.getPaths().get(i),\n+          createMultiTimeSeriesPlan.getDataTypes().get(i),\n+          createMultiTimeSeriesPlan.getEncodings().get(i),\n+          createMultiTimeSeriesPlan.getCompressors().get(i),\n+          createMultiTimeSeriesPlan.getProps() == null ? null\n+              : createMultiTimeSeriesPlan.getProps().get(i),\n+          createMultiTimeSeriesPlan.getTags() == null ? null\n+              : createMultiTimeSeriesPlan.getTags().get(i),\n+          createMultiTimeSeriesPlan.getAttributes() == null ? null\n+              : createMultiTimeSeriesPlan.getAttributes().get(i),\n+          createMultiTimeSeriesPlan.getAlias() == null ? null\n+              : createMultiTimeSeriesPlan.getAlias().get(i));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjUyNA=="}, "originalCommit": {"oid": "2625f758dab80742b88e2a8800b890737ce4b262"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0NDcwMw==", "bodyText": "Good suggestion!", "url": "https://github.com/apache/iotdb/pull/1881#discussion_r514944703", "createdAt": "2020-10-30T08:42:49Z", "author": {"login": "LebronAl"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1055,13 +1058,19 @@ private boolean createTimeSeries(CreateTimeSeriesPlan createTimeSeriesPlan)\n   private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeSeriesPlan) {\n     Map<Integer, Exception> results = new HashMap<>(createMultiTimeSeriesPlan.getPaths().size());\n     for (int i = 0; i < createMultiTimeSeriesPlan.getPaths().size(); i++) {\n-      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(createMultiTimeSeriesPlan.getPaths().get(i),\n-        createMultiTimeSeriesPlan.getDataTypes().get(i), createMultiTimeSeriesPlan.getEncodings().get(i),\n-        createMultiTimeSeriesPlan.getCompressors().get(i),\n-        createMultiTimeSeriesPlan.getProps() == null ? null : createMultiTimeSeriesPlan.getProps().get(i),\n-        createMultiTimeSeriesPlan.getTags() == null ? null : createMultiTimeSeriesPlan.getTags().get(i),\n-        createMultiTimeSeriesPlan.getAttributes() == null ? null : createMultiTimeSeriesPlan.getAttributes().get(i),\n-        createMultiTimeSeriesPlan.getAlias() == null ? null : createMultiTimeSeriesPlan.getAlias().get(i));\n+      CreateTimeSeriesPlan plan = new CreateTimeSeriesPlan(\n+          createMultiTimeSeriesPlan.getPaths().get(i),\n+          createMultiTimeSeriesPlan.getDataTypes().get(i),\n+          createMultiTimeSeriesPlan.getEncodings().get(i),\n+          createMultiTimeSeriesPlan.getCompressors().get(i),\n+          createMultiTimeSeriesPlan.getProps() == null ? null\n+              : createMultiTimeSeriesPlan.getProps().get(i),\n+          createMultiTimeSeriesPlan.getTags() == null ? null\n+              : createMultiTimeSeriesPlan.getTags().get(i),\n+          createMultiTimeSeriesPlan.getAttributes() == null ? null\n+              : createMultiTimeSeriesPlan.getAttributes().get(i),\n+          createMultiTimeSeriesPlan.getAlias() == null ? null\n+              : createMultiTimeSeriesPlan.getAlias().get(i));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkxMjUyNA=="}, "originalCommit": {"oid": "2625f758dab80742b88e2a8800b890737ce4b262"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 669, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}