{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTEwNzE2", "number": 1269, "title": "[IOTDB-707] Optimize TsFileResource memory usage", "bodyText": "", "createdAt": "2020-05-26T10:09:22Z", "url": "https://github.com/apache/iotdb/pull/1269", "merged": true, "mergeCommit": {"oid": "d676199b3388442db931f16bd604b393910d1e29"}, "closed": true, "closedAt": "2020-05-29T06:21:16Z", "author": {"login": "HTHou"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclBzVDgH2gAyNDIzMTEwNzE2Ojg0YjU3YjA4MTI2N2RjMjFkMjEzZGIyY2MwZDlmMzA1M2RiYTk4ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcl8W4zgFqTQyMDY3OTc4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84b57b081267dc21d213db2cc0d9f3053dba9887", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/84b57b081267dc21d213db2cc0d9f3053dba9887", "committedDate": "2020-05-26T10:07:15Z", "message": "Optimize TsFileResource memory usage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTU5MjI2", "url": "https://github.com/apache/iotdb/pull/1269#pullrequestreview-418159226", "createdAt": "2020-05-26T10:15:26Z", "commit": {"oid": "84b57b081267dc21d213db2cc0d9f3053dba9887"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDoxNToyNlrOGaXxIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDoxNToyNlrOGaXxIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNTU2OA==", "bodyText": "I'm not sure if this init array size is good or not. Please take a look.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430305568", "createdAt": "2020-05-26T10:15:26Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -63,16 +63,22 @@\n   public static final String RESOURCE_SUFFIX = \".resource\";\n   static final String TEMP_SUFFIX = \".temp\";\n   private static final String CLOSING_SUFFIX = \".closing\";\n+  private static final int INIT_ARRAY_SIZE = 64;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84b57b081267dc21d213db2cc0d9f3053dba9887"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9812d47a55e3b03e48be6853f1909790f19322d", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/d9812d47a55e3b03e48be6853f1909790f19322d", "committedDate": "2020-05-26T13:52:25Z", "message": "fix code smells"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/063a02d4e87ce12506ce3ffbbf7f01df88cc871b", "committedDate": "2020-05-27T01:52:02Z", "message": "fix a bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODA2MzQ1", "url": "https://github.com/apache/iotdb/pull/1269#pullrequestreview-418806345", "createdAt": "2020-05-27T01:57:41Z", "commit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMTo1Nzo0MVrOGa244A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjoxNDo0NlrOGa3InA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTQ1Ng==", "bodyText": "You will read the time twice if it's valid. It's better to recording the result of getStartTime(deviceId) with temporary variables.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430815456", "createdAt": "2020-05-27T01:57:41Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +363,91 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n-  public Map<String, Long> getEndTimeMap() {\n-    return endTimeMap;\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return endTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getOrDefaultStartTime(String deviceId, long defaultTime) {\n+    return getStartTime(deviceId) >= 0 ? startTimes[deviceToIndex.get(deviceId)] : defaultTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTUwMQ==", "bodyText": "You will read the time twice if it's valid. It's better to recording the result of getStartTime(deviceId) with temporary variables.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430815501", "createdAt": "2020-05-27T01:57:50Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +363,91 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n   }\n \n-  public Map<String, Long> getEndTimeMap() {\n-    return endTimeMap;\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return endTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getOrDefaultStartTime(String deviceId, long defaultTime) {\n+    return getStartTime(deviceId) >= 0 ? startTimes[deviceToIndex.get(deviceId)] : defaultTime;\n+  }\n+\n+  public long getOrDefaultEndTime(String deviceId, long defaultTime) {\n+    return getEndTime(deviceId) >= 0 ? endTimes[deviceToIndex.get(deviceId)] : defaultTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 216}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNzY5MA==", "bodyText": "In the worst case, it may waste nearly half memory of startTimes and endTimes. From this point of view, I think it may be not a better choice than Map<String, long[]> deviceToStartEndTime.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430817690", "createdAt": "2020-05-27T02:07:11Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -63,16 +63,22 @@\n   public static final String RESOURCE_SUFFIX = \".resource\";\n   static final String TEMP_SUFFIX = \".temp\";\n   private static final String CLOSING_SUFFIX = \".closing\";\n+  private static final int INIT_ARRAY_SIZE = 64;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMwNTU2OA=="}, "originalCommit": {"oid": "84b57b081267dc21d213db2cc0d9f3053dba9887"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxODM3Mg==", "bodyText": "Same issue as above.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430818372", "createdAt": "2020-05-27T02:10:06Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -318,12 +318,18 @@ private void recover() throws StorageGroupProcessorException {\n \n     for (TsFileResource resource : sequenceFileTreeSet) {\n       long timePartitionId = resource.getTimePartition();\n+      Map<String, Long> endTimeMap = new HashMap<>();\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n+        String deviceId = entry.getKey();\n+        long endTime = resource.getEndTime(deviceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTI5OQ==", "bodyText": "If we already have the index info, that is entry.getValue(). It will be more efficient to get from endTimes by index directly. Otherwise, it will hash twice and find in bucket in ConcurrentHashMap. Other iterations have similar problems, please have a look too.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819299", "createdAt": "2020-05-27T02:14:01Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/selector/MaxFileMergeFileSelector.java", "diffHunk": "@@ -213,18 +213,18 @@ private boolean checkClosed(TsFileResource unseqFile) {\n   private void selectOverlappedSeqFiles(TsFileResource unseqFile) {\n \n     int tmpSelectedNum = 0;\n-    for (Entry<String, Long> deviceStartTimeEntry : unseqFile.getStartTimeMap().entrySet()) {\n+    for (Entry<String, Integer> deviceStartTimeEntry : unseqFile.getDeviceToIndexMap().entrySet()) {\n       String deviceId = deviceStartTimeEntry.getKey();\n-      Long unseqStartTime = deviceStartTimeEntry.getValue();\n-      Long unseqEndTime = unseqFile.getEndTimeMap().get(deviceId);\n+      long unseqStartTime = unseqFile.getStartTime(deviceId);\n+      long unseqEndTime = unseqFile.getEndTime(deviceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ0OQ==", "bodyText": "Same issue as above.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819449", "createdAt": "2020-05-27T02:14:39Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -344,16 +350,16 @@ private void updateLastestFlushedTime() throws IOException {\n     VersionController versionController = new SimpleFileVersionController(storageGroupSysDir.getPath());\n     long currentVersion = versionController.currVersion();\n     for (TsFileResource resource : upgradeSeqFileList) {\n-      for (Entry<String, Long> entry : resource.getEndTimeMap().entrySet()) {\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = entry.getValue();\n+        long endTime = resource.getEndTime(deviceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxOTQ4NA==", "bodyText": "Same issue as above.", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r430819484", "createdAt": "2020-05-27T02:14:46Z", "author": {"login": "fanhualta"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -344,16 +350,16 @@ private void updateLastestFlushedTime() throws IOException {\n     VersionController versionController = new SimpleFileVersionController(storageGroupSysDir.getPath());\n     long currentVersion = versionController.currVersion();\n     for (TsFileResource resource : upgradeSeqFileList) {\n-      for (Entry<String, Long> entry : resource.getEndTimeMap().entrySet()) {\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n         String deviceId = entry.getKey();\n-        long endTime = entry.getValue();\n+        long endTime = resource.getEndTime(deviceId);\n         long endTimePartitionId = StorageEngine.getTimePartition(endTime);\n         latestTimeForEachDevice.computeIfAbsent(endTimePartitionId, l -> new HashMap<>())\n                 .put(deviceId, endTime);\n-        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());\n+        globalLatestFlushedTimeForEachDevice.put(deviceId, endTime);\n \n         // set all the covered partition's LatestFlushedTime to Long.MAX_VALUE\n-        long partitionId = StorageEngine.getTimePartition(resource.startTimeMap.get(deviceId));\n+        long partitionId = StorageEngine.getTimePartition(resource.getStartTime(deviceId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "063a02d4e87ce12506ce3ffbbf7f01df88cc871b"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e87a4412c8f2c19055a0821e6d7343474c7fc41", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/0e87a4412c8f2c19055a0821e6d7343474c7fc41", "committedDate": "2020-05-27T03:48:00Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f9df8c0a7a58d7183164bf6f53d103f90f339b6", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/7f9df8c0a7a58d7183164bf6f53d103f90f339b6", "committedDate": "2020-05-27T06:59:09Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/85277e9a2121370bdfc38f1ecd605f359707808a", "committedDate": "2020-05-27T07:55:10Z", "message": "fix test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5MjAzMzg5", "url": "https://github.com/apache/iotdb/pull/1269#pullrequestreview-419203389", "createdAt": "2020-05-27T13:26:07Z", "commit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzoyNjowN1rOGbKAuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzo0ODozOFrOGbLBVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyODc2Mw==", "bodyText": "You can fill startTime by MAX_VALUE and fill endTimes by MIN_VALUE", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431128763", "createdAt": "2020-05-27T13:26:07Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -221,18 +237,22 @@ private void generateTimeSeriesMetadata() throws IOException {\n     }\n   }\n \n+  private void initTimes(long[] times) {\n+    Arrays.fill(times, -1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEyOTUwOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * end times array. The values in this array are -1 if it's an unsealed sequence tsfile\n          \n          \n            \n               * end times array. The values in this array are Long.MIN_VALUE if it's an unsealed sequence tsfile", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431129509", "createdAt": "2020-05-27T13:27:09Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -63,16 +64,22 @@\n   public static final String RESOURCE_SUFFIX = \".resource\";\n   static final String TEMP_SUFFIX = \".temp\";\n   private static final String CLOSING_SUFFIX = \".closing\";\n+  private static final int INIT_ARRAY_SIZE = 64;\n \n   /**\n-   * device -> start time\n+   * start times array. \n    */\n-  protected Map<String, Long> startTimeMap;\n+  private long[] startTimes;\n \n   /**\n-   * device -> end time. It is null if it's an unsealed sequence tsfile\n+   * end times array. The values in this array are -1 if it's an unsealed sequence tsfile", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNDY0NQ==", "bodyText": "You can fill startTime by MAX_VALUE and fill endTimes by MIN_VALUE", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431134645", "createdAt": "2020-05-27T13:34:29Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -283,16 +306,16 @@ public void deserialize() throws IOException {\n   }\n \n   public void updateStartTime(String device, long time) {\n-    long startTime = startTimeMap.getOrDefault(device, Long.MAX_VALUE);\n+    long startTime = getOrDefaultStartTime(device, Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTUwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return -1;\n          \n          \n            \n                  return Long.MAX_VALUE;\n          \n      \n    \n    \n  \n\nis this ok?", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431135501", "createdAt": "2020-05-27T13:35:38Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +362,106 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzNTgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return -1;\n          \n          \n            \n                  return Long.MIN_TIME;", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431135828", "createdAt": "2020-05-27T13:36:04Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileResource.java", "diffHunk": "@@ -339,12 +362,106 @@ public long getFileSize() {\n     return file.length();\n   }\n \n-  public Map<String, Long> getStartTimeMap() {\n-    return startTimeMap;\n+  public long getStartTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;\n+    }\n+    return startTimes[deviceToIndex.get(deviceId)];\n+  }\n+\n+  public long getStartTime(int index) {\n+    return startTimes[index];\n+  }\n+\n+  public long getEndTime(String deviceId) {\n+    if (!deviceToIndex.containsKey(deviceId)) {\n+      return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzOTk0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          Long minTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long minTimeOfO2 = o2.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long maxTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n          \n          \n            \n                          Long maxTimeOfO2 = o2.getEndTime(seriesPath.getDevice());", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431139940", "createdAt": "2020-05-27T13:41:48Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/fill/LastPointReader.java", "diffHunk": "@@ -183,11 +182,8 @@ private boolean shouldUpdate(long time, long version, long newTime, long newVers\n     PriorityQueue<TsFileResource> unseqTsFilesSet =\n         new PriorityQueue<>(\n             (o1, o2) -> {\n-              Map<String, Long> startTimeMap = o1.getEndTimeMap();\n-              Long minTimeOfO1 = startTimeMap.get(seriesPath.getDevice());\n-              Map<String, Long> startTimeMap2 = o2.getEndTimeMap();\n-              Long minTimeOfO2 = startTimeMap2.get(seriesPath.getDevice());\n-\n+              Long minTimeOfO1 = o1.getEndTime(seriesPath.getDevice());\n+              Long minTimeOfO2 = o2.getEndTime(seriesPath.getDevice());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDc3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (lastEndTime >= 0 && lastEndTime >= insertTabletPlan.getMinTime() &&\n          \n          \n            \n                  if (lastEndTime != Long.MIN_VALUE && lastEndTime >= insertTabletPlan.getMinTime() &&", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431140773", "createdAt": "2020-05-27T13:42:56Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -127,8 +127,8 @@ private void replayBatchInsert(InsertTabletPlan insertTabletPlan)\n       throws WriteProcessException, QueryProcessException {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n-      Long lastEndTime = currentTsFileResource.getEndTimeMap().get(insertTabletPlan.getDeviceId());\n-      if (lastEndTime != null && lastEndTime >= insertTabletPlan.getMinTime() &&\n+      long lastEndTime = currentTsFileResource.getEndTime(insertTabletPlan.getDeviceId());\n+      if (lastEndTime >= 0 && lastEndTime >= insertTabletPlan.getMinTime() &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0MDkwOA==", "bodyText": "the same", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431140908", "createdAt": "2020-05-27T13:43:05Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/writelog/recover/LogReplayer.java", "diffHunk": "@@ -155,8 +155,8 @@ private void replayBatchInsert(InsertTabletPlan insertTabletPlan)\n   private void replayInsert(InsertPlan insertPlan) {\n     if (currentTsFileResource != null) {\n       // the last chunk group may contain the same data with the logs, ignore such logs in seq file\n-      Long lastEndTime = currentTsFileResource.getEndTimeMap().get(insertPlan.getDeviceId());\n-      if (lastEndTime != null && lastEndTime >= insertPlan.getTime() &&\n+      long lastEndTime = currentTsFileResource.getEndTime(insertPlan.getDeviceId());\n+      if (lastEndTime >= 0 && lastEndTime >= insertPlan.getTime() &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NDA4OA==", "bodyText": "I don't understand why here set start time to end time before.....", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431144088", "createdAt": "2020-05-27T13:47:25Z", "author": {"login": "qiaojialin"}, "path": "server/src/test/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessorTest.java", "diffHunk": "@@ -282,9 +282,8 @@ public void testWriteAndClose() throws IOException, WriteProcessException{\n   private void closeTsFileProcessor(TsFileProcessor unsealedTsFileProcessor) throws TsFileProcessorException {\n     TsFileResource resource = unsealedTsFileProcessor.getTsFileResource();\n     synchronized (resource) {\n-      for (Entry<String, Long> startTime : resource.getStartTimeMap().entrySet()) {\n-        String deviceId = startTime.getKey();\n-        resource.getEndTimeMap().put(deviceId, resource.getStartTimeMap().get(deviceId));\n+      for (Entry<String, Integer> entry : resource.getDeviceToIndexMap().entrySet()) {\n+        resource.putEndTime(entry.getKey(), resource.getStartTime(entry.getValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE0NTMwMQ==", "bodyText": "== MAX_VALUE", "url": "https://github.com/apache/iotdb/pull/1269#discussion_r431145301", "createdAt": "2020-05-27T13:48:38Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/merge/task/MergeMultiChunkTask.java", "diffHunk": "@@ -152,9 +152,9 @@ private void pathsMergeOneFile(int seqFileIdx, IPointReader[] unseqReaders)\n       throws IOException {\n     TsFileResource currTsFile = resource.getSeqFiles().get(seqFileIdx);\n     String deviceId = currMergingPaths.get(0).getDevice();\n-    Long currDeviceMinTime = currTsFile.getStartTimeMap().get(deviceId);\n+    long currDeviceMinTime = currTsFile.getStartTime(deviceId);\n     //COMMENTS: is this correct? how about if there are other devices (in the currMergingPaths) that have unseq data?\n-    if (currDeviceMinTime == null) {\n+    if (currDeviceMinTime < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85277e9a2121370bdfc38f1ecd605f359707808a"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc6f066af181db3084c56995f81abb3e5eb1b1f8", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fc6f066af181db3084c56995f81abb3e5eb1b1f8", "committedDate": "2020-05-28T01:48:02Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97784d487067845ee3d2c8fe01a8bff9b1146728", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/97784d487067845ee3d2c8fe01a8bff9b1146728", "committedDate": "2020-05-28T01:53:40Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f6cea7c94231ca51952e5ef2fb6668aa1264f8c", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/9f6cea7c94231ca51952e5ef2fb6668aa1264f8c", "committedDate": "2020-05-28T08:10:37Z", "message": "Merge branch 'master' into jira-707"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5ODg5ODQw", "url": "https://github.com/apache/iotdb/pull/1269#pullrequestreview-419889840", "createdAt": "2020-05-28T08:31:14Z", "commit": {"oid": "9f6cea7c94231ca51952e5ef2fb6668aa1264f8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb976c8a398c8709727e37347f55dd585e4d9f63", "author": {"user": {"login": "HTHou", "name": "Haonan"}}, "url": "https://github.com/apache/iotdb/commit/fb976c8a398c8709727e37347f55dd585e4d9f63", "committedDate": "2020-05-28T08:48:44Z", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into jira-707"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNjc5Nzg2", "url": "https://github.com/apache/iotdb/pull/1269#pullrequestreview-420679786", "createdAt": "2020-05-29T06:20:35Z", "commit": {"oid": "fb976c8a398c8709727e37347f55dd585e4d9f63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3705, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}