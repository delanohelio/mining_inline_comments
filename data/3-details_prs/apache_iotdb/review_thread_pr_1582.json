{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NTI5ODM5", "number": 1582, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMToxNjoyMVrOET5b5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMToxNjoyMVrOET5b5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5Mjk5NDMwOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/RaftLogManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMToxNjoyMVrOG5491g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTo0Nzo0MFrOG58uKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTM1MA==", "bodyText": "shutdown this when the manager is closed.", "url": "https://github.com/apache/iotdb/pull/1582#discussion_r463355350", "createdAt": "2020-07-31T01:16:21Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/RaftLogManager.java", "diffHunk": "@@ -100,6 +100,16 @@ public RaftLogManager(StableEntryManager stableEntryManager, LogApplier applier,\n         .scheduleAtFixedRate(this::checkDeleteLog, logDeleteCheckIntervalSecond,\n             logDeleteCheckIntervalSecond,\n             TimeUnit.SECONDS);\n+\n+    /**\n+     * flush log to file periodically\n+     */\n+    int logFlushTimeIntervalMS = ClusterDescriptor.getInstance().getConfig()\n+        .getForceRaftLogPeriodInMS();\n+    if (ClusterDescriptor.getInstance().getConfig().isEnableRaftLogPersistence()) {\n+      executorService.scheduleAtFixedRate(this::flushLogPeriodically, logFlushTimeIntervalMS,\n+          logFlushTimeIntervalMS, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "997bf90c607699b0840e95adee5ae7cbf1a8e181"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQxNjg3NQ==", "bodyText": "Thanks for your advice. I will use a new executor service for raft log writing.", "url": "https://github.com/apache/iotdb/pull/1582#discussion_r463416875", "createdAt": "2020-07-31T05:47:40Z", "author": {"login": "Ring-k"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/RaftLogManager.java", "diffHunk": "@@ -100,6 +100,16 @@ public RaftLogManager(StableEntryManager stableEntryManager, LogApplier applier,\n         .scheduleAtFixedRate(this::checkDeleteLog, logDeleteCheckIntervalSecond,\n             logDeleteCheckIntervalSecond,\n             TimeUnit.SECONDS);\n+\n+    /**\n+     * flush log to file periodically\n+     */\n+    int logFlushTimeIntervalMS = ClusterDescriptor.getInstance().getConfig()\n+        .getForceRaftLogPeriodInMS();\n+    if (ClusterDescriptor.getInstance().getConfig().isEnableRaftLogPersistence()) {\n+      executorService.scheduleAtFixedRate(this::flushLogPeriodically, logFlushTimeIntervalMS,\n+          logFlushTimeIntervalMS, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM1NTM1MA=="}, "originalCommit": {"oid": "997bf90c607699b0840e95adee5ae7cbf1a8e181"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4774, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}