{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0ODkyNjY1", "number": 1468, "title": "split vm with flush", "bodyText": "", "createdAt": "2020-07-06T16:50:42Z", "url": "https://github.com/apache/iotdb/pull/1468", "merged": true, "mergeCommit": {"oid": "d0d581549f2cd7a5603cfd21a4cb12ba7eb9c0d1"}, "closed": true, "closedAt": "2020-07-08T04:46:59Z", "author": {"login": "zhanglingzhe0820"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyUIm-AH2gAyNDQ0ODkyNjY1OmMzMWFjNTNkOGE2MjkyZGY3NWI1MzA0NjA2MDNlYWVmNDg3N2IyYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyy-o3AFqTQ0NDQwOTQ0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c31ac53d8a6292df75b530460603eaef4877b2c8", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/c31ac53d8a6292df75b530460603eaef4877b2c8", "committedDate": "2020-07-06T16:49:48Z", "message": "split vm with flush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5988a49b46b73de7b2cbabcdf15ad71d49bf98a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a5988a49b46b73de7b2cbabcdf15ad71d49bf98a", "committedDate": "2020-07-07T01:41:46Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9c5eb8d8a26a72c926850460c4c7f39e75453ca", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/e9c5eb8d8a26a72c926850460c4c7f39e75453ca", "committedDate": "2020-07-07T02:03:42Z", "message": "remove useless code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/5361b993729cea215c12e9f8b2f03aee6ec34415", "committedDate": "2020-07-07T08:16:57Z", "message": "update merge size"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4818f0547bc976ac11ea8d79b227075cf609445", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/c4818f0547bc976ac11ea8d79b227075cf609445", "committedDate": "2020-07-07T13:18:56Z", "message": "fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db78e7781c96e1b8cb45ea1a15e52210b12115e", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/3db78e7781c96e1b8cb45ea1a15e52210b12115e", "committedDate": "2020-07-07T13:22:08Z", "message": "update recover"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODc4MzEy", "url": "https://github.com/apache/iotdb/pull/1468#pullrequestreview-443878312", "createdAt": "2020-07-07T13:15:55Z", "commit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoxNTo1NlrOGt-Alg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMzoyMjowMlrOGt-QPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTA2Mg==", "bodyText": "copy vmWriters and vmTsFileResources to a new collection", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450855062", "createdAt": "2020-07-07T13:15:56Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1NTg5NQ==", "bodyText": "in this way, you will construct many Path and MeasurementSchema, use computeIfAbsent and Map<String, Map<String, MeasurementSchema>>", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450855895", "createdAt": "2020-07-07T13:17:15Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);\n+          return;\n+        }\n+\n+        long vmPointNum = 0;\n+        // all flush to target file\n+        int mergeFileNum = vmWriters.size() - 1;\n+        List<RestorableTsFileIOWriter> flushVmWriters = vmWriters.subList(0, mergeFileNum);\n+        List<TsFileResource> flushVmFiles = vmTsFileResources.subList(0, mergeFileNum);\n+        Map<Path, MeasurementSchema> pathMeasurementSchemaMap = new HashMap<>();\n+        for (RestorableTsFileIOWriter vmWriter : flushVmWriters) {\n+          Map<String, Map<String, List<ChunkMetadata>>> schemaMap = vmWriter\n+              .getMetadatasForQuery();\n+          for (String device : schemaMap.keySet()) {\n+            for (String measurement : schemaMap.get(device).keySet()) {\n+              List<ChunkMetadata> chunkMetadataList = schemaMap.get(device).get(measurement);\n+              for (ChunkMetadata chunkMetadata : chunkMetadataList) {\n+                vmPointNum += chunkMetadata.getNumOfPoints();\n+              }\n+              pathMeasurementSchemaMap.putIfAbsent(new Path(device, measurement),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1ODY4Mg==", "bodyText": "copy the vmWriters and vmResources and set to VmMergeLoop to avoid being changed.", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450858682", "createdAt": "2020-07-07T13:21:28Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -803,28 +718,12 @@ public void flushOneMemTable() {\n             memTableToFlush.isSignalMemTable(), flushingMemTables.size());\n       }\n     }\n+    Future<Void> vmFuture = VmMergeTaskPoolManager.getInstance().submit(new VmMergeLoop());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg1OTA2OA==", "bodyText": "why left the last one?", "url": "https://github.com/apache/iotdb/pull/1468#discussion_r450859068", "createdAt": "2020-07-07T13:22:02Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -1061,4 +960,104 @@ public void putMemTableBackAndClose() throws TsFileProcessorException {\n   public ReadWriteLock getFlushQueryLock() {\n     return flushQueryLock;\n   }\n+\n+  private File createNewTmpFile() {\n+    File parent = writer.getFile().getParentFile();\n+    return FSFactoryProducer.getFSFactory().getFile(parent,\n+        writer.getFile().getName() + IoTDBConstant.FILE_NAME_SEPARATOR + System\n+            .currentTimeMillis()\n+            + VM_SUFFIX + IoTDBConstant.PATH_SEPARATOR\n+            + PATH_UPGRADE);\n+  }\n+\n+  private void flushAllVmToTsFile(List<RestorableTsFileIOWriter> currMergeVmWriters,\n+      List<TsFileResource> currMergeVmFiles) throws IOException {\n+    VmMergeTask vmMergeTask = new VmMergeTask(writer, currMergeVmWriters,\n+        storageGroupName,\n+        new VmLogger(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName()),\n+        new HashSet<>(), sequence);\n+    vmMergeTask.fullMerge();\n+    for (TsFileResource vmTsFileResource : currMergeVmFiles) {\n+      deleteVmFile(vmTsFileResource);\n+    }\n+    vmWriters.removeAll(currMergeVmWriters);\n+    vmTsFileResources.removeAll(currMergeVmFiles);\n+    File logFile = FSFactoryProducer.getFSFactory()\n+        .getFile(tsFileResource.getFile().getParent(),\n+            tsFileResource.getFile().getName() + VM_LOG_NAME);\n+    logFile.delete();\n+  }\n+\n+  class VmMergeLoop implements Callable<Void> {\n+\n+    public void merge() {\n+      try {\n+        if (shouldClose && flushingMemTables.isEmpty()) {\n+          // merge vm to tsfile\n+          logger.info(\"[Flush] merge all {} vms to TsFile\", vmTsFileResources.size() + 1);\n+          flushAllVmToTsFile(vmWriters, vmTsFileResources);\n+          return;\n+        }\n+\n+        long vmPointNum = 0;\n+        // all flush to target file\n+        int mergeFileNum = vmWriters.size() - 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5361b993729cea215c12e9f8b2f03aee6ec34415"}, "originalPosition": 229}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f30ace4b0d0e979eb6664f7a10bccb774f1ea013", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/f30ace4b0d0e979eb6664f7a10bccb774f1ea013", "committedDate": "2020-07-07T13:41:43Z", "message": "update list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02d8aabe7c3a5de73f9ec368e4c253f5da8e1695", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/02d8aabe7c3a5de73f9ec368e4c253f5da8e1695", "committedDate": "2020-07-07T14:36:05Z", "message": "update memtable flush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78dc963a75c1d3c42bd85b74a1966eeb66324cf0", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/78dc963a75c1d3c42bd85b74a1966eeb66324cf0", "committedDate": "2020-07-08T01:12:16Z", "message": "update list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b392a6b5099bce9c32c9db059fb6420b8d0b144b", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b392a6b5099bce9c32c9db059fb6420b8d0b144b", "committedDate": "2020-07-08T01:28:31Z", "message": "update vm merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0adc58e17f200093393e9635fd6e876629eeef3", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b0adc58e17f200093393e9635fd6e876629eeef3", "committedDate": "2020-07-08T01:52:50Z", "message": "fix ConcurrentModificationException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46231bcd37f4e218f6478092bad3313d28e9ca62", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/46231bcd37f4e218f6478092bad3313d28e9ca62", "committedDate": "2020-07-08T01:57:38Z", "message": "update vm merge utils and vm merge task"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1e426161a53e178497a048efd3339184a72ae91", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/f1e426161a53e178497a048efd3339184a72ae91", "committedDate": "2020-07-08T02:55:24Z", "message": "update tsFileSequenceReaderMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b19a658bbaccd8c2d1f17d217241cacf494aa3", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/28b19a658bbaccd8c2d1f17d217241cacf494aa3", "committedDate": "2020-07-08T03:02:29Z", "message": "remove vm mark and reset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "327e7db73e34350e98a5519104befcce3edf28aa", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/327e7db73e34350e98a5519104befcce3edf28aa", "committedDate": "2020-07-08T03:40:06Z", "message": "update should close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32cb36166134f528c70e1410b49c8e33135c34a8", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/32cb36166134f528c70e1410b49c8e33135c34a8", "committedDate": "2020-07-08T03:52:43Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e9ab5759169a9a335547719c1a7669cf1afc1c9", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6e9ab5759169a9a335547719c1a7669cf1afc1c9", "committedDate": "2020-07-08T04:44:45Z", "message": "update copy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDA5NDQ1", "url": "https://github.com/apache/iotdb/pull/1468#pullrequestreview-444409445", "createdAt": "2020-07-08T04:45:58Z", "commit": {"oid": "6e9ab5759169a9a335547719c1a7669cf1afc1c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3691, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}