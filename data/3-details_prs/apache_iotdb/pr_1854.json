{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MzMzNzk0", "number": 1854, "title": "[IOTDB-884] group createMultiTimeseriesPlan by partitionGroup", "bodyText": "https://issues.apache.org/jira/browse/IOTDB-884", "createdAt": "2020-10-24T05:46:28Z", "url": "https://github.com/apache/iotdb/pull/1854", "merged": true, "mergeCommit": {"oid": "2bade4f545eb16db6284bdc2bd6486e67e2a5ae7"}, "closed": true, "closedAt": "2020-10-28T08:51:42Z", "author": {"login": "mychaow"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVl8_YgFqTUxNjE2NTMyOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWjkeMgBqjM5MjQzMTI0NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MTY1MzI4", "url": "https://github.com/apache/iotdb/pull/1854#pullrequestreview-516165328", "createdAt": "2020-10-24T06:57:11Z", "commit": {"oid": "07334871d00a1e9881d967177ed3896930f9fab7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNjo1NzoxMVrOHnpF3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQwNzoyMjoxMVrOHnpNfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMyOTc1OQ==", "bodyText": "Minor Suggesion:\n// CreateMultiTimeSeriesPlan contains many rows, each will correspond to a TSStatus as its\n// execution result, as the plan is splited and the sub-plans may have interleaving ranges,\n// we must assure that each TSStatus is placed to the right position", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511329759", "createdAt": "2020-10-24T06:57:11Z", "author": {"login": "LebronAl"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1478,6 +1479,11 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n         // belongs to NodeB, when NodeA returns a success while NodeB returns a failure, the\n         // failure and success should be placed into proper positions in TSStatus.subStatus\n         status = forwardInsertTabletPlan(planGroupMap, (InsertTabletPlan) plan);\n+      } else if (plan instanceof CreateMultiTimeSeriesPlan) {\n+        // CreateMultiTimeSeriesPlans contain many rows, each will correspond to a TSStatus as its\n+        // execution result, as the plan is split and the sub-plans may have interleaving ranges,\n+        // we must assure that each TSStatus is placed to the right position", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07334871d00a1e9881d967177ed3896930f9fab7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMDMxNg==", "bodyText": "Why not use StatusUtils.OK? then we can reduce a creation of a TSStatus object with the same meaning.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511330316", "createdAt": "2020-10-24T07:04:34Z", "author": {"login": "LebronAl"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1505,6 +1511,48 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n     return status;\n   }\n \n+  /**\n+   * Forward each sub-plan to its belonging data group, and combine responses from the groups.\n+   *\n+   * @param planGroupMap sub-plan -> data group pairs\n+   */\n+  private TSStatus forwardCreateMultiTimeSeriesPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           CreateMultiTimeSeriesPlan plan) {\n+    List<String> errorCodePartitionGroups = new ArrayList<>();\n+    TSStatus tmpStatus;\n+    CreateMultiTimeSeriesPlan subPlan;\n+    Map<Integer, Exception> results = new HashMap<>();\n+    boolean noFailure = true;\n+    boolean isBatchFailure = false;\n+    // send sub-plans to each belonging data group and collect results\n+    for (Map.Entry<PhysicalPlan, PartitionGroup> entry : planGroupMap.entrySet()) {\n+      tmpStatus = forwardToSingleGroup(entry);\n+      subPlan = (CreateMultiTimeSeriesPlan) entry.getKey();\n+      logger.debug(\"{}: from {},{},{}\", name, entry.getKey(), entry.getValue(), tmpStatus);\n+      noFailure =\n+        (tmpStatus.getCode() == TSStatusCode.SUCCESS_STATUS.getStatusCode()) && noFailure;\n+      isBatchFailure = (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode())\n+        || isBatchFailure;\n+      if (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode()) {\n+        results.putAll(subPlan.getResults());\n+      }\n+      if (tmpStatus.getCode() != TSStatusCode.SUCCESS_STATUS.getStatusCode()) {\n+        // execution failed, record the error message\n+        errorCodePartitionGroups.add(String.format(\"[%s@%s:%s:%s]\",\n+          tmpStatus.getCode(), entry.getValue().getHeader(),\n+          tmpStatus.getMessage(), tmpStatus.subStatus));\n+      }\n+    }\n+\n+    plan.setResults(results);\n+    if (noFailure || isBatchFailure) {\n+      return RpcUtils.getStatus(TSStatusCode.SUCCESS_STATUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07334871d00a1e9881d967177ed3896930f9fab7"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTMzMTcxMQ==", "bodyText": "When will forwardToSingleGroup return a TSStatusCode.MULTIPLE_ERROR during creating multi timeseries? It seems that this TSStatus  will only be returned by BatchInsertionException, which is only thrown during 'insertTablet' interface currently~", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r511331711", "createdAt": "2020-10-24T07:22:11Z", "author": {"login": "LebronAl"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1505,6 +1511,48 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n     return status;\n   }\n \n+  /**\n+   * Forward each sub-plan to its belonging data group, and combine responses from the groups.\n+   *\n+   * @param planGroupMap sub-plan -> data group pairs\n+   */\n+  private TSStatus forwardCreateMultiTimeSeriesPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           CreateMultiTimeSeriesPlan plan) {\n+    List<String> errorCodePartitionGroups = new ArrayList<>();\n+    TSStatus tmpStatus;\n+    CreateMultiTimeSeriesPlan subPlan;\n+    Map<Integer, Exception> results = new HashMap<>();\n+    boolean noFailure = true;\n+    boolean isBatchFailure = false;\n+    // send sub-plans to each belonging data group and collect results\n+    for (Map.Entry<PhysicalPlan, PartitionGroup> entry : planGroupMap.entrySet()) {\n+      tmpStatus = forwardToSingleGroup(entry);\n+      subPlan = (CreateMultiTimeSeriesPlan) entry.getKey();\n+      logger.debug(\"{}: from {},{},{}\", name, entry.getKey(), entry.getValue(), tmpStatus);\n+      noFailure =\n+        (tmpStatus.getCode() == TSStatusCode.SUCCESS_STATUS.getStatusCode()) && noFailure;\n+      isBatchFailure = (tmpStatus.getCode() == TSStatusCode.MULTIPLE_ERROR.getStatusCode())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07334871d00a1e9881d967177ed3896930f9fab7"}, "originalPosition": 53}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0fafe56c53bcc4dd953ae3fe71f4b7ae76031a3d", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/0fafe56c53bcc4dd953ae3fe71f4b7ae76031a3d", "committedDate": "2020-10-24T13:04:16Z", "message": "modify the way of collecting the result"}, "afterCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "committedDate": "2020-10-24T13:07:13Z", "message": "modify the way of collecting the result"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3Mjg4NTY0", "url": "https://github.com/apache/iotdb/pull/1854#pullrequestreview-517288564", "createdAt": "2020-10-27T01:37:38Z", "commit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMTozNzozOVrOHooSMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwMTo1MTo1MFrOHoohiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NTEwNw==", "bodyText": "Assign groupHoldPlan.get(partitionGroup) to a local variable so that you will not need to call get twice.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512365107", "createdAt": "2020-10-27T01:37:39Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/query/ClusterPlanRouter.java", "diffHunk": "@@ -292,4 +295,64 @@ private PartitionGroup routePlan(ShowChildPathsPlan plan) {\n     }\n     return result;\n   }\n+\n+  @SuppressWarnings(\"SuspiciousSystemArraycopy\")\n+  private Map<PhysicalPlan, PartitionGroup> splitAndRoutePlan(CreateMultiTimeSeriesPlan plan)\n+    throws MetadataException {\n+    Map<PhysicalPlan, PartitionGroup> result = new HashMap<>();\n+    Map<PartitionGroup, PhysicalPlan> groupHoldPlan = new HashMap<>();\n+\n+    for (int i = 0; i < plan.getPaths().size(); i++) {\n+      PartialPath path = plan.getPaths().get(i);\n+      PartitionGroup partitionGroup =\n+        partitionTable.partitionByPathTime(path, 0);\n+      CreateMultiTimeSeriesPlan subPlan = null;\n+      if (groupHoldPlan.get(partitionGroup) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NTg2MQ==", "bodyText": "Not only InsertTabletPlan now, please update the comment.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512365861", "createdAt": "2020-10-27T01:40:21Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1466,18 +1467,18 @@ public TSStatus processPartitionedPlan(PhysicalPlan plan) throws UnsupportedPlan\n    */\n   private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, PhysicalPlan plan) {\n     // the error codes from the groups that cannot execute the plan\n-    TSStatus status;\n+    TSStatus status = null;\n     if (planGroupMap.size() == 1) {\n       status = forwardToSingleGroup(planGroupMap.entrySet().iterator().next());\n     } else {\n-      if (plan instanceof InsertTabletPlan) {\n-        // InsertTabletPlans contain many rows, each will correspond to a TSStatus as its\n+      if (plan instanceof InsertTabletPlan || plan instanceof CreateMultiTimeSeriesPlan) {\n+        // InsertTabletPlan contains many rows, each will correspond to a TSStatus as its", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NjI3Mw==", "bodyText": "Maybe we should rename plan to something like completePlan, originalPlan or parentPlan.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512366273", "createdAt": "2020-10-27T01:41:53Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/MetaGroupMember.java", "diffHunk": "@@ -1510,46 +1511,66 @@ private TSStatus forwardPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap, Phy\n    *\n    * @param planGroupMap sub-plan -> data group pairs\n    */\n-  private TSStatus forwardInsertTabletPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n-      InsertTabletPlan plan) {\n+  private TSStatus forwardMultiSubPlan(Map<PhysicalPlan, PartitionGroup> planGroupMap,\n+                                           PhysicalPlan plan) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2NzM5OQ==", "bodyText": "Actually delete the file using something like Files.deleteIfExists().", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512367399", "createdAt": "2020-10-27T01:46:04Z", "author": {"login": "jt2594838"}, "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/snapshot/DataSnapshotTest.java", "diffHunk": "@@ -75,6 +75,11 @@ public void readFile(String filePath, long offset, int length,\n               }\n             }).start();\n           }\n+\n+          @Override\n+          public void removeHardLink(String hardLinkPath, AsyncMethodCallback<Void> resultHandler) throws TException {\n+            System.out.println(\"remote hardLinkPath: \" + hardLinkPath);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2ODE2NQ==", "bodyText": "This may skip the unclosed TsFile that should be replaced by the pulled file, and I think cluster_new now has properly handled this, so please abort the change.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512368165", "createdAt": "2020-10-27T01:48:42Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1937,6 +1937,7 @@ private void removeFullyOverlapFiles(TsFileResource newTsFile, Iterator<TsFileRe\n     while (iterator.hasNext()) {\n       TsFileResource existingTsFile = iterator.next();\n       if (newTsFile.getHistoricalVersions().containsAll(existingTsFile.getHistoricalVersions())\n+          && !newTsFile.getHistoricalVersions().equals(existingTsFile.getHistoricalVersions())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2ODc2Nw==", "bodyText": "Use e.getErrorCode() here.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512368767", "createdAt": "2020-10-27T01:50:47Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1070,11 +1075,19 @@ private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeS\n       try {\n         createTimeSeries(plan);\n       } catch (QueryProcessException e) {\n-        results.put(createMultiTimeSeriesPlan.getIndexes().get(i), e);\n+        if (results == null) {\n+          results = new TSStatus[createMultiTimeSeriesPlan.getIndexes().size()];\n+          Arrays.fill(results, RpcUtils.SUCCESS_STATUS);\n+        }\n+        results[i] = RpcUtils.getStatus(TSStatusCode.INTERNAL_SERVER_ERROR, e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjM2OTAzMw==", "bodyText": "I think we should rename this to BatchProcessException now.", "url": "https://github.com/apache/iotdb/pull/1854#discussion_r512369033", "createdAt": "2020-10-27T01:51:50Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/executor/PlanExecutor.java", "diffHunk": "@@ -1070,11 +1075,19 @@ private boolean createMultiTimeSeries(CreateMultiTimeSeriesPlan createMultiTimeS\n       try {\n         createTimeSeries(plan);\n       } catch (QueryProcessException e) {\n-        results.put(createMultiTimeSeriesPlan.getIndexes().get(i), e);\n+        if (results == null) {\n+          results = new TSStatus[createMultiTimeSeriesPlan.getIndexes().size()];\n+          Arrays.fill(results, RpcUtils.SUCCESS_STATUS);\n+        }\n+        results[i] = RpcUtils.getStatus(TSStatusCode.INTERNAL_SERVER_ERROR, e.getMessage());\n+        hasFailed = true;\n         logger.debug(\"meet error while processing create timeseries. \", e);\n       }\n     }\n-    createMultiTimeSeriesPlan.setResults(results);\n+\n+    if (hasFailed) {\n+      throw new BatchInsertionException(results);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43d89ac9bb1806c659adcc44e254dd58c5d86a56", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/43d89ac9bb1806c659adcc44e254dd58c5d86a56", "committedDate": "2020-10-27T06:27:12Z", "message": "IOTDB-884 group createMultiTimeseriesPlan by partitionGroup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "006f5325529698611378b7f7a34d0f17d9318649", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/006f5325529698611378b7f7a34d0f17d9318649", "committedDate": "2020-10-27T06:32:17Z", "message": "modify the way of collecting the result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34de940a1e0849be0d97a91209cc083bb2232af4", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/34de940a1e0849be0d97a91209cc083bb2232af4", "committedDate": "2020-10-27T07:07:39Z", "message": "fix some conflict"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/5e5fa4cd6fbac991fbb60e16e387bbe7789df0b5", "committedDate": "2020-10-24T13:07:13Z", "message": "modify the way of collecting the result"}, "afterCommit": {"oid": "34de940a1e0849be0d97a91209cc083bb2232af4", "author": {"user": {"login": "mychaow", "name": "chaow"}}, "url": "https://github.com/apache/iotdb/commit/34de940a1e0849be0d97a91209cc083bb2232af4", "committedDate": "2020-10-27T07:07:39Z", "message": "fix some conflict"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3726, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}