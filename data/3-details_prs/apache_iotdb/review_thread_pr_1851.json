{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzgwMDg0", "number": 1851, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowMjo0M1rOExMlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMTowMDowMlrOExuGAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDIxODE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowMjo0M1rOHnM6Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoyNzoxM1rOHoDTCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2ODA1NA==", "bodyText": "You can use fileChannel to totally replace it.", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r510868054", "createdAt": "2020-10-23T13:02:43Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1OTExMw==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511759113", "createdAt": "2020-10-26T07:27:13Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2ODA1NA=="}, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDg3MDczOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwOToyNTozNFrOHn3zKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwOToyNTozNFrOHn3zKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MDczMA==", "bodyText": "I think you could use channel.write() to implement all the functions in this class, including deleteTimeseries, setStorageGroup, deleteStorageGroup, setTTL, changeOffset and so on", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511570730", "createdAt": "2020-10-25T09:25:34Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -53,40 +58,50 @@ public MLogWriter(String schemaDir, String logFileName) throws IOException {\n     logFile = SystemFileFactory.INSTANCE.getFile(schemaDir + File.separator + logFileName);\n     FileWriter fileWriter = new FileWriter(logFile, true);\n     writer = new BufferedWriter(fileWriter);\n+    fileOutputStream = new FileOutputStream(logFile, true);\n+    channel = fileOutputStream.getChannel();\n   }\n \n   public void close() throws IOException {\n     writer.close();\n+    channel.close();\n+    fileOutputStream.close();\n   }\n \n   public void createTimeseries(CreateTimeSeriesPlan plan, long offset) throws IOException {\n-    writer.write(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n-        plan.getPath().getFullPath(), plan.getDataType().serialize(),\n-        plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n+    StringBuilder buf = new StringBuilder();\n+    buf.append(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n+            plan.getPath().getFullPath(), plan.getDataType().serialize(),\n+            plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getProps() != null) {\n       boolean first = true;\n       for (Map.Entry<String, String> entry : plan.getProps().entrySet()) {\n         if (first) {\n-          writer.write(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n           first = false;\n         } else {\n-          writer.write(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n         }\n       }\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getAlias() != null) {\n-      writer.write(plan.getAlias());\n+      buf.append(plan.getAlias());\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (offset >= 0) {\n-      writer.write(String.valueOf(offset));\n+      buf.append(offset);\n     }\n-    newLine();\n+    final String newLine = System.getProperty(\"line.separator\");\n+    buf.append(newLine);\n+\n+    channel.write(ByteBuffer.wrap(buf.toString().getBytes()));\n+    channel.force(true);\n+    ++lineNumber;\n   }\n \n   public void deleteTimeseries(String path) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTcwODgyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMTowMDowMlrOHn-MiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNzoyNzowN1rOHoDS4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTUyOQ==", "bodyText": "We can use file channel to replace it. Check other place where it is used ~", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511675529", "createdAt": "2020-10-26T01:00:02Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc1OTA3NA==", "bodyText": "Fixed", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511759074", "createdAt": "2020-10-26T07:27:07Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTUyOQ=="}, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 645, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}