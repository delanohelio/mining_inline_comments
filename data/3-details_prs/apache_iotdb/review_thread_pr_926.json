{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzQ2MTAz", "number": 926, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MDo0MVrODpw0kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MTowOVrODpyjjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTE4MDk5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MDo0MVrOF5I3OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo0NjozMFrOF5LZ9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODM2MQ==", "bodyText": "How could you ensure resource end time is larger than global end time?", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395458361", "createdAt": "2020-03-20T06:40:41Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -282,14 +282,7 @@ private void recover() throws StorageGroupProcessorException {\n             .putAll(resource.getEndTimeMap());\n         partitionLatestFlushedTimeForEachDevice.computeIfAbsent(timePartitionId, id -> new HashMap<>())\n             .putAll(resource.getEndTimeMap());\n-\n-        for (Map.Entry<String, Long> mapEntry : resource.getEndTimeMap().entrySet()) {\n-          if (!globalLatestFlushedTimeForEachDevice.containsKey(mapEntry.getKey())\n-              || globalLatestFlushedTimeForEachDevice.get(mapEntry.getKey())\n-                  < mapEntry.getValue()) {\n-            globalLatestFlushedTimeForEachDevice.put(mapEntry.getKey(), mapEntry.getValue());\n-          }\n-        }\n+        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ5NzIzNQ==", "bodyText": "I know that~", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395497235", "createdAt": "2020-03-20T08:39:50Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -282,14 +282,7 @@ private void recover() throws StorageGroupProcessorException {\n             .putAll(resource.getEndTimeMap());\n         partitionLatestFlushedTimeForEachDevice.computeIfAbsent(timePartitionId, id -> new HashMap<>())\n             .putAll(resource.getEndTimeMap());\n-\n-        for (Map.Entry<String, Long> mapEntry : resource.getEndTimeMap().entrySet()) {\n-          if (!globalLatestFlushedTimeForEachDevice.containsKey(mapEntry.getKey())\n-              || globalLatestFlushedTimeForEachDevice.get(mapEntry.getKey())\n-                  < mapEntry.getValue()) {\n-            globalLatestFlushedTimeForEachDevice.put(mapEntry.getKey(), mapEntry.getValue());\n-          }\n-        }\n+        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODM2MQ=="}, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMDAyMw==", "bodyText": "I think the files are sorted by the partition number and version, so the later one cannot have timestamps earlier than the previous one.", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395500023", "createdAt": "2020-03-20T08:46:30Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -282,14 +282,7 @@ private void recover() throws StorageGroupProcessorException {\n             .putAll(resource.getEndTimeMap());\n         partitionLatestFlushedTimeForEachDevice.computeIfAbsent(timePartitionId, id -> new HashMap<>())\n             .putAll(resource.getEndTimeMap());\n-\n-        for (Map.Entry<String, Long> mapEntry : resource.getEndTimeMap().entrySet()) {\n-          if (!globalLatestFlushedTimeForEachDevice.containsKey(mapEntry.getKey())\n-              || globalLatestFlushedTimeForEachDevice.get(mapEntry.getKey())\n-                  < mapEntry.getValue()) {\n-            globalLatestFlushedTimeForEachDevice.put(mapEntry.getKey(), mapEntry.getValue());\n-          }\n-        }\n+        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODM2MQ=="}, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQ1ODE0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo0ODo0MFrOF5LeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo0ODo0MFrOF5LeDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMTA2OA==", "bodyText": "How could the client know anything about this?", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395501068", "createdAt": "2020-03-20T08:48:40Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -598,23 +591,24 @@ private void insertBatchToTsFileProcessor(BatchInsertPlan batchInsertPlan,\n       return;\n     }\n \n-    tsFileProcessor.insertBatch(batchInsertPlan, start, end, results);\n+    try {\n+      tsFileProcessor.insertBatch(batchInsertPlan, start, end, results);\n+    } catch (WriteProcessException e) {\n+      logger.error(\"insert to TsFileProcessor error \", e);\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTQ2NTA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MTowOVrOF5LiVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MTowOVrOF5LiVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMjE2NA==", "bodyText": "Preserve the stack trace.", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395502164", "createdAt": "2020-03-20T08:51:09Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -167,10 +165,9 @@ public boolean insert(InsertPlan insertPlan) throws QueryProcessException {\n     if (IoTDBDescriptor.getInstance().getConfig().isEnableWal()) {\n       try {\n         getLogNode().write(insertPlan);\n-      } catch (IOException e) {\n-        logger.error(\"{}: {} write WAL failed\", storageGroupName,\n-            tsFileResource.getFile().getName(), e);\n-        return false;\n+      } catch (Exception e) {\n+        throw new WriteProcessException(String.format(\"%s: %s write WAL failed, because %s\",\n+            storageGroupName, tsFileResource.getFile().getAbsolutePath(), e.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 129, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}