{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjIyNTc0", "number": 1526, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxNDo0N1rOERShgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyODo0NFrOERSpcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY0NzM2OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxNDo0N1rOG169dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzo1ODozMFrOG17feA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzcxNg==", "bodyText": "It would be better if you enforce the parameter in the constructor to be TSocket, so there will be less chance to trigger a ClassCastException when the code is modified by another person.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459193716", "createdAt": "2020-07-23T03:14:47Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.cluster.client.rpcutils;\n+\n+import org.apache.thrift.transport.TFastFramedTransport;\n+import org.apache.thrift.transport.TSocket;\n+import org.apache.thrift.transport.TTransport;\n+\n+public class TimeoutChangeableTFastFramedTransport extends TFastFramedTransport {\n+\n+  TTransport underlying;\n+\n+  public TimeoutChangeableTFastFramedTransport(TTransport underlying) {\n+    super(underlying);\n+    this.underlying = underlying;\n+  }\n+\n+  public void setTimeout(int timeout){\n+    ((TSocket)underlying).setTimeout(timeout);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMjQyNA==", "bodyText": "Sure. That's more clear.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459202424", "createdAt": "2020-07-23T03:58:30Z", "author": {"login": "Ring-k"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/rpcutils/TimeoutChangeableTFastFramedTransport.java", "diffHunk": "@@ -0,0 +1,38 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.cluster.client.rpcutils;\n+\n+import org.apache.thrift.transport.TFastFramedTransport;\n+import org.apache.thrift.transport.TSocket;\n+import org.apache.thrift.transport.TTransport;\n+\n+public class TimeoutChangeableTFastFramedTransport extends TFastFramedTransport {\n+\n+  TTransport underlying;\n+\n+  public TimeoutChangeableTFastFramedTransport(TTransport underlying) {\n+    super(underlying);\n+    this.underlying = underlying;\n+  }\n+\n+  public void setTimeout(int timeout){\n+    ((TSocket)underlying).setTimeout(timeout);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5MzcxNg=="}, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY1MjE0OnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoxNzo1NlrOG17ADA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzo1ODo1NVrOG17f1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDM4MA==", "bodyText": "The same transport is used in both input and output, so it is unnecessary to set twice.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459194380", "createdAt": "2020-07-23T03:17:56Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java", "diffHunk": "@@ -39,13 +39,20 @@\n   public SyncDataClient(TProtocolFactory protocolFactory, Node node, SyncClientPool pool)\n       throws TTransportException {\n     // the difference of the two clients lies in the port\n-    super(protocolFactory.getProtocol(new TFastFramedTransport(new TSocket(node.getIp(),\n-        node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n+    super(protocolFactory.getProtocol(new TimeoutChangeableTFastFramedTransport(\n+        new TSocket(node.getIp(), node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n     this.node = node;\n     this.pool = pool;\n     getInputProtocol().getTransport().open();\n   }\n \n+  public void setTimeout(int timeout) {\n+    ((TimeoutChangeableTFastFramedTransport) (getInputProtocol().getTransport()))\n+        .setTimeout(timeout);\n+    ((TimeoutChangeableTFastFramedTransport) (getOutputProtocol().getTransport()))\n+        .setTimeout(timeout);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMjUxNw==", "bodyText": "Indeed. I will remove one.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459202517", "createdAt": "2020-07-23T03:58:55Z", "author": {"login": "Ring-k"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/client/sync/SyncDataClient.java", "diffHunk": "@@ -39,13 +39,20 @@\n   public SyncDataClient(TProtocolFactory protocolFactory, Node node, SyncClientPool pool)\n       throws TTransportException {\n     // the difference of the two clients lies in the port\n-    super(protocolFactory.getProtocol(new TFastFramedTransport(new TSocket(node.getIp(),\n-        node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n+    super(protocolFactory.getProtocol(new TimeoutChangeableTFastFramedTransport(\n+        new TSocket(node.getIp(), node.getDataPort(), RaftServer.getConnectionTimeoutInMS()))));\n     this.node = node;\n     this.pool = pool;\n     getInputProtocol().getTransport().open();\n   }\n \n+  public void setTimeout(int timeout) {\n+    ((TimeoutChangeableTFastFramedTransport) (getInputProtocol().getTransport()))\n+        .setTimeout(timeout);\n+    ((TimeoutChangeableTFastFramedTransport) (getOutputProtocol().getTransport()))\n+        .setTimeout(timeout);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NDM4MA=="}, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NTY2NzcwOnYy", "diffSide": "RIGHT", "path": "cluster/src/assembly/resources/conf/iotdb-cluster.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzoyODo0NFrOG17IrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwMzo1OTozM1rOG17gXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NjU4OA==", "bodyText": "Add comments explaining that the configs are only for internal communications, not for the whole operation.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459196588", "createdAt": "2020-07-23T03:28:44Z", "author": {"login": "jt2594838"}, "path": "cluster/src/assembly/resources/conf/iotdb-cluster.properties", "diffHunk": "@@ -58,7 +58,13 @@ max_concurrent_client_num=10000\n default_replica_num=2\n \n # connection time out (ms) among raft nodes\n-connection_time_out_ms=20000\n+connection_timeout_ms=20000\n+\n+# write operation timeout threshold (ms)\n+write_operation_timeout_ms=30000\n+\n+# read operation timeout threshold (ms)\n+read_operation_timeout_ms=30000", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIwMjY1NA==", "bodyText": "Thanks for  your advice. I will add these comments.", "url": "https://github.com/apache/iotdb/pull/1526#discussion_r459202654", "createdAt": "2020-07-23T03:59:33Z", "author": {"login": "Ring-k"}, "path": "cluster/src/assembly/resources/conf/iotdb-cluster.properties", "diffHunk": "@@ -58,7 +58,13 @@ max_concurrent_client_num=10000\n default_replica_num=2\n \n # connection time out (ms) among raft nodes\n-connection_time_out_ms=20000\n+connection_timeout_ms=20000\n+\n+# write operation timeout threshold (ms)\n+write_operation_timeout_ms=30000\n+\n+# read operation timeout threshold (ms)\n+read_operation_timeout_ms=30000", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTE5NjU4OA=="}, "originalCommit": {"oid": "a15c183f82f28157bcbbb7a60b27ab2f3939a25c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4745, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}