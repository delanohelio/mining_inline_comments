{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NzA4OTMw", "number": 1856, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjozOTozMlrOExxDTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjozOTozMlrOExxDTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjE5MzQxOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/IntGorillaDecoder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwNjozOTozMlrOHoCXVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMTo1MjowNlrOHoMGhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0MzgzMA==", "bodyText": "This controlBits can only be 0, 2 and 3, right? How do you think change it and the return type of method readNextClearBit to byte?", "url": "https://github.com/apache/iotdb/pull/1856#discussion_r511743830", "createdAt": "2020-10-26T06:39:32Z", "author": {"login": "HTHou"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/IntGorillaDecoder.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *     http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+\r\n+package org.apache.iotdb.tsfile.encoding.decoder;\r\n+\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.GORILLA_ENCODING_ENDING_INTEGER;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.LEADING_ZERO_BITS_LENGTH_32BIT;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.MEANINGFUL_XOR_BITS_LENGTH_32BIT;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.VALUE_BITS_LENGTH_32BIT;\r\n+\r\n+import java.nio.ByteBuffer;\r\n+\r\n+/**\r\n+ * <p> This class includes code modified from Michael Burman's gorilla-tsc project.\r\n+ *\r\n+ * <p> Copyright: 2016-2018 Michael Burman and/or other contributors\r\n+ * <p> Project page: https://github.com/burmanm/gorilla-tsc\r\n+ * <p> License: http://www.apache.org/licenses/LICENSE-2.0\r\n+ */\r\n+public class IntGorillaDecoder extends GorillaDecoderV2 {\r\n+\r\n+  protected int storedValue = 0;\r\n+\r\n+  @Override\r\n+  public void reset() {\r\n+    super.reset();\r\n+    storedValue = 0;\r\n+  }\r\n+\r\n+  @Override\r\n+  public final int readInt(ByteBuffer in) {\r\n+    int returnValue = storedValue;\r\n+    if (!firstValueWasRead) {\r\n+      flipByte(in);\r\n+      storedValue = (int) readLong(VALUE_BITS_LENGTH_32BIT, in);\r\n+      firstValueWasRead = true;\r\n+      returnValue = storedValue;\r\n+    }\r\n+    cacheNext(in);\r\n+    return returnValue;\r\n+  }\r\n+\r\n+  protected int cacheNext(ByteBuffer in) {\r\n+    readNext(in);\r\n+    if (storedValue == GORILLA_ENCODING_ENDING_INTEGER) {\r\n+      hasNext = false;\r\n+    }\r\n+    return storedValue;\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"squid:S128\")\r\n+  protected int readNext(ByteBuffer in) {\r\n+    int controlBits = readNextClearBit(2, in);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a9f1b541d6b3e506857c08e2741b04e20dfcc7"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTkwMzM2NQ==", "bodyText": "You're right. I've changed it.", "url": "https://github.com/apache/iotdb/pull/1856#discussion_r511903365", "createdAt": "2020-10-26T11:52:06Z", "author": {"login": "SteveYurongSu"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/IntGorillaDecoder.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one\r\n+ * or more contributor license agreements.  See the NOTICE file\r\n+ * distributed with this work for additional information\r\n+ * regarding copyright ownership.  The ASF licenses this file\r\n+ * to you under the Apache License, Version 2.0 (the\r\n+ * \"License\"); you may not use this file except in compliance\r\n+ * with the License.  You may obtain a copy of the License at\r\n+ *\r\n+ *     http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing,\r\n+ * software distributed under the License is distributed on an\r\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n+ * KIND, either express or implied.  See the License for the\r\n+ * specific language governing permissions and limitations\r\n+ * under the License.\r\n+ */\r\n+\r\n+package org.apache.iotdb.tsfile.encoding.decoder;\r\n+\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.GORILLA_ENCODING_ENDING_INTEGER;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.LEADING_ZERO_BITS_LENGTH_32BIT;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.MEANINGFUL_XOR_BITS_LENGTH_32BIT;\r\n+import static org.apache.iotdb.tsfile.common.conf.TSFileConfig.VALUE_BITS_LENGTH_32BIT;\r\n+\r\n+import java.nio.ByteBuffer;\r\n+\r\n+/**\r\n+ * <p> This class includes code modified from Michael Burman's gorilla-tsc project.\r\n+ *\r\n+ * <p> Copyright: 2016-2018 Michael Burman and/or other contributors\r\n+ * <p> Project page: https://github.com/burmanm/gorilla-tsc\r\n+ * <p> License: http://www.apache.org/licenses/LICENSE-2.0\r\n+ */\r\n+public class IntGorillaDecoder extends GorillaDecoderV2 {\r\n+\r\n+  protected int storedValue = 0;\r\n+\r\n+  @Override\r\n+  public void reset() {\r\n+    super.reset();\r\n+    storedValue = 0;\r\n+  }\r\n+\r\n+  @Override\r\n+  public final int readInt(ByteBuffer in) {\r\n+    int returnValue = storedValue;\r\n+    if (!firstValueWasRead) {\r\n+      flipByte(in);\r\n+      storedValue = (int) readLong(VALUE_BITS_LENGTH_32BIT, in);\r\n+      firstValueWasRead = true;\r\n+      returnValue = storedValue;\r\n+    }\r\n+    cacheNext(in);\r\n+    return returnValue;\r\n+  }\r\n+\r\n+  protected int cacheNext(ByteBuffer in) {\r\n+    readNext(in);\r\n+    if (storedValue == GORILLA_ENCODING_ENDING_INTEGER) {\r\n+      hasNext = false;\r\n+    }\r\n+    return storedValue;\r\n+  }\r\n+\r\n+  @SuppressWarnings(\"squid:S128\")\r\n+  protected int readNext(ByteBuffer in) {\r\n+    int controlBits = readNextClearBit(2, in);\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc0MzgzMA=="}, "originalCommit": {"oid": "16a9f1b541d6b3e506857c08e2741b04e20dfcc7"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 651, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}