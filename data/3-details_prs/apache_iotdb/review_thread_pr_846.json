{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjQ2NjEy", "number": 846, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMjoyOFrODjTUHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNzozOVrODjTXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQzMTk4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMjoyOFrOFvCP0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMjoyOFrOFvCP0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDIwOQ==", "bodyText": "change to debug", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384864209", "createdAt": "2020-02-27T01:22:28Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "diffHunk": "@@ -199,6 +202,26 @@ void decreaseFileReaderReference(TsFileResource tsFile, boolean isClosed) {\n    * integration tests will not conflict with each other.\n    */\n   public synchronized void closeAndRemoveAllOpenedReaders() throws IOException {\n+    Iterator<Map.Entry<TsFileResource, TsFileSequenceReader>> iterator = closedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQzMzc4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyMzozOFrOFvCQ9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjozMDoyOVrOFvDVPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDUwMQ==", "bodyText": "duplicated?", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384864501", "createdAt": "2020-02-27T01:23:38Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "diffHunk": "@@ -199,6 +202,26 @@ void decreaseFileReaderReference(TsFileResource tsFile, boolean isClosed) {\n    * integration tests will not conflict with each other.\n    */\n   public synchronized void closeAndRemoveAllOpenedReaders() throws IOException {\n+    Iterator<Map.Entry<TsFileResource, TsFileSequenceReader>> iterator = closedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} closedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      closedReferenceMap.remove(entry.getKey());\n+      iterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MTk4Mw==", "bodyText": "different map. iterator is the closedFileReaderMap's iterator.", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384881983", "createdAt": "2020-02-27T02:30:29Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "diffHunk": "@@ -199,6 +202,26 @@ void decreaseFileReaderReference(TsFileResource tsFile, boolean isClosed) {\n    * integration tests will not conflict with each other.\n    */\n   public synchronized void closeAndRemoveAllOpenedReaders() throws IOException {\n+    Iterator<Map.Entry<TsFileResource, TsFileSequenceReader>> iterator = closedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} closedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      closedReferenceMap.remove(entry.getKey());\n+      iterator.remove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDUwMQ=="}, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQzNjMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNToyMVrOFvCSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNToyMVrOFvCSjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NDkwOA==", "bodyText": "duplicated", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384864908", "createdAt": "2020-02-27T01:25:21Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "diffHunk": "@@ -199,6 +202,26 @@ void decreaseFileReaderReference(TsFileResource tsFile, boolean isClosed) {\n    * integration tests will not conflict with each other.\n    */\n   public synchronized void closeAndRemoveAllOpenedReaders() throws IOException {\n+    Iterator<Map.Entry<TsFileResource, TsFileSequenceReader>> iterator = closedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} closedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      closedReferenceMap.remove(entry.getKey());\n+      iterator.remove();\n+    }\n+    iterator = unclosedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} unclosedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      unclosedReferenceMap.remove(entry.getKey());\n+      iterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQzNzUwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNjowN1rOFvCTVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNjowN1rOFvCTVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTExMQ==", "bodyText": "this should be removed..", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384865111", "createdAt": "2020-02-27T01:26:07Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/FileReaderManager.java", "diffHunk": "@@ -199,6 +202,26 @@ void decreaseFileReaderReference(TsFileResource tsFile, boolean isClosed) {\n    * integration tests will not conflict with each other.\n    */\n   public synchronized void closeAndRemoveAllOpenedReaders() throws IOException {\n+    Iterator<Map.Entry<TsFileResource, TsFileSequenceReader>> iterator = closedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} closedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      closedReferenceMap.remove(entry.getKey());\n+      iterator.remove();\n+    }\n+    iterator = unclosedFileReaderMap.entrySet().iterator();\n+    while (iterator.hasNext()) {\n+      Map.Entry<TsFileResource, TsFileSequenceReader> entry = iterator.next();\n+      entry.getValue().close();\n+      if (resourceLogger.isInfoEnabled()) {\n+        resourceLogger.info(\"{} unclosedTsFileReader is closed.\", entry.getValue().getFileName());\n+      }\n+      unclosedReferenceMap.remove(entry.getKey());\n+      iterator.remove();\n+    }\n     for (Map.Entry<TsFileResource, TsFileSequenceReader> entry : closedFileReaderMap.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzQ0MDE5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/QueryFileManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyNzozOVrOFvCVFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMjozNzoxMFrOFvDbyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTU1Nw==", "bodyText": "what If does not contain the tsfileResource, is it a bug?", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384865557", "createdAt": "2020-02-27T01:27:39Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/QueryFileManager.java", "diffHunk": "@@ -77,8 +74,9 @@ private void addUsedFilesForQuery(long queryId, List<TsFileResource> resources)\n       // this file may be deleted just before we lock it\r\n       if (tsFileResource.isDeleted()) {\r\n         Map<Long, Set<TsFileResource>> pathMap = !isClosed ? unsealedFilePathsMap : sealedFilePathsMap;\r\n-        pathMap.get(queryId).remove(tsFileResource);\r\n-        FileReaderManager.getInstance().decreaseFileReaderReference(tsFileResource, isClosed);\r\n+        if (pathMap.get(queryId).remove(tsFileResource)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg4MzY1OA==", "bodyText": "Nope, It may have been decreased because of it's deleted, but another thread may also enter into the same block, it also remove it(although it's an empty operation, the resource has been removed by another thread, so the remove operation return false), in this case, the second thread should not decrease it again.", "url": "https://github.com/apache/iotdb/pull/846#discussion_r384883658", "createdAt": "2020-02-27T02:37:10Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/QueryFileManager.java", "diffHunk": "@@ -77,8 +74,9 @@ private void addUsedFilesForQuery(long queryId, List<TsFileResource> resources)\n       // this file may be deleted just before we lock it\r\n       if (tsFileResource.isDeleted()) {\r\n         Map<Long, Set<TsFileResource>> pathMap = !isClosed ? unsealedFilePathsMap : sealedFilePathsMap;\r\n-        pathMap.get(queryId).remove(tsFileResource);\r\n-        FileReaderManager.getInstance().decreaseFileReaderReference(tsFileResource, isClosed);\r\n+        if (pathMap.get(queryId).remove(tsFileResource)) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTU1Nw=="}, "originalCommit": {"oid": "d06cd002698b9c30f3988a12fc1639ea14e4b277"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 251, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}