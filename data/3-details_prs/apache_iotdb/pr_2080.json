{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzNjgzMTAx", "number": 2080, "title": "Add continuous compaction in level compaction strategy", "bodyText": "Currently, each compaction starts after a tsfile is closed. So continuous compaction is impossible (user waits and no tsfile is to be closed)\nThis pr is to implement continuous compaction. When last compaction task ends, just start another compaction task. (user does not have to close file to execute compaction)", "createdAt": "2020-11-19T05:18:29Z", "url": "https://github.com/apache/iotdb/pull/2080", "merged": true, "mergeCommit": {"oid": "819b19551d34406dade92527bfb36d10501bb6a2"}, "closed": true, "closedAt": "2021-05-10T11:18:02Z", "author": {"login": "zhanglingzhe0820"}, "timelineItems": {"totalCount": 43, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ1SrrgH2gAyNTIzNjgzMTAxOjA5Mjg4Y2RmYTY4OTkyMWZhZGQ2Zjc5NDg4NDUxNWRjOTA5MzAyYWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeVVEixAFqTY1NTMyNjgxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "09288cdfa689921fadd6f794884515dc909302aa", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/09288cdfa689921fadd6f794884515dc909302aa", "committedDate": "2020-11-06T11:30:43Z", "message": "add enable unseq compaction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49fab34ba14c60d99f540297a3113295eee3a08f", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/49fab34ba14c60d99f540297a3113295eee3a08f", "committedDate": "2020-11-07T06:18:17Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2854f931acefe3bca3d9548ddcf5b37760473980", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/2854f931acefe3bca3d9548ddcf5b37760473980", "committedDate": "2020-11-07T10:43:36Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ba681617dab53da7e51865d9aee14dd6ebbe335", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/9ba681617dab53da7e51865d9aee14dd6ebbe335", "committedDate": "2020-11-08T08:34:09Z", "message": "Merge branches 'master' and 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9da683521fabfb7ad05f84d319d9b504c71a4f2b", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/9da683521fabfb7ad05f84d319d9b504c71a4f2b", "committedDate": "2020-11-10T05:54:00Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f438705f15d0e2eea26ed27f5348414f2e58f231", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/f438705f15d0e2eea26ed27f5348414f2e58f231", "committedDate": "2020-11-11T03:13:16Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5a17d52eea06efa2650921ecb1d104e00309415", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/b5a17d52eea06efa2650921ecb1d104e00309415", "committedDate": "2020-11-12T02:03:02Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae79d884d1c520da33dba51a4f1ef84ee52a70a8", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/ae79d884d1c520da33dba51a4f1ef84ee52a70a8", "committedDate": "2020-11-12T10:33:05Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97a2b13f188a81b9f6228fd599e18a818fcf331a", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/97a2b13f188a81b9f6228fd599e18a818fcf331a", "committedDate": "2020-11-13T02:41:57Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b80249f4cc9d090ce560146d5c86197be7f217ac", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/b80249f4cc9d090ce560146d5c86197be7f217ac", "committedDate": "2020-11-18T06:23:54Z", "message": "Merge branch 'master' of https://github.com/zhanglingzhe0820/incubator-iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a99508fca0bb3b72556260b8690e934811ec9fb", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/3a99508fca0bb3b72556260b8690e934811ec9fb", "committedDate": "2020-11-19T02:32:22Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32395a8cfd3b214ce4e8b61588fc808f13612120", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/32395a8cfd3b214ce4e8b61588fc808f13612120", "committedDate": "2020-11-19T03:06:56Z", "message": "add continuous compaction in level compaction strategy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f8344b8b90c5c34a3cc89cc3e077411d95e7db", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/c7f8344b8b90c5c34a3cc89cc3e077411d95e7db", "committedDate": "2020-11-19T05:15:41Z", "message": "fix compaction bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095c5dee16a60825261ecb44c4b0140ed766144d", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/095c5dee16a60825261ecb44c4b0140ed766144d", "committedDate": "2020-11-19T06:12:18Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f5702ecb27bd483cb430475f3103d4d27318560", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/0f5702ecb27bd483cb430475f3103d4d27318560", "committedDate": "2020-11-19T06:12:28Z", "message": "Merge branch 'master' into add_continuous_compaction_in_level_compaction_strategy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MjEzNjg0", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-534213684", "createdAt": "2020-11-19T09:12:11Z", "commit": {"oid": "0f5702ecb27bd483cb430475f3103d4d27318560"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOToxMjoxMVrOH2TWjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwOToxMjoxMVrOH2TWjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjcwMjIyMw==", "bodyText": "this might mean during a merge process, another merge can be processed... why this method is needed", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r526702223", "createdAt": "2020-11-19T09:12:11Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/level/LevelCompactionTsFileManagement.java", "diffHunk": "@@ -439,19 +439,26 @@ private void forkTsFileList(\n \n   @Override\n   protected void merge(long timePartition) {\n-    merge(forkedSequenceTsFileResources, true, timePartition, seqLevelNum,\n+    // whether execute merge chunk in this task\n+    boolean isMerge = merge(forkedSequenceTsFileResources, true, timePartition, seqLevelNum,\n         seqFileNumInEachLevel);\n-    if (enableUnseqCompaction && unseqLevelNum <= 1 && forkedUnSequenceTsFileResources.size() > 0) {\n+    if (enableUnseqCompaction && unseqLevelNum <= 1\n+        && forkedUnSequenceTsFileResources.get(0).size() > 0) {\n+      isMerge = true;\n       merge(isForceFullMerge, getTsFileList(true), forkedUnSequenceTsFileResources.get(0),\n           Long.MAX_VALUE);\n     } else {\n-      merge(forkedUnSequenceTsFileResources, false, timePartition, unseqLevelNum,\n-          unseqFileNumInEachLevel);\n+      isMerge = merge(forkedUnSequenceTsFileResources, false, timePartition, unseqLevelNum,\n+          unseqFileNumInEachLevel) || isMerge;\n+    }\n+    // if merge in this merge task, execute next merge task to check if need continuous merge\n+    if (isMerge && enableContinuousCompaction) {\n+      merge(timePartition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f5702ecb27bd483cb430475f3103d4d27318560"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MzkyMjQ3", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-534392247", "createdAt": "2020-11-19T12:31:50Z", "commit": {"oid": "0f5702ecb27bd483cb430475f3103d4d27318560"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65fde8903fe7dae322eb17f44116c401a760a6aa", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/65fde8903fe7dae322eb17f44116c401a760a6aa", "committedDate": "2020-11-24T04:28:07Z", "message": "add load configure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/ba5a21cfec2f4836765c9fa82970cc6a00d29f01", "committedDate": "2020-11-24T04:50:59Z", "message": "update continuous compaction to new compaction task"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTIyOTU0", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537122954", "createdAt": "2020-11-24T06:57:46Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjo1Nzo0NlrOH4uS7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNjo1Nzo0NlrOH4uS7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0MDgxNA==", "bodyText": "Remove spaces beside the =, just like other configuration items", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529240814", "createdAt": "2020-11-24T06:57:46Z", "author": {"login": "EJTTianYu"}, "path": "server/src/assembly/resources/conf/iotdb-engine.properties", "diffHunk": "@@ -280,6 +280,10 @@ compaction_strategy=LEVEL_COMPACTION\n # Whether to merge unseq files into seq files or not.\n enable_unseq_compaction = true\n \n+# Works when the compaction_strategy is LEVEL_COMPACTION.\n+# Whether to start next compaction task automatically after finish one compaction task\n+enable_continuous_compaction = true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTI0MzQ1", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537124345", "createdAt": "2020-11-24T07:00:29Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowMDoyOVrOH4uXAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowMDoyOVrOH4uXAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0MTg1OA==", "bodyText": "this comment needs to be modified", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529241858", "createdAt": "2020-11-24T07:00:29Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBDescriptor.java", "diffHunk": "@@ -770,6 +774,14 @@ public void loadHotModifiedProps(Properties properties)\n       // update debug_state\n       conf.setDebugState(Boolean.parseBoolean(properties.getProperty(\"debug_state\")));\n \n+      // update enable_continuous_compaction\n+      conf.setEnableContinuousCompaction(\n+          Boolean.parseBoolean(properties.getProperty(\"enable_continuous_compaction\")));\n+\n+      // update enable_continuous_compaction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTI1MjYy", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537125262", "createdAt": "2020-11-24T07:02:16Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowMjoxN1rOH4uZ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowMjoxN1rOH4uZ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0MjU3OQ==", "bodyText": "the other comment in this file all use the format /** */, it is better to keep the same", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529242579", "createdAt": "2020-11-24T07:02:17Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/TsFileManagement.java", "diffHunk": "@@ -66,6 +66,9 @@\n   public ModificationFile mergingModification;\n   private long mergeStartTime;\n \n+  // whether execute merge chunk in this task", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTI4MDIy", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537128022", "createdAt": "2020-11-24T07:07:33Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowNzozNFrOH4uiZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzowNzozNFrOH4uiZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NDc3NA==", "bodyText": "remove the field as the field is never used in this file", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529244774", "createdAt": "2020-11-24T07:07:34Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/level/LevelCompactionTsFileManagement.java", "diffHunk": "@@ -70,6 +70,8 @@\n \n   private final boolean enableUnseqCompaction = IoTDBDescriptor.getInstance().getConfig()\n       .isEnableUnseqCompaction();\n+  private final boolean enableContinuousCompaction = IoTDBDescriptor.getInstance().getConfig()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTMxMzg3", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537131387", "createdAt": "2020-11-24T07:13:42Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoxMzo0M1rOH4us4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoxMzo0M1rOH4us4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0NzQ1Nw==", "bodyText": "I wonder this comment is correct as the boolean variable means whether current SG is merging", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529247457", "createdAt": "2020-11-24T07:13:43Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/level/LevelCompactionTsFileManagement.java", "diffHunk": "@@ -439,19 +439,22 @@ private void forkTsFileList(\n \n   @Override\n   protected void merge(long timePartition) {\n-    merge(forkedSequenceTsFileResources, true, timePartition, seqLevelNum,\n+    // whether execute merge chunk in this task", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTMzNDI4", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-537133428", "createdAt": "2020-11-24T07:17:08Z", "commit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoxNzowOVrOH4uzRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoxNzowOVrOH4uzRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI0OTA5Mw==", "bodyText": "this if-else could be removed as during the whole process, CompactionMergeTaskPoolManager is never Terminated", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r529249093", "createdAt": "2020-11-24T07:17:09Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -1718,10 +1744,30 @@ private void closeUnsealedTsFileProcessorCallBack(\n   /**\n    * close compaction merge callback, to release some locks\n    */\n-  private void closeCompactionMergeCallBack() {\n-    this.compactionMergeWorking = false;\n-    synchronized (closeStorageGroupCondition) {\n-      closeStorageGroupCondition.notifyAll();\n+  private void closeCompactionMergeCallBack(boolean isMerge, long timePartitionId) {\n+    if (isMerge && IoTDBDescriptor.getInstance().getConfig().isEnableContinuousCompaction()) {\n+      if (!CompactionMergeTaskPoolManager.getInstance().isTerminated()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5a21cfec2f4836765c9fa82970cc6a00d29f01"}, "originalPosition": 160}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c60d4bc493ec2ac3cc168723211c7e83d35920c3", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/c60d4bc493ec2ac3cc168723211c7e83d35920c3", "committedDate": "2020-11-24T10:39:15Z", "message": "fix comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "658497c2f0549721ce92a0f7b888653832771da9", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/658497c2f0549721ce92a0f7b888653832771da9", "committedDate": "2020-11-24T10:39:38Z", "message": "Merge branch 'master' of https://github.com/apache/iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a26de2b7525a3c7fc49296aa6dbed92116693f9", "author": {"user": {"login": "zhanglingzhe0820", "name": null}}, "url": "https://github.com/apache/iotdb/commit/6a26de2b7525a3c7fc49296aa6dbed92116693f9", "committedDate": "2020-11-24T10:42:05Z", "message": "merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzOTM2MDQx", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-563936041", "createdAt": "2021-01-08T01:01:03Z", "commit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMTowMTowM1rOIQCAuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwMToxODozOFrOIQCUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY4MTA4MA==", "bodyText": "NUM_BYTES_OBJECT_REF is not equal to the object header size, you should use the NUM_BYTES_OBJECT_HEADER field in RamUsageEstimator.\nAnd by the way, jvm may also align the object, so this calculation may not be exact.", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r553681080", "createdAt": "2021-01-08T01:01:03Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/FileStatistics.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.engine.cache;\n+\n+import static org.apache.iotdb.tsfile.utils.RamUsageEstimator.NUM_BYTES_INT;\n+import static org.apache.iotdb.tsfile.utils.RamUsageEstimator.NUM_BYTES_LONG;\n+import static org.apache.iotdb.tsfile.utils.RamUsageEstimator.NUM_BYTES_OBJECT_REF;\n+\n+public class FileStatistics {\n+\n+  private long numOfPoints;\n+  private int sensorNum;\n+\n+  public FileStatistics(long numOfPoints, int sensorNum) {\n+    this.numOfPoints = numOfPoints;\n+    this.sensorNum = sensorNum;\n+  }\n+\n+  public long getNumOfPoints() {\n+    return numOfPoints;\n+  }\n+\n+  public void setNumOfPoints(long numOfPoints) {\n+    this.numOfPoints = numOfPoints;\n+  }\n+\n+  public int getSensorNum() {\n+    return sensorNum;\n+  }\n+\n+  public void setSensorNum(int sensorNum) {\n+    this.sensorNum = sensorNum;\n+  }\n+\n+\n+  public long calculateRamSize() {\n+    return NUM_BYTES_OBJECT_REF + NUM_BYTES_LONG + NUM_BYTES_INT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY4MTY5NQ==", "bodyText": "Why this field does not have a corresponding property in iotdb-engine.properties.", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r553681695", "createdAt": "2021-01-08T01:03:11Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBConfig.java", "diffHunk": "@@ -421,6 +427,11 @@\n    */\n   private long allocateMemoryForChunkCache = allocateMemoryForRead / 10;\n \n+  /**\n+   * Memory allocated for file statistics cache in compaction process\n+   */\n+  private long allocateMemoryForFileStatisticsCache = allocateMemoryForRead / 100;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY4NDc1NA==", "bodyText": "There is no need to calculate FileStatistics size each time, because it's a constant value", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r553684754", "createdAt": "2021-01-08T01:14:00Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/FileStatisticsCache.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.engine.cache;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+import org.apache.iotdb.db.conf.IoTDBDescriptor;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.utils.RamUsageEstimator;\n+\n+public class FileStatisticsCache {\n+\n+  private final ReadWriteLock lock = new ReentrantReadWriteLock();\n+  private static LRULinkedHashMap<AccountableString, FileStatistics> fileStatisticsCache;\n+  private static long MEMORY_THRESHOLD_IN_FILE_STATISTICS_CACHE = IoTDBDescriptor.getInstance()\n+      .getConfig().getAllocateMemoryForFileStatisticsCache();\n+\n+  private FileStatisticsCache() {\n+    fileStatisticsCache = new LRULinkedHashMap<AccountableString, FileStatistics>(\n+        MEMORY_THRESHOLD_IN_FILE_STATISTICS_CACHE) {\n+      @Override\n+      protected long calEntrySize(AccountableString key, FileStatistics value) {\n+        if (value == null) {\n+          return RamUsageEstimator.sizeOf(key) + RamUsageEstimator.shallowSizeOf(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY4NTgxNQ==", "bodyText": "This will cause differernt thread read from disk repeatedly", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r553685815", "createdAt": "2021-01-08T01:17:52Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/FileStatisticsCache.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.engine.cache;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+import org.apache.iotdb.db.conf.IoTDBDescriptor;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.utils.RamUsageEstimator;\n+\n+public class FileStatisticsCache {\n+\n+  private final ReadWriteLock lock = new ReentrantReadWriteLock();\n+  private static LRULinkedHashMap<AccountableString, FileStatistics> fileStatisticsCache;\n+  private static long MEMORY_THRESHOLD_IN_FILE_STATISTICS_CACHE = IoTDBDescriptor.getInstance()\n+      .getConfig().getAllocateMemoryForFileStatisticsCache();\n+\n+  private FileStatisticsCache() {\n+    fileStatisticsCache = new LRULinkedHashMap<AccountableString, FileStatistics>(\n+        MEMORY_THRESHOLD_IN_FILE_STATISTICS_CACHE) {\n+      @Override\n+      protected long calEntrySize(AccountableString key, FileStatistics value) {\n+        if (value == null) {\n+          return RamUsageEstimator.sizeOf(key) + RamUsageEstimator.shallowSizeOf(value);\n+        }\n+        long entrySize;\n+        if (count < 10) {\n+          long currentSize = value.calculateRamSize();\n+          averageSize = ((averageSize * count) + currentSize) / (++count);\n+          entrySize = RamUsageEstimator.sizeOf(key)\n+              + (currentSize + RamUsageEstimator.NUM_BYTES_OBJECT_REF)\n+              + RamUsageEstimator.shallowSizeOf(value);\n+        } else if (count < 100000) {\n+          count++;\n+          entrySize = RamUsageEstimator.sizeOf(key)\n+              + (averageSize + RamUsageEstimator.NUM_BYTES_OBJECT_REF)\n+              + RamUsageEstimator.shallowSizeOf(value);\n+        } else {\n+          averageSize = value.calculateRamSize();\n+          count = 1;\n+          entrySize = RamUsageEstimator.sizeOf(key)\n+              + (averageSize + RamUsageEstimator.NUM_BYTES_OBJECT_REF)\n+              + RamUsageEstimator.shallowSizeOf(value);\n+        }\n+        return entrySize;\n+      }\n+    };\n+  }\n+\n+  public void put(String filePath, long totalPoint, int sensorNum) {\n+    lock.writeLock().lock();\n+    fileStatisticsCache\n+        .put(new AccountableString(filePath), new FileStatistics(totalPoint, sensorNum));\n+    lock.readLock().lock();\n+  }\n+\n+  public FileStatistics get(TsFileResource fileResource) throws IOException {\n+    String filePath = fileResource.getTsFilePath();\n+    AccountableString key = new AccountableString(filePath);\n+    if (fileStatisticsCache.containsKey(key)) {\n+      lock.readLock().lock();\n+      try {\n+        return fileStatisticsCache.get(key);\n+      } finally {\n+        lock.readLock().unlock();\n+      }\n+    } else {\n+      try (TsFileSequenceReader tsFileSequenceReader = new TsFileSequenceReader(\n+          fileResource.getTsFilePath())) {\n+        long totalPoints = 0;\n+        Set<String> sensorSet = new HashSet<>();\n+        List<String> devices = tsFileSequenceReader.getAllDevices();\n+        for (String device : devices) {\n+          Map<String, List<ChunkMetadata>> chunkMetadataListMap = tsFileSequenceReader\n+              .readChunkMetadataInDevice(device);\n+          for (List<ChunkMetadata> chunkMetadataList : chunkMetadataListMap.values()) {\n+            for (ChunkMetadata chunkMetadata : chunkMetadataList) {\n+              totalPoints += chunkMetadata.getNumOfPoints();\n+              sensorSet.add(chunkMetadata.getMeasurementUid());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY4NjA1Mg==", "bodyText": "It's better to add this cache to MBeans monitor.", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r553686052", "createdAt": "2021-01-08T01:18:38Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/cache/FileStatisticsCache.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.engine.cache;\n+\n+import java.io.IOException;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.concurrent.locks.ReadWriteLock;\n+import java.util.concurrent.locks.ReentrantReadWriteLock;\n+import org.apache.iotdb.db.conf.IoTDBDescriptor;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetadata;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.utils.RamUsageEstimator;\n+\n+public class FileStatisticsCache {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3f88eaabeb24cc6f7987dd53ac2220fff13b9c9"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e51e08022e12c4e0e837978d98f0872eed85880", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/3e51e08022e12c4e0e837978d98f0872eed85880", "committedDate": "2021-01-11T06:42:05Z", "message": "Revert \"Revert \"Merge branch 'master' into add_continuous_compaction_in_level_compaction_strategy\"\"\n\nThis reverts commit f521e17cf978df4d1549d14d53c0b4259fcbe0d4."}, "afterCommit": {"oid": "420bfdfcadd0ffd93246da2bc9646e03852b1fc5", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/420bfdfcadd0ffd93246da2bc9646e03852b1fc5", "committedDate": "2021-01-11T03:09:24Z", "message": "solve request change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b25257535ed143cc7eb44595756a8c6e14c46278", "committedDate": "2021-04-19T09:18:10Z", "message": "merge master"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15008a9da26ae67bd041e000ac9bffa5a15c59fe", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/15008a9da26ae67bd041e000ac9bffa5a15c59fe", "committedDate": "2021-01-13T02:44:45Z", "message": "Merge branch 'master' into add_continuous_compaction_in_level_compaction_strategy\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/engine/compaction/level/LevelCompactionTsFileManagement.java"}, "afterCommit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b25257535ed143cc7eb44595756a8c6e14c46278", "committedDate": "2021-04-19T09:18:10Z", "message": "merge master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQxODU3NDMy", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-641857432", "createdAt": "2021-04-22T07:22:57Z", "commit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwNzoyMjo1N1rOJNgmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwNzoyMjo1N1rOJNgmQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODE0NTM0Nw==", "bodyText": "Comment the config item by default.", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r618145347", "createdAt": "2021-04-22T07:22:57Z", "author": {"login": "SteveYurongSu"}, "path": "server/src/assembly/resources/conf/iotdb-engine.properties", "diffHunk": "@@ -314,6 +314,10 @@ compaction_strategy=LEVEL_COMPACTION\n # Whether to merge unseq files into seq files or not.\n enable_unseq_compaction=true\n \n+# Works when the compaction_strategy is LEVEL_COMPACTION.\n+# Whether to start next compaction task automatically after finish one compaction task\n+enable_continuous_compaction = true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQxODg4NzY3", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-641888767", "createdAt": "2021-04-22T07:57:36Z", "commit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwNzo1NzozNlrOJNiE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwNzo1NzozNlrOJNiE4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODE2OTU2OA==", "bodyText": "?", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r618169568", "createdAt": "2021-04-22T07:57:36Z", "author": {"login": "SteveYurongSu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/TsFileManagement.java", "diffHunk": "@@ -389,6 +392,7 @@ public void mergeEndAction(\n       return;\n     }\n     removeUnseqFiles(unseqFiles);\n+    unseqFiles.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQxODkyOTYx", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-641892961", "createdAt": "2021-04-22T08:02:07Z", "commit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwODowMjowN1rOJNiRfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yMlQwODowMjowN1rOJNiRfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODE3Mjc5OQ==", "bodyText": "comment here plz", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r618172799", "createdAt": "2021-04-22T08:02:07Z", "author": {"login": "SteveYurongSu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/TsFileManagement.java", "diffHunk": "@@ -180,7 +183,7 @@ public CompactionRecoverTask(CloseCompactionMergeCallBack closeCompactionMergeCa\n     @Override\n     public void run() {\n       recover();\n-      closeCompactionMergeCallBack.call();\n+      closeCompactionMergeCallBack.call(false, 0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0e94abfb3edf024ef639ef2f7286d8dc7802ab1", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/e0e94abfb3edf024ef639ef2f7286d8dc7802ab1", "committedDate": "2021-04-22T08:59:04Z", "message": "Merge branch 'master' into add_continuous_compaction_in_level_compaction_strategy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cfd3c77449689e247514e700ce52c34eeab31a8", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/1cfd3c77449689e247514e700ce52c34eeab31a8", "committedDate": "2021-04-22T09:03:31Z", "message": "update config and variable name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQyODg3MDA5", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-642887009", "createdAt": "2021-04-23T02:51:33Z", "commit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yM1QwMjo1MTozM1rOJOO4RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0yM1QwMjo1MTozM1rOJOO4RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYxODkwMzYyMQ==", "bodyText": "rename it.", "url": "https://github.com/apache/iotdb/pull/2080#discussion_r618903621", "createdAt": "2021-04-23T02:51:33Z", "author": {"login": "SteveYurongSu"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/compaction/TsFileManagement.java", "diffHunk": "@@ -71,6 +71,9 @@\n \n   private long mergeStartTime;\n \n+  /** whether execute merge chunk in this task */\n+  protected boolean isMerge = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b25257535ed143cc7eb44595756a8c6e14c46278"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4f2416fa87dedaa1bb7cbc499bcce2c6b199a5", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/1a4f2416fa87dedaa1bb7cbc499bcce2c6b199a5", "committedDate": "2021-04-29T03:11:33Z", "message": "Merge branch 'master' into add_continuous_compaction_in_level_compaction_strategy\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/engine/compaction/TsFileManagement.java\n#\tserver/src/test/java/org/apache/iotdb/db/engine/compaction/NoCompactionTsFileManagementTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "741338ae063e13aa5cba0843a0690db074e37de2", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/741338ae063e13aa5cba0843a0690db074e37de2", "committedDate": "2021-04-29T03:49:58Z", "message": "fix format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6abaa19c9d235da82653b0f60044b2f0665055f1", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6abaa19c9d235da82653b0f60044b2f0665055f1", "committedDate": "2021-04-29T06:14:14Z", "message": "fix compile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b91adabf7e1f26ce8b2fb4e5d13f606f7f8b3fa", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6b91adabf7e1f26ce8b2fb4e5d13f606f7f8b3fa", "committedDate": "2021-05-07T15:00:43Z", "message": "resolve conversation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjU1MzI2ODEx", "url": "https://github.com/apache/iotdb/pull/2080#pullrequestreview-655326811", "createdAt": "2021-05-10T07:53:46Z", "commit": {"oid": "6b91adabf7e1f26ce8b2fb4e5d13f606f7f8b3fa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4149, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}