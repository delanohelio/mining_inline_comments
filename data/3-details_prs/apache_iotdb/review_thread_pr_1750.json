{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzM1MTE2", "number": 1750, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyODowNVrOEmaA2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoyNjo0NFrOErB3VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzA3NTQ0OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/Decoder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyODowNVrOHWaAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyODowNVrOHWaAAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1NjcwNw==", "bodyText": "Combine to one String template, use String.format", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493256707", "createdAt": "2020-09-23T07:28:05Z", "author": {"login": "qiaojialin"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/encoding/decoder/Decoder.java", "diffHunk": "@@ -31,6 +31,9 @@\n \n public abstract class Decoder {\n \n+  private static final String DECODER_NOT_FOUND = \"Decoder not found:\";\n+  private static final String DATA_TYPE = \" , DataType is :\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzEzNzcyOnYy", "diffSide": "RIGHT", "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0MzoyNlrOHWaldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0MzoyNlrOHWaldA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2NjI5Mg==", "bodyText": "combine these two", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493266292", "createdAt": "2020-09-23T07:43:26Z", "author": {"login": "qiaojialin"}, "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "diffHunk": "@@ -34,7 +34,8 @@\n \n public class TsFileDeserializer {\n   private static final Logger LOG = LoggerFactory.getLogger(TsFileDeserializer.class);\n-\n+  private static final String UNEXPECTED_DATA_TYPE = \"Unexpected data type: \";\n+  private static final String FOR_DATE_TYPEINFO = \" for Date TypeInfo: \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE1MDEzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0NjoyM1rOHWasvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo0NjoyM1rOHWasvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2ODE1Ng==", "bodyText": "combine to one string", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493268156", "createdAt": "2020-09-23T07:46:23Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -200,6 +200,9 @@\n   private UpdateOperator updateOp;\n   private QueryOperator queryOp;\n   private DeleteDataOperator deleteDataOp;\n+  private static final String FOR_DELETE_STATEMENT = \"For delete statement, where clause can only contain atomic expressions like : \";\n+  private static final String ATOMIC_EXPRESSION_RULE = \"time > XXX, time <= XXX, or two atomic expressions connected by 'AND'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODkxMzc0OnYy", "diffSide": "RIGHT", "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo1Nzo1NVrOHWsX7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo1Nzo1NVrOHWsX7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1Nzc0MQ==", "bodyText": "String.format(\"Unexpected data type: %s for Date TypeInfo: %s\", data.getClass().getName(), type)", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493557741", "createdAt": "2020-09-23T12:57:55Z", "author": {"login": "jixuan1989"}, "path": "hive-connector/src/main/java/org/apache/iotdb/hive/TsFileDeserializer.java", "diffHunk": "@@ -90,55 +91,55 @@ public Object deserialize(List<String> columnNames, List<TypeInfo> columnTypes,\n             row.add(((BooleanWritable)data).get());\n           }\n           else {\n-            throw new TsFileSerDeException(\"Unexpected data type: \" + data.getClass().getName() + \" for Date TypeInfo: \" + type);\n+            throw new TsFileSerDeException(UNEXPECTED_DATA_TYPE + data.getClass().getName() + FOR_DATE_TYPEINFO + type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODkxOTYxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/cost/statistic/Measurement.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo1ODo1N1rOHWsbsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjo1ODo1N1rOHWsbsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU1ODcwNw==", "bodyText": "why change this name?", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493558707", "createdAt": "2020-09-23T12:58:57Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/cost/statistic/Measurement.java", "diffHunk": "@@ -112,7 +112,7 @@\n   private long displayIntervalInMs;\n   private Map<String, Boolean> operationSwitch;\n \n-  private static final Logger LOGGER = LoggerFactory.getLogger(Measurement.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(Measurement.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODkzNjg0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMTo1NVrOHWsmeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMTo1NVrOHWsmeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MTQ2NA==", "bodyText": "public final static String ?", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493561464", "createdAt": "2020-09-23T13:01:55Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public String SOURCE_NAME = \"jvm\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODkzODY4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/MetricsSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMjoxNVrOHWsnsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzowMjoxNVrOHWsnsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU2MTc3OA==", "bodyText": "final static String", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r493561778", "createdAt": "2020-09-23T13:02:15Z", "author": {"login": "jixuan1989"}, "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/MetricsSource.java", "diffHunk": "@@ -24,7 +24,7 @@\n \r\n public class MetricsSource implements Source {\r\n \r\n-  public String sourceName = \"iot-metrics\";\r\n+  public String SOURCE_NAME = \"iot-metrics\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8a73cd5fae8d1cbcf4dc8c9ead839658c83e951"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg0MDgyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1MzoyM1rOHYlhdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1MzoyM1rOHYlhdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MjY0Nw==", "bodyText": "Remove this pair of  parentheses", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542647", "createdAt": "2020-09-27T07:53:23Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -132,8 +133,8 @@ public static void upgradeMLog(String schemaDir, String logFileName) throws IOEx\n     }\n \n     // if both old mlog and mlog.tmp exist, delete mlog tmp, then do upgrading\n-    if (tmpLogFile.exists()) {\n-      if (!tmpLogFile.delete()) {\n+    if (tmpLogFile.exists() && !tmpLogFile.delete()) {\n+      {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg0MTU4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NDoxNVrOHYlh0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NDoxNVrOHYlh0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MjczNg==", "bodyText": "remove this parentheses", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542736", "createdAt": "2020-09-27T07:54:15Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -898,8 +899,8 @@ private void findPath(MNode node, String[] nodes, int idx, List<Pair<PartialPath\n           continue;\n         }\n         findPath(child, nodes, idx + 1, timeseriesSchemaList, hasLimit, needLast, queryContext);\n-        if (hasLimit) {\n-          if (count.get().intValue() == limit.get().intValue()) {\n+        if (hasLimit && count.get().intValue() == limit.get().intValue()) {\n+           {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg0MTgyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NDoyOVrOHYlh7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NDoyOVrOHYlh7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0Mjc2NQ==", "bodyText": "public static final", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495542765", "createdAt": "2020-09-27T07:54:29Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public final static String SOURCE_NAME = \"jvm\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg0MzcyOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/compress/IUnCompressor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NzoyOVrOHYli4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwNzo1NzoyOVrOHYli4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0MzAwOA==", "bodyText": "remove blank line", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495543008", "createdAt": "2020-09-27T07:57:29Z", "author": {"login": "wshao08"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/compress/IUnCompressor.java", "diffHunk": "@@ -41,6 +42,7 @@\n    * @param name CompressionType\n    * @return the UnCompressor of specified CompressionType\n    */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg1Mjc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwODowOToyN1rOHYlm_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwODowOToyN1rOHYlm_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NDA2Mw==", "bodyText": "Combine to one error message. Call it \"DELETE_RANGE_ERROR_MSG\"", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495544063", "createdAt": "2020-09-27T08:09:27Z", "author": {"login": "wshao08"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/strategy/LogicalGenerator.java", "diffHunk": "@@ -200,6 +200,9 @@\n   private UpdateOperator updateOp;\n   private QueryOperator queryOp;\n   private DeleteDataOperator deleteDataOp;\n+  private static final String FOR_DELETE_STATEMENT = \"For delete statement, where clause can only contain atomic expressions like : \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMTg1ODU2OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/statistics/BinaryStatistics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwODoxNTo1MlrOHYlpjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QwODoxNTo1MlrOHYlpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU0NDcxNg==", "bodyText": "Use BINARY_STATS_UNSUPPORTED_MSG to represent \"Binary statistics does not support: %s\",\nand use String.format(BINARY_STATS_UNSUPPORTED_MSG, \"min\");", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495544716", "createdAt": "2020-09-27T08:15:52Z", "author": {"login": "wshao08"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/statistics/BinaryStatistics.java", "diffHunk": "@@ -36,6 +36,9 @@\n \n   private Binary firstValue = new Binary(\"\");\n   private Binary lastValue = new Binary(\"\");\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_MIN = \"Binary statistics does not support: min\";\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_MAX = \"Binary statistics does not support: max\";\n+  private static final String BINARY_STATISTICS_NOT_SUPPORT_SUM = \"Binary statistics does not support: sum\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "812ea07f011e3d8904dba8e2e416b50d67d87b3d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5MTI1OnYy", "diffSide": "RIGHT", "path": "example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTablet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0Mzo0MFrOHYs2Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0Mzo0MFrOHYs2Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2MjY3OQ==", "bodyText": "Remove blank line and set indentation to 2", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495662679", "createdAt": "2020-09-28T02:43:40Z", "author": {"login": "wshao08"}, "path": "example/tsfile/src/main/java/org/apache/iotdb/tsfile/TsFileWriteWithTablet.java", "diffHunk": "@@ -46,10 +46,9 @@ public static void main(String[] args) {\n     try {\n       String path = \"test.tsfile\";\n       File f = FSFactoryProducer.getFSFactory().getFile(path);\n-      if (f.exists()) {\n-        if (!f.delete()) {\n+      if (f.exists() && !f.delete()) {\n           throw new RuntimeException(\"can not delete \" + f.getAbsolutePath());\n-        }\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81109a6bb14f16589410f068efb9bb2c5653eaa4"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMjc5MTc2OnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/SessionDataSet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NDowMVrOHYs2mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwMjo0NDowMVrOHYs2mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY2Mjc0Nw==", "bodyText": "set indentation to 2", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r495662747", "createdAt": "2020-09-28T02:44:01Z", "author": {"login": "wshao08"}, "path": "session/src/main/java/org/apache/iotdb/session/SessionDataSet.java", "diffHunk": "@@ -129,10 +129,8 @@ private RowRecord constructRowRecordFromValueArray() throws StatementExecutionEx\n \n \n   public RowRecord next() throws StatementExecutionException, IoTDBConnectionException {\n-    if (!ioTDBRpcDataSet.hasCachedRecord) {\n-      if (!hasNext()) {\n+    if (!ioTDBRpcDataSet.hasCachedRecord && !hasNext()) {\n         return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81109a6bb14f16589410f068efb9bb2c5653eaa4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTUxNjcxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/fileSystem/SystemFileFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxNDozNlrOHdj_oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxNDozNlrOHdj_oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MDQ4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static final String  UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";\n          \n          \n            \n              private static final String UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500760481", "createdAt": "2020-10-07T06:14:36Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/fileSystem/SystemFileFactory.java", "diffHunk": "@@ -30,10 +30,10 @@\n   INSTANCE;\n \n   private static FSType fsType = IoTDBDescriptor.getInstance().getConfig().getSystemFileStorageFs();\n-\n+  private static final String  UNSUPPORT_FILE_SYSTEM = \"Unsupported file system: \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTUyNjIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxODoyOVrOHdkFFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxODoyOVrOHdkFFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MTg3OA==", "bodyText": "TimeSeries %s is removed from tag inverted index,  can also be const string.", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500761878", "createdAt": "2020-10-07T06:18:29Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -516,7 +518,7 @@ private void removeFromTagInvertedIndex(MeasurementMNode node) throws IOExceptio\n           if (logger.isDebugEnabled()) {\n             logger.debug(String.format(\n                 \"Delete: TimeSeries %s is removed from tag inverted index, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTUyNzIxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxOTowMVrOHdkFtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxOTowMVrOHdkFtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MjAzNw==", "bodyText": "Same as above", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762037", "createdAt": "2020-10-07T06:19:01Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1378,7 +1380,7 @@ public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n               if (logger.isDebugEnabled()) {\n                 logger.debug(String.format(\n                     \"Upsert: TimeSeries %s's tag info has been removed from tag inverted index \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTUyODkzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxOTo0MVrOHdkGxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoxOTo0MVrOHdkGxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2MjMwOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762309", "createdAt": "2020-10-07T06:19:41Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/metrics/source/JvmSource.java", "diffHunk": "@@ -26,23 +26,23 @@\n \r\n public class JvmSource implements Source {\r\n \r\n-  public String sourceName = \"jvm\";\r\n+  public static final String SOURCE_NAME = \"jvm\";\r\n   public MetricRegistry metricRegistry;\r\n \r\n   public JvmSource(MetricRegistry metricRegistry) {\r\n     this.metricRegistry = metricRegistry;\r\n   }\r\n \r\n   public void registerInfo() {\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"gc\"), new GarbageCollectorMetricSet());\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"memory\"), new MemoryUsageGaugeSet());\r\n-    metricRegistry.register(MetricRegistry.name(sourceName, \"buffer-pool\"),\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"gc\"), new GarbageCollectorMetricSet());\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"memory\"), new MemoryUsageGaugeSet());\r\n+    metricRegistry.register(MetricRegistry.name(SOURCE_NAME, \"buffer-pool\"),\r\n         new BufferPoolMetricSet(ManagementFactory.getPlatformMBeanServer()));\r\n   }\r\n \r\n   @Override\r\n   public String sourceName() {\r\n-    return this.sourceName;\r\n+    return this.SOURCE_NAME;\r\n   }\r\n-\r\n+  \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTUzMzE0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metrics/ui/MetricsPage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoyMToyOVrOHdkJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoyMToyOVrOHdkJaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2Mjk4NQ==", "bodyText": "I don't think it's necessary.", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500762985", "createdAt": "2020-10-07T06:21:29Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/metrics/ui/MetricsPage.java", "diffHunk": "@@ -39,6 +39,7 @@\n   private static final Logger logger = LoggerFactory.getLogger(MetricsPage.class);\r\n   private MetricRegistry mr;\r\n   private final List<SqlArgument> sqlArguments = TSServiceImpl.getSqlArgumentList();\r\n+  private static final String HTML_TD_TAG = \"</td>\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTU0NzcyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/control/TracingManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoyNjo0NFrOHdkRtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNjoyNjo0NFrOHdkRtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc2NTExMA==", "bodyText": "NEW_LINE_QUERY_ID looks weird. I think it's better to use \"\\n\" + QUERY_ID in code below.", "url": "https://github.com/apache/iotdb/pull/1750#discussion_r500765110", "createdAt": "2020-10-07T06:26:44Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/query/control/TracingManager.java", "diffHunk": "@@ -32,6 +32,9 @@\n public class TracingManager {\n \n   private static final Logger logger = LoggerFactory.getLogger(TracingManager.class);\n+  private static final String QUERY_ID = \"Query Id: \";\n+  private static final String NEW_LINE_QUERY_ID = \"\\nQuery Id: \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ab1874a56c4cdea7de2d8a3722145ff0946c29a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 738, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}