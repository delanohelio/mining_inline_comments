{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwOTg3MDgy", "number": 2049, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowODo0MlrOE5PlHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjoxMDoyMVrOE5PmLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDU5NTUxOnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowODo0MlrOHzl2HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjozNTowMFrOHzmNKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTQ4NA==", "bodyText": "I think it should be volatile, cause it is used outside a synchronized block somewhere below", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859484", "createdAt": "2020-11-16T02:08:42Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -76,6 +76,8 @@\n   private boolean enableCompression = false;\n   private ZoneId zoneId;\n \n+  private boolean closed;//whether the queue is closed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTM4NA==", "bodyText": "but it does not take native effective if a thread sees the value of closed with a latency.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865384", "createdAt": "2020-11-16T02:35:00Z", "author": {"login": "jixuan1989"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -76,6 +76,8 @@\n   private boolean enableCompression = false;\n   private ZoneId zoneId;\n \n+  private boolean closed;//whether the queue is closed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTQ4NA=="}, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDU5Njc3OnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowOTozNVrOHzl2zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowOTozNVrOHzl2zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTY2Mg==", "bodyText": "I think notify() is better, cause only one thread can get session.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859662", "createdAt": "2020-11-16T02:09:35Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -110,20 +112,64 @@ public SessionPool(String ip, int port, String user, String password, int maxSiz\n   @SuppressWarnings(\"squid:S3776\") // Suppress high Cognitive Complexity warning\n   private Session getSession() throws IoTDBConnectionException {\n     Session session = queue.poll();\n+    if (closed) {\n+      throw new IoTDBConnectionException(\"Session pool is closed\");\n+    }\n     if (session != null) {\n       return session;\n     } else {\n+      long start = System.currentTimeMillis();\n+      boolean canCreate = false;\n       synchronized (this) {\n-        long start = System.currentTimeMillis();\n+        if (size < maxSize) {\n+          //we can create more session\n+          size++;\n+          canCreate = true;\n+          //but we do it after skip synchronized block because connection a session is time consuming.\n+        }\n+      }\n+      if (canCreate) {\n+        //create a new one.\n+        if (logger.isDebugEnabled()) {\n+          logger.debug(\"Create a new Session {}, {}, {}, {}\", ip, port, user, password);\n+        }\n+        session = new Session(ip, port, user, password, fetchSize, zoneId);\n+        try {\n+          session.open(enableCompression);\n+          //avoid someone has called close() the session pool\n+          synchronized (this) {\n+            if (closed) {\n+              //have to release the connection...\n+              session.close();\n+              throw new IoTDBConnectionException(\"Session pool is closed\");\n+            } else {\n+              return session;\n+            }\n+          }\n+        } catch (IoTDBConnectionException e) {\n+          //if exception, we will throw the exception.\n+          //Meanwhile, we have to set size--\n+          synchronized (this) {\n+            size--;\n+            this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDU5NzY0OnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjowOTo1NlrOHzl3PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjozNzoxN1rOHzmPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTc3Mw==", "bodyText": "notify() is better.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859773", "createdAt": "2020-11-16T02:09:56Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -178,6 +207,10 @@ private void putBack(Session session) {\n     queue.push(session);\n     synchronized (this) {\n       this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTk3Nw==", "bodyText": "fixed.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865977", "createdAt": "2020-11-16T02:37:17Z", "author": {"login": "jixuan1989"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -178,6 +207,10 @@ private void putBack(Session session) {\n     queue.push(session);\n     synchronized (this) {\n       this.notifyAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTc3Mw=="}, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NDU5ODIwOnYy", "diffSide": "RIGHT", "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjoxMDoyMVrOHzl3iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwMjozNzoyMVrOHzmPbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTg0OQ==", "bodyText": "notify() is better.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523859849", "createdAt": "2020-11-16T02:10:21Z", "author": {"login": "JackieTien97"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -223,10 +260,12 @@ public void closeResultSet(SessionDataSetWrapper wrapper) {\n   }\n \n   private synchronized void removeSession() {\n+    logger.warn(\"Remove a broken Session {}, {}, {}\", ip, port, user);\n+    size--;\n+    this.notifyAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg2NTk2Ng==", "bodyText": "fixed.", "url": "https://github.com/apache/iotdb/pull/2049#discussion_r523865966", "createdAt": "2020-11-16T02:37:21Z", "author": {"login": "jixuan1989"}, "path": "session/src/main/java/org/apache/iotdb/session/pool/SessionPool.java", "diffHunk": "@@ -223,10 +260,12 @@ public void closeResultSet(SessionDataSetWrapper wrapper) {\n   }\n \n   private synchronized void removeSession() {\n+    logger.warn(\"Remove a broken Session {}, {}, {}\", ip, port, user);\n+    size--;\n+    this.notifyAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzg1OTg0OQ=="}, "originalCommit": {"oid": "8ce9467638f345c682d43f7aea2011c88324616c"}, "originalPosition": 145}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 558, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}