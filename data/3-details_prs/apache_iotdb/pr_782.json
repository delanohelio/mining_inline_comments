{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzMwMDg2", "number": 782, "title": "[IOTDB-405] cache results in the client and makes the display look nice.", "bodyText": "cache results in the client and makes the display look nice.\nhttps://issues.apache.org/jira/projects/IOTDB/issues/IOTDB-405", "createdAt": "2020-02-08T16:01:58Z", "url": "https://github.com/apache/iotdb/pull/782", "merged": true, "mergeCommit": {"oid": "c400bf1f93621d44b3c0f57c80d2876c36aea692"}, "closed": true, "closedAt": "2020-02-10T12:10:36Z", "author": {"login": "Genius-pig"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCWEbqgH2gAyMzcyNzMwMDg2OjBlODg1YmQxNTIzZmIyN2IwZjM1MGY2OWQ5MWI1NWUzM2JkZGUyYTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC7_8_gFqTM1NTg4Njk3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0e885bd1523fb27b0f350f69d91b55e33bdde2a9", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/0e885bd1523fb27b0f350f69d91b55e33bdde2a9", "committedDate": "2020-02-08T15:56:41Z", "message": "cache result in client."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8601e3baffbc34bf34cbf182dd875f4801e1e237", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/8601e3baffbc34bf34cbf182dd875f4801e1e237", "committedDate": "2020-02-09T05:15:27Z", "message": "try with resource."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/5226766a408adbeb8e605182ac725ddde719038e", "committedDate": "2020-02-09T05:57:55Z", "message": "remove duplicate code."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzA1NDEx", "url": "https://github.com/apache/iotdb/pull/782#pullrequestreview-355705411", "createdAt": "2020-02-10T06:04:52Z", "commit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjowNDo1MlrOFna8zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjoxMDozN1rOFnbBSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MDMzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static int maxPrintRowCount = 100000;\n          \n          \n            \n              static int maxPrintRowCount = 1000;", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376880334", "createdAt": "2020-02-10T06:04:52Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -82,89 +82,29 @@\n   static final String TIMESTAMP_STR = \"Time\";\n   static final int ISO_DATETIME_LEN = 35;\n   private static final String IMPORT_CMD = \"import\";\n-  private static final String NEED_NOT_TO_PRINT_TIMESTAMP = \"AGGREGATION\";\n   private static final String DEFAULT_TIME_FORMAT = \"default\";\n   private static String timeFormat = DEFAULT_TIME_FORMAT;\n   static int maxPrintRowCount = 100000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MDQwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static int fetchSize = 10000;\n          \n          \n            \n              private static int fetchSize = 1000;", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376880400", "createdAt": "2020-02-10T06:05:13Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -82,89 +82,29 @@\n   static final String TIMESTAMP_STR = \"Time\";\n   static final int ISO_DATETIME_LEN = 35;\n   private static final String IMPORT_CMD = \"import\";\n-  private static final String NEED_NOT_TO_PRINT_TIMESTAMP = \"AGGREGATION\";\n   private static final String DEFAULT_TIME_FORMAT = \"default\";\n   private static String timeFormat = DEFAULT_TIME_FORMAT;\n   static int maxPrintRowCount = 100000;\n   private static int fetchSize = 10000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MDc2MQ==", "bodyText": "change this 30 to a field of this class", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376880761", "createdAt": "2020-02-10T06:06:51Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -805,34 +503,100 @@ private static void importCmd(String specialCmd, String cmd, IoTDBConnection con\n     } catch (SQLException e) {\n       println(String.format(\"Failed to import from %s because %s\",\n           cmd.split(\" \")[1], e.getMessage()));\n-      handleException(e);\n     } catch (TException e) {\n       println(\"Cannot connect to server\");\n-      handleException(e);\n     }\n   }\n \n   private static void executeQuery(IoTDBConnection connection, String cmd) {\n     long startTime = System.currentTimeMillis();\n-    try (Statement statement = connection.createStatement();) {\n+    try (Statement statement = connection.createStatement()) {\n       ZoneId zoneId = ZoneId.of(connection.getTimeZone());\n       statement.setFetchSize(fetchSize);\n       boolean hasResultSet = statement.execute(cmd.trim());\n       if (hasResultSet) {\n-        ResultSet resultSet = statement.getResultSet();\n-        output(resultSet, printToConsole, zoneId);\n-        if (resultSet != null) {\n-          resultSet.close();\n+        try (ResultSet resultSet = statement.getResultSet()) {\n+          ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\n+          int columnLength = resultSetMetaData.getColumnCount();\n+          List<Integer> maxSizeList = new ArrayList<>(columnLength);\n+          List<List<String>> lists = cacheResult(resultSet, maxSizeList, columnLength,\n+              resultSetMetaData, zoneId);\n+          output(lists, maxSizeList);\n         }\n       }\n     } catch (Exception e) {\n       println(\"Msg: \" + e.getMessage());\n-      handleException(e);\n     }\n     long costTime = System.currentTimeMillis() - startTime;\n     println(String.format(\"It costs %.3fs\", costTime / 1000.0));\n   }\n \n+  private static List<List<String>> cacheResult(ResultSet resultSet, List<Integer> maxSizeList,\n+      int columnLength, ResultSetMetaData resultSetMetaData, ZoneId zoneId)\n+      throws SQLException {\n+    boolean printTimestamp = !((IoTDBQueryResultSet) resultSet).isIgnoreTimeStamp();\n+    List<List<String>> lists = new ArrayList<>(columnLength);\n+    for(int i = 1; i <= columnLength; i++) {\n+      List<String> list = new ArrayList<>(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 490}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MTIzMg==", "bodyText": "format", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376881232", "createdAt": "2020-02-10T06:09:09Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -805,34 +503,100 @@ private static void importCmd(String specialCmd, String cmd, IoTDBConnection con\n     } catch (SQLException e) {\n       println(String.format(\"Failed to import from %s because %s\",\n           cmd.split(\" \")[1], e.getMessage()));\n-      handleException(e);\n     } catch (TException e) {\n       println(\"Cannot connect to server\");\n-      handleException(e);\n     }\n   }\n \n   private static void executeQuery(IoTDBConnection connection, String cmd) {\n     long startTime = System.currentTimeMillis();\n-    try (Statement statement = connection.createStatement();) {\n+    try (Statement statement = connection.createStatement()) {\n       ZoneId zoneId = ZoneId.of(connection.getTimeZone());\n       statement.setFetchSize(fetchSize);\n       boolean hasResultSet = statement.execute(cmd.trim());\n       if (hasResultSet) {\n-        ResultSet resultSet = statement.getResultSet();\n-        output(resultSet, printToConsole, zoneId);\n-        if (resultSet != null) {\n-          resultSet.close();\n+        try (ResultSet resultSet = statement.getResultSet()) {\n+          ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\n+          int columnLength = resultSetMetaData.getColumnCount();\n+          List<Integer> maxSizeList = new ArrayList<>(columnLength);\n+          List<List<String>> lists = cacheResult(resultSet, maxSizeList, columnLength,\n+              resultSetMetaData, zoneId);\n+          output(lists, maxSizeList);\n         }\n       }\n     } catch (Exception e) {\n       println(\"Msg: \" + e.getMessage());\n-      handleException(e);\n     }\n     long costTime = System.currentTimeMillis() - startTime;\n     println(String.format(\"It costs %.3fs\", costTime / 1000.0));\n   }\n \n+  private static List<List<String>> cacheResult(ResultSet resultSet, List<Integer> maxSizeList,\n+      int columnLength, ResultSetMetaData resultSetMetaData, ZoneId zoneId)\n+      throws SQLException {\n+    boolean printTimestamp = !((IoTDBQueryResultSet) resultSet).isIgnoreTimeStamp();\n+    List<List<String>> lists = new ArrayList<>(columnLength);\n+    for(int i = 1; i <= columnLength; i++) {\n+      List<String> list = new ArrayList<>(30);\n+      list.add(resultSetMetaData.getColumnLabel(i));\n+      lists.add(list);\n+      maxSizeList.add(resultSetMetaData.getColumnLabel(i).length());\n+    }\n+    int j = 0;\n+    while (resultSet.next()) {\n+      if(j > maxPrintRowCount) {\n+        break;\n+      }\n+      for(int i = 1; i <= columnLength; i++) {\n+        String tmp;\n+        if(printTimestamp && i == 1) {\n+          tmp = formatDatetime(resultSet.getLong(TIMESTAMP_STR), zoneId);\n+        } else {\n+          tmp = resultSet.getString(i);\n+        }\n+        lists.get(i-1).add(tmp);\n+        if(maxSizeList.get(i-1) < tmp.length()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 508}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MTMxMA==", "bodyText": "add some javadoc", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376881310", "createdAt": "2020-02-10T06:09:39Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -805,34 +503,100 @@ private static void importCmd(String specialCmd, String cmd, IoTDBConnection con\n     } catch (SQLException e) {\n       println(String.format(\"Failed to import from %s because %s\",\n           cmd.split(\" \")[1], e.getMessage()));\n-      handleException(e);\n     } catch (TException e) {\n       println(\"Cannot connect to server\");\n-      handleException(e);\n     }\n   }\n \n   private static void executeQuery(IoTDBConnection connection, String cmd) {\n     long startTime = System.currentTimeMillis();\n-    try (Statement statement = connection.createStatement();) {\n+    try (Statement statement = connection.createStatement()) {\n       ZoneId zoneId = ZoneId.of(connection.getTimeZone());\n       statement.setFetchSize(fetchSize);\n       boolean hasResultSet = statement.execute(cmd.trim());\n       if (hasResultSet) {\n-        ResultSet resultSet = statement.getResultSet();\n-        output(resultSet, printToConsole, zoneId);\n-        if (resultSet != null) {\n-          resultSet.close();\n+        try (ResultSet resultSet = statement.getResultSet()) {\n+          ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\n+          int columnLength = resultSetMetaData.getColumnCount();\n+          List<Integer> maxSizeList = new ArrayList<>(columnLength);\n+          List<List<String>> lists = cacheResult(resultSet, maxSizeList, columnLength,\n+              resultSetMetaData, zoneId);\n+          output(lists, maxSizeList);\n         }\n       }\n     } catch (Exception e) {\n       println(\"Msg: \" + e.getMessage());\n-      handleException(e);\n     }\n     long costTime = System.currentTimeMillis() - startTime;\n     println(String.format(\"It costs %.3fs\", costTime / 1000.0));\n   }\n \n+  private static List<List<String>> cacheResult(ResultSet resultSet, List<Integer> maxSizeList,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 484}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4MTQ4Mg==", "bodyText": "There is a null pointer exception, I can not print result in my client. Try to fix it...", "url": "https://github.com/apache/iotdb/pull/782#discussion_r376881482", "createdAt": "2020-02-10T06:10:37Z", "author": {"login": "qiaojialin"}, "path": "client/src/main/java/org/apache/iotdb/client/AbstractClient.java", "diffHunk": "@@ -805,34 +503,100 @@ private static void importCmd(String specialCmd, String cmd, IoTDBConnection con\n     } catch (SQLException e) {\n       println(String.format(\"Failed to import from %s because %s\",\n           cmd.split(\" \")[1], e.getMessage()));\n-      handleException(e);\n     } catch (TException e) {\n       println(\"Cannot connect to server\");\n-      handleException(e);\n     }\n   }\n \n   private static void executeQuery(IoTDBConnection connection, String cmd) {\n     long startTime = System.currentTimeMillis();\n-    try (Statement statement = connection.createStatement();) {\n+    try (Statement statement = connection.createStatement()) {\n       ZoneId zoneId = ZoneId.of(connection.getTimeZone());\n       statement.setFetchSize(fetchSize);\n       boolean hasResultSet = statement.execute(cmd.trim());\n       if (hasResultSet) {\n-        ResultSet resultSet = statement.getResultSet();\n-        output(resultSet, printToConsole, zoneId);\n-        if (resultSet != null) {\n-          resultSet.close();\n+        try (ResultSet resultSet = statement.getResultSet()) {\n+          ResultSetMetaData resultSetMetaData = resultSet.getMetaData();\n+          int columnLength = resultSetMetaData.getColumnCount();\n+          List<Integer> maxSizeList = new ArrayList<>(columnLength);\n+          List<List<String>> lists = cacheResult(resultSet, maxSizeList, columnLength,\n+              resultSetMetaData, zoneId);\n+          output(lists, maxSizeList);\n         }\n       }\n     } catch (Exception e) {\n       println(\"Msg: \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5226766a408adbeb8e605182ac725ddde719038e"}, "originalPosition": 477}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f61a134181563ad92e66f1a7d0026b203ca44ab", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/6f61a134181563ad92e66f1a7d0026b203ca44ab", "committedDate": "2020-02-10T10:11:06Z", "message": "Update client/src/main/java/org/apache/iotdb/client/AbstractClient.java\n\nCo-Authored-By: Jialin Qiao <qjl16@mails.tsinghua.edu.cn>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a8bc341132372755b8425167646e5a038a35b9", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/90a8bc341132372755b8425167646e5a038a35b9", "committedDate": "2020-02-10T10:11:26Z", "message": "Update client/src/main/java/org/apache/iotdb/client/AbstractClient.java\n\nCo-Authored-By: Jialin Qiao <qjl16@mails.tsinghua.edu.cn>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc2b58725ea4935e9ea479f7428abff40c76257f", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/cc2b58725ea4935e9ea479f7428abff40c76257f", "committedDate": "2020-02-10T10:17:11Z", "message": "fix according to review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d462e30ab2470fd09cfb9d1a22651742ff66d490", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/d462e30ab2470fd09cfb9d1a22651742ff66d490", "committedDate": "2020-02-10T10:18:21Z", "message": "Merge branch 'client_chache' of https://github.com/apache/incubator-iotdb into client_chache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebed4a60dc4d3eafa77b896fcdb97b8b6c8c77ea", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/ebed4a60dc4d3eafa77b896fcdb97b8b6c8c77ea", "committedDate": "2020-02-10T11:12:23Z", "message": "set 30 to 1001"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODg2OTcy", "url": "https://github.com/apache/iotdb/pull/782#pullrequestreview-355886972", "createdAt": "2020-02-10T12:08:11Z", "commit": {"oid": "ebed4a60dc4d3eafa77b896fcdb97b8b6c8c77ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3310, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}