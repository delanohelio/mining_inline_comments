{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NzgwMDg0", "number": 1851, "title": "[IOTDB-951] Fix auto-creating schema in parallel may write unrecognizable timeseries in mlog.txt", "bodyText": "Jira Issue: https://issues.apache.org/jira/browse/IOTDB-951", "createdAt": "2020-10-23T07:35:30Z", "url": "https://github.com/apache/iotdb/pull/1851", "merged": true, "mergeCommit": {"oid": "6fef74a7bf504b52ff4f0a6030c3db2b53698ef1"}, "closed": true, "closedAt": "2020-10-26T07:29:53Z", "author": {"login": "wshao08"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVQCV2gH2gAyNTA4NzgwMDg0OjVjMTgxYjI0ZjZmN2FlMTg4NDlkYWY5NmRiMzJjNWM3OGIwNTNmODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWPP0_AFqTUxNjUxNzQ0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5c181b24f6f7ae18849daf96db32c5c78b053f87", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/5c181b24f6f7ae18849daf96db32c5c78b053f87", "committedDate": "2020-10-23T05:50:41Z", "message": "Fix createTimeseries() in mLogWriter to make writing mlog thread safe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0bf2ac2a75ccb9e02d41900b495e53a048264c1", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/f0bf2ac2a75ccb9e02d41900b495e53a048264c1", "committedDate": "2020-10-23T07:27:40Z", "message": "Fix createTimeseries concurrent bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121ee7d5dcc08f8d7b70baa7ef218ae44016289b", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/121ee7d5dcc08f8d7b70baa7ef218ae44016289b", "committedDate": "2020-10-23T09:11:23Z", "message": "Fix unclosed file issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd11338d19845a1faeff3cf850adc7c37450d9e", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/7dd11338d19845a1faeff3cf850adc7c37450d9e", "committedDate": "2020-10-23T09:35:13Z", "message": "minor code changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTMxMDg4", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-515531088", "createdAt": "2020-10-23T10:15:19Z", "commit": {"oid": "7dd11338d19845a1faeff3cf850adc7c37450d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTg1MzMx", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-515585331", "createdAt": "2020-10-23T11:37:36Z", "commit": {"oid": "7dd11338d19845a1faeff3cf850adc7c37450d9e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/454637b6971a9c12912aa55826b1b73258ee446d", "committedDate": "2020-10-23T12:31:59Z", "message": "review fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjQ0ODcx", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-515644871", "createdAt": "2020-10-23T13:02:43Z", "commit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowMjo0M1rOHnM6Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowMjo0M1rOHnM6Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2ODA1NA==", "bodyText": "You can use fileChannel to totally replace it.", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r510868054", "createdAt": "2020-10-23T13:02:43Z", "author": {"login": "JackieTien97"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzM5NjM4", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-516339638", "createdAt": "2020-10-25T09:25:33Z", "commit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwOToyNTozNFrOHn3zKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQwOToyNTozNFrOHn3zKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTU3MDczMA==", "bodyText": "I think you could use channel.write() to implement all the functions in this class, including deleteTimeseries, setStorageGroup, deleteStorageGroup, setTTL, changeOffset and so on", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511570730", "createdAt": "2020-10-25T09:25:34Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -53,40 +58,50 @@ public MLogWriter(String schemaDir, String logFileName) throws IOException {\n     logFile = SystemFileFactory.INSTANCE.getFile(schemaDir + File.separator + logFileName);\n     FileWriter fileWriter = new FileWriter(logFile, true);\n     writer = new BufferedWriter(fileWriter);\n+    fileOutputStream = new FileOutputStream(logFile, true);\n+    channel = fileOutputStream.getChannel();\n   }\n \n   public void close() throws IOException {\n     writer.close();\n+    channel.close();\n+    fileOutputStream.close();\n   }\n \n   public void createTimeseries(CreateTimeSeriesPlan plan, long offset) throws IOException {\n-    writer.write(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n-        plan.getPath().getFullPath(), plan.getDataType().serialize(),\n-        plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n+    StringBuilder buf = new StringBuilder();\n+    buf.append(String.format(\"%s,%s,%s,%s,%s\", MetadataOperationType.CREATE_TIMESERIES,\n+            plan.getPath().getFullPath(), plan.getDataType().serialize(),\n+            plan.getEncoding().serialize(), plan.getCompressor().serialize()));\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getProps() != null) {\n       boolean first = true;\n       for (Map.Entry<String, String> entry : plan.getProps().entrySet()) {\n         if (first) {\n-          writer.write(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"%s=%s\", entry.getKey(), entry.getValue()));\n           first = false;\n         } else {\n-          writer.write(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n+          buf.append(String.format(\"&%s=%s\", entry.getKey(), entry.getValue()));\n         }\n       }\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (plan.getAlias() != null) {\n-      writer.write(plan.getAlias());\n+      buf.append(plan.getAlias());\n     }\n \n-    writer.write(\",\");\n+    buf.append(\",\");\n     if (offset >= 0) {\n-      writer.write(String.valueOf(offset));\n+      buf.append(offset);\n     }\n-    newLine();\n+    final String newLine = System.getProperty(\"line.separator\");\n+    buf.append(newLine);\n+\n+    channel.write(ByteBuffer.wrap(buf.toString().getBytes()));\n+    channel.force(true);\n+    ++lineNumber;\n   }\n \n   public void deleteTimeseries(String path) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NDE5MTgw", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-516419180", "createdAt": "2020-10-26T01:00:02Z", "commit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMTowMDowMlrOHn-MiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwMTowMDowMlrOHn-MiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY3NTUyOQ==", "bodyText": "We can use file channel to replace it. Check other place where it is used ~", "url": "https://github.com/apache/iotdb/pull/1851#discussion_r511675529", "createdAt": "2020-10-26T01:00:02Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MLogWriter.java", "diffHunk": "@@ -38,6 +41,8 @@\n   private static final String STRING_TYPE = \"%s,%s,%s\"; \n   private File logFile;\n   private BufferedWriter writer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "454637b6971a9c12912aa55826b1b73258ee446d"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0b012ed2475c737e9edfd61512d1a31b05a04ba", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/e0b012ed2475c737e9edfd61512d1a31b05a04ba", "committedDate": "2020-10-26T02:47:29Z", "message": "Use FileChannel to replace BufferedWriter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a90a721544269b959db561e7edb0dee3c9950c6", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/0a90a721544269b959db561e7edb0dee3c9950c6", "committedDate": "2020-10-26T04:11:54Z", "message": "Re-trigger ci"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f497151265fde2092e4871f2ec6567ca247e2b31", "author": {"user": {"login": "wshao08", "name": null}}, "url": "https://github.com/apache/iotdb/commit/f497151265fde2092e4871f2ec6567ca247e2b31", "committedDate": "2020-10-26T05:25:30Z", "message": "Remove redundant code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTE3Mzkz", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-516517393", "createdAt": "2020-10-26T07:29:20Z", "commit": {"oid": "f497151265fde2092e4871f2ec6567ca247e2b31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2NTE3NDQz", "url": "https://github.com/apache/iotdb/pull/1851#pullrequestreview-516517443", "createdAt": "2020-10-26T07:29:26Z", "commit": {"oid": "f497151265fde2092e4871f2ec6567ca247e2b31"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3722, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}