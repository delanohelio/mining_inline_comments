{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDc3Nzc4", "number": 1094, "title": "[IOTDB-613] Add the ability to persist and maintain currentterm for the raft node", "bodyText": "", "createdAt": "2020-04-24T10:49:54Z", "url": "https://github.com/apache/iotdb/pull/1094", "merged": true, "mergeCommit": {"oid": "014b22782f5beff687312ea7eaef45468b6a3d07"}, "closed": true, "closedAt": "2020-04-27T03:30:36Z", "author": {"login": "LebronAl"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYE1DbAH2gAyNDA4NDc3Nzc4OjRjMDBmMDMzYjFhOTFiYjcwZmU1MDQ1OWU1YWRkZDZmNTc4YWY2NWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbmuzUgFqTQwMDYwNTQyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c00f033b1a91bb70fe50459e5addd6f578af65f", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/4c00f033b1a91bb70fe50459e5addd6f578af65f", "committedDate": "2020-04-16T04:17:50Z", "message": "raftLogManager init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b586785111694821ee5a370f4662c46d10870cc", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/5b586785111694821ee5a370f4662c46d10870cc", "committedDate": "2020-04-16T04:17:50Z", "message": "fix Log Module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9f80c22a18a554f656407eeffba5feafa71e0b9", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/e9f80c22a18a554f656407eeffba5feafa71e0b9", "committedDate": "2020-04-16T04:17:50Z", "message": "fix bugs & add exception & sublist.clear()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b949fcfb385b3c02213a8f9830b93d766d5bf553", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/b949fcfb385b3c02213a8f9830b93d766d5bf553", "committedDate": "2020-04-16T04:17:50Z", "message": "add unCommitEntryManager Junit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ed5fc882aaa0964401fdf2acfd409890e9133c6", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/6ed5fc882aaa0964401fdf2acfd409890e9133c6", "committedDate": "2020-04-16T04:17:50Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0735e6099c071f37bdd3fec86e38376cd3e706d2", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/0735e6099c071f37bdd3fec86e38376cd3e706d2", "committedDate": "2020-04-16T04:17:50Z", "message": "add CommittedEntryManager test and fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f03fa00c1bdabb1851af9b77b27767e5f4f20c5", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/6f03fa00c1bdabb1851af9b77b27767e5f4f20c5", "committedDate": "2020-04-16T04:17:50Z", "message": "add license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bcd05fb5bfd540cd0d00214d520139a37d4f69c", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/3bcd05fb5bfd540cd0d00214d520139a37d4f69c", "committedDate": "2020-04-16T04:17:50Z", "message": "add commitEntryManager JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85b2acc41db102a44f45cdd86ef85a1b5850d738", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/85b2acc41db102a44f45cdd86ef85a1b5850d738", "committedDate": "2020-04-16T04:17:50Z", "message": "remove internal unused exceptions & update logger format & fix bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f6b81fa2f42c13e8bdb336a4195cba3aadfbcd", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/55f6b81fa2f42c13e8bdb336a4195cba3aadfbcd", "committedDate": "2020-04-16T04:17:50Z", "message": "add raftlogmanager junit test & fix bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9af76a5722f452f34e0e71452bf7c88c357d068a", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/9af76a5722f452f34e0e71452bf7c88c357d068a", "committedDate": "2020-04-16T04:17:50Z", "message": "add RaftLoaManager JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f1b62f88601fac1b69aa66af4cf6688b70cdc96", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/5f1b62f88601fac1b69aa66af4cf6688b70cdc96", "committedDate": "2020-04-16T04:17:50Z", "message": "add applyingSnapshot & adjust logger level & update JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60c647e448a8be3b2743aef62af302fa58e26935", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/60c647e448a8be3b2743aef62af302fa58e26935", "committedDate": "2020-04-16T04:17:50Z", "message": "add maybeCommit for leader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1a932ee973db187c5f8ea67f164aa4603265492", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/e1a932ee973db187c5f8ea67f164aa4603265492", "committedDate": "2020-04-16T04:17:50Z", "message": "rename snapshot lastLogId to lastLogIndex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb2a4e91783dbee51537e82ee0e5c9e3d519b483", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/fb2a4e91783dbee51537e82ee0e5c9e3d519b483", "committedDate": "2020-04-16T04:17:50Z", "message": "Use native snapshot && update license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4269925f6e6632f89fdec34fe2b96b694a426465", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/4269925f6e6632f89fdec34fe2b96b694a426465", "committedDate": "2020-04-16T04:17:50Z", "message": "add applier for raftLogManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08739025f50308a86421c736dc24a33b1210b854", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/08739025f50308a86421c736dc24a33b1210b854", "committedDate": "2020-04-16T04:17:50Z", "message": "rename some method to old version && add some placeholder method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7843e579ab05bec77b081e0ca4144bf6ea25c9bf", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/7843e579ab05bec77b081e0ca4144bf6ea25c9bf", "committedDate": "2020-04-16T04:24:25Z", "message": "initial embedded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7246eda04adf068e26eca4a3ae2adcfb40d032a", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/a7246eda04adf068e26eca4a3ae2adcfb40d032a", "committedDate": "2020-04-17T07:18:26Z", "message": "add EmptyContentLog && add persistence && fix format && resolve conflict"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f65255bb3d96fca94da33edc93ebaa5b9da141", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/48f65255bb3d96fca94da33edc93ebaa5b9da141", "committedDate": "2020-04-17T07:24:38Z", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7da4f49032b2506a2a7048e2164ea88f8c957b0d", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/7da4f49032b2506a2a7048e2164ea88f8c957b0d", "committedDate": "2020-04-17T09:09:31Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e838ca4587541ccc284aac59f87ec2632774233c", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/e838ca4587541ccc284aac59f87ec2632774233c", "committedDate": "2020-04-20T05:30:54Z", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22f5676a9430d084a7aa5c8cb98bc8fbab399889", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/22f5676a9430d084a7aa5c8cb98bc8fbab399889", "committedDate": "2020-04-20T14:13:31Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "914d561f51e97596dc181229977d6231b66b9c42", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/914d561f51e97596dc181229977d6231b66b9c42", "committedDate": "2020-04-20T14:16:46Z", "message": "Merge branch 'cluster_new' into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c12af0cefa87ed34b98ebe5c1fa96871c12f251", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/8c12af0cefa87ed34b98ebe5c1fa96871c12f251", "committedDate": "2020-04-21T03:44:34Z", "message": "Merge branch 'cluster_new' of https://github.com/apache/incubator-iotdb into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ef6ec694d0a4d0e7ee4749dffdbce8da10e915", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/91ef6ec694d0a4d0e7ee4749dffdbce8da10e915", "committedDate": "2020-04-21T05:37:29Z", "message": "Merge branch 'cluster_new' into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88b85cf56704193734bd1a995441587a27bd8b05", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/88b85cf56704193734bd1a995441587a27bd8b05", "committedDate": "2020-04-22T04:25:47Z", "message": "Merge branch 'cluster_new' into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aaa03f78f636aae7fc352f580ba42c54c4a5148", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/9aaa03f78f636aae7fc352f580ba42c54c4a5148", "committedDate": "2020-04-22T09:30:30Z", "message": "Merge branch 'cluster_new' into cluster_new_log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7bd110d524e15fd05d841f808715b260eebc0e", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/7f7bd110d524e15fd05d841f808715b260eebc0e", "committedDate": "2020-04-22T09:34:06Z", "message": "integrate persistence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f673577d70c09d1bb1d1d06ed37de4cb876dd45", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/7f673577d70c09d1bb1d1d06ed37de4cb876dd45", "committedDate": "2020-04-22T09:34:06Z", "message": "add term persistence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6f50759cd1400ddd0e41eaba6b95f79705c285", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/2b6f50759cd1400ddd0e41eaba6b95f79705c285", "committedDate": "2020-04-22T09:34:43Z", "message": "fix truncateCommitted Entries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05127533bcb9f66b1dde64d292db7f636897a3b9", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/05127533bcb9f66b1dde64d292db7f636897a3b9", "committedDate": "2020-04-23T04:02:15Z", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0638298eb558c53f03541c9b48550fe5e8b2ab94", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/0638298eb558c53f03541c9b48550fe5e8b2ab94", "committedDate": "2020-04-23T05:31:54Z", "message": "Merge branch 'cluster_new' of github.com:Apache/incubator-iotdb into cluster_new_persistence_integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a593e207c30067f73fc94970079c80bb3dcb1eb0", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/a593e207c30067f73fc94970079c80bb3dcb1eb0", "committedDate": "2020-04-23T05:40:27Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90cefed8209890c8d5b1f0a944b9efdc218f35bd", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/90cefed8209890c8d5b1f0a944b9efdc218f35bd", "committedDate": "2020-04-24T08:41:00Z", "message": "fix RPC out-of-order bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14192ec1a68086588d88669418e4bd47daccfe19", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/14192ec1a68086588d88669418e4bd47daccfe19", "committedDate": "2020-04-24T08:43:12Z", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d41b948ca8c9733d65caafa7a29f0ffd963876c", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/3d41b948ca8c9733d65caafa7a29f0ffd963876c", "committedDate": "2020-04-24T10:21:20Z", "message": "Merge branch 'cluster_new' into cluster_new_persistence_integration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e", "committedDate": "2020-04-24T10:27:26Z", "message": "Merge branch 'cluster_new_persistence_integration' of github.com:Lebronl/incubator-iotdb into cluster_new_persistence_integration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTg1MTI5", "url": "https://github.com/apache/iotdb/pull/1094#pullrequestreview-400585129", "createdAt": "2020-04-27T02:00:13Z", "commit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjowMDoxM1rOGMNriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMjoxMDoxMlrOGMN2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MDIzNQ==", "bodyText": "Please just decide one and do not leave commented code. Both are okay for me.", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415460235", "createdAt": "2020-04-27T02:00:13Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/manage/UnCommittedEntryManager.java", "diffHunk": "@@ -126,11 +128,11 @@ public void truncateAndAppend(List<Log> appendingEntries) {\n         long len = after - offset;\n         if (len < 0) {\n             // the logs are being truncated to before our current offset portion, which is committed entries\n-            // unconditional obedience to the leader's request. Maybe throw a exception here is better\n-            offset = after;\n-            entries = appendingEntries;\n+            // Maybe throw a exception here is better\n             logger.error(\"The logs which first index is {} are going to truncate committed logs\",\n                 after);\n+//            throw new TruncateCommittedEntryException(appendingEntries.get(0).getCurrLogIndex(),\n+//                offset);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2MjE2Mg==", "bodyText": "Please check the indents.", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462162", "createdAt": "2020-04-27T02:07:25Z", "author": {"login": "jt2594838"}, "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/RaftLogManagerTest.java", "diffHunk": "@@ -48,12 +52,22 @@ public void apply(Log log) {\n \t\t\tappliedLogs.add(log);\n \t\t}\n \t};\n+\tprivate int testIdentifier = 1;\n \n \t@Before\n \tpublic void setUp() {\n \t\tappliedLogs = new HashSet<>();\n \t}\n \n+\t@After\n+\tpublic void tearDown() {\n+\t\tFile dir = new File(new SyncLogDequeSerializer(testIdentifier).getLogDir());\n+\t\tfor (File file : dir.listFiles()) {\n+\t\t\tfile.delete();\n+\t\t}\n+\t\tdir.delete();\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjc1OA==", "bodyText": "Remove these if they are not necessary.", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462758", "createdAt": "2020-04-27T02:09:21Z", "author": {"login": "jt2594838"}, "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializerTest.java", "diffHunk": "@@ -354,99 +222,87 @@ public void testRemoveOldFileAtRecovery() {\n     }\n   }\n \n-\n-  @Test\n-  public void testTruncate() {\n-    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    List<Log> testLogs2;\n-    try {\n-      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n-\n-      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n-      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs1) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-\n-      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      syncLogDequeSerializer.removeFirst(3);\n-\n-      testLogs2 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs2) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-\n-      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-      // this will remove first file and build a new file\n-      syncLogDequeSerializer.removeFirst(8);\n-\n-      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-\n-      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n-      for (Log log : testLogs3) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n-      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n-\n-      // last file has been truncated\n-      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-\n-    // recovery\n-    syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    try {\n-      List<Log> logs = syncLogDequeSerializer.recoverLog();\n-      assertEquals(9, logs.size());\n-\n-      for (int i = 0; i < 8; i++) {\n-        assertEquals(testLogs2.get(i + 1), logs.get(i));\n-      }\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-  }\n+//  @Test\n+//  public void testTruncate() {\n+//    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    List<Log> testLogs2;\n+//    try {\n+//      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n+//\n+//      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n+//      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs1) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//\n+//      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      syncLogDequeSerializer.removeFirst(3);\n+//\n+//      testLogs2 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs2) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//\n+//      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//      // this will remove first file and build a new file\n+//      syncLogDequeSerializer.removeFirst(8);\n+//\n+//      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//\n+//      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n+//      for (Log log : testLogs3) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n+//\n+//      // last file has been truncated\n+//      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//\n+//    // recovery\n+//    syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    try {\n+//      List<Log> logs = syncLogDequeSerializer.recoverLog();\n+//      assertEquals(9, logs.size());\n+//\n+//      for (int i = 0; i < 8; i++) {\n+//        assertEquals(testLogs2.get(i + 1), logs.get(i));\n+//      }\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e"}, "originalPosition": 443}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ2Mjk2Mw==", "bodyText": "Remove these if they are not necessary.", "url": "https://github.com/apache/iotdb/pull/1094#discussion_r415462963", "createdAt": "2020-04-27T02:10:12Z", "author": {"login": "jt2594838"}, "path": "cluster/src/test/java/org/apache/iotdb/cluster/log/manage/serializable/SyncLogDequeSerializerTest.java", "diffHunk": "@@ -458,85 +314,78 @@ public void testRecoveryByAppendList() {\n     }\n   }\n \n-  @Test\n-  public void testTruncateByAppendList() {\n-    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    List<Log> testLogs2;\n-    try {\n-      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n-\n-      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n-      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs1) {\n-        memoryLogManager.appendLog(log);\n-      }\n-      syncLogDequeSerializer.append(testLogs1, memoryLogManager.getMeta());\n-\n-      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      syncLogDequeSerializer.removeFirst(3);\n-\n-      testLogs2 = TestUtils.prepareNodeLogs(10);\n-\n-      for (Log log : testLogs2) {\n-        memoryLogManager.appendLog(log);\n-      }\n-      syncLogDequeSerializer.append(testLogs2, memoryLogManager.getMeta());\n-\n-      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n-\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-      // this will remove first file and build a new file\n-      syncLogDequeSerializer.removeFirst(8);\n-\n-      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n-      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n-\n-      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n-      for (Log log : testLogs3) {\n-        memoryLogManager.appendLog(log);\n-        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n-      }\n-      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n-      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n-\n-      // last file has been truncated\n-      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-\n-    // recovery\n-    syncLogDequeSerializer = new SyncLogDequeSerializer(getNode(1));\n-    try {\n-      List<Log> logs = syncLogDequeSerializer.recoverLog();\n-      assertEquals(9, logs.size());\n-\n-      for (int i = 0; i < 8; i++) {\n-        assertEquals(testLogs2.get(i + 1), logs.get(i));\n-      }\n-    } finally {\n-      syncLogDequeSerializer.close();\n-    }\n-  }\n+//  @Test\n+//  public void testTruncateByAppendList() {\n+//    SyncLogDequeSerializer syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    List<Log> testLogs2;\n+//    try {\n+//      syncLogDequeSerializer.setMaxRemovedLogSize(10);\n+//\n+//      MemoryLogManager memoryLogManager = buildMemoryLogManager();\n+//      List<Log> testLogs1 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs1) {\n+//        memoryLogManager.appendLog(log);\n+//      }\n+//      syncLogDequeSerializer.append(testLogs1, memoryLogManager.getMeta());\n+//\n+//      assertEquals(10, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      syncLogDequeSerializer.removeFirst(3);\n+//\n+//      testLogs2 = TestUtils.prepareNodeLogs(10);\n+//\n+//      for (Log log : testLogs2) {\n+//        memoryLogManager.appendLog(log);\n+//      }\n+//      syncLogDequeSerializer.append(testLogs2, memoryLogManager.getMeta());\n+//\n+//      assertEquals(17, syncLogDequeSerializer.getLogSizeDeque().size());\n+//\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//      // this will remove first file and build a new file\n+//      syncLogDequeSerializer.removeFirst(8);\n+//\n+//      assertEquals(9, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      assertEquals(2, syncLogDequeSerializer.logFileList.size());\n+//\n+//      List<Log> testLogs3 = TestUtils.prepareNodeLogs(10);\n+//      for (Log log : testLogs3) {\n+//        memoryLogManager.appendLog(log);\n+//        syncLogDequeSerializer.append(log, memoryLogManager.getMeta());\n+//      }\n+//      assertEquals(19, syncLogDequeSerializer.getLogSizeDeque().size());\n+//      syncLogDequeSerializer.truncateLog(11, memoryLogManager.getMeta());\n+//\n+//      // last file has been truncated\n+//      assertEquals(1, syncLogDequeSerializer.logFileList.size());\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//\n+//    // recovery\n+//    syncLogDequeSerializer = new SyncLogDequeSerializer(testIdentifier);\n+//    try {\n+//      List<Log> logs = syncLogDequeSerializer.recoverLog();\n+//      assertEquals(9, logs.size());\n+//\n+//      for (int i = 0; i < 8; i++) {\n+//        assertEquals(testLogs2.get(i + 1), logs.get(i));\n+//      }\n+//    } finally {\n+//      syncLogDequeSerializer.close();\n+//    }\n+//  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d872b5e5c8d39d67fdb25ae077edc7bec2c62b1e"}, "originalPosition": 607}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04c138c3447067fde84b7ed93dddb1e95165606b", "author": {"user": {"login": "LebronAl", "name": "Potato"}}, "url": "https://github.com/apache/iotdb/commit/04c138c3447067fde84b7ed93dddb1e95165606b", "committedDate": "2020-04-27T03:02:39Z", "message": "fix review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjA1NDI3", "url": "https://github.com/apache/iotdb/pull/1094#pullrequestreview-400605427", "createdAt": "2020-04-27T03:29:33Z", "commit": {"oid": "04c138c3447067fde84b7ed93dddb1e95165606b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2974, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}