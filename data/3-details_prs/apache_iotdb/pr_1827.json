{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzODg0OTc3", "number": 1827, "title": "[Distributed]fix code smell", "bodyText": "", "createdAt": "2020-10-15T07:14:32Z", "url": "https://github.com/apache/iotdb/pull/1827", "merged": true, "mergeCommit": {"oid": "5f08c5f19cc31f690b84a08e68e260397de7eec3"}, "closed": true, "closedAt": "2020-10-18T02:35:53Z", "author": {"login": "neuyilan"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSsaxMAH2gAyNTAzODg0OTc3OjhmYjk2ZmMzY2ZmNTY5MGVhOTQzNTU4ZTk4MDhhYWFjYzBhNjJjZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTmPizAFqTUxMTAyODUyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fb96fc3cff5690ea943558e9808aaacc0a62cff", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/8fb96fc3cff5690ea943558e9808aaacc0a62cff", "committedDate": "2020-10-15T07:12:56Z", "message": "fix code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba292a7cb8045fea936b04d74a7f3c9d2ae1f54", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2ba292a7cb8045fea936b04d74a7f3c9d2ae1f54", "committedDate": "2020-10-15T08:34:31Z", "message": "fix more code smell"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MzY1Mjg4", "url": "https://github.com/apache/iotdb/pull/1827#pullrequestreview-509365288", "createdAt": "2020-10-15T13:15:19Z", "commit": {"oid": "2ba292a7cb8045fea936b04d74a7f3c9d2ae1f54"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzoxNToxOVrOHiHOMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzoyNjoxOFrOHiHtiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUzMTk1Mg==", "bodyText": "I don't think the change is thread-safe, please confirm it.", "url": "https://github.com/apache/iotdb/pull/1827#discussion_r505531952", "createdAt": "2020-10-15T13:15:19Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/log/LogDispatcher.java", "diffHunk": "@@ -244,25 +244,20 @@ private void appendEntriesAsync(List<ByteBuffer> logList, AppendEntriesRequest r\n     private void appendEntriesSync(List<ByteBuffer> logList, AppendEntriesRequest request,\n         List<SendLogRequest> currBatch) {\n \n-      long start;\n-      if (Timer.ENABLE_INSTRUMENTING) {\n-        start = System.nanoTime();\n-      }\n+      Timer.Statistic.RAFT_SENDER_WAIT_FOR_PREV_LOG.setStartTime();\n       if (!member.waitForPrevLog(peer, currBatch.get(0).getLog())) {\n         logger.warn(\"{}: node {} timed out when appending {}\", member.getName(), receiver,\n             currBatch.get(0).getLog());\n         return;\n       }\n-      Timer.Statistic.RAFT_SENDER_WAIT_FOR_PREV_LOG.addNanoFromStart(start);\n+      Timer.Statistic.RAFT_SENDER_WAIT_FOR_PREV_LOG.calCostTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba292a7cb8045fea936b04d74a7f3c9d2ae1f54"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUzOTk3OQ==", "bodyText": "The condition should be put into the first method, as System.nanoTime() is a heavy call and should be avoided when not using instrumenting.", "url": "https://github.com/apache/iotdb/pull/1827#discussion_r505539979", "createdAt": "2020-10-15T13:26:18Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/Timer.java", "diffHunk": "@@ -183,14 +184,33 @@ public void add(long val) {\n     }\n \n     /**\n-     * This method equals `add(System.nanoTime() - start)`. We wrap `System.nanoTime()` in this\n-     * method to avoid unnecessary calls when instrumenting is disabled.\n-     *\n-     * @param start\n+     * set now time as the operation's start time\n      */\n-    public void addNanoFromStart(long start) {\n+    public void setStartTime() {\n+      setStartTime(System.nanoTime());\n+    }\n+\n+    public void setStartTime(long startTime) {\n+      if (ENABLE_INSTRUMENTING) {\n+        this.startTime = startTime;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba292a7cb8045fea936b04d74a7f3c9d2ae1f54"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eefe81346dcce98885284fcb339234476d8422eb", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/eefe81346dcce98885284fcb339234476d8422eb", "committedDate": "2020-10-16T02:29:10Z", "message": "fix concurrent problems when instrumenting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExMDI4NTIz", "url": "https://github.com/apache/iotdb/pull/1827#pullrequestreview-511028523", "createdAt": "2020-10-18T02:35:10Z", "commit": {"oid": "eefe81346dcce98885284fcb339234476d8422eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3688, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}