{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjY0Nzky", "number": 713, "reviewThreads": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NTo1MVrODXv1tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTo1MTowMFrODfyP8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjI3NjM5OnYy", "diffSide": "RIGHT", "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NTo1MVrOFdNm1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NTo1MVrOFdNm1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3NTk1Ng==", "bodyText": "remove unused field", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366175956", "createdAt": "2020-01-14T06:55:51Z", "author": {"login": "samperson1997"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "diffHunk": "@@ -41,8 +41,10 @@\n public class IoTDBQueryResultSet implements ResultSet {\n \n   private static final String TIMESTAMP_STR = \"Time\";\n+  private static final int TIMESTAMP_STR_LENGTH = 4;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjI3Njc0OnYy", "diffSide": "RIGHT", "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NjowMFrOFdNnAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NjowMFrOFdNnAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3NjAwMw==", "bodyText": "remove unused field", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366176003", "createdAt": "2020-01-14T06:56:00Z", "author": {"login": "samperson1997"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "diffHunk": "@@ -41,8 +41,10 @@\n public class IoTDBQueryResultSet implements ResultSet {\n \n   private static final String TIMESTAMP_STR = \"Time\";\n+  private static final int TIMESTAMP_STR_LENGTH = 4;\n   private static final int START_INDEX = 2;\n   private static final String VALUE_IS_NULL = \"The value got by %s (column name) is NULL.\";\n+  private static final String EMPTY_STR = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjI5MjU1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/executor/EngineExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzowNjoxNVrOFdNwyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzowNjoxNVrOFdNwyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3ODUwNQ==", "bodyText": "remove unused import", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366178505", "createdAt": "2020-01-14T07:06:15Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/EngineExecutor.java", "diffHunk": "@@ -19,14 +19,19 @@\n package org.apache.iotdb.db.query.executor;\n \n \n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.iotdb.db.exception.StorageEngineException;\n import org.apache.iotdb.db.query.context.QueryContext;\n import org.apache.iotdb.db.query.dataset.EngineDataSetWithValueFilter;\n import org.apache.iotdb.db.query.dataset.NewEngineDataSetWithoutValueFilter;\n+import org.apache.iotdb.db.query.dataset.NonAlignEngineDataSet;\n import org.apache.iotdb.db.query.reader.IReaderByTimestamp;\n import org.apache.iotdb.db.query.reader.ManagedSeriesReader;\n+import org.apache.iotdb.db.query.reader.seriesRelated.RawDataReaderWithoutValueFilter;\n+import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataReaderWithoutValueFilter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjM2MzQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggreResultData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzo0NTowOVrOFdOaRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzo0NTowOVrOFdOaRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE4OTEyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class AggreResultData {\n          \n          \n            \n             public class AggrResultData {", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366189124", "createdAt": "2020-01-14T07:45:09Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggreResultData.java", "diffHunk": "@@ -25,7 +25,6 @@\n \n public class AggreResultData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4e66feb3f1a3b5c79dbff199cb1c06aeddccd2"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MjM3Mzg2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/AbstractDataReader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzo1MDowOFrOFdOgeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzo1MDowOFrOFdOgeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE5MDcxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void unPackOverlappedChunks() throws IOException {\n          \n          \n            \n              private void unpackOverlappedChunks() throws IOException {", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366190714", "createdAt": "2020-01-14T07:50:08Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/AbstractDataReader.java", "diffHunk": "@@ -0,0 +1,514 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.seriesRelated;\n+\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeSet;\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.QueryResourceManager;\n+import org.apache.iotdb.db.query.reader.ManagedSeriesReader;\n+import org.apache.iotdb.db.query.reader.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunkRelated.ChunkDataIterator;\n+import org.apache.iotdb.db.query.reader.chunkRelated.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.file.header.PageHeader;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+/*\n+ * This class implements a pause read method, pseudocode is:\n+ *\n+ *\n+ * while(hasNextChunk()){\n+ *    while(hasNextPage()){\n+ *      while(hasNextBatch()){\n+ *        nextBatch()\n+ *      }\n+ *    }\n+ * }\n+ */\n+public abstract class AbstractDataReader implements ManagedSeriesReader {\n+\n+  private final QueryDataSource queryDataSource;\n+  private final QueryContext context;\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  protected Filter filter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final TreeSet<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new ArrayList<>();\n+  private final TreeSet<ChunkMetaData> unseqChunkMetadatas = new TreeSet<>(\n+      Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private final List<IChunkLoader> openedChunkLoaders = new LinkedList<>();\n+\n+  protected boolean hasCachedNextChunk;\n+  private boolean isCurrentChunkReaderInit;\n+  protected IChunkReader chunkReader;\n+  protected ChunkMetaData chunkMetaData;\n+\n+  protected List<VersionPair<IChunkReader>> overlappedChunkReader = new ArrayList<>();\n+  protected List<VersionPair<IChunkReader>> overlappedPages = new ArrayList<>();\n+\n+  protected boolean hasCachedNextPage;\n+  protected PageHeader currentPage;\n+\n+  private boolean hasCachedNextBatch;\n+  protected PriorityMergeReader priorityMergeReader = new PriorityMergeReader();\n+  private long latestDirectlyOverlappedPageEndTime = Long.MAX_VALUE;\n+\n+  private boolean hasRemaining;\n+  private boolean managedByQueryManager;\n+\n+\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context) throws StorageEngineException, IOException {\n+    queryDataSource = QueryResourceManager.getInstance()\n+        .getQueryDataSource(seriesPath, context);\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = queryDataSource.setTTL(filter);\n+\n+    seqFileResource = queryDataSource.getSeqResources();\n+    unseqFileResource = sortUnSeqFileResources(queryDataSource.getUnseqResources());\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  //for test\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context, QueryDataSource dataSource)\n+      throws IOException {\n+    queryDataSource = dataSource;\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = queryDataSource.setTTL(filter);\n+\n+    seqFileResource = queryDataSource.getSeqResources();\n+    unseqFileResource = sortUnSeqFileResources(queryDataSource.getUnseqResources());\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  //for test\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context, List<TsFileResource> seqResources) throws IOException {\n+    this.queryDataSource = null;\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = filter;\n+\n+    this.seqFileResource = seqResources;\n+    this.unseqFileResource = new TreeSet<>();\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+\n+  protected boolean hasNextChunk() throws IOException {\n+    if (hasCachedNextChunk) {\n+      return true;\n+    }\n+    removeInvalidChunks();\n+    searchMinimumChunk();\n+    //When the new chunk cannot be found, it is time to end all methods\n+    if (!hasCachedNextChunk) {\n+      return false;\n+    }\n+    unpackOverlappedFiles();\n+    unPackOverlappedChunks();\n+    return hasCachedNextChunk;\n+  }\n+\n+\n+  protected boolean hasNextPage() throws IOException {\n+    if (hasCachedNextPage) {\n+      return true;\n+    }\n+    if (!isCurrentChunkReaderInit) {\n+      chunkReader = initChunkReader(chunkMetaData);\n+      isCurrentChunkReaderInit = true;\n+    }\n+    if (chunkReader != null && chunkReader.hasNextSatisfiedPage()) {\n+      fillOverlappedPages();\n+      return hasCachedNextPage;\n+    }\n+\n+    isCurrentChunkReaderInit = false;\n+    chunkMetaData.getChunkLoader().close();\n+    hasCachedNextChunk = hasCachedNextPage;\n+    return hasCachedNextPage;\n+  }\n+\n+\n+  public boolean hasNextBatch() throws IOException {\n+    if (hasCachedNextBatch) {\n+      return true;\n+    }\n+    if (chunkReader.hasNextSatisfiedPage()) {\n+      priorityMergeReader\n+          .addReaderWithPriority(new ChunkDataIterator(chunkReader), chunkMetaData.getVersion());\n+      hasCachedNextBatch = true;\n+    }\n+    for (int i = 0; i < overlappedPages.size(); i++) {\n+      VersionPair<IChunkReader> reader = overlappedPages.get(i);\n+      priorityMergeReader\n+          .addReaderWithPriority(new ChunkDataIterator(reader.data), reader.version);\n+      hasCachedNextBatch = true;\n+    }\n+    overlappedPages.clear();\n+\n+    hasCachedNextPage = hasCachedNextBatch;\n+    return hasCachedNextBatch;\n+  }\n+\n+  public BatchData nextBatch() throws IOException {\n+    if (priorityMergeReader.hasNext()) {\n+      hasCachedNextBatch = false;\n+      return nextOverlappedPage();\n+    }\n+    throw new IOException(\"no next data\");\n+  }\n+\n+\n+  protected BatchData nextOverlappedPage() throws IOException {\n+    BatchData batchData = new BatchData(dataType);\n+    while (priorityMergeReader.hasNext()) {\n+      TimeValuePair timeValuePair = priorityMergeReader.current();\n+      //TODO should add a batchSize to limit the number of reads per time\n+      if (timeValuePair.getTimestamp() > latestDirectlyOverlappedPageEndTime) {\n+        break;\n+      }\n+      batchData.putAnObject(timeValuePair.getTimestamp(), timeValuePair.getValue().getValue());\n+      priorityMergeReader.next();\n+    }\n+    return batchData;\n+  }\n+\n+  private IChunkReader initChunkReader(ChunkMetaData metaData) throws IOException {\n+    if (metaData == null) {\n+      return null;\n+    }\n+    IChunkReader chunkReader;\n+    IChunkLoader chunkLoader = metaData.getChunkLoader();\n+    openedChunkLoaders.add(chunkLoader);\n+    if (chunkLoader instanceof MemChunkLoader) {\n+      MemChunkLoader memChunkLoader = (MemChunkLoader) chunkLoader;\n+      chunkReader = new MemChunkReader(memChunkLoader.getChunk(), filter);\n+    } else {\n+      Chunk chunk = chunkLoader.getChunk(metaData);\n+      chunkReader = new ChunkReader(chunk, filter);\n+      chunkReader.hasNextSatisfiedPage();\n+    }\n+    return chunkReader;\n+  }\n+\n+  private List<ChunkMetaData> loadChunkMetadatas(TsFileResource resource) throws IOException {\n+    List<ChunkMetaData> currentChunkMetaDataList;\n+    if (resource == null) {\n+      return new ArrayList<>();\n+    }\n+    if (resource.isClosed()) {\n+      currentChunkMetaDataList = DeviceMetaDataCache.getInstance().get(resource, seriesPath);\n+    } else {\n+      currentChunkMetaDataList = resource.getChunkMetaDataList();\n+    }\n+    List<Modification> pathModifications = context\n+        .getPathModifications(resource.getModFile(), seriesPath.getFullPath());\n+    for (ChunkMetaData data : currentChunkMetaDataList) {\n+      if (data.getChunkLoader() == null) {\n+        data.setChunkLoader(\n+            new ChunkLoaderImpl(new TsFileSequenceReader(resource.getFile().getAbsolutePath())));\n+      }\n+    }\n+    if (!pathModifications.isEmpty()) {\n+      QueryUtils.modifyChunkMetaData(currentChunkMetaDataList, pathModifications);\n+    }\n+    ReadOnlyMemChunk readOnlyMemChunk = resource.getReadOnlyMemChunk();\n+    if (readOnlyMemChunk != null) {\n+      currentChunkMetaDataList.add(readOnlyMemChunk.getChunkMetaData());\n+    }\n+    return currentChunkMetaDataList;\n+  }\n+\n+  private TreeSet<TsFileResource> sortUnSeqFileResources(List<TsFileResource> tsFileResources) {\n+    TreeSet<TsFileResource> unseqTsFilesSet = new TreeSet<>((o1, o2) -> {\n+      Map<String, Long> startTimeMap = o1.getStartTimeMap();\n+      Long minTimeOfO1 = startTimeMap.get(seriesPath.getDevice());\n+      Map<String, Long> startTimeMap2 = o2.getStartTimeMap();\n+      Long minTimeOfO2 = startTimeMap2.get(seriesPath.getDevice());\n+\n+      return Long.compare(minTimeOfO1, minTimeOfO2);\n+    });\n+    unseqTsFilesSet.addAll(tsFileResources);\n+    return unseqTsFilesSet;\n+  }\n+\n+  @Override\n+  public boolean isManagedByQueryManager() {\n+    return managedByQueryManager;\n+  }\n+\n+  @Override\n+  public void setManagedByQueryManager(boolean managedByQueryManager) {\n+    this.managedByQueryManager = managedByQueryManager;\n+  }\n+\n+  @Override\n+  public boolean hasRemaining() {\n+    return hasRemaining;\n+  }\n+\n+  @Override\n+  public void setHasRemaining(boolean hasRemaining) {\n+    this.hasRemaining = hasRemaining;\n+  }\n+\n+  /**\n+   * Because you get a list of all the files, some files are not necessary when filters exist. This\n+   * method filters out the available data files based on the filter\n+   */\n+  private void removeInvalidFiles() {\n+    //filter seq files\n+    while (filter != null && !seqFileResource.isEmpty()) {\n+      if (!isValid(seqFileResource.get(0))) {\n+        seqFileResource.remove(0);\n+        continue;\n+      }\n+      break;\n+    }\n+    //filter unseq files\n+    while (filter != null && !unseqFileResource.isEmpty()) {\n+      if (!isValid(unseqFileResource.first())) {\n+        unseqFileResource.pollFirst();\n+        continue;\n+      }\n+      break;\n+    }\n+  }\n+\n+  private boolean isValid(TsFileResource tsFileResource) {\n+    long startTime = tsFileResource.getStartTimeMap()\n+        .get(seriesPath.getDevice());\n+    long endTime = tsFileResource.getEndTimeMap()\n+        .getOrDefault(seriesPath.getDevice(), Long.MAX_VALUE);\n+    return filter.satisfyStartEndTime(startTime, endTime);\n+  }\n+\n+  /**\n+   * unseq files are very special files that intersect not only with sequence files, but also with\n+   * other unseq files. So we need to find all tsfiles that overlapped with current chunk and\n+   * extract chunks from the resource.\n+   */\n+  private void unpackOverlappedFiles() throws IOException {\n+    while (!unseqFileResource.isEmpty()) {\n+      Map<String, Long> startTimeMap = unseqFileResource.first().getStartTimeMap();\n+      Long unSeqStartTime = startTimeMap.getOrDefault(seriesPath.getDevice(), Long.MAX_VALUE);\n+      if (chunkMetaData.getEndTime() >= unSeqStartTime) {\n+        unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+        continue;\n+      }\n+      break;\n+    }\n+    while (!seqFileResource.isEmpty()) {\n+      Map<String, Long> startTimeMap = seqFileResource.get(0).getStartTimeMap();\n+      Long seqStartTime = startTimeMap.getOrDefault(seriesPath.getDevice(), Long.MIN_VALUE);\n+      if (chunkMetaData.getEndTime() > seqStartTime) {\n+        seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+        continue;\n+      }\n+      break;\n+    }\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void searchMinimumChunk() {\n+    hasCachedNextChunk = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      chunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      chunkMetaData = unseqChunkMetadatas.pollFirst();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // neither seqChunkMetadatas nor unseqChunkMetadatas is null\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.first().getStartTime()) {\n+        chunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        chunkMetaData = unseqChunkMetadatas.pollFirst();\n+      }\n+    } else {\n+      hasCachedNextChunk = false;\n+    }\n+  }\n+\n+  /**\n+   * Before reading the chunks, should first clean up all the useless chunks, because in the file\n+   * hierarchy, although the files are available, some of the internal chunks are still unavailable\n+   */\n+  private void removeInvalidChunks() throws IOException {\n+    //remove seq chunks\n+    while (filter != null && (!seqChunkMetadatas.isEmpty() || !seqFileResource.isEmpty())) {\n+      while (seqChunkMetadatas.isEmpty() && !seqFileResource.isEmpty()) {\n+        seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+      }\n+\n+      ChunkMetaData metaData = seqChunkMetadatas.get(0);\n+      if (!filter.satisfyStartEndTime(metaData.getStartTime(), metaData.getEndTime())) {\n+        seqChunkMetadatas.remove(0);\n+        continue;\n+      }\n+      break;\n+    }\n+    while (filter != null && (!unseqChunkMetadatas.isEmpty() || !unseqFileResource.isEmpty())) {\n+      while (unseqChunkMetadatas.isEmpty() && !unseqFileResource.isEmpty()) {\n+        unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+      }\n+      ChunkMetaData metaData = unseqChunkMetadatas.first();\n+      if (!filter.satisfyStartEndTime(metaData.getStartTime(), metaData.getEndTime())) {\n+        unseqChunkMetadatas.pollFirst();\n+        continue;\n+      }\n+      break;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  /**\n+   * Because there may be too many files in the scenario used by the user, we cannot open all the\n+   * chunks at once, which may OOM, so we can only fill one file at a time when needed. This\n+   * approach is likely to be ubiquitous, but it keeps the system running smoothly\n+   */\n+  private void tryToFillChunkMetadatas() throws IOException {\n+    while (seqChunkMetadatas.isEmpty() && !seqFileResource.isEmpty()) {\n+      seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+    }\n+    while (unseqChunkMetadatas.isEmpty() && !unseqFileResource.isEmpty()) {\n+      unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+    }\n+  }\n+\n+  /**\n+   * Before calling this method, you should make sure that all the intersecting files are filled in\n+   * the container, because the files intersect, but some chunks may still be useless, so you need\n+   * to clean up all the unused chunks and populate the container. It should be noted that this\n+   * chunk collection is not in order, and all chunks should be used at once\n+   */\n+  private void unPackOverlappedChunks() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4e66feb3f1a3b5c79dbff199cb1c06aeddccd2"}, "originalPosition": 448}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzUzOTc1OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDowNjozN1rOFm4Hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxNjo1MTo0N1rOFnV8FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwOTY3OA==", "bodyText": "typo: \u963b\u585e\u5bf9\u5217", "url": "https://github.com/apache/iotdb/pull/713#discussion_r376309678", "createdAt": "2020-02-07T10:06:37Z", "author": {"login": "wshao08"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()\n+\n+```\n+private void init() throws InterruptedException {\n+\ttimeHeap = new TreeSet<>();\n+\t// \u4e3a\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6784\u5efa\u751f\u4ea7\u8005\u4efb\u52a1\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  ManagedSeriesReader reader = seriesReaderList.get(i);\n+\t  reader.setHasRemaining(true);\n+\t  reader.setManagedByQueryManager(true);\n+\t  pool.submit(new ReadTask(reader, blockingQueueArray[i]));\n+\t}\n+\t// \u521d\u59cb\u5316\u6700\u5c0f\u5806\uff0c\u586b\u5145\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u7f13\u5b58\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  // \u8c03\u7528fillCache(int)\u65b9\u6cd5\u586b\u5145\u7f13\u5b58\n+\t  fillCache(i);\n+\t  // \u5c1d\u8bd5\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5f53\u524d\u6700\u5c0f\u65f6\u95f4\u6233\u653e\u8fdb\u5806\u4e2d\n+\t  if (cachedBatchDataArray[i] != null && cachedBatchDataArray[i].hasCurrent()) {\n+\t    long time = cachedBatchDataArray[i].currentTime();\n+\t    timeHeap.add(time);\n+\t  }\n+\t}\n+}\n+```\n+\n+####  fillCache(int)\n+\n+\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4ece\u963b\u585e\u961f\u5217\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u5e76\u586b\u5145\u7f13\u5b58\uff0c\u5177\u4f53\u903b\u8f91\u89c1\u4e0b\u6587\u6ce8\u91ca\n+\n+```\n+private void fillCache(int seriesIndex) throws InterruptedException {\n+    // \u4ece\u963b\u585e\u961f\u5217\u4e2d\u62ff\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5219\u4f1a\u963b\u585e\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u6570\u636e\n+\tBatchData batchData = blockingQueueArray[seriesIndex].take();\n+\t// \u5982\u679c\u662f\u4e00\u4e2a\u4fe1\u53f7BatchData\uff0c\u5219\u5c06\u76f8\u5e94\u65f6\u95f4\u5e8f\u5217\u7684oMoreDataInQueue\u7f6e\u4e3afalse\n+\tif (batchData instanceof SignalBatchData) {\n+\t  noMoreDataInQueueArray[seriesIndex] = true;\n+\t}\n+\telse {\n+\t  // \u5c06\u53d6\u51fa\u7684BatchData\u653e\u8fdbcachedBatchDataArray\u7f13\u5b58\u8d77\u6765\n+\t  cachedBatchDataArray[seriesIndex] = batchData;\n+\t\n+\t  // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u4e0e\u751f\u4ea7\u8005\u4efb\u52a1\u90a3\u8fb9\u4e00\u6837\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+\t  synchronized (seriesReaderList.get(seriesIndex)) {\n+\t    // \u53ea\u6709\u5f53\u963b\u585e\u5bf9\u5217\u4e0d\u6ee1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u9700\u8981\u5224\u65ad\u662f\u4e0d\u662f\u9700\u8981\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\uff0c\u8fd9\u91cc\u4e5f\u4fdd\u8bc1\u4e86\u751f\u4ea7\u8005\u4efb\u52a1\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5f53\u4e14\u4ec5\u5f53\u963b\u585e\u961f\u5217\u4e0d\u6ee1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9501fcdeea74164e61589fda1123685505b2c6e2"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc5ODIyOA==", "bodyText": "Fixed. Thx.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r376798228", "createdAt": "2020-02-09T16:51:47Z", "author": {"login": "jack870131"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()\n+\n+```\n+private void init() throws InterruptedException {\n+\ttimeHeap = new TreeSet<>();\n+\t// \u4e3a\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6784\u5efa\u751f\u4ea7\u8005\u4efb\u52a1\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  ManagedSeriesReader reader = seriesReaderList.get(i);\n+\t  reader.setHasRemaining(true);\n+\t  reader.setManagedByQueryManager(true);\n+\t  pool.submit(new ReadTask(reader, blockingQueueArray[i]));\n+\t}\n+\t// \u521d\u59cb\u5316\u6700\u5c0f\u5806\uff0c\u586b\u5145\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u7f13\u5b58\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  // \u8c03\u7528fillCache(int)\u65b9\u6cd5\u586b\u5145\u7f13\u5b58\n+\t  fillCache(i);\n+\t  // \u5c1d\u8bd5\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5f53\u524d\u6700\u5c0f\u65f6\u95f4\u6233\u653e\u8fdb\u5806\u4e2d\n+\t  if (cachedBatchDataArray[i] != null && cachedBatchDataArray[i].hasCurrent()) {\n+\t    long time = cachedBatchDataArray[i].currentTime();\n+\t    timeHeap.add(time);\n+\t  }\n+\t}\n+}\n+```\n+\n+####  fillCache(int)\n+\n+\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4ece\u963b\u585e\u961f\u5217\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u5e76\u586b\u5145\u7f13\u5b58\uff0c\u5177\u4f53\u903b\u8f91\u89c1\u4e0b\u6587\u6ce8\u91ca\n+\n+```\n+private void fillCache(int seriesIndex) throws InterruptedException {\n+    // \u4ece\u963b\u585e\u961f\u5217\u4e2d\u62ff\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5219\u4f1a\u963b\u585e\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u6570\u636e\n+\tBatchData batchData = blockingQueueArray[seriesIndex].take();\n+\t// \u5982\u679c\u662f\u4e00\u4e2a\u4fe1\u53f7BatchData\uff0c\u5219\u5c06\u76f8\u5e94\u65f6\u95f4\u5e8f\u5217\u7684oMoreDataInQueue\u7f6e\u4e3afalse\n+\tif (batchData instanceof SignalBatchData) {\n+\t  noMoreDataInQueueArray[seriesIndex] = true;\n+\t}\n+\telse {\n+\t  // \u5c06\u53d6\u51fa\u7684BatchData\u653e\u8fdbcachedBatchDataArray\u7f13\u5b58\u8d77\u6765\n+\t  cachedBatchDataArray[seriesIndex] = batchData;\n+\t\n+\t  // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u4e0e\u751f\u4ea7\u8005\u4efb\u52a1\u90a3\u8fb9\u4e00\u6837\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+\t  synchronized (seriesReaderList.get(seriesIndex)) {\n+\t    // \u53ea\u6709\u5f53\u963b\u585e\u5bf9\u5217\u4e0d\u6ee1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u9700\u8981\u5224\u65ad\u662f\u4e0d\u662f\u9700\u8981\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\uff0c\u8fd9\u91cc\u4e5f\u4fdd\u8bc1\u4e86\u751f\u4ea7\u8005\u4efb\u52a1\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5f53\u4e14\u4ec5\u5f53\u963b\u585e\u961f\u5217\u4e0d\u6ee1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwOTY3OA=="}, "originalCommit": {"oid": "9501fcdeea74164e61589fda1123685505b2c6e2"}, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTExOTY2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMToyOTo0MlrOFnYXMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMToyOTo0MlrOFnYXMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzNzkzOA==", "bodyText": "If upper level use this method without check seriesReader.isPageOverlapped(). This may cause a problem. Maybe we should check this and then do the work", "url": "https://github.com/apache/iotdb/pull/713#discussion_r376837938", "createdAt": "2020-02-10T01:29:42Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.FileReaderManager;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TestOnly;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.IPageReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class SeriesReader {\n+\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  private final QueryContext context;\n+  private final Filter timeFilter;\n+  private final Filter valueFilter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final PriorityQueue<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new LinkedList<>();\n+  private final PriorityQueue<ChunkMetaData> unseqChunkMetadatas =\n+      new PriorityQueue<>(Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private boolean hasCachedFirstChunkMetadata;\n+  private ChunkMetaData firstChunkMetaData;\n+\n+  private PriorityQueue<VersionPair<IPageReader>> overlappedPageReaders =\n+      new PriorityQueue<>(\n+          Comparator.comparingLong(pageReader -> pageReader.data.getStatistics().getStartTime()));\n+\n+  private PriorityMergeReader mergeReader = new PriorityMergeReader();\n+\n+  private boolean hasCachedNextBatch;\n+  private BatchData cachedBatchData;\n+\n+\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+  @TestOnly\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+\n+  public boolean hasNextChunk() throws IOException {\n+    if (hasCachedFirstChunkMetadata) {\n+      return true;\n+    }\n+    // init first chunk metadata whose startTime is minimum\n+    tryToInitFirstChunk();\n+\n+    return hasCachedFirstChunkMetadata;\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void tryToInitFirstChunk() throws IOException {\n+    tryToFillChunkMetadatas();\n+    hasCachedFirstChunkMetadata = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      // only has seq\n+      firstChunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      // only has unseq\n+      firstChunkMetaData = unseqChunkMetadatas.poll();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // has seq and unseq\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.peek().getStartTime()) {\n+        firstChunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        firstChunkMetaData = unseqChunkMetadatas.poll();\n+      }\n+    } else {\n+      // no seq nor unseq\n+      hasCachedFirstChunkMetadata = false;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  public boolean isChunkOverlapped() {\n+    Statistics chunkStatistics = firstChunkMetaData.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentChunkStatistics() {\n+    return firstChunkMetaData.getStatistics();\n+  }\n+\n+  public void skipCurrentChunk() {\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  public boolean hasNextPage() throws IOException {\n+    if (!overlappedPageReaders.isEmpty()) {\n+      return true;\n+    }\n+\n+    fillOverlappedPageReaders();\n+\n+    return !overlappedPageReaders.isEmpty();\n+  }\n+\n+  private void fillOverlappedPageReaders() throws IOException {\n+    if (!hasCachedFirstChunkMetadata) {\n+      return;\n+    }\n+    unpackOneChunkMetaData(firstChunkMetaData);\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  private void unpackOneChunkMetaData(ChunkMetaData chunkMetaData) throws IOException {\n+    initChunkReader(chunkMetaData)\n+        .getPageReaderList()\n+        .forEach(\n+            pageReader ->\n+                overlappedPageReaders.add(\n+                    new VersionPair(chunkMetaData.getVersion(), pageReader)));\n+  }\n+\n+\n+  protected BatchData nextPage() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31a856b7ed3d4908712424b6075a0d347c2fb77"}, "originalPosition": 189}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjY4OTMxOnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1ODowMFrOFnm-Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzozMDo1NFrOFn8trg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NzMxNA==", "bodyText": "Why is this statement always false here?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377077314", "createdAt": "2020-02-10T13:58:00Z", "author": {"login": "LeiRui"}, "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import static org.apache.iotdb.db.conf.IoTDBConstant.PATH_SEPARATOR;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n+import org.apache.iotdb.db.exception.path.PathException;\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.factory.AggreResultFactory;\n+import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SeriesAggregateReaderTest {\n+\n+  private static final String SERIES_READER_TEST_SG = \"root.seriesReaderTest\";\n+  private List<String> deviceIds = new ArrayList<>();\n+  private List<MeasurementSchema> measurementSchemas = new ArrayList<>();\n+\n+  private List<TsFileResource> seqResources = new ArrayList<>();\n+  private List<TsFileResource> unseqResources = new ArrayList<>();\n+\n+\n+  @Before\n+  public void setUp() throws MetadataException, PathException, IOException, WriteProcessException {\n+    SeriesReaderTestUtil.setUp(measurementSchemas, deviceIds, seqResources, unseqResources);\n+  }\n+\n+  @After\n+  public void tearDown() throws IOException, StorageEngineException {\n+    SeriesReaderTestUtil.tearDown(seqResources, unseqResources);\n+  }\n+\n+  @Test\n+  public void aggregateTest() {\n+    try {\n+      Path path = new Path(SERIES_READER_TEST_SG + PATH_SEPARATOR + \"device0\", \"sensor0\");\n+      QueryDataSource queryDataSource = new QueryDataSource(path, seqResources, unseqResources);\n+      SeriesAggregateReader seriesReader = new SeriesAggregateReader(path, TSDataType.INT32,\n+          new QueryContext(), queryDataSource, null, null);\n+      AggregateResult aggregateResult = AggreResultFactory\n+          .getAggrResultByName(\"count\", TSDataType.INT32);\n+      while (seriesReader.hasNextChunk()) {\n+        if (seriesReader.canUseCurrentChunkStatistics()) {\n+          Statistics chunkStatistics = seriesReader.currentChunkStatistics();\n+          aggregateResult.updateResultFromStatistics(chunkStatistics);\n+          seriesReader.skipCurrentChunk();\n+          continue;\n+        }\n+        int loopTime = 0;\n+        while (seriesReader.hasNextPage()) {\n+          if (seriesReader.canUseCurrentPageStatistics()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExMDc2OQ==", "bodyText": "Because there is only one page in a chunk of his test data, the non-overlapped pages will re-enter the chunk layer to judge once and then the are calculated directly using chunkMetaData.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377110769", "createdAt": "2020-02-10T14:54:07Z", "author": {"login": "liutaohua"}, "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import static org.apache.iotdb.db.conf.IoTDBConstant.PATH_SEPARATOR;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n+import org.apache.iotdb.db.exception.path.PathException;\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.factory.AggreResultFactory;\n+import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SeriesAggregateReaderTest {\n+\n+  private static final String SERIES_READER_TEST_SG = \"root.seriesReaderTest\";\n+  private List<String> deviceIds = new ArrayList<>();\n+  private List<MeasurementSchema> measurementSchemas = new ArrayList<>();\n+\n+  private List<TsFileResource> seqResources = new ArrayList<>();\n+  private List<TsFileResource> unseqResources = new ArrayList<>();\n+\n+\n+  @Before\n+  public void setUp() throws MetadataException, PathException, IOException, WriteProcessException {\n+    SeriesReaderTestUtil.setUp(measurementSchemas, deviceIds, seqResources, unseqResources);\n+  }\n+\n+  @After\n+  public void tearDown() throws IOException, StorageEngineException {\n+    SeriesReaderTestUtil.tearDown(seqResources, unseqResources);\n+  }\n+\n+  @Test\n+  public void aggregateTest() {\n+    try {\n+      Path path = new Path(SERIES_READER_TEST_SG + PATH_SEPARATOR + \"device0\", \"sensor0\");\n+      QueryDataSource queryDataSource = new QueryDataSource(path, seqResources, unseqResources);\n+      SeriesAggregateReader seriesReader = new SeriesAggregateReader(path, TSDataType.INT32,\n+          new QueryContext(), queryDataSource, null, null);\n+      AggregateResult aggregateResult = AggreResultFactory\n+          .getAggrResultByName(\"count\", TSDataType.INT32);\n+      while (seriesReader.hasNextChunk()) {\n+        if (seriesReader.canUseCurrentChunkStatistics()) {\n+          Statistics chunkStatistics = seriesReader.currentChunkStatistics();\n+          aggregateResult.updateResultFromStatistics(chunkStatistics);\n+          seriesReader.skipCurrentChunk();\n+          continue;\n+        }\n+        int loopTime = 0;\n+        while (seriesReader.hasNextPage()) {\n+          if (seriesReader.canUseCurrentPageStatistics()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NzMxNA=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQyNTAzMQ==", "bodyText": "Then this test should be fixed.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377425031", "createdAt": "2020-02-11T02:41:22Z", "author": {"login": "LeiRui"}, "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import static org.apache.iotdb.db.conf.IoTDBConstant.PATH_SEPARATOR;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n+import org.apache.iotdb.db.exception.path.PathException;\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.factory.AggreResultFactory;\n+import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SeriesAggregateReaderTest {\n+\n+  private static final String SERIES_READER_TEST_SG = \"root.seriesReaderTest\";\n+  private List<String> deviceIds = new ArrayList<>();\n+  private List<MeasurementSchema> measurementSchemas = new ArrayList<>();\n+\n+  private List<TsFileResource> seqResources = new ArrayList<>();\n+  private List<TsFileResource> unseqResources = new ArrayList<>();\n+\n+\n+  @Before\n+  public void setUp() throws MetadataException, PathException, IOException, WriteProcessException {\n+    SeriesReaderTestUtil.setUp(measurementSchemas, deviceIds, seqResources, unseqResources);\n+  }\n+\n+  @After\n+  public void tearDown() throws IOException, StorageEngineException {\n+    SeriesReaderTestUtil.tearDown(seqResources, unseqResources);\n+  }\n+\n+  @Test\n+  public void aggregateTest() {\n+    try {\n+      Path path = new Path(SERIES_READER_TEST_SG + PATH_SEPARATOR + \"device0\", \"sensor0\");\n+      QueryDataSource queryDataSource = new QueryDataSource(path, seqResources, unseqResources);\n+      SeriesAggregateReader seriesReader = new SeriesAggregateReader(path, TSDataType.INT32,\n+          new QueryContext(), queryDataSource, null, null);\n+      AggregateResult aggregateResult = AggreResultFactory\n+          .getAggrResultByName(\"count\", TSDataType.INT32);\n+      while (seriesReader.hasNextChunk()) {\n+        if (seriesReader.canUseCurrentChunkStatistics()) {\n+          Statistics chunkStatistics = seriesReader.currentChunkStatistics();\n+          aggregateResult.updateResultFromStatistics(chunkStatistics);\n+          seriesReader.skipCurrentChunk();\n+          continue;\n+        }\n+        int loopTime = 0;\n+        while (seriesReader.hasNextPage()) {\n+          if (seriesReader.canUseCurrentPageStatistics()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NzMxNA=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzMzUxOA==", "bodyText": "Sorry @LeiRui , it's my fault. I have fixed this test in the latest commit. Thanks for your further review!", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377433518", "createdAt": "2020-02-11T03:30:54Z", "author": {"login": "samperson1997"}, "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import static org.apache.iotdb.db.conf.IoTDBConstant.PATH_SEPARATOR;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n+import org.apache.iotdb.db.exception.path.PathException;\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.factory.AggreResultFactory;\n+import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SeriesAggregateReaderTest {\n+\n+  private static final String SERIES_READER_TEST_SG = \"root.seriesReaderTest\";\n+  private List<String> deviceIds = new ArrayList<>();\n+  private List<MeasurementSchema> measurementSchemas = new ArrayList<>();\n+\n+  private List<TsFileResource> seqResources = new ArrayList<>();\n+  private List<TsFileResource> unseqResources = new ArrayList<>();\n+\n+\n+  @Before\n+  public void setUp() throws MetadataException, PathException, IOException, WriteProcessException {\n+    SeriesReaderTestUtil.setUp(measurementSchemas, deviceIds, seqResources, unseqResources);\n+  }\n+\n+  @After\n+  public void tearDown() throws IOException, StorageEngineException {\n+    SeriesReaderTestUtil.tearDown(seqResources, unseqResources);\n+  }\n+\n+  @Test\n+  public void aggregateTest() {\n+    try {\n+      Path path = new Path(SERIES_READER_TEST_SG + PATH_SEPARATOR + \"device0\", \"sensor0\");\n+      QueryDataSource queryDataSource = new QueryDataSource(path, seqResources, unseqResources);\n+      SeriesAggregateReader seriesReader = new SeriesAggregateReader(path, TSDataType.INT32,\n+          new QueryContext(), queryDataSource, null, null);\n+      AggregateResult aggregateResult = AggreResultFactory\n+          .getAggrResultByName(\"count\", TSDataType.INT32);\n+      while (seriesReader.hasNextChunk()) {\n+        if (seriesReader.canUseCurrentChunkStatistics()) {\n+          Statistics chunkStatistics = seriesReader.currentChunkStatistics();\n+          aggregateResult.updateResultFromStatistics(chunkStatistics);\n+          seriesReader.skipCurrentChunk();\n+          continue;\n+        }\n+        int loopTime = 0;\n+        while (seriesReader.hasNextPage()) {\n+          if (seriesReader.canUseCurrentPageStatistics()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NzMxNA=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgxMzkzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozNjowMlrOFn7coQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzoxMzoyMFrOFn8hrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMjc2OQ==", "bodyText": "OrFilter :=Filter && Filter?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377412769", "createdAt": "2020-02-11T01:36:02Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzMDQ0NA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377430444", "createdAt": "2020-02-11T03:13:20Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMjc2OQ=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgxNjU5OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozODowMlrOFn7eQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzoxNjoxNVrOFn8jrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzE4Nw==", "bodyText": "\u8bed\u53e5\u4e0d\u901a\uff1a\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413187", "createdAt": "2020-02-11T01:38:02Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzMDk1OA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377430958", "createdAt": "2020-02-11T03:16:15Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzE4Nw=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgxOTA3OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MDowNlrOFn7fyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzoxODowOVrOFn8k_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzU3OA==", "bodyText": "\u5efa\u8bae\u4fee\u6539\u4e3a\uff1a\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u67e5\u8be2\u65f6\u95f4\u5e8f\u5217\u8fd4\u56de\u7684\u6570\u636e\u70b9", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413578", "createdAt": "2020-02-11T01:40:06Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzMTI5Mg==", "bodyText": "\u4e00\u4e2a SingleSeriesExpression \u4e0d\u662f\u6570\u636e\u70b9\uff0c\u662f\u4e00\u4e2a\u8c13\u8bcd\u903b\u8f91\uff0c\u8fd9\u53e5\u8bdd\u5e94\u8be5\u6ca1\u95ee\u9898", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377431292", "createdAt": "2020-02-11T03:18:09Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzU3OA=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgyMTMwOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MTo0MVrOFn7hCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MTo0MVrOFn7hCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzg5OA==", "bodyText": "\u5efa\u8bae\uff1a\u4fee\u6539\u4e3a\u67e5\u8be2\u8fd4\u56de\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413898", "createdAt": "2020-02-11T01:41:41Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgyNDMwOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0Mzo0OFrOFn7ixg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo0NDoyM1rOFn-npQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDM0Mg==", "bodyText": "OrExpression := Filter && Filter\uff1f", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377414342", "createdAt": "2020-02-11T01:43:48Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NDc0MQ==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377464741", "createdAt": "2020-02-11T06:44:23Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDM0Mg=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgyNjkzOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0NjoxMlrOFn7kZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo0NjozNlrOFn-pgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDc1OQ==", "bodyText": "\u8868\u8fbe\u6b20\u59a5\uff1aIExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377414759", "createdAt": "2020-02-11T01:46:12Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTIxNg==", "bodyText": "\u6539\u6210\u4e86\uff1a IExpression \u4e3a\u67e5\u8be2\u8fc7\u6ee4\u6761\u4ef6", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377465216", "createdAt": "2020-02-11T06:46:36Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDc1OQ=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgzMTE0OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0OToyMlrOFn7m2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo0OTowOVrOFn-rrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTM4Nw==", "bodyText": "\u6761\u4ef61\uff1aIExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377415387", "createdAt": "2020-02-11T01:49:22Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTc3NA==", "bodyText": "\u5e94\u8be5\u662f\u6761\u4ef6 2\uff0cfixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377465774", "createdAt": "2020-02-11T06:49:09Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTM4Nw=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgzMjc5OnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1MTowMVrOFn7n4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo0OToxOVrOFn-ryA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTY1MQ==", "bodyText": "\u8fd9\u91cc\u4e0e\u524d\u8ff0\u7684\u6761\u4ef6\u4e5f\u660e\u663e\u4e0d\u7b26", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377415651", "createdAt": "2020-02-11T01:51:01Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NTgwMA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377465800", "createdAt": "2020-02-11T06:49:19Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTY1MQ=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 210}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDgzNTIyOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1Mjo1N1rOFn7pSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo1MDo0M1rOFn-s1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNjAwOQ==", "bodyText": "\u8fd9\u5c31\u6709\u4e9b\u5947\u602a\u4e86\uff0c\u4e0d\u80fd\u6267\u884c\u7684\u8bdd\u4e3a\u4ec0\u4e48\u628a\u8fd9\u5f53\u505a\u8303\u4f8b\u653e\u5230\u4e86184\u884c", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377416009", "createdAt": "2020-02-11T01:52:57Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62\n+\n+-----------------------\n+\u4f8b3\uff1a\n+\n+    IExpression(\n+        AndExpression\n+            GlobalTimeExpression (time > 14152176545)\n+            GlobalTimeExpression (time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u4f46\u5176\u4e2d\u5305\u542b\u4e86 GlobalTimeExpression\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef63\n+\n+--------------------------\n+\n+\u4f8b4\uff1a\n+\n+    IExpression(\n+        OrExpression\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        SingleSeriesExpression(\u201cd1.s3\u201d, value > \u201ctest\u201d && value < \u201ctest100\u201d)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4f5c\u4e3a\u4e00\u4e2a OrExpression\uff0c\u5176\u4e2d\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef64.\n+\n+----------------------------\n+\n+\u4f8b5\uff1a\n+\n+    IExpression(\n+        AndExpression        \n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+            GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 253}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NjA2OQ==", "bodyText": "\u8fd9\u4e2a\u4e0d\u80fd\u76f4\u63a5\u6267\u884c\uff0c\u4f46\u662f\u7ecf\u8fc7\u4f18\u5316\u4e4b\u540e\u5c31\u53ef\u4ee5\u6267\u884c\u4e86\u3002", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377466069", "createdAt": "2020-02-11T06:50:43Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62\n+\n+-----------------------\n+\u4f8b3\uff1a\n+\n+    IExpression(\n+        AndExpression\n+            GlobalTimeExpression (time > 14152176545)\n+            GlobalTimeExpression (time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u4f46\u5176\u4e2d\u5305\u542b\u4e86 GlobalTimeExpression\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef63\n+\n+--------------------------\n+\n+\u4f8b4\uff1a\n+\n+    IExpression(\n+        OrExpression\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        SingleSeriesExpression(\u201cd1.s3\u201d, value > \u201ctest\u201d && value < \u201ctest100\u201d)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4f5c\u4e3a\u4e00\u4e2a OrExpression\uff0c\u5176\u4e2d\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef64.\n+\n+----------------------------\n+\n+\u4f8b5\uff1a\n+\n+    IExpression(\n+        AndExpression        \n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+            GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNjAwOQ=="}, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 253}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDk4MjgxOnYy", "diffSide": "RIGHT", "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowMjo1OVrOFn9BUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNjo1MToyNFrOFn-tWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzODU0NA==", "bodyText": "\u51fd\u6570\u540d\u4e3ainit()", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377438544", "createdAt": "2020-02-11T04:02:59Z", "author": {"login": "wshao08"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a937845746772532aa72c8e09068a7de6ac14f3a"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2NjIwMA==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377466200", "createdAt": "2020-02-11T06:51:24Z", "author": {"login": "qiaojialin"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzODU0NA=="}, "originalCommit": {"oid": "a937845746772532aa72c8e09068a7de6ac14f3a"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODU0ODgwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMTozNzo1MlrOFofKSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjoyODozN1rOFqXGYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5Nzg5OA==", "bodyText": "OOM error may appear in this method. The reason is if many pages are over lapped, returned batch data will be very large.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377997898", "createdAt": "2020-02-12T01:37:52Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.FileReaderManager;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TestOnly;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.IPageReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class SeriesReader {\n+\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  private final QueryContext context;\n+  private final Filter timeFilter;\n+  private final Filter valueFilter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final PriorityQueue<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new LinkedList<>();\n+  private final PriorityQueue<ChunkMetaData> unseqChunkMetadatas =\n+      new PriorityQueue<>(Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private boolean hasCachedFirstChunkMetadata;\n+  private ChunkMetaData firstChunkMetaData;\n+\n+  private PriorityQueue<VersionPair<IPageReader>> overlappedPageReaders =\n+      new PriorityQueue<>(\n+          Comparator.comparingLong(pageReader -> pageReader.data.getStatistics().getStartTime()));\n+\n+  private PriorityMergeReader mergeReader = new PriorityMergeReader();\n+\n+  private boolean hasCachedNextBatch;\n+  private BatchData cachedBatchData;\n+\n+\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+  @TestOnly\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+\n+  public boolean hasNextChunk() throws IOException {\n+    if (hasCachedFirstChunkMetadata) {\n+      return true;\n+    }\n+    // init first chunk metadata whose startTime is minimum\n+    tryToInitFirstChunk();\n+\n+    return hasCachedFirstChunkMetadata;\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void tryToInitFirstChunk() throws IOException {\n+    tryToFillChunkMetadatas();\n+    hasCachedFirstChunkMetadata = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      // only has seq\n+      firstChunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      // only has unseq\n+      firstChunkMetaData = unseqChunkMetadatas.poll();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // has seq and unseq\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.peek().getStartTime()) {\n+        firstChunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        firstChunkMetaData = unseqChunkMetadatas.poll();\n+      }\n+    } else {\n+      // no seq nor unseq\n+      hasCachedFirstChunkMetadata = false;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  public boolean isChunkOverlapped() {\n+    Statistics chunkStatistics = firstChunkMetaData.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentChunkStatistics() {\n+    return firstChunkMetaData.getStatistics();\n+  }\n+\n+  public void skipCurrentChunk() {\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  public boolean hasNextPage() throws IOException {\n+    if (!overlappedPageReaders.isEmpty()) {\n+      return true;\n+    }\n+\n+    fillOverlappedPageReaders();\n+\n+    return !overlappedPageReaders.isEmpty();\n+  }\n+\n+  private void fillOverlappedPageReaders() throws IOException {\n+    if (!hasCachedFirstChunkMetadata) {\n+      return;\n+    }\n+    unpackOneChunkMetaData(firstChunkMetaData);\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  private void unpackOneChunkMetaData(ChunkMetaData chunkMetaData) throws IOException {\n+    initChunkReader(chunkMetaData)\n+        .getPageReaderList()\n+        .forEach(\n+            pageReader ->\n+                overlappedPageReaders.add(\n+                    new VersionPair(chunkMetaData.getVersion(), pageReader)));\n+  }\n+\n+\n+  protected BatchData nextPage() throws IOException {\n+    BatchData pageData = Objects\n+        .requireNonNull(overlappedPageReaders.poll().data, \"No Batch data\")\n+        .getAllSatisfiedPageData();\n+    // only need to consider valueFilter because timeFilter has been set into the page reader\n+    if (valueFilter == null) {\n+      return pageData;\n+    }\n+    BatchData batchData = new BatchData(pageData.getDataType());\n+    while (pageData.hasCurrent()) {\n+      if (valueFilter.satisfy(pageData.currentTime(), pageData.currentValue())) {\n+        batchData.putAnObject(pageData.currentTime(), pageData.currentValue());\n+      }\n+      pageData.next();\n+    }\n+    return batchData;\n+  }\n+\n+  protected boolean isPageOverlapped() {\n+    Statistics pageStatistics = overlappedPageReaders.peek().data.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentPageStatistics() throws IOException {\n+    if (overlappedPageReaders.isEmpty() || overlappedPageReaders.peek().data == null) {\n+      throw new IOException(\"No next page statistics.\");\n+    }\n+    return overlappedPageReaders.peek().data.getStatistics();\n+  }\n+\n+  public void skipCurrentPage() {\n+    overlappedPageReaders.poll();\n+  }\n+\n+  public boolean hasNextOverlappedPage() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28cd4a276713fea6d694146b5e90d073bc6813a"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2Mjk3OQ==", "bodyText": "Hi, I created a jira to do this in the future.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379962979", "createdAt": "2020-02-17T02:28:37Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.FileReaderManager;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TestOnly;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.IPageReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class SeriesReader {\n+\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  private final QueryContext context;\n+  private final Filter timeFilter;\n+  private final Filter valueFilter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final PriorityQueue<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new LinkedList<>();\n+  private final PriorityQueue<ChunkMetaData> unseqChunkMetadatas =\n+      new PriorityQueue<>(Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private boolean hasCachedFirstChunkMetadata;\n+  private ChunkMetaData firstChunkMetaData;\n+\n+  private PriorityQueue<VersionPair<IPageReader>> overlappedPageReaders =\n+      new PriorityQueue<>(\n+          Comparator.comparingLong(pageReader -> pageReader.data.getStatistics().getStartTime()));\n+\n+  private PriorityMergeReader mergeReader = new PriorityMergeReader();\n+\n+  private boolean hasCachedNextBatch;\n+  private BatchData cachedBatchData;\n+\n+\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+  @TestOnly\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+\n+  public boolean hasNextChunk() throws IOException {\n+    if (hasCachedFirstChunkMetadata) {\n+      return true;\n+    }\n+    // init first chunk metadata whose startTime is minimum\n+    tryToInitFirstChunk();\n+\n+    return hasCachedFirstChunkMetadata;\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void tryToInitFirstChunk() throws IOException {\n+    tryToFillChunkMetadatas();\n+    hasCachedFirstChunkMetadata = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      // only has seq\n+      firstChunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      // only has unseq\n+      firstChunkMetaData = unseqChunkMetadatas.poll();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // has seq and unseq\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.peek().getStartTime()) {\n+        firstChunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        firstChunkMetaData = unseqChunkMetadatas.poll();\n+      }\n+    } else {\n+      // no seq nor unseq\n+      hasCachedFirstChunkMetadata = false;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  public boolean isChunkOverlapped() {\n+    Statistics chunkStatistics = firstChunkMetaData.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentChunkStatistics() {\n+    return firstChunkMetaData.getStatistics();\n+  }\n+\n+  public void skipCurrentChunk() {\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  public boolean hasNextPage() throws IOException {\n+    if (!overlappedPageReaders.isEmpty()) {\n+      return true;\n+    }\n+\n+    fillOverlappedPageReaders();\n+\n+    return !overlappedPageReaders.isEmpty();\n+  }\n+\n+  private void fillOverlappedPageReaders() throws IOException {\n+    if (!hasCachedFirstChunkMetadata) {\n+      return;\n+    }\n+    unpackOneChunkMetaData(firstChunkMetaData);\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  private void unpackOneChunkMetaData(ChunkMetaData chunkMetaData) throws IOException {\n+    initChunkReader(chunkMetaData)\n+        .getPageReaderList()\n+        .forEach(\n+            pageReader ->\n+                overlappedPageReaders.add(\n+                    new VersionPair(chunkMetaData.getVersion(), pageReader)));\n+  }\n+\n+\n+  protected BatchData nextPage() throws IOException {\n+    BatchData pageData = Objects\n+        .requireNonNull(overlappedPageReaders.poll().data, \"No Batch data\")\n+        .getAllSatisfiedPageData();\n+    // only need to consider valueFilter because timeFilter has been set into the page reader\n+    if (valueFilter == null) {\n+      return pageData;\n+    }\n+    BatchData batchData = new BatchData(pageData.getDataType());\n+    while (pageData.hasCurrent()) {\n+      if (valueFilter.satisfy(pageData.currentTime(), pageData.currentValue())) {\n+        batchData.putAnObject(pageData.currentTime(), pageData.currentValue());\n+      }\n+      pageData.next();\n+    }\n+    return batchData;\n+  }\n+\n+  protected boolean isPageOverlapped() {\n+    Statistics pageStatistics = overlappedPageReaders.peek().data.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentPageStatistics() throws IOException {\n+    if (overlappedPageReaders.isEmpty() || overlappedPageReaders.peek().data == null) {\n+      throw new IOException(\"No next page statistics.\");\n+    }\n+    return overlappedPageReaders.peek().data.getStatistics();\n+  }\n+\n+  public void skipCurrentPage() {\n+    overlappedPageReaders.poll();\n+  }\n+\n+  public boolean hasNextOverlappedPage() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5Nzg5OA=="}, "originalCommit": {"oid": "f28cd4a276713fea6d694146b5e90d073bc6813a"}, "originalPosition": 227}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTExNjkwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0OToyMFrOFokdJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjozMTo0MVrOFqXIOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NDY0Nw==", "bodyText": "May be we should use result rather than Ret. When I first look at this name, I think it is return rather than result", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378084647", "createdAt": "2020-02-12T07:49:20Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2MzQ1MA==", "bodyText": "fixed to booleanValue", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379963450", "createdAt": "2020-02-17T02:31:41Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NDY0Nw=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEyNDcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairInMemTable.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo1Mjo1N1rOFokh8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjozMzo1MVrOFqXJvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NTg3Mw==", "bodyText": "I have a question. Why we need this class? This class's methods are identical with TimeValuePair. Could we just use TimeValuePair?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378085873", "createdAt": "2020-02-12T07:52:57Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairInMemTable.java", "diffHunk": "@@ -20,7 +20,7 @@\n \n import java.util.Objects;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n import org.apache.iotdb.tsfile.utils.TsPrimitiveType;\n \n public class TimeValuePairInMemTable extends TimeValuePair {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2MzgzNg==", "bodyText": "Hi, we didn't even notice there exist such a class, I have removed it.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379963836", "createdAt": "2020-02-17T02:33:51Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairInMemTable.java", "diffHunk": "@@ -20,7 +20,7 @@\n \n import java.util.Objects;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n import org.apache.iotdb.tsfile.utils.TsPrimitiveType;\n \n public class TimeValuePairInMemTable extends TimeValuePair {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NTg3Mw=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEzMDcyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairSorter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo1NToyOVrOFokldQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjozNDozMVrOFqXKJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4Njc3Mw==", "bodyText": "This class is unused. Remove it or give an explanation.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378086773", "createdAt": "2020-02-12T07:55:29Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairSorter.java", "diffHunk": "@@ -21,7 +21,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n \n public interface TimeValuePairSorter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2Mzk0MA==", "bodyText": "already removed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379963940", "createdAt": "2020-02-17T02:34:31Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairSorter.java", "diffHunk": "@@ -21,7 +21,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n \n public interface TimeValuePairSorter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4Njc3Mw=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTE0NTM1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/impl/AvgAggrResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODowMToyM1rOFokuIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwNDozNzowOVrOFqYS2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4ODk5NA==", "bodyText": "The sum value here may overflow when we query large number of data. May be we should use this method to update:\navg(n + 1) = avg(n) * (n / n + 1) + (1 / n + 1) * val(n + 1)", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378088994", "createdAt": "2020-02-12T08:01:23Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/impl/AvgAggrResult.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation.impl;\n+\n+import java.io.IOException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+\n+public class AvgAggrResult extends AggregateResult {\n+\n+  private static final String AVG_AGGR_NAME = \"AVG\";\n+  private TSDataType seriesDataType;\n+  protected double sum = 0.0;\n+  protected int cnt = 0;\n+\n+  public AvgAggrResult(TSDataType seriesDataType) {\n+    super(TSDataType.DOUBLE);\n+    this.seriesDataType = seriesDataType;\n+    reset();\n+    sum = 0.0;\n+    cnt = 0;\n+  }\n+\n+  @Override\n+  public Double getResult() {\n+    if (cnt > 0) {\n+      setDoubleRet(sum / cnt);\n+    }\n+    return hasResult() ? getDoubleRet() : null;\n+  }\n+\n+  @Override\n+  public void updateResultFromStatistics(Statistics statistics) {\n+    cnt += statistics.getCount();\n+    sum += statistics.getSumValue();\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage) throws IOException {\n+    updateResultFromPageData(dataInThisPage, Long.MAX_VALUE);\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage, long bound) throws IOException {\n+    while (dataInThisPage.hasCurrent()) {\n+      if (dataInThisPage.currentTime() >= bound) {\n+        break;\n+      }\n+      updateAvg(seriesDataType, dataInThisPage.currentValue());\n+      dataInThisPage.next();\n+    }\n+  }\n+\n+  @Override\n+  public void updateResultUsingTimestamps(long[] timestamps, int length,\n+      IReaderByTimestamp dataReader) throws IOException {\n+    for (int i = 0; i < length; i++) {\n+      Object value = dataReader.getValueInTimestamp(timestamps[i]);\n+      if (value != null) {\n+        updateAvg(seriesDataType, value);\n+      }\n+    }\n+  }\n+\n+  private void updateAvg(TSDataType type, Object sumVal) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk4MjU1NA==", "bodyText": "Fixed. Thanks for your suggestion!", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379982554", "createdAt": "2020-02-17T04:37:09Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/impl/AvgAggrResult.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation.impl;\n+\n+import java.io.IOException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+\n+public class AvgAggrResult extends AggregateResult {\n+\n+  private static final String AVG_AGGR_NAME = \"AVG\";\n+  private TSDataType seriesDataType;\n+  protected double sum = 0.0;\n+  protected int cnt = 0;\n+\n+  public AvgAggrResult(TSDataType seriesDataType) {\n+    super(TSDataType.DOUBLE);\n+    this.seriesDataType = seriesDataType;\n+    reset();\n+    sum = 0.0;\n+    cnt = 0;\n+  }\n+\n+  @Override\n+  public Double getResult() {\n+    if (cnt > 0) {\n+      setDoubleRet(sum / cnt);\n+    }\n+    return hasResult() ? getDoubleRet() : null;\n+  }\n+\n+  @Override\n+  public void updateResultFromStatistics(Statistics statistics) {\n+    cnt += statistics.getCount();\n+    sum += statistics.getSumValue();\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage) throws IOException {\n+    updateResultFromPageData(dataInThisPage, Long.MAX_VALUE);\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage, long bound) throws IOException {\n+    while (dataInThisPage.hasCurrent()) {\n+      if (dataInThisPage.currentTime() >= bound) {\n+        break;\n+      }\n+      updateAvg(seriesDataType, dataInThisPage.currentValue());\n+      dataInThisPage.next();\n+    }\n+  }\n+\n+  @Override\n+  public void updateResultUsingTimestamps(long[] timestamps, int length,\n+      IReaderByTimestamp dataReader) throws IOException {\n+    for (int i = 0; i < length; i++) {\n+      Object value = dataReader.getValueInTimestamp(timestamps[i]);\n+      if (value != null) {\n+        updateAvg(seriesDataType, value);\n+      }\n+    }\n+  }\n+\n+  private void updateAvg(TSDataType type, Object sumVal) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4ODk5NA=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDA1NzQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBDescriptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo1MTowOVrOFotXIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzoyNjowOFrOFpTmhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzMDU2MA==", "bodyText": "what's this comment mean...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378230560", "createdAt": "2020-02-12T12:51:09Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBDescriptor.java", "diffHunk": "@@ -309,6 +309,11 @@ private void loadProps() {\n       conf.setMemtableNumInEachStorageGroup(\n           Integer.parseInt(properties.getProperty(\"memtable_num_in_each_storage_group\", String.valueOf(conf.getMemtableNumInEachStorageGroup()))));\n \n+      // the num of memtables in each storage group", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1NzA5NQ==", "bodyText": "Fixed. Sorry for misunderstanding. This should be \"the default fill interval in LinearFill and PreviousFill\".", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378857095", "createdAt": "2020-02-13T13:26:08Z", "author": {"login": "jack870131"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBDescriptor.java", "diffHunk": "@@ -309,6 +309,11 @@ private void loadProps() {\n       conf.setMemtableNumInEachStorageGroup(\n           Integer.parseInt(properties.getProperty(\"memtable_num_in_each_storage_group\", String.valueOf(conf.getMemtableNumInEachStorageGroup()))));\n \n+      // the num of memtables in each storage group", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzMDU2MA=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDEwODc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzowODo0NlrOFot3HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMzoyNToyM1rOFpTlCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzODc0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p> This method is calculate the aggregation using the common timestamps of cross series\n          \n          \n            \n               * <p> This method is calculate the aggregation using the common timestamps of cross series\n          \n      \n    \n    \n  \n\ncalculate here, grammar miss", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378238748", "createdAt": "2020-02-12T13:08:46Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;\n+  private int intRet;\n+  private long longRet;\n+  private float floatRet;\n+  private double doubleRet;\n+  private Binary binaryRet;\n+\n+  private boolean hasResult;\n+\n+  /**\n+   * construct.\n+   *\n+   * @param dataType result data type.\n+   */\n+  public AggregateResult(TSDataType dataType) {\n+    this.dataType = dataType;\n+    this.hasResult = false;\n+  }\n+\n+  public abstract Object getResult();\n+\n+  /**\n+   * Calculate the aggregation using Statistics\n+   *\n+   * @param statistics chunkStatistics or pageStatistics\n+   */\n+  public abstract void updateResultFromStatistics(Statistics statistics)\n+      throws QueryProcessException;\n+\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage) throws IOException;\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   * @param bound calculate points whose time < bound\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage, long bound)\n+      throws IOException;\n+\n+  /**\n+   * <p> This method is calculate the aggregation using the common timestamps of cross series", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1NjcxMw==", "bodyText": "Fixed. Thx.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378856713", "createdAt": "2020-02-13T13:25:23Z", "author": {"login": "jack870131"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;\n+  private int intRet;\n+  private long longRet;\n+  private float floatRet;\n+  private double doubleRet;\n+  private Binary binaryRet;\n+\n+  private boolean hasResult;\n+\n+  /**\n+   * construct.\n+   *\n+   * @param dataType result data type.\n+   */\n+  public AggregateResult(TSDataType dataType) {\n+    this.dataType = dataType;\n+    this.hasResult = false;\n+  }\n+\n+  public abstract Object getResult();\n+\n+  /**\n+   * Calculate the aggregation using Statistics\n+   *\n+   * @param statistics chunkStatistics or pageStatistics\n+   */\n+  public abstract void updateResultFromStatistics(Statistics statistics)\n+      throws QueryProcessException;\n+\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage) throws IOException;\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   * @param bound calculate points whose time < bound\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage, long bound)\n+      throws IOException;\n+\n+  /**\n+   * <p> This method is calculate the aggregation using the common timestamps of cross series", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzODc0OA=="}, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MzgzMDYwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjoyMTozNlrOFpRxBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjozNjo0NVrOFqXLgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzAxNA==", "bodyText": "Why we can just put chunk statistics into page reader?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378827014", "createdAt": "2020-02-13T12:21:36Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -112,12 +116,9 @@ public void close() {\n   }\n \n   @Override\n-  public PageHeader nextPageHeader() throws IOException {\n-    return null;\n+  public List<IPageReader> getPageReaderList() throws IOException {\n+    return Collections.singletonList(\n+        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2NDI4OA==", "bodyText": "cause memchunk only has one page", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379964288", "createdAt": "2020-02-17T02:36:45Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -112,12 +116,9 @@ public void close() {\n   }\n \n   @Override\n-  public PageHeader nextPageHeader() throws IOException {\n-    return null;\n+  public List<IPageReader> getPageReaderList() throws IOException {\n+    return Collections.singletonList(\n+        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzAxNA=="}, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Mzg1MzQ2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesRawDataPointReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMjozMDoxNlrOFpR_Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjozODozOVrOFqXMlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMDY5MQ==", "bodyText": "While statement doesn't loop. You can use if to replace while", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378830691", "createdAt": "2020-02-13T12:30:16Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesRawDataPointReader.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.reader.IPointReader;\n+\n+import java.io.IOException;\n+\n+\n+public class SeriesRawDataPointReader implements IPointReader {\n+\n+  private final SeriesReader seriesReader;\n+\n+  private boolean hasCachedTimeValuePair;\n+  private BatchData batchData;\n+  private TimeValuePair timeValuePair;\n+\n+\n+  public SeriesRawDataPointReader(SeriesReader seriesReader) {\n+    this.seriesReader = seriesReader;\n+  }\n+\n+  public SeriesRawDataPointReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesReader = new SeriesReader(seriesPath, dataType, context, dataSource, timeFilter,\n+        valueFilter);\n+  }\n+\n+  private boolean hasNext() throws IOException {\n+    while (seriesReader.hasNextChunk()) {\n+      while (seriesReader.hasNextPage()) {\n+        if (seriesReader.hasNextOverlappedPage()) {\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+\n+  private boolean hasNextSatisfiedInCurrentBatch() {\n+    while (batchData != null && batchData.hasCurrent()) {\n+      timeValuePair = new TimeValuePair(batchData.currentTime(),\n+          batchData.currentTsPrimitiveType());\n+      hasCachedTimeValuePair = true;\n+      batchData.next();\n+      return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2NDU2Ng==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379964566", "createdAt": "2020-02-17T02:38:39Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesRawDataPointReader.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.reader.IPointReader;\n+\n+import java.io.IOException;\n+\n+\n+public class SeriesRawDataPointReader implements IPointReader {\n+\n+  private final SeriesReader seriesReader;\n+\n+  private boolean hasCachedTimeValuePair;\n+  private BatchData batchData;\n+  private TimeValuePair timeValuePair;\n+\n+\n+  public SeriesRawDataPointReader(SeriesReader seriesReader) {\n+    this.seriesReader = seriesReader;\n+  }\n+\n+  public SeriesRawDataPointReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesReader = new SeriesReader(seriesPath, dataType, context, dataSource, timeFilter,\n+        valueFilter);\n+  }\n+\n+  private boolean hasNext() throws IOException {\n+    while (seriesReader.hasNextChunk()) {\n+      while (seriesReader.hasNextPage()) {\n+        if (seriesReader.hasNextOverlappedPage()) {\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+\n+  private boolean hasNextSatisfiedInCurrentBatch() {\n+    while (batchData != null && batchData.hasCurrent()) {\n+      timeValuePair = new TimeValuePair(batchData.currentTime(),\n+          batchData.currentTsPrimitiveType());\n+      hasCachedTimeValuePair = true;\n+      batchData.next();\n+      return true;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMDY5MQ=="}, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjU1NzI5OnYy", "diffSide": "RIGHT", "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBAggregationIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTo1MTowMFrOFpsOHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwMjo0ODoxOVrOFqXSuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2MDQ0NQ==", "bodyText": "Maybe we need more tests here. Consider the order of columns, mergeable or unmergeable columns. Such as following sql:\n\"SELECT sum(s0), count(s0), avg(s2), avg(s0) FROM root.vehicle.d0 WHERE time >= 6000 AND time <= 9000\"\n\"SELECT sum(s2), count(s0), avg(s2), avg(s1), count(s2),sum(s0) FROM root.vehicle.d0 WHERE time >= 6000 AND time <= 9000\"", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379260445", "createdAt": "2020-02-14T05:51:00Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBAggregationIT.java", "diffHunk": "@@ -508,6 +509,57 @@ public void avgSumErrorTest() throws SQLException {\n     }\n   }\n \n+  /**\n+   * test aggregation query with more than one functions on one series\n+   */\n+  @Test\n+  public void mergeAggrOnOneSeriesTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "792f60c6d5e05b407499342b7cfef910344a5fa5"}, "originalPosition": 230}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2NjEzNg==", "bodyText": "Thanks. I'd like to add more tests. @qiaojialin", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379966136", "createdAt": "2020-02-17T02:48:19Z", "author": {"login": "samperson1997"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBAggregationIT.java", "diffHunk": "@@ -508,6 +509,57 @@ public void avgSumErrorTest() throws SQLException {\n     }\n   }\n \n+  /**\n+   * test aggregation query with more than one functions on one series\n+   */\n+  @Test\n+  public void mergeAggrOnOneSeriesTest() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2MDQ0NQ=="}, "originalCommit": {"oid": "792f60c6d5e05b407499342b7cfef910344a5fa5"}, "originalPosition": 230}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 327, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}