{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTIxNjMz", "number": 2389, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjoyOToxNVrOFKNa4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDo1MDozNlrOFNRB2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjQ5OTUzOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjoyOToxNVrOIM4fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjoyOToxNVrOIM4fqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM3OTQzNQ==", "bodyText": "Rename this to getDevices or change the other to showDevices to implement overloading.", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550379435", "createdAt": "2020-12-31T02:29:15Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -688,6 +689,10 @@ public TSDataType getSeriesType(PartialPath path) throws MetadataException {\n     return mtree.getDevices(prefixPath);\n   }\n \n+  public Set<PartialPath> showDevices(ShowDevicesPlan plan) throws MetadataException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjUwMzYwOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjozNDoyNVrOIM4hpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjozNDoyNVrOIM4hpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM3OTk0Mw==", "bodyText": "Do this in PhysicalGenerator or the constructor of ShowDevicePlan, not here.", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550379943", "createdAt": "2020-12-31T02:34:25Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/service/TSServiceImpl.java", "diffHunk": "@@ -672,6 +673,17 @@ private TSExecuteStatementResp internalExecuteQueryStatement(String statement,\n           ((ShowTimeSeriesPlan) plan).setHasLimit(true);\n         }\n       }\n+\n+      if (plan instanceof ShowDevicesPlan) {\n+        //If the user does not pass the limit, then set limit = fetchSize and haslimit=false,else set haslimit = true\n+        if (((ShowDevicesPlan) plan).getLimit() == 0) {\n+          ((ShowDevicesPlan) plan).setLimit(fetchSize);\n+          ((ShowDevicesPlan) plan).setHasLimit(false);\n+        } else {\n+          ((ShowDevicesPlan) plan).setHasLimit(true);\n+        }\n+      }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjUxNTAyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjo0NToxNlrOIM4nFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMjo0NToxNlrOIM4nFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4MTMzMg==", "bodyText": "Line 1134: Set devices = new TreeSet<>();", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550381332", "createdAt": "2020-12-31T02:45:16Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1121,7 +1122,32 @@ private void findChildNodePathInNextLevel(\n       throw new IllegalPathException(prefixPath.getFullPath());\n     }\n     Set<PartialPath> devices = new TreeSet<>();\n-    findDevices(root, nodes, 1, devices);\n+    findDevices(root, nodes, 1, devices, false);\n+    return devices;\n+  }\n+\n+  Set<PartialPath> getDevices(ShowDevicesPlan plan) throws MetadataException {\n+    String[] nodes = plan.getPath().getNodes();\n+    if (nodes.length == 0 || !nodes[0].equals(root.getName())) {\n+      throw new IllegalPathException(plan.getPath().getFullPath());\n+    }\n+    Set<PartialPath> devices;\n+    limit.set(plan.getLimit());\n+    offset.set(plan.getOffset());\n+    curOffset.set(-1);\n+    count.set(0);\n+    if (offset.get() != 0 || limit.get() != 0) {\n+      devices = new TreeSet<>();\n+      findDevices(root, nodes, 1, devices, true);\n+    } else {\n+      devices = new TreeSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjU0MTU3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMzoxMTo0MFrOIM40Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMzoxMTo0MFrOIM40Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4NDY1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        curOffset.set(curOffset.get() + 1);\n          \n          \n            \n                        if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n          \n          \n            \n                          return;\n          \n          \n            \n                        }\n          \n          \n            \n                      }\n          \n          \n            \n                      res.add(node.getPartialPath());\n          \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        count.set(count.get() + 1);\n          \n          \n            \n                      }\n          \n          \n            \n                      if (hasLimit) {\n          \n          \n            \n                        curOffset.set(curOffset.get() + 1);\n          \n          \n            \n                        if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n          \n          \n            \n                          return;\n          \n          \n            \n                        }\n          \n          \n            \n                        count.set(count.get() + 1);\n          \n          \n            \n                      }\n          \n          \n            \n                      res.add(node.getPartialPath());", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550384655", "createdAt": "2020-12-31T03:11:40Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1134,16 +1160,25 @@ private void findChildNodePathInNextLevel(\n    * @param res   store all matched device names\n    */\n   @SuppressWarnings(\"squid:S3776\")\n-  private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> res) {\n+  private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> res, boolean hasLimit) {\n     String nodeReg = MetaUtils.getNodeRegByIdx(idx, nodes);\n     // the node path doesn't contains '*'\n     if (!nodeReg.contains(PATH_WILDCARD)) {\n       MNode next = node.getChild(nodeReg);\n       if (next != null) {\n         if (next instanceof MeasurementMNode && idx >= nodes.length) {\n+          if (hasLimit) {\n+            curOffset.set(curOffset.get() + 1);\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+              return;\n+            }\n+          }\n           res.add(node.getPartialPath());\n+          if (hasLimit) {\n+            count.set(count.get() + 1);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MjU0MTY3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMzoxMTo1N1rOIM40HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwMzoxMTo1N1rOIM40HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM4NDY2OQ==", "bodyText": "The same.", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r550384669", "createdAt": "2020-12-31T03:11:57Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MTree.java", "diffHunk": "@@ -1155,10 +1190,19 @@ private void findDevices(MNode node, String[] nodes, int idx, Set<PartialPath> r\n           continue;\n         }\n         if (child instanceof MeasurementMNode && !deviceAdded && idx >= nodes.length) {\n+          if (hasLimit) {\n+            curOffset.set(curOffset.get() + 1);\n+            if (curOffset.get() < offset.get() || count.get().intValue() == limit.get().intValue()) {\n+              return;\n+            }\n+          }\n           res.add(node.getPartialPath());\n+          if (hasLimit) {\n+            count.set(count.get() + 1);\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a1795e084ebd525371408b2f0086d0327323a7a"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2ODA4OTM0OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMjoyMzo1OFrOINj7Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwMjoyNToxMVrOINj8Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MDk5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n          \n          \n            \n                this(showContentType, path);\n          \n          \n            \n                this.limit = limit;\n          \n          \n            \n                this.offset = offset;\n          \n          \n            \n              }\n          \n          \n            \n              public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n          \n          \n            \n                this(showContentType, path);\n          \n          \n            \n                this.offset = offset;\n          \n          \n            \n                 if (limit == 0) {\n          \n          \n            \n                      this.limit = fetchSize;\n          \n          \n            \n                      this.hasLimit = false;\n          \n          \n            \n                    } else {\n          \n          \n            \n                      this.hasLimit = true;\n          \n          \n            \n                    }\n          \n          \n            \n              }", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r551090995", "createdAt": "2021-01-04T02:23:58Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java", "diffHunk": "@@ -21,15 +21,49 @@\n import org.apache.iotdb.db.metadata.PartialPath;\n \n public class ShowDevicesPlan extends ShowPlan{\n+\n   private PartialPath path;\n+  private int limit = 0;\n+  private int offset = 0;\n+  private boolean hasLimit;\n \n   public ShowDevicesPlan(ShowContentType showContentType, PartialPath path) {\n     super(showContentType);\n     this.path = path;\n   }\n \n+  public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n+    this(showContentType, path);\n+    this.limit = limit;\n+    this.offset = offset;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daf609ca59da7081852333c0a02d899296806902"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MTIyMw==", "bodyText": "Why not put the initialization here? :D", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r551091223", "createdAt": "2021-01-04T02:25:11Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowDevicesPlan.java", "diffHunk": "@@ -21,15 +21,49 @@\n import org.apache.iotdb.db.metadata.PartialPath;\n \n public class ShowDevicesPlan extends ShowPlan{\n+\n   private PartialPath path;\n+  private int limit = 0;\n+  private int offset = 0;\n+  private boolean hasLimit;\n \n   public ShowDevicesPlan(ShowContentType showContentType, PartialPath path) {\n     super(showContentType);\n     this.path = path;\n   }\n \n+  public ShowDevicesPlan(ShowContentType showContentType, PartialPath path, int limit, int offset) {\n+    this(showContentType, path);\n+    this.limit = limit;\n+    this.offset = offset;\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTA5MDk5NQ=="}, "originalCommit": {"oid": "daf609ca59da7081852333c0a02d899296806902"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NDU0ODA5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowPlan.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNDo1MDozNlrOIRYmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwMjozNjowOFrOIRvXwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA5OTc2Mw==", "bodyText": "The sonar test shows these lines are duplicated with some lines in ShowTimeseriesPlan. How do you think remove the lines in ShowTimeseriesPlan?", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r555099763", "createdAt": "2021-01-11T14:50:36Z", "author": {"login": "HTHou"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowPlan.java", "diffHunk": "@@ -44,6 +65,34 @@ public ShowContentType getShowContentType() {\n     return showContentType;\n   }\n \n+  public PartialPath getPath() {\n+    return this.path;\n+  }\n+\n+  public int getLimit() {\n+    return limit;\n+  }\n+\n+  public void setLimit(int limit) {\n+    this.limit = limit;\n+  }\n+\n+  public int getOffset() {\n+    return offset;\n+  }\n+\n+  public void setOffset(int offset) {\n+    this.offset = offset;\n+  }\n+\n+  public boolean hasLimit() {\n+    return hasLimit;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76ca3ea9a7389c67ebc90de62c0a04e4ca6efa51"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTQ3MjgzMg==", "bodyText": "code smell solved. thank you :)", "url": "https://github.com/apache/iotdb/pull/2389#discussion_r555472832", "createdAt": "2021-01-12T02:36:08Z", "author": {"login": "haimeiguo"}, "path": "server/src/main/java/org/apache/iotdb/db/qp/physical/sys/ShowPlan.java", "diffHunk": "@@ -44,6 +65,34 @@ public ShowContentType getShowContentType() {\n     return showContentType;\n   }\n \n+  public PartialPath getPath() {\n+    return this.path;\n+  }\n+\n+  public int getLimit() {\n+    return limit;\n+  }\n+\n+  public void setLimit(int limit) {\n+    this.limit = limit;\n+  }\n+\n+  public int getOffset() {\n+    return offset;\n+  }\n+\n+  public void setOffset(int offset) {\n+    this.offset = offset;\n+  }\n+\n+  public boolean hasLimit() {\n+    return hasLimit;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTA5OTc2Mw=="}, "originalCommit": {"oid": "76ca3ea9a7389c67ebc90de62c0a04e4ca6efa51"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 436, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}