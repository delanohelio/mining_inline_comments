{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMzQ2MTAz", "number": 926, "title": "avoid flushing empty memtable", "bodyText": "When no data is successfully written to memtable because of wrong data type or failed to write WAL. An empty memtable will be flushed.\nThis pr avoid flushing the empty memtable.", "createdAt": "2020-03-20T04:23:11Z", "url": "https://github.com/apache/iotdb/pull/926", "merged": true, "mergeCommit": {"oid": "a5cfb37e31122de1e84d0ae3a631d1dc6b1cdbfe"}, "closed": true, "closedAt": "2020-03-20T08:48:58Z", "author": {"login": "qiaojialin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPYscqgH2gAyMzkxMzQ2MTAzOjk0OThmMTI5ZjMxYjgwM2M4ZDc0MjQ5MWM2NGRlMTk0ZWIzNjhkMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPclPhAFqTM3ODMwNjg1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9498f129f31b803c8d742491c64de194eb368d29", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9498f129f31b803c8d742491c64de194eb368d29", "committedDate": "2020-03-20T04:21:13Z", "message": "avoid flushing empty memtable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "980a45b81666c176e2a8834f2dab58216307ef1b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/980a45b81666c176e2a8834f2dab58216307ef1b", "committedDate": "2020-03-20T04:45:30Z", "message": "fix globalLatestFlushTime"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68283e0715de6eab967dae718a02e49fa0cfef0b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/68283e0715de6eab967dae718a02e49fa0cfef0b", "committedDate": "2020-03-20T05:27:07Z", "message": "update globalLatestFlushedTimeForEachDevice in batch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af7d04ba0e8383a0896634e47c11dd0e523c89dd", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/af7d04ba0e8383a0896634e47c11dd0e523c89dd", "committedDate": "2020-03-20T05:38:10Z", "message": "fix sonar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad679145c9df6f331368b64462a50dc53af816e5", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ad679145c9df6f331368b64462a50dc53af816e5", "committedDate": "2020-03-20T05:47:57Z", "message": "signale memtable should flush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/97b9128e300ac7eb2be13b808ae06a4c9175321e", "committedDate": "2020-03-20T06:11:12Z", "message": "flush signal memtable at any case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MjU2MjUx", "url": "https://github.com/apache/iotdb/pull/926#pullrequestreview-378256251", "createdAt": "2020-03-20T06:40:41Z", "commit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MDo0MVrOF5I3OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNjo0MDo0MVrOF5I3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODM2MQ==", "bodyText": "How could you ensure resource end time is larger than global end time?", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395458361", "createdAt": "2020-03-20T06:40:41Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -282,14 +282,7 @@ private void recover() throws StorageGroupProcessorException {\n             .putAll(resource.getEndTimeMap());\n         partitionLatestFlushedTimeForEachDevice.computeIfAbsent(timePartitionId, id -> new HashMap<>())\n             .putAll(resource.getEndTimeMap());\n-\n-        for (Map.Entry<String, Long> mapEntry : resource.getEndTimeMap().entrySet()) {\n-          if (!globalLatestFlushedTimeForEachDevice.containsKey(mapEntry.getKey())\n-              || globalLatestFlushedTimeForEachDevice.get(mapEntry.getKey())\n-                  < mapEntry.getValue()) {\n-            globalLatestFlushedTimeForEachDevice.put(mapEntry.getKey(), mapEntry.getValue());\n-          }\n-        }\n+        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzAzNDM0", "url": "https://github.com/apache/iotdb/pull/926#pullrequestreview-378303434", "createdAt": "2020-03-20T08:39:58Z", "commit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MzA2ODUx", "url": "https://github.com/apache/iotdb/pull/926#pullrequestreview-378306851", "createdAt": "2020-03-20T08:46:30Z", "commit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo0NjozMFrOF5LZ9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwODo1MTowOVrOF5LiVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMDAyMw==", "bodyText": "I think the files are sorted by the partition number and version, so the later one cannot have timestamps earlier than the previous one.", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395500023", "createdAt": "2020-03-20T08:46:30Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -282,14 +282,7 @@ private void recover() throws StorageGroupProcessorException {\n             .putAll(resource.getEndTimeMap());\n         partitionLatestFlushedTimeForEachDevice.computeIfAbsent(timePartitionId, id -> new HashMap<>())\n             .putAll(resource.getEndTimeMap());\n-\n-        for (Map.Entry<String, Long> mapEntry : resource.getEndTimeMap().entrySet()) {\n-          if (!globalLatestFlushedTimeForEachDevice.containsKey(mapEntry.getKey())\n-              || globalLatestFlushedTimeForEachDevice.get(mapEntry.getKey())\n-                  < mapEntry.getValue()) {\n-            globalLatestFlushedTimeForEachDevice.put(mapEntry.getKey(), mapEntry.getValue());\n-          }\n-        }\n+        globalLatestFlushedTimeForEachDevice.putAll(resource.getEndTimeMap());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ1ODM2MQ=="}, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMTA2OA==", "bodyText": "How could the client know anything about this?", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395501068", "createdAt": "2020-03-20T08:48:40Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -598,23 +591,24 @@ private void insertBatchToTsFileProcessor(BatchInsertPlan batchInsertPlan,\n       return;\n     }\n \n-    tsFileProcessor.insertBatch(batchInsertPlan, start, end, results);\n+    try {\n+      tsFileProcessor.insertBatch(batchInsertPlan, start, end, results);\n+    } catch (WriteProcessException e) {\n+      logger.error(\"insert to TsFileProcessor error \", e);\n+      return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUwMjE2NA==", "bodyText": "Preserve the stack trace.", "url": "https://github.com/apache/iotdb/pull/926#discussion_r395502164", "createdAt": "2020-03-20T08:51:09Z", "author": {"login": "jt2594838"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/TsFileProcessor.java", "diffHunk": "@@ -167,10 +165,9 @@ public boolean insert(InsertPlan insertPlan) throws QueryProcessException {\n     if (IoTDBDescriptor.getInstance().getConfig().isEnableWal()) {\n       try {\n         getLogNode().write(insertPlan);\n-      } catch (IOException e) {\n-        logger.error(\"{}: {} write WAL failed\", storageGroupName,\n-            tsFileResource.getFile().getName(), e);\n-        return false;\n+      } catch (Exception e) {\n+        throw new WriteProcessException(String.format(\"%s: %s write WAL failed, because %s\",\n+            storageGroupName, tsFileResource.getFile().getAbsolutePath(), e.getMessage()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b9128e300ac7eb2be13b808ae06a4c9175321e"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3010, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}