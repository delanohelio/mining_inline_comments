{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MzgzMzEy", "number": 1481, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1NDoyMFrOENQ6fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1NDoyMFrOENQ6fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzQ0MDYyOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMjo1NDoyMFrOGv2NTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwODoxNjo1MlrOGwLXjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDM5OA==", "bodyText": "you can move this line out of cycle, like if (node == null) return;", "url": "https://github.com/apache/iotdb/pull/1481#discussion_r452824398", "createdAt": "2020-07-10T12:54:20Z", "author": {"login": "mychaow"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -835,29 +823,17 @@ private void insertToTsFileProcessor(InsertRowPlan insertRowPlan, boolean sequen\n     }\n   }\n \n-  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime)\n-      throws WriteProcessException {\n-    MNode node = null;\n-    try {\n-      MManager manager = IoTDB.metaManager;\n-      node = manager.getDeviceNodeWithAutoCreateAndReadLock(plan.getDeviceId());\n-      String[] measurementList = plan.getMeasurements();\n-      for (int i = 0; i < measurementList.length; i++) {\n-        if (plan.getValues()[i] == null) {\n-          continue;\n-        }\n-        // Update cached last value with high priority\n-        MNode measurementNode = manager.getChild(node, measurementList[i]);\n-        if (measurementNode != null) {\n-          ((MeasurementMNode) measurementNode)\n-              .updateCachedLast(plan.composeTimeValuePair(i), true, latestFlushedTime);\n-        }\n+  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime) {\n+    MNode node = plan.getDeviceMNode();\n+    String[] measurementList = plan.getMeasurements();\n+    for (int i = 0; i < measurementList.length; i++) {\n+      if (plan.getValues()[i] == null) {\n+        continue;\n       }\n-    } catch (MetadataException e) {\n-      // skip last cache update if the local MTree does not contain the schema\n-    } finally {\n+      // Update cached last value with high priority\n       if (node != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "099a1afa8322f65d4e1ff7216fa2e867374d1164"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzNzYyMw==", "bodyText": "actually, this is for test... Some tests insert data into StorageGroupProcessor directely", "url": "https://github.com/apache/iotdb/pull/1481#discussion_r452937623", "createdAt": "2020-07-10T16:08:59Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -835,29 +823,17 @@ private void insertToTsFileProcessor(InsertRowPlan insertRowPlan, boolean sequen\n     }\n   }\n \n-  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime)\n-      throws WriteProcessException {\n-    MNode node = null;\n-    try {\n-      MManager manager = IoTDB.metaManager;\n-      node = manager.getDeviceNodeWithAutoCreateAndReadLock(plan.getDeviceId());\n-      String[] measurementList = plan.getMeasurements();\n-      for (int i = 0; i < measurementList.length; i++) {\n-        if (plan.getValues()[i] == null) {\n-          continue;\n-        }\n-        // Update cached last value with high priority\n-        MNode measurementNode = manager.getChild(node, measurementList[i]);\n-        if (measurementNode != null) {\n-          ((MeasurementMNode) measurementNode)\n-              .updateCachedLast(plan.composeTimeValuePair(i), true, latestFlushedTime);\n-        }\n+  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime) {\n+    MNode node = plan.getDeviceMNode();\n+    String[] measurementList = plan.getMeasurements();\n+    for (int i = 0; i < measurementList.length; i++) {\n+      if (plan.getValues()[i] == null) {\n+        continue;\n       }\n-    } catch (MetadataException e) {\n-      // skip last cache update if the local MTree does not contain the schema\n-    } finally {\n+      // Update cached last value with high priority\n       if (node != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDM5OA=="}, "originalCommit": {"oid": "099a1afa8322f65d4e1ff7216fa2e867374d1164"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEzNTg3Nw==", "bodyText": "the code for test? Why do we need merge it into master? I think the test code should be put into the test branch.", "url": "https://github.com/apache/iotdb/pull/1481#discussion_r453135877", "createdAt": "2020-07-11T01:06:35Z", "author": {"login": "mychaow"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -835,29 +823,17 @@ private void insertToTsFileProcessor(InsertRowPlan insertRowPlan, boolean sequen\n     }\n   }\n \n-  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime)\n-      throws WriteProcessException {\n-    MNode node = null;\n-    try {\n-      MManager manager = IoTDB.metaManager;\n-      node = manager.getDeviceNodeWithAutoCreateAndReadLock(plan.getDeviceId());\n-      String[] measurementList = plan.getMeasurements();\n-      for (int i = 0; i < measurementList.length; i++) {\n-        if (plan.getValues()[i] == null) {\n-          continue;\n-        }\n-        // Update cached last value with high priority\n-        MNode measurementNode = manager.getChild(node, measurementList[i]);\n-        if (measurementNode != null) {\n-          ((MeasurementMNode) measurementNode)\n-              .updateCachedLast(plan.composeTimeValuePair(i), true, latestFlushedTime);\n-        }\n+  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime) {\n+    MNode node = plan.getDeviceMNode();\n+    String[] measurementList = plan.getMeasurements();\n+    for (int i = 0; i < measurementList.length; i++) {\n+      if (plan.getValues()[i] == null) {\n+        continue;\n       }\n-    } catch (MetadataException e) {\n-      // skip last cache update if the local MTree does not contain the schema\n-    } finally {\n+      // Update cached last value with high priority\n       if (node != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDM5OA=="}, "originalCommit": {"oid": "099a1afa8322f65d4e1ff7216fa2e867374d1164"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE3MTA4Ng==", "bodyText": "fixed", "url": "https://github.com/apache/iotdb/pull/1481#discussion_r453171086", "createdAt": "2020-07-11T08:16:52Z", "author": {"login": "qiaojialin"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/storagegroup/StorageGroupProcessor.java", "diffHunk": "@@ -835,29 +823,17 @@ private void insertToTsFileProcessor(InsertRowPlan insertRowPlan, boolean sequen\n     }\n   }\n \n-  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime)\n-      throws WriteProcessException {\n-    MNode node = null;\n-    try {\n-      MManager manager = IoTDB.metaManager;\n-      node = manager.getDeviceNodeWithAutoCreateAndReadLock(plan.getDeviceId());\n-      String[] measurementList = plan.getMeasurements();\n-      for (int i = 0; i < measurementList.length; i++) {\n-        if (plan.getValues()[i] == null) {\n-          continue;\n-        }\n-        // Update cached last value with high priority\n-        MNode measurementNode = manager.getChild(node, measurementList[i]);\n-        if (measurementNode != null) {\n-          ((MeasurementMNode) measurementNode)\n-              .updateCachedLast(plan.composeTimeValuePair(i), true, latestFlushedTime);\n-        }\n+  private void tryToUpdateInsertLastCache(InsertRowPlan plan, Long latestFlushedTime) {\n+    MNode node = plan.getDeviceMNode();\n+    String[] measurementList = plan.getMeasurements();\n+    for (int i = 0; i < measurementList.length; i++) {\n+      if (plan.getValues()[i] == null) {\n+        continue;\n       }\n-    } catch (MetadataException e) {\n-      // skip last cache update if the local MTree does not contain the schema\n-    } finally {\n+      // Update cached last value with high priority\n       if (node != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyNDM5OA=="}, "originalCommit": {"oid": "099a1afa8322f65d4e1ff7216fa2e867374d1164"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4716, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}