{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTg5MDIy", "number": 1315, "title": "[IOTDB-744] Support upsert alias", "bodyText": "", "createdAt": "2020-06-05T02:46:07Z", "url": "https://github.com/apache/iotdb/pull/1315", "merged": true, "mergeCommit": {"oid": "440746681a0de2d1a493a3cf087f4a70335ba837"}, "closed": true, "closedAt": "2020-06-05T06:01:33Z", "author": {"login": "JackieTien97"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoJZLbAH2gAyNDI4MTg5MDIyOjQ0OWE3Njc3NjQ3NzgxNzgwMWQ2OWZlZThmMTU5NDMxZDBlMWQ4MTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoLXnOAFqTQyNDk5NTg5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "449a76776477817801d69fee8f159431d0e1d816", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/449a76776477817801d69fee8f159431d0e1d816", "committedDate": "2020-06-05T02:39:42Z", "message": "add upsert alias"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTY0MjY2", "url": "https://github.com/apache/iotdb/pull/1315#pullrequestreview-424964266", "createdAt": "2020-06-05T02:56:03Z", "commit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c3b9bbbcec6ce6a7d04ffe2a3f5b817ff4ab9b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/82c3b9bbbcec6ce6a7d04ffe2a3f5b817ff4ab9b", "committedDate": "2020-06-05T03:14:07Z", "message": "fix alter null bug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTY4NTIw", "url": "https://github.com/apache/iotdb/pull/1315#pullrequestreview-424968520", "createdAt": "2020-06-05T03:10:16Z", "commit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxMDoxNlrOGfe_Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMzoxNTo0NVrOGffEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2Njc4Mw==", "bodyText": "I think, if the alias exists, just keep it and do the next instead of throwing an exception is better. What do you think? And a typo: exist", "url": "https://github.com/apache/iotdb/pull/1315#discussion_r435666783", "createdAt": "2020-06-05T03:10:16Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1010,62 +1031,97 @@ public void changeOffset(String path, long offset) throws MetadataException {\n     }\n   }\n \n+  public void changeAlias(String path, String alias) throws MetadataException {\n+    lock.writeLock().lock();\n+    try {\n+      LeafMNode leafMNode = (LeafMNode) mtree.getNodeByPath(path);\n+      leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+      leafMNode.getParent().addAlias(alias, leafMNode);\n+      leafMNode.setAlias(alias);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n+  }\n+\n   /**\n    * upsert tags and attributes key-value for the timeseries if the key has existed, just use the\n    * new value to update it.\n    *\n+   * @param alias         newly added alias\n    * @param tagsMap       newly added tags map\n    * @param attributesMap newly added attributes map\n    * @param fullPath      timeseries\n    */\n-  public void upsertTagsAndAttributes(\n-      Map<String, String> tagsMap, Map<String, String> attributesMap, String fullPath)\n-      throws MetadataException, IOException {\n+  public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n+      Map<String, String> attributesMap, String fullPath) throws MetadataException, IOException {\n     lock.writeLock().lock();\n     try {\n       MNode mNode = mtree.getNodeByPath(fullPath);\n       if (!(mNode instanceof LeafMNode)) {\n         throw new PathNotExistException(fullPath);\n       }\n       LeafMNode leafMNode = (LeafMNode) mNode;\n+      // upsert alias\n+      if (alias != null) {\n+        if (leafMNode.getParent().hasChild(alias)) {\n+          throw new MetadataException(\"The alias already exits.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2NzA5Mw==", "bodyText": "Add a comment or delete this.", "url": "https://github.com/apache/iotdb/pull/1315#discussion_r435667093", "createdAt": "2020-06-05T03:11:40Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1010,62 +1031,97 @@ public void changeOffset(String path, long offset) throws MetadataException {\n     }\n   }\n \n+  public void changeAlias(String path, String alias) throws MetadataException {\n+    lock.writeLock().lock();\n+    try {\n+      LeafMNode leafMNode = (LeafMNode) mtree.getNodeByPath(path);\n+      leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+      leafMNode.getParent().addAlias(alias, leafMNode);\n+      leafMNode.setAlias(alias);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n+  }\n+\n   /**\n    * upsert tags and attributes key-value for the timeseries if the key has existed, just use the\n    * new value to update it.\n    *\n+   * @param alias         newly added alias\n    * @param tagsMap       newly added tags map\n    * @param attributesMap newly added attributes map\n    * @param fullPath      timeseries\n    */\n-  public void upsertTagsAndAttributes(\n-      Map<String, String> tagsMap, Map<String, String> attributesMap, String fullPath)\n-      throws MetadataException, IOException {\n+  public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n+      Map<String, String> attributesMap, String fullPath) throws MetadataException, IOException {\n     lock.writeLock().lock();\n     try {\n       MNode mNode = mtree.getNodeByPath(fullPath);\n       if (!(mNode instanceof LeafMNode)) {\n         throw new PathNotExistException(fullPath);\n       }\n       LeafMNode leafMNode = (LeafMNode) mNode;\n+      // upsert alias\n+      if (alias != null) {\n+        if (leafMNode.getParent().hasChild(alias)) {\n+          throw new MetadataException(\"The alias already exits.\");\n+        }\n+        if (leafMNode.getAlias() != null) {\n+          leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+          leafMNode.getParent().addAlias(alias, leafMNode);\n+          leafMNode.setAlias(alias);\n+          // persist to WAL\n+          logWriter.changeAlias(fullPath, alias);\n+        }\n+      }\n+      //", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2ODAzNw==", "bodyText": "Is this limit needed?", "url": "https://github.com/apache/iotdb/pull/1315#discussion_r435668037", "createdAt": "2020-06-05T03:15:30Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1010,62 +1031,97 @@ public void changeOffset(String path, long offset) throws MetadataException {\n     }\n   }\n \n+  public void changeAlias(String path, String alias) throws MetadataException {\n+    lock.writeLock().lock();\n+    try {\n+      LeafMNode leafMNode = (LeafMNode) mtree.getNodeByPath(path);\n+      leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+      leafMNode.getParent().addAlias(alias, leafMNode);\n+      leafMNode.setAlias(alias);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n+  }\n+\n   /**\n    * upsert tags and attributes key-value for the timeseries if the key has existed, just use the\n    * new value to update it.\n    *\n+   * @param alias         newly added alias\n    * @param tagsMap       newly added tags map\n    * @param attributesMap newly added attributes map\n    * @param fullPath      timeseries\n    */\n-  public void upsertTagsAndAttributes(\n-      Map<String, String> tagsMap, Map<String, String> attributesMap, String fullPath)\n-      throws MetadataException, IOException {\n+  public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n+      Map<String, String> attributesMap, String fullPath) throws MetadataException, IOException {\n     lock.writeLock().lock();\n     try {\n       MNode mNode = mtree.getNodeByPath(fullPath);\n       if (!(mNode instanceof LeafMNode)) {\n         throw new PathNotExistException(fullPath);\n       }\n       LeafMNode leafMNode = (LeafMNode) mNode;\n+      // upsert alias\n+      if (alias != null) {\n+        if (leafMNode.getParent().hasChild(alias)) {\n+          throw new MetadataException(\"The alias already exits.\");\n+        }\n+        if (leafMNode.getAlias() != null) {\n+          leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+          leafMNode.getParent().addAlias(alias, leafMNode);\n+          leafMNode.setAlias(alias);\n+          // persist to WAL\n+          logWriter.changeAlias(fullPath, alias);\n+        }\n+      }\n+      //\n+      if (tagsMap == null && attributesMap == null) {\n+        return;\n+      }\n       // no tag or attribute, we need to add a new record in log\n       if (leafMNode.getOffset() < 0) {\n         long offset = tagLogFile.write(tagsMap, attributesMap);\n         logWriter.changeOffset(fullPath, offset);\n         leafMNode.setOffset(offset);\n         // update inverted Index map\n-        for (Entry<String, String> entry : tagsMap.entrySet()) {\n-          tagIndex.computeIfAbsent(entry.getKey(), k -> new HashMap<>())\n-              .computeIfAbsent(entry.getValue(), v -> new HashSet<>()).add(leafMNode);\n+        if (tagsMap != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTY2ODA5NQ==", "bodyText": "Same as above.", "url": "https://github.com/apache/iotdb/pull/1315#discussion_r435668095", "createdAt": "2020-06-05T03:15:45Z", "author": {"login": "Alima777"}, "path": "server/src/main/java/org/apache/iotdb/db/metadata/MManager.java", "diffHunk": "@@ -1010,62 +1031,97 @@ public void changeOffset(String path, long offset) throws MetadataException {\n     }\n   }\n \n+  public void changeAlias(String path, String alias) throws MetadataException {\n+    lock.writeLock().lock();\n+    try {\n+      LeafMNode leafMNode = (LeafMNode) mtree.getNodeByPath(path);\n+      leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+      leafMNode.getParent().addAlias(alias, leafMNode);\n+      leafMNode.setAlias(alias);\n+    } finally {\n+      lock.writeLock().unlock();\n+    }\n+  }\n+\n   /**\n    * upsert tags and attributes key-value for the timeseries if the key has existed, just use the\n    * new value to update it.\n    *\n+   * @param alias         newly added alias\n    * @param tagsMap       newly added tags map\n    * @param attributesMap newly added attributes map\n    * @param fullPath      timeseries\n    */\n-  public void upsertTagsAndAttributes(\n-      Map<String, String> tagsMap, Map<String, String> attributesMap, String fullPath)\n-      throws MetadataException, IOException {\n+  public void upsertTagsAndAttributes(String alias, Map<String, String> tagsMap,\n+      Map<String, String> attributesMap, String fullPath) throws MetadataException, IOException {\n     lock.writeLock().lock();\n     try {\n       MNode mNode = mtree.getNodeByPath(fullPath);\n       if (!(mNode instanceof LeafMNode)) {\n         throw new PathNotExistException(fullPath);\n       }\n       LeafMNode leafMNode = (LeafMNode) mNode;\n+      // upsert alias\n+      if (alias != null) {\n+        if (leafMNode.getParent().hasChild(alias)) {\n+          throw new MetadataException(\"The alias already exits.\");\n+        }\n+        if (leafMNode.getAlias() != null) {\n+          leafMNode.getParent().deleteAliasChild(leafMNode.getAlias());\n+          leafMNode.getParent().addAlias(alias, leafMNode);\n+          leafMNode.setAlias(alias);\n+          // persist to WAL\n+          logWriter.changeAlias(fullPath, alias);\n+        }\n+      }\n+      //\n+      if (tagsMap == null && attributesMap == null) {\n+        return;\n+      }\n       // no tag or attribute, we need to add a new record in log\n       if (leafMNode.getOffset() < 0) {\n         long offset = tagLogFile.write(tagsMap, attributesMap);\n         logWriter.changeOffset(fullPath, offset);\n         leafMNode.setOffset(offset);\n         // update inverted Index map\n-        for (Entry<String, String> entry : tagsMap.entrySet()) {\n-          tagIndex.computeIfAbsent(entry.getKey(), k -> new HashMap<>())\n-              .computeIfAbsent(entry.getValue(), v -> new HashSet<>()).add(leafMNode);\n+        if (tagsMap != null) {\n+          for (Entry<String, String> entry : tagsMap.entrySet()) {\n+            tagIndex.computeIfAbsent(entry.getKey(), k -> new HashMap<>())\n+                .computeIfAbsent(entry.getValue(), v -> new HashSet<>()).add(leafMNode);\n+          }\n         }\n         return;\n       }\n \n       Pair<Map<String, String>, Map<String, String>> pair =\n           tagLogFile.read(config.getTagAttributeTotalSize(), leafMNode.getOffset());\n \n-      for (Entry<String, String> entry : tagsMap.entrySet()) {\n-        String key = entry.getKey();\n-        String value = entry.getValue();\n-        String beforeValue = pair.left.get(key);\n-        pair.left.put(key, value);\n-        // if the key has existed and the value is not equal to the new one\n-        // we should remove before key-value from inverted index map\n-        if (beforeValue != null && !beforeValue.equals(value)) {\n-          tagIndex.get(key).get(beforeValue).remove(leafMNode);\n-          if (tagIndex.get(key).get(beforeValue).isEmpty()) {\n-            tagIndex.get(key).remove(beforeValue);\n+      if (tagsMap != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "449a76776477817801d69fee8f159431d0e1d816"}, "originalPosition": 180}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c016aa803e53475bd9f5bf317a5ca0ea4f05d625", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/c016aa803e53475bd9f5bf317a5ca0ea4f05d625", "committedDate": "2020-06-05T04:40:44Z", "message": "loose the check limit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bb1513ac32fde8a64dba71543bfb5de2ad752e3", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/1bb1513ac32fde8a64dba71543bfb5de2ad752e3", "committedDate": "2020-06-05T04:47:10Z", "message": "typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0OTk1ODky", "url": "https://github.com/apache/iotdb/pull/1315#pullrequestreview-424995892", "createdAt": "2020-06-05T04:57:48Z", "commit": {"oid": "1bb1513ac32fde8a64dba71543bfb5de2ad752e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3765, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}