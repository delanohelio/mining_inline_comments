{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjY0Nzky", "number": 713, "title": "[IOTDB-418] New series reader", "bodyText": "This PR Implements the new query engine of IoTDB.\nTo support multiple query types, we design four readers for one time series.\nBased on the four readers, different query executors are implemented.\nThe design doc is here:\n/docs/Documentation-CHN/SystemDesign/5-DataQuery\nMain classes modified:\norg.apache.iotdb.db.qp.executor.PlanExecutor\norg.apache.iotdb.db.query.reader.series.*\norg.apache.iotdb.db.query.executor.AggregationExecutor\norg.apache.iotdb.db.query.dataset.groupby.*\norg.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter", "createdAt": "2020-01-08T03:26:29Z", "url": "https://github.com/apache/iotdb/pull/713", "merged": true, "mergeCommit": {"oid": "40c19d2b368901558a47233625febe123636ac61"}, "closed": true, "closedAt": "2020-02-23T07:06:29Z", "author": {"login": "qiaojialin"}, "timelineItems": {"totalCount": 267, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFDXvagH2gAyMzYwMjY0NzkyOjg5MTgxMDQ0ZDRjY2ZhYmEyYzBhZWM5ZjM0MzVjMDE0MTk3YzYxMmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHCoFsgH2gAyMzYwMjY0NzkyOmYwZTU5ZjEwMjE1YzQ1Y2Q0NDYyOWQ0Y2IxNzdhNmNkZTZmOGU0Njg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "89181044d4ccfaba2c0aec9f3435c014197c612f", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/89181044d4ccfaba2c0aec9f3435c014197c612f", "committedDate": "2020-02-17T01:51:21Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c92895b3fc58bafdfda98ea0e197551a441b8c2a", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c92895b3fc58bafdfda98ea0e197551a441b8c2a", "committedDate": "2020-02-17T02:17:30Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec9b912bcb11774933175ffb717cb5a441bc172a", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ec9b912bcb11774933175ffb717cb5a441bc172a", "committedDate": "2020-02-17T02:51:46Z", "message": "fix review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171949b2e25e53826907ee42596ecfabeb47af5c", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/171949b2e25e53826907ee42596ecfabeb47af5c", "committedDate": "2020-02-17T02:57:59Z", "message": "fix sonar bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bb1a8bcf2a3b5d383f433817a2b39b863a705aa", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/2bb1a8bcf2a3b5d383f433817a2b39b863a705aa", "committedDate": "2020-02-17T03:01:54Z", "message": "Add more mergeAggrOnOneSeriesTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "964180ee31c9b843e2c8e69a099a97b2a845bade", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/964180ee31c9b843e2c8e69a099a97b2a845bade", "committedDate": "2020-02-17T03:02:10Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "014d27c190bc790030ad65c101ac6fba7392e56f", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/014d27c190bc790030ad65c101ac6fba7392e56f", "committedDate": "2020-02-17T03:04:58Z", "message": "Remove useless UnSupportedDataTypeException string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6f752fbb6a3bb4bc142690ffc473d2223bc2321", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/a6f752fbb6a3bb4bc142690ffc473d2223bc2321", "committedDate": "2020-02-17T03:52:17Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855fef4d1c064025bf6a0ba71b5fa2866c944e83", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/855fef4d1c064025bf6a0ba71b5fa2866c944e83", "committedDate": "2020-02-17T04:13:18Z", "message": "add group by device"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd3f44ab710207bc10f484033e4c32e6b7fe75c4", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/dd3f44ab710207bc10f484033e4c32e6b7fe75c4", "committedDate": "2020-02-17T04:36:13Z", "message": "Update avg method and test values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e4f64eb6973e2bcc749f9cca3f3e1cc78c7d49", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/67e4f64eb6973e2bcc749f9cca3f3e1cc78c7d49", "committedDate": "2020-02-17T04:36:34Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a54e6e0160048b596fbdef3a85fcb46139850fe", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9a54e6e0160048b596fbdef3a85fcb46139850fe", "committedDate": "2020-02-17T05:45:41Z", "message": "fix align by device doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "153d4335c19ef6cb54e2e3eb727cdf58e551e655", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/153d4335c19ef6cb54e2e3eb727cdf58e551e655", "committedDate": "2020-02-17T05:46:05Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb97668bc52a77672acbd9e7782f473f2ef4ca3", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9eb97668bc52a77672acbd9e7782f473f2ef4ca3", "committedDate": "2020-02-17T06:14:35Z", "message": "rename raw query data set with value filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5df90c09d9f34e10dcc8eac6c00e81a33238a0d", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/c5df90c09d9f34e10dcc8eac6c00e81a33238a0d", "committedDate": "2020-02-17T06:21:23Z", "message": "add some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d46a4c4ae936e3482da99dc6803ed8d5dfe6df83", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/d46a4c4ae936e3482da99dc6803ed8d5dfe6df83", "committedDate": "2020-02-17T06:21:46Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "719a93812dd354bb81111a76c247b501e7263a8a", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/719a93812dd354bb81111a76c247b501e7263a8a", "committedDate": "2020-02-17T07:20:11Z", "message": "Cached chunk (#802)\n\n* add chunk cache in server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae09b5bf5400360004283fe4a5a0be30b749c911", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ae09b5bf5400360004283fe4a5a0be30b749c911", "committedDate": "2020-02-17T07:29:21Z", "message": "add ttl in seriesreader with value filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b2f45825a2b31c338beaf149325b9eaecfeda0f", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2b2f45825a2b31c338beaf149325b9eaecfeda0f", "committedDate": "2020-02-17T07:29:50Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91a37f8f33d5871dd5bdb4ab1ba80cb23fe61d7e", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/91a37f8f33d5871dd5bdb4ab1ba80cb23fe61d7e", "committedDate": "2020-02-17T10:21:32Z", "message": "fix a bug in tsfile test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1509a8bd603e95333f777342a6901f277bcef503", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/1509a8bd603e95333f777342a6901f277bcef503", "committedDate": "2020-02-17T10:22:34Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0577808ebdc86e8abb7cd521886af5f98d3e66a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a0577808ebdc86e8abb7cd521886af5f98d3e66a", "committedDate": "2020-02-17T12:45:38Z", "message": "do not print \"cant get cpu ratio\" in Tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a421890ad7b9ad814e48f48950c91bb942628bb9", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/a421890ad7b9ad814e48f48950c91bb942628bb9", "committedDate": "2020-02-17T12:47:05Z", "message": "fix bug in ActiveTimeSeriesCounter Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42fd2b72f61bfa32a11795b13009e45b3f5128a7", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/42fd2b72f61bfa32a11795b13009e45b3f5128a7", "committedDate": "2020-02-17T12:47:50Z", "message": "wait at most 30s for finishing merge tasks before stop daemon."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c0390fe91cd07c94851d70cb89ab368bfceb080", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/4c0390fe91cd07c94851d70cb89ab368bfceb080", "committedDate": "2020-02-17T12:48:20Z", "message": "Merge branch 'new_series_reader' of github.com:apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70ba6c8de5c8654e57137cb9465d58847d7175f6", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/70ba6c8de5c8654e57137cb9465d58847d7175f6", "committedDate": "2020-02-17T15:41:55Z", "message": "try to connect 6667 to check whether the socket is closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b453bbae93e0885e21d835d1230634675a958553", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b453bbae93e0885e21d835d1230634675a958553", "committedDate": "2020-02-17T15:42:46Z", "message": "try to connect 6667 to check whether the socket is closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3a00453dd26a217871e75a61e63758a455e731", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/9e3a00453dd26a217871e75a61e63758a455e731", "committedDate": "2020-02-17T16:44:19Z", "message": "check whether jmx port is closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e33be28526c8c763b707025ae22853b7a6bf150a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/e33be28526c8c763b707025ae22853b7a6bf150a", "committedDate": "2020-02-18T00:57:29Z", "message": "try 8181 port after environmentutil.cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6658a0a2fc93bd1e75ef0d2ce683b7eb0999a311", "author": {"user": {"login": "dynamicDr", "name": "Duan Tianyang"}}, "url": "https://github.com/apache/iotdb/commit/6658a0a2fc93bd1e75ef0d2ce683b7eb0999a311", "committedDate": "2020-02-18T01:11:09Z", "message": "[IOTDB-496]An extra line in CLI when the result is empty (#819)\n\n* [IOTDB-496]An extra line in align by device query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c2b803da524a2f7c9e6e3ecf2565f79a1598ecc", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/3c2b803da524a2f7c9e6e3ecf2565f79a1598ecc", "committedDate": "2020-02-18T01:42:31Z", "message": "print temp logs for checking why 8181 can not be closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c148346e81c94c37f9dae8f89241eaee1452f954", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/c148346e81c94c37f9dae8f89241eaee1452f954", "committedDate": "2020-02-18T01:55:18Z", "message": "print temp logs for checking why 8181 can not be closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e8fe371f12f605f07ce75153782a13b21f1bbbb", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2e8fe371f12f605f07ce75153782a13b21f1bbbb", "committedDate": "2020-02-18T02:42:44Z", "message": "remove unused daemon in IT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46643be08679a1081091394ad8ecb1e6a67d3d28", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/46643be08679a1081091394ad8ecb1e6a67d3d28", "committedDate": "2020-02-18T04:29:15Z", "message": "fix two daemon conflict in IoTDBRecoverIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c81b0c930cedbdd8b11730b245983072fb62ba2", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/4c81b0c930cedbdd8b11730b245983072fb62ba2", "committedDate": "2020-02-18T05:56:52Z", "message": "fix activeTimeseries null pointer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cde236271f0e8320db1752ddb994658c14801d5", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/5cde236271f0e8320db1752ddb994658c14801d5", "committedDate": "2020-02-18T05:57:12Z", "message": "print which files are left after cleaning a folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a434dd01021f780b3316880770835b4ba030ee0", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2a434dd01021f780b3316880770835b4ba030ee0", "committedDate": "2020-02-18T06:02:17Z", "message": "merge with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2571fbfa03a97b492b3d852d91938cbb1cd901a2", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2571fbfa03a97b492b3d852d91938cbb1cd901a2", "committedDate": "2020-02-18T06:02:27Z", "message": "merge with master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b2b639d88fd355a11c51781a8e67456d4f4182", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/d0b2b639d88fd355a11c51781a8e67456d4f4182", "committedDate": "2020-02-18T08:49:46Z", "message": "try to fix 8181 port not closed successful"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a161eded61193c0871ade7385f4ec15aa5e62b9", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/7a161eded61193c0871ade7385f4ec15aa5e62b9", "committedDate": "2020-02-18T09:46:44Z", "message": "[IOTDB-482] Vectorized TimeGenerator (#818)\n\n* rename and abstract TimeGenerator, combine LeafNode\r\n* remove unused cache in AbstractFileSeriesReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32b6a79a0b2808f702516b239a76556bdde66d6d", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/32b6a79a0b2808f702516b239a76556bdde66d6d", "committedDate": "2020-02-18T11:11:33Z", "message": "debug why files can not be deleted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05c45a36b25ab9cc9c50a92cba69ee7eb565e302", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/05c45a36b25ab9cc9c50a92cba69ee7eb565e302", "committedDate": "2020-02-18T13:23:53Z", "message": "debug why win can not delete files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a69d9731bed76383b45ab002f54153fcc060b6f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/9a69d9731bed76383b45ab002f54153fcc060b6f", "committedDate": "2020-02-18T13:34:47Z", "message": "fix a bug in TsFileIOWriter that the file field is not initialized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "112e264aef4164a4116016be97ecf50939bdce95", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/112e264aef4164a4116016be97ecf50939bdce95", "committedDate": "2020-02-18T15:02:07Z", "message": "add a log to split test functions in a Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "207daa47821b54a7950c77ec9eab3f4b7aab1932", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/207daa47821b54a7950c77ec9eab3f4b7aab1932", "committedDate": "2020-02-18T15:03:08Z", "message": "for debug"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNDQ3OTg4", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-360447988", "createdAt": "2020-02-18T15:45:24Z", "commit": {"oid": "7a161eded61193c0871ade7385f4ec15aa5e62b9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0daa79145a1e4c3c9cd511730b9569a946e898f1", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/0daa79145a1e4c3c9cd511730b9569a946e898f1", "committedDate": "2020-02-18T16:00:52Z", "message": "for debug reader and writer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaf121d354b64d1a15b0811b8d7e56f0527067b4", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/aaf121d354b64d1a15b0811b8d7e56f0527067b4", "committedDate": "2020-02-19T07:52:18Z", "message": "for debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa829e46b49eaea77899a3548cedd081a1aa9e69", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/aa829e46b49eaea77899a3548cedd081a1aa9e69", "committedDate": "2020-02-19T09:24:43Z", "message": "for debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "506dd87556645900e89be3ec9299e8b4a75e8283", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/506dd87556645900e89be3ec9299e8b4a75e8283", "committedDate": "2020-02-19T16:44:50Z", "message": "fix a reader not closed before delete data in UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9da016369a6c94d19c7be142bea243618c4c803", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/f9da016369a6c94d19c7be142bea243618c4c803", "committedDate": "2020-02-19T23:21:12Z", "message": "fix a reader not closed before delete data in UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c8380d5f8e37f412bcd426218880dafad678895", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6c8380d5f8e37f412bcd426218880dafad678895", "committedDate": "2020-02-20T00:11:49Z", "message": "add FileMonitor logger to monitot file open and close event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2410ff2d34ab5ccb269e5861c7636ff9ce02251f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2410ff2d34ab5ccb269e5861c7636ff9ce02251f", "committedDate": "2020-02-20T00:59:10Z", "message": "merge with ut_close_socket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc7261aff90582532430ccf03bd3ff2143aa127", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/4dc7261aff90582532430ccf03bd3ff2143aa127", "committedDate": "2020-02-20T04:29:09Z", "message": "fix bugs that file is not closed in"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "396771c14a471c0dc3ec72bc311c8c4573742cad", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/396771c14a471c0dc3ec72bc311c8c4573742cad", "committedDate": "2020-02-20T04:48:02Z", "message": "move an error log to info log.(resourceLogger)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90c513cc6b1b263d0fb9491d46a5978299f938a0", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/90c513cc6b1b263d0fb9491d46a5978299f938a0", "committedDate": "2020-02-20T04:49:10Z", "message": "merge with ut_close_socket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1dbcb3e26abcab53f6ae303d57ffa12ed38255f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/b1dbcb3e26abcab53f6ae303d57ffa12ed38255f", "committedDate": "2020-02-20T04:59:29Z", "message": "enable mergeLog for checking why merging is hanged"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed7b5483abc7bd9cd272dffb15082ab5fa5824ea", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/ed7b5483abc7bd9cd272dffb15082ab5fa5824ea", "committedDate": "2020-02-20T07:11:36Z", "message": "try to set stoptime as 0 to accelerate MetrcsService close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "487850dcf0633d002ace8892bc5eeb76c60c24d0", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/487850dcf0633d002ace8892bc5eeb76c60c24d0", "committedDate": "2020-02-20T08:09:51Z", "message": "try to solve the bug 'if the flushing thread is too fast, the tmpMemTable.wait() may never wakeup' in TsFileProcessor syncFlush()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78bf35180b3f4ad94b6387cf4881db34e731e107", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/78bf35180b3f4ad94b6387cf4881db34e731e107", "committedDate": "2020-02-20T11:04:42Z", "message": "try to solve the bug 'if the flushing thread is too fast, the tmpMemTable.wait() may never wakeup' in TsFileProcessor syncFlush() 2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f2e1e07909b3d6266a49a25fe6f2fcc03efe512", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/2f2e1e07909b3d6266a49a25fe6f2fcc03efe512", "committedDate": "2020-02-20T11:05:33Z", "message": "debug why 8181 is not closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a87d9e422d52f9f6cc63871ce09d414ad723c74a", "author": {"user": {"login": "jixuan1989", "name": "Xiangdong Huang"}}, "url": "https://github.com/apache/iotdb/commit/a87d9e422d52f9f6cc63871ce09d414ad723c74a", "committedDate": "2020-02-23T03:34:36Z", "message": "[IOTDB-510][IOTDB-501]Fix nullPointException bug in TsProcessor (#831)\n\n* add stop timeout for 8181, disable 8181 port when test\r\n* fix bug IOTDB-510, shouldClose is set to true but a new memtable is put to the flushing queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9570e2a1a850263428870c6215b2d41836169c33", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9570e2a1a850263428870c6215b2d41836169c33", "committedDate": "2020-02-23T04:03:53Z", "message": "resolve conflict after merging master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa9ff37f00d450d7d7a15601856e09fede78b1b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/4aa9ff37f00d450d7d7a15601856e09fede78b1b", "committedDate": "2020-02-23T04:24:34Z", "message": "fix sonar bug and smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77a01a5c688a1729d139e9632db7a16fc337dbd7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/77a01a5c688a1729d139e9632db7a16fc337dbd7", "committedDate": "2020-02-23T04:25:59Z", "message": "add license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f96fafd2830012b67717de1b5ae92829acaecb77", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/f96fafd2830012b67717de1b5ae92829acaecb77", "committedDate": "2020-02-23T05:43:33Z", "message": "add some test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0e59f10215c45cd44629d4cb177a6cde6f8e468", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/f0e59f10215c45cd44629d4cb177a6cde6f8e468", "committedDate": "2020-02-23T06:07:09Z", "message": "add header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b06b1ff789eb660964ffe39f39015193b45453a", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/3b06b1ff789eb660964ffe39f39015193b45453a", "committedDate": "2020-02-06T02:42:23Z", "message": "Extract series test util"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7e4a549afc4e53d0999ae404544cc3ca69c7841", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/d7e4a549afc4e53d0999ae404544cc3ca69c7841", "committedDate": "2020-02-06T02:45:38Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5570ec2b4ad9b6b9f18dc359667c2b534ea164ef", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/5570ec2b4ad9b6b9f18dc359667c2b534ea164ef", "committedDate": "2020-02-06T04:16:07Z", "message": "Add license"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3404293a089b7e9a890a874d5a949b6514db03ca", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/3404293a089b7e9a890a874d5a949b6514db03ca", "committedDate": "2020-02-06T09:44:22Z", "message": "Merge branch 'master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e998ab35ad9a2294d81af6ba70c4867b2f257fb", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/4e998ab35ad9a2294d81af6ba70c4867b2f257fb", "committedDate": "2020-02-06T09:53:54Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88f5a669a26f1abab44416cfdc4b3630d6738bdc", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/88f5a669a26f1abab44416cfdc4b3630d6738bdc", "committedDate": "2020-02-06T10:21:23Z", "message": "Enhance IT test for aggregation query with more than one functions on one series"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "838953099a39cec502bf2708e5eeb6d5f34e859e", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/838953099a39cec502bf2708e5eeb6d5f34e859e", "committedDate": "2020-02-06T10:37:06Z", "message": "Rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdd8e61ee79162679554adee489f2c12ce5c7d69", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/cdd8e61ee79162679554adee489f2c12ce5c7d69", "committedDate": "2020-02-06T10:39:25Z", "message": "add raw data query document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfdc6b5f8e208e0b4e1b4cfdf3341fe13132b028", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/cfdc6b5f8e208e0b4e1b4cfdf3341fe13132b028", "committedDate": "2020-02-06T10:39:43Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98f3d317ee9004224af7942674d3def23d2c8055", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/98f3d317ee9004224af7942674d3def23d2c8055", "committedDate": "2020-02-06T10:57:22Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "979fe85ec0a7f3331a9de5bdc3a5e70cf92478af", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/979fe85ec0a7f3331a9de5bdc3a5e70cf92478af", "committedDate": "2020-02-06T11:15:06Z", "message": "fix bug and add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1eb11042ee80062fa9240a245c8afdf1607f86c", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/b1eb11042ee80062fa9240a245c8afdf1607f86c", "committedDate": "2020-02-06T11:38:55Z", "message": "update raw data query and series reader doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd9517b92f3bba035ae0e63ffc99cc729902e826", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/bd9517b92f3bba035ae0e63ffc99cc729902e826", "committedDate": "2020-02-06T11:39:38Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b71fd95722519d8048401da82a87eb2126d29591", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/b71fd95722519d8048401da82a87eb2126d29591", "committedDate": "2020-02-06T12:00:35Z", "message": "[IOTDB-452] Do all aggregations of one series at one pass in GroupBy (#769)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb7565e2095f9fda34607df22adc36739485abde", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/eb7565e2095f9fda34607df22adc36739485abde", "committedDate": "2020-02-06T12:05:25Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eddc108b04f8baaea0cc3219ccbbd285038a78c3", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/eddc108b04f8baaea0cc3219ccbbd285038a78c3", "committedDate": "2020-02-06T12:05:41Z", "message": "Enhance"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ee0a4ff446b2d32a3779e91bf58c50fb46bccc5", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/0ee0a4ff446b2d32a3779e91bf58c50fb46bccc5", "committedDate": "2020-02-06T12:07:22Z", "message": "Add Aggregation desgin document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7deb6eb3dce530039d8df6d851d4c5fd4c10d072", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/7deb6eb3dce530039d8df6d851d4c5fd4c10d072", "committedDate": "2020-02-06T12:08:19Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45c505bd27810f55abad832c07b5c24bb94c604", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/b45c505bd27810f55abad832c07b5c24bb94c604", "committedDate": "2020-02-06T14:15:33Z", "message": "Add SeriesReaderByTimestampTest for SeriesReaderByTimestamp (#773)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6ff2a5310807c7883cabceb0aefc6bf4948ed9e", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/e6ff2a5310807c7883cabceb0aefc6bf4948ed9e", "committedDate": "2020-02-06T14:21:58Z", "message": "optimze data query doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c1cf27590f81b56acfd7101d3bdd642690d9add", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/6c1cf27590f81b56acfd7101d3bdd642690d9add", "committedDate": "2020-02-06T15:55:00Z", "message": "Add Group By design document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc383cd361f7e9285c6cccd8117590eef3ba3bfb", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/cc383cd361f7e9285c6cccd8117590eef3ba3bfb", "committedDate": "2020-02-07T01:06:11Z", "message": "merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bf629e2cad00613b36261514531e21019ffdd72", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2bf629e2cad00613b36261514531e21019ffdd72", "committedDate": "2020-02-07T01:15:48Z", "message": "remove print in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2ad7553848b0feabb85c7f76d7abf7015ee117", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/4e2ad7553848b0feabb85c7f76d7abf7015ee117", "committedDate": "2020-02-07T01:18:33Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db49d52e37b02409034eec56061c8ca3f3d9ba3", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/4db49d52e37b02409034eec56061c8ca3f3d9ba3", "committedDate": "2020-02-07T01:23:23Z", "message": "move package"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fb17fbf41c71319850aa2b24dabe236d4a734de", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/3fb17fbf41c71319850aa2b24dabe236d4a734de", "committedDate": "2020-02-07T02:59:29Z", "message": "simplify PlanExecutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3e2367a8ad1f0b2a97798ed99f397265e73e149", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/a3e2367a8ad1f0b2a97798ed99f397265e73e149", "committedDate": "2020-02-07T08:12:01Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb920ce66115bf2777a62ca77b1b357a0e2fc3a5", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/eb920ce66115bf2777a62ca77b1b357a0e2fc3a5", "committedDate": "2020-02-07T09:01:13Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5c59614256df06e4f85959d1f3b93620fcd36a2", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/a5c59614256df06e4f85959d1f3b93620fcd36a2", "committedDate": "2020-02-07T09:21:05Z", "message": "review planner and RawDataQueryExecutor (#779)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9501fcdeea74164e61589fda1123685505b2c6e2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9501fcdeea74164e61589fda1123685505b2c6e2", "committedDate": "2020-02-07T09:41:36Z", "message": "optimize QueryRouter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9daae58989ff86dd0a0576efa88378a8388b3c42", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/9daae58989ff86dd0a0576efa88378a8388b3c42", "committedDate": "2020-02-07T11:39:37Z", "message": "add more test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46542d3804f4a1ad015b236a0ef90af5847ad566", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/46542d3804f4a1ad015b236a0ef90af5847ad566", "committedDate": "2020-02-07T12:51:06Z", "message": "delete useless local variable in groupby"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d04339da22d0866fc1b3e76f53edfc664318c28b", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/d04339da22d0866fc1b3e76f53edfc664318c28b", "committedDate": "2020-02-08T04:00:12Z", "message": "enable session handle duplicate columns"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4b76296b85876d2ee247b430e8ab1e575f83b06", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/f4b76296b85876d2ee247b430e8ab1e575f83b06", "committedDate": "2020-02-08T04:01:57Z", "message": "remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ea5ff791ef72b0125e70f2250f49d1aa5ec42eb", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/2ea5ff791ef72b0125e70f2250f49d1aa5ec42eb", "committedDate": "2020-02-08T05:27:26Z", "message": "Resolve conflict from IOTDB-447"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96cf31e6213388f86fe575d125602506bc2a5118", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/96cf31e6213388f86fe575d125602506bc2a5118", "committedDate": "2020-02-08T05:34:10Z", "message": "resolve conflict from IOTDB-447"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6db2b91daeedd85785ba71918ed7d63251024097", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/6db2b91daeedd85785ba71918ed7d63251024097", "committedDate": "2020-02-08T06:03:59Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fab09b824632311da7698b8a30438155d2759ee", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/9fab09b824632311da7698b8a30438155d2759ee", "committedDate": "2020-02-08T14:38:39Z", "message": "enable warn level log for UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7414e4835f70fb48fec0068c278ed63a1a2469a8", "author": {"user": {"login": "Ring-k", "name": null}}, "url": "https://github.com/apache/iotdb/commit/7414e4835f70fb48fec0068c278ed63a1a2469a8", "committedDate": "2020-02-09T04:59:12Z", "message": "Update TsFile query document (#778)\n\n* add Tsfile query document"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cb7ffe24065f399555a764ca8c446255a0f236d", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2cb7ffe24065f399555a764ca8c446255a0f236d", "committedDate": "2020-02-09T05:02:03Z", "message": "remove print in IoTDBSessionIT"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1MDQ4OTA3", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-355048907", "createdAt": "2020-02-07T10:04:10Z", "commit": {"oid": "3fb17fbf41c71319850aa2b24dabe236d4a734de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDowNjozN1rOFm4Hrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMDowNjozN1rOFm4Hrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwOTY3OA==", "bodyText": "typo: \u963b\u585e\u5bf9\u5217", "url": "https://github.com/apache/iotdb/pull/713#discussion_r376309678", "createdAt": "2020-02-07T10:06:37Z", "author": {"login": "wshao08"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()\n+\n+```\n+private void init() throws InterruptedException {\n+\ttimeHeap = new TreeSet<>();\n+\t// \u4e3a\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6784\u5efa\u751f\u4ea7\u8005\u4efb\u52a1\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  ManagedSeriesReader reader = seriesReaderList.get(i);\n+\t  reader.setHasRemaining(true);\n+\t  reader.setManagedByQueryManager(true);\n+\t  pool.submit(new ReadTask(reader, blockingQueueArray[i]));\n+\t}\n+\t// \u521d\u59cb\u5316\u6700\u5c0f\u5806\uff0c\u586b\u5145\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u7f13\u5b58\n+\tfor (int i = 0; i < seriesReaderList.size(); i++) {\n+\t  // \u8c03\u7528fillCache(int)\u65b9\u6cd5\u586b\u5145\u7f13\u5b58\n+\t  fillCache(i);\n+\t  // \u5c1d\u8bd5\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u5f53\u524d\u6700\u5c0f\u65f6\u95f4\u6233\u653e\u8fdb\u5806\u4e2d\n+\t  if (cachedBatchDataArray[i] != null && cachedBatchDataArray[i].hasCurrent()) {\n+\t    long time = cachedBatchDataArray[i].currentTime();\n+\t    timeHeap.add(time);\n+\t  }\n+\t}\n+}\n+```\n+\n+####  fillCache(int)\n+\n+\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4ece\u963b\u585e\u961f\u5217\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u5e76\u586b\u5145\u7f13\u5b58\uff0c\u5177\u4f53\u903b\u8f91\u89c1\u4e0b\u6587\u6ce8\u91ca\n+\n+```\n+private void fillCache(int seriesIndex) throws InterruptedException {\n+    // \u4ece\u963b\u585e\u961f\u5217\u4e2d\u62ff\u6570\u636e\uff0c\u5982\u679c\u6ca1\u6709\u6570\u636e\uff0c\u5219\u4f1a\u963b\u585e\u7b49\u5f85\u961f\u5217\u4e2d\u6709\u6570\u636e\n+\tBatchData batchData = blockingQueueArray[seriesIndex].take();\n+\t// \u5982\u679c\u662f\u4e00\u4e2a\u4fe1\u53f7BatchData\uff0c\u5219\u5c06\u76f8\u5e94\u65f6\u95f4\u5e8f\u5217\u7684oMoreDataInQueue\u7f6e\u4e3afalse\n+\tif (batchData instanceof SignalBatchData) {\n+\t  noMoreDataInQueueArray[seriesIndex] = true;\n+\t}\n+\telse {\n+\t  // \u5c06\u53d6\u51fa\u7684BatchData\u653e\u8fdbcachedBatchDataArray\u7f13\u5b58\u8d77\u6765\n+\t  cachedBatchDataArray[seriesIndex] = batchData;\n+\t\n+\t  // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u4e0e\u751f\u4ea7\u8005\u4efb\u52a1\u90a3\u8fb9\u4e00\u6837\uff0c\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+\t  synchronized (seriesReaderList.get(seriesIndex)) {\n+\t    // \u53ea\u6709\u5f53\u963b\u585e\u5bf9\u5217\u4e0d\u6ee1\u7684\u65f6\u5019\uff0c\u6211\u4eec\u624d\u9700\u8981\u5224\u65ad\u662f\u4e0d\u662f\u9700\u8981\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\uff0c\u8fd9\u91cc\u4e5f\u4fdd\u8bc1\u4e86\u751f\u4ea7\u8005\u4efb\u52a1\u4f1a\u88ab\u63d0\u4ea4\uff0c\u5f53\u4e14\u4ec5\u5f53\u963b\u585e\u961f\u5217\u4e0d\u6ee1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9501fcdeea74164e61589fda1123685505b2c6e2"}, "originalPosition": 184}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b31a856b7ed3d4908712424b6075a0d347c2fb77", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/b31a856b7ed3d4908712424b6075a0d347c2fb77", "committedDate": "2020-02-09T16:50:14Z", "message": "fix typo in RawDataQuery.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760da1137d8def454eec4c44b8a5b7a593fbbc0e", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/760da1137d8def454eec4c44b8a5b7a593fbbc0e", "committedDate": "2020-02-10T00:56:50Z", "message": "Merge remote-tracking branch 'origin/master' into ut_close_socket"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f47303ed936e0679ed5aa5a9ebb0906b2fd62e5", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/5f47303ed936e0679ed5aa5a9ebb0906b2fd62e5", "committedDate": "2020-02-10T01:57:01Z", "message": "fix travis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c4c1564709134a76bced711b35fb637b7214411", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8c4c1564709134a76bced711b35fb637b7214411", "committedDate": "2020-02-10T02:27:03Z", "message": "fix travis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5172475dea2c2b7322993c9e160172598a3a78", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/8c5172475dea2c2b7322993c9e160172598a3a78", "committedDate": "2020-02-10T05:58:02Z", "message": "add some tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d16f11f8ac1492c86788413a10394b6df31df47", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/7d16f11f8ac1492c86788413a10394b6df31df47", "committedDate": "2020-02-10T05:58:23Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/bb3595305c8fb5190046a8cdd2441907d939b48f", "committedDate": "2020-02-10T06:52:29Z", "message": "Add Apache Header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTU0NTk2", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-355954596", "createdAt": "2020-02-10T13:57:59Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1ODowMFrOFnm-Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1ODowMFrOFnm-Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NzMxNA==", "bodyText": "Why is this statement always false here?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377077314", "createdAt": "2020-02-10T13:58:00Z", "author": {"login": "LeiRui"}, "path": "server/src/test/java/org/apache/iotdb/db/query/reader/series/SeriesAggregateReaderTest.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import static org.apache.iotdb.db.conf.IoTDBConstant.PATH_SEPARATOR;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.fail;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.exception.metadata.MetadataException;\n+import org.apache.iotdb.db.exception.path.PathException;\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.factory.AggreResultFactory;\n+import org.apache.iotdb.tsfile.exception.write.WriteProcessException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.write.schema.MeasurementSchema;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class SeriesAggregateReaderTest {\n+\n+  private static final String SERIES_READER_TEST_SG = \"root.seriesReaderTest\";\n+  private List<String> deviceIds = new ArrayList<>();\n+  private List<MeasurementSchema> measurementSchemas = new ArrayList<>();\n+\n+  private List<TsFileResource> seqResources = new ArrayList<>();\n+  private List<TsFileResource> unseqResources = new ArrayList<>();\n+\n+\n+  @Before\n+  public void setUp() throws MetadataException, PathException, IOException, WriteProcessException {\n+    SeriesReaderTestUtil.setUp(measurementSchemas, deviceIds, seqResources, unseqResources);\n+  }\n+\n+  @After\n+  public void tearDown() throws IOException, StorageEngineException {\n+    SeriesReaderTestUtil.tearDown(seqResources, unseqResources);\n+  }\n+\n+  @Test\n+  public void aggregateTest() {\n+    try {\n+      Path path = new Path(SERIES_READER_TEST_SG + PATH_SEPARATOR + \"device0\", \"sensor0\");\n+      QueryDataSource queryDataSource = new QueryDataSource(path, seqResources, unseqResources);\n+      SeriesAggregateReader seriesReader = new SeriesAggregateReader(path, TSDataType.INT32,\n+          new QueryContext(), queryDataSource, null, null);\n+      AggregateResult aggregateResult = AggreResultFactory\n+          .getAggrResultByName(\"count\", TSDataType.INT32);\n+      while (seriesReader.hasNextChunk()) {\n+        if (seriesReader.canUseCurrentChunkStatistics()) {\n+          Statistics chunkStatistics = seriesReader.currentChunkStatistics();\n+          aggregateResult.updateResultFromStatistics(chunkStatistics);\n+          seriesReader.skipCurrentChunk();\n+          continue;\n+        }\n+        int loopTime = 0;\n+        while (seriesReader.hasNextPage()) {\n+          if (seriesReader.canUseCurrentPageStatistics()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2Mzc5Mzc1", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356379375", "createdAt": "2020-02-11T01:36:02Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozNjowMlrOFn7coQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozNjowMlrOFn7coQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMjc2OQ==", "bodyText": "OrFilter :=Filter && Filter?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377412769", "createdAt": "2020-02-11T01:36:02Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2Mzc5ODY5", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356379869", "createdAt": "2020-02-11T01:38:02Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozODowMlrOFn7eQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTozODowMlrOFn7eQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzE4Nw==", "bodyText": "\u8bed\u53e5\u4e0d\u901a\uff1a\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413187", "createdAt": "2020-02-11T01:38:02Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgwMzQ5", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356380349", "createdAt": "2020-02-11T01:40:06Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MDowNlrOFn7fyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MDowNlrOFn7fyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzU3OA==", "bodyText": "\u5efa\u8bae\u4fee\u6539\u4e3a\uff1a\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u67e5\u8be2\u65f6\u95f4\u5e8f\u5217\u8fd4\u56de\u7684\u6570\u636e\u70b9", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413578", "createdAt": "2020-02-11T01:40:06Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgwNjg3", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356380687", "createdAt": "2020-02-11T01:41:41Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MTo0MVrOFn7hCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0MTo0MVrOFn7hCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxMzg5OA==", "bodyText": "\u5efa\u8bae\uff1a\u4fee\u6539\u4e3a\u67e5\u8be2\u8fd4\u56de\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377413898", "createdAt": "2020-02-11T01:41:41Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgxMjAz", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356381203", "createdAt": "2020-02-11T01:43:48Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0Mzo0OFrOFn7ixg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0Mzo0OFrOFn7ixg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDM0Mg==", "bodyText": "OrExpression := Filter && Filter\uff1f", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377414342", "createdAt": "2020-02-11T01:43:48Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgxNzQ0", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356381744", "createdAt": "2020-02-11T01:46:12Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0NjoxMlrOFn7kZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0NjoxMlrOFn7kZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNDc1OQ==", "bodyText": "\u8868\u8fbe\u6b20\u59a5\uff1aIExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377414759", "createdAt": "2020-02-11T01:46:12Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgyNDUz", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356382453", "createdAt": "2020-02-11T01:49:22Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0OToyMlrOFn7m2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo0OToyMlrOFn7m2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTM4Nw==", "bodyText": "\u6761\u4ef61\uff1aIExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377415387", "createdAt": "2020-02-11T01:49:22Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 201}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgyNzc0", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356382774", "createdAt": "2020-02-11T01:51:00Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1MTowMVrOFn7n4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1MTowMVrOFn7n4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNTY1MQ==", "bodyText": "\u8fd9\u91cc\u4e0e\u524d\u8ff0\u7684\u6761\u4ef6\u4e5f\u660e\u663e\u4e0d\u7b26", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377415651", "createdAt": "2020-02-11T01:51:01Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 210}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MzgzMTc2", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356383176", "createdAt": "2020-02-11T01:52:57Z", "commit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1Mjo1N1rOFn7pSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMTo1Mjo1N1rOFn7pSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQxNjAwOQ==", "bodyText": "\u8fd9\u5c31\u6709\u4e9b\u5947\u602a\u4e86\uff0c\u4e0d\u80fd\u6267\u884c\u7684\u8bdd\u4e3a\u4ec0\u4e48\u628a\u8fd9\u5f53\u505a\u8303\u4f8b\u653e\u5230\u4e86184\u884c", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377416009", "createdAt": "2020-02-11T01:52:57Z", "author": {"login": "EJTTianYu"}, "path": "docs/Documentation-CHN/SystemDesign/1-TsFile/4-Read.md", "diffHunk": "@@ -21,7 +21,545 @@\n \n # TsFile \u8bfb\u6d41\u7a0b\n \n-* org.apache.iotdb.tsfile.read.*\n+\u672c\u7ae0\u8282\u4ecb\u7ecd TsFile \u7684\u8bfb\u53d6\u6d41\u7a0b\uff0c\u5185\u5bb9\u603b\u4f53\u4e0a\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u5bf9\u8fc7\u6ee4\u6761\u4ef6\u548c\u65f6\u95f4\u8868\u8fbe\u5f0f\u7684\u4ecb\u7ecd\uff0c\u4ee5\u53ca\u5bf9\u67e5\u8be2\u6d41\u7a0b\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002\n+\n+* 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+    * 1.1 Filter\n+    * 1.2 Expression\u8868\u8fbe\u5f0f\n+        * 1.2.1 SingleSeriesExpression \u8868\u8fbe\u5f0f\n+        * 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+        * 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+        * 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+        * 1.2.5 IExpression \u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u4f18\u5316\u7b97\u6cd5\n+* 2 TsFile \u67e5\u8be2\u6267\u884c\u8fc7\u7a0b\n+    * 2.1 \u8bbe\u8ba1\u539f\u7406\n+    * 2.2 \u4e09\u5927\u67e5\u8be2\u7ec4\u4ef6\n+        * 2.2.1 FileSeriesReader \u7ec4\u4ef6\n+        * 2.2.2 FileSeriesReaderByTimestamp \u7ec4\u4ef6\n+        * 2.2.3 TimeGeneratorImpl \u7ec4\u4ef6\n+    * 2.3 \u5f52\u5e76\u67e5\u8be2\n+    * 2.4 \u8fde\u63a5\u67e5\u8be2\n+    * 2.5 \u67e5\u8be2\u5165\u53e3\n+    * 2.6 \u76f8\u5173\u4ee3\u7801\u4ecb\u7ecd\n+\n+## 1 \u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\n+\n+\u672c\u7ae0\u8282\u9996\u5148\u4ecb\u7ecd Tsfile \u6587\u4ef6\u8bfb\u53d6\u65f6\u9700\u8981\u7528\u5230\u7684\u8fc7\u6ee4\u6761\u4ef6\u548c\u67e5\u8be2\u8868\u8fbe\u5f0f\u7684\u76f8\u5173\u5b9a\u4e49\uff1b\u5176\u6b21\u4ecb\u7ecd\u5982\u4f55\u5c06\u7528\u6237\u8f93\u5165\u7684\u8fc7\u6ee4\u6761\u4ef6\u8f6c\u5316\u4e3a\u7cfb\u7edf\u53ef\u4ee5\u6267\u884c\u7684\u67e5\u8be2\u6761\u4ef6\u3002\n+\n+### 1.1 Filter\n+\n+Filter \u8868\u793a\u57fa\u672c\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u7528\u6237\u53ef\u4ee5\u5728\u65f6\u95f4\u6233\u4e0a\u3001\u6216\u67d0\u4e00\u5217\u7684\u503c\u4e0a\u7ed9\u51fa\u5177\u4f53\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u5c06\u65f6\u95f4\u6233\u548c\u5217\u503c\u7684\u8fc7\u6ee4\u6761\u4ef6\u52a0\u4ee5\u533a\u5206\u540e\uff0c\u8bbe t \u8868\u793a\u67d0\u4e00\u65f6\u95f4\u6233\u5e38\u91cf\uff0cFilter \u6709\u4ee5\u4e0b12\u79cd\u57fa\u672c\u7c7b\u578b\uff0c\u5728\u5b9e\u73b0\u4e0a\u662f\u7ee7\u627f\u5173\u7cfb\u3002\n+\n+Filter|\u7c7b\u578b|\u542b\u4e49|\u793a\u4f8b\n+----|----|---|------\n+TimeEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u7b49\u4e8e t \n+TimeGt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u67d0\u4e2a\u503c|TimeGt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927 t\n+TimeGtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeGtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5927\u4e8e\u7b49 t\n+TimeLt|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u67d0\u4e2a\u503c|TimeLt(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f t\n+TimeLtEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeLtEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u5c0f\u4e8e\u7b49 t\n+TimeNotEq|\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6|\u65f6\u95f4\u6233\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|TimeNotEq(t)\uff0c\u8868\u793a\u65f6\u95f4\u6233\u4e0d\u7b49 t\n+ValueEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueEq(2147483649)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7b49\u4e8e2147483649\n+ValueGt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u67d0\u4e2a\u503c|ValueGt(100.5)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e100.5\n+ValueGtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueGtEq(2)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5927\u4e8e\u7b49\u4e8e2\n+ValueLt|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u67d0\u4e2a\u503c|ValueLt(\"string\")\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5b57\u5178\u5e8f\u5c0f\u4e8e\"string\"\n+ValueLtEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueLtEq(-100)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq|\u503c\u8fc7\u6ee4\u6761\u4ef6|\u8be5\u5217\u6570\u503c\u4e0d\u7b49\u4e8e\u67d0\u4e2a\u503c|ValueNotEq(true)\uff0c\u8868\u793a\u8be5\u5217\u6570\u503c\u7684\u503c\u4e0d\u80fd\u4e3atrue\n+\n+Filter \u53ef\u4ee5\u7531\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b50 Filter \u7ec4\u6210\u3002\u5982\u679c Filter \u7531\u5355\u4e00 Filter \u6784\u6210\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e00\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca UnaryFilter \u3002\u82e5\u5305\u542b\u4e24\u4e2a\u5b50 Filter\uff0c\u5219\u79f0\u4e4b\u4e3a\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ca BinaryFilter\u3002\u5728\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u4e2d\uff0c\u4e24\u4e2a\u5b50 Filter \u4e4b\u95f4\u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\uff0c\u524d\u8005\u79f0\u4e3a AndFilter\uff0c\u540e\u8005\u79f0\u4e3a OrFilter\u3002AndFilter \u548c OrFilter \u90fd\u662f\u4e8c\u5143\u8fc7\u6ee4\u6761\u4ef6\u3002UnaryFilter \u548c BinaryFilter \u90fd\u662f Filter\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa\u4e00\u4e9b AndFilter \u548c OrFilter \u7684\u793a\u4f8b\uff0c\u5176\u4e2d\u201c&&\u201d\u8868\u793a\u5173\u7cfb\u201c\u4e0e\u201d\uff0c\u201c||\u201d\u8868\u793a\u5173\u7cfb\u201c\u6216\u201d\u3002\n+\n+1. AndFilter(TimeGt(100), TimeLt(200)) \u8868\u793a\u201ctimestamp > 100 && timestamp < 200\u201d\n+2. AndFilter (TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 && value > 0.5\u201d\n+3. AndFilter (AndFilter (TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) && value > 0.5\u201d\n+4. OrFilter(TimeGt(100), ValueGt(0.5)) \u8868\u793a\u201ctimestamp > 100 || value > 0.5\u201d\n+5. OrFilter (AndFilter(TimeGt(100), TimeLt(200)), ValueGt(0.5)) \u8868\u793a\u201c(timestamp > 100 && timestamp < 200) || value > 0.5\u201d\n+\n+\u4e0b\u9762\uff0c\u7ed9\u51fa\u201cFilter\u201d\u3001\u201cAndFilter\u201d\u548c\u201cOrFilter\u201d\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\uff1a\n+\n+    Filter := Basic Filter | AndFilter | OrFilter\n+    AndFilter := Filter && Filter\n+    OrFilter := Filter && Filter\n+\n+\u4e3a\u4e86\u4fbf\u4e8e\u8868\u793a\uff0c\u4e0b\u9762\u7ed9\u51fa Basic Filter\u3001AndFilter \u548c OrFilter \u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\uff0c\u5176\u4e2d t \u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a INT64 \u7684\u53d8\u91cf\uff1bv\u8868\u793a\u6570\u636e\u7c7b\u578b\u4e3a BOOLEAN\u3001INT32\u3001INT64\u3001FLOAT\u3001DOUBLE \u6216 BINARY \u7684\u53d8\u91cf\u3002\n+\n+<style> table th:nth-of-type(2) { width: 150px; } </style>\n+\u540d\u79f0|\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5|\u793a\u4f8b\n+----|------------|------\n+TimeEq| time == t| time == 14152176545\uff0c\u8868\u793a timestamp \u7b49\u4e8e 14152176545 \n+TimeGt| time > t| time > 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e 14152176545\n+TimeGtEq| time >= t| time >= 14152176545\uff0c\u8868\u793a timestamp \u5927\u4e8e\u7b49\u4e8e 14152176545\n+TimeLt| time < t| time < 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e 14152176545\n+TimeLtEq| time <= t| time <= 14152176545\uff0c\u8868\u793a timestamp \u5c0f\u4e8e\u7b49\u4e8e 14152176545\n+TimeNotEq| time != t| time != 14152176545\uff0c\u8868\u793a timestamp \f\u7b49\u4e8e 14152176545\n+ValueEq| value == v| value == 10\uff0c\u8868\u793a value \u7b49\u4e8e 10\n+ValueGt| value > v| value > 100.5\uff0c\u8868\u793a value \u5927\u4e8e 100.5\n+ValueGtEq| value >= v| value >= 2\uff0c\u8868\u793a value \u5927\u4e8e\u7b49\u4e8e 2\n+ValueLt| value < v| value < \u201cstring\u201d\uff0c\u8868\u793a value [1e\u5c0f\u4e8e\u201cstring\u201d\n+ValueLtEq| value <= v| value <= -100\uff0c\u8868\u793a value \u5c0f\u4e8e\u7b49\u4e8e-100\n+ValueNotEq| value != v| value != true\uff0c\u8868\u793a value \u7684\u503c\u4e0d\u80fd\u4e3atrue\n+AndFilter| \\<Filter> && \\<Filter>| 1. value > 100 && value < 200,\u8868\u793a value\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\uff1b <br>2. (value >= 100 && value <= 200) && time > 14152176545,\u8868\u793a\u201cvalue \u5927\u4e8e\u7b49\u4e8e100 \u4e14 value \u5c0f\u4e8e\u7b49\u4e8e200\u201d \u4e14 \u201c\u65f6\u95f4\u6233\u5927\u4e8e 14152176545\u201d\n+OrFilter| \\<Filter> &#124;&#124; \\<Filter>| 1. value > 100 &#124;&#124; time >  14152176545\uff0c\u8868\u793avalue\u5927\u4e8e100\u6216\u65f6\u95f4\u6233\u5927\u4e8e14152176545\uff1b<br>2. (value > 100 && value < 200)&#124;&#124; time > 14152176545\uff0c\u8868\u793a\u201cvalue\u5927\u4e8e100\u4e14value\u5c0f\u4e8e200\u201d\u6216\u201c\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\n+\n+### 1.2 Expression\u8868\u8fbe\u5f0f\n+\n+\u5f53\u7ed9\u8fc7\u6ee4\u6761\u4ef6\u8d4b\u4e88\u4e00\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u542b\u4e49\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u3002\u4f8b\u5982\uff0c\u201c\u6570\u503c\u5927\u4e8e10\u201d\u4ec5\u8868\u793a\u8fc7\u6ee4\u6761\u4ef6\uff0c\u65e0\u5b9e\u9645\u7684\u67e5\u8be2\u610f\u4e49\uff1b\u7136\u800c\u201c\u5e8f\u5217\u2018d1.s1\u2019\u7684\u6570\u503c\u5927\u4e8e10\u201d\u5c31\u4e00\u6761\u8868\u8fbe\u5f0f\u3002\u7279\u6b8a\u5730\uff0c\u5982\u679c\u4ec5\u5bf9\u65f6\u95f4\u6233\u505a\u9650\u5b9a\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u7531\u4e8e\u672c\u8eab\u5177\u6709\u201c\u65f6\u95f4\u6233\u201d\u8fd9\u4e00\u5c5e\u6027\uff0c\u53ef\u4ee5\u6784\u6210\u8868\u8fbe\u5f0f\uff0c\u79f0\u4e3a GlobalTimeExpression\u3002\u4ee5\u4e0b\u7ae0\u8282\u5c06\u5bf9\u8868\u8fbe\u5f0f\u8fdb\u884c\u5c55\u5f00\u4ecb\u7ecd\u3002\n+\n+#### 1.2.1 SingleSeriesExpression\u8868\u8fbe\u5f0f\n+\n+SingleSeriesExpression \u8868\u793a\u9488\u5bf9\u67d0\u4e00\u6307\u5b9a\u65f6\u95f4\u5e8f\u5217\u7684\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a SingleSeriesExpression \u5305\u542b\u4e00\u4e2a Path \u548c\u4e00\u4e2a Filter\u3002Path \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\uff1bFilter \u5373\u4e3a2.1\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 Filter\uff0c\u8868\u793a\u76f8\u5e94\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\n+\n+SingleSeriesExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+    SingleSeriesExpression\n+        Path: \u8be5 SingleSeriesExpression \u6307\u5b9a\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u8def\u5f84\n+        Filter\uff1a\u8fc7\u6ee4\u6761\u4ef6\n+\n+\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a SingleSeriesExpression \u8868\u793a\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3 Filter\u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002\u4e0b\u9762\u7ed9\u51fa SingleSeriesExpression \u7684\u793a\u4f8b\u53ca\u5bf9\u5e94\u7684\u8868\u793a\u65b9\u6cd5\u3002\n+\n+\u4f8b1. \n+\n+    SingleSeriesExpression\n+        Path: \"d1.s1\"\n+        Filter: AndFilter(ValueGt(100), ValueLt(200))\n+\n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u503c\u5c0f\u4e8e200\u201d\u3002\n+\n+\u5176\u7b26\u53f7\u5316\u7684\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200)\n+\n+---------------------------\n+\u4f8b2. \n+    \n+    SingleSeriesExpression\n+        Path\uff1a\u201cd1.s1\u201d\n+        Filter\uff1aAndFilter(AndFilter(ValueGt(100), ValueLt(200)), TimeGt(14152176545))\n+    \n+\u8be5 SingleSeriesExpression \u8868\u793a\"d1.s1\"\u8fd9\u4e00\u65f6\u95f4\u5e8f\u5217\u5fc5\u987b\u6ee1\u8db3\u6761\u4ef6\u201c\u503c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u4e14\u65f6\u95f4\u6233\u5927\u4e8e14152176545\u201d\u3002\n+    \n+\u5176\u7b26\u53f7\u5316\u8868\u8fbe\u65b9\u5f0f\u4e3a\uff1aSingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) && time > 14152176545)\n+\n+#### 1.2.2 GlobalTimeExpression \u8868\u8fbe\u5f0f\n+GlobalTimeExpression \u8868\u793a\u5168\u5c40\u7684\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e00\u4e2a GlobalTimeExpression \u5305\u542b\u4e00\u4e2a Filter\uff0c\u4e14\u8be5 Filter \u4e2d\u5305\u542b\u7684\u5b50 Filter \u5fc5\u987b\u5168\u4e3a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u3002\u5728\u4e00\u6b21\u67e5\u8be2\u4e2d\uff0c\u4e00\u4e2a GlobalTimeExpression \u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u6570\u636e\u70b9\u5fc5\u987b\u6ee1\u8db3\u8be5\u8868\u8fbe\u5f0f\u4e2d Filter \u6240\u8868\u793a\u7684\u8fc7\u6ee4\u6761\u4ef6\u3002GlobalTimeExpression \u7684\u7ed3\u6784\u5982\u4e0b\uff1a\n+\n+\n+    GlobalTimeExpression\n+        Filter: \u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\u7ec4\u6210\u7684 Filter\u3002\n+        \u6b64\u5904\u7684Filter\u5f62\u5f0f\u5316\u5b9a\u4e49\u5982\u4e0b\uff1a\n+            Filter := TimeFilter | AndExpression | OrExpression\n+            AndExpression := Filter && Filter\n+            OrExpression := Filter && Filter\n+\n+\u4e0b\u9762\u7ed9\u51fa GlobalTimeExpression \u7684\u4e00\u4e9b\u4f8b\u5b50\uff0c\u5747\u91c7\u7528\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\n+1. GlobalTimeExpression(time > 14152176545 && time < 14152176645)\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u7684\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e14152176545\u4e14\u5c0f\u4e8e14152176645\u201d\n+2. GlobalTimeExpression((time > 100 && time < 200) || (time > 400 && time < 500))\u8868\u793a\u6240\u6709\u88ab\u9009\u62e9\u5217\u7684\u65f6\u95f4\u6233\u5fc5\u987b\u6ee1\u8db3\u201c\u5927\u4e8e100\u4e14\u5c0f\u4e8e200\u201d\u6216\u201c\u5927\u4e8e400\u4e14\u5c0f\u4e8e500\u201d\n+\n+#### 1.2.3 IExpression \u8868\u8fbe\u5f0f\n+IExpression \u8868\u793a\u4e00\u6b21\u67e5\u8be2\u7684\u6240\u6709\u5217\u4e0a\u7684\u8fc7\u6ee4\u6761\u4ef6\u603b\u548c\u3002\u4e00\u4e2a IExpression \u53ef\u4ee5\u662f\u4e00\u4e2a SingleSeriesExpression \u6216\u8005\u4e00\u4e2a GlobalTimeExpression\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cIExpression \u4e5f\u79f0\u4e3a\u4e00\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 UnaryExpression\u3002\u4e00\u4e2a IExpression \u4e5f\u53ef\u4ee5\u7531\u4e24\u4e2a IExpression \u901a\u8fc7\u903b\u8f91\u5173\u7cfb\u201c\u4e0e\u201d\u3001\u201c\u6216\u201d\u8fdb\u884c\u8fde\u63a5\u3002\u901a\u8fc7\u5173\u7cfb\u201c\u4e0e\u201d\u8fde\u63a5\u5f97\u5230\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u201c\u4e0e\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cAndExpression\u201d\u3002\u540c\u7406\uff0c\u901a\u8fc7\u5173\u7cfb\u201c\u6216\u201d\u8fde\u63a5\u7684\u8868\u8fbe\u5f0f\u79f0\u4e3a\u201c\u6216\u8868\u8fbe\u5f0f\u201d\uff0c\u5373\u201cOrExpression\u201d\u3002\u7531\u4e24\u4e2a IExpression \u8fde\u63a5\u6210\u7684\u8868\u8fbe\u5f0f\u53c8\u79f0\u4e3a\u4e8c\u5143\u8868\u8fbe\u5f0f\uff0c\u5373 BinaryExpression\u3002\u4e00\u5143\u8868\u8fbe\u5f0f\u3001\u4e8c\u5143\u8868\u8fbe\u5f0f\u90fd\u662f IExpression\u3002\n+\n+\u4e0b\u9762\u7ed9\u51fa IExpression \u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u3002\n+\n+    IExpression := SingleSeriesExpression | GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := IExpression && IExpression\n+    OrExpression := IExpression || IExpression\n+\n+\u6211\u4eec\u91c7\u7528\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6811\u5f62\u7ed3\u6784\u7684\u8868\u793a\u65b9\u6cd5\u6765\u8868\u793a IExpression\uff0c\u5176\u4e2d SingleSeriesExpression \u548c GlobalTimeExpression \u5747\u91c7\u7528\u4e0a\u6587\u4e2d\u4ecb\u7ecd\u7684\u7b26\u53f7\u5316\u8868\u793a\u65b9\u6cd5\u3002\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\u3002\n+\n+1. \u53ea\u5305\u542b\u4e00\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+   \n+        IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+2. \u53ea\u5305\u542b\u4e00\u4e2a GlobalTimeExpression \u7684 IExpression\uff1a\n+\n+        IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+3. \u5305\u542b\u591a\u4e2a SingleSeriesExpression \u7684 IExpression\uff1a\n+\n+        IExpression(\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u4e2d\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\u3002\n+\n+4. \u540c\u65f6\u5305\u542b SingleSeriesExpression \u548c GlobalTimeExpression \u7684 IExpression\n+\n+        IExpression(\n+            AndExpression\n+                AndExpression\n+                    SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                    SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+                GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+        )\n+\n+    **\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u5176\u8981\u6c42\"d1.s1\"\u548c\"d1.s2\"\u5fc5\u987b\u540c\u65f6\u6ee1\u8db3\u5176\u5bf9\u5e94\u7684 Filter\uff0c\u4e14\u65f6\u95f4\u5217\u5fc5\u987b\u6ee1\u8db3 GlobalTimeExpression \u5b9a\u4e49\u7684 Filter \u6761\u4ef6\u3002\n+\n+\n+#### 1.2.4 \u53ef\u6267\u884c\u8868\u8fbe\u5f0f\n+\n+\u4fbf\u4e8e\u7406\u89e3\u6267\u884c\u8fc7\u7a0b\uff0c\u5b9a\u4e49\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u6982\u5ff5\u3002\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u662f\u5e26\u6709\u4e00\u5b9a\u9650\u5236\u6761\u4ef6\u7684 IExpression\u3002\u7528\u6237\u8f93\u5165\u7684\u67e5\u8be2\u6761\u4ef6\u6216\u6784\u9020\u7684 IExpression \u5c06\u7ecf\u8fc7\u7279\u5b9a\u7684\u4f18\u5316\u7b97\u6cd5\uff08\u8be5\u7b97\u6cd5\u5c06\u5728\u540e\u9762\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u8f6c\u5316\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u6761\u4ef6\u7684 IExpression \u5373\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u3002\n+1. IExpression \u4e3a\u5355\u4e00\u7684 GlobalTimeExpression\n+2. IExpression \u4e3a\u5355\u4e00\u7684 SingleSeriesExpression\n+3. IExpression \u4e3a AndExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+4. IExpression \u4e3a OrExpression\uff0c\u4e14\u53f6\u5b50\u8282\u70b9\u5747\u4e3a SingleSeriesExpression\n+\n+\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u5f62\u5f0f\u5316\u5b9a\u4e49\u4e3a\uff1a\n+\n+    executable expression := SingleSeriesExpression| GlobalTimeExpression | AndExpression | OrExpression\n+    AndExpression := < ExpressionUNIT > && < ExpressionUNIT >\n+    OrExpression := < ExpressionUNIT > || < ExpressionUNIT >\n+    ExpressionUNIT := SingleSeriesExpression | AndExpression | OrExpression\n+\n+\u4e0b\u9762\u7ed9\u51fa \u4e00\u4e9b\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u548c\u975e\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\u7684\u793a\u4f8b\uff1a\n+\n+\u4f8b1\uff1a\n+\n+    IExpression(SingleSeriesExpression(\u201cd1.s1\u201d, value > 100 && value < 200))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef61\n+\n+----------------------------------\n+\u4f8b2\uff1a\n+\n+    IExpression(GlobalTimeExpression (time > 14152176545 && time < 14152176645))\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a GlobalTimeExpression\uff0c\u6ee1\u8db3\u6761\u4ef62\n+\n+-----------------------\n+\u4f8b3\uff1a\n+\n+    IExpression(\n+        AndExpression\n+            GlobalTimeExpression (time > 14152176545)\n+            GlobalTimeExpression (time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4e3a\u4e00\u4e2a AndExpression\uff0c\u4f46\u5176\u4e2d\u5305\u542b\u4e86 GlobalTimeExpression\uff0c\u4e0d\u6ee1\u8db3\u6761\u4ef63\n+\n+--------------------------\n+\n+\u4f8b4\uff1a\n+\n+    IExpression(\n+        OrExpression\n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+        SingleSeriesExpression(\u201cd1.s3\u201d, value > \u201ctest\u201d && value < \u201ctest100\u201d)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u662f\n+\n+**\u89e3\u91ca**\uff1a\u8be5 IExpression \u4f5c\u4e3a\u4e00\u4e2a OrExpression\uff0c\u5176\u4e2d\u53f6\u5b50\u7ed3\u70b9\u90fd\u662f SingleSeriesExpression\uff0c\u6ee1\u8db3\u6761\u4ef64.\n+\n+----------------------------\n+\n+\u4f8b5\uff1a\n+\n+    IExpression(\n+        AndExpression        \n+            AndExpression\n+                SingleSeriesExpression(\u201cd1.s1\u201d, (value > 100 && value < 200) || time > 14152176645)\n+                SingleSeriesExpression(\u201cd1.s2\u201d, value > 0.5 && value < 1.5)\n+            GlobalTimeExpression(time > 14152176545 && time < 14152176645)\n+    )\n+\n+\u662f\u5426\u4e3a\u53ef\u6267\u884c\u8868\u8fbe\u5f0f\uff1a\u5426", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb3595305c8fb5190046a8cdd2441907d939b48f"}, "originalPosition": 253}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d799d5ef61fc27af14c326b71f30814df07c533", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/1d799d5ef61fc27af14c326b71f30814df07c533", "committedDate": "2020-02-11T03:20:00Z", "message": "fix tsfile read doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e01c49a093f3ceaa081b510fc1d2a9f9cc636aa", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/3e01c49a093f3ceaa081b510fc1d2a9f9cc636aa", "committedDate": "2020-02-11T03:29:56Z", "message": "Fix SeriesAggregateReaderTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "851e04104b812131ad5c5520da51bea0b4e31124", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/851e04104b812131ad5c5520da51bea0b4e31124", "committedDate": "2020-02-11T03:30:15Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e04acb2bca9b57053e954bb5dbb9334535f1bb76", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/e04acb2bca9b57053e954bb5dbb9334535f1bb76", "committedDate": "2020-02-11T03:41:15Z", "message": "solve the group by device bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a937845746772532aa72c8e09068a7de6ac14f3a", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/a937845746772532aa72c8e09068a7de6ac14f3a", "committedDate": "2020-02-11T03:41:30Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NDA4NjMy", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-356408632", "createdAt": "2020-02-11T04:02:59Z", "commit": {"oid": "a937845746772532aa72c8e09068a7de6ac14f3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowMjo1OVrOFn9BUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowMjo1OVrOFn9BUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzODU0NA==", "bodyText": "\u51fd\u6570\u540d\u4e3ainit()", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377438544", "createdAt": "2020-02-11T04:02:59Z", "author": {"login": "wshao08"}, "path": "docs/Documentation-CHN/SystemDesign/5-DataQuery/3-RawDataQuery.md", "diffHunk": "@@ -0,0 +1,301 @@\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one\n+    or more contributor license agreements.  See the NOTICE file\n+    distributed with this work for additional information\n+    regarding copyright ownership.  The ASF licenses this file\n+    to you under the Apache License, Version 2.0 (the\n+    \"License\"); you may not use this file except in compliance\n+    with the License.  You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing,\n+    software distributed under the License is distributed on an\n+    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+    KIND, either express or implied.  See the License for the\n+    specific language governing permissions and limitations\n+    under the License.\n+\n+-->\n+\n+# \u539f\u59cb\u6570\u636e\u67e5\u8be2\n+\n+## \u8bbe\u8ba1\u539f\u7406\n+\n+\u539f\u59cb\u6570\u636e\u67e5\u8be2\u6839\u636e\u662f\u5426\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u53ef\u4ee5\u5206\u4e3a\u4e24\u7c7b\u3002\u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\u65f6\uff0c\u6839\u636e\u7ed3\u679c\u96c6\u7ed3\u6784\u53c8\u53ef\u5206\u4e3a\u4e24\u7c7b\u3002\n+\n+* \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\uff08\u65e0\u8fc7\u6ee4\u6761\u4ef6 or \u4ec5\u5305\u542b\u65f6\u95f4\u8fc7\u6ee4\u6761\u4ef6\uff09\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08\u9ed8\u8ba4\u539f\u59cb\u6570\u636e\u67e5\u8be2\uff09\n+\t* \u7ed3\u679c\u96c6\u4e0d\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\uff08disable align\uff09\n+* \u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6\n+\t* \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+\u4ee5\u4e0a\u4e09\u79cd\u67e5\u8be2\u5728\u4ee3\u7801\u4e2d\u5bf9\u5e94\u4e09\u79cd\u4e0d\u540c\u7684 DataSet\uff0c\u5c01\u88c5\u4e86\u8fd9\u4e09\u79cd\u67e5\u8be2\u7684\u6267\u884c\u903b\u8f91\u3002\n+\n+## \u4e0d\u5305\u542b\u503c\u8fc7\u6ee4\u6761\u4ef6 + \u7ed3\u679c\u96c6\u6309\u65f6\u95f4\u6233\u5bf9\u9f50\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter\n+\n+`RawQueryDataSetWithoutValueFilter`\u5b9e\u73b0\u4e86\u6ca1\u6709\u503c\u8fc7\u6ee4\u6761\u4ef6\uff0c\u4e14\u9700\u8981\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\u7684\u67e5\u8be2\u903b\u8f91\u3002\u867d\u7136\u6700\u540e\u7684\u67e5\u8be2\u7ed3\u679c\u9700\u8981\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u6309\u7167\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u4f46\u662f\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u67e5\u8be2\u662f\u53ef\u4ee5\u505a\u5e76\u884c\u5316\u7684\u3002\u8fd9\u91cc\u501f\u52a9\u6d88\u8d39\u8005-\u751f\u4ea7\u8005\u961f\u5217\u7684\u601d\u60f3\uff0c\u5c06\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u83b7\u53d6\u6570\u636e\u7684\u64cd\u4f5c\u4e0e\u6700\u540e\u5bf9\u6240\u6709\u65f6\u95f4\u5e8f\u5217\u8fdb\u884c\u5bf9\u9f50\u7684\u64cd\u4f5c\u89e3\u8026\u3002\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u4e00\u4e2a\u751f\u4ea7\u8005\u7ebf\u7a0b\uff0c\u4e14\u6709\u5176\u5bf9\u5e94\u7684`BlockingQueue`\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u8d1f\u8d23\u8bfb\u53d6\u76f8\u5e94\u7684\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\u653e\u8fdb`BlockingQueue`\u4e2d\uff1b\u6d88\u8d39\u8005\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\uff0c\u8d1f\u8d23\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684`BlockingQueue`\u4e2d\u53d6\u51fa\u6570\u636e\uff0c\u8fdb\u884c\u65f6\u95f4\u6233\u5bf9\u9f50\u4e4b\u540e\uff0c\u5c06\u7ed3\u679c\u7ec4\u88c5\u6210`TSQueryDataSet`\u5f62\u5f0f\u8fd4\u56de\u3002\n+\n+\u5728\u5177\u4f53\u5b9e\u73b0\u7684\u65f6\u5019\uff0c\u8003\u8651\u5230\u673a\u5668\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u975e\u4e3a\u6bcf\u4e2a\u67e5\u8be2\u7684\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u800c\u662f\u91c7\u7528\u7ebf\u7a0b\u6c60\u6280\u672f\uff0c\u5c06\u6bcf\u4e00\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u5f53\u4f5c\u4e00\u4e2a`Runnable`\u7684task\u63d0\u4ea4\u5230\u7ebf\u7a0b\u6c60\u4e2d\u6267\u884c\u3002\n+\n+\u4e0b\u9762\u5c31\u5148\u4ecb\u7ecd\u751f\u4ea7\u8005\u7684\u4ee3\u7801\uff0c\u5b83\u88ab\u5c01\u88c5\u5728\u662f`RawQueryDataSetWithoutValueFilter`\u7684\u4e00\u4e2a\u5185\u90e8\u7c7b`ReadTask`\u4e2d\uff0c\u5b9e\u73b0\u4e86`Runnable`\u63a5\u53e3\u3002\n+\n+### org.apache.iotdb.db.query.dataset.RawQueryDataSetWithoutValueFilter.ReadTask\n+\n+`ReadTask`\u4e2d\u6709\u4e24\u4e2a\u5b57\u6bb5\n+\n+* private final ManagedSeriesReader reader;\n+* private BlockingQueue<BatchData> blockingQueue;\n+\n+`ManagedSeriesReader`\u63a5\u53e3\u7ee7\u627f\u4e86`IBatchReader`\u63a5\u53e3\uff0c\u4e3b\u8981\u7528\u6765\u8bfb\u53d6\u5355\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u6570\u636e\uff0c\u5e76\u4e14\u65b0\u589e\u4e86\u4ee5\u4e0b\u56db\u4e2a\u65b9\u6cd5\n+\n+```\n+boolean isManagedByQueryManager();\n+\n+void setManagedByQueryManager(boolean managedByQueryManager);\n+\n+boolean hasRemaining();\n+\n+void setHasRemaining(boolean hasRemaining);\n+```\n+\n+\u524d\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u88ab\u67e5\u8be2\u7ba1\u7406\u5668\u6240\u7ba1\u7406\uff0c\u5373\u751f\u4ea7\u8005\u4efb\u52a1\u6709\u6ca1\u6709\u56e0\u4e3a\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u800c\u81ea\u884c\u9000\u51fa\uff08\u540e\u6587\u4f1a\u89e3\u91ca\u4e3a\u4ec0\u4e48\u4e0d\u963b\u585e\u7b49\u5f85\uff0c\u800c\u662f\u76f4\u63a5\u9000\u51fa\uff09\uff1b\u540e\u4e24\u4e2a\u65b9\u6cd5\u7528\u4ee5\u8868\u5f81\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u8fd8\u6709\u6ca1\u6709\u6570\u636e\u3002\n+\n+`blockingQueue`\u5c31\u662f\u8be5\u751f\u4ea7\u8005\u4efb\u52a1\u7684\u963b\u585e\u961f\u5217\uff0c\u5b9e\u9645\u4e0a\u8be5\u963b\u585e\u961f\u5217\u53ea\u4f1a\u5728\u6d88\u8d39\u8005\u53d6\u6570\u636e\u65f6\u5355\u8fb9\u963b\u585e\uff0c\u751f\u4ea7\u8005\u653e\u6570\u636e\u65f6\uff0c\u5982\u679c\u53d1\u73b0\u961f\u5217\u6ee1\u4e86\uff0c\u4fbf\u4f1a\u76f4\u63a5\u9000\u51fa\uff0c\u4e0d\u4f1a\u963b\u585e\u3002\n+\n+\u4e0b\u9762\u770b\u4e00\u4e0b`ReadTask`\u7684`run()`\u65b9\u6cd5\uff0c\u6267\u884c\u6d41\u7a0b\u7684\u89e3\u91ca\u4ee5\u6ce8\u91ca\u7684\u5f62\u5f0f\u5c55\u73b0\u5728\u4ee3\u7801\u4e2d\n+\n+#### run()\n+\n+```\n+public void run() {\n+  try {\n+    // \u8fd9\u91cc\u52a0\u9501\u7684\u539f\u56e0\u662f\u4e3a\u4e86\u4fdd\u8bc1\u5bf9\u4e8eblockingQueue\u6ee1\u4e0d\u6ee1\u7684\u5224\u65ad\u662f\u6b63\u786e\u540c\u6b65\u7684\n+    synchronized (reader) {\n+      // \u7531\u4e8e\u6bcf\u6b21\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u65f6(\u4e0d\u8bba\u662f\u751f\u4ea7\u8005\u81ea\u5df1\u9012\u5f52\u7684\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fd8\u662f\u6d88\u8d39\u8005\u53d1\u73b0\u751f\u4ea7\u8005\u4efb\u52a1\u81ea\u884c\u9000\u51fa\u800c\u63d0\u4ea4\u7684)\uff0c\u90fd\u4f1a\u68c0\u67e5\u961f\u5217\u662f\u4e0d\u662f\u6ee1\u7684\uff0c\u5982\u679c\u961f\u5217\u6ee1\u4e86\uff0c\u662f\u4e0d\u4f1a\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\u7684\n+      // \u6240\u4ee5\u751f\u4ea7\u8005\u4efb\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0cblockingQueue\u91cc\u4e00\u5b9a\u662f\u6709\u7a7a\u4f59\u4f4d\u7f6e\u7684\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u68c0\u67e5\u961f\u5217\u662f\u5426\u6ee1\n+      // \u5982\u679c\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u8fd8\u6709\u6570\u636e\uff0c\u8fdb\u5165\u5faa\u73af\u4f53\n+      while (reader.hasNextBatch()) {\n+        BatchData batchData = reader.nextBatch();\n+        // \u7531\u4e8e\u62ff\u5230\u7684BatchData\u6709\u53ef\u80fd\u4e3a\u7a7a\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u76f4\u8fed\u4ee3\u5230\u7b2c\u4e00\u4e2a\u4e0d\u4e3a\u7a7a\u7684BatchData\n+        if (batchData.isEmpty()) {\n+          continue;\n+        }\n+        // \u5c06\u4e0d\u4e3a\u7a7a\u7684batchData\u653e\u8fdb\u963b\u585e\u961f\u5217\u4e2d\uff0c\u6b64\u65f6\u7684\u963b\u585e\u961f\u5217\u4e00\u5b9a\u662f\u4e0d\u6ee1\u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u963b\u585e\n+        blockingQueue.put(batchData);\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u4ecd\u7136\u6ca1\u6709\u6ee1\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u518d\u6b21\u5411\u7ebf\u7a0b\u6c60\u91cc\u9012\u5f52\u5730\u63d0\u4ea4\u81ea\u5df1\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2abatchData\u7684\u83b7\u53d6\n+        if (blockingQueue.remainingCapacity() > 0) {\n+          pool.submit(this);\n+        }\n+        // \u5982\u679c\u963b\u585e\u961f\u5217\u6ee1\u4e86\uff0c\u751f\u4ea7\u8005\u4efb\u52a1\u9000\u51fa\uff0c\u5e76\u5c06\u5bf9\u5e94reader\u7684managedByQueryManager\u7f6e\u4e3afalse\n+        else {\n+          reader.setManagedByQueryManager(false);\n+        }\n+        return;\n+      }\n+      // \u4ee3\u7801\u6267\u884c\u5230\u8fd9\u8fb9\uff0c\u4ee3\u8868\u4e4b\u524d\u7684while\u5faa\u73af\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5373\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684reader\u91cc\u6ca1\u6709\u6570\u636e\u4e86\n+      // \u6211\u4eec\u5f80\u963b\u585e\u961f\u5217\u91cc\u653e\u5165\u4e00\u4e2aSignalBatchData\uff0c\u7528\u4ee5\u544a\u77e5\u6d88\u8d39\u8005\uff0c\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u5df2\u7ecf\u6ca1\u6709\u6570\u636e\u4e86\uff0c\u4e0d\u9700\u8981\u518d\u4ece\u8be5\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u961f\u5217\u91cc\u53d6\u6570\u636e\u4e86\n+      blockingQueue.put(SignalBatchData.getInstance());\n+      // \u5c06reader\u7684hasRemaining\u5b57\u6bb5\u7f6e\u4e3afalse\n+      // \u901a\u77e5\u6d88\u8d39\u8005\u4e0d\u9700\u8981\u518d\u4e3a\u8fd9\u4e2a\u65f6\u95f4\u5e8f\u5217\u63d0\u4ea4\u751f\u4ea7\u8005\u4efb\u52a1\n+      reader.setHasRemaining(false);\n+      // \u5c06reader\u7684managedByQueryManager\u5b57\u6bb5\u7f6e\u4e3afalse\n+      reader.setManagedByQueryManager(false);\n+    }\n+  } catch (InterruptedException e) {\n+    LOGGER.error(\"Interrupted while putting into the blocking queue: \", e);\n+    Thread.currentThread().interrupt();\n+  } catch (IOException e) {\n+    LOGGER.error(\"Something gets wrong while reading from the series reader: \", e);\n+  } catch (Exception e) {\n+    LOGGER.error(\"Something gets wrong: \", e);\n+  }\n+}\n+```\n+\n+\u63a5\u4e0b\u6765\u4ecb\u7ecd\u6d88\u8d39\u8005\u7684\u4ee3\u7801\uff0c\u6d88\u8d39\u8005\u7684\u4e3b\u8981\u903b\u8f91\u662f\u4ece\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u961f\u5217\u91cc\u62ff\u51fa\u503c\uff0c\u505a\u65f6\u95f4\u6233\u5bf9\u9f50\uff0c\u7136\u540e\u62fc\u51d1\u7ed3\u679c\u96c6\u3002\u65f6\u95f4\u6233\u7684\u5bf9\u9f50\u4e3b\u8981\u901a\u8fc7\u4e00\u4e2a\u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\u6765\u5b9e\u73b0\uff0c\u5982\u679c\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u65f6\u95f4\u6233\u7b49\u4e8e\u5806\u9876\u7684\u65f6\u95f4\u6233\uff0c\u5219\u53d6\u51fa\u8be5\u503c\uff0c\u53cd\u4e4b\uff0c\u5c06\u8be5\u65f6\u95f4\u6233\u4e0b\u8be5\u65f6\u95f4\u5e8f\u5217\u7684\u503c\u7f6e\u4e3a`null`\u3002\n+\n+\u5148\u4ecb\u7ecd\u6d88\u8d39\u8005\u4efb\u52a1\u7684\u4e00\u4e9b\u91cd\u8981\u5b57\u6bb5\n+\n+* TreeSet<Long> timeHeap\n+\n+  \u65f6\u95f4\u6233\u7684\u6700\u5c0f\u5806\uff0c\u7528\u4ee5\u5b9e\u73b0\u65f6\u95f4\u6233\u5bf9\u9f50\u64cd\u4f5c\n+\n+* BlockingQueue<BatchData>[] blockingQueueArray;\n+\n+  \u963b\u585e\u961f\u5217\u7684\u6570\u7ec4\uff0c\u7528\u4ee5\u5b58\u50a8\u6bcf\u4e2a\u65f6\u95f4\u5e8f\u5217\u5bf9\u5e94\u7684\u963b\u585e\u961f\u5217\n+\n+* boolean[] noMoreDataInQueueArray\n+\n+  \u7528\u4ee5\u8868\u5f81\u67d0\u4e2a\u65f6\u95f4\u5e8f\u5217\u7684\u963b\u585e\u961f\u5217\u91cc\u8fd8\u6709\u6ca1\u6709\u503c\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u6d88\u8d39\u8005\u4e0d\u4f1a\u518d\u53bb\u8c03\u7528`take()`\u65b9\u6cd5\uff0c\u4ee5\u9632\u6d88\u8d39\u8005\u7ebf\u7a0b\u88ab\u963b\u585e\u3002\n+  \n+* BatchData[] cachedBatchDataArray\n+\n+  \u7f13\u5b58\u4ece\u963b\u585e\u961f\u5217\u91cc\u53d6\u51fa\u7684\u4e00\u4e2aBatchData\uff0c\u56e0\u4e3a\u963b\u585e\u961f\u5217\u91cc`take()`\u51fa\u7684`BatchData`\u5e76\u4e0d\u80fd\u4e00\u6b21\u6027\u6d88\u8d39\u5b8c\uff0c\u6240\u4ee5\u9700\u8981\u505a\u7f13\u5b58\n+  \n+\u5728\u6d88\u8d39\u8005`RawQueryDataSetWithoutValueFilter`\u7684\u6784\u9020\u51fd\u6570\u91cc\u9996\u5148\u8c03\u7528\u4e86`init()`\u65b9\u6cd5\n+\n+#### int()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a937845746772532aa72c8e09068a7de6ac14f3a"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "414fdbe2d6a98b2d83b13da9c7dd322d2dc2218c", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/414fdbe2d6a98b2d83b13da9c7dd322d2dc2218c", "committedDate": "2020-02-11T04:06:16Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd3385cbce7aed4ee56093042bc541e05ce52418", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/dd3385cbce7aed4ee56093042bc541e05ce52418", "committedDate": "2020-02-11T05:38:29Z", "message": "merge master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f28cd4a276713fea6d694146b5e90d073bc6813a", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/f28cd4a276713fea6d694146b5e90d073bc6813a", "committedDate": "2020-02-11T06:51:18Z", "message": "fix doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511ac745c01fd66f3fc4f0a197f80071f3d291a3", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/511ac745c01fd66f3fc4f0a197f80071f3d291a3", "committedDate": "2020-02-12T03:10:08Z", "message": "fix fill filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29303a417703867dab3abecebd92c9408fa03069", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/29303a417703867dab3abecebd92c9408fa03069", "committedDate": "2020-02-12T03:18:13Z", "message": "solve the fill bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a0e49f464df8128b8b5788905ad46a856bc530d", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8a0e49f464df8128b8b5788905ad46a856bc530d", "committedDate": "2020-02-12T03:26:46Z", "message": "fix upperbound filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27f0852b0eff9a25e673f5d515631066b4ddf72b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/27f0852b0eff9a25e673f5d515631066b4ddf72b", "committedDate": "2020-02-12T03:27:33Z", "message": "fix upperbound filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b190f925787afd92f227b34f65768db22eaa31f2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/b190f925787afd92f227b34f65768db22eaa31f2", "committedDate": "2020-02-12T03:28:07Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15630d0f562a1866449fba452ddd40f099b44dc8", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/15630d0f562a1866449fba452ddd40f099b44dc8", "committedDate": "2020-02-12T03:52:41Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5668225c6aa47a55a0603268494be639f96bf70b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/5668225c6aa47a55a0603268494be639f96bf70b", "committedDate": "2020-02-12T06:23:03Z", "message": "delete useless IPointReader in IFill"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c9a4e8a9bf347b4286dc8b128b13811b1db3843", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/6c9a4e8a9bf347b4286dc8b128b13811b1db3843", "committedDate": "2020-02-12T06:23:39Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bad43b4e0ea280d551dffc5794d370e7a769b4d", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/7bad43b4e0ea280d551dffc5794d370e7a769b4d", "committedDate": "2020-02-12T06:35:44Z", "message": "change the Linear Fill logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/305b02a13398cf9a0b607d157cb0c2c5f3f1706b", "committedDate": "2020-02-12T06:39:00Z", "message": "add some comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDI1NDQ5", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-357425449", "createdAt": "2020-02-12T12:51:09Z", "commit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo1MTowOVrOFotXIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo1MTowOVrOFotXIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzMDU2MA==", "bodyText": "what's this comment mean...", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378230560", "createdAt": "2020-02-12T12:51:09Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/conf/IoTDBDescriptor.java", "diffHunk": "@@ -309,6 +309,11 @@ private void loadProps() {\n       conf.setMemtableNumInEachStorageGroup(\n           Integer.parseInt(properties.getProperty(\"memtable_num_in_each_storage_group\", String.valueOf(conf.getMemtableNumInEachStorageGroup()))));\n \n+      // the num of memtables in each storage group", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NDM2MTI3", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-357436127", "createdAt": "2020-02-12T13:08:46Z", "commit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzowODo0NlrOFot3HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzowODo0NlrOFot3HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIzODc0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * <p> This method is calculate the aggregation using the common timestamps of cross series\n          \n          \n            \n               * <p> This method is calculate the aggregation using the common timestamps of cross series\n          \n      \n    \n    \n  \n\ncalculate here, grammar miss", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378238748", "createdAt": "2020-02-12T13:08:46Z", "author": {"login": "EJTTianYu"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;\n+  private int intRet;\n+  private long longRet;\n+  private float floatRet;\n+  private double doubleRet;\n+  private Binary binaryRet;\n+\n+  private boolean hasResult;\n+\n+  /**\n+   * construct.\n+   *\n+   * @param dataType result data type.\n+   */\n+  public AggregateResult(TSDataType dataType) {\n+    this.dataType = dataType;\n+    this.hasResult = false;\n+  }\n+\n+  public abstract Object getResult();\n+\n+  /**\n+   * Calculate the aggregation using Statistics\n+   *\n+   * @param statistics chunkStatistics or pageStatistics\n+   */\n+  public abstract void updateResultFromStatistics(Statistics statistics)\n+      throws QueryProcessException;\n+\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage) throws IOException;\n+  /**\n+   * Aggregate results cannot be calculated using Statistics directly, using the data in each page\n+   *\n+   * @param dataInThisPage the data in Page\n+   * @param bound calculate points whose time < bound\n+   */\n+  public abstract void updateResultFromPageData(BatchData dataInThisPage, long bound)\n+      throws IOException;\n+\n+  /**\n+   * <p> This method is calculate the aggregation using the common timestamps of cross series", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "753239a74366e4116b29036728102d6f19c24aae", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/753239a74366e4116b29036728102d6f19c24aae", "committedDate": "2020-02-13T07:06:20Z", "message": "[IoTDB-468] Restructure QueryPlan (#796)\n\n* Restructure QueryPlan and AlignByDevicePlan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b0a724510a45a6823e3b8385efb81680f1688c7", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/2b0a724510a45a6823e3b8385efb81680f1688c7", "committedDate": "2020-02-13T13:24:19Z", "message": "fix comments in AggregateResult and IoTDBDescriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec267afa483d7c00725bb121177c538cfa9eddef", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ec267afa483d7c00725bb121177c538cfa9eddef", "committedDate": "2020-02-13T13:28:54Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a563b8271df95885e1ec89c1aadd7ade30cd9d8", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/5a563b8271df95885e1ec89c1aadd7ade30cd9d8", "committedDate": "2020-02-13T14:19:16Z", "message": "fix OOM when there are too many columns in one query by adding a IChunkLoader cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4326b382470f9fa0693d34d9c892815be0331797", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/4326b382470f9fa0693d34d9c892815be0331797", "committedDate": "2020-02-13T14:20:01Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "792f60c6d5e05b407499342b7cfef910344a5fa5", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/792f60c6d5e05b407499342b7cfef910344a5fa5", "committedDate": "2020-02-14T01:22:45Z", "message": "fix conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NjU1NjU0", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-355655654", "createdAt": "2020-02-10T01:29:42Z", "commit": {"oid": "b31a856b7ed3d4908712424b6075a0d347c2fb77"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMToyOTo0MlrOFnYXMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNTo1MTowMFrOFpsOHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzNzkzOA==", "bodyText": "If upper level use this method without check seriesReader.isPageOverlapped(). This may cause a problem. Maybe we should check this and then do the work", "url": "https://github.com/apache/iotdb/pull/713#discussion_r376837938", "createdAt": "2020-02-10T01:29:42Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.FileReaderManager;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TestOnly;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.IPageReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class SeriesReader {\n+\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  private final QueryContext context;\n+  private final Filter timeFilter;\n+  private final Filter valueFilter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final PriorityQueue<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new LinkedList<>();\n+  private final PriorityQueue<ChunkMetaData> unseqChunkMetadatas =\n+      new PriorityQueue<>(Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private boolean hasCachedFirstChunkMetadata;\n+  private ChunkMetaData firstChunkMetaData;\n+\n+  private PriorityQueue<VersionPair<IPageReader>> overlappedPageReaders =\n+      new PriorityQueue<>(\n+          Comparator.comparingLong(pageReader -> pageReader.data.getStatistics().getStartTime()));\n+\n+  private PriorityMergeReader mergeReader = new PriorityMergeReader();\n+\n+  private boolean hasCachedNextBatch;\n+  private BatchData cachedBatchData;\n+\n+\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+  @TestOnly\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+\n+  public boolean hasNextChunk() throws IOException {\n+    if (hasCachedFirstChunkMetadata) {\n+      return true;\n+    }\n+    // init first chunk metadata whose startTime is minimum\n+    tryToInitFirstChunk();\n+\n+    return hasCachedFirstChunkMetadata;\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void tryToInitFirstChunk() throws IOException {\n+    tryToFillChunkMetadatas();\n+    hasCachedFirstChunkMetadata = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      // only has seq\n+      firstChunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      // only has unseq\n+      firstChunkMetaData = unseqChunkMetadatas.poll();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // has seq and unseq\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.peek().getStartTime()) {\n+        firstChunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        firstChunkMetaData = unseqChunkMetadatas.poll();\n+      }\n+    } else {\n+      // no seq nor unseq\n+      hasCachedFirstChunkMetadata = false;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  public boolean isChunkOverlapped() {\n+    Statistics chunkStatistics = firstChunkMetaData.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentChunkStatistics() {\n+    return firstChunkMetaData.getStatistics();\n+  }\n+\n+  public void skipCurrentChunk() {\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  public boolean hasNextPage() throws IOException {\n+    if (!overlappedPageReaders.isEmpty()) {\n+      return true;\n+    }\n+\n+    fillOverlappedPageReaders();\n+\n+    return !overlappedPageReaders.isEmpty();\n+  }\n+\n+  private void fillOverlappedPageReaders() throws IOException {\n+    if (!hasCachedFirstChunkMetadata) {\n+      return;\n+    }\n+    unpackOneChunkMetaData(firstChunkMetaData);\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  private void unpackOneChunkMetaData(ChunkMetaData chunkMetaData) throws IOException {\n+    initChunkReader(chunkMetaData)\n+        .getPageReaderList()\n+        .forEach(\n+            pageReader ->\n+                overlappedPageReaders.add(\n+                    new VersionPair(chunkMetaData.getVersion(), pageReader)));\n+  }\n+\n+\n+  protected BatchData nextPage() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b31a856b7ed3d4908712424b6075a0d347c2fb77"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk5Nzg5OA==", "bodyText": "OOM error may appear in this method. The reason is if many pages are over lapped, returned batch data will be very large.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r377997898", "createdAt": "2020-02-12T01:37:52Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesReader.java", "diffHunk": "@@ -0,0 +1,444 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.FileReaderManager;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunk.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TestOnly;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.filter.basic.UnaryFilter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.IPageReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+import java.io.IOException;\n+import java.util.*;\n+\n+public class SeriesReader {\n+\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  private final QueryContext context;\n+  private final Filter timeFilter;\n+  private final Filter valueFilter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final PriorityQueue<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new LinkedList<>();\n+  private final PriorityQueue<ChunkMetaData> unseqChunkMetadatas =\n+      new PriorityQueue<>(Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private boolean hasCachedFirstChunkMetadata;\n+  private ChunkMetaData firstChunkMetaData;\n+\n+  private PriorityQueue<VersionPair<IPageReader>> overlappedPageReaders =\n+      new PriorityQueue<>(\n+          Comparator.comparingLong(pageReader -> pageReader.data.getStatistics().getStartTime()));\n+\n+  private PriorityMergeReader mergeReader = new PriorityMergeReader();\n+\n+  private boolean hasCachedNextBatch;\n+  private BatchData cachedBatchData;\n+\n+\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = dataSource.getSeqResources();\n+    this.unseqFileResource = sortUnSeqFileResources(dataSource.getUnseqResources());\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+  @TestOnly\n+  public SeriesReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      List<TsFileResource> seqFileResource, List<TsFileResource> unseqFileResource,\n+      Filter timeFilter, Filter valueFilter) {\n+    this.seriesPath = seriesPath;\n+    this.dataType = dataType;\n+    this.context = context;\n+    this.seqFileResource = seqFileResource;\n+    this.unseqFileResource = sortUnSeqFileResources(unseqFileResource);\n+    this.timeFilter = timeFilter;\n+    this.valueFilter = valueFilter;\n+  }\n+\n+\n+  public boolean hasNextChunk() throws IOException {\n+    if (hasCachedFirstChunkMetadata) {\n+      return true;\n+    }\n+    // init first chunk metadata whose startTime is minimum\n+    tryToInitFirstChunk();\n+\n+    return hasCachedFirstChunkMetadata;\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void tryToInitFirstChunk() throws IOException {\n+    tryToFillChunkMetadatas();\n+    hasCachedFirstChunkMetadata = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      // only has seq\n+      firstChunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      // only has unseq\n+      firstChunkMetaData = unseqChunkMetadatas.poll();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // has seq and unseq\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.peek().getStartTime()) {\n+        firstChunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        firstChunkMetaData = unseqChunkMetadatas.poll();\n+      }\n+    } else {\n+      // no seq nor unseq\n+      hasCachedFirstChunkMetadata = false;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  public boolean isChunkOverlapped() {\n+    Statistics chunkStatistics = firstChunkMetaData.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && chunkStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentChunkStatistics() {\n+    return firstChunkMetaData.getStatistics();\n+  }\n+\n+  public void skipCurrentChunk() {\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  public boolean hasNextPage() throws IOException {\n+    if (!overlappedPageReaders.isEmpty()) {\n+      return true;\n+    }\n+\n+    fillOverlappedPageReaders();\n+\n+    return !overlappedPageReaders.isEmpty();\n+  }\n+\n+  private void fillOverlappedPageReaders() throws IOException {\n+    if (!hasCachedFirstChunkMetadata) {\n+      return;\n+    }\n+    unpackOneChunkMetaData(firstChunkMetaData);\n+    hasCachedFirstChunkMetadata = false;\n+    firstChunkMetaData = null;\n+  }\n+\n+  private void unpackOneChunkMetaData(ChunkMetaData chunkMetaData) throws IOException {\n+    initChunkReader(chunkMetaData)\n+        .getPageReaderList()\n+        .forEach(\n+            pageReader ->\n+                overlappedPageReaders.add(\n+                    new VersionPair(chunkMetaData.getVersion(), pageReader)));\n+  }\n+\n+\n+  protected BatchData nextPage() throws IOException {\n+    BatchData pageData = Objects\n+        .requireNonNull(overlappedPageReaders.poll().data, \"No Batch data\")\n+        .getAllSatisfiedPageData();\n+    // only need to consider valueFilter because timeFilter has been set into the page reader\n+    if (valueFilter == null) {\n+      return pageData;\n+    }\n+    BatchData batchData = new BatchData(pageData.getDataType());\n+    while (pageData.hasCurrent()) {\n+      if (valueFilter.satisfy(pageData.currentTime(), pageData.currentValue())) {\n+        batchData.putAnObject(pageData.currentTime(), pageData.currentValue());\n+      }\n+      pageData.next();\n+    }\n+    return batchData;\n+  }\n+\n+  protected boolean isPageOverlapped() {\n+    Statistics pageStatistics = overlappedPageReaders.peek().data.getStatistics();\n+    return mergeReader.hasNextTimeValuePair()\n+        || (!seqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= seqChunkMetadatas.get(0).getStartTime())\n+        || (!unseqChunkMetadatas.isEmpty()\n+        && pageStatistics.getEndTime() >= unseqChunkMetadatas.peek().getStartTime());\n+  }\n+\n+  public Statistics currentPageStatistics() throws IOException {\n+    if (overlappedPageReaders.isEmpty() || overlappedPageReaders.peek().data == null) {\n+      throw new IOException(\"No next page statistics.\");\n+    }\n+    return overlappedPageReaders.peek().data.getStatistics();\n+  }\n+\n+  public void skipCurrentPage() {\n+    overlappedPageReaders.poll();\n+  }\n+\n+  public boolean hasNextOverlappedPage() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f28cd4a276713fea6d694146b5e90d073bc6813a"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NDY0Nw==", "bodyText": "May be we should use result rather than Ret. When I first look at this name, I think it is return rather than result", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378084647", "createdAt": "2020-02-12T07:49:20Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggregateResult.java", "diffHunk": "@@ -0,0 +1,212 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation;\n+\n+import org.apache.iotdb.db.exception.query.QueryProcessException;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.exception.write.UnSupportedDataTypeException;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.utils.Binary;\n+\n+import java.io.IOException;\n+\n+public abstract class AggregateResult {\n+\n+  protected TSDataType dataType;\n+\n+  private boolean booleanRet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4NTg3Mw==", "bodyText": "I have a question. Why we need this class? This class's methods are identical with TimeValuePair. Could we just use TimeValuePair?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378085873", "createdAt": "2020-02-12T07:52:57Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairInMemTable.java", "diffHunk": "@@ -20,7 +20,7 @@\n \n import java.util.Objects;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n import org.apache.iotdb.tsfile.utils.TsPrimitiveType;\n \n public class TimeValuePairInMemTable extends TimeValuePair {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4Njc3Mw==", "bodyText": "This class is unused. Remove it or give an explanation.", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378086773", "createdAt": "2020-02-12T07:55:29Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/engine/memtable/TimeValuePairSorter.java", "diffHunk": "@@ -21,7 +21,7 @@\n import java.util.Iterator;\n import java.util.List;\n \n-import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n \n public interface TimeValuePairSorter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4ODk5NA==", "bodyText": "The sum value here may overflow when we query large number of data. May be we should use this method to update:\navg(n + 1) = avg(n) * (n / n + 1) + (1 / n + 1) * val(n + 1)", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378088994", "createdAt": "2020-02-12T08:01:23Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/impl/AvgAggrResult.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.iotdb.db.query.aggregation.impl;\n+\n+import java.io.IOException;\n+import org.apache.iotdb.db.query.aggregation.AggregateResult;\n+import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+\n+public class AvgAggrResult extends AggregateResult {\n+\n+  private static final String AVG_AGGR_NAME = \"AVG\";\n+  private TSDataType seriesDataType;\n+  protected double sum = 0.0;\n+  protected int cnt = 0;\n+\n+  public AvgAggrResult(TSDataType seriesDataType) {\n+    super(TSDataType.DOUBLE);\n+    this.seriesDataType = seriesDataType;\n+    reset();\n+    sum = 0.0;\n+    cnt = 0;\n+  }\n+\n+  @Override\n+  public Double getResult() {\n+    if (cnt > 0) {\n+      setDoubleRet(sum / cnt);\n+    }\n+    return hasResult() ? getDoubleRet() : null;\n+  }\n+\n+  @Override\n+  public void updateResultFromStatistics(Statistics statistics) {\n+    cnt += statistics.getCount();\n+    sum += statistics.getSumValue();\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage) throws IOException {\n+    updateResultFromPageData(dataInThisPage, Long.MAX_VALUE);\n+  }\n+\n+  @Override\n+  public void updateResultFromPageData(BatchData dataInThisPage, long bound) throws IOException {\n+    while (dataInThisPage.hasCurrent()) {\n+      if (dataInThisPage.currentTime() >= bound) {\n+        break;\n+      }\n+      updateAvg(seriesDataType, dataInThisPage.currentValue());\n+      dataInThisPage.next();\n+    }\n+  }\n+\n+  @Override\n+  public void updateResultUsingTimestamps(long[] timestamps, int length,\n+      IReaderByTimestamp dataReader) throws IOException {\n+    for (int i = 0; i < length; i++) {\n+      Object value = dataReader.getValueInTimestamp(timestamps[i]);\n+      if (value != null) {\n+        updateAvg(seriesDataType, value);\n+      }\n+    }\n+  }\n+\n+  private void updateAvg(TSDataType type, Object sumVal) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "305b02a13398cf9a0b607d157cb0c2c5f3f1706b"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgyNzAxNA==", "bodyText": "Why we can just put chunk statistics into page reader?", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378827014", "createdAt": "2020-02-13T12:21:36Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/chunk/MemChunkReader.java", "diffHunk": "@@ -112,12 +116,9 @@ public void close() {\n   }\n \n   @Override\n-  public PageHeader nextPageHeader() throws IOException {\n-    return null;\n+  public List<IPageReader> getPageReaderList() throws IOException {\n+    return Collections.singletonList(\n+        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODgzMDY5MQ==", "bodyText": "While statement doesn't loop. You can use if to replace while", "url": "https://github.com/apache/iotdb/pull/713#discussion_r378830691", "createdAt": "2020-02-13T12:30:16Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/series/SeriesRawDataPointReader.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.series;\n+\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.read.TimeValuePair;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.reader.IPointReader;\n+\n+import java.io.IOException;\n+\n+\n+public class SeriesRawDataPointReader implements IPointReader {\n+\n+  private final SeriesReader seriesReader;\n+\n+  private boolean hasCachedTimeValuePair;\n+  private BatchData batchData;\n+  private TimeValuePair timeValuePair;\n+\n+\n+  public SeriesRawDataPointReader(SeriesReader seriesReader) {\n+    this.seriesReader = seriesReader;\n+  }\n+\n+  public SeriesRawDataPointReader(Path seriesPath, TSDataType dataType, QueryContext context,\n+      QueryDataSource dataSource, Filter timeFilter, Filter valueFilter) {\n+    this.seriesReader = new SeriesReader(seriesPath, dataType, context, dataSource, timeFilter,\n+        valueFilter);\n+  }\n+\n+  private boolean hasNext() throws IOException {\n+    while (seriesReader.hasNextChunk()) {\n+      while (seriesReader.hasNextPage()) {\n+        if (seriesReader.hasNextOverlappedPage()) {\n+          return true;\n+        }\n+      }\n+    }\n+    return false;\n+  }\n+\n+  private boolean hasNextSatisfiedInCurrentBatch() {\n+    while (batchData != null && batchData.hasCurrent()) {\n+      timeValuePair = new TimeValuePair(batchData.currentTime(),\n+          batchData.currentTsPrimitiveType());\n+      hasCachedTimeValuePair = true;\n+      batchData.next();\n+      return true;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "753239a74366e4116b29036728102d6f19c24aae"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI2MDQ0NQ==", "bodyText": "Maybe we need more tests here. Consider the order of columns, mergeable or unmergeable columns. Such as following sql:\n\"SELECT sum(s0), count(s0), avg(s2), avg(s0) FROM root.vehicle.d0 WHERE time >= 6000 AND time <= 9000\"\n\"SELECT sum(s2), count(s0), avg(s2), avg(s1), count(s2),sum(s0) FROM root.vehicle.d0 WHERE time >= 6000 AND time <= 9000\"", "url": "https://github.com/apache/iotdb/pull/713#discussion_r379260445", "createdAt": "2020-02-14T05:51:00Z", "author": {"login": "SilverNarcissus"}, "path": "server/src/test/java/org/apache/iotdb/db/integration/IoTDBAggregationIT.java", "diffHunk": "@@ -508,6 +509,57 @@ public void avgSumErrorTest() throws SQLException {\n     }\n   }\n \n+  /**\n+   * test aggregation query with more than one functions on one series\n+   */\n+  @Test\n+  public void mergeAggrOnOneSeriesTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "792f60c6d5e05b407499342b7cfef910344a5fa5"}, "originalPosition": 230}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8747fa0c683e85d55b151a2128fb04b4e20f7769", "author": {"user": {"login": "Alima777", "name": "Xiangwei Wei"}}, "url": "https://github.com/apache/iotdb/commit/8747fa0c683e85d55b151a2128fb04b4e20f7769", "committedDate": "2020-02-14T13:16:42Z", "message": "[IoTDB-475] Improve the logic of AlignByDevicePlan in PhysicalGenerator (#803)\n\n* optimize PhysicalGenerator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4a01a4fe4defb7e8db75031254120908e419c0", "author": {"user": {"login": "Genius-pig", "name": "Boris"}}, "url": "https://github.com/apache/iotdb/commit/8e4a01a4fe4defb7e8db75031254120908e419c0", "committedDate": "2020-02-15T03:00:32Z", "message": "[IOTDB-466] group by device -> align by device && group by time range [] -> [) (#805)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "812d73933d2de45d91b122217f2c0282990c97dd", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/812d73933d2de45d91b122217f2c0282990c97dd", "committedDate": "2020-02-15T11:33:39Z", "message": "[IOTDB-464] Vectorize the IReaderByTimestamp (#812)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0353cdfcae3a6af3cef60b801bb684c644704746", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/0353cdfcae3a6af3cef60b801bb684c644704746", "committedDate": "2020-02-15T11:35:00Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4dd6261d638f817f6b60c1ee2cec306a38e782b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c4dd6261d638f817f6b60c1ee2cec306a38e782b", "committedDate": "2020-02-15T11:46:29Z", "message": "optimize codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce5f509c56f9c3d087b01af8a835428acc818e7a", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/ce5f509c56f9c3d087b01af8a835428acc818e7a", "committedDate": "2020-02-15T14:12:25Z", "message": "add config parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca636e712bb459c3c02882444b86b8f1573490e9", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/ca636e712bb459c3c02882444b86b8f1573490e9", "committedDate": "2020-02-15T14:13:28Z", "message": "add config parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2bf45788e698fb1dce60e6a9d8efdddea32db6e", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/e2bf45788e698fb1dce60e6a9d8efdddea32db6e", "committedDate": "2020-02-15T14:14:02Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "484617c03b037a03777f34fe611e65f13c054ff5", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/484617c03b037a03777f34fe611e65f13c054ff5", "committedDate": "2020-02-16T06:03:35Z", "message": "optimize tsfile read doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c870369a8f58b7b599d45b51ef7f9ff78b73e5b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/7c870369a8f58b7b599d45b51ef7f9ff78b73e5b", "committedDate": "2020-02-16T06:04:14Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35e1d2c2e3b37d3d68d8487eef621f30a73cf4f9", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/35e1d2c2e3b37d3d68d8487eef621f30a73cf4f9", "committedDate": "2020-02-16T18:08:01Z", "message": "print warn log if waitForAllTsProcessorClosed() too long time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b060ef5242bb430218fc1f21535c36c8f08324f", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/6b060ef5242bb430218fc1f21535c36c8f08324f", "committedDate": "2020-02-17T00:25:21Z", "message": "add comments if a tsfile is closed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa34ad8107b0285d80baf2246639833c9a2b7779", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/aa34ad8107b0285d80baf2246639833c9a2b7779", "committedDate": "2020-02-17T00:42:21Z", "message": "set jmxport =31999 by default if there is no config file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34666834f8566a178535649e910f8959aa9c3b0b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/34666834f8566a178535649e910f8959aa9c3b0b", "committedDate": "2020-02-17T01:50:55Z", "message": "remove priority in ChunkMetadata and add check in isPageOverlapped in SeriesReader"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMzIwNDIw", "url": "https://github.com/apache/iotdb/pull/713#pullrequestreview-342320420", "createdAt": "2020-01-14T06:55:51Z", "commit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNjo1NTo1MVrOFdNm1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwNzo1MDowOFrOFdOgeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3NTk1Ng==", "bodyText": "remove unused field", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366175956", "createdAt": "2020-01-14T06:55:51Z", "author": {"login": "samperson1997"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "diffHunk": "@@ -41,8 +41,10 @@\n public class IoTDBQueryResultSet implements ResultSet {\n \n   private static final String TIMESTAMP_STR = \"Time\";\n+  private static final int TIMESTAMP_STR_LENGTH = 4;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3NjAwMw==", "bodyText": "remove unused field", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366176003", "createdAt": "2020-01-14T06:56:00Z", "author": {"login": "samperson1997"}, "path": "jdbc/src/main/java/org/apache/iotdb/jdbc/IoTDBQueryResultSet.java", "diffHunk": "@@ -41,8 +41,10 @@\n public class IoTDBQueryResultSet implements ResultSet {\n \n   private static final String TIMESTAMP_STR = \"Time\";\n+  private static final int TIMESTAMP_STR_LENGTH = 4;\n   private static final int START_INDEX = 2;\n   private static final String VALUE_IS_NULL = \"The value got by %s (column name) is NULL.\";\n+  private static final String EMPTY_STR = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE3ODUwNQ==", "bodyText": "remove unused import", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366178505", "createdAt": "2020-01-14T07:06:15Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/executor/EngineExecutor.java", "diffHunk": "@@ -19,14 +19,19 @@\n package org.apache.iotdb.db.query.executor;\n \n \n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n import org.apache.iotdb.db.exception.StorageEngineException;\n import org.apache.iotdb.db.query.context.QueryContext;\n import org.apache.iotdb.db.query.dataset.EngineDataSetWithValueFilter;\n import org.apache.iotdb.db.query.dataset.NewEngineDataSetWithoutValueFilter;\n+import org.apache.iotdb.db.query.dataset.NonAlignEngineDataSet;\n import org.apache.iotdb.db.query.reader.IReaderByTimestamp;\n import org.apache.iotdb.db.query.reader.ManagedSeriesReader;\n+import org.apache.iotdb.db.query.reader.seriesRelated.RawDataReaderWithoutValueFilter;\n+import org.apache.iotdb.db.query.reader.seriesRelated.SeriesDataReaderWithoutValueFilter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad08f92972fd1c7c536a8e9644e9fcb4858e069c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE4OTEyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class AggreResultData {\n          \n          \n            \n             public class AggrResultData {", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366189124", "createdAt": "2020-01-14T07:45:09Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/aggregation/AggreResultData.java", "diffHunk": "@@ -25,7 +25,6 @@\n \n public class AggreResultData {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4e66feb3f1a3b5c79dbff199cb1c06aeddccd2"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjE5MDcxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void unPackOverlappedChunks() throws IOException {\n          \n          \n            \n              private void unpackOverlappedChunks() throws IOException {", "url": "https://github.com/apache/iotdb/pull/713#discussion_r366190714", "createdAt": "2020-01-14T07:50:08Z", "author": {"login": "samperson1997"}, "path": "server/src/main/java/org/apache/iotdb/db/query/reader/seriesRelated/AbstractDataReader.java", "diffHunk": "@@ -0,0 +1,514 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.db.query.reader.seriesRelated;\n+\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.LinkedList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeSet;\n+import org.apache.iotdb.db.engine.cache.DeviceMetaDataCache;\n+import org.apache.iotdb.db.engine.modification.Modification;\n+import org.apache.iotdb.db.engine.querycontext.QueryDataSource;\n+import org.apache.iotdb.db.engine.querycontext.ReadOnlyMemChunk;\n+import org.apache.iotdb.db.engine.storagegroup.TsFileResource;\n+import org.apache.iotdb.db.exception.StorageEngineException;\n+import org.apache.iotdb.db.query.context.QueryContext;\n+import org.apache.iotdb.db.query.control.QueryResourceManager;\n+import org.apache.iotdb.db.query.reader.ManagedSeriesReader;\n+import org.apache.iotdb.db.query.reader.MemChunkLoader;\n+import org.apache.iotdb.db.query.reader.chunkRelated.ChunkDataIterator;\n+import org.apache.iotdb.db.query.reader.chunkRelated.MemChunkReader;\n+import org.apache.iotdb.db.query.reader.universal.PriorityMergeReader;\n+import org.apache.iotdb.db.utils.QueryUtils;\n+import org.apache.iotdb.db.utils.TimeValuePair;\n+import org.apache.iotdb.tsfile.file.header.PageHeader;\n+import org.apache.iotdb.tsfile.file.metadata.ChunkMetaData;\n+import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;\n+import org.apache.iotdb.tsfile.read.TsFileSequenceReader;\n+import org.apache.iotdb.tsfile.read.common.BatchData;\n+import org.apache.iotdb.tsfile.read.common.Chunk;\n+import org.apache.iotdb.tsfile.read.common.Path;\n+import org.apache.iotdb.tsfile.read.controller.ChunkLoaderImpl;\n+import org.apache.iotdb.tsfile.read.controller.IChunkLoader;\n+import org.apache.iotdb.tsfile.read.filter.basic.Filter;\n+import org.apache.iotdb.tsfile.read.reader.IChunkReader;\n+import org.apache.iotdb.tsfile.read.reader.chunk.ChunkReader;\n+\n+/*\n+ * This class implements a pause read method, pseudocode is:\n+ *\n+ *\n+ * while(hasNextChunk()){\n+ *    while(hasNextPage()){\n+ *      while(hasNextBatch()){\n+ *        nextBatch()\n+ *      }\n+ *    }\n+ * }\n+ */\n+public abstract class AbstractDataReader implements ManagedSeriesReader {\n+\n+  private final QueryDataSource queryDataSource;\n+  private final QueryContext context;\n+  private final Path seriesPath;\n+  private final TSDataType dataType;\n+  protected Filter filter;\n+\n+  private final List<TsFileResource> seqFileResource;\n+  private final TreeSet<TsFileResource> unseqFileResource;\n+\n+  private final List<ChunkMetaData> seqChunkMetadatas = new ArrayList<>();\n+  private final TreeSet<ChunkMetaData> unseqChunkMetadatas = new TreeSet<>(\n+      Comparator.comparingLong(ChunkMetaData::getStartTime));\n+\n+  private final List<IChunkLoader> openedChunkLoaders = new LinkedList<>();\n+\n+  protected boolean hasCachedNextChunk;\n+  private boolean isCurrentChunkReaderInit;\n+  protected IChunkReader chunkReader;\n+  protected ChunkMetaData chunkMetaData;\n+\n+  protected List<VersionPair<IChunkReader>> overlappedChunkReader = new ArrayList<>();\n+  protected List<VersionPair<IChunkReader>> overlappedPages = new ArrayList<>();\n+\n+  protected boolean hasCachedNextPage;\n+  protected PageHeader currentPage;\n+\n+  private boolean hasCachedNextBatch;\n+  protected PriorityMergeReader priorityMergeReader = new PriorityMergeReader();\n+  private long latestDirectlyOverlappedPageEndTime = Long.MAX_VALUE;\n+\n+  private boolean hasRemaining;\n+  private boolean managedByQueryManager;\n+\n+\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context) throws StorageEngineException, IOException {\n+    queryDataSource = QueryResourceManager.getInstance()\n+        .getQueryDataSource(seriesPath, context);\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = queryDataSource.setTTL(filter);\n+\n+    seqFileResource = queryDataSource.getSeqResources();\n+    unseqFileResource = sortUnSeqFileResources(queryDataSource.getUnseqResources());\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  //for test\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context, QueryDataSource dataSource)\n+      throws IOException {\n+    queryDataSource = dataSource;\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = queryDataSource.setTTL(filter);\n+\n+    seqFileResource = queryDataSource.getSeqResources();\n+    unseqFileResource = sortUnSeqFileResources(queryDataSource.getUnseqResources());\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  //for test\n+  public AbstractDataReader(Path seriesPath, TSDataType dataType,\n+      Filter filter, QueryContext context, List<TsFileResource> seqResources) throws IOException {\n+    this.queryDataSource = null;\n+    this.seriesPath = seriesPath;\n+    this.context = context;\n+    this.dataType = dataType;\n+\n+    this.filter = filter;\n+\n+    this.seqFileResource = seqResources;\n+    this.unseqFileResource = new TreeSet<>();\n+\n+    removeInvalidFiles();\n+    tryToFillChunkMetadatas();\n+  }\n+\n+\n+  protected boolean hasNextChunk() throws IOException {\n+    if (hasCachedNextChunk) {\n+      return true;\n+    }\n+    removeInvalidChunks();\n+    searchMinimumChunk();\n+    //When the new chunk cannot be found, it is time to end all methods\n+    if (!hasCachedNextChunk) {\n+      return false;\n+    }\n+    unpackOverlappedFiles();\n+    unPackOverlappedChunks();\n+    return hasCachedNextChunk;\n+  }\n+\n+\n+  protected boolean hasNextPage() throws IOException {\n+    if (hasCachedNextPage) {\n+      return true;\n+    }\n+    if (!isCurrentChunkReaderInit) {\n+      chunkReader = initChunkReader(chunkMetaData);\n+      isCurrentChunkReaderInit = true;\n+    }\n+    if (chunkReader != null && chunkReader.hasNextSatisfiedPage()) {\n+      fillOverlappedPages();\n+      return hasCachedNextPage;\n+    }\n+\n+    isCurrentChunkReaderInit = false;\n+    chunkMetaData.getChunkLoader().close();\n+    hasCachedNextChunk = hasCachedNextPage;\n+    return hasCachedNextPage;\n+  }\n+\n+\n+  public boolean hasNextBatch() throws IOException {\n+    if (hasCachedNextBatch) {\n+      return true;\n+    }\n+    if (chunkReader.hasNextSatisfiedPage()) {\n+      priorityMergeReader\n+          .addReaderWithPriority(new ChunkDataIterator(chunkReader), chunkMetaData.getVersion());\n+      hasCachedNextBatch = true;\n+    }\n+    for (int i = 0; i < overlappedPages.size(); i++) {\n+      VersionPair<IChunkReader> reader = overlappedPages.get(i);\n+      priorityMergeReader\n+          .addReaderWithPriority(new ChunkDataIterator(reader.data), reader.version);\n+      hasCachedNextBatch = true;\n+    }\n+    overlappedPages.clear();\n+\n+    hasCachedNextPage = hasCachedNextBatch;\n+    return hasCachedNextBatch;\n+  }\n+\n+  public BatchData nextBatch() throws IOException {\n+    if (priorityMergeReader.hasNext()) {\n+      hasCachedNextBatch = false;\n+      return nextOverlappedPage();\n+    }\n+    throw new IOException(\"no next data\");\n+  }\n+\n+\n+  protected BatchData nextOverlappedPage() throws IOException {\n+    BatchData batchData = new BatchData(dataType);\n+    while (priorityMergeReader.hasNext()) {\n+      TimeValuePair timeValuePair = priorityMergeReader.current();\n+      //TODO should add a batchSize to limit the number of reads per time\n+      if (timeValuePair.getTimestamp() > latestDirectlyOverlappedPageEndTime) {\n+        break;\n+      }\n+      batchData.putAnObject(timeValuePair.getTimestamp(), timeValuePair.getValue().getValue());\n+      priorityMergeReader.next();\n+    }\n+    return batchData;\n+  }\n+\n+  private IChunkReader initChunkReader(ChunkMetaData metaData) throws IOException {\n+    if (metaData == null) {\n+      return null;\n+    }\n+    IChunkReader chunkReader;\n+    IChunkLoader chunkLoader = metaData.getChunkLoader();\n+    openedChunkLoaders.add(chunkLoader);\n+    if (chunkLoader instanceof MemChunkLoader) {\n+      MemChunkLoader memChunkLoader = (MemChunkLoader) chunkLoader;\n+      chunkReader = new MemChunkReader(memChunkLoader.getChunk(), filter);\n+    } else {\n+      Chunk chunk = chunkLoader.getChunk(metaData);\n+      chunkReader = new ChunkReader(chunk, filter);\n+      chunkReader.hasNextSatisfiedPage();\n+    }\n+    return chunkReader;\n+  }\n+\n+  private List<ChunkMetaData> loadChunkMetadatas(TsFileResource resource) throws IOException {\n+    List<ChunkMetaData> currentChunkMetaDataList;\n+    if (resource == null) {\n+      return new ArrayList<>();\n+    }\n+    if (resource.isClosed()) {\n+      currentChunkMetaDataList = DeviceMetaDataCache.getInstance().get(resource, seriesPath);\n+    } else {\n+      currentChunkMetaDataList = resource.getChunkMetaDataList();\n+    }\n+    List<Modification> pathModifications = context\n+        .getPathModifications(resource.getModFile(), seriesPath.getFullPath());\n+    for (ChunkMetaData data : currentChunkMetaDataList) {\n+      if (data.getChunkLoader() == null) {\n+        data.setChunkLoader(\n+            new ChunkLoaderImpl(new TsFileSequenceReader(resource.getFile().getAbsolutePath())));\n+      }\n+    }\n+    if (!pathModifications.isEmpty()) {\n+      QueryUtils.modifyChunkMetaData(currentChunkMetaDataList, pathModifications);\n+    }\n+    ReadOnlyMemChunk readOnlyMemChunk = resource.getReadOnlyMemChunk();\n+    if (readOnlyMemChunk != null) {\n+      currentChunkMetaDataList.add(readOnlyMemChunk.getChunkMetaData());\n+    }\n+    return currentChunkMetaDataList;\n+  }\n+\n+  private TreeSet<TsFileResource> sortUnSeqFileResources(List<TsFileResource> tsFileResources) {\n+    TreeSet<TsFileResource> unseqTsFilesSet = new TreeSet<>((o1, o2) -> {\n+      Map<String, Long> startTimeMap = o1.getStartTimeMap();\n+      Long minTimeOfO1 = startTimeMap.get(seriesPath.getDevice());\n+      Map<String, Long> startTimeMap2 = o2.getStartTimeMap();\n+      Long minTimeOfO2 = startTimeMap2.get(seriesPath.getDevice());\n+\n+      return Long.compare(minTimeOfO1, minTimeOfO2);\n+    });\n+    unseqTsFilesSet.addAll(tsFileResources);\n+    return unseqTsFilesSet;\n+  }\n+\n+  @Override\n+  public boolean isManagedByQueryManager() {\n+    return managedByQueryManager;\n+  }\n+\n+  @Override\n+  public void setManagedByQueryManager(boolean managedByQueryManager) {\n+    this.managedByQueryManager = managedByQueryManager;\n+  }\n+\n+  @Override\n+  public boolean hasRemaining() {\n+    return hasRemaining;\n+  }\n+\n+  @Override\n+  public void setHasRemaining(boolean hasRemaining) {\n+    this.hasRemaining = hasRemaining;\n+  }\n+\n+  /**\n+   * Because you get a list of all the files, some files are not necessary when filters exist. This\n+   * method filters out the available data files based on the filter\n+   */\n+  private void removeInvalidFiles() {\n+    //filter seq files\n+    while (filter != null && !seqFileResource.isEmpty()) {\n+      if (!isValid(seqFileResource.get(0))) {\n+        seqFileResource.remove(0);\n+        continue;\n+      }\n+      break;\n+    }\n+    //filter unseq files\n+    while (filter != null && !unseqFileResource.isEmpty()) {\n+      if (!isValid(unseqFileResource.first())) {\n+        unseqFileResource.pollFirst();\n+        continue;\n+      }\n+      break;\n+    }\n+  }\n+\n+  private boolean isValid(TsFileResource tsFileResource) {\n+    long startTime = tsFileResource.getStartTimeMap()\n+        .get(seriesPath.getDevice());\n+    long endTime = tsFileResource.getEndTimeMap()\n+        .getOrDefault(seriesPath.getDevice(), Long.MAX_VALUE);\n+    return filter.satisfyStartEndTime(startTime, endTime);\n+  }\n+\n+  /**\n+   * unseq files are very special files that intersect not only with sequence files, but also with\n+   * other unseq files. So we need to find all tsfiles that overlapped with current chunk and\n+   * extract chunks from the resource.\n+   */\n+  private void unpackOverlappedFiles() throws IOException {\n+    while (!unseqFileResource.isEmpty()) {\n+      Map<String, Long> startTimeMap = unseqFileResource.first().getStartTimeMap();\n+      Long unSeqStartTime = startTimeMap.getOrDefault(seriesPath.getDevice(), Long.MAX_VALUE);\n+      if (chunkMetaData.getEndTime() >= unSeqStartTime) {\n+        unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+        continue;\n+      }\n+      break;\n+    }\n+    while (!seqFileResource.isEmpty()) {\n+      Map<String, Long> startTimeMap = seqFileResource.get(0).getStartTimeMap();\n+      Long seqStartTime = startTimeMap.getOrDefault(seriesPath.getDevice(), Long.MIN_VALUE);\n+      if (chunkMetaData.getEndTime() > seqStartTime) {\n+        seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+        continue;\n+      }\n+      break;\n+    }\n+  }\n+\n+  /**\n+   * Because seq data and unseq data intersect, the minimum startTime taken from two files at a time\n+   * is used as the reference time to start reading data\n+   */\n+  private void searchMinimumChunk() {\n+    hasCachedNextChunk = true;\n+    if (!seqChunkMetadatas.isEmpty() && unseqChunkMetadatas.isEmpty()) {\n+      chunkMetaData = seqChunkMetadatas.remove(0);\n+    } else if (seqChunkMetadatas.isEmpty() && !unseqChunkMetadatas.isEmpty()) {\n+      chunkMetaData = unseqChunkMetadatas.pollFirst();\n+    } else if (!seqChunkMetadatas.isEmpty()) {\n+      // neither seqChunkMetadatas nor unseqChunkMetadatas is null\n+      if (seqChunkMetadatas.get(0).getStartTime() <= unseqChunkMetadatas.first().getStartTime()) {\n+        chunkMetaData = seqChunkMetadatas.remove(0);\n+      } else {\n+        chunkMetaData = unseqChunkMetadatas.pollFirst();\n+      }\n+    } else {\n+      hasCachedNextChunk = false;\n+    }\n+  }\n+\n+  /**\n+   * Before reading the chunks, should first clean up all the useless chunks, because in the file\n+   * hierarchy, although the files are available, some of the internal chunks are still unavailable\n+   */\n+  private void removeInvalidChunks() throws IOException {\n+    //remove seq chunks\n+    while (filter != null && (!seqChunkMetadatas.isEmpty() || !seqFileResource.isEmpty())) {\n+      while (seqChunkMetadatas.isEmpty() && !seqFileResource.isEmpty()) {\n+        seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+      }\n+\n+      ChunkMetaData metaData = seqChunkMetadatas.get(0);\n+      if (!filter.satisfyStartEndTime(metaData.getStartTime(), metaData.getEndTime())) {\n+        seqChunkMetadatas.remove(0);\n+        continue;\n+      }\n+      break;\n+    }\n+    while (filter != null && (!unseqChunkMetadatas.isEmpty() || !unseqFileResource.isEmpty())) {\n+      while (unseqChunkMetadatas.isEmpty() && !unseqFileResource.isEmpty()) {\n+        unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+      }\n+      ChunkMetaData metaData = unseqChunkMetadatas.first();\n+      if (!filter.satisfyStartEndTime(metaData.getStartTime(), metaData.getEndTime())) {\n+        unseqChunkMetadatas.pollFirst();\n+        continue;\n+      }\n+      break;\n+    }\n+    tryToFillChunkMetadatas();\n+  }\n+\n+  /**\n+   * Because there may be too many files in the scenario used by the user, we cannot open all the\n+   * chunks at once, which may OOM, so we can only fill one file at a time when needed. This\n+   * approach is likely to be ubiquitous, but it keeps the system running smoothly\n+   */\n+  private void tryToFillChunkMetadatas() throws IOException {\n+    while (seqChunkMetadatas.isEmpty() && !seqFileResource.isEmpty()) {\n+      seqChunkMetadatas.addAll(loadChunkMetadatas(seqFileResource.remove(0)));\n+    }\n+    while (unseqChunkMetadatas.isEmpty() && !unseqFileResource.isEmpty()) {\n+      unseqChunkMetadatas.addAll(loadChunkMetadatas(unseqFileResource.pollFirst()));\n+    }\n+  }\n+\n+  /**\n+   * Before calling this method, you should make sure that all the intersecting files are filled in\n+   * the container, because the files intersect, but some chunks may still be useless, so you need\n+   * to clean up all the unused chunks and populate the container. It should be noted that this\n+   * chunk collection is not in order, and all chunks should be used at once\n+   */\n+  private void unPackOverlappedChunks() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4e66feb3f1a3b5c79dbff199cb1c06aeddccd2"}, "originalPosition": 448}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba8ec7f0d7f9098ee0ed5ce76f14c4b3123e1a7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2ba8ec7f0d7f9098ee0ed5ce76f14c4b3123e1a7", "committedDate": "2020-01-14T08:39:26Z", "message": "rename and optimize codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a2c465ff25ddeea1bd0b5ab94052b5e4404ce3d", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2a2c465ff25ddeea1bd0b5ab94052b5e4404ce3d", "committedDate": "2020-01-14T08:48:04Z", "message": "remove unusned class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f77fa48dc83c7ec4bf830f7597a0630895cf32a", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8f77fa48dc83c7ec4bf830f7597a0630895cf32a", "committedDate": "2020-01-14T10:59:33Z", "message": "refactor 50% raw data query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c2dd96055f5ee96c1cb8a87f236863d2d955a0d", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/7c2dd96055f5ee96c1cb8a87f236863d2d955a0d", "committedDate": "2020-01-14T13:13:50Z", "message": "refactor 75% raw data query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f38ade4a4e0985f88b4402af3e3543cac052ab", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/e6f38ade4a4e0985f88b4402af3e3543cac052ab", "committedDate": "2020-01-15T02:03:38Z", "message": "Merge AggregateResult and AggreResultData; move init() to constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b7613aa79ce34439d0b1f02832458d5f400ce9", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/72b7613aa79ce34439d0b1f02832458d5f400ce9", "committedDate": "2020-01-15T02:59:10Z", "message": "update aggregate; exchange extend relationship of AVG and SUM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c3db53546760b6a088ff68bb0667924ef4e0311", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8c3db53546760b6a088ff68bb0667924ef4e0311", "committedDate": "2020-01-15T05:02:03Z", "message": "rename function to aggregate result"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3856be65e192744167619d5719721f2d03ec8ba7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/3856be65e192744167619d5719721f2d03ec8ba7", "committedDate": "2020-01-15T05:13:16Z", "message": "fix SeriesDataReaderWithoutValueFilter close"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eb366162caa62f21b99b6c1ce5accd71e89a338", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/4eb366162caa62f21b99b6c1ce5accd71e89a338", "committedDate": "2020-01-15T06:19:43Z", "message": "Merge disable align"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0028b388433510b31aed7a9e894d2f71d3d36933", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/0028b388433510b31aed7a9e894d2f71d3d36933", "committedDate": "2020-01-15T06:56:19Z", "message": "Replace AggreResultDataPointReader and OldEngineDataSet by SingleDataSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c09f0cf9febb4c81aba391e715e1fecf033875e3", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/c09f0cf9febb4c81aba391e715e1fecf033875e3", "committedDate": "2020-01-15T07:03:38Z", "message": "resolve sonarcloud"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45a59bbb6c45bf3d4950178c9523438b0aa0a8d8", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/45a59bbb6c45bf3d4950178c9523438b0aa0a8d8", "committedDate": "2020-01-15T07:03:56Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "301ea5c46da34917c803547da574435eff3892fe", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/301ea5c46da34917c803547da574435eff3892fe", "committedDate": "2020-01-15T07:30:40Z", "message": "Merge branch 'master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43f67d36c60c68f5149e043a48f80a066996373b", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/43f67d36c60c68f5149e043a48f80a066996373b", "committedDate": "2020-01-15T07:54:30Z", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "861d37269b510ac5a7318320bf503fae612ea304", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/861d37269b510ac5a7318320bf503fae612ea304", "committedDate": "2020-01-15T08:07:49Z", "message": "fix aggregate SUM and AVG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d357d9a9fe56ffcf1d5096daaf598d62c9af3c4a", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/d357d9a9fe56ffcf1d5096daaf598d62c9af3c4a", "committedDate": "2020-01-15T08:08:00Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c4523e27967fc9ec8f73244a868196a4e851f62", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/0c4523e27967fc9ec8f73244a868196a4e851f62", "committedDate": "2020-01-15T08:16:30Z", "message": "fix some bug of new_series_reader (#744)\n\n* fix some bug after refactoring AggregateResult"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477144223274a4155882aa5f43fdcafec2b630d1", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/477144223274a4155882aa5f43fdcafec2b630d1", "committedDate": "2020-01-15T08:48:14Z", "message": "fix GroupByWithoutValueFilterDataSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3cdc673b8fb74937a8298e635b8838b7878d41", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/2d3cdc673b8fb74937a8298e635b8838b7878d41", "committedDate": "2020-01-15T09:13:18Z", "message": "Refactor rowRecord.addField()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccdd73e8c87b644629b63a3204115c7ee0efdf3", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/0ccdd73e8c87b644629b63a3204115c7ee0efdf3", "committedDate": "2020-01-15T10:33:40Z", "message": "leverage statistics in SeriesDataReaderWithValueFilter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7aa139cf946532a5972fa72ac111fca1d10f47", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9f7aa139cf946532a5972fa72ac111fca1d10f47", "committedDate": "2020-01-15T10:43:10Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27b566bc308c934538c8768cc8c9bfd910b104ea", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/27b566bc308c934538c8768cc8c9bfd910b104ea", "committedDate": "2020-01-15T11:47:09Z", "message": "Fix IoTDBFillIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be880674fbe2ac41e351cb0662d5bf97d92725c7", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/be880674fbe2ac41e351cb0662d5bf97d92725c7", "committedDate": "2020-01-15T13:48:58Z", "message": "Fix some bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d54d4b7167816c78746f29b6a2649cb58039a71", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/5d54d4b7167816c78746f29b6a2649cb58039a71", "committedDate": "2020-01-16T01:56:33Z", "message": "Revert extend relationship of AVG and SUM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6d853b3c7946a90cb87c91672679aee9f3c2971", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/f6d853b3c7946a90cb87c91672679aee9f3c2971", "committedDate": "2020-01-16T02:44:51Z", "message": "Fix IOTDBGroupByIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c92387731922faf7b43e4fe355ee7a6f77a1006e", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/c92387731922faf7b43e4fe355ee7a6f77a1006e", "committedDate": "2020-01-16T08:34:40Z", "message": "Fix IoTDBAggregationSmallDataIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf9c736183a9d80b3ea7a81fef457d3c2f7771e3", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/cf9c736183a9d80b3ea7a81fef457d3c2f7771e3", "committedDate": "2020-01-16T10:54:16Z", "message": "refactor abstract reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d73bb01110b37bc16502bc6f91215aceaa68cb86", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/d73bb01110b37bc16502bc6f91215aceaa68cb86", "committedDate": "2020-01-16T10:56:56Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5ee81213c5ec5202c2dae8d7a4c9c617941676", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/3b5ee81213c5ec5202c2dae8d7a4c9c617941676", "committedDate": "2020-01-16T11:33:43Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "062d6a8c97a8e49c3f5e2705ffe1e2f6f8f0a991", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/062d6a8c97a8e49c3f5e2705ffe1e2f6f8f0a991", "committedDate": "2020-01-16T12:12:42Z", "message": "Exchange extend relationship of AVG and SUM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6a322c5cded9db1510e93aa11760a34dc21ee04", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/b6a322c5cded9db1510e93aa11760a34dc21ee04", "committedDate": "2020-01-16T12:12:53Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fca96688fb6c567f2d07ebe5f6f4e2eb068402ac", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/fca96688fb6c567f2d07ebe5f6f4e2eb068402ac", "committedDate": "2020-01-16T12:19:38Z", "message": "fix some bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef6326b2a46a4b4cc65163c203b159ff6a004dea", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/ef6326b2a46a4b4cc65163c203b159ff6a004dea", "committedDate": "2020-01-16T12:19:59Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6196d02a918d521220022d4c78e57902c63fb0d", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/d6196d02a918d521220022d4c78e57902c63fb0d", "committedDate": "2020-01-16T12:55:58Z", "message": "fix some bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af4187be5c6a487e2088f1326fa65d8ce58cdb6f", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/af4187be5c6a487e2088f1326fa65d8ce58cdb6f", "committedDate": "2020-01-16T12:59:18Z", "message": "fix bugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e9f11c73d27668a8277a08e5447fce134507f14", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/5e9f11c73d27668a8277a08e5447fce134507f14", "committedDate": "2020-01-16T13:10:04Z", "message": "fix some bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87a5491c0458ad1987c310fa9142b63d578223c0", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/87a5491c0458ad1987c310fa9142b63d578223c0", "committedDate": "2020-01-16T13:16:09Z", "message": "Revert extend relationship of AVG and SUM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e12cba927e3f36224279e49dcaa4f4c74ad170fe", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/e12cba927e3f36224279e49dcaa4f4c74ad170fe", "committedDate": "2020-01-16T13:23:01Z", "message": "remove unused codes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa229d2068e259f7699ebfd80b936fc38ef1ca46", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/aa229d2068e259f7699ebfd80b936fc38ef1ca46", "committedDate": "2020-01-20T06:48:39Z", "message": "Add iterators to TVList to prevent data copy (#753)\n\n* refactor ReadOnlyMemChunk to save copy on read"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b38a38a32dbf57b000841303f45ebe2f648c753", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/0b38a38a32dbf57b000841303f45ebe2f648c753", "committedDate": "2020-01-21T14:58:25Z", "message": "[IOTDB-434] Refactor SeriesReaderByTimestamp (#756)\n\n* add new byTimestampReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a47f6142b7f40dbf4a33abb97a801ec0b5fb509", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/5a47f6142b7f40dbf4a33abb97a801ec0b5fb509", "committedDate": "2020-01-22T01:23:13Z", "message": "fix filter bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab0c74e1ba0d986e77853cfe28c448fac9233959", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ab0c74e1ba0d986e77853cfe28c448fac9233959", "committedDate": "2020-01-22T01:38:36Z", "message": "fix javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3224d8323d5248958d2ac27bce2c586a160b43f9", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/3224d8323d5248958d2ac27bce2c586a160b43f9", "committedDate": "2020-01-22T01:38:49Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c497d416ad9c43a9dcc0be3fcf88c4c0d3a0329e", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c497d416ad9c43a9dcc0be3fcf88c4c0d3a0329e", "committedDate": "2020-01-28T13:51:27Z", "message": "refactor QueryProcessor to Planner"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfac2a6b7dff1dae33bf2f4200f5f2c179c7777e", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/cfac2a6b7dff1dae33bf2f4200f5f2c179c7777e", "committedDate": "2020-01-28T14:06:51Z", "message": "refactor EngineQueryRouter related"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b00919f5392fbbf44440f9d626ec37dcd013861", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/1b00919f5392fbbf44440f9d626ec37dcd013861", "committedDate": "2020-01-31T01:36:53Z", "message": "uncomment test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "953609a1ae327c10a983d26d9d7208050a695bef", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/953609a1ae327c10a983d26d9d7208050a695bef", "committedDate": "2020-01-31T01:37:13Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "086e84d40ef7b882521008fb6741bf96f8aaa2f7", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/086e84d40ef7b882521008fb6741bf96f8aaa2f7", "committedDate": "2020-01-31T02:20:57Z", "message": "remove unused interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e80692852eb01ea7f89fa25293bbe20aac5cadcc", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/e80692852eb01ea7f89fa25293bbe20aac5cadcc", "committedDate": "2020-01-31T13:44:18Z", "message": "[IOTDB-438] Modify SeriesReader to uniform usage (#758)\n\n* new SeriesReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ec06736365c13fc768bd922611fada16dcddfc", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/f0ec06736365c13fc768bd922611fada16dcddfc", "committedDate": "2020-02-01T12:24:12Z", "message": "delete hasNext method in IReaderByTimestamp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8103f53ac34c7ea7344c5f5ee6611bb5ba4b4bb2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/8103f53ac34c7ea7344c5f5ee6611bb5ba4b4bb2", "committedDate": "2020-02-02T04:48:11Z", "message": "refactor ByTimestampReaderAdapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94641c3ac5ec3563beab02b755cb4f4a117e6832", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/94641c3ac5ec3563beab02b755cb4f4a117e6832", "committedDate": "2020-02-03T03:19:43Z", "message": "disable sonar for contributor pr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c20f063d2c1e39d9568b61b736fffe66792e8e", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/c5c20f063d2c1e39d9568b61b736fffe66792e8e", "committedDate": "2020-02-03T03:23:59Z", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e65cc7ae53c304615b0371e9472c13b2d53cad3c", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/e65cc7ae53c304615b0371e9472c13b2d53cad3c", "committedDate": "2020-02-03T05:48:17Z", "message": "[IOTDB-449] Manage TsFileSequenceReader in query by FileReaderManager (#760)\n\n* manage TsFileSequenceReader in the query by FileReaderManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51a8788967d5935f12de6854073c53bd71407d89", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/51a8788967d5935f12de6854073c53bd71407d89", "committedDate": "2020-02-03T07:06:55Z", "message": "modify group by"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "326b1ea9dcfe9dd3b29d26a134aabc5113e80a8b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/326b1ea9dcfe9dd3b29d26a134aabc5113e80a8b", "committedDate": "2020-02-03T08:04:57Z", "message": "simplify aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a81003dd396b155e43f56a07e8b2940da610b2b", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/0a81003dd396b155e43f56a07e8b2940da610b2b", "committedDate": "2020-02-03T08:19:10Z", "message": "Merge remote-tracking branch 'origin/master' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68bb28b272ba0d9d51c3ad4842ae688ea4919dc7", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/68bb28b272ba0d9d51c3ad4842ae688ea4919dc7", "committedDate": "2020-02-03T08:58:50Z", "message": "fix endTime in GroupByEngineDataSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92a9e5110f5a162966b4dbfc260425978f33ed6a", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/92a9e5110f5a162966b4dbfc260425978f33ed6a", "committedDate": "2020-02-03T09:08:22Z", "message": "add override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28e21862202f277197a959870406ecde906f251b", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/28e21862202f277197a959870406ecde906f251b", "committedDate": "2020-02-03T09:08:29Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9937c5951f9e3f171843f643f6526c09994b2bbf", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/9937c5951f9e3f171843f643f6526c09994b2bbf", "committedDate": "2020-02-03T09:11:24Z", "message": "add override in SeriesReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "128f4d6274bb9fee15d6bee635f37da2396e9db2", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/128f4d6274bb9fee15d6bee635f37da2396e9db2", "committedDate": "2020-02-03T10:28:05Z", "message": "refactor exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d98129b16a5e8fd5f6d6d783dc2670ab222df085", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/d98129b16a5e8fd5f6d6d783dc2670ab222df085", "committedDate": "2020-02-03T10:28:17Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908068a114ef3e7731a0dcf475a3a1b05b493e29", "author": {"user": {"login": "jack870131", "name": "Jack Tsai"}}, "url": "https://github.com/apache/iotdb/commit/908068a114ef3e7731a0dcf475a3a1b05b493e29", "committedDate": "2020-02-03T11:28:13Z", "message": "fix IoTDBGroupbyDeviceIT and IoTDBGroupByIT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfbb1f3e1749ec40297d9a0e88d22be51dd2923d", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/bfbb1f3e1749ec40297d9a0e88d22be51dd2923d", "committedDate": "2020-02-03T12:43:58Z", "message": "[IOTDB-443] Fix ReadOnlyMemChunk round float and double data incorrectly (#761)\n\n* [IOTDB-443] Fix ReadOnlyMemChunk round float and double data incorrectly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1645ccc10dc402485b17e6b97eb142c08e6b0fd6", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/1645ccc10dc402485b17e6b97eb142c08e6b0fd6", "committedDate": "2020-02-04T00:51:00Z", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b82b29c97d9611556e124157095e6c7730fa518", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/0b82b29c97d9611556e124157095e6c7730fa518", "committedDate": "2020-02-04T00:51:59Z", "message": "init"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0e46c94a2580248a705a42b0dd3fb190819565a", "author": {"user": null}, "url": "https://github.com/apache/iotdb/commit/d0e46c94a2580248a705a42b0dd3fb190819565a", "committedDate": "2020-02-04T02:04:09Z", "message": "[developing] support select ConstValue column, support query on notExistColumns for group by device"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1990ec449691a4368c1a9e1b445efd5b531cd215", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/1990ec449691a4368c1a9e1b445efd5b531cd215", "committedDate": "2020-02-04T02:36:10Z", "message": "test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e99422083b7976d0dc92d15d896e26335a4df37", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/5e99422083b7976d0dc92d15d896e26335a4df37", "committedDate": "2020-02-04T02:36:29Z", "message": "Merge branch 'new_series_reader' of https://github.com/apache/incubator-iotdb into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8a9146fefd40ab3f62c4fc6dc8a5e0cab10ce53", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/b8a9146fefd40ab3f62c4fc6dc8a5e0cab10ce53", "committedDate": "2020-02-04T03:34:09Z", "message": "move SeqTsFileRecoverTest output to target"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0241e4a58c58649f7dd651dd5ed676488d8aba29", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/0241e4a58c58649f7dd651dd5ed676488d8aba29", "committedDate": "2020-02-04T03:34:33Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51ed987062f44f7c4496dc76762070be142709e2", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/51ed987062f44f7c4496dc76762070be142709e2", "committedDate": "2020-02-04T05:42:31Z", "message": "Clear the relation of SeriesReaders (#764)\n\n* clear series readers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e95c05cf13ccdb295bf49e7acfce63d4d19c29b", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/1e95c05cf13ccdb295bf49e7acfce63d4d19c29b", "committedDate": "2020-02-04T07:03:15Z", "message": "Add constant and not exist column"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "594703b4b3befef81d503ebe579b9dfa846cd409", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/594703b4b3befef81d503ebe579b9dfa846cd409", "committedDate": "2020-02-04T10:31:26Z", "message": "[IOTDB-335] Merge different aggregations on same timeseries (#765)\n\n* [IOTDB-335] Separate query executions of the same timeseries with different aggregate functions may be optimized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1390bbc5bbeeecfcbbcff418133ca6564e5ac64", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/a1390bbc5bbeeecfcbbcff418133ca6564e5ac64", "committedDate": "2020-02-04T10:39:16Z", "message": "optimize aggregation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "551c99ec73789ad3ad1fcd090bec76cbd1d93a98", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/551c99ec73789ad3ad1fcd090bec76cbd1d93a98", "committedDate": "2020-02-04T11:27:40Z", "message": "add some tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "055bbcb21a336b34b93393e8cf20ab8aed201c1a", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/055bbcb21a336b34b93393e8cf20ab8aed201c1a", "committedDate": "2020-02-04T11:42:52Z", "message": "Test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c8b37d52ba1071d73e9b14801bc1a90a972d38f", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/1c8b37d52ba1071d73e9b14801bc1a90a972d38f", "committedDate": "2020-02-04T12:19:25Z", "message": "fix some code smell"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c2d3d58188eb8d8d338d99ad2b1d1a85d125673", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/5c2d3d58188eb8d8d338d99ad2b1d1a85d125673", "committedDate": "2020-02-04T12:19:51Z", "message": "Merge remote-tracking branch 'origin/new_series_reader' into new_series_reader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72fd634115b362f7b9c161a74339236ec8eaa288", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/72fd634115b362f7b9c161a74339236ec8eaa288", "committedDate": "2020-02-04T12:22:44Z", "message": "remove unused test class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dcaa2c540aa31af5221273cea2b031cdc6668ad", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/9dcaa2c540aa31af5221273cea2b031cdc6668ad", "committedDate": "2020-02-05T01:13:19Z", "message": "rename RawDataBatchReader to SeriesRawDataBatchReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "946fffc4f157b0fabe80fd34a47bb11d2b99cae8", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/946fffc4f157b0fabe80fd34a47bb11d2b99cae8", "committedDate": "2020-02-05T01:28:27Z", "message": "rename AggregateReader to SeriesAggregateReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b87bfc76a83b55d2cb16e911b319e95dc9600d72", "author": {"user": {"login": "SilverNarcissus", "name": null}}, "url": "https://github.com/apache/iotdb/commit/b87bfc76a83b55d2cb16e911b319e95dc9600d72", "committedDate": "2020-02-05T02:18:52Z", "message": "Merge branch 'master' of https://github.com/apache/incubator-iotdb into IOTDB-447-query-as-much-as-possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d3264f7beea6e80432d80accfd37a1fcc29ba38", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/2d3264f7beea6e80432d80accfd37a1fcc29ba38", "committedDate": "2020-02-05T03:24:21Z", "message": "fix defaultFillInterval"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceea14c45c553f888242d4a3f36a56d62641f101", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/ceea14c45c553f888242d4a3f36a56d62641f101", "committedDate": "2020-02-05T04:00:34Z", "message": "fix default fill type of int/long/float/double to LinearFill"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa0d67bad440078e565b1f6827c89dc471d2cadd", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/aa0d67bad440078e565b1f6827c89dc471d2cadd", "committedDate": "2020-02-05T04:08:15Z", "message": "rename FillEngineExecutor to FillQueryExecutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b636dc926f73764a61fd208d956a0bbaaae75b7", "author": {"user": {"login": "liutaohua", "name": "Dawei Liu"}}, "url": "https://github.com/apache/iotdb/commit/0b636dc926f73764a61fd208d956a0bbaaae75b7", "committedDate": "2020-02-05T06:34:42Z", "message": "fixed new_series_reader problem reported in sonar (#768)\n\n* fix bug and code smell that sonar scans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "255d9cee1f91ec1fa23141e4523d9ecec1f5ad2c", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/255d9cee1f91ec1fa23141e4523d9ecec1f5ad2c", "committedDate": "2020-02-05T07:07:07Z", "message": "some file package changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1222a15f8cab9f34373971a569b3b9c1f5e12516", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/1222a15f8cab9f34373971a569b3b9c1f5e12516", "committedDate": "2020-02-05T07:28:36Z", "message": "resolve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c311b36e5ddde3734e2d7bf18347ba56fa457483", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/c311b36e5ddde3734e2d7bf18347ba56fa457483", "committedDate": "2020-02-05T08:34:34Z", "message": "Merge new_series_reader and solve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e291c91c5c6bd557b101678611b80776da452b78", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/e291c91c5c6bd557b101678611b80776da452b78", "committedDate": "2020-02-05T08:43:50Z", "message": "Rename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "740f6143cbf25bfad9bfb54e61f2c485b9f4adcc", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/740f6143cbf25bfad9bfb54e61f2c485b9f4adcc", "committedDate": "2020-02-05T08:47:48Z", "message": "change package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "132fe564c906fedd0b8bd5b18e9ada6f2bb8ce36", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/132fe564c906fedd0b8bd5b18e9ada6f2bb8ce36", "committedDate": "2020-02-05T08:49:51Z", "message": "Merge remote-tracking branch 'upstream/new_series_reader' into new_series_reader\n\n# Conflicts:\n#\tserver/src/main/java/org/apache/iotdb/db/query/dataset/groupby/GroupByWithoutValueFilterDataSet.java\n#\tserver/src/main/java/org/apache/iotdb/db/query/executor/AggregationExecutor.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7715c3b9afc793c3374adf88033815472f081ab8", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/7715c3b9afc793c3374adf88033815472f081ab8", "committedDate": "2020-02-05T08:51:50Z", "message": "Solve conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e7a0767265924e1ec266ed98820ea9d1cc2499e", "author": {"user": {"login": "JackieTien97", "name": "Jackie Tien"}}, "url": "https://github.com/apache/iotdb/commit/9e7a0767265924e1ec266ed98820ea9d1cc2499e", "committedDate": "2020-02-05T11:29:35Z", "message": "add doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c45fbbb8eb5cb819b12213f807c51e4695f3b80e", "author": {"user": {"login": "qiaojialin", "name": "Jialin Qiao"}}, "url": "https://github.com/apache/iotdb/commit/c45fbbb8eb5cb819b12213f807c51e4695f3b80e", "committedDate": "2020-02-05T13:01:39Z", "message": "resolve conflict after merging master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03e18f74b7c4b635af56f68c6372ea1566055ea4", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/03e18f74b7c4b635af56f68c6372ea1566055ea4", "committedDate": "2020-02-05T15:00:36Z", "message": "Add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a06b8d762fc77925a27082b3bfa098e1742e10a", "author": {"user": {"login": "samperson1997", "name": "Zesong Sun"}}, "url": "https://github.com/apache/iotdb/commit/5a06b8d762fc77925a27082b3bfa098e1742e10a", "committedDate": "2020-02-06T00:25:27Z", "message": "Add test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3219, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}