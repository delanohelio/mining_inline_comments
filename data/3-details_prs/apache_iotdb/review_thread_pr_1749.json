{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzE1NTgz", "number": 1749, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODowNzo0MlrOEl-BzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1Mzo0OFrOEmhDIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjQ5MDM3OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/CompressionType.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODowNzo0MlrOHVuquw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODozNDozMFrOHVvqmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0Njc0Nw==", "bodyText": "byte i\uff0c why call this name", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492546747", "createdAt": "2020-09-22T08:07:42Z", "author": {"login": "mychaow"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/CompressionType.java", "diffHunk": "@@ -52,6 +52,35 @@ public static CompressionType deserialize(short i) {\n     }\n   }\n \n+  /**\n+   * give an byte to return a compression type.\n+   *\n+   * @param i byte number\n+   * @return CompressionType\n+   */\n+  public static CompressionType byteToEnum(byte i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2MzA5Ng==", "bodyText": "It's my negligence. I'll change it", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492563096", "createdAt": "2020-09-22T08:34:30Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/CompressionType.java", "diffHunk": "@@ -52,6 +52,35 @@ public static CompressionType deserialize(short i) {\n     }\n   }\n \n+  /**\n+   * give an byte to return a compression type.\n+   *\n+   * @param i byte number\n+   * @return CompressionType\n+   */\n+  public static CompressionType byteToEnum(byte i) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0Njc0Nw=="}, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjYyMzM2OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/TSEncoding.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo0MToxOFrOHVv6nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNTo1NFrOHVx9dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzE5OQ==", "bodyText": "better to check the size of this parameter as TSDataType", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492567199", "createdAt": "2020-09-22T08:41:18Z", "author": {"login": "neuyilan"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/TSEncoding.java", "diffHunk": "@@ -51,6 +51,35 @@ public static TSEncoding deserialize(short i) {\n     }\r\n   }\r\n \r\n+  /**\r\n+   * give an byte to return a encoding type.\r\n+   *\r\n+   * @param i byte number\r\n+   * @return encoding type\r\n+   */\r\n+  public static TSEncoding byteToEnum(byte i) {\r\n+    switch (i) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDY5NQ==", "bodyText": "Copy that. I'll change it", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492600695", "createdAt": "2020-09-22T09:35:54Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/file/metadata/enums/TSEncoding.java", "diffHunk": "@@ -51,6 +51,35 @@ public static TSEncoding deserialize(short i) {\n     }\r\n   }\r\n \r\n+  /**\r\n+   * give an byte to return a encoding type.\r\n+   *\r\n+   * @param i byte number\r\n+   * @return encoding type\r\n+   */\r\n+  public static TSEncoding byteToEnum(byte i) {\r\n+    switch (i) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2NzE5OQ=="}, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjYzMDAyOnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/schema/MeasurementSchema.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwODo0MzowNFrOHVv-tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTozNjoxM1rOHVx-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODI0Ng==", "bodyText": "Add one UT of the serialize and deserialize method", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492568246", "createdAt": "2020-09-22T08:43:04Z", "author": {"login": "neuyilan"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/schema/MeasurementSchema.java", "diffHunk": "@@ -98,12 +98,11 @@ public static MeasurementSchema deserializeFrom(InputStream inputStream) throws\n \n     measurementSchema.measurementId = ReadWriteIOUtils.readString(inputStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYwMDkyNA==", "bodyText": "OK, I'll add it", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r492600924", "createdAt": "2020-09-22T09:36:13Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/write/schema/MeasurementSchema.java", "diffHunk": "@@ -98,12 +98,11 @@ public static MeasurementSchema deserializeFrom(InputStream inputStream) throws\n \n     measurementSchema.measurementId = ReadWriteIOUtils.readString(inputStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU2ODI0Ng=="}, "originalCommit": {"oid": "36b4f557004cacce8e92851a4c4a69cd68219760"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4Njk4NTczOnYy", "diffSide": "RIGHT", "path": "tsfile/src/test/java/org/apache/iotdb/tsfile/write/writer/MeasurementSchemaSerializeTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzowMjoyOVrOHWZJ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowNjozMlrOHXVMmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI0Mjg1Mw==", "bodyText": "Please add the Apache header.", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r493242853", "createdAt": "2020-09-23T07:02:29Z", "author": {"login": "HTHou"}, "path": "tsfile/src/test/java/org/apache/iotdb/tsfile/write/writer/MeasurementSchemaSerializeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.apache.iotdb.tsfile.write.writer;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a02a588bf99148f562229b32f03e2666c04053c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyNjU4Nw==", "bodyText": "copy that", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r494226587", "createdAt": "2020-09-24T11:06:32Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/test/java/org/apache/iotdb/tsfile/write/writer/MeasurementSchemaSerializeTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.apache.iotdb.tsfile.write.writer;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI0Mjg1Mw=="}, "originalCommit": {"oid": "a02a588bf99148f562229b32f03e2666c04053c3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIyODE3OnYy", "diffSide": "RIGHT", "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1Mzo0OFrOHWllWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMTowNjozNlrOHXVMtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NjQ4OA==", "bodyText": "hm.. this method is overdesigned..\nIf you read InputStream.read(byte[]) method, you will find it actually just call byte c = (byte)read();\nSo, just return (byte) read() is ok.", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r493446488", "createdAt": "2020-09-23T10:53:48Z", "author": {"login": "jixuan1989"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "diffHunk": "@@ -82,6 +83,19 @@ public static boolean readBool(ByteBuffer buffer) {\n     return a == 1;\n   }\n \n+  /**\n+   * read a byte from inputStream.\n+   */\n+  public static byte readByte(InputStream inputStream) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a02a588bf99148f562229b32f03e2666c04053c3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDIyNjYxNQ==", "bodyText": "OK, thanks for your guidance", "url": "https://github.com/apache/iotdb/pull/1749#discussion_r494226615", "createdAt": "2020-09-24T11:06:36Z", "author": {"login": "yanhongwangg"}, "path": "tsfile/src/main/java/org/apache/iotdb/tsfile/utils/ReadWriteIOUtils.java", "diffHunk": "@@ -82,6 +83,19 @@ public static boolean readBool(ByteBuffer buffer) {\n     return a == 1;\n   }\n \n+  /**\n+   * read a byte from inputStream.\n+   */\n+  public static byte readByte(InputStream inputStream) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NjQ4OA=="}, "originalCommit": {"oid": "a02a588bf99148f562229b32f03e2666c04053c3"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 735, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}