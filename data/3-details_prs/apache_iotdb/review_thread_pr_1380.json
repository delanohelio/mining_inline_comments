{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQ0OTIz", "number": 1380, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTo1NjowMVrOEGkoBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjowMTowMVrOEGkrdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzI2OTgyOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/config/ConsistencyLevel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTo1NjowMVrOGlc9nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMzoxMjo1NlrOGleIBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyNTAyMA==", "bodyText": "I would suggest print a warning log in the default branch in case that the user mistyped this configuration, e.g., the user types \"weak\" as \"waek\" without notice, and we should inform him that the consistency is not what he has thought.", "url": "https://github.com/apache/iotdb/pull/1380#discussion_r441925020", "createdAt": "2020-06-18T01:56:01Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/config/ConsistencyLevel.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cluster.config;\n+\n+\n+public enum ConsistencyLevel {\n+  /**\n+   * Strong consistency means the server will first try to synchronize with the leader to get the\n+   * newest meta data, if failed(timeout), directly report an error to the user;\n+   */\n+  STRONG_CONSISTENCY(\"strong\"),\n+\n+  /**\n+   * mid consistency means the server will first try to synchronize with the leader, but if\n+   * failed(timeout), it will give up and just use current data it has cached before;\n+   */\n+  MID_CONSISTENCY(\"mid\"),\n+\n+  /**\n+   * weak consistency do not synchronize with the leader and simply use the local data\n+   */\n+  WEAK_CONSISTENCY(\"weak\"),\n+  ;\n+\n+  private String consistencyLevel;\n+\n+  ConsistencyLevel(String consistencyLevel) {\n+    this.consistencyLevel = consistencyLevel;\n+  }\n+\n+\n+  public static ConsistencyLevel getConsistencyLevel(String consistencyLevel) {\n+    if (consistencyLevel == null) {\n+      return ConsistencyLevel.MID_CONSISTENCY;\n+    }\n+    switch (consistencyLevel.toLowerCase()) {\n+      case \"strong\":\n+        return ConsistencyLevel.STRONG_CONSISTENCY;\n+      case \"mid\":\n+        return ConsistencyLevel.MID_CONSISTENCY;\n+      case \"weak\":\n+        return ConsistencyLevel.WEAK_CONSISTENCY;\n+      default:\n+        return ConsistencyLevel.MID_CONSISTENCY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31296b668df536ad86bb202fc9228ee5ec4f75f5"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk0NDA3MQ==", "bodyText": "I would suggest print a warning log in the default branch in case that the user mistyped this configuration, e.g., the user types \"weak\" as \"waek\" without notice, and we should inform him that the consistency is not what he has thought.\n\nGood suggestion, I will fix it", "url": "https://github.com/apache/iotdb/pull/1380#discussion_r441944071", "createdAt": "2020-06-18T03:12:56Z", "author": {"login": "neuyilan"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/config/ConsistencyLevel.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.iotdb.cluster.config;\n+\n+\n+public enum ConsistencyLevel {\n+  /**\n+   * Strong consistency means the server will first try to synchronize with the leader to get the\n+   * newest meta data, if failed(timeout), directly report an error to the user;\n+   */\n+  STRONG_CONSISTENCY(\"strong\"),\n+\n+  /**\n+   * mid consistency means the server will first try to synchronize with the leader, but if\n+   * failed(timeout), it will give up and just use current data it has cached before;\n+   */\n+  MID_CONSISTENCY(\"mid\"),\n+\n+  /**\n+   * weak consistency do not synchronize with the leader and simply use the local data\n+   */\n+  WEAK_CONSISTENCY(\"weak\"),\n+  ;\n+\n+  private String consistencyLevel;\n+\n+  ConsistencyLevel(String consistencyLevel) {\n+    this.consistencyLevel = consistencyLevel;\n+  }\n+\n+\n+  public static ConsistencyLevel getConsistencyLevel(String consistencyLevel) {\n+    if (consistencyLevel == null) {\n+      return ConsistencyLevel.MID_CONSISTENCY;\n+    }\n+    switch (consistencyLevel.toLowerCase()) {\n+      case \"strong\":\n+        return ConsistencyLevel.STRONG_CONSISTENCY;\n+      case \"mid\":\n+        return ConsistencyLevel.MID_CONSISTENCY;\n+      case \"weak\":\n+        return ConsistencyLevel.WEAK_CONSISTENCY;\n+      default:\n+        return ConsistencyLevel.MID_CONSISTENCY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyNTAyMA=="}, "originalCommit": {"oid": "31296b668df536ad86bb202fc9228ee5ec4f75f5"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzI3ODYwOnYy", "diffSide": "RIGHT", "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/DataGroupMember.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjowMTowMVrOGldC_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjowMTowMVrOGldC_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyNjM5OQ==", "bodyText": "Such TODOs can be removed now.", "url": "https://github.com/apache/iotdb/pull/1380#discussion_r441926399", "createdAt": "2020-06-18T02:01:01Z", "author": {"login": "jt2594838"}, "path": "cluster/src/main/java/org/apache/iotdb/cluster/server/member/DataGroupMember.java", "diffHunk": "@@ -1062,8 +1073,8 @@ public void pullTimeSeriesSchema(PullSchemaRequest request,\n \n   /**\n    * Create an IPointReader of \"path\" with \u201ctimeFilter\u201d and \"valueFilter\". A synchronization with\n-   * the leader will be performed first to preserve strong consistency.\n-   * TODO-Cluster: also support weak consistency\n+   * the leader will be performed first to preserve strong consistency. TODO-Cluster: also support\n+   * weak consistency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31296b668df536ad86bb202fc9228ee5ec4f75f5"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4786, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}